

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Jan 06 08:37:21 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F1518 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   120                           PORTB equ 0Dh ;# 
   121  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   122                           PORTC equ 0Eh ;# 
   123  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   124                           PORTE equ 010h ;# 
   125  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   126                           PIR1 equ 011h ;# 
   127  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   128                           PIR2 equ 012h ;# 
   129  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   130                           TMR0 equ 015h ;# 
   131  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   132                           TMR1 equ 016h ;# 
   133  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   134                           TMR1L equ 016h ;# 
   135  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   136                           TMR1H equ 017h ;# 
   137  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   138                           T1CON equ 018h ;# 
   139  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   140                           T1GCON equ 019h ;# 
   141  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   142                           TMR2 equ 01Ah ;# 
   143  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   144                           PR2 equ 01Bh ;# 
   145  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   146                           T2CON equ 01Ch ;# 
   147  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   148                           TRISA equ 08Ch ;# 
   149  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   150                           TRISB equ 08Dh ;# 
   151  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   152                           TRISC equ 08Eh ;# 
   153  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   154                           TRISE equ 090h ;# 
   155  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   156                           PIE1 equ 091h ;# 
   157  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   158                           PIE2 equ 092h ;# 
   159  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   160                           OPTION_REG equ 095h ;# 
   161  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   162                           PCON equ 096h ;# 
   163  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   164                           WDTCON equ 097h ;# 
   165  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   166                           OSCCON equ 099h ;# 
   167  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   168                           OSCSTAT equ 09Ah ;# 
   169  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   170                           ADRES equ 09Bh ;# 
   171  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   172                           ADRESL equ 09Bh ;# 
   173  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   174                           ADRESH equ 09Ch ;# 
   175  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   176                           ADCON0 equ 09Dh ;# 
   177  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   178                           ADCON1 equ 09Eh ;# 
   179  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   180                           LATA equ 010Ch ;# 
   181  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   182                           LATB equ 010Dh ;# 
   183  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   184                           LATC equ 010Eh ;# 
   185  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   186                           BORCON equ 0116h ;# 
   187  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   188                           FVRCON equ 0117h ;# 
   189  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   190                           APFCON equ 011Dh ;# 
   191  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   192                           ANSELA equ 018Ch ;# 
   193  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   194                           ANSELB equ 018Dh ;# 
   195  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   196                           ANSELC equ 018Eh ;# 
   197  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   198                           PMADR equ 0191h ;# 
   199  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   200                           PMADRL equ 0191h ;# 
   201  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   202                           PMADRH equ 0192h ;# 
   203  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   204                           PMDAT equ 0193h ;# 
   205  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   206                           PMDATL equ 0193h ;# 
   207  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   208                           PMDATH equ 0194h ;# 
   209  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   210                           PMCON1 equ 0195h ;# 
   211  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   212                           PMCON2 equ 0196h ;# 
   213  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   214                           VREGCON equ 0197h ;# 
   215  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   216                           RCREG equ 0199h ;# 
   217  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   218                           TXREG equ 019Ah ;# 
   219  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   220                           SP1BRG equ 019Bh ;# 
   221  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   222                           SP1BRGL equ 019Bh ;# 
   223  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   224                           SPBRG equ 019Bh ;# 
   225  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   226                           SPBRGL equ 019Bh ;# 
   227  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   228                           SP1BRGH equ 019Ch ;# 
   229  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   230                           SPBRGH equ 019Ch ;# 
   231  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   232                           RCSTA equ 019Dh ;# 
   233  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   234                           TXSTA equ 019Eh ;# 
   235  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   236                           BAUDCON equ 019Fh ;# 
   237  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   238                           WPUB equ 020Dh ;# 
   239  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   240                           WPUE equ 0210h ;# 
   241  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   242                           SSPBUF equ 0211h ;# 
   243  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   244                           SSP1BUF equ 0211h ;# 
   245  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   246                           SSPADD equ 0212h ;# 
   247  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   248                           SSP1ADD equ 0212h ;# 
   249  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   250                           SSPMSK equ 0213h ;# 
   251  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   252                           SSP1MSK equ 0213h ;# 
   253  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   254                           SSPSTAT equ 0214h ;# 
   255  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   256                           SSP1STAT equ 0214h ;# 
   257  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   258                           SSPCON1 equ 0215h ;# 
   259  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   260                           SSPCON equ 0215h ;# 
   261  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   262                           SSP1CON1 equ 0215h ;# 
   263  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   264                           SSPCON2 equ 0216h ;# 
   265  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   266                           SSP1CON2 equ 0216h ;# 
   267  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   268                           SSPCON3 equ 0217h ;# 
   269  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   270                           SSP1CON3 equ 0217h ;# 
   271  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   272                           CCPR1 equ 0291h ;# 
   273  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   274                           CCPR1L equ 0291h ;# 
   275  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   276                           CCPR1H equ 0292h ;# 
   277  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   278                           CCP1CON equ 0293h ;# 
   279  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   280                           CCPR2 equ 0298h ;# 
   281  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   282                           CCPR2L equ 0298h ;# 
   283  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   284                           CCPR2H equ 0299h ;# 
   285  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   286                           CCP2CON equ 029Ah ;# 
   287  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   288                           IOCBP equ 0394h ;# 
   289  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   290                           IOCBN equ 0395h ;# 
   291  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   292                           IOCBF equ 0396h ;# 
   293  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   294                           STATUS_SHAD equ 0FE4h ;# 
   295  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   296                           WREG_SHAD equ 0FE5h ;# 
   297  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   298                           BSR_SHAD equ 0FE6h ;# 
   299  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   300                           PCLATH_SHAD equ 0FE7h ;# 
   301  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   302                           FSR0L_SHAD equ 0FE8h ;# 
   303  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   304                           FSR0H_SHAD equ 0FE9h ;# 
   305  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   306                           FSR1L_SHAD equ 0FEAh ;# 
   307  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   308                           FSR1H_SHAD equ 0FEBh ;# 
   309  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   310                           STKPTR equ 0FEDh ;# 
   311  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   312                           TOSL equ 0FEEh ;# 
   313  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   314                           TOSH equ 0FEFh ;# 
   315  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   316                           INDF0 equ 00h ;# 
   317  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   318                           INDF1 equ 01h ;# 
   319  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   320                           PCL equ 02h ;# 
   321  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   322                           STATUS equ 03h ;# 
   323  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   324                           FSR0L equ 04h ;# 
   325  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   326                           FSR0H equ 05h ;# 
   327  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   328                           FSR1L equ 06h ;# 
   329  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   330                           FSR1H equ 07h ;# 
   331  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   332                           BSR equ 08h ;# 
   333  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   334                           WREG equ 09h ;# 
   335  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   336                           PCLATH equ 0Ah ;# 
   337  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   338                           INTCON equ 0Bh ;# 
   339  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   340                           PORTA equ 0Ch ;# 
   341  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   342                           PORTB equ 0Dh ;# 
   343  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   344                           PORTC equ 0Eh ;# 
   345  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   346                           PORTE equ 010h ;# 
   347  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   348                           PIR1 equ 011h ;# 
   349  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   350                           PIR2 equ 012h ;# 
   351  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   352                           TMR0 equ 015h ;# 
   353  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   354                           TMR1 equ 016h ;# 
   355  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   356                           TMR1L equ 016h ;# 
   357  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   358                           TMR1H equ 017h ;# 
   359  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   360                           T1CON equ 018h ;# 
   361  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   362                           T1GCON equ 019h ;# 
   363  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   364                           TMR2 equ 01Ah ;# 
   365  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   366                           PR2 equ 01Bh ;# 
   367  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   368                           T2CON equ 01Ch ;# 
   369  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   370                           TRISA equ 08Ch ;# 
   371  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   372                           TRISB equ 08Dh ;# 
   373  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   374                           TRISC equ 08Eh ;# 
   375  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   376                           TRISE equ 090h ;# 
   377  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   378                           PIE1 equ 091h ;# 
   379  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   380                           PIE2 equ 092h ;# 
   381  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   382                           OPTION_REG equ 095h ;# 
   383  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   384                           PCON equ 096h ;# 
   385  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   386                           WDTCON equ 097h ;# 
   387  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   388                           OSCCON equ 099h ;# 
   389  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   390                           OSCSTAT equ 09Ah ;# 
   391  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   392                           ADRES equ 09Bh ;# 
   393  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   394                           ADRESL equ 09Bh ;# 
   395  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   396                           ADRESH equ 09Ch ;# 
   397  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   398                           ADCON0 equ 09Dh ;# 
   399  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   400                           ADCON1 equ 09Eh ;# 
   401  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   402                           LATA equ 010Ch ;# 
   403  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   404                           LATB equ 010Dh ;# 
   405  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   406                           LATC equ 010Eh ;# 
   407  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   408                           BORCON equ 0116h ;# 
   409  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   410                           FVRCON equ 0117h ;# 
   411  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   412                           APFCON equ 011Dh ;# 
   413  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   414                           ANSELA equ 018Ch ;# 
   415  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   416                           ANSELB equ 018Dh ;# 
   417  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   418                           ANSELC equ 018Eh ;# 
   419  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   420                           PMADR equ 0191h ;# 
   421  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   422                           PMADRL equ 0191h ;# 
   423  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   424                           PMADRH equ 0192h ;# 
   425  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   426                           PMDAT equ 0193h ;# 
   427  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   428                           PMDATL equ 0193h ;# 
   429  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   430                           PMDATH equ 0194h ;# 
   431  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   432                           PMCON1 equ 0195h ;# 
   433  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   434                           PMCON2 equ 0196h ;# 
   435  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   436                           VREGCON equ 0197h ;# 
   437  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   438                           RCREG equ 0199h ;# 
   439  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   440                           TXREG equ 019Ah ;# 
   441  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   442                           SP1BRG equ 019Bh ;# 
   443  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   444                           SP1BRGL equ 019Bh ;# 
   445  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   446                           SPBRG equ 019Bh ;# 
   447  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   448                           SPBRGL equ 019Bh ;# 
   449  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   450                           SP1BRGH equ 019Ch ;# 
   451  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   452                           SPBRGH equ 019Ch ;# 
   453  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   454                           RCSTA equ 019Dh ;# 
   455  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   456                           TXSTA equ 019Eh ;# 
   457  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   458                           BAUDCON equ 019Fh ;# 
   459  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   460                           WPUB equ 020Dh ;# 
   461  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   462                           WPUE equ 0210h ;# 
   463  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   464                           SSPBUF equ 0211h ;# 
   465  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   466                           SSP1BUF equ 0211h ;# 
   467  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   468                           SSPADD equ 0212h ;# 
   469  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   470                           SSP1ADD equ 0212h ;# 
   471  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   472                           SSPMSK equ 0213h ;# 
   473  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   474                           SSP1MSK equ 0213h ;# 
   475  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   476                           SSPSTAT equ 0214h ;# 
   477  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   478                           SSP1STAT equ 0214h ;# 
   479  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   480                           SSPCON1 equ 0215h ;# 
   481  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   482                           SSPCON equ 0215h ;# 
   483  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   484                           SSP1CON1 equ 0215h ;# 
   485  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   486                           SSPCON2 equ 0216h ;# 
   487  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   488                           SSP1CON2 equ 0216h ;# 
   489  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   490                           SSPCON3 equ 0217h ;# 
   491  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   492                           SSP1CON3 equ 0217h ;# 
   493  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   494                           CCPR1 equ 0291h ;# 
   495  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   496                           CCPR1L equ 0291h ;# 
   497  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   498                           CCPR1H equ 0292h ;# 
   499  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   500                           CCP1CON equ 0293h ;# 
   501  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   502                           CCPR2 equ 0298h ;# 
   503  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   504                           CCPR2L equ 0298h ;# 
   505  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   506                           CCPR2H equ 0299h ;# 
   507  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   508                           CCP2CON equ 029Ah ;# 
   509  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   510                           IOCBP equ 0394h ;# 
   511  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   512                           IOCBN equ 0395h ;# 
   513  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   514                           IOCBF equ 0396h ;# 
   515  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   516                           STATUS_SHAD equ 0FE4h ;# 
   517  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   518                           WREG_SHAD equ 0FE5h ;# 
   519  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   520                           BSR_SHAD equ 0FE6h ;# 
   521  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   522                           PCLATH_SHAD equ 0FE7h ;# 
   523  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   524                           FSR0L_SHAD equ 0FE8h ;# 
   525  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   526                           FSR0H_SHAD equ 0FE9h ;# 
   527  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   528                           FSR1L_SHAD equ 0FEAh ;# 
   529  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   530                           FSR1H_SHAD equ 0FEBh ;# 
   531  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   532                           STKPTR equ 0FEDh ;# 
   533  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   534                           TOSL equ 0FEEh ;# 
   535  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   536                           TOSH equ 0FEFh ;# 
   537  0FEF                     DABS 1,1568,48	;_wInterruptText
   538                           DABS 1,1440,80	;_wInterruptText
   539                           DABS 1,1320,72	;_wInterruptText
   540                           	FNCALL	_main,_WakeTemp
   541                           	FNCALL	_main,_clearDisplay
   542                           	FNCALL	_main,_initLCD
   543                           	FNCALL	_main,_lcdWriteText
   544                           	FNCALL	_main,_memset
   545                           	FNCALL	_main,_moveCursorToHome
   546                           	FNCALL	_main,_powerOnLcd
   547                           	FNCALL	_main,_setCursorOff
   548                           	FNCALL	_main,_setCursorPosition
   549                           	FNCALL	_main,_setNotBlinkingCursor
   550                           	FNCALL	_setNotBlinkingCursor,_writeInsChk
   551                           	FNCALL	_setCursorOff,_writeInsChk
   552                           	FNCALL	_powerOnLcd,_writeInsChk
   553                           	FNCALL	_moveCursorToHome,_writeInsChk
   554                           	FNCALL	_lcdWriteText,_writeTxtChk
   555                           	FNCALL	_writeTxtChk,_SetToSendDataToLCD
   556                           	FNCALL	_writeTxtChk,_setCursorPosition
   557                           	FNCALL	_writeTxtChk,_setData
   558                           	FNCALL	_writeTxtChk,_waitLCDBusy
   559                           	FNCALL	_setCursorPosition,_SetToSendDataToLCD
   560                           	FNCALL	_setCursorPosition,_setData
   561                           	FNCALL	_setCursorPosition,_waitLCDBusy
   562                           	FNCALL	_initLCD,_clearDisplay
   563                           	FNCALL	_initLCD,_setData
   564                           	FNCALL	_initLCD,_writeInsChk
   565                           	FNCALL	_clearDisplay,_writeInsChk
   566                           	FNCALL	_writeInsChk,_waitLCDBusy
   567                           	FNCALL	_writeInsChk,_writeInsNoChk
   568                           	FNCALL	_writeInsNoChk,_SetToSendDataToLCD
   569                           	FNCALL	_writeInsNoChk,_setData
   570                           	FNCALL	_waitLCDBusy,_SetToReadDataFromLCD
   571                           	FNROOT	_main
   572                           	FNCALL	_myint,_strcat
   573                           	FNCALL	_strcat,_strcpy
   574                           	FNCALL	_strcat,_strlen
   575                           	FNCALL	intlevel1,_myint
   576                           	global	intlevel1
   577                           	FNROOT	intlevel1
   578                           	global	main@F2177
   579                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   580                           global __pidataBANK0
   581                           __pidataBANK0:
   582  04BE                     	file	"161518_temp_main.c"
   583                           	line	137
   584                           
   585                           ;initializer for main@F2177
   586                           	retlw	02Fh
   587  04BE  342F               	retlw	low(0)
   588  04BF  3400               	retlw	02Dh
   589  04C0  342D               	retlw	low(0)
   590  04C1  3400               	retlw	06Ch
   591  04C2  346C               	retlw	low(0)
   592  04C3  3400               	retlw	07Ch
   593  04C4  347C               	retlw	low(0)
   594  04C5  3400               	global	_wI2CTxSendPos
   595                           	global	_wI2CTxBufferSize
   596                           	global	_mWritingPosition
   597                           	global	_mCursorDisplayShiftReg
   598                           	global	_mDisplayOnOffReg
   599                           	global	_wI2CTxBuffer
   600                           	global	_wInterruptText
   601                           	global	_PORTAbits
   602                           _PORTAbits	set	0xC
   603  000C                     	global	_PIR2bits
   604                           _PIR2bits	set	0x12
   605  0012                     	global	_PIR1bits
   606                           _PIR1bits	set	0x11
   607  0011                     	global	_PORTA
   608                           _PORTA	set	0xC
   609  000C                     	global	_INTCONbits
   610                           _INTCONbits	set	0xB
   611  000B                     	global	_TRISAbits
   612                           _TRISAbits	set	0x8C
   613  008C                     	global	_PIE2bits
   614                           _PIE2bits	set	0x92
   615  0092                     	global	_PIE1bits
   616                           _PIE1bits	set	0x91
   617  0091                     	global	_TRISC
   618                           _TRISC	set	0x8E
   619  008E                     	global	_TRISA
   620                           _TRISA	set	0x8C
   621  008C                     	global	_OSCCONbits
   622                           _OSCCONbits	set	0x99
   623  0099                     	global	_ANSELCbits
   624                           _ANSELCbits	set	0x18E
   625  018E                     	global	_ANSELA
   626                           _ANSELA	set	0x18C
   627  018C                     	global	_SSPBUF
   628                           _SSPBUF	set	0x211
   629  0211                     	global	_SSPSTATbits
   630                           _SSPSTATbits	set	0x214
   631  0214                     	global	_SSPADD
   632                           _SSPADD	set	0x212
   633  0212                     	global	_SSPCON1bits
   634                           _SSPCON1bits	set	0x215
   635  0215                     	global	_SSPCON2bits
   636                           _SSPCON2bits	set	0x216
   637  0216                     	global	_SSPCON3bits
   638                           _SSPCON3bits	set	0x217
   639  0217                     psect	stringtext1,class=STRCODE,delta=2,noexec
   640                           global __pstringtext1
   641                           __pstringtext1:
   642  043C                     	
   643                           STR_1:	
   644  043C                     	retlw	84	;'T'
   645  043C  3454               	retlw	101	;'e'
   646  043D  3465               	retlw	109	;'m'
   647  043E  346D               	retlw	112	;'p'
   648  043F  3470               	retlw	32	;' '
   649  0440  3420               	retlw	67	;'C'
   650  0441  3443               	retlw	111	;'o'
   651  0442  346F               	retlw	109	;'m'
   652  0443  346D               	retlw	109	;'m'
   653  0444  346D               	retlw	117	;'u'
   654  0445  3475               	retlw	110	;'n'
   655  0446  346E               	retlw	105	;'i'
   656  0447  3469               	retlw	99	;'c'
   657  0448  3463               	retlw	97	;'a'
   658  0449  3461               	retlw	116	;'t'
   659  044A  3474               	retlw	105	;'i'
   660  044B  3469               	retlw	111	;'o'
   661  044C  346F               	retlw	110	;'n'
   662  044D  346E               	retlw	32	;' '
   663  044E  3420               	retlw	116	;'t'
   664  044F  3474               	retlw	101	;'e'
   665  0450  3465               	retlw	115	;'s'
   666  0451  3473               	retlw	116	;'t'
   667  0452  3474               	retlw	32	;' '
   668  0453  3420               	retlw	58	;':'
   669  0454  343A               	retlw	0
   670  0455  3400               psect	stringtext2,class=STRCODE,delta=2,noexec
   671                           global __pstringtext2
   672                           __pstringtext2:
   673  04CE                     	
   674                           STR_2:	
   675  04CE                     	retlw	44	;','
   676  04CE  342C               	retlw	66	;'B'
   677  04CF  3442               	retlw	67	;'C'
   678  04D0  3443               	retlw	76	;'L'
   679  04D1  344C               	retlw	73	;'I'
   680  04D2  3449               	retlw	70	;'F'
   681  04D3  3446               	retlw	0
   682  04D4  3400               psect	stringtext3,class=STRCODE,delta=2,noexec
   683                           global __pstringtext3
   684                           __pstringtext3:
   685  0000                     ; #config settings
   686                           global __CFG_FOSC$INTOSC
   687                           __CFG_FOSC$INTOSC equ 0x0
   688  0000                     global __CFG_WDTE$OFF
   689                           __CFG_WDTE$OFF equ 0x0
   690  0000                     global __CFG_PWRTE$ON
   691                           __CFG_PWRTE$ON equ 0x0
   692  0000                     global __CFG_MCLRE$OFF
   693                           __CFG_MCLRE$OFF equ 0x0
   694  0000                     global __CFG_CP$OFF
   695                           __CFG_CP$OFF equ 0x0
   696  0000                     global __CFG_BOREN$ON
   697                           __CFG_BOREN$ON equ 0x0
   698  0000                     global __CFG_CLKOUTEN$ON
   699                           __CFG_CLKOUTEN$ON equ 0x0
   700  0000                     global __CFG_IESO$OFF
   701                           __CFG_IESO$OFF equ 0x0
   702  0000                     global __CFG_FCMEN$OFF
   703                           __CFG_FCMEN$OFF equ 0x0
   704  0000                     global __CFG_WRT$OFF
   705                           __CFG_WRT$OFF equ 0x0
   706  0000                     global __CFG_VCAPEN$OFF
   707                           __CFG_VCAPEN$OFF equ 0x0
   708  0000                     global __CFG_STVREN$OFF
   709                           __CFG_STVREN$OFF equ 0x0
   710  0000                     global __CFG_BORV$LO
   711                           __CFG_BORV$LO equ 0x0
   712  0000                     global __CFG_LPBOR$OFF
   713                           __CFG_LPBOR$OFF equ 0x0
   714  0000                     global __CFG_LVP$OFF
   715                           __CFG_LVP$OFF equ 0x0
   716  0000                     	file	"C:\Users\dell\AppData\Local\Temp\s69g."
   717                           	line	#
   718                           psect cinit,class=CODE,delta=2
   719                           global start_initialization
   720                           start_initialization:
   721  007E                     
   722                           global __initialization
   723                           __initialization:
   724  007E                     DABS 1,9000,0,_wInterruptText	;BIGRAM
   725                           psect	bssBANK0,class=BANK0,space=1,noexec
   726                           global __pbssBANK0
   727                           __pbssBANK0:
   728  0020                     _wHexTemp:
   729  0020                            ds      5
   730  0020                     
   731                           _wI2CTxSendPos:
   732  0025                            ds      1
   733  0025                     
   734                           _wI2CTxBufferSize:
   735  0026                            ds      1
   736  0026                     
   737                           _mWritingPosition:
   738  0027                            ds      1
   739  0027                     
   740                           _mCursorDisplayShiftReg:
   741  0028                            ds      1
   742  0028                     
   743                           _mDisplayOnOffReg:
   744  0029                            ds      1
   745  0029                     
   746                           _wI2CTxBuffer:
   747  002A                            ds      20
   748  002A                     
   749                           psect	dataBANK0,class=BANK0,space=1,noexec
   750                           global __pdataBANK0
   751                           __pdataBANK0:
   752  0059                     	file	"161518_temp_main.c"
   753                           	line	137
   754                           main@F2177:
   755  0059                            ds      8
   756  0059                     
   757                           	file	"C:\Users\dell\AppData\Local\Temp\s69g."
   758                           	line	#
   759                           ; Initialize objects allocated to BANK0
   760                           	global __pidataBANK0,__pdataBANK0
   761                           psect cinit,class=CODE,delta=2,merge=1
   762                           	movlw low(__pidataBANK0)
   763  007E  30BE               	movwf fsr0l
   764  007F  0084               	movlw high(__pidataBANK0)|80h
   765  0080  3084               	movwf fsr0h
   766  0081  0085               	moviw fsr0++
   767  0082  0012               	movwf (__pdataBANK0+0)&07Fh
   768  0083  00D9               	moviw fsr0++
   769  0084  0012               	movwf (__pdataBANK0+1)&07Fh
   770  0085  00DA               	moviw fsr0++
   771  0086  0012               	movwf (__pdataBANK0+2)&07Fh
   772  0087  00DB               	moviw fsr0++
   773  0088  0012               	movwf (__pdataBANK0+3)&07Fh
   774  0089  00DC               	moviw fsr0++
   775  008A  0012               	movwf (__pdataBANK0+4)&07Fh
   776  008B  00DD               	moviw fsr0++
   777  008C  0012               	movwf (__pdataBANK0+5)&07Fh
   778  008D  00DE               	moviw fsr0++
   779  008E  0012               	movwf (__pdataBANK0+6)&07Fh
   780  008F  00DF               	moviw fsr0++
   781  0090  0012               	movwf (__pdataBANK0+7)&07Fh
   782  0091  00E0               	line	#
   783                           psect clrtext,class=CODE,delta=2
   784                           global clear_ram0
   785                           ;	Called with FSR0 containing the base address, and
   786                           ;	btemp/btemp+1 has the size to clear
   787                           clear_ram0:
   788  0486                     	clrwdt			;clear the watchdog before getting into this loop
   789  0486  0064               clrloop0:
   790  0487                     	clrf	indf0		;clear RAM location pointed to by FSR
   791  0487  0180               	addfsr	0,1
   792  0488  3101               	movlw	1
   793  0489  3001               	subwf	btemp,f
   794  048A  02FE               	movlw	0
   795  048B  3000               	subwfb btemp+1,f
   796  048C  3BFF               	movf btemp+1,w
   797  048D  087F               	iorwf btemp,w
   798  048E  047E               	skipz
   799  048F  1D03               	goto clrloop0	;have we reached the end yet?
   800  0490  2C87               	retlw	0		;all done for this memory range, return
   801  0491  3400               ; Clear objects allocated to BIGRAM
   802                           psect cinit,class=CODE,delta=2,merge=1
   803                           	global __pbssBIGRAM
   804                           	movlw	low(__pbssBIGRAM)
   805  0092  3028               	movwf	fsr0l
   806  0093  0084               	movlw	high(__pbssBIGRAM)
   807  0094  3023               	movwf	fsr0h
   808  0095  0085               	movlw	low(0C8h)
   809  0096  30C8               	movwf	btemp
   810  0097  00FE               	movlw	high(0C8h)
   811  0098  3000               	movwf	btemp+1
   812  0099  00FF               	fcall	clear_ram0
   813  009A  3184  2486  3180   ; Clear objects allocated to BANK0
   814                           psect cinit,class=CODE,delta=2,merge=1
   815                           	global __pbssBANK0
   816                           	movlw	low(__pbssBANK0)
   817  009D  3020               	movwf	fsr0l
   818  009E  0084               	movlw	high(__pbssBANK0)
   819  009F  3000               	movwf	fsr0h
   820  00A0  0085               	movlw	low(01Eh)
   821  00A1  301E               	movwf	btemp
   822  00A2  00FE               	movlw	high(01Eh)
   823  00A3  3000               	movwf	btemp+1
   824  00A4  00FF               	fcall	clear_ram0
   825  00A5  3184  2486  3180   psect cinit,class=CODE,delta=2,merge=1
   826                           global end_of_initialization,__end_of__initialization
   827                           
   828                           ;End of C runtime variable initialization code
   829                           
   830                           end_of_initialization:
   831  00A8                     __end_of__initialization:
   832  00A8                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
   833  00A8  107E               movlb 0
   834  00A9  0020               ljmp _main	;jump to C main() function
   835  00AA  3180  28AC         psect	cstackBANK1,class=BANK1,space=1,noexec
   836                           global __pcstackBANK1
   837                           __pcstackBANK1:
   838  00A0                     	global	main@wConv
   839                           main@wConv:	; 8 bytes @ 0x0
   840  00A0                     	ds	8
   841  00A0                     	global	main@wTemp
   842                           main@wTemp:	; 2 bytes @ 0x8
   843  00A8                     	ds	2
   844  00A8                     	global	main@wCounter
   845                           main@wCounter:	; 2 bytes @ 0xA
   846  00AA                     	ds	2
   847  00AA                     psect	cstackCOMMON,class=COMMON,space=1,noexec
   848                           global __pcstackCOMMON
   849                           __pcstackCOMMON:
   850  0070                     ?_initLCD:	; 1 bytes @ 0x0
   851  0070                     ?_clearDisplay:	; 1 bytes @ 0x0
   852  0070                     ?_powerOnLcd:	; 1 bytes @ 0x0
   853  0070                     ?_setCursorOff:	; 1 bytes @ 0x0
   854  0070                     ?_moveCursorToHome:	; 1 bytes @ 0x0
   855  0070                     ?_setNotBlinkingCursor:	; 1 bytes @ 0x0
   856  0070                     ?_setCursorPosition:	; 1 bytes @ 0x0
   857  0070                     ?_setData:	; 1 bytes @ 0x0
   858  0070                     ?_writeInsChk:	; 1 bytes @ 0x0
   859  0070                     ?_writeTxtChk:	; 1 bytes @ 0x0
   860  0070                     ?_SetToSendDataToLCD:	; 1 bytes @ 0x0
   861  0070                     ?_waitLCDBusy:	; 1 bytes @ 0x0
   862  0070                     ?_writeInsNoChk:	; 1 bytes @ 0x0
   863  0070                     ?_WakeTemp:	; 1 bytes @ 0x0
   864  0070                     ?_main:	; 1 bytes @ 0x0
   865  0070                     ?_myint:	; 1 bytes @ 0x0
   866  0070                     ?_SetToReadDataFromLCD:	; 1 bytes @ 0x0
   867  0070                     	global	?_strlen
   868                           ?_strlen:	; 2 bytes @ 0x0
   869  0070                     	global	strlen@s
   870                           strlen@s:	; 2 bytes @ 0x0
   871  0070                     	ds	2
   872  0070                     ??_strlen:	; 1 bytes @ 0x2
   873  0072                     	ds	2
   874  0072                     	global	strlen@a
   875                           strlen@a:	; 2 bytes @ 0x4
   876  0074                     	ds	2
   877  0074                     ?_strcpy:	; 2 bytes @ 0x6
   878  0076                     	global	strcpy@dest
   879                           strcpy@dest:	; 2 bytes @ 0x6
   880  0076                     	ds	2
   881  0076                     	global	strcpy@src
   882                           strcpy@src:	; 2 bytes @ 0x8
   883  0078                     	ds	2
   884  0078                     ??_strcpy:	; 1 bytes @ 0xA
   885  007A                     	ds	4
   886  007A                     ??_strcat:	; 1 bytes @ 0xE
   887  007E                     psect	cstackBANK0,class=BANK0,space=1,noexec
   888                           global __pcstackBANK0
   889                           __pcstackBANK0:
   890  003E                     	global	strcpy@s
   891                           strcpy@s:	; 2 bytes @ 0x0
   892  003E                     	ds	2
   893  003E                     	global	strcpy@d
   894                           strcpy@d:	; 2 bytes @ 0x2
   895  0040                     	ds	2
   896  0040                     ?_strcat:	; 2 bytes @ 0x4
   897  0042                     	global	strcat@dest
   898                           strcat@dest:	; 2 bytes @ 0x4
   899  0042                     	ds	2
   900  0042                     	global	strcat@src
   901                           strcat@src:	; 2 bytes @ 0x6
   902  0044                     	ds	2
   903  0044                     ??_myint:	; 1 bytes @ 0x8
   904  0046                     	ds	1
   905  0046                     ??_setData:	; 1 bytes @ 0x9
   906  0047                     ??_SetToSendDataToLCD:	; 1 bytes @ 0x9
   907  0047                     ??_waitLCDBusy:	; 1 bytes @ 0x9
   908  0047                     ??_WakeTemp:	; 1 bytes @ 0x9
   909  0047                     ??_SetToReadDataFromLCD:	; 1 bytes @ 0x9
   910  0047                     ?_memset:	; 2 bytes @ 0x9
   911  0047                     	global	memset@dest
   912                           memset@dest:	; 2 bytes @ 0x9
   913  0047                     	ds	2
   914  0047                     	global	setData@iValue
   915                           setData@iValue:	; 1 bytes @ 0xB
   916  0049                     	global	memset@c
   917                           memset@c:	; 2 bytes @ 0xB
   918  0049                     	ds	1
   919  0049                     ??_writeInsNoChk:	; 1 bytes @ 0xC
   920  004A                     	global	waitLCDBusy@busyFlag
   921                           waitLCDBusy@busyFlag:	; 2 bytes @ 0xC
   922  004A                     	ds	1
   923  004A                     	global	writeInsNoChk@iOpCode
   924                           writeInsNoChk@iOpCode:	; 1 bytes @ 0xD
   925  004B                     	global	memset@n
   926                           memset@n:	; 2 bytes @ 0xD
   927  004B                     	ds	1
   928  004B                     ??_setCursorPosition:	; 1 bytes @ 0xE
   929  004C                     ??_writeInsChk:	; 1 bytes @ 0xE
   930  004C                     	global	writeInsChk@iOpCode
   931                           writeInsChk@iOpCode:	; 1 bytes @ 0xE
   932  004C                     	ds	1
   933  004C                     ??_memset:	; 1 bytes @ 0xF
   934  004D                     ??_initLCD:	; 1 bytes @ 0xF
   935  004D                     ??_clearDisplay:	; 1 bytes @ 0xF
   936  004D                     ??_powerOnLcd:	; 1 bytes @ 0xF
   937  004D                     ??_setCursorOff:	; 1 bytes @ 0xF
   938  004D                     ??_moveCursorToHome:	; 1 bytes @ 0xF
   939  004D                     ??_setNotBlinkingCursor:	; 1 bytes @ 0xF
   940  004D                     	global	setCursorPosition@iPosition
   941                           setCursorPosition@iPosition:	; 1 bytes @ 0xF
   942  004D                     	ds	1
   943  004D                     ??_writeTxtChk:	; 1 bytes @ 0x10
   944  004E                     	ds	2
   945  004E                     	global	writeTxtChk@iOpCode
   946                           writeTxtChk@iOpCode:	; 1 bytes @ 0x12
   947  0050                     	ds	1
   948  0050                     ?_lcdWriteText:	; 1 bytes @ 0x13
   949  0051                     	global	lcdWriteText@iText
   950                           lcdWriteText@iText:	; 2 bytes @ 0x13
   951  0051                     	global	memset@k
   952                           memset@k:	; 2 bytes @ 0x13
   953  0051                     	ds	2
   954  0051                     ??_lcdWriteText:	; 1 bytes @ 0x15
   955  0053                     	global	memset@s
   956                           memset@s:	; 2 bytes @ 0x15
   957  0053                     	ds	3
   958  0053                     	global	lcdWriteText@wCharReadingPos
   959                           lcdWriteText@wCharReadingPos:	; 1 bytes @ 0x18
   960  0056                     	ds	1
   961  0056                     ??_main:	; 1 bytes @ 0x19
   962  0057                     	ds	2
   963  0057                     ;!
   964                           ;!Data Sizes:
   965                           ;!    Strings     33
   966                           ;!    Constant    0
   967                           ;!    Data        8
   968                           ;!    BSS         30
   969                           ;!    Persistent  0
   970                           ;!    Stack       0
   971                           ;!
   972                           ;!Auto Spaces:
   973                           ;!    Space          Size  Autos    Used
   974                           ;!    COMMON           14     14      14
   975                           ;!    BANK0            80     27      65
   976                           ;!    BANK1            80     12      12
   977                           ;!    BANK2            80      0       0
   978                           ;!    BANK3            80      0       0
   979                           ;!    BANK4            80      0       0
   980                           ;!    BANK5            80      0       0
   981                           ;!    BANK6            80      0       0
   982                           ;!    BANK7            80      0       0
   983                           ;!    BANK8            80      0       0
   984                           ;!    BANK9            80      0       0
   985                           ;!    BANK10            8      0       0
   986                           ;!    BANK11            0      0       0
   987                           ;!    BANK12            0      0       0
   988                           
   989                           ;!
   990                           ;!Pointer List with Targets:
   991                           ;!
   992                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 200
   993                           ;!		 -> wInterruptText(BIGRAM[200]), 
   994                           ;!
   995                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 200
   996                           ;!		 -> wInterruptText(BIGRAM[200]), 
   997                           ;!
   998                           ;!    strcpy@dest	PTR unsigned char  size(2) Largest target is 200
   999                           ;!		 -> wInterruptText(BIGRAM[200]), 
  1000                           ;!
  1001                           ;!    strcpy@d	PTR unsigned char  size(2) Largest target is 200
  1002                           ;!		 -> wInterruptText(BIGRAM[200]), 
  1003                           ;!
  1004                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 7
  1005                           ;!		 -> STR_2(CODE[7]), 
  1006                           ;!
  1007                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 7
  1008                           ;!		 -> STR_2(CODE[7]), 
  1009                           ;!
  1010                           ;!    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
  1011                           ;!		 -> wInterruptText(BIGRAM[200]), 
  1012                           ;!
  1013                           ;!    strcat@src	PTR const unsigned char  size(2) Largest target is 7
  1014                           ;!		 -> STR_2(CODE[7]), 
  1015                           ;!
  1016                           ;!    strcat@dest	PTR unsigned char  size(2) Largest target is 200
  1017                           ;!		 -> wInterruptText(BIGRAM[200]), 
  1018                           ;!
  1019                           ;!    memset@dest	PTR void  size(2) Largest target is 200
  1020                           ;!		 -> wInterruptText(BIGRAM[200]), wI2CTxBuffer(BANK0[20]), 
  1021                           ;!
  1022                           ;!    memset@s	PTR unsigned char  size(2) Largest target is 200
  1023                           ;!		 -> wInterruptText(BIGRAM[200]), wI2CTxBuffer(BANK0[20]), 
  1024                           ;!
  1025                           ;!    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 26
  1026                           ;!		 -> main@wConv(BANK1[8]), STR_1(CODE[26]), 
  1027                           ;!
  1028                           ;!    sp__strcat	PTR unsigned char  size(2) Largest target is 200
  1029                           ;!		 -> wInterruptText(BIGRAM[200]), 
  1030                           ;!
  1031                           ;!    sp__memset	PTR void  size(2) Largest target is 200
  1032                           ;!		 -> wInterruptText(BIGRAM[200]), wI2CTxBuffer(BANK0[20]), 
  1033                           ;!
  1034                           
  1035                           
  1036                           ;!
  1037                           ;!Critical Paths under _main in COMMON
  1038                           ;!
  1039                           ;!    None.
  1040                           ;!
  1041                           ;!Critical Paths under _myint in COMMON
  1042                           ;!
  1043                           ;!    _strcat->_strcpy
  1044                           ;!    _strcpy->_strlen
  1045                           ;!
  1046                           ;!Critical Paths under _main in BANK0
  1047                           ;!
  1048                           ;!    _main->_lcdWriteText
  1049                           ;!    _setNotBlinkingCursor->_writeInsChk
  1050                           ;!    _setCursorOff->_writeInsChk
  1051                           ;!    _powerOnLcd->_writeInsChk
  1052                           ;!    _moveCursorToHome->_writeInsChk
  1053                           ;!    _lcdWriteText->_writeTxtChk
  1054                           ;!    _writeTxtChk->_setCursorPosition
  1055                           ;!    _setCursorPosition->_waitLCDBusy
  1056                           ;!    _initLCD->_writeInsChk
  1057                           ;!    _clearDisplay->_writeInsChk
  1058                           ;!    _writeInsChk->_waitLCDBusy
  1059                           ;!    _writeInsChk->_writeInsNoChk
  1060                           ;!    _writeInsNoChk->_setData
  1061                           ;!
  1062                           ;!Critical Paths under _myint in BANK0
  1063                           ;!
  1064                           ;!    _myint->_strcat
  1065                           ;!    _strcat->_strcpy
  1066                           ;!
  1067                           ;!Critical Paths under _main in BANK1
  1068                           ;!
  1069                           ;!    None.
  1070                           ;!
  1071                           ;!Critical Paths under _myint in BANK1
  1072                           ;!
  1073                           ;!    None.
  1074                           ;!
  1075                           ;!Critical Paths under _main in BANK2
  1076                           ;!
  1077                           ;!    None.
  1078                           ;!
  1079                           ;!Critical Paths under _myint in BANK2
  1080                           ;!
  1081                           ;!    None.
  1082                           ;!
  1083                           ;!Critical Paths under _main in BANK3
  1084                           ;!
  1085                           ;!    None.
  1086                           ;!
  1087                           ;!Critical Paths under _myint in BANK3
  1088                           ;!
  1089                           ;!    None.
  1090                           ;!
  1091                           ;!Critical Paths under _main in BANK4
  1092                           ;!
  1093                           ;!    None.
  1094                           ;!
  1095                           ;!Critical Paths under _myint in BANK4
  1096                           ;!
  1097                           ;!    None.
  1098                           ;!
  1099                           ;!Critical Paths under _main in BANK5
  1100                           ;!
  1101                           ;!    None.
  1102                           ;!
  1103                           ;!Critical Paths under _myint in BANK5
  1104                           ;!
  1105                           ;!    None.
  1106                           ;!
  1107                           ;!Critical Paths under _main in BANK6
  1108                           ;!
  1109                           ;!    None.
  1110                           ;!
  1111                           ;!Critical Paths under _myint in BANK6
  1112                           ;!
  1113                           ;!    None.
  1114                           ;!
  1115                           ;!Critical Paths under _main in BANK7
  1116                           ;!
  1117                           ;!    None.
  1118                           ;!
  1119                           ;!Critical Paths under _myint in BANK7
  1120                           ;!
  1121                           ;!    None.
  1122                           ;!
  1123                           ;!Critical Paths under _main in BANK8
  1124                           ;!
  1125                           ;!    None.
  1126                           ;!
  1127                           ;!Critical Paths under _myint in BANK8
  1128                           ;!
  1129                           ;!    None.
  1130                           ;!
  1131                           ;!Critical Paths under _main in BANK9
  1132                           ;!
  1133                           ;!    None.
  1134                           ;!
  1135                           ;!Critical Paths under _myint in BANK9
  1136                           ;!
  1137                           ;!    None.
  1138                           ;!
  1139                           ;!Critical Paths under _main in BANK10
  1140                           ;!
  1141                           ;!    None.
  1142                           ;!
  1143                           ;!Critical Paths under _myint in BANK10
  1144                           ;!
  1145                           ;!    None.
  1146                           ;!
  1147                           ;!Critical Paths under _main in BANK11
  1148                           ;!
  1149                           ;!    None.
  1150                           ;!
  1151                           ;!Critical Paths under _myint in BANK11
  1152                           ;!
  1153                           ;!    None.
  1154                           ;!
  1155                           ;!Critical Paths under _main in BANK12
  1156                           ;!
  1157                           ;!    None.
  1158                           ;!
  1159                           ;!Critical Paths under _myint in BANK12
  1160                           ;!
  1161                           ;!    None.
  1162                           
  1163 ;;
  1164 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1165 ;;
  1166                           
  1167                           ;!
  1168                           ;!Call Graph Tables:
  1169                           ;!
  1170                           ;! ---------------------------------------------------------------------------------
  1171                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1172                           ;! ---------------------------------------------------------------------------------
  1173                           ;! (0) _main                                                14    14      0    4645
  1174                           ;!                                             25 BANK0      2     2      0
  1175                           ;!                                              0 BANK1     12    12      0
  1176                           ;!                           _WakeTemp
  1177                           ;!                       _clearDisplay
  1178                           ;!                            _initLCD
  1179                           ;!                       _lcdWriteText
  1180                           ;!                             _memset
  1181                           ;!                   _moveCursorToHome
  1182                           ;!                         _powerOnLcd
  1183                           ;!                       _setCursorOff
  1184                           ;!                  _setCursorPosition
  1185                           ;!               _setNotBlinkingCursor
  1186                           ;! ---------------------------------------------------------------------------------
  1187                           ;! (1) _setNotBlinkingCursor                                 1     1      0     254
  1188                           ;!                                             15 BANK0      1     1      0
  1189                           ;!                        _writeInsChk
  1190                           ;! ---------------------------------------------------------------------------------
  1191                           ;! (1) _setCursorOff                                         1     1      0     254
  1192                           ;!                                             15 BANK0      1     1      0
  1193                           ;!                        _writeInsChk
  1194                           ;! ---------------------------------------------------------------------------------
  1195                           ;! (1) _powerOnLcd                                           1     1      0     254
  1196                           ;!                                             15 BANK0      1     1      0
  1197                           ;!                        _writeInsChk
  1198                           ;! ---------------------------------------------------------------------------------
  1199                           ;! (1) _moveCursorToHome                                     0     0      0     254
  1200                           ;!                        _writeInsChk
  1201                           ;! ---------------------------------------------------------------------------------
  1202                           ;! (1) _memset                                              14     8      6    1557
  1203                           ;!                                              9 BANK0     14     8      6
  1204                           ;! ---------------------------------------------------------------------------------
  1205                           ;! (1) _lcdWriteText                                         6     4      2     787
  1206                           ;!                                             19 BANK0      6     4      2
  1207                           ;!                        _writeTxtChk
  1208                           ;! ---------------------------------------------------------------------------------
  1209                           ;! (2) _writeTxtChk                                          3     3      0     477
  1210                           ;!                                             16 BANK0      3     3      0
  1211                           ;!                 _SetToSendDataToLCD
  1212                           ;!                  _setCursorPosition
  1213                           ;!                            _setData
  1214                           ;!                        _waitLCDBusy
  1215                           ;! ---------------------------------------------------------------------------------
  1216                           ;! (1) _setCursorPosition                                    2     2      0     254
  1217                           ;!                                             14 BANK0      2     2      0
  1218                           ;!                 _SetToSendDataToLCD
  1219                           ;!                            _setData
  1220                           ;!                        _waitLCDBusy
  1221                           ;! ---------------------------------------------------------------------------------
  1222                           ;! (1) _initLCD                                              1     1      0     632
  1223                           ;!                                             15 BANK0      1     1      0
  1224                           ;!                       _clearDisplay
  1225                           ;!                            _setData
  1226                           ;!                        _writeInsChk
  1227                           ;! ---------------------------------------------------------------------------------
  1228                           ;! (2) _clearDisplay                                         0     0      0     254
  1229                           ;!                        _writeInsChk
  1230                           ;! ---------------------------------------------------------------------------------
  1231                           ;! (2) _writeInsChk                                          1     1      0     254
  1232                           ;!                                             14 BANK0      1     1      0
  1233                           ;!                        _waitLCDBusy
  1234                           ;!                      _writeInsNoChk
  1235                           ;! ---------------------------------------------------------------------------------
  1236                           ;! (3) _writeInsNoChk                                        2     2      0     186
  1237                           ;!                                             12 BANK0      2     2      0
  1238                           ;!                 _SetToSendDataToLCD
  1239                           ;!                            _setData
  1240                           ;! ---------------------------------------------------------------------------------
  1241                           ;! (4) _setData                                              3     3      0     124
  1242                           ;!                                              9 BANK0      3     3      0
  1243                           ;! ---------------------------------------------------------------------------------
  1244                           ;! (4) _SetToSendDataToLCD                                   0     0      0       0
  1245                           ;! ---------------------------------------------------------------------------------
  1246                           ;! (3) _waitLCDBusy                                          5     5      0      37
  1247                           ;!                                              9 BANK0      5     5      0
  1248                           ;!               _SetToReadDataFromLCD
  1249                           ;! ---------------------------------------------------------------------------------
  1250                           ;! (4) _SetToReadDataFromLCD                                 0     0      0       0
  1251                           ;! ---------------------------------------------------------------------------------
  1252                           ;! (1) _WakeTemp                                             1     1      0       0
  1253                           ;!                                              9 BANK0      1     1      0
  1254                           ;! ---------------------------------------------------------------------------------
  1255                           ;! Estimated maximum stack depth 4
  1256                           ;! ---------------------------------------------------------------------------------
  1257                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1258                           ;! ---------------------------------------------------------------------------------
  1259                           ;! (6) _myint                                                1     1      0     638
  1260                           ;!                                              8 BANK0      1     1      0
  1261                           ;!                             _strcat
  1262                           ;! ---------------------------------------------------------------------------------
  1263                           ;! (7) _strcat                                               4     0      4     638
  1264                           ;!                                              4 BANK0      4     0      4
  1265                           ;!                             _strcpy
  1266                           ;!                             _strlen
  1267                           ;! ---------------------------------------------------------------------------------
  1268                           ;! (8) _strlen                                               6     4      2     166
  1269                           ;!                                              0 COMMON     6     4      2
  1270                           ;! ---------------------------------------------------------------------------------
  1271                           ;! (8) _strcpy                                              12     8      4     248
  1272                           ;!                                              6 COMMON     8     4      4
  1273                           ;!                                              0 BANK0      4     4      0
  1274                           ;!                             _strlen (ARG)
  1275                           ;! ---------------------------------------------------------------------------------
  1276                           ;! Estimated maximum stack depth 8
  1277                           ;! ---------------------------------------------------------------------------------
  1278                           ;!
  1279                           ;! Call Graph Graphs:
  1280                           ;!
  1281                           ;! _main (ROOT)
  1282                           ;!   _WakeTemp
  1283                           ;!   _clearDisplay
  1284                           ;!     _writeInsChk
  1285                           ;!       _waitLCDBusy
  1286                           ;!         _SetToReadDataFromLCD
  1287                           ;!       _writeInsNoChk
  1288                           ;!         _SetToSendDataToLCD
  1289                           ;!         _setData
  1290                           ;!   _initLCD
  1291                           ;!     _clearDisplay
  1292                           ;!       _writeInsChk
  1293                           ;!         _waitLCDBusy
  1294                           ;!           _SetToReadDataFromLCD
  1295                           ;!         _writeInsNoChk
  1296                           ;!           _SetToSendDataToLCD
  1297                           ;!           _setData
  1298                           ;!     _setData
  1299                           ;!     _writeInsChk
  1300                           ;!       _waitLCDBusy
  1301                           ;!         _SetToReadDataFromLCD
  1302                           ;!       _writeInsNoChk
  1303                           ;!         _SetToSendDataToLCD
  1304                           ;!         _setData
  1305                           ;!   _lcdWriteText
  1306                           ;!     _writeTxtChk
  1307                           ;!       _SetToSendDataToLCD
  1308                           ;!       _setCursorPosition
  1309                           ;!         _SetToSendDataToLCD
  1310                           ;!         _setData
  1311                           ;!         _waitLCDBusy
  1312                           ;!           _SetToReadDataFromLCD
  1313                           ;!       _setData
  1314                           ;!       _waitLCDBusy
  1315                           ;!         _SetToReadDataFromLCD
  1316                           ;!   _memset
  1317                           ;!   _moveCursorToHome
  1318                           ;!     _writeInsChk
  1319                           ;!       _waitLCDBusy
  1320                           ;!         _SetToReadDataFromLCD
  1321                           ;!       _writeInsNoChk
  1322                           ;!         _SetToSendDataToLCD
  1323                           ;!         _setData
  1324                           ;!   _powerOnLcd
  1325                           ;!     _writeInsChk
  1326                           ;!       _waitLCDBusy
  1327                           ;!         _SetToReadDataFromLCD
  1328                           ;!       _writeInsNoChk
  1329                           ;!         _SetToSendDataToLCD
  1330                           ;!         _setData
  1331                           ;!   _setCursorOff
  1332                           ;!     _writeInsChk
  1333                           ;!       _waitLCDBusy
  1334                           ;!         _SetToReadDataFromLCD
  1335                           ;!       _writeInsNoChk
  1336                           ;!         _SetToSendDataToLCD
  1337                           ;!         _setData
  1338                           ;!   _setCursorPosition
  1339                           ;!     _SetToSendDataToLCD
  1340                           ;!     _setData
  1341                           ;!     _waitLCDBusy
  1342                           ;!       _SetToReadDataFromLCD
  1343                           ;!   _setNotBlinkingCursor
  1344                           ;!     _writeInsChk
  1345                           ;!       _waitLCDBusy
  1346                           ;!         _SetToReadDataFromLCD
  1347                           ;!       _writeInsNoChk
  1348                           ;!         _SetToSendDataToLCD
  1349                           ;!         _setData
  1350                           ;!
  1351                           ;! _myint (ROOT)
  1352                           ;!   _strcat
  1353                           ;!     _strcpy
  1354                           ;!       _strlen (ARG)
  1355                           ;!     _strlen
  1356                           ;!
  1357                           
  1358                           ;! Address spaces:
  1359                           
  1360                           ;!Name               Size   Autos  Total    Cost      Usage
  1361                           ;!BIGRAM             3F0      0       0       0        0.0%
  1362                           ;!NULL                 0      0       0       0        0.0%
  1363                           ;!CODE                 0      0       0       0        0.0%
  1364                           ;!BITCOMMON            E      0       0       1        0.0%
  1365                           ;!BITSFR0              0      0       0       1        0.0%
  1366                           ;!SFR0                 0      0       0       1        0.0%
  1367                           ;!COMMON               E      E       E       2      100.0%
  1368                           ;!BITSFR1              0      0       0       2        0.0%
  1369                           ;!SFR1                 0      0       0       2        0.0%
  1370                           ;!BITSFR2              0      0       0       3        0.0%
  1371                           ;!SFR2                 0      0       0       3        0.0%
  1372                           ;!STACK                0      0       0       3        0.0%
  1373                           ;!BITBANK0            50      0       0       4        0.0%
  1374                           ;!BITSFR3              0      0       0       4        0.0%
  1375                           ;!SFR3                 0      0       0       4        0.0%
  1376                           ;!BANK0               50     1B      41       5       81.3%
  1377                           ;!BITSFR4              0      0       0       5        0.0%
  1378                           ;!SFR4                 0      0       0       5        0.0%
  1379                           ;!BITBANK1            50      0       0       6        0.0%
  1380                           ;!BITSFR5              0      0       0       6        0.0%
  1381                           ;!SFR5                 0      0       0       6        0.0%
  1382                           ;!BANK1               50      C       C       7       15.0%
  1383                           ;!BITSFR6              0      0       0       7        0.0%
  1384                           ;!SFR6                 0      0       0       7        0.0%
  1385                           ;!BITBANK2            50      0       0       8        0.0%
  1386                           ;!BITSFR7              0      0       0       8        0.0%
  1387                           ;!SFR7                 0      0       0       8        0.0%
  1388                           ;!BANK2               50      0       0       9        0.0%
  1389                           ;!BITSFR8              0      0       0       9        0.0%
  1390                           ;!SFR8                 0      0       0       9        0.0%
  1391                           ;!BITBANK3            50      0       0      10        0.0%
  1392                           ;!BITSFR9              0      0       0      10        0.0%
  1393                           ;!SFR9                 0      0       0      10        0.0%
  1394                           ;!BANK3               50      0       0      11        0.0%
  1395                           ;!BITSFR10             0      0       0      11        0.0%
  1396                           ;!SFR10                0      0       0      11        0.0%
  1397                           ;!BITBANK4            50      0       0      12        0.0%
  1398                           ;!BITSFR11             0      0       0      12        0.0%
  1399                           ;!SFR11                0      0       0      12        0.0%
  1400                           ;!BANK4               50      0       0      13        0.0%
  1401                           ;!BITSFR12             0      0       0      13        0.0%
  1402                           ;!SFR12                0      0       0      13        0.0%
  1403                           ;!BITBANK5            50      0       0      14        0.0%
  1404                           ;!BITSFR13             0      0       0      14        0.0%
  1405                           ;!SFR13                0      0       0      14        0.0%
  1406                           ;!BANK5               50      0       0      15        0.0%
  1407                           ;!BITSFR14             0      0       0      15        0.0%
  1408                           ;!SFR14                0      0       0      15        0.0%
  1409                           ;!BITBANK6            50      0       0      16        0.0%
  1410                           ;!BITSFR15             0      0       0      16        0.0%
  1411                           ;!SFR15                0      0       0      16        0.0%
  1412                           ;!BANK6               50      0       0      17        0.0%
  1413                           ;!BITSFR16             0      0       0      17        0.0%
  1414                           ;!SFR16                0      0       0      17        0.0%
  1415                           ;!BITBANK7            50      0       0      18        0.0%
  1416                           ;!BITSFR17             0      0       0      18        0.0%
  1417                           ;!SFR17                0      0       0      18        0.0%
  1418                           ;!BANK7               50      0       0      19        0.0%
  1419                           ;!BITSFR18             0      0       0      19        0.0%
  1420                           ;!SFR18                0      0       0      19        0.0%
  1421                           ;!BITSFR19             0      0       0      20        0.0%
  1422                           ;!SFR19                0      0       0      20        0.0%
  1423                           ;!ABS                  0      0      5B      20        0.0%
  1424                           ;!BITBANK8            50      0       0      21        0.0%
  1425                           ;!BITSFR20             0      0       0      21        0.0%
  1426                           ;!SFR20                0      0       0      21        0.0%
  1427                           ;!BANK8               50      0       0      22        0.0%
  1428                           ;!BITSFR21             0      0       0      22        0.0%
  1429                           ;!SFR21                0      0       0      22        0.0%
  1430                           ;!BITBANK9            50      0       0      23        0.0%
  1431                           ;!BITSFR22             0      0       0      23        0.0%
  1432                           ;!SFR22                0      0       0      23        0.0%
  1433                           ;!BANK9               50      0       0      24        0.0%
  1434                           ;!BITSFR23             0      0       0      24        0.0%
  1435                           ;!SFR23                0      0       0      24        0.0%
  1436                           ;!BITBANK10           50      0       0      25        0.0%
  1437                           ;!BITSFR24             0      0       0      25        0.0%
  1438                           ;!SFR24                0      0       0      25        0.0%
  1439                           ;!BANK10               8      0       0      26        0.0%
  1440                           ;!BITSFR25             0      0       0      26        0.0%
  1441                           ;!SFR25                0      0       0      26        0.0%
  1442                           ;!BITBANK11           50      0       0      27        0.0%
  1443                           ;!BITSFR26             0      0       0      27        0.0%
  1444                           ;!SFR26                0      0       0      27        0.0%
  1445                           ;!BITSFR27             0      0       0      28        0.0%
  1446                           ;!SFR27                0      0       0      28        0.0%
  1447                           ;!BANK11               0      0       0      28        0.0%
  1448                           ;!BITBANK12           30      0       0      29        0.0%
  1449                           ;!BITSFR28             0      0       0      29        0.0%
  1450                           ;!SFR28                0      0       0      29        0.0%
  1451                           ;!BITSFR29             0      0       0      30        0.0%
  1452                           ;!SFR29                0      0       0      30        0.0%
  1453                           ;!BANK12               0      0       0      30        0.0%
  1454                           ;!BITSFR30             0      0       0      31        0.0%
  1455                           ;!SFR30                0      0       0      31        0.0%
  1456                           ;!DATA                 0      0      5B      31        0.0%
  1457                           ;!BITSFR31             0      0       0      32        0.0%
  1458                           ;!SFR31                0      0       0      32        0.0%
  1459                           
  1460                           	global	_main
  1461                           
  1462 ;; *************** function _main *****************
  1463 ;; Defined at:
  1464 ;;		line 79 in file "161518_temp_main.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;		None
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  wConv           8    0[BANK1 ] unsigned char [8]
  1469 ;;  wCounter        2   10[BANK1 ] int 
  1470 ;;  wTemp           2    8[BANK1 ] int 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : B1F/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  1480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1481 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
       0       0
  1482 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  1483 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
       0       0
  1484 ;;Total ram usage:       14 bytes
  1485 ;; Hardware stack levels required when called:    8
  1486 ;; This function calls:
  1487 ;;		_WakeTemp
  1488 ;;		_clearDisplay
  1489 ;;		_initLCD
  1490 ;;		_lcdWriteText
  1491 ;;		_memset
  1492 ;;		_moveCursorToHome
  1493 ;;		_powerOnLcd
  1494 ;;		_setCursorOff
  1495 ;;		_setCursorPosition
  1496 ;;		_setNotBlinkingCursor
  1497 ;; This function is called by:
  1498 ;;		Startup code after reset
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  1502                           	file	"161518_temp_main.c"
  1503                           	line	79
  1504                           global __pmaintext
  1505                           __pmaintext:	;psect for function _main
  1506  00AC                     psect	maintext
  1507                           	file	"161518_temp_main.c"
  1508                           	line	79
  1509                           	global	__size_of_main
  1510                           	__size_of_main	equ	__end_of_main-_main
  1511  00FC                     	
  1512                           _main:	
  1513  00AC                     ;incstack = 0
  1514                           	opt	stack 8
  1515                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1516                           	line	81
  1517                           	
  1518                           l1745:	
  1519  00AC                     	movlw	low(9000)
  1520  00AC  3028               	movlb 0	; select bank0
  1521  00AD  0020               	movwf	(memset@dest)
  1522  00AE  00C7               	movlw	high(9000)
  1523  00AF  3023               	movwf	((memset@dest))+1
  1524  00B0  00C8               	movlw	0
  1525  00B1  3000               	movwf	(memset@c)
  1526  00B2  00C9               	movwf	(memset@c+1)
  1527  00B3  00CA               	movlw	0C8h
  1528  00B4  30C8               	movwf	(memset@n)
  1529  00B5  00CB               	movlw	0
  1530  00B6  3000               	movwf	((memset@n))+1
  1531  00B7  00CC               	fcall	_memset
  1532  00B8  3181  21A8  3180   	line	83
  1533                           	
  1534                           l1747:	
  1535  00BB                     	movlw	(0Fh & ((1<<4)-1))<<3
  1536  00BB  3078               	movlb 1	; select bank1
  1537  00BC  0021               	iorwf	(153)^080h,f	;volatile
  1538  00BD  0499               	line	84
  1539                           	
  1540                           l1749:	
  1541  00BE                     	movlw	(03h & ((1<<2)-1))<<0
  1542  00BE  3003               	iorwf	(153)^080h,f	;volatile
  1543  00BF  0499               	line	85
  1544                           	
  1545                           l1751:	
  1546  00C0                     	bcf	(11),7	;volatile
  1547  00C0  138B               	line	86
  1548                           	
  1549                           l1753:	
  1550  00C1                     	movlb 0	; select bank0
  1551  00C1  0020               	clrf	(12)	;volatile
  1552  00C2  018C               	line	88
  1553                           	
  1554                           l1755:	
  1555  00C3                     	movlw	low(_wI2CTxBuffer)
  1556  00C3  302A               	movwf	(memset@dest)
  1557  00C4  00C7               	movlw	high(_wI2CTxBuffer)
  1558  00C5  3000               	movwf	(memset@dest+1)
  1559  00C6  00C8               	movlw	0
  1560  00C7  3000               	movwf	(memset@c)
  1561  00C8  00C9               	movwf	(memset@c+1)
  1562  00C9  00CA               	movlw	014h
  1563  00CA  3014               	movwf	(memset@n)
  1564  00CB  00CB               	movlw	0
  1565  00CC  3000               	movwf	((memset@n))+1
  1566  00CD  00CC               	fcall	_memset
  1567  00CE  3181  21A8  3180   	line	89
  1568                           	movlb 0	; select bank0
  1569  00D1  0020               	clrf	(_wI2CTxBufferSize)
  1570  00D2  01A6               	line	90
  1571                           	clrf	(_wI2CTxSendPos)
  1572  00D3  01A5               	line	92
  1573                           	movlb 3	; select bank3
  1574  00D4  0023               	clrf	(396)^0180h	;volatile
  1575  00D5  018C               	line	93
  1576                           	movlb 1	; select bank1
  1577  00D6  0021               	clrf	(140)^080h	;volatile
  1578  00D7  018C               	line	95
  1579                           	clrf	(142)^080h	;volatile
  1580  00D8  018E               	line	96
  1581                           	
  1582                           l1757:	
  1583  00D9                     	movlw	low(0FFh)
  1584  00D9  30FF               	movwf	(142)^080h	;volatile
  1585  00DA  008E               	line	97
  1586                           	
  1587                           l1759:	
  1588  00DB                     	movlb 3	; select bank3
  1589  00DB  0023               	bcf	(398)^0180h,3	;volatile
  1590  00DC  118E               	line	98
  1591                           	
  1592                           l1761:	
  1593  00DD                     	bcf	(398)^0180h,4	;volatile
  1594  00DD  120E               	line	103
  1595                           	
  1596                           l1763:	
  1597  00DE                     	movlb 4	; select bank4
  1598  00DE  0024               	movf	(533)^0200h,w	;volatile
  1599  00DF  0815               	andlw	not (((1<<4)-1)<<0)
  1600  00E0  39F0               	iorlw	(08h & ((1<<4)-1))<<0
  1601  00E1  3808               	movwf	(533)^0200h	;volatile
  1602  00E2  0095               	line	104
  1603                           	
  1604                           l1765:	
  1605  00E3                     	movlw	low(01Fh)
  1606  00E3  301F               	movwf	(530)^0200h	;volatile
  1607  00E4  0092               	line	105
  1608                           	
  1609                           l1767:	
  1610  00E5                     	bsf	(533)^0200h,5	;volatile
  1611  00E5  1695               	line	106
  1612                           	
  1613                           l1769:	
  1614  00E6                     	bcf	(534)^0200h,7	;volatile
  1615  00E6  1396               	line	107
  1616                           	
  1617                           l1771:	
  1618  00E7                     	bsf	(534)^0200h,4	;volatile
  1619  00E7  1616               	line	108
  1620                           	
  1621                           l1773:	
  1622  00E8                     	bsf	(535)^0200h,6	;volatile
  1623  00E8  1717               	line	109
  1624                           	
  1625                           l1775:	
  1626  00E9                     	bsf	(535)^0200h,5	;volatile
  1627  00E9  1697               	line	110
  1628                           	
  1629                           l1777:	
  1630  00EA                     	bsf	(535)^0200h,3	;volatile
  1631  00EA  1597               	line	111
  1632                           	
  1633                           l1779:	
  1634  00EB                     	bcf	(535)^0200h,1	;volatile
  1635  00EB  1097               	line	112
  1636                           	
  1637                           l1781:	
  1638  00EC                     	bcf	(535)^0200h,0	;volatile
  1639  00EC  1017               	line	113
  1640                           	
  1641                           l1783:	
  1642  00ED                     	bcf	(532)^0200h,6	;volatile
  1643  00ED  1314               	line	115
  1644                           	
  1645                           l1785:	
  1646  00EE                     	bsf	(11),6	;volatile
  1647  00EE  170B               	line	116
  1648                           	
  1649                           l1787:	
  1650  00EF                     	movlb 1	; select bank1
  1651  00EF  0021               	bsf	(145)^080h,3	;volatile
  1652  00F0  1591               	line	117
  1653                           	
  1654                           l1789:	
  1655  00F1                     	bsf	(146)^080h,3	;volatile
  1656  00F1  1592               	line	119
  1657                           	
  1658                           l1791:	
  1659  00F2                     	bsf	(11),7	;volatile
  1660  00F2  178B               	line	121
  1661                           	
  1662                           l1793:	
  1663  00F3                     	fcall	_initLCD
  1664  00F3  3182  22CF  3180   	line	122
  1665                           	
  1666                           l1795:	
  1667  00F6                     	fcall	_clearDisplay
  1668  00F6  3184  24E1  3180   	line	123
  1669                           	
  1670                           l1797:	
  1671  00F9                     	opt asmopt_push
  1672                           opt asmopt_off
  1673                           movlw  3
  1674  00F9  3003               	movlb 0	; select bank0
  1675  00FA  0020               movwf	((??_main+0)+0+1),f
  1676  00FB  00D8               movlw	8
  1677  00FC  3008               movwf	((??_main+0)+0),f
  1678  00FD  00D7               	movlw	119
  1679  00FE  3077               u897:
  1680  00FF                     decfsz	wreg
  1681  00FF  0B89               	goto	u897
  1682  0100  28FF               	decfsz	((??_main+0)+0),f
  1683  0101  0BD7               	goto	u897
  1684  0102  28FF               	decfsz	((??_main+0)+0+1),f
  1685  0103  0BD8               	goto	u897
  1686  0104  28FF               opt asmopt_pop
  1687                           
  1688                           	line	124
  1689                           	
  1690                           l1799:	
  1691  0105                     	fcall	_powerOnLcd
  1692  0105  3184  24A8  3180   	line	125
  1693                           	
  1694                           l1801:	
  1695  0108                     	opt asmopt_push
  1696                           opt asmopt_off
  1697                           movlw  3
  1698  0108  3003               	movlb 0	; select bank0
  1699  0109  0020               movwf	((??_main+0)+0+1),f
  1700  010A  00D8               movlw	8
  1701  010B  3008               movwf	((??_main+0)+0),f
  1702  010C  00D7               	movlw	119
  1703  010D  3077               u907:
  1704  010E                     decfsz	wreg
  1705  010E  0B89               	goto	u907
  1706  010F  290E               	decfsz	((??_main+0)+0),f
  1707  0110  0BD7               	goto	u907
  1708  0111  290E               	decfsz	((??_main+0)+0+1),f
  1709  0112  0BD8               	goto	u907
  1710  0113  290E               opt asmopt_pop
  1711                           
  1712                           	line	126
  1713                           	
  1714                           l1803:	
  1715  0114                     	fcall	_setCursorOff
  1716  0114  3184  249D  3180   	line	127
  1717                           	
  1718                           l1805:	
  1719  0117                     	opt asmopt_push
  1720                           opt asmopt_off
  1721                           movlw  3
  1722  0117  3003               	movlb 0	; select bank0
  1723  0118  0020               movwf	((??_main+0)+0+1),f
  1724  0119  00D8               movlw	8
  1725  011A  3008               movwf	((??_main+0)+0),f
  1726  011B  00D7               	movlw	119
  1727  011C  3077               u917:
  1728  011D                     decfsz	wreg
  1729  011D  0B89               	goto	u917
  1730  011E  291D               	decfsz	((??_main+0)+0),f
  1731  011F  0BD7               	goto	u917
  1732  0120  291D               	decfsz	((??_main+0)+0+1),f
  1733  0121  0BD8               	goto	u917
  1734  0122  291D               opt asmopt_pop
  1735                           
  1736                           	line	128
  1737                           	
  1738                           l1807:	
  1739  0123                     	fcall	_moveCursorToHome
  1740  0123  3184  24C6  3180   	line	129
  1741                           	
  1742                           l1809:	
  1743  0126                     	opt asmopt_push
  1744                           opt asmopt_off
  1745                           movlw  3
  1746  0126  3003               	movlb 0	; select bank0
  1747  0127  0020               movwf	((??_main+0)+0+1),f
  1748  0128  00D8               movlw	8
  1749  0129  3008               movwf	((??_main+0)+0),f
  1750  012A  00D7               	movlw	119
  1751  012B  3077               u927:
  1752  012C                     decfsz	wreg
  1753  012C  0B89               	goto	u927
  1754  012D  292C               	decfsz	((??_main+0)+0),f
  1755  012E  0BD7               	goto	u927
  1756  012F  292C               	decfsz	((??_main+0)+0+1),f
  1757  0130  0BD8               	goto	u927
  1758  0131  292C               opt asmopt_pop
  1759                           
  1760                           	line	130
  1761                           	
  1762                           l1811:	
  1763  0132                     	fcall	_setNotBlinkingCursor
  1764  0132  3184  2492  3180   	line	131
  1765                           	
  1766                           l1813:	
  1767  0135                     	opt asmopt_push
  1768                           opt asmopt_off
  1769                           movlw  3
  1770  0135  3003               	movlb 0	; select bank0
  1771  0136  0020               movwf	((??_main+0)+0+1),f
  1772  0137  00D8               movlw	8
  1773  0138  3008               movwf	((??_main+0)+0),f
  1774  0139  00D7               	movlw	119
  1775  013A  3077               u937:
  1776  013B                     decfsz	wreg
  1777  013B  0B89               	goto	u937
  1778  013C  293B               	decfsz	((??_main+0)+0),f
  1779  013D  0BD7               	goto	u937
  1780  013E  293B               	decfsz	((??_main+0)+0+1),f
  1781  013F  0BD8               	goto	u937
  1782  0140  293B               opt asmopt_pop
  1783                           
  1784                           	line	133
  1785                           	
  1786                           l1815:	
  1787  0141                     	movlw	low(((STR_1)|8000h))
  1788  0141  303C               	movlb 0	; select bank0
  1789  0142  0020               	movwf	(lcdWriteText@iText)
  1790  0143  00D1               	movlw	high(((STR_1)|8000h))
  1791  0144  3084               	movwf	((lcdWriteText@iText))+1
  1792  0145  00D2               	fcall	_lcdWriteText
  1793  0146  3183  2388  3180   	line	135
  1794                           	
  1795                           l1817:	
  1796  0149                     	opt asmopt_push
  1797                           opt asmopt_off
  1798                           movlw  21
  1799  0149  3015               	movlb 0	; select bank0
  1800  014A  0020               movwf	((??_main+0)+0+1),f
  1801  014B  00D8               movlw	75
  1802  014C  304B               movwf	((??_main+0)+0),f
  1803  014D  00D7               	movlw	190
  1804  014E  30BE               u947:
  1805  014F                     decfsz	wreg
  1806  014F  0B89               	goto	u947
  1807  0150  294F               	decfsz	((??_main+0)+0),f
  1808  0151  0BD7               	goto	u947
  1809  0152  294F               	decfsz	((??_main+0)+0+1),f
  1810  0153  0BD8               	goto	u947
  1811  0154  294F               	nop
  1812  0155  0000               opt asmopt_pop
  1813                           
  1814                           	line	137
  1815                           	
  1816                           l1819:	
  1817  0156                     	movlb 1	; select bank1
  1818  0156  0021               	clrf	(main@wCounter)^080h
  1819  0157  01AA               	clrf	(main@wCounter+1)^080h
  1820  0158  01AB               	line	138
  1821                           	
  1822                           l1821:	
  1823  0159                     	movlw	low(main@F2177)
  1824  0159  3059               	movwf	fsr1l
  1825  015A  0086               	movlw	high(main@F2177)
  1826  015B  3000               	movwf	fsr1h
  1827  015C  0087               	movlw	low(main@wConv)
  1828  015D  30A0               	movwf	fsr0l
  1829  015E  0084               	movlw	high(main@wConv)
  1830  015F  3000               	movwf	fsr0h
  1831  0160  0085               	movlw	8
  1832  0161  3008               	movlb 0	; select bank0
  1833  0162  0020               	movwf	(??_main+0)+0
  1834  0163  00D7               u830:
  1835  0164                     	moviw	fsr1++
  1836  0164  0016               	movwi	fsr0++
  1837  0165  001A               	decfsz	(??_main+0)+0,f
  1838  0166  0BD7               	goto	u830
  1839  0167  2964               	line	139
  1840                           	
  1841                           l1823:	
  1842  0168                     	movlb 1	; select bank1
  1843  0168  0021               	clrf	(main@wTemp)^080h
  1844  0169  01A8               	clrf	(main@wTemp+1)^080h
  1845  016A  01A9               	goto	l1825
  1846  016B  296C               	line	140
  1847                           	
  1848                           l89:	
  1849  016C                     	line	142
  1850                           	
  1851                           l1825:	
  1852  016C                     	movlw	low(067h)
  1853  016C  3067               	fcall	_setCursorPosition
  1854  016D  3183  23FF  3180   	line	143
  1855                           	
  1856                           l1827:	
  1857  0170                     	opt asmopt_push
  1858                           opt asmopt_off
  1859                           movlw	52
  1860  0170  3034               	movlb 0	; select bank0
  1861  0171  0020               movwf	((??_main+0)+0),f
  1862  0172  00D7               	movlw	241
  1863  0173  30F1               u957:
  1864  0174                     decfsz	wreg
  1865  0174  0B89               	goto	u957
  1866  0175  2974               	decfsz	((??_main+0)+0),f
  1867  0176  0BD7               	goto	u957
  1868  0177  2974               	nop2
  1869  0178  3200               opt asmopt_pop
  1870                           
  1871                           	line	144
  1872                           	
  1873                           l1829:	
  1874  0179                     	movlb 1	; select bank1
  1875  0179  0021               	movf	(main@wCounter)^080h,w
  1876  017A  082A               	addlw	low(main@wConv|((0x0)<<8))&0ffh
  1877  017B  3EA0               	movlb 0	; select bank0
  1878  017C  0020               	movwf	(lcdWriteText@iText)
  1879  017D  00D1               	movlw	0x0
  1880  017E  3000               
  1881                           	movwf	(lcdWriteText@iText+1)
  1882  017F  00D2               	fcall	_lcdWriteText
  1883  0180  3183  2388  3180   	line	147
  1884                           	
  1885                           l1831:	
  1886  0183                     	fcall	_WakeTemp
  1887  0183  3184  2420  3180   	line	152
  1888                           	
  1889                           l1833:	
  1890  0186                     	movlb 1	; select bank1
  1891  0186  0021               	movf	(main@wCounter)^080h,w
  1892  0187  082A               	addlw	02h
  1893  0188  3E02               	movwf	(main@wCounter)^080h
  1894  0189  00AA               	movlw	0
  1895  018A  3000               	addwfc	(main@wCounter+1)^080h,w
  1896  018B  3D2B               	movwf	1+(main@wCounter)^080h
  1897  018C  00AB               	line	153
  1898                           	
  1899                           l1835:	
  1900  018D                     		movlw	8
  1901  018D  3008               	xorwf	((main@wCounter)^080h),w
  1902  018E  062A               iorwf	((main@wCounter+1)^080h),w
  1903  018F  042B               	btfss	status,2
  1904  0190  1D03               	goto	u841
  1905  0191  2993               	goto	u840
  1906  0192  2994               u841:
  1907  0193                     	goto	l1839
  1908  0193  2997               u840:
  1909  0194                     	line	155
  1910                           	
  1911                           l1837:	
  1912  0194                     	clrf	(main@wCounter)^080h
  1913  0194  01AA               	clrf	(main@wCounter+1)^080h
  1914  0195  01AB               	goto	l1839
  1915  0196  2997               	line	156
  1916                           	
  1917                           l90:	
  1918  0197                     	line	169
  1919                           	
  1920                           l1839:	
  1921  0197                     	opt asmopt_push
  1922                           opt asmopt_off
  1923                           movlw  21
  1924  0197  3015               	movlb 0	; select bank0
  1925  0198  0020               movwf	((??_main+0)+0+1),f
  1926  0199  00D8               movlw	75
  1927  019A  304B               movwf	((??_main+0)+0),f
  1928  019B  00D7               	movlw	190
  1929  019C  30BE               u967:
  1930  019D                     decfsz	wreg
  1931  019D  0B89               	goto	u967
  1932  019E  299D               	decfsz	((??_main+0)+0),f
  1933  019F  0BD7               	goto	u967
  1934  01A0  299D               	decfsz	((??_main+0)+0+1),f
  1935  01A1  0BD8               	goto	u967
  1936  01A2  299D               	nop
  1937  01A3  0000               opt asmopt_pop
  1938                           
  1939                           	goto	l1825
  1940  01A4  296C               	line	170
  1941                           	
  1942                           l91:	
  1943  01A5                     	goto	l1825
  1944  01A5  296C               	
  1945                           l92:	
  1946  01A6                     	line	172
  1947                           	
  1948                           l93:	
  1949  01A6                     	global	start
  1950                           	ljmp	start
  1951  01A6  3180  287C         	opt stack 0
  1952                           GLOBAL	__end_of_main
  1953                           	__end_of_main:
  1954  01A8                     	signat	_main,89
  1955                           	global	_setNotBlinkingCursor
  1956                           
  1957 ;; *************** function _setNotBlinkingCursor *****************
  1958 ;; Defined at:
  1959 ;;		line 173 in file "LCD_hd44780u_qy_2004a.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;		None
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg, status,2, status,0, pclath, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  1973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1975 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  1976 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  1977 ;;Total ram usage:        1 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:    6
  1980 ;; This function calls:
  1981 ;;		_writeInsChk
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1987                           	file	"LCD_hd44780u_qy_2004a.c"
  1988                           	line	173
  1989                           global __ptext1
  1990                           __ptext1:	;psect for function _setNotBlinkingCursor
  1991  0492                     psect	text1
  1992                           	file	"LCD_hd44780u_qy_2004a.c"
  1993                           	line	173
  1994                           	global	__size_of_setNotBlinkingCursor
  1995                           	__size_of_setNotBlinkingCursor	equ	__end_of_setNotBlinkingCursor-_setNotBlinkingCursor

  1996  000B                     	
  1997                           _setNotBlinkingCursor:	
  1998  0492                     ;incstack = 0
  1999                           	opt	stack 9
  2000                           ; Regs used in _setNotBlinkingCursor: [wreg+status,2+status,0+pclath+cstack]
  2001                           	line	175
  2002                           	
  2003                           l1733:	
  2004  0492                     ;LCD_hd44780u_qy_2004a.c: 175:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFE;
  2005                           	movlb 0	; select bank0
  2006  0492  0020               	movf	(_mDisplayOnOffReg),w
  2007  0493  0829               	andlw	0FEh
  2008  0494  39FE               	movwf	(??_setNotBlinkingCursor+0)+0
  2009  0495  00CD               	movf	(??_setNotBlinkingCursor+0)+0,w
  2010  0496  084D               	movwf	(_mDisplayOnOffReg)
  2011  0497  00A9               	line	176
  2012                           	
  2013                           l1735:	
  2014  0498                     ;LCD_hd44780u_qy_2004a.c: 176:   writeInsChk(mDisplayOnOffReg);
  2015                           	movf	(_mDisplayOnOffReg),w
  2016  0498  0829               	fcall	_writeInsChk
  2017  0499  3184  24B3  3184   	line	177
  2018                           	
  2019                           l200:	
  2020  049C                     	return
  2021  049C  0008               	opt stack 0
  2022                           GLOBAL	__end_of_setNotBlinkingCursor
  2023                           	__end_of_setNotBlinkingCursor:
  2024  049D                     	signat	_setNotBlinkingCursor,89
  2025                           	global	_setCursorOff
  2026                           
  2027 ;; *************** function _setCursorOff *****************
  2028 ;; Defined at:
  2029 ;;		line 178 in file "LCD_hd44780u_qy_2004a.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, status,0, pclath, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2045 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  2046 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  2047 ;;Total ram usage:        1 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    6
  2050 ;; This function calls:
  2051 ;;		_writeInsChk
  2052 ;; This function is called by:
  2053 ;;		_main
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2057                           	line	178
  2058                           global __ptext2
  2059                           __ptext2:	;psect for function _setCursorOff
  2060  049D                     psect	text2
  2061                           	file	"LCD_hd44780u_qy_2004a.c"
  2062                           	line	178
  2063                           	global	__size_of_setCursorOff
  2064                           	__size_of_setCursorOff	equ	__end_of_setCursorOff-_setCursorOff
  2065  000B                     	
  2066                           _setCursorOff:	
  2067  049D                     ;incstack = 0
  2068                           	opt	stack 9
  2069                           ; Regs used in _setCursorOff: [wreg+status,2+status,0+pclath+cstack]
  2070                           	line	180
  2071                           	
  2072                           l1725:	
  2073  049D                     ;LCD_hd44780u_qy_2004a.c: 180:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFD;
  2074                           	movlb 0	; select bank0
  2075  049D  0020               	movf	(_mDisplayOnOffReg),w
  2076  049E  0829               	andlw	0FDh
  2077  049F  39FD               	movwf	(??_setCursorOff+0)+0
  2078  04A0  00CD               	movf	(??_setCursorOff+0)+0,w
  2079  04A1  084D               	movwf	(_mDisplayOnOffReg)
  2080  04A2  00A9               	line	181
  2081                           	
  2082                           l1727:	
  2083  04A3                     ;LCD_hd44780u_qy_2004a.c: 181:   writeInsChk(mDisplayOnOffReg);
  2084                           	movf	(_mDisplayOnOffReg),w
  2085  04A3  0829               	fcall	_writeInsChk
  2086  04A4  3184  24B3  3184   	line	182
  2087                           	
  2088                           l203:	
  2089  04A7                     	return
  2090  04A7  0008               	opt stack 0
  2091                           GLOBAL	__end_of_setCursorOff
  2092                           	__end_of_setCursorOff:
  2093  04A8                     	signat	_setCursorOff,89
  2094                           	global	_powerOnLcd
  2095                           
  2096 ;; *************** function _powerOnLcd *****************
  2097 ;; Defined at:
  2098 ;;		line 163 in file "LCD_hd44780u_qy_2004a.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0, pclath, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2114 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  2115 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  2116 ;;Total ram usage:        1 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    6
  2119 ;; This function calls:
  2120 ;;		_writeInsChk
  2121 ;; This function is called by:
  2122 ;;		_main
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2126                           	line	163
  2127                           global __ptext3
  2128                           __ptext3:	;psect for function _powerOnLcd
  2129  04A8                     psect	text3
  2130                           	file	"LCD_hd44780u_qy_2004a.c"
  2131                           	line	163
  2132                           	global	__size_of_powerOnLcd
  2133                           	__size_of_powerOnLcd	equ	__end_of_powerOnLcd-_powerOnLcd
  2134  000B                     	
  2135                           _powerOnLcd:	
  2136  04A8                     ;incstack = 0
  2137                           	opt	stack 9
  2138                           ; Regs used in _powerOnLcd: [wreg+status,2+status,0+pclath+cstack]
  2139                           	line	165
  2140                           	
  2141                           l1721:	
  2142  04A8                     ;LCD_hd44780u_qy_2004a.c: 165:   mDisplayOnOffReg = mDisplayOnOffReg | 0x04;
  2143                           	movlb 0	; select bank0
  2144  04A8  0020               	movf	(_mDisplayOnOffReg),w
  2145  04A9  0829               	iorlw	04h
  2146  04AA  3804               	movwf	(??_powerOnLcd+0)+0
  2147  04AB  00CD               	movf	(??_powerOnLcd+0)+0,w
  2148  04AC  084D               	movwf	(_mDisplayOnOffReg)
  2149  04AD  00A9               	line	166
  2150                           	
  2151                           l1723:	
  2152  04AE                     ;LCD_hd44780u_qy_2004a.c: 166:   writeInsChk(mDisplayOnOffReg);
  2153                           	movf	(_mDisplayOnOffReg),w
  2154  04AE  0829               	fcall	_writeInsChk
  2155  04AF  3184  24B3  3184   	line	167
  2156                           	
  2157                           l194:	
  2158  04B2                     	return
  2159  04B2  0008               	opt stack 0
  2160                           GLOBAL	__end_of_powerOnLcd
  2161                           	__end_of_powerOnLcd:
  2162  04B3                     	signat	_powerOnLcd,89
  2163                           	global	_moveCursorToHome
  2164                           
  2165 ;; *************** function _moveCursorToHome *****************
  2166 ;; Defined at:
  2167 ;;		line 224 in file "LCD_hd44780u_qy_2004a.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;		None
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg, status,2, status,0, pclath, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2185 ;;Total ram usage:        0 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    6
  2188 ;; This function calls:
  2189 ;;		_writeInsChk
  2190 ;; This function is called by:
  2191 ;;		_main
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2195                           	line	224
  2196                           global __ptext4
  2197                           __ptext4:	;psect for function _moveCursorToHome
  2198  04C6                     psect	text4
  2199                           	file	"LCD_hd44780u_qy_2004a.c"
  2200                           	line	224
  2201                           	global	__size_of_moveCursorToHome
  2202                           	__size_of_moveCursorToHome	equ	__end_of_moveCursorToHome-_moveCursorToHome
  2203  0008                     	
  2204                           _moveCursorToHome:	
  2205  04C6                     ;incstack = 0
  2206                           	opt	stack 9
  2207                           ; Regs used in _moveCursorToHome: [wreg+status,2+status,0+pclath+cstack]
  2208                           	line	226
  2209                           	
  2210                           l1729:	
  2211  04C6                     ;LCD_hd44780u_qy_2004a.c: 226:   writeInsChk(0x02);
  2212                           	movlw	low(02h)
  2213  04C6  3002               	fcall	_writeInsChk
  2214  04C7  3184  24B3  3184   	line	227
  2215                           	
  2216                           l1731:	
  2217  04CA                     ;LCD_hd44780u_qy_2004a.c: 227:   mWritingPosition=1;
  2218                           	movlb 0	; select bank0
  2219  04CA  0020               	clrf	(_mWritingPosition)
  2220  04CB  01A7               	incf	(_mWritingPosition),f
  2221  04CC  0AA7               	line	228
  2222                           	
  2223                           l230:	
  2224  04CD                     	return
  2225  04CD  0008               	opt stack 0
  2226                           GLOBAL	__end_of_moveCursorToHome
  2227                           	__end_of_moveCursorToHome:
  2228  04CE                     	signat	_moveCursorToHome,89
  2229                           	global	_memset
  2230                           
  2231 ;; *************** function _memset *****************
  2232 ;; Defined at:
  2233 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  dest            2    9[BANK0 ] PTR void 
  2236 ;;		 -> wInterruptText(200), wI2CTxBuffer(20), 
  2237 ;;  c               2   11[BANK0 ] int 
  2238 ;;  n               2   13[BANK0 ] unsigned int 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  s               2   21[BANK0 ] PTR unsigned char 
  2241 ;;		 -> wInterruptText(200), wI2CTxBuffer(20), 
  2242 ;;  k               2   19[BANK0 ] unsigned int 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  2    9[BANK0 ] PTR void 
  2245 ;; Registers used:
  2246 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2252 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  2253 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  2254 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  2255 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
  2256 ;;Total ram usage:       14 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; Hardware stack levels required when called:    3
  2259 ;; This function calls:
  2260 ;;		Nothing
  2261 ;; This function is called by:
  2262 ;;		_main
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           psect	text5,local,class=CODE,delta=2,merge=1,group=2
  2266                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  2267                           	line	4
  2268                           global __ptext5
  2269                           __ptext5:	;psect for function _memset
  2270  01A8                     psect	text5
  2271                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  2272                           	line	4
  2273                           	global	__size_of_memset
  2274                           	__size_of_memset	equ	__end_of_memset-_memset
  2275  00D1                     	
  2276                           _memset:	
  2277  01A8                     ;incstack = 0
  2278                           	opt	stack 12
  2279                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  2280                           	line	6
  2281                           	
  2282                           l1657:	
  2283  01A8                     	movlb 0	; select bank0
  2284  01A8  0020               	movf	(memset@dest+1),w
  2285  01A9  0848               	movwf	(memset@s+1)
  2286  01AA  00D4               	movf	(memset@dest),w
  2287  01AB  0847               	movwf	(memset@s)
  2288  01AC  00D3               	line	13
  2289                           	
  2290                           l1659:	
  2291  01AD                     	movf	((memset@n)),w
  2292  01AD  084B               iorwf	((memset@n+1)),w
  2293  01AE  044C               	btfss	status,2
  2294  01AF  1D03               	goto	u771
  2295  01B0  29B2               	goto	u770
  2296  01B1  29B3               u771:
  2297  01B2                     	goto	l1663
  2298  01B2  29B5               u770:
  2299  01B3                     	goto	l672
  2300  01B3  2A78               	
  2301                           l1661:	
  2302  01B4                     ;	Return value of _memset is never used
  2303                           	goto	l672
  2304  01B4  2A78               	
  2305                           l671:	
  2306  01B5                     	line	14
  2307                           	
  2308                           l1663:	
  2309  01B5                     	movf	(memset@s),w
  2310  01B5  0853               	movwf	fsr1l
  2311  01B6  0086               	movf	(memset@s+1),w
  2312  01B7  0854               	movwf	fsr1h
  2313  01B8  0087               	movf	(memset@c),w
  2314  01B9  0849               	movwf	indf1
  2315  01BA  0081               	line	15
  2316                           	
  2317                           l1665:	
  2318  01BB                     	movf	(memset@n),w
  2319  01BB  084B               	addlw	0FFh
  2320  01BC  3EFF               	movwf	(??_memset+0)+0
  2321  01BD  00CD               	movlw	0FFh
  2322  01BE  30FF               	addwfc	(memset@n+1),w
  2323  01BF  3D4C               	movwf	1+(??_memset+0)+0
  2324  01C0  00CE               	movf	0+(??_memset+0)+0,w
  2325  01C1  084D               	addwf	(memset@s),w
  2326  01C2  0753               	movwf	(??_memset+2)+0
  2327  01C3  00CF               	movf	1+(??_memset+0)+0,w
  2328  01C4  084E               	addwfc	(memset@s+1),w
  2329  01C5  3D54               	movwf	1+(??_memset+2)+0
  2330  01C6  00D0               	movf	0+(??_memset+2)+0,w
  2331  01C7  084F               	movwf	fsr1l
  2332  01C8  0086               	movf	1+(??_memset+2)+0,w
  2333  01C9  0850               	movwf	fsr1h
  2334  01CA  0087               	movf	(memset@c),w
  2335  01CB  0849               	movwf	indf1
  2336  01CC  0081               	line	16
  2337                           	
  2338                           l1667:	
  2339  01CD                     	movlw	0
  2340  01CD  3000               	subwf	(memset@n+1),w
  2341  01CE  024C               	movlw	03h
  2342  01CF  3003               	skipnz
  2343  01D0  1903               	subwf	(memset@n),w
  2344  01D1  024B               	skipnc
  2345  01D2  1803               	goto	u781
  2346  01D3  29D5               	goto	u780
  2347  01D4  29D6               u781:
  2348  01D5                     	goto	l1671
  2349  01D5  29D8               u780:
  2350  01D6                     	goto	l672
  2351  01D6  2A78               	
  2352                           l1669:	
  2353  01D7                     ;	Return value of _memset is never used
  2354                           	goto	l672
  2355  01D7  2A78               	
  2356                           l673:	
  2357  01D8                     	line	17
  2358                           	
  2359                           l1671:	
  2360  01D8                     	movf	(memset@s),w
  2361  01D8  0853               	addlw	01h
  2362  01D9  3E01               	movwf	(??_memset+0)+0
  2363  01DA  00CD               	movlw	0
  2364  01DB  3000               	addwfc	(memset@s+1),w
  2365  01DC  3D54               	movwf	1+(??_memset+0)+0
  2366  01DD  00CE               	movf	0+(??_memset+0)+0,w
  2367  01DE  084D               	movwf	fsr1l
  2368  01DF  0086               	movf	1+(??_memset+0)+0,w
  2369  01E0  084E               	movwf	fsr1h
  2370  01E1  0087               	movf	(memset@c),w
  2371  01E2  0849               	movwf	indf1
  2372  01E3  0081               	line	18
  2373                           	movf	(memset@s),w
  2374  01E4  0853               	addlw	02h
  2375  01E5  3E02               	movwf	(??_memset+0)+0
  2376  01E6  00CD               	movlw	0
  2377  01E7  3000               	addwfc	(memset@s+1),w
  2378  01E8  3D54               	movwf	1+(??_memset+0)+0
  2379  01E9  00CE               	movf	0+(??_memset+0)+0,w
  2380  01EA  084D               	movwf	fsr1l
  2381  01EB  0086               	movf	1+(??_memset+0)+0,w
  2382  01EC  084E               	movwf	fsr1h
  2383  01ED  0087               	movf	(memset@c),w
  2384  01EE  0849               	movwf	indf1
  2385  01EF  0081               	line	19
  2386                           	movf	(memset@n),w
  2387  01F0  084B               	addlw	0FEh
  2388  01F1  3EFE               	movwf	(??_memset+0)+0
  2389  01F2  00CD               	movlw	0FFh
  2390  01F3  30FF               	addwfc	(memset@n+1),w
  2391  01F4  3D4C               	movwf	1+(??_memset+0)+0
  2392  01F5  00CE               	movf	0+(??_memset+0)+0,w
  2393  01F6  084D               	addwf	(memset@s),w
  2394  01F7  0753               	movwf	(??_memset+2)+0
  2395  01F8  00CF               	movf	1+(??_memset+0)+0,w
  2396  01F9  084E               	addwfc	(memset@s+1),w
  2397  01FA  3D54               	movwf	1+(??_memset+2)+0
  2398  01FB  00D0               	movf	0+(??_memset+2)+0,w
  2399  01FC  084F               	movwf	fsr1l
  2400  01FD  0086               	movf	1+(??_memset+2)+0,w
  2401  01FE  0850               	movwf	fsr1h
  2402  01FF  0087               	movf	(memset@c),w
  2403  0200  0849               	movwf	indf1
  2404  0201  0081               	line	20
  2405                           	movf	(memset@n),w
  2406  0202  084B               	addlw	0FDh
  2407  0203  3EFD               	movwf	(??_memset+0)+0
  2408  0204  00CD               	movlw	0FFh
  2409  0205  30FF               	addwfc	(memset@n+1),w
  2410  0206  3D4C               	movwf	1+(??_memset+0)+0
  2411  0207  00CE               	movf	0+(??_memset+0)+0,w
  2412  0208  084D               	addwf	(memset@s),w
  2413  0209  0753               	movwf	(??_memset+2)+0
  2414  020A  00CF               	movf	1+(??_memset+0)+0,w
  2415  020B  084E               	addwfc	(memset@s+1),w
  2416  020C  3D54               	movwf	1+(??_memset+2)+0
  2417  020D  00D0               	movf	0+(??_memset+2)+0,w
  2418  020E  084F               	movwf	fsr1l
  2419  020F  0086               	movf	1+(??_memset+2)+0,w
  2420  0210  0850               	movwf	fsr1h
  2421  0211  0087               	movf	(memset@c),w
  2422  0212  0849               	movwf	indf1
  2423  0213  0081               	line	21
  2424                           	
  2425                           l1673:	
  2426  0214                     	movlw	0
  2427  0214  3000               	subwf	(memset@n+1),w
  2428  0215  024C               	movlw	07h
  2429  0216  3007               	skipnz
  2430  0217  1903               	subwf	(memset@n),w
  2431  0218  024B               	skipnc
  2432  0219  1803               	goto	u791
  2433  021A  2A1C               	goto	u790
  2434  021B  2A1D               u791:
  2435  021C                     	goto	l1677
  2436  021C  2A1F               u790:
  2437  021D                     	goto	l672
  2438  021D  2A78               	
  2439                           l1675:	
  2440  021E                     ;	Return value of _memset is never used
  2441                           	goto	l672
  2442  021E  2A78               	
  2443                           l674:	
  2444  021F                     	line	22
  2445                           	
  2446                           l1677:	
  2447  021F                     	movf	(memset@s),w
  2448  021F  0853               	addlw	03h
  2449  0220  3E03               	movwf	(??_memset+0)+0
  2450  0221  00CD               	movlw	0
  2451  0222  3000               	addwfc	(memset@s+1),w
  2452  0223  3D54               	movwf	1+(??_memset+0)+0
  2453  0224  00CE               	movf	0+(??_memset+0)+0,w
  2454  0225  084D               	movwf	fsr1l
  2455  0226  0086               	movf	1+(??_memset+0)+0,w
  2456  0227  084E               	movwf	fsr1h
  2457  0228  0087               	movf	(memset@c),w
  2458  0229  0849               	movwf	indf1
  2459  022A  0081               	line	23
  2460                           	movf	(memset@n),w
  2461  022B  084B               	addlw	0FCh
  2462  022C  3EFC               	movwf	(??_memset+0)+0
  2463  022D  00CD               	movlw	0FFh
  2464  022E  30FF               	addwfc	(memset@n+1),w
  2465  022F  3D4C               	movwf	1+(??_memset+0)+0
  2466  0230  00CE               	movf	0+(??_memset+0)+0,w
  2467  0231  084D               	addwf	(memset@s),w
  2468  0232  0753               	movwf	(??_memset+2)+0
  2469  0233  00CF               	movf	1+(??_memset+0)+0,w
  2470  0234  084E               	addwfc	(memset@s+1),w
  2471  0235  3D54               	movwf	1+(??_memset+2)+0
  2472  0236  00D0               	movf	0+(??_memset+2)+0,w
  2473  0237  084F               	movwf	fsr1l
  2474  0238  0086               	movf	1+(??_memset+2)+0,w
  2475  0239  0850               	movwf	fsr1h
  2476  023A  0087               	movf	(memset@c),w
  2477  023B  0849               	movwf	indf1
  2478  023C  0081               	line	24
  2479                           	
  2480                           l1679:	
  2481  023D                     	movlw	0
  2482  023D  3000               	subwf	(memset@n+1),w
  2483  023E  024C               	movlw	09h
  2484  023F  3009               	skipnz
  2485  0240  1903               	subwf	(memset@n),w
  2486  0241  024B               	skipnc
  2487  0242  1803               	goto	u801
  2488  0243  2A45               	goto	u800
  2489  0244  2A46               u801:
  2490  0245                     	goto	l1683
  2491  0245  2A48               u800:
  2492  0246                     	goto	l672
  2493  0246  2A78               	
  2494                           l1681:	
  2495  0247                     ;	Return value of _memset is never used
  2496                           	goto	l672
  2497  0247  2A78               	
  2498                           l675:	
  2499  0248                     	line	31
  2500                           	
  2501                           l1683:	
  2502  0248                     	comf	(memset@s),w
  2503  0248  0953               	movwf	(??_memset+0)+0
  2504  0249  00CD               	comf	(memset@s+1),w
  2505  024A  0954               	movwf	((??_memset+0)+0+1)
  2506  024B  00CE               	incf	(??_memset+0)+0,f
  2507  024C  0ACD               	skipnz
  2508  024D  1903               	incf	((??_memset+0)+0+1),f
  2509  024E  0ACE               	movlw	03h
  2510  024F  3003               	andwf	0+(??_memset+0)+0,w
  2511  0250  054D               	movwf	(memset@k)
  2512  0251  00D1               	movlw	0
  2513  0252  3000               	andwf	1+(??_memset+0)+0,w
  2514  0253  054E               	movwf	1+(memset@k)
  2515  0254  00D2               	line	32
  2516                           	
  2517                           l1685:	
  2518  0255                     	movf	(memset@k),w
  2519  0255  0851               	addwf	(memset@s),f
  2520  0256  07D3               	movf	(memset@k+1),w
  2521  0257  0852               	addwfc	(memset@s+1),f
  2522  0258  3DD4               	line	33
  2523                           	
  2524                           l1687:	
  2525  0259                     	movf	(memset@k),w
  2526  0259  0851               	subwf	(memset@n),f
  2527  025A  02CB               	movf	(memset@k+1),w
  2528  025B  0852               	subwfb	(memset@n+1),f
  2529  025C  3BCC               	line	34
  2530                           	
  2531                           l1689:	
  2532  025D                     	movlw	0FCh
  2533  025D  30FC               	andwf	(memset@n),f
  2534  025E  05CB               	movlw	0FFh
  2535  025F  30FF               	andwf	(memset@n+1),f
  2536  0260  05CC               	line	86
  2537                           	goto	l1697
  2538  0261  2A71               	
  2539                           l677:	
  2540  0262                     	
  2541                           l1691:	
  2542  0262                     	movf	(memset@s),w
  2543  0262  0853               	movwf	fsr1l
  2544  0263  0086               	movf	(memset@s+1),w
  2545  0264  0854               	movwf	fsr1h
  2546  0265  0087               	movf	(memset@c),w
  2547  0266  0849               	movwf	indf1
  2548  0267  0081               	
  2549                           l1693:	
  2550  0268                     	movlw	01h
  2551  0268  3001               	subwf	(memset@n),f
  2552  0269  02CB               	movlw	0
  2553  026A  3000               	subwfb	(memset@n+1),f
  2554  026B  3BCC               	
  2555                           l1695:	
  2556  026C                     	movlw	01h
  2557  026C  3001               	addwf	(memset@s),f
  2558  026D  07D3               	movlw	0
  2559  026E  3000               	addwfc	(memset@s+1),f
  2560  026F  3DD4               	goto	l1697
  2561  0270  2A71               	
  2562                           l676:	
  2563  0271                     	
  2564                           l1697:	
  2565  0271                     	movf	((memset@n)),w
  2566  0271  084B               iorwf	((memset@n+1)),w
  2567  0272  044C               	btfss	status,2
  2568  0273  1D03               	goto	u811
  2569  0274  2A76               	goto	u810
  2570  0275  2A77               u811:
  2571  0276                     	goto	l1691
  2572  0276  2A62               u810:
  2573  0277                     	goto	l672
  2574  0277  2A78               	
  2575                           l678:	
  2576  0278                     	line	90
  2577                           ;	Return value of _memset is never used
  2578                           	
  2579                           l672:	
  2580  0278                     	return
  2581  0278  0008               	opt stack 0
  2582                           GLOBAL	__end_of_memset
  2583                           	__end_of_memset:
  2584  0279                     	signat	_memset,12409
  2585                           	global	_lcdWriteText
  2586                           
  2587 ;; *************** function _lcdWriteText *****************
  2588 ;; Defined at:
  2589 ;;		line 38 in file "LCD_hd44780u_qy_2004a.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  iText           2   19[BANK0 ] PTR unsigned char 
  2592 ;;		 -> main@wConv(8), STR_1(26), 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  wCharReading    1   24[BANK0 ] unsigned char 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2604 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  2605 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  2606 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  2607 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  2608 ;;Total ram usage:        6 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    7
  2611 ;; This function calls:
  2612 ;;		_writeTxtChk
  2613 ;; This function is called by:
  2614 ;;		_main
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2618                           	file	"LCD_hd44780u_qy_2004a.c"
  2619                           	line	38
  2620                           global __ptext6
  2621                           __ptext6:	;psect for function _lcdWriteText
  2622  0388                     psect	text6
  2623                           	file	"LCD_hd44780u_qy_2004a.c"
  2624                           	line	38
  2625                           	global	__size_of_lcdWriteText
  2626                           	__size_of_lcdWriteText	equ	__end_of_lcdWriteText-_lcdWriteText
  2627  002A                     	
  2628                           _lcdWriteText:	
  2629  0388                     ;incstack = 0
  2630                           	opt	stack 8
  2631                           ; Regs used in _lcdWriteText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2632                           	line	40
  2633                           	
  2634                           l1737:	
  2635  0388                     ;LCD_hd44780u_qy_2004a.c: 38: void lcdWriteText(char *iText);LCD_hd44780u_qy_2004a.c: 39
                                 :  {;LCD_hd44780u_qy_2004a.c: 40:   unsigned char wCharReadingPos = 0;
  2636                           	movlb 0	; select bank0
  2637  0388  0020               	clrf	(lcdWriteText@wCharReadingPos)
  2638  0389  01D6               	line	41
  2639                           ;LCD_hd44780u_qy_2004a.c: 41:   while( iText[wCharReadingPos] != 0)
  2640                           	goto	l1743
  2641  038A  2BA0               	
  2642                           l146:	
  2643  038B                     	line	43
  2644                           	
  2645                           l1739:	
  2646  038B                     ;LCD_hd44780u_qy_2004a.c: 42:   {;LCD_hd44780u_qy_2004a.c: 43:     writeTxtChk(iText[wCh
                                 arReadingPos]);
  2647                           	movf	(lcdWriteText@iText+1),w
  2648  038B  0852               	movwf	(??_lcdWriteText+0)+0+1
  2649  038C  00D4               	movf	(lcdWriteText@iText),w
  2650  038D  0851               	movwf	(??_lcdWriteText+0)+0
  2651  038E  00D3               	movf	(lcdWriteText@wCharReadingPos),w
  2652  038F  0856               	addwf	(??_lcdWriteText+0)+0,w
  2653  0390  0753               	movwf	fsr0l
  2654  0391  0084               	movf	(??_lcdWriteText+0)+1,w
  2655  0392  0854               	skipnc
  2656  0393  1803               	incf	(??_lcdWriteText+0)+1,w
  2657  0394  0A54               	movwf	fsr0h
  2658  0395  0085               
  2659                           	movf	indf0,w ;code access
  2660  0396  0800               	fcall	_writeTxtChk
  2661  0397  3182  2279  3183   	line	44
  2662                           	
  2663                           l1741:	
  2664  039A                     ;LCD_hd44780u_qy_2004a.c: 44:     wCharReadingPos++;
  2665                           	movlw	low(01h)
  2666  039A  3001               	movlb 0	; select bank0
  2667  039B  0020               	movwf	(??_lcdWriteText+0)+0
  2668  039C  00D3               	movf	(??_lcdWriteText+0)+0,w
  2669  039D  0853               	addwf	(lcdWriteText@wCharReadingPos),f
  2670  039E  07D6               	goto	l1743
  2671  039F  2BA0               	line	45
  2672                           ;LCD_hd44780u_qy_2004a.c: 45:   }
  2673                           	
  2674                           l145:	
  2675  03A0                     	line	41
  2676                           	
  2677                           l1743:	
  2678  03A0                     ;LCD_hd44780u_qy_2004a.c: 41:   while( iText[wCharReadingPos] != 0)
  2679                           	movf	(lcdWriteText@iText+1),w
  2680  03A0  0852               	movwf	(??_lcdWriteText+0)+0+1
  2681  03A1  00D4               	movf	(lcdWriteText@iText),w
  2682  03A2  0851               	movwf	(??_lcdWriteText+0)+0
  2683  03A3  00D3               	movf	(lcdWriteText@wCharReadingPos),w
  2684  03A4  0856               	addwf	(??_lcdWriteText+0)+0,w
  2685  03A5  0753               	movwf	fsr0l
  2686  03A6  0084               	movf	(??_lcdWriteText+0)+1,w
  2687  03A7  0854               	skipnc
  2688  03A8  1803               	incf	(??_lcdWriteText+0)+1,w
  2689  03A9  0A54               	movwf	fsr0h
  2690  03AA  0085               
  2691                           	moviw	fsr0++
  2692  03AB  0012               	btfss	status,2
  2693  03AC  1D03               	goto	u821
  2694  03AD  2BAF               	goto	u820
  2695  03AE  2BB0               u821:
  2696  03AF                     	goto	l1739
  2697  03AF  2B8B               u820:
  2698  03B0                     	goto	l148
  2699  03B0  2BB1               	
  2700                           l147:	
  2701  03B1                     	line	46
  2702                           	
  2703                           l148:	
  2704  03B1                     	return
  2705  03B1  0008               	opt stack 0
  2706                           GLOBAL	__end_of_lcdWriteText
  2707                           	__end_of_lcdWriteText:
  2708  03B2                     	signat	_lcdWriteText,4217
  2709                           	global	_writeTxtChk
  2710                           
  2711 ;; *************** function _writeTxtChk *****************
  2712 ;; Defined at:
  2713 ;;		line 75 in file "LCD_hd44780u_qy_2004a.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  iOpCode         1    wreg     unsigned char 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  iOpCode         1   18[BANK0 ] unsigned char 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      void 
  2720 ;; Registers used:
  2721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2728 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  2729 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  2730 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  2731 ;;Total ram usage:        3 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:    6
  2734 ;; This function calls:
  2735 ;;		_SetToSendDataToLCD
  2736 ;;		_setCursorPosition
  2737 ;;		_setData
  2738 ;;		_waitLCDBusy
  2739 ;; This function is called by:
  2740 ;;		_lcdWriteText
  2741 ;;		_lcdWriteRotText
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2745                           	line	75
  2746                           global __ptext7
  2747                           __ptext7:	;psect for function _writeTxtChk
  2748  0279                     psect	text7
  2749                           	file	"LCD_hd44780u_qy_2004a.c"
  2750                           	line	75
  2751                           	global	__size_of_writeTxtChk
  2752                           	__size_of_writeTxtChk	equ	__end_of_writeTxtChk-_writeTxtChk
  2753  0056                     	
  2754                           _writeTxtChk:	
  2755  0279                     ;incstack = 0
  2756                           	opt	stack 8
  2757                           ; Regs used in _writeTxtChk: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2758                           ;writeTxtChk@iOpCode stored from wreg
  2759                           	movlb 0	; select bank0
  2760  0279  0020               	movwf	(writeTxtChk@iOpCode)
  2761  027A  00D0               	line	77
  2762                           	
  2763                           l1609:	
  2764  027B                     ;LCD_hd44780u_qy_2004a.c: 75: void writeTxtChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 76
                                 : {;LCD_hd44780u_qy_2004a.c: 77:   SetToSendDataToLCD();
  2765                           	fcall	_SetToSendDataToLCD
  2766  027B  3184  24D5  3182   	line	78
  2767                           	
  2768                           l1611:	
  2769  027E                     ;LCD_hd44780u_qy_2004a.c: 78:   PORTAbits.RA4 = 1;
  2770                           	movlb 0	; select bank0
  2771  027E  0020               	bsf	(12),4	;volatile
  2772  027F  160C               	line	79
  2773                           	
  2774                           l1613:	
  2775  0280                     ;LCD_hd44780u_qy_2004a.c: 79:   PORTAbits.RA7 = 0;
  2776                           	bcf	(12),7	;volatile
  2777  0280  138C               	line	80
  2778                           ;LCD_hd44780u_qy_2004a.c: 80:   switch(mWritingPosition)
  2779                           	goto	l1625
  2780  0281  2A98               	line	82
  2781                           ;LCD_hd44780u_qy_2004a.c: 81:   {;LCD_hd44780u_qy_2004a.c: 82:     case 21:
  2782                           	
  2783                           l164:	
  2784  0282                     	line	83
  2785                           	
  2786                           l1615:	
  2787  0282                     ;LCD_hd44780u_qy_2004a.c: 83:       setCursorPosition(0x40);
  2788                           	movlw	low(040h)
  2789  0282  3040               	fcall	_setCursorPosition
  2790  0283  3183  23FF  3182   	line	84
  2791                           ;LCD_hd44780u_qy_2004a.c: 84:       break;
  2792                           	goto	l1627
  2793  0286  2AAF               	line	85
  2794                           ;LCD_hd44780u_qy_2004a.c: 85:     case 41:
  2795                           	
  2796                           l166:	
  2797  0287                     	line	86
  2798                           	
  2799                           l1617:	
  2800  0287                     ;LCD_hd44780u_qy_2004a.c: 86:       setCursorPosition(0x14);
  2801                           	movlw	low(014h)
  2802  0287  3014               	fcall	_setCursorPosition
  2803  0288  3183  23FF  3182   	line	87
  2804                           ;LCD_hd44780u_qy_2004a.c: 87:       break;
  2805                           	goto	l1627
  2806  028B  2AAF               	line	88
  2807                           ;LCD_hd44780u_qy_2004a.c: 88:     case 61:
  2808                           	
  2809                           l167:	
  2810  028C                     	line	89
  2811                           	
  2812                           l1619:	
  2813  028C                     ;LCD_hd44780u_qy_2004a.c: 89:       setCursorPosition(0x54);
  2814                           	movlw	low(054h)
  2815  028C  3054               	fcall	_setCursorPosition
  2816  028D  3183  23FF  3182   	line	90
  2817                           ;LCD_hd44780u_qy_2004a.c: 90:       break;
  2818                           	goto	l1627
  2819  0290  2AAF               	line	91
  2820                           ;LCD_hd44780u_qy_2004a.c: 91:     case 81:
  2821                           	
  2822                           l168:	
  2823  0291                     	line	92
  2824                           	
  2825                           l1621:	
  2826  0291                     ;LCD_hd44780u_qy_2004a.c: 92:       setCursorPosition(0x00);
  2827                           	movlw	low(0)
  2828  0291  3000               	fcall	_setCursorPosition
  2829  0292  3183  23FF  3182   	line	93
  2830                           ;LCD_hd44780u_qy_2004a.c: 93:       break;
  2831                           	goto	l1627
  2832  0295  2AAF               	line	94
  2833                           ;LCD_hd44780u_qy_2004a.c: 94:     default:
  2834                           	
  2835                           l169:	
  2836  0296                     	line	95
  2837                           ;LCD_hd44780u_qy_2004a.c: 95:       break;
  2838                           	goto	l1627
  2839  0296  2AAF               	line	96
  2840                           	
  2841                           l1623:	
  2842  0297                     ;LCD_hd44780u_qy_2004a.c: 96:   }
  2843                           	goto	l1627
  2844  0297  2AAF               	
  2845                           l163:	
  2846  0298                     	
  2847                           l1625:	
  2848  0298                     	movlb 0	; select bank0
  2849  0298  0020               	movf	(_mWritingPosition),w
  2850  0299  0827               	movwf	(??_writeTxtChk+0)+0
  2851  029A  00CE               	clrf	(??_writeTxtChk+0)+0+1
  2852  029B  01CF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2853                           ; Switch size 1, requested type "space"
  2854                           ; Number of cases is 1, Range of values is 0 to 0
  2855                           ; switch strategies available:
  2856                           ; Name         Instructions Cycles
  2857                           ; simple_byte            4     3 (average)
  2858                           ; direct_byte            8     6 (fixed)
  2859                           ; jumptable            260     6 (fixed)
  2860                           ;	Chosen strategy is simple_byte
  2861                           
  2862                           	movf 1+(??_writeTxtChk+0)+0,w
  2863  029C  084F               	opt asmopt_push
  2864                           	opt asmopt_off
  2865                           	xorlw	0^0	; case 0
  2866  029D  3A00               	skipnz
  2867  029E  1903               	goto	l1913
  2868  029F  2AA1               	goto	l1627
  2869  02A0  2AAF               	opt asmopt_pop
  2870                           	
  2871                           l1913:	
  2872  02A1                     ; Switch size 1, requested type "space"
  2873                           ; Number of cases is 4, Range of values is 21 to 81
  2874                           ; switch strategies available:
  2875                           ; Name         Instructions Cycles
  2876                           ; simple_byte           13     7 (average)
  2877                           ; direct_byte          131     9 (fixed)
  2878                           ; jumptable            263     9 (fixed)
  2879                           ;	Chosen strategy is simple_byte
  2880                           
  2881                           	movf 0+(??_writeTxtChk+0)+0,w
  2882  02A1  084E               	opt asmopt_push
  2883                           	opt asmopt_off
  2884                           	xorlw	21^0	; case 21
  2885  02A2  3A15               	skipnz
  2886  02A3  1903               	goto	l1615
  2887  02A4  2A82               	xorlw	41^21	; case 41
  2888  02A5  3A3C               	skipnz
  2889  02A6  1903               	goto	l1617
  2890  02A7  2A87               	xorlw	61^41	; case 61
  2891  02A8  3A14               	skipnz
  2892  02A9  1903               	goto	l1619
  2893  02AA  2A8C               	xorlw	81^61	; case 81
  2894  02AB  3A6C               	skipnz
  2895  02AC  1903               	goto	l1621
  2896  02AD  2A91               	goto	l1627
  2897  02AE  2AAF               	opt asmopt_pop
  2898                           
  2899                           	
  2900                           l165:	
  2901  02AF                     	line	97
  2902                           	
  2903                           l1627:	
  2904  02AF                     ;LCD_hd44780u_qy_2004a.c: 97:   waitLCDBusy();
  2905                           	fcall	_waitLCDBusy
  2906  02AF  3183  235B  3182   	line	98
  2907                           	
  2908                           l1629:	
  2909  02B2                     ;LCD_hd44780u_qy_2004a.c: 98:   SetToSendDataToLCD();
  2910                           	fcall	_SetToSendDataToLCD
  2911  02B2  3184  24D5  3182   	line	99
  2912                           	
  2913                           l1631:	
  2914  02B5                     ;LCD_hd44780u_qy_2004a.c: 99:   PORTAbits.RA4 = 1;
  2915                           	movlb 0	; select bank0
  2916  02B5  0020               	bsf	(12),4	;volatile
  2917  02B6  160C               	line	100
  2918                           	
  2919                           l1633:	
  2920  02B7                     ;LCD_hd44780u_qy_2004a.c: 100:   PORTAbits.RA7 = 0;
  2921                           	bcf	(12),7	;volatile
  2922  02B7  138C               	line	101
  2923                           	
  2924                           l1635:	
  2925  02B8                     ;LCD_hd44780u_qy_2004a.c: 101:   setData(iOpCode >> 4);
  2926                           	movf	(writeTxtChk@iOpCode),w
  2927  02B8  0850               	movwf	(??_writeTxtChk+0)+0
  2928  02B9  00CE               	movlw	04h
  2929  02BA  3004               u745:
  2930  02BB                     	lsrf	(??_writeTxtChk+0)+0,f
  2931  02BB  36CE               	decfsz	wreg,f
  2932  02BC  0B89               	goto	u745
  2933  02BD  2ABB               	movf	0+(??_writeTxtChk+0)+0,w
  2934  02BE  084E               	fcall	_setData
  2935  02BF  3183  231F  3182   	line	102
  2936                           	
  2937                           l1637:	
  2938  02C2                     ;LCD_hd44780u_qy_2004a.c: 102:   setData(iOpCode);
  2939                           	movlb 0	; select bank0
  2940  02C2  0020               	movf	(writeTxtChk@iOpCode),w
  2941  02C3  0850               	fcall	_setData
  2942  02C4  3183  231F  3182   	line	103
  2943                           	
  2944                           l1639:	
  2945  02C7                     ;LCD_hd44780u_qy_2004a.c: 103:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  2946                           		opt asmopt_push
  2947                           	opt asmopt_off
  2948                           	nop2	;2 cycle nop
  2949  02C7  3200               	nop2	;2 cycle nop
  2950  02C8  3200               	opt asmopt_pop
  2951                           
  2952                           	line	104
  2953                           	
  2954                           l1641:	
  2955  02C9                     ;LCD_hd44780u_qy_2004a.c: 104:   mWritingPosition++;
  2956                           	movlw	low(01h)
  2957  02C9  3001               	movlb 0	; select bank0
  2958  02CA  0020               	movwf	(??_writeTxtChk+0)+0
  2959  02CB  00CE               	movf	(??_writeTxtChk+0)+0,w
  2960  02CC  084E               	addwf	(_mWritingPosition),f
  2961  02CD  07A7               	line	105
  2962                           	
  2963                           l170:	
  2964  02CE                     	return
  2965  02CE  0008               	opt stack 0
  2966                           GLOBAL	__end_of_writeTxtChk
  2967                           	__end_of_writeTxtChk:
  2968  02CF                     	signat	_writeTxtChk,4217
  2969                           	global	_setCursorPosition
  2970                           
  2971 ;; *************** function _setCursorPosition *****************
  2972 ;; Defined at:
  2973 ;;		line 229 in file "LCD_hd44780u_qy_2004a.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  iPosition       1    wreg     unsigned char 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  iPosition       1   15[BANK0 ] unsigned char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      void 
  2980 ;; Registers used:
  2981 ;;		wreg, status,2, status,0, pclath, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2988 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  2989 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  2990 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  2991 ;;Total ram usage:        2 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    5
  2994 ;; This function calls:
  2995 ;;		_SetToSendDataToLCD
  2996 ;;		_setData
  2997 ;;		_waitLCDBusy
  2998 ;; This function is called by:
  2999 ;;		_main
  3000 ;;		_writeTxtChk
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3004                           	line	229
  3005                           global __ptext8
  3006                           __ptext8:	;psect for function _setCursorPosition
  3007  03FF                     psect	text8
  3008                           	file	"LCD_hd44780u_qy_2004a.c"
  3009                           	line	229
  3010                           	global	__size_of_setCursorPosition
  3011                           	__size_of_setCursorPosition	equ	__end_of_setCursorPosition-_setCursorPosition
  3012  0021                     	
  3013                           _setCursorPosition:	
  3014  03FF                     ;incstack = 0
  3015                           	opt	stack 10
  3016                           ; Regs used in _setCursorPosition: [wreg+status,2+status,0+pclath+cstack]
  3017                           ;setCursorPosition@iPosition stored from wreg
  3018                           	movlb 0	; select bank0
  3019  03FF  0020               	movwf	(setCursorPosition@iPosition)
  3020  0400  00CD               	line	231
  3021                           	
  3022                           l1593:	
  3023  0401                     ;LCD_hd44780u_qy_2004a.c: 229: void setCursorPosition(char iPosition);LCD_hd44780u_qy_20
                                 04a.c: 230: {;LCD_hd44780u_qy_2004a.c: 231:   waitLCDBusy();
  3024                           	fcall	_waitLCDBusy
  3025  0401  3183  235B  3183   	line	233
  3026                           	
  3027                           l1595:	
  3028  0404                     ;LCD_hd44780u_qy_2004a.c: 233:   SetToSendDataToLCD();
  3029                           	fcall	_SetToSendDataToLCD
  3030  0404  3184  24D5  3183   	line	234
  3031                           	
  3032                           l1597:	
  3033  0407                     ;LCD_hd44780u_qy_2004a.c: 234:   PORTAbits.RA4 = 0;
  3034                           	movlb 0	; select bank0
  3035  0407  0020               	bcf	(12),4	;volatile
  3036  0408  120C               	line	235
  3037                           	
  3038                           l1599:	
  3039  0409                     ;LCD_hd44780u_qy_2004a.c: 235:   PORTAbits.RA7 = 0;
  3040                           	bcf	(12),7	;volatile
  3041  0409  138C               	line	236
  3042                           	
  3043                           l1601:	
  3044  040A                     ;LCD_hd44780u_qy_2004a.c: 236:   setData((iPosition >> 4) | 0x8 );
  3045                           	movf	(setCursorPosition@iPosition),w
  3046  040A  084D               	movwf	(??_setCursorPosition+0)+0
  3047  040B  00CC               	movlw	04h
  3048  040C  3004               u735:
  3049  040D                     	lsrf	(??_setCursorPosition+0)+0,f
  3050  040D  36CC               	decfsz	wreg,f
  3051  040E  0B89               	goto	u735
  3052  040F  2C0D               	movf	0+(??_setCursorPosition+0)+0,w
  3053  0410  084C               	iorlw	08h
  3054  0411  3808               	fcall	_setData
  3055  0412  3183  231F  3183   	line	237
  3056                           	
  3057                           l1603:	
  3058  0415                     ;LCD_hd44780u_qy_2004a.c: 237:   setData(iPosition);
  3059                           	movlb 0	; select bank0
  3060  0415  0020               	movf	(setCursorPosition@iPosition),w
  3061  0416  084D               	fcall	_setData
  3062  0417  3183  231F  3183   	line	238
  3063                           ;LCD_hd44780u_qy_2004a.c: 238:   mWritingPosition = iPosition;
  3064                           	movlb 0	; select bank0
  3065  041A  0020               	movf	(setCursorPosition@iPosition),w
  3066  041B  084D               	movwf	(??_setCursorPosition+0)+0
  3067  041C  00CC               	movf	(??_setCursorPosition+0)+0,w
  3068  041D  084C               	movwf	(_mWritingPosition)
  3069  041E  00A7               	line	239
  3070                           	
  3071                           l233:	
  3072  041F                     	return
  3073  041F  0008               	opt stack 0
  3074                           GLOBAL	__end_of_setCursorPosition
  3075                           	__end_of_setCursorPosition:
  3076  0420                     	signat	_setCursorPosition,4217
  3077                           	global	_initLCD
  3078                           
  3079 ;; *************** function _initLCD *****************
  3080 ;; Defined at:
  3081 ;;		line 7 in file "LCD_hd44780u_qy_2004a.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;		None
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;		None
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      void 
  3088 ;; Registers used:
  3089 ;;		wreg, status,2, status,0, pclath, cstack
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3097 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3098 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3099 ;;Total ram usage:        1 bytes
  3100 ;; Hardware stack levels used:    1
  3101 ;; Hardware stack levels required when called:    7
  3102 ;; This function calls:
  3103 ;;		_clearDisplay
  3104 ;;		_setData
  3105 ;;		_writeInsChk
  3106 ;; This function is called by:
  3107 ;;		_main
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3111                           	line	7
  3112                           global __ptext9
  3113                           __ptext9:	;psect for function _initLCD
  3114  02CF                     psect	text9
  3115                           	file	"LCD_hd44780u_qy_2004a.c"
  3116                           	line	7
  3117                           	global	__size_of_initLCD
  3118                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  3119  0050                     	
  3120                           _initLCD:	
  3121  02CF                     ;incstack = 0
  3122                           	opt	stack 8
  3123                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  3124                           	line	10
  3125                           	
  3126                           l1699:	
  3127  02CF                     ;LCD_hd44780u_qy_2004a.c: 10:   TRISAbits.TRISA4 = 0;
  3128                           	movlb 1	; select bank1
  3129  02CF  0021               	bcf	(140)^080h,4	;volatile
  3130  02D0  120C               	line	11
  3131                           ;LCD_hd44780u_qy_2004a.c: 11:   TRISAbits.TRISA7 = 0;
  3132                           	bcf	(140)^080h,7	;volatile
  3133  02D1  138C               	line	12
  3134                           ;LCD_hd44780u_qy_2004a.c: 12:   TRISAbits.TRISA5 = 0;
  3135                           	bcf	(140)^080h,5	;volatile
  3136  02D2  128C               	line	13
  3137                           ;LCD_hd44780u_qy_2004a.c: 13:   PORTAbits.RA4 = 0;
  3138                           	movlb 0	; select bank0
  3139  02D3  0020               	bcf	(12),4	;volatile
  3140  02D4  120C               	line	14
  3141                           ;LCD_hd44780u_qy_2004a.c: 14:   PORTAbits.RA7 = 0;
  3142                           	bcf	(12),7	;volatile
  3143  02D5  138C               	line	15
  3144                           ;LCD_hd44780u_qy_2004a.c: 15:   PORTAbits.RA5 = 0;
  3145                           	bcf	(12),5	;volatile
  3146  02D6  128C               	line	18
  3147                           	
  3148                           l1701:	
  3149  02D7                     ;LCD_hd44780u_qy_2004a.c: 18:   _delay((unsigned long)((15)*(16000000/4000.0)));
  3150                           	opt asmopt_push
  3151                           opt asmopt_off
  3152                           movlw	78
  3153  02D7  304E               	movlb 0	; select bank0
  3154  02D8  0020               movwf	((??_initLCD+0)+0),f
  3155  02D9  00CD               	movlw	235
  3156  02DA  30EB               u977:
  3157  02DB                     decfsz	wreg
  3158  02DB  0B89               	goto	u977
  3159  02DC  2ADB               	decfsz	((??_initLCD+0)+0),f
  3160  02DD  0BCD               	goto	u977
  3161  02DE  2ADB               opt asmopt_pop
  3162                           
  3163                           	line	19
  3164                           	
  3165                           l1703:	
  3166  02DF                     ;LCD_hd44780u_qy_2004a.c: 19:   setData(0x3);
  3167                           	movlw	low(03h)
  3168  02DF  3003               	fcall	_setData
  3169  02E0  3183  231F  3182   	line	20
  3170                           	
  3171                           l1705:	
  3172  02E3                     ;LCD_hd44780u_qy_2004a.c: 20:   _delay((unsigned long)((5)*(16000000/4000.0)));
  3173                           	opt asmopt_push
  3174                           opt asmopt_off
  3175                           movlw	26
  3176  02E3  301A               	movlb 0	; select bank0
  3177  02E4  0020               movwf	((??_initLCD+0)+0),f
  3178  02E5  00CD               	movlw	248
  3179  02E6  30F8               u987:
  3180  02E7                     decfsz	wreg
  3181  02E7  0B89               	goto	u987
  3182  02E8  2AE7               	decfsz	((??_initLCD+0)+0),f
  3183  02E9  0BCD               	goto	u987
  3184  02EA  2AE7               	nop
  3185  02EB  0000               opt asmopt_pop
  3186                           
  3187                           	line	21
  3188                           ;LCD_hd44780u_qy_2004a.c: 21:   setData(0x3);
  3189                           	movlw	low(03h)
  3190  02EC  3003               	fcall	_setData
  3191  02ED  3183  231F  3182   	line	22
  3192                           	
  3193                           l1707:	
  3194  02F0                     ;LCD_hd44780u_qy_2004a.c: 22:   _delay((unsigned long)((150)*(16000000/4000000.0)));
  3195                           	opt asmopt_push
  3196                           opt asmopt_off
  3197                           	movlw	200
  3198  02F0  30C8               u997:
  3199  02F1                     decfsz	wreg
  3200  02F1  0B89               	goto	u997
  3201  02F2  2AF1               opt asmopt_pop
  3202                           
  3203                           	line	23
  3204                           	
  3205                           l1709:	
  3206  02F3                     ;LCD_hd44780u_qy_2004a.c: 23:   setData(0x3);
  3207                           	movlw	low(03h)
  3208  02F3  3003               	fcall	_setData
  3209  02F4  3183  231F  3182   	line	24
  3210                           ;LCD_hd44780u_qy_2004a.c: 24:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  3211                           	opt asmopt_push
  3212                           opt asmopt_off
  3213                           	movlw	13
  3214  02F7  300D               u1007:
  3215  02F8                     decfsz	wreg
  3216  02F8  0B89               	goto	u1007
  3217  02F9  2AF8               	nop
  3218  02FA  0000               opt asmopt_pop
  3219                           
  3220                           	line	25
  3221                           	
  3222                           l1711:	
  3223  02FB                     ;LCD_hd44780u_qy_2004a.c: 25:   setData(0x2);
  3224                           	movlw	low(02h)
  3225  02FB  3002               	fcall	_setData
  3226  02FC  3183  231F  3182   	line	26
  3227                           	
  3228                           l1713:	
  3229  02FF                     ;LCD_hd44780u_qy_2004a.c: 26:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  3230                           	opt asmopt_push
  3231                           opt asmopt_off
  3232                           	movlw	13
  3233  02FF  300D               u1017:
  3234  0300                     decfsz	wreg
  3235  0300  0B89               	goto	u1017
  3236  0301  2B00               	nop
  3237  0302  0000               opt asmopt_pop
  3238                           
  3239                           	line	27
  3240                           ;LCD_hd44780u_qy_2004a.c: 27:   writeInsChk(0x28);
  3241                           	movlw	low(028h)
  3242  0303  3028               	fcall	_writeInsChk
  3243  0304  3184  24B3  3182   	line	28
  3244                           	
  3245                           l1715:	
  3246  0307                     ;LCD_hd44780u_qy_2004a.c: 28:   mDisplayOnOffReg = 0x0F;
  3247                           	movlw	low(0Fh)
  3248  0307  300F               	movlb 0	; select bank0
  3249  0308  0020               	movwf	(??_initLCD+0)+0
  3250  0309  00CD               	movf	(??_initLCD+0)+0,w
  3251  030A  084D               	movwf	(_mDisplayOnOffReg)
  3252  030B  00A9               	line	29
  3253                           	
  3254                           l1717:	
  3255  030C                     ;LCD_hd44780u_qy_2004a.c: 29:   mCursorDisplayShiftReg= 0x06;
  3256                           	movlw	low(06h)
  3257  030C  3006               	movwf	(??_initLCD+0)+0
  3258  030D  00CD               	movf	(??_initLCD+0)+0,w
  3259  030E  084D               	movwf	(_mCursorDisplayShiftReg)
  3260  030F  00A8               	line	30
  3261                           ;LCD_hd44780u_qy_2004a.c: 30:   writeInsChk(mDisplayOnOffReg);
  3262                           	movf	(_mDisplayOnOffReg),w
  3263  0310  0829               	fcall	_writeInsChk
  3264  0311  3184  24B3  3182   	line	32
  3265                           ;LCD_hd44780u_qy_2004a.c: 32:   clearDisplay();
  3266                           	fcall	_clearDisplay
  3267  0314  3184  24E1  3182   	line	33
  3268                           ;LCD_hd44780u_qy_2004a.c: 33:   writeInsChk(0x06);
  3269                           	movlw	low(06h)
  3270  0317  3006               	fcall	_writeInsChk
  3271  0318  3184  24B3  3182   	line	34
  3272                           	
  3273                           l1719:	
  3274  031B                     ;LCD_hd44780u_qy_2004a.c: 34:   mWritingPosition=1;
  3275                           	movlb 0	; select bank0
  3276  031B  0020               	clrf	(_mWritingPosition)
  3277  031C  01A7               	incf	(_mWritingPosition),f
  3278  031D  0AA7               	line	36
  3279                           	
  3280                           l142:	
  3281  031E                     	return
  3282  031E  0008               	opt stack 0
  3283                           GLOBAL	__end_of_initLCD
  3284                           	__end_of_initLCD:
  3285  031F                     	signat	_initLCD,89
  3286                           	global	_clearDisplay
  3287                           
  3288 ;; *************** function _clearDisplay *****************
  3289 ;; Defined at:
  3290 ;;		line 220 in file "LCD_hd44780u_qy_2004a.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;		None
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;		None
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, status,0, pclath, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3308 ;;Total ram usage:        0 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:    6
  3311 ;; This function calls:
  3312 ;;		_writeInsChk
  3313 ;; This function is called by:
  3314 ;;		_main
  3315 ;;		_initLCD
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3319                           	line	220
  3320                           global __ptext10
  3321                           __ptext10:	;psect for function _clearDisplay
  3322  04E1                     psect	text10
  3323                           	file	"LCD_hd44780u_qy_2004a.c"
  3324                           	line	220
  3325                           	global	__size_of_clearDisplay
  3326                           	__size_of_clearDisplay	equ	__end_of_clearDisplay-_clearDisplay
  3327  0005                     	
  3328                           _clearDisplay:	
  3329  04E1                     ;incstack = 0
  3330                           	opt	stack 8
  3331                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  3332                           	line	222
  3333                           	
  3334                           l1607:	
  3335  04E1                     ;LCD_hd44780u_qy_2004a.c: 222:   writeInsChk(0x01);
  3336                           	movlw	low(01h)
  3337  04E1  3001               	fcall	_writeInsChk
  3338  04E2  3184  24B3  3184   	line	223
  3339                           	
  3340                           l227:	
  3341  04E5                     	return
  3342  04E5  0008               	opt stack 0
  3343                           GLOBAL	__end_of_clearDisplay
  3344                           	__end_of_clearDisplay:
  3345  04E6                     	signat	_clearDisplay,89
  3346                           	global	_writeInsChk
  3347                           
  3348 ;; *************** function _writeInsChk *****************
  3349 ;; Defined at:
  3350 ;;		line 107 in file "LCD_hd44780u_qy_2004a.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  iOpCode         1    wreg     unsigned char 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  iOpCode         1   14[BANK0 ] unsigned char 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, status,2, status,0, pclath, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3365 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3367 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3368 ;;Total ram usage:        1 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    5
  3371 ;; This function calls:
  3372 ;;		_waitLCDBusy
  3373 ;;		_writeInsNoChk
  3374 ;; This function is called by:
  3375 ;;		_initLCD
  3376 ;;		_powerOnLcd
  3377 ;;		_setNotBlinkingCursor
  3378 ;;		_setCursorOff
  3379 ;;		_clearDisplay
  3380 ;;		_moveCursorToHome
  3381 ;;		_powerOffLcd
  3382 ;;		_setBlinkingCursor
  3383 ;;		_setCursorOn
  3384 ;;		_setCursorMovingLeft
  3385 ;;		_setCursorMovingRight
  3386 ;;		_setDisplayMovingRight
  3387 ;;		_setDisplayMovingLeft
  3388 ;;		_moveCursorRight
  3389 ;;		_moveCursorLeft
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3393                           	line	107
  3394                           global __ptext11
  3395                           __ptext11:	;psect for function _writeInsChk
  3396  04B3                     psect	text11
  3397                           	file	"LCD_hd44780u_qy_2004a.c"
  3398                           	line	107
  3399                           	global	__size_of_writeInsChk
  3400                           	__size_of_writeInsChk	equ	__end_of_writeInsChk-_writeInsChk
  3401  000B                     	
  3402                           _writeInsChk:	
  3403  04B3                     ;incstack = 0
  3404                           	opt	stack 9
  3405                           ; Regs used in _writeInsChk: [wreg+status,2+status,0+pclath+cstack]
  3406                           ;writeInsChk@iOpCode stored from wreg
  3407                           	movlb 0	; select bank0
  3408  04B3  0020               	movwf	(writeInsChk@iOpCode)
  3409  04B4  00CC               	line	109
  3410                           	
  3411                           l1605:	
  3412  04B5                     ;LCD_hd44780u_qy_2004a.c: 107: void writeInsChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 08: {;LCD_hd44780u_qy_2004a.c: 109:   waitLCDBusy();
  3413                           	fcall	_waitLCDBusy
  3414  04B5  3183  235B  3184   	line	110
  3415                           ;LCD_hd44780u_qy_2004a.c: 110:   writeInsNoChk(iOpCode);
  3416                           	movlb 0	; select bank0
  3417  04B8  0020               	movf	(writeInsChk@iOpCode),w
  3418  04B9  084C               	fcall	_writeInsNoChk
  3419  04BA  3184  2456  3184   	line	111
  3420                           	
  3421                           l173:	
  3422  04BD                     	return
  3423  04BD  0008               	opt stack 0
  3424                           GLOBAL	__end_of_writeInsChk
  3425                           	__end_of_writeInsChk:
  3426  04BE                     	signat	_writeInsChk,4217
  3427                           	global	_writeInsNoChk
  3428                           
  3429 ;; *************** function _writeInsNoChk *****************
  3430 ;; Defined at:
  3431 ;;		line 113 in file "LCD_hd44780u_qy_2004a.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  iOpCode         1    wreg     unsigned char 
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;  iOpCode         1   13[BANK0 ] unsigned char 
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  1    wreg      void 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0, pclath, cstack
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3446 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3447 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3448 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  3449 ;;Total ram usage:        2 bytes
  3450 ;; Hardware stack levels used:    1
  3451 ;; Hardware stack levels required when called:    4
  3452 ;; This function calls:
  3453 ;;		_SetToSendDataToLCD
  3454 ;;		_setData
  3455 ;; This function is called by:
  3456 ;;		_writeInsChk
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3460                           	line	113
  3461                           global __ptext12
  3462                           __ptext12:	;psect for function _writeInsNoChk
  3463  0456                     psect	text12
  3464                           	file	"LCD_hd44780u_qy_2004a.c"
  3465                           	line	113
  3466                           	global	__size_of_writeInsNoChk
  3467                           	__size_of_writeInsNoChk	equ	__end_of_writeInsNoChk-_writeInsNoChk
  3468  0018                     	
  3469                           _writeInsNoChk:	
  3470  0456                     ;incstack = 0
  3471                           	opt	stack 9
  3472                           ; Regs used in _writeInsNoChk: [wreg+status,2+status,0+pclath+cstack]
  3473                           ;writeInsNoChk@iOpCode stored from wreg
  3474                           	movlb 0	; select bank0
  3475  0456  0020               	movwf	(writeInsNoChk@iOpCode)
  3476  0457  00CB               	line	115
  3477                           	
  3478                           l1583:	
  3479  0458                     ;LCD_hd44780u_qy_2004a.c: 113: void writeInsNoChk(char iOpCode);LCD_hd44780u_qy_2004a.c:
                                  114: {;LCD_hd44780u_qy_2004a.c: 115:   SetToSendDataToLCD();
  3480                           	fcall	_SetToSendDataToLCD
  3481  0458  3184  24D5  3184   	line	116
  3482                           	
  3483                           l1585:	
  3484  045B                     ;LCD_hd44780u_qy_2004a.c: 116:   PORTAbits.RA4 = 0;
  3485                           	movlb 0	; select bank0
  3486  045B  0020               	bcf	(12),4	;volatile
  3487  045C  120C               	line	117
  3488                           	
  3489                           l1587:	
  3490  045D                     ;LCD_hd44780u_qy_2004a.c: 117:   PORTAbits.RA7 = 0;
  3491                           	bcf	(12),7	;volatile
  3492  045D  138C               	line	118
  3493                           	
  3494                           l1589:	
  3495  045E                     ;LCD_hd44780u_qy_2004a.c: 118:   setData(iOpCode >> 4);
  3496                           	movf	(writeInsNoChk@iOpCode),w
  3497  045E  084B               	movwf	(??_writeInsNoChk+0)+0
  3498  045F  00CA               	movlw	04h
  3499  0460  3004               u725:
  3500  0461                     	lsrf	(??_writeInsNoChk+0)+0,f
  3501  0461  36CA               	decfsz	wreg,f
  3502  0462  0B89               	goto	u725
  3503  0463  2C61               	movf	0+(??_writeInsNoChk+0)+0,w
  3504  0464  084A               	fcall	_setData
  3505  0465  3183  231F  3184   	line	119
  3506                           	
  3507                           l1591:	
  3508  0468                     ;LCD_hd44780u_qy_2004a.c: 119:   setData(iOpCode);
  3509                           	movlb 0	; select bank0
  3510  0468  0020               	movf	(writeInsNoChk@iOpCode),w
  3511  0469  084B               	fcall	_setData
  3512  046A  3183  231F  3184   	line	120
  3513                           	
  3514                           l176:	
  3515  046D                     	return
  3516  046D  0008               	opt stack 0
  3517                           GLOBAL	__end_of_writeInsNoChk
  3518                           	__end_of_writeInsNoChk:
  3519  046E                     	signat	_writeInsNoChk,4217
  3520                           	global	_setData
  3521                           
  3522 ;; *************** function _setData *****************
  3523 ;; Defined at:
  3524 ;;		line 63 in file "LCD_hd44780u_qy_2004a.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;  iValue          1    wreg     unsigned char 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  iValue          1   11[BANK0 ] unsigned char 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      void 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, status,0
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3539 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3540 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  3541 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  3542 ;;Total ram usage:        3 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    3
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		_initLCD
  3549 ;;		_writeTxtChk
  3550 ;;		_writeInsNoChk
  3551 ;;		_setCursorPosition
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  3555                           	line	63
  3556                           global __ptext13
  3557                           __ptext13:	;psect for function _setData
  3558  031F                     psect	text13
  3559                           	file	"LCD_hd44780u_qy_2004a.c"
  3560                           	line	63
  3561                           	global	__size_of_setData
  3562                           	__size_of_setData	equ	__end_of_setData-_setData
  3563  003C                     	
  3564                           _setData:	
  3565  031F                     ;incstack = 0
  3566                           	opt	stack 9
  3567                           ; Regs used in _setData: [wreg+status,2+status,0]
  3568                           ;setData@iValue stored from wreg
  3569                           	movlb 0	; select bank0
  3570  031F  0020               	movwf	(setData@iValue)
  3571  0320  00C9               	line	65
  3572                           	
  3573                           l1553:	
  3574  0321                     ;LCD_hd44780u_qy_2004a.c: 63: void setData(char iValue);LCD_hd44780u_qy_2004a.c: 64: {;L
                                 CD_hd44780u_qy_2004a.c: 65:   PORTAbits.RA5 = 1;
  3575                           	bsf	(12),5	;volatile
  3576  0321  168C               	line	66
  3577                           	
  3578                           l1555:	
  3579  0322                     ;LCD_hd44780u_qy_2004a.c: 66:   PORTAbits.RA3 = (iValue & 0x8) >> 3;
  3580                           	movf	(setData@iValue),w
  3581  0322  0849               	movwf	(??_setData+0)+0
  3582  0323  00C7               	movlw	03h
  3583  0324  3003               u695:
  3584  0325                     	lsrf	(??_setData+0)+0,f
  3585  0325  36C7               	decfsz	wreg,f
  3586  0326  0B89               	goto	u695
  3587  0327  2B25               	movf	0+(??_setData+0)+0,w
  3588  0328  0847               	andlw	01h
  3589  0329  3901               	movwf	(??_setData+1)+0
  3590  032A  00C8               	rlf	(??_setData+1)+0,f
  3591  032B  0DC8               	rlf	(??_setData+1)+0,f
  3592  032C  0DC8               	rlf	(??_setData+1)+0,f
  3593  032D  0DC8               	movf	(12),w	;volatile
  3594  032E  080C               	xorwf	(??_setData+1)+0,w
  3595  032F  0648               	andlw	not (((1<<1)-1)<<3)
  3596  0330  39F7               	xorwf	(??_setData+1)+0,w
  3597  0331  0648               	movwf	(12)	;volatile
  3598  0332  008C               	line	67
  3599                           ;LCD_hd44780u_qy_2004a.c: 67:   PORTAbits.RA2 = (iValue & 0x4) >> 2;
  3600                           	movf	(setData@iValue),w
  3601  0333  0849               	movwf	(??_setData+0)+0
  3602  0334  00C7               	movlw	02h
  3603  0335  3002               u705:
  3604  0336                     	lsrf	(??_setData+0)+0,f
  3605  0336  36C7               	decfsz	wreg,f
  3606  0337  0B89               	goto	u705
  3607  0338  2B36               	movf	0+(??_setData+0)+0,w
  3608  0339  0847               	andlw	01h
  3609  033A  3901               	movwf	(??_setData+1)+0
  3610  033B  00C8               	rlf	(??_setData+1)+0,f
  3611  033C  0DC8               	rlf	(??_setData+1)+0,f
  3612  033D  0DC8               	movf	(12),w	;volatile
  3613  033E  080C               	xorwf	(??_setData+1)+0,w
  3614  033F  0648               	andlw	not (((1<<1)-1)<<2)
  3615  0340  39FB               	xorwf	(??_setData+1)+0,w
  3616  0341  0648               	movwf	(12)	;volatile
  3617  0342  008C               	line	68
  3618                           ;LCD_hd44780u_qy_2004a.c: 68:   PORTAbits.RA1 = (iValue & 0x2) >> 1;
  3619                           	lsrf	(setData@iValue),w
  3620  0343  3649               	andlw	01h
  3621  0344  3901               	movwf	(??_setData+0)+0
  3622  0345  00C7               	rlf	(??_setData+0)+0,f
  3623  0346  0DC7               	movf	(12),w	;volatile
  3624  0347  080C               	xorwf	(??_setData+0)+0,w
  3625  0348  0647               	andlw	not (((1<<1)-1)<<1)
  3626  0349  39FD               	xorwf	(??_setData+0)+0,w
  3627  034A  0647               	movwf	(12)	;volatile
  3628  034B  008C               	line	69
  3629                           ;LCD_hd44780u_qy_2004a.c: 69:   PORTAbits.RA0 = (iValue & 0x1) ;
  3630                           	movlw	low(01h)
  3631  034C  3001               	andwf	(setData@iValue),w
  3632  034D  0549               	movwf	(??_setData+0)+0
  3633  034E  00C7               	movf	(12),w	;volatile
  3634  034F  080C               	xorwf	0+(??_setData+0)+0,w
  3635  0350  0647               	andlw	not ((1<<1)-1)
  3636  0351  39FE               	xorwf	0+(??_setData+0)+0,w
  3637  0352  0647               	movwf	(12)	;volatile
  3638  0353  008C               	line	70
  3639                           	
  3640                           l1557:	
  3641  0354                     ;LCD_hd44780u_qy_2004a.c: 70:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  3642                           		opt asmopt_push
  3643                           	opt asmopt_off
  3644                           	nop2	;2 cycle nop
  3645  0354  3200               	nop2	;2 cycle nop
  3646  0355  3200               	opt asmopt_pop
  3647                           
  3648                           	line	71
  3649                           	
  3650                           l1559:	
  3651  0356                     ;LCD_hd44780u_qy_2004a.c: 71:   PORTAbits.RA5 = 0;
  3652                           	movlb 0	; select bank0
  3653  0356  0020               	bcf	(12),5	;volatile
  3654  0357  128C               	line	72
  3655                           	
  3656                           l1561:	
  3657  0358                     ;LCD_hd44780u_qy_2004a.c: 72:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  3658                           		opt asmopt_push
  3659                           	opt asmopt_off
  3660                           	nop2	;2 cycle nop
  3661  0358  3200               	nop2	;2 cycle nop
  3662  0359  3200               	opt asmopt_pop
  3663                           
  3664                           	line	73
  3665                           	
  3666                           l160:	
  3667  035A                     	return
  3668  035A  0008               	opt stack 0
  3669                           GLOBAL	__end_of_setData
  3670                           	__end_of_setData:
  3671  035B                     	signat	_setData,4217
  3672                           	global	_SetToSendDataToLCD
  3673                           
  3674 ;; *************** function _SetToSendDataToLCD *****************
  3675 ;; Defined at:
  3676 ;;		line 129 in file "LCD_hd44780u_qy_2004a.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;		None
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;		None
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      void 
  3683 ;; Registers used:
  3684 ;;		None
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3694 ;;Total ram usage:        0 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; Hardware stack levels required when called:    3
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		_writeTxtChk
  3701 ;;		_writeInsNoChk
  3702 ;;		_setCursorPosition
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  3706                           	line	129
  3707                           global __ptext14
  3708                           __ptext14:	;psect for function _SetToSendDataToLCD
  3709  04D5                     psect	text14
  3710                           	file	"LCD_hd44780u_qy_2004a.c"
  3711                           	line	129
  3712                           	global	__size_of_SetToSendDataToLCD
  3713                           	__size_of_SetToSendDataToLCD	equ	__end_of_SetToSendDataToLCD-_SetToSendDataToLCD
  3714  0006                     	
  3715                           _SetToSendDataToLCD:	
  3716  04D5                     ;incstack = 0
  3717                           	opt	stack 9
  3718                           ; Regs used in _SetToSendDataToLCD: []
  3719                           	line	131
  3720                           	
  3721                           l1563:	
  3722  04D5                     ;LCD_hd44780u_qy_2004a.c: 131:   TRISAbits.TRISA3 = 0;;
  3723                           	movlb 1	; select bank1
  3724  04D5  0021               	bcf	(140)^080h,3	;volatile
  3725  04D6  118C               	line	132
  3726                           ;LCD_hd44780u_qy_2004a.c: 132:   TRISAbits.TRISA2 = 0;;
  3727                           	bcf	(140)^080h,2	;volatile
  3728  04D7  110C               	line	133
  3729                           ;LCD_hd44780u_qy_2004a.c: 133:   TRISAbits.TRISA1 = 0;;
  3730                           	bcf	(140)^080h,1	;volatile
  3731  04D8  108C               	line	134
  3732                           ;LCD_hd44780u_qy_2004a.c: 134:   TRISAbits.TRISA0 = 0;;
  3733                           	bcf	(140)^080h,0	;volatile
  3734  04D9  100C               	line	135
  3735                           	
  3736                           l182:	
  3737  04DA                     	return
  3738  04DA  0008               	opt stack 0
  3739                           GLOBAL	__end_of_SetToSendDataToLCD
  3740                           	__end_of_SetToSendDataToLCD:
  3741  04DB                     	signat	_SetToSendDataToLCD,89
  3742                           	global	_waitLCDBusy
  3743                           
  3744 ;; *************** function _waitLCDBusy *****************
  3745 ;; Defined at:
  3746 ;;		line 137 in file "LCD_hd44780u_qy_2004a.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;  busyFlag        2   12[BANK0 ] int 
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, status,2, status,0, pclath, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3761 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  3762 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  3763 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  3764 ;;Total ram usage:        5 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; Hardware stack levels required when called:    4
  3767 ;; This function calls:
  3768 ;;		_SetToReadDataFromLCD
  3769 ;; This function is called by:
  3770 ;;		_writeTxtChk
  3771 ;;		_writeInsChk
  3772 ;;		_setCursorPosition
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  3776                           	line	137
  3777                           global __ptext15
  3778                           __ptext15:	;psect for function _waitLCDBusy
  3779  035B                     psect	text15
  3780                           	file	"LCD_hd44780u_qy_2004a.c"
  3781                           	line	137
  3782                           	global	__size_of_waitLCDBusy
  3783                           	__size_of_waitLCDBusy	equ	__end_of_waitLCDBusy-_waitLCDBusy
  3784  002D                     	
  3785                           _waitLCDBusy:	
  3786  035B                     ;incstack = 0
  3787                           	opt	stack 9
  3788                           ; Regs used in _waitLCDBusy: [wreg+status,2+status,0+pclath+cstack]
  3789                           	line	139
  3790                           	
  3791                           l1567:	
  3792  035B                     ;LCD_hd44780u_qy_2004a.c: 139:   PORTAbits.RA4 = 0;
  3793                           	movlb 0	; select bank0
  3794  035B  0020               	bcf	(12),4	;volatile
  3795  035C  120C               	line	140
  3796                           ;LCD_hd44780u_qy_2004a.c: 140:   PORTAbits.RA7 = 1;
  3797                           	bsf	(12),7	;volatile
  3798  035D  178C               	line	142
  3799                           	
  3800                           l1569:	
  3801  035E                     ;LCD_hd44780u_qy_2004a.c: 142:   SetToReadDataFromLCD();
  3802                           	fcall	_SetToReadDataFromLCD
  3803  035E  3184  24DB  3183   	line	144
  3804                           	
  3805                           l1571:	
  3806  0361                     ;LCD_hd44780u_qy_2004a.c: 144:   int busyFlag = 1;
  3807                           	movlw	01h
  3808  0361  3001               	movlb 0	; select bank0
  3809  0362  0020               	movwf	(waitLCDBusy@busyFlag)
  3810  0363  00CA               	movlw	0
  3811  0364  3000               	movwf	((waitLCDBusy@busyFlag))+1
  3812  0365  00CB               	line	145
  3813                           ;LCD_hd44780u_qy_2004a.c: 145:   while(busyFlag == 1)
  3814                           	goto	l185
  3815  0366  2B7F               	
  3816                           l186:	
  3817  0367                     	line	148
  3818                           ;LCD_hd44780u_qy_2004a.c: 146:   {;LCD_hd44780u_qy_2004a.c: 148:     PORTAbits.RA5 = 1;

  3819                           	bsf	(12),5	;volatile
  3820  0367  168C               	line	149
  3821                           ;LCD_hd44780u_qy_2004a.c: 149:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  3822                           		opt asmopt_push
  3823                           	opt asmopt_off
  3824                           	nop2	;2 cycle nop
  3825  0368  3200               	nop2	;2 cycle nop
  3826  0369  3200               	opt asmopt_pop
  3827                           
  3828                           	line	150
  3829                           	
  3830                           l1573:	
  3831  036A                     ;LCD_hd44780u_qy_2004a.c: 150:     busyFlag = PORTAbits.RA3;
  3832                           	movlb 0	; select bank0
  3833  036A  0020               	rrf	(12),w	;volatile
  3834  036B  0C0C               	movwf	(??_waitLCDBusy+0)+0
  3835  036C  00C7               	rrf	(??_waitLCDBusy+0)+0,f
  3836  036D  0CC7               	rrf	(??_waitLCDBusy+0)+0,w
  3837  036E  0C47               	andlw	(1<<1)-1
  3838  036F  3901               	movwf	(??_waitLCDBusy+1)+0
  3839  0370  00C8               	clrf	(??_waitLCDBusy+1)+0+1
  3840  0371  01C9               	movf	0+(??_waitLCDBusy+1)+0,w
  3841  0372  0848               	movwf	(waitLCDBusy@busyFlag)
  3842  0373  00CA               	movf	1+(??_waitLCDBusy+1)+0,w
  3843  0374  0849               	movwf	(waitLCDBusy@busyFlag+1)
  3844  0375  00CB               	line	151
  3845                           	
  3846                           l1575:	
  3847  0376                     ;LCD_hd44780u_qy_2004a.c: 151:     PORTAbits.RA5 = 0;
  3848                           	bcf	(12),5	;volatile
  3849  0376  128C               	line	152
  3850                           	
  3851                           l1577:	
  3852  0377                     ;LCD_hd44780u_qy_2004a.c: 152:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  3853                           		opt asmopt_push
  3854                           	opt asmopt_off
  3855                           	nop2	;2 cycle nop
  3856  0377  3200               	nop2	;2 cycle nop
  3857  0378  3200               	nop2	;2 cycle nop
  3858  0379  3200               	nop2	;2 cycle nop
  3859  037A  3200               	opt asmopt_pop
  3860                           
  3861                           	line	154
  3862                           	
  3863                           l1579:	
  3864  037B                     ;LCD_hd44780u_qy_2004a.c: 154:     PORTAbits.RA5 = 1;
  3865                           	movlb 0	; select bank0
  3866  037B  0020               	bsf	(12),5	;volatile
  3867  037C  168C               	line	155
  3868                           	
  3869                           l1581:	
  3870  037D                     ;LCD_hd44780u_qy_2004a.c: 155:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  3871                           		opt asmopt_push
  3872                           	opt asmopt_off
  3873                           	nop2	;2 cycle nop
  3874  037D  3200               	nop2	;2 cycle nop
  3875  037E  3200               	opt asmopt_pop
  3876                           
  3877                           	line	156
  3878                           ;LCD_hd44780u_qy_2004a.c: 156:   }
  3879                           	
  3880                           l185:	
  3881  037F                     	line	145
  3882                           ;LCD_hd44780u_qy_2004a.c: 145:   while(busyFlag == 1)
  3883                           	movlb 0	; select bank0
  3884  037F  0020               		decf	((waitLCDBusy@busyFlag)),w
  3885  0380  034A               iorwf	((waitLCDBusy@busyFlag+1)),w
  3886  0381  044B               	btfsc	status,2
  3887  0382  1903               	goto	u711
  3888  0383  2B85               	goto	u710
  3889  0384  2B86               u711:
  3890  0385                     	goto	l186
  3891  0385  2B67               u710:
  3892  0386                     	goto	l188
  3893  0386  2B87               	
  3894                           l187:	
  3895  0387                     	line	157
  3896                           	
  3897                           l188:	
  3898  0387                     	return
  3899  0387  0008               	opt stack 0
  3900                           GLOBAL	__end_of_waitLCDBusy
  3901                           	__end_of_waitLCDBusy:
  3902  0388                     	signat	_waitLCDBusy,89
  3903                           	global	_SetToReadDataFromLCD
  3904                           
  3905 ;; *************** function _SetToReadDataFromLCD *****************
  3906 ;; Defined at:
  3907 ;;		line 122 in file "LCD_hd44780u_qy_2004a.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		None
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3925 ;;Total ram usage:        0 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    3
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_waitLCDBusy
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  3935                           	line	122
  3936                           global __ptext16
  3937                           __ptext16:	;psect for function _SetToReadDataFromLCD
  3938  04DB                     psect	text16
  3939                           	file	"LCD_hd44780u_qy_2004a.c"
  3940                           	line	122
  3941                           	global	__size_of_SetToReadDataFromLCD
  3942                           	__size_of_SetToReadDataFromLCD	equ	__end_of_SetToReadDataFromLCD-_SetToReadDataFromLCD

  3943  0006                     	
  3944                           _SetToReadDataFromLCD:	
  3945  04DB                     ;incstack = 0
  3946                           	opt	stack 9
  3947                           ; Regs used in _SetToReadDataFromLCD: []
  3948                           	line	124
  3949                           	
  3950                           l1565:	
  3951  04DB                     ;LCD_hd44780u_qy_2004a.c: 124:   TRISAbits.TRISA3 = 1;
  3952                           	movlb 1	; select bank1
  3953  04DB  0021               	bsf	(140)^080h,3	;volatile
  3954  04DC  158C               	line	125
  3955                           ;LCD_hd44780u_qy_2004a.c: 125:   TRISAbits.TRISA2 = 1;
  3956                           	bsf	(140)^080h,2	;volatile
  3957  04DD  150C               	line	126
  3958                           ;LCD_hd44780u_qy_2004a.c: 126:   TRISAbits.TRISA1 = 1;
  3959                           	bsf	(140)^080h,1	;volatile
  3960  04DE  148C               	line	127
  3961                           ;LCD_hd44780u_qy_2004a.c: 127:   TRISAbits.TRISA0 = 1;
  3962                           	bsf	(140)^080h,0	;volatile
  3963  04DF  140C               	line	128
  3964                           	
  3965                           l179:	
  3966  04E0                     	return
  3967  04E0  0008               	opt stack 0
  3968                           GLOBAL	__end_of_SetToReadDataFromLCD
  3969                           	__end_of_SetToReadDataFromLCD:
  3970  04E1                     	signat	_SetToReadDataFromLCD,89
  3971                           	global	_WakeTemp
  3972                           
  3973 ;; *************** function _WakeTemp *****************
  3974 ;; Defined at:
  3975 ;;		line 61 in file "161518_temp_main.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;		None
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      void 
  3982 ;; Registers used:
  3983 ;;		wreg, status,2, status,0
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3991 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3992 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3993 ;;Total ram usage:        1 bytes
  3994 ;; Hardware stack levels used:    1
  3995 ;; Hardware stack levels required when called:    3
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_main
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  4003                           	file	"161518_temp_main.c"
  4004                           	line	61
  4005                           global __ptext17
  4006                           __ptext17:	;psect for function _WakeTemp
  4007  0420                     psect	text17
  4008                           	file	"161518_temp_main.c"
  4009                           	line	61
  4010                           	global	__size_of_WakeTemp
  4011                           	__size_of_WakeTemp	equ	__end_of_WakeTemp-_WakeTemp
  4012  001C                     	
  4013                           _WakeTemp:	
  4014  0420                     ;incstack = 0
  4015                           	opt	stack 12
  4016                           ; Regs used in _WakeTemp: [wreg+status,2+status,0]
  4017                           	line	63
  4018                           	
  4019                           l1647:	
  4020  0420                     		movlw	185
  4021  0420  30B9               	movlb 0	; select bank0
  4022  0421  0020               	xorwf	((_wI2CTxBuffer)),w
  4023  0422  062A               	btfsc	status,2
  4024  0423  1903               	goto	u751
  4025  0424  2C26               	goto	u750
  4026  0425  2C27               u751:
  4027  0426                     	goto	l1651
  4028  0426  2C2C               u750:
  4029  0427                     	line	65
  4030                           	
  4031                           l1649:	
  4032  0427                     	movlw	low(0B9h)
  4033  0427  30B9               	movwf	(??_WakeTemp+0)+0
  4034  0428  00C7               	movf	(??_WakeTemp+0)+0,w
  4035  0429  0847               	movwf	(_wI2CTxBuffer)
  4036  042A  00AA               	line	66
  4037                           	goto	l1653
  4038  042B  2C31               	line	67
  4039                           	
  4040                           l79:	
  4041  042C                     	line	69
  4042                           	
  4043                           l1651:	
  4044  042C                     	movlw	low(0B8h)
  4045  042C  30B8               	movwf	(??_WakeTemp+0)+0
  4046  042D  00C7               	movf	(??_WakeTemp+0)+0,w
  4047  042E  0847               	movwf	(_wI2CTxBuffer)
  4048  042F  00AA               	goto	l1653
  4049  0430  2C31               	line	70
  4050                           	
  4051                           l80:	
  4052  0431                     	line	71
  4053                           	
  4054                           l1653:	
  4055  0431                     	movf	((_wI2CTxBufferSize)),w
  4056  0431  0826               	btfss	status,2
  4057  0432  1D03               	goto	u761
  4058  0433  2C35               	goto	u760
  4059  0434  2C36               u761:
  4060  0435                     	goto	l82
  4061  0435  2C3B               u760:
  4062  0436                     	line	74
  4063                           	
  4064                           l1655:	
  4065  0436                     	clrf	(_wI2CTxBufferSize)
  4066  0436  01A6               	incf	(_wI2CTxBufferSize),f
  4067  0437  0AA6               	line	75
  4068                           	movlb 4	; select bank4
  4069  0438  0024               	bsf	(534)^0200h,0	;volatile
  4070  0439  1416               	goto	l82
  4071  043A  2C3B               	line	76
  4072                           	
  4073                           l81:	
  4074  043B                     	line	77
  4075                           	
  4076                           l82:	
  4077  043B                     	return
  4078  043B  0008               	opt stack 0
  4079                           GLOBAL	__end_of_WakeTemp
  4080                           	__end_of_WakeTemp:
  4081  043C                     	signat	_WakeTemp,89
  4082                           	global	_myint
  4083                           
  4084 ;; *************** function _myint *****************
  4085 ;; Defined at:
  4086 ;;		line 175 in file "161518_temp_main.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;		None
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      void 
  4093 ;; Registers used:
  4094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4102 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4103 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4104 ;;Total ram usage:        1 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    2
  4107 ;; This function calls:
  4108 ;;		_strcat
  4109 ;; This function is called by:
  4110 ;;		Interrupt level 1
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           psect	intentry,class=CODE,delta=2
  4114                           global __pintentry
  4115                           __pintentry:
  4116  0004                     psect	intentry
  4117                           	file	"161518_temp_main.c"
  4118                           	line	175
  4119                           	global	__size_of_myint
  4120                           	__size_of_myint	equ	__end_of_myint-_myint
  4121  0078                     	
  4122                           _myint:	
  4123  0004                     ;incstack = 0
  4124                           	opt	stack 8
  4125                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
  4126  0004  147E               ; Regs used in _myint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4127                           psect	intentry
  4128                           	pagesel	$
  4129  0005  3180               	line	177
  4130                           	
  4131                           i1l1449:	
  4132  0006                     	movlb 0	; select bank0
  4133  0006  0020               	btfss	(17),3	;volatile
  4134  0007  1D91               	goto	u54_21
  4135  0008  280A               	goto	u54_20
  4136  0009  280B               u54_21:
  4137  000A                     	goto	i1l98
  4138  000A  2869               u54_20:
  4139  000B                     	line	184
  4140                           	
  4141                           i1l1451:	
  4142  000B                     	bcf	(17),3	;volatile
  4143  000B  1191               	line	185
  4144                           	movlb 4	; select bank4
  4145  000C  0024               	btfss	(532)^0200h,4	;volatile
  4146  000D  1E14               	goto	u55_21
  4147  000E  2810               	goto	u55_20
  4148  000F  2811               u55_21:
  4149  0010                     	goto	i1l1455
  4150  0010  2815               u55_20:
  4151  0011                     	line	188
  4152                           	
  4153                           i1l1453:	
  4154  0011                     	movlb 0	; select bank0
  4155  0011  0020               	clrf	(_wI2CTxBufferSize)
  4156  0012  01A6               	line	189
  4157                           	clrf	(_wI2CTxSendPos)
  4158  0013  01A5               	goto	i1l1455
  4159  0014  2815               	line	190
  4160                           	
  4161                           i1l99:	
  4162  0015                     	line	191
  4163                           	
  4164                           i1l1455:	
  4165  0015                     	movlb 4	; select bank4
  4166  0015  0024               	btfss	(532)^0200h,3	;volatile
  4167  0016  1D94               	goto	u56_21
  4168  0017  2819               	goto	u56_20
  4169  0018  281A               u56_21:
  4170  0019                     	goto	i1l100
  4171  0019  2834               u56_20:
  4172  001A                     	
  4173                           i1l1457:	
  4174  001A                     	movlb 0	; select bank0
  4175  001A  0020               	movf	((_wI2CTxSendPos)),w
  4176  001B  0825               	btfss	status,2
  4177  001C  1D03               	goto	u57_21
  4178  001D  281F               	goto	u57_20
  4179  001E  2820               u57_21:
  4180  001F                     	goto	i1l100
  4181  001F  2834               u57_20:
  4182  0020                     	line	194
  4183                           	
  4184                           i1l1459:	
  4185  0020                     	movf	((_wI2CTxBufferSize)),w
  4186  0020  0826               	btfsc	status,2
  4187  0021  1903               	goto	u58_21
  4188  0022  2824               	goto	u58_20
  4189  0023  2825               u58_21:
  4190  0024                     	goto	i1l98
  4191  0024  2869               u58_20:
  4192  0025                     	line	196
  4193                           	
  4194                           i1l1461:	
  4195  0025                     	movf	(_wI2CTxSendPos),w
  4196  0025  0825               	addlw	low(_wI2CTxBuffer|((0x0)<<8))&0ffh
  4197  0026  3E2A               	movwf	fsr1l
  4198  0027  0086               	clrf fsr1h	
  4199  0028  0187               	
  4200                           	movf	indf1,w
  4201  0029  0801               	movlb 4	; select bank4
  4202  002A  0024               	movwf	(529)^0200h	;volatile
  4203  002B  0091               	line	197
  4204                           	
  4205                           i1l1463:	
  4206  002C                     	movlw	low(01h)
  4207  002C  3001               	movlb 0	; select bank0
  4208  002D  0020               	movwf	(??_myint+0)+0
  4209  002E  00C6               	movf	(??_myint+0)+0,w
  4210  002F  0846               	addwf	(_wI2CTxSendPos),f
  4211  0030  07A5               	line	198
  4212                           	goto	i1l98
  4213  0031  2869               	line	199
  4214                           	
  4215                           i1l101:	
  4216  0032                     	goto	i1l98
  4217  0032  2869               	line	202
  4218                           	
  4219                           i1l102:	
  4220  0033                     	line	203
  4221                           	goto	i1l98
  4222  0033  2869               	line	204
  4223                           	
  4224                           i1l100:	
  4225  0034                     	line	206
  4226                           	movlb 4	; select bank4
  4227  0034  0024               	btfsc	(534)^0200h,6	;volatile
  4228  0035  1B16               	goto	u59_21
  4229  0036  2838               	goto	u59_20
  4230  0037  2839               u59_21:
  4231  0038                     	goto	i1l104
  4232  0038  2855               u59_20:
  4233  0039                     	
  4234                           i1l1465:	
  4235  0039                     	movlb 0	; select bank0
  4236  0039  0020               	movf	((_wI2CTxSendPos)),w
  4237  003A  0825               	btfsc	status,2
  4238  003B  1903               	goto	u60_21
  4239  003C  283E               	goto	u60_20
  4240  003D  283F               u60_21:
  4241  003E                     	goto	i1l104
  4242  003E  2855               u60_20:
  4243  003F                     	line	209
  4244                           	
  4245                           i1l1467:	
  4246  003F                     	movf	(_wI2CTxBufferSize),w
  4247  003F  0826               	subwf	(_wI2CTxSendPos),w
  4248  0040  0225               	skipnc
  4249  0041  1803               	goto	u61_21
  4250  0042  2844               	goto	u61_20
  4251  0043  2845               u61_21:
  4252  0044                     	goto	i1l105
  4253  0044  2852               u61_20:
  4254  0045                     	line	211
  4255                           	
  4256                           i1l1469:	
  4257  0045                     	movf	(_wI2CTxSendPos),w
  4258  0045  0825               	addlw	low(_wI2CTxBuffer|((0x0)<<8))&0ffh
  4259  0046  3E2A               	movwf	fsr1l
  4260  0047  0086               	clrf fsr1h	
  4261  0048  0187               	
  4262                           	movf	indf1,w
  4263  0049  0801               	movlb 4	; select bank4
  4264  004A  0024               	movwf	(529)^0200h	;volatile
  4265  004B  0091               	line	212
  4266                           	
  4267                           i1l1471:	
  4268  004C                     	movlw	low(01h)
  4269  004C  3001               	movlb 0	; select bank0
  4270  004D  0020               	movwf	(??_myint+0)+0
  4271  004E  00C6               	movf	(??_myint+0)+0,w
  4272  004F  0846               	addwf	(_wI2CTxSendPos),f
  4273  0050  07A5               	line	213
  4274                           	goto	i1l104
  4275  0051  2855               	line	214
  4276                           	
  4277                           i1l105:	
  4278  0052                     	line	216
  4279                           	movlb 4	; select bank4
  4280  0052  0024               	bsf	(534)^0200h,2	;volatile
  4281  0053  1516               	goto	i1l104
  4282  0054  2855               	line	217
  4283                           	
  4284                           i1l106:	
  4285  0055                     	line	218
  4286                           	
  4287                           i1l104:	
  4288  0055                     	line	219
  4289                           	movlb 4	; select bank4
  4290  0055  0024               	btfss	(534)^0200h,6	;volatile
  4291  0056  1F16               	goto	u62_21
  4292  0057  2859               	goto	u62_20
  4293  0058  285A               u62_21:
  4294  0059                     	goto	i1l98
  4295  0059  2869               u62_20:
  4296  005A                     	line	222
  4297                           	
  4298                           i1l1473:	
  4299  005A                     	bcf	(534)^0200h,6	;volatile
  4300  005A  1316               	line	223
  4301                           	
  4302                           i1l1475:	
  4303  005B                     	movlb 0	; select bank0
  4304  005B  0020               	movf	((_wI2CTxSendPos)),w
  4305  005C  0825               	btfsc	status,2
  4306  005D  1903               	goto	u63_21
  4307  005E  2860               	goto	u63_20
  4308  005F  2861               u63_21:
  4309  0060                     	goto	i1l108
  4310  0060  2864               u63_20:
  4311  0061                     	line	225
  4312                           	
  4313                           i1l1477:	
  4314  0061                     	movlb 4	; select bank4
  4315  0061  0024               	bsf	(534)^0200h,1	;volatile
  4316  0062  1496               	line	226
  4317                           	goto	i1l98
  4318  0063  2869               	line	227
  4319                           	
  4320                           i1l108:	
  4321  0064                     	line	229
  4322                           	movlb 4	; select bank4
  4323  0064  0024               	bsf	(534)^0200h,2	;volatile
  4324  0065  1516               	goto	i1l98
  4325  0066  2869               	line	230
  4326                           	
  4327                           i1l109:	
  4328  0067                     	goto	i1l98
  4329  0067  2869               	line	231
  4330                           	
  4331                           i1l107:	
  4332  0068                     	goto	i1l98
  4333  0068  2869               	line	232
  4334                           	
  4335                           i1l103:	
  4336  0069                     	line	234
  4337                           	
  4338                           i1l98:	
  4339  0069                     	line	235
  4340                           	movlb 0	; select bank0
  4341  0069  0020               	btfss	(18),3	;volatile
  4342  006A  1D92               	goto	u64_21
  4343  006B  286D               	goto	u64_20
  4344  006C  286E               u64_21:
  4345  006D                     	goto	i1l111
  4346  006D  287A               u64_20:
  4347  006E                     	line	237
  4348                           	
  4349                           i1l1479:	
  4350  006E                     	movlw	low(9000)
  4351  006E  3028               	movwf	(strcat@dest)
  4352  006F  00C2               	movlw	high(9000)
  4353  0070  3023               	movwf	((strcat@dest))+1
  4354  0071  00C3               	movlw	low(((STR_2)|8000h))
  4355  0072  30CE               	movwf	(strcat@src)
  4356  0073  00C4               	movlw	high(((STR_2)|8000h))
  4357  0074  3084               	movwf	((strcat@src))+1
  4358  0075  00C5               	fcall	_strcat
  4359  0076  3184  246E  3180   	goto	i1l111
  4360  0079  287A               	line	238
  4361                           	
  4362                           i1l110:	
  4363  007A                     	line	239
  4364                           	
  4365                           i1l111:	
  4366  007A                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  4367  007A  107E               	retfie
  4368  007B  0009               	opt stack 0
  4369                           GLOBAL	__end_of_myint
  4370                           	__end_of_myint:
  4371  007C                     	signat	_myint,89
  4372                           	global	_strcat
  4373                           
  4374 ;; *************** function _strcat *****************
  4375 ;; Defined at:
  4376 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;  dest            2    4[BANK0 ] PTR unsigned char 
  4379 ;;		 -> wInterruptText(200), 
  4380 ;;  src             2    6[BANK0 ] PTR const unsigned char 
  4381 ;;		 -> STR_2(7), 
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;		None
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  2    4[BANK0 ] PTR unsigned char 
  4386 ;; Registers used:
  4387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4393 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4396 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4397 ;;Total ram usage:        4 bytes
  4398 ;; Hardware stack levels used:    1
  4399 ;; Hardware stack levels required when called:    1
  4400 ;; This function calls:
  4401 ;;		_strcpy
  4402 ;;		_strlen
  4403 ;; This function is called by:
  4404 ;;		_myint
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           psect	text19,local,class=CODE,delta=2,merge=1,group=2
  4408                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  4409                           	line	3
  4410                           global __ptext19
  4411                           __ptext19:	;psect for function _strcat
  4412  046E                     psect	text19
  4413                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  4414                           	line	3
  4415                           	global	__size_of_strcat
  4416                           	__size_of_strcat	equ	__end_of_strcat-_strcat
  4417  0018                     	
  4418                           _strcat:	
  4419  046E                     ;incstack = 0
  4420                           	opt	stack 8
  4421                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4422                           	line	5
  4423                           	
  4424                           i1l1335:	
  4425  046E                     	movlb 0	; select bank0
  4426  046E  0020               	movf	(strcat@dest+1),w
  4427  046F  0843               	movwf	(strlen@s+1)
  4428  0470  00F1               	movf	(strcat@dest),w
  4429  0471  0842               	movwf	(strlen@s)
  4430  0472  00F0               	fcall	_strlen
  4431  0473  3183  23DC  3184   	movf	(0+(?_strlen)),w
  4432  0476  0870               	movlb 0	; select bank0
  4433  0477  0020               	addwf	(strcat@dest),w
  4434  0478  0742               	movwf	(strcpy@dest)
  4435  0479  00F6               	movf	(1+(?_strlen)),w
  4436  047A  0871               	addwfc	(strcat@dest+1),w
  4437  047B  3D43               	movwf	1+(strcpy@dest)
  4438  047C  00F7               	movf	(strcat@src+1),w
  4439  047D  0845               	movwf	(strcpy@src+1)
  4440  047E  00F9               	movf	(strcat@src),w
  4441  047F  0844               	movwf	(strcpy@src)
  4442  0480  00F8               	fcall	_strcpy
  4443  0481  3183  23B2  3184   	goto	i1l685
  4444  0484  2C85               	line	6
  4445                           	
  4446                           i1l1337:	
  4447  0485                     	line	7
  4448                           ;	Return value of _strcat is never used
  4449                           	
  4450                           i1l685:	
  4451  0485                     	return
  4452  0485  0008               	opt stack 0
  4453                           GLOBAL	__end_of_strcat
  4454                           	__end_of_strcat:
  4455  0486                     	signat	_strcat,8313
  4456                           	global	_strlen
  4457                           
  4458 ;; *************** function _strlen *****************
  4459 ;; Defined at:
  4460 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  s               2    0[COMMON] PTR const unsigned char 
  4463 ;;		 -> wInterruptText(200), 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  a               2    4[COMMON] PTR const unsigned char 
  4466 ;;		 -> wInterruptText(200), 
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  2    0[COMMON] unsigned int 
  4469 ;; Registers used:
  4470 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4477 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4478 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4479 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4480 ;;Total ram usage:        6 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_strcat
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           psect	text20,local,class=CODE,delta=2,merge=1,group=2
  4489                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  4490                           	line	12
  4491                           global __ptext20
  4492                           __ptext20:	;psect for function _strlen
  4493  03DC                     psect	text20
  4494                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  4495                           	line	12
  4496                           	global	__size_of_strlen
  4497                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  4498  0023                     	
  4499                           _strlen:	
  4500  03DC                     ;incstack = 0
  4501                           	opt	stack 8
  4502                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  4503                           	line	14
  4504                           	
  4505                           i1l1223:	
  4506  03DC                     	movf	(strlen@s+1),w
  4507  03DC  0871               	movwf	(strlen@a+1)
  4508  03DD  00F5               	movf	(strlen@s),w
  4509  03DE  0870               	movwf	(strlen@a)
  4510  03DF  00F4               	line	16
  4511                           	goto	i1l1227
  4512  03E0  2BE6               	
  4513                           i1l695:	
  4514  03E1                     	line	17
  4515                           	
  4516                           i1l1225:	
  4517  03E1                     	movlw	01h
  4518  03E1  3001               	addwf	(strlen@s),f
  4519  03E2  07F0               	movlw	0
  4520  03E3  3000               	addwfc	(strlen@s+1),f
  4521  03E4  3DF1               	goto	i1l1227
  4522  03E5  2BE6               	line	18
  4523                           	
  4524                           i1l694:	
  4525  03E6                     	line	16
  4526                           	
  4527                           i1l1227:	
  4528  03E6                     	movf	(strlen@s),w
  4529  03E6  0870               	movwf	fsr1l
  4530  03E7  0086               	movf	(strlen@s+1),w
  4531  03E8  0871               	movwf	fsr1h
  4532  03E9  0087               
  4533                           	movf	(indf1),w
  4534  03EA  0801               	btfss	status,2
  4535  03EB  1D03               	goto	u41_21
  4536  03EC  2BEE               	goto	u41_20
  4537  03ED  2BEF               u41_21:
  4538  03EE                     	goto	i1l1225
  4539  03EE  2BE1               u41_20:
  4540  03EF                     	goto	i1l1229
  4541  03EF  2BF0               	
  4542                           i1l696:	
  4543  03F0                     	line	25
  4544                           	
  4545                           i1l1229:	
  4546  03F0                     	comf	(strlen@a),w
  4547  03F0  0974               	movwf	(??_strlen+0)+0
  4548  03F1  00F2               	comf	(strlen@a+1),w
  4549  03F2  0975               	movwf	((??_strlen+0)+0+1)
  4550  03F3  00F3               	incf	(??_strlen+0)+0,f
  4551  03F4  0AF2               	skipnz
  4552  03F5  1903               	incf	((??_strlen+0)+0+1),f
  4553  03F6  0AF3               	movf	(strlen@s),w
  4554  03F7  0870               	addwf	0+(??_strlen+0)+0,w
  4555  03F8  0772               	movwf	(?_strlen)
  4556  03F9  00F0               	movf	(strlen@s+1),w
  4557  03FA  0871               	addwfc	1+(??_strlen+0)+0,w
  4558  03FB  3D73               	movwf	1+(?_strlen)
  4559  03FC  00F1               	goto	i1l697
  4560  03FD  2BFE               	
  4561                           i1l1231:	
  4562  03FE                     	line	26
  4563                           	
  4564                           i1l697:	
  4565  03FE                     	return
  4566  03FE  0008               	opt stack 0
  4567                           GLOBAL	__end_of_strlen
  4568                           	__end_of_strlen:
  4569  03FF                     	signat	_strlen,4218
  4570                           	global	_strcpy
  4571                           
  4572 ;; *************** function _strcpy *****************
  4573 ;; Defined at:
  4574 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  dest            2    6[COMMON] PTR unsigned char 
  4577 ;;		 -> wInterruptText(200), 
  4578 ;;  src             2    8[COMMON] PTR const unsigned char 
  4579 ;;		 -> STR_2(7), 
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;  d               2    2[BANK0 ] PTR unsigned char 
  4582 ;;		 -> wInterruptText(200), 
  4583 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  4584 ;;		 -> STR_2(7), 
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  2    6[COMMON] PTR unsigned char 
  4587 ;; Registers used:
  4588 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, pclath
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4594 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4595 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4596 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4597 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4598 ;;Total ram usage:       12 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; This function calls:
  4601 ;;		Nothing
  4602 ;; This function is called by:
  4603 ;;		_strcat
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           psect	text21,local,class=CODE,delta=2,merge=1,group=2
  4607                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  4608                           	line	7
  4609                           global __ptext21
  4610                           __ptext21:	;psect for function _strcpy
  4611  03B2                     psect	text21
  4612                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  4613                           	line	7
  4614                           	global	__size_of_strcpy
  4615                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  4616  002A                     	
  4617                           _strcpy:	
  4618  03B2                     ;incstack = 0
  4619                           	opt	stack 8
  4620                           ; Regs used in _strcpy: [wreg-fsr1h+pclath]
  4621                           	line	13
  4622                           	
  4623                           i1l1233:	
  4624  03B2                     	movf	(strcpy@src+1),w
  4625  03B2  0879               	movlb 0	; select bank0
  4626  03B3  0020               	movwf	(strcpy@s+1)
  4627  03B4  00BF               	movf	(strcpy@src),w
  4628  03B5  0878               	movwf	(strcpy@s)
  4629  03B6  00BE               	line	14
  4630                           	movf	(strcpy@dest+1),w
  4631  03B7  0877               	movwf	(strcpy@d+1)
  4632  03B8  00C1               	movf	(strcpy@dest),w
  4633  03B9  0876               	movwf	(strcpy@d)
  4634  03BA  00C0               	line	15
  4635                           	goto	i1l1235
  4636  03BB  2BBD               	
  4637                           i1l689:	
  4638  03BC                     	goto	i1l1235
  4639  03BC  2BBD               	
  4640                           i1l688:	
  4641  03BD                     	
  4642                           i1l1235:	
  4643  03BD                     	movf	(strcpy@d+1),w
  4644  03BD  0841               	movwf	(??_strcpy+0)+0+1
  4645  03BE  00FB               	movf	(strcpy@d),w
  4646  03BF  0840               	movwf	(??_strcpy+0)+0
  4647  03C0  00FA               	incf	(strcpy@d),f
  4648  03C1  0AC0               	skipnz
  4649  03C2  1903               	incf	(strcpy@d+1),f
  4650  03C3  0AC1               	movf	0+(??_strcpy+0)+0,w
  4651  03C4  087A               	movwf	fsr1l
  4652  03C5  0086               	movf	1+(??_strcpy+0)+0,w
  4653  03C6  087B               	movwf	fsr1h
  4654  03C7  0087               
  4655                           	movf	(strcpy@s+1),w
  4656  03C8  083F               	movwf	(??_strcpy+2)+0+1
  4657  03C9  00FD               	movf	(strcpy@s),w
  4658  03CA  083E               	movwf	(??_strcpy+2)+0
  4659  03CB  00FC               	incf	(strcpy@s),f
  4660  03CC  0ABE               	skipnz
  4661  03CD  1903               	incf	(strcpy@s+1),f
  4662  03CE  0ABF               	movf	0+(??_strcpy+2)+0,w
  4663  03CF  087C               	movwf	fsr0l
  4664  03D0  0084               	movf	(1+(??_strcpy+2)+0),w
  4665  03D1  087D               	movwf	fsr0h
  4666  03D2  0085               	movf	indf0,w ;code access
  4667  03D3  0800               	movwi	[0]fsr1
  4668  03D4  3FC0               	movf	wreg
  4669  03D5  0889               	btfss	status,2
  4670  03D6  1D03               	goto	u42_21
  4671  03D7  2BD9               	goto	u42_20
  4672  03D8  2BDA               u42_21:
  4673  03D9                     	goto	i1l1235
  4674  03D9  2BBD               u42_20:
  4675  03DA                     	goto	i1l691
  4676  03DA  2BDB               	
  4677                           i1l690:	
  4678  03DB                     	line	18
  4679                           ;	Return value of _strcpy is never used
  4680                           	
  4681                           i1l691:	
  4682  03DB                     	return
  4683  03DB  0008               	opt stack 0
  4684                           GLOBAL	__end_of_strcpy
  4685                           	__end_of_strcpy:
  4686  03DC                     	signat	_strcpy,8313
  4687                           global	___latbits
  4688                           ___latbits	equ	3
  4689  0003                     	global	btemp
  4690                           	btemp set 07Eh
  4691  007E                     
  4692                           	DABS	1,126,2	;btemp
  4693                           	global	int$flags
  4694                           	int$flags	set btemp
  4695  007E                     	global	wtemp0
  4696                           	wtemp0 set btemp+0
  4697  007E                     global __pbssBIGRAM
  4698                           __pbssBIGRAM	equ	9000
  4699  2328                     	end


Data Sizes:
    Strings     33
    Constant    0
    Data        8
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     27      65
    BANK1            80     12      12
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10            8      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), 

    memset@dest	PTR void  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), wI2CTxBuffer(BANK0[20]), 

    memset@s	PTR unsigned char  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), wI2CTxBuffer(BANK0[20]), 

    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 26
		 -> main@wConv(BANK1[8]), STR_1(CODE[26]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), 

    sp__memset	PTR void  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), wI2CTxBuffer(BANK0[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myint in COMMON

    _strcat->_strcpy
    _strcpy->_strlen

Critical Paths under _main in BANK0

    _main->_lcdWriteText
    _setNotBlinkingCursor->_writeInsChk
    _setCursorOff->_writeInsChk
    _powerOnLcd->_writeInsChk
    _moveCursorToHome->_writeInsChk
    _lcdWriteText->_writeTxtChk
    _writeTxtChk->_setCursorPosition
    _setCursorPosition->_waitLCDBusy
    _initLCD->_writeInsChk
    _clearDisplay->_writeInsChk
    _writeInsChk->_waitLCDBusy
    _writeInsChk->_writeInsNoChk
    _writeInsNoChk->_setData

Critical Paths under _myint in BANK0

    _myint->_strcat
    _strcat->_strcpy

Critical Paths under _main in BANK1

    None.

Critical Paths under _myint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myint in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myint in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myint in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myint in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myint in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myint in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    4645
                                             25 BANK0      2     2      0
                                              0 BANK1     12    12      0
                           _WakeTemp
                       _clearDisplay
                            _initLCD
                       _lcdWriteText
                             _memset
                   _moveCursorToHome
                         _powerOnLcd
                       _setCursorOff
                  _setCursorPosition
               _setNotBlinkingCursor
 ---------------------------------------------------------------------------------
 (1) _setNotBlinkingCursor                                 1     1      0     254
                                             15 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _setCursorOff                                         1     1      0     254
                                             15 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _powerOnLcd                                           1     1      0     254
                                             15 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _moveCursorToHome                                     0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _memset                                              14     8      6    1557
                                              9 BANK0     14     8      6
 ---------------------------------------------------------------------------------
 (1) _lcdWriteText                                         6     4      2     787
                                             19 BANK0      6     4      2
                        _writeTxtChk
 ---------------------------------------------------------------------------------
 (2) _writeTxtChk                                          3     3      0     477
                                             16 BANK0      3     3      0
                 _SetToSendDataToLCD
                  _setCursorPosition
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (1) _setCursorPosition                                    2     2      0     254
                                             14 BANK0      2     2      0
                 _SetToSendDataToLCD
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     632
                                             15 BANK0      1     1      0
                       _clearDisplay
                            _setData
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _clearDisplay                                         0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _writeInsChk                                          1     1      0     254
                                             14 BANK0      1     1      0
                        _waitLCDBusy
                      _writeInsNoChk
 ---------------------------------------------------------------------------------
 (3) _writeInsNoChk                                        2     2      0     186
                                             12 BANK0      2     2      0
                 _SetToSendDataToLCD
                            _setData
 ---------------------------------------------------------------------------------
 (4) _setData                                              3     3      0     124
                                              9 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _SetToSendDataToLCD                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _waitLCDBusy                                          5     5      0      37
                                              9 BANK0      5     5      0
               _SetToReadDataFromLCD
 ---------------------------------------------------------------------------------
 (4) _SetToReadDataFromLCD                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WakeTemp                                             1     1      0       0
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _myint                                                1     1      0     638
                                              8 BANK0      1     1      0
                             _strcat
 ---------------------------------------------------------------------------------
 (7) _strcat                                               4     0      4     638
                                              4 BANK0      4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               6     4      2     166
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strcpy                                              12     8      4     248
                                              6 COMMON     8     4      4
                                              0 BANK0      4     4      0
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _WakeTemp
   _clearDisplay
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _initLCD
     _clearDisplay
       _writeInsChk
         _waitLCDBusy
           _SetToReadDataFromLCD
         _writeInsNoChk
           _SetToSendDataToLCD
           _setData
     _setData
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _lcdWriteText
     _writeTxtChk
       _SetToSendDataToLCD
       _setCursorPosition
         _SetToSendDataToLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
       _setData
       _waitLCDBusy
         _SetToReadDataFromLCD
   _memset
   _moveCursorToHome
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _powerOnLcd
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _setCursorOff
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _setCursorPosition
     _SetToSendDataToLCD
     _setData
     _waitLCDBusy
       _SetToReadDataFromLCD
   _setNotBlinkingCursor
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData

 _myint (ROOT)
   _strcat
     _strcpy
       _strlen (ARG)
     _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1B      41       5       81.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      C       C       7       15.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      5B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10               8      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      5B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Jan 06 08:37:21 2019

                  __CFG_CP$OFF 0000                    _SSPSTATbits 0214                             l80 0431  
                           l81 043B                             l82 043B                             l90 0197  
                           l91 01A5                             l92 01A6                             l93 01A6  
                           l79 042C                             l89 016C             _SetToSendDataToLCD 04D5  
                          l200 049C                            l203 04A7                            l142 031E  
                          l230 04CD                            l160 035A                            l233 041F  
                          l145 03A0                            l170 02CE                            l146 038B  
                          l227 04E5                            l163 0298                            l147 03B1  
                          l164 0282                            l148 03B1                            l173 04BD  
                          l165 02AF                            l182 04DA                            l166 0287  
                          l167 028C                            l176 046D                            l168 0291  
                          l185 037F                            l169 0296                            l186 0367  
                          l194 04B2                            l179 04E0                            l187 0387  
                          l188 0387                            l671 01B5                            l672 0278  
                          l673 01D8                            l674 021F                            l675 0248  
                          l676 0271                            l677 0262                            l678 0278  
                          u710 0386                            u711 0385                            u800 0246  
                          u705 0336                            u801 0245                            u810 0277  
                          u811 0276                            u820 03B0                            u725 0461  
                          u821 03AF                            u750 0427                            u830 0164  
                          u751 0426                            u735 040D                            u760 0436  
                          u840 0194                            u761 0435                            u745 02BB  
                          u841 0193                            u770 01B3                            u771 01B2  
                          u907 010E                            u780 01D6                            u781 01D5  
                          u917 011D                            u790 021D                            u695 0325  
                          u791 021C                            u927 012C                            u937 013B  
                          u947 014F                            u957 0174                            u967 019D  
                          u977 02DB                            u897 00FF                            u987 02E7  
                          u997 02F1                   __CFG_BORV$LO 0000                            wreg 0009  
          ?_SetToSendDataToLCD 0070                   __CFG_LVP$OFF 0000                 ??_lcdWriteText 0053  
                         l1601 040A                           l1603 0415                           l1611 027E  
                         l1605 04B5                           l1701 02D7                           l1621 0291  
                         l1613 0280                           l1607 04E1                           l1711 02FB  
                         l1703 02DF                           l1631 02B5                           l1623 0297  
                         l1615 0282                           l1561 0358                           l1553 0321  
                         l1713 02FF                           l1705 02E3                           l1641 02C9  
                         l1633 02B7                           l1617 0287                           l1625 0298  
                         l1609 027B                           l1721 04A8                           l1801 0108  
                         l1651 042C                           l1571 0361                           l1563 04D5  
                         l1555 0322                           l1715 0307                           l1707 02F0  
                         l1635 02B8                           l1619 028C                           l1627 02AF  
                         l1731 04CA                           l1723 04AE                           l1811 0132  
                         l1803 0114                           l1653 0431                           l1565 04DB  
                         l1581 037D                           l1573 036A                           l1557 0354  
                         l1717 030C                           l1709 02F3                           l1637 02C2  
                         l1629 02B2                           l1741 039A                           l1661 01B4  
                         l1725 049D                           l1733 0492                           l1821 0159  
                         l1813 0135                           l1805 0117                           l1655 0436  
                         l1647 0420                           l1575 0376                           l1567 035B  
                         l1559 0356                           l1591 0468                           l1583 0458  
                         l1719 031B                           l1639 02C7                           l1743 03A0  
                         l1671 01D8                           l1663 01B5                           l1727 04A3  
                         l1735 0498                           l1831 0183                           l1823 0168  
                         l1815 0141                           l1807 0123                           l1751 00C0  
                         l1649 0427                           l1577 0377                           l1569 035E  
                         l1585 045B                           l1593 0401                           l1913 02A1  
                         l1737 0388                           l1681 0247                           l1673 0214  
                         l1665 01BB                           l1657 01A8                           l1729 04C6  
                         l1833 0186                           l1825 016C                           l1817 0149  
                         l1809 0126                           l1761 00DD                           l1753 00C1  
                         l1745 00AC                           l1579 037B                           l1587 045D  
                         l1595 0404                           l1739 038B                           l1691 0262  
                         l1683 0248                           l1675 021E                           l1667 01CD  
                         l1659 01AD                           l1835 018D                           l1827 0170  
                         l1819 0156                           l1771 00E7                           l1763 00DE  
                         l1755 00C3                           l1747 00BB                           l1589 045E  
                         l1597 0407                           l1693 0268                           l1685 0255  
                         l1677 021F                           l1669 01D7                           l1837 0194  
                         l1829 0179                           l1781 00EC                           l1773 00E8  
                         l1765 00E3                           l1757 00D9                           l1749 00BE  
                         l1599 0409                           l1695 026C                           l1687 0259  
                         l1679 023D                           l1839 0197                           l1791 00F2  
                         l1783 00ED                           l1775 00E9                           l1767 00E5  
                         l1759 00DB                           l1697 0271                           l1689 025D  
                         l1793 00F3                           l1785 00EE                           l1777 00EA  
                         l1769 00E6                           l1699 02CF                           l1795 00F6  
                         l1787 00EF                           l1779 00EB                           l1797 00F9  
                         l1789 00F1                           l1799 0105                           STR_1 043C  
                         STR_2 04CE                           u1007 02F8                           u1017 0300  
                         i1l98 0069                           i1l99 0015                   __CFG_WRT$OFF 0000  
                         _main 00AC                           fsr0h 0005                           fsr1h 0007  
                         indf0 0000                           fsr0l 0004                           indf1 0001  
                         fsr1l 0006                           btemp 007E                  __CFG_BOREN$ON 0000  
                         start 007C                  __CFG_IESO$OFF 0000           ??_SetToSendDataToLCD 0047  
         __end_of_clearDisplay 04E6                   main@wCounter 00AA                          ?_main 0070  
                  _writeInsChk 04B3                  __CFG_WDTE$OFF 0000                          i1l100 0034  
                        i1l101 0032                          i1l110 007A                          i1l102 0033  
                        i1l111 007A                          i1l103 0069                          i1l104 0055  
                        i1l105 0052                          i1l106 0055                          i1l107 0068  
                        i1l108 0064                          i1l109 0067                          i1l690 03DB  
                        i1l691 03DB                          i1l685 0485                          i1l694 03E6  
                        i1l695 03E1                          i1l688 03BD                          i1l696 03F0  
                        i1l689 03BC                          i1l697 03FE                          u41_20 03EF  
                        u41_21 03EE                          u42_20 03DA                          u42_21 03D9  
                        _PORTA 000C                          u60_20 003F                          u60_21 003E  
                        u61_20 0045                          u61_21 0044                          u62_20 005A  
                        u54_20 000B                          u62_21 0059                          u54_21 000A  
                        u63_20 0061                          u55_20 0011                          u63_21 0060  
                        u55_21 0010                          u64_20 006E                          u56_20 001A  
                        u64_21 006D                          u56_21 0019                          u57_20 0020  
                        u57_21 001F                          _TRISA 008C                          _TRISC 008E  
                        u58_20 0025                          u58_21 0024                          u59_20 0039  
                        u59_21 0038                    _writeTxtChk 0279                  __CFG_PWRTE$ON 0000  
               __CFG_FCMEN$OFF 0000                __end_of_initLCD 031F         ??_SetToReadDataFromLCD 0047  
                        _myint 0004                __end_of_setData 035B                          status 0003  
                        wtemp0 007E         ??_setNotBlinkingCursor 004D                 __CFG_MCLRE$OFF 0000  
              __initialization 007E                   __end_of_main 01A8                 __CFG_LPBOR$OFF 0000  
                       ??_main 0057               __end_of_WakeTemp 043C                   ?_waitLCDBusy 0070  
                       ?_myint 0070                         _ANSELA 018C                         i1l1231 03FE  
                       i1l1223 03DC                         i1l1233 03B2                         i1l1225 03E1  
                       i1l1235 03BD                         i1l1227 03E6                         i1l1229 03F0  
                       i1l1335 046E                         i1l1337 0485                         i1l1451 000B  
                       i1l1461 0025                         i1l1453 0011                         i1l1471 004C  
                       i1l1463 002C                         i1l1455 0015                         i1l1473 005A  
                       i1l1465 0039                         i1l1457 001A                         i1l1449 0006  
                       i1l1475 005B                         i1l1467 003F                         i1l1459 0020  
                       i1l1477 0061                         i1l1469 0045                         i1l1479 006E  
                setData@iValue 0049              _setCursorPosition 03FF                         _SSPADD 0212  
                       _SSPBUF 0211             ?_setCursorPosition 0070            ??_setCursorPosition 004C  
         __end_of_lcdWriteText 03B2                         _memset 01A8                         _strcat 046E  
                       _strcpy 03B2                         _strlen 03DC                      ??_initLCD 004D  
                    ??_setData 0047       __end_of_moveCursorToHome 04CE      __end_of_setCursorPosition 0420  
       __size_of_writeInsNoChk 0018        __end_of__initialization 00A8          __size_of_clearDisplay 0005  
               __pcstackCOMMON 0070                   __pidataBANK0 04BE                  __end_of_myint 007C  
         writeInsNoChk@iOpCode 004B     setCursorPosition@iPosition 004D                 _wInterruptText 2328  
                 _clearDisplay 04E1                        ??_myint 0046                     __pbssBANK0 0020  
                ?_setCursorOff 0070                __CFG_VCAPEN$OFF 0000                      ?_WakeTemp 0070  
                   __pmaintext 00AC                     __pintentry 0004                  _writeInsNoChk 0456  
                      ?_memset 0047                   ?_writeInsChk 0070                        ?_strcat 0042  
                      ?_strcpy 0076                        ?_strlen 0070                   ?_writeTxtChk 0070  
   __size_of_setCursorPosition 0021           __size_of_waitLCDBusy 002D                 ??_setCursorOff 004D  
        __size_of_lcdWriteText 002A                     ??_WakeTemp 0047    __size_of_SetToSendDataToLCD 0006  
               ?_writeInsNoChk 0070                __CFG_STVREN$OFF 0000                __size_of_memset 00D1  
                      __ptext1 0492                        __ptext2 049D                        __ptext3 04A8  
                      __ptext4 04C6                        __ptext5 01A8                        __ptext6 0388  
                      __ptext7 0279                        __ptext8 03FF                        __ptext9 02CF  
              __size_of_strcat 0018                __size_of_strcpy 002A                __size_of_strlen 0023  
                      _initLCD 02CF                        _setData 031F                        clrloop0 0487  
         end_of_initialization 00A8                   _lcdWriteText 0388  __size_of_SetToReadDataFromLCD 0006  
                      memset@c 0049                        memset@k 0051                        memset@n 004B  
                      memset@s 0053               __CFG_CLKOUTEN$ON 0000  __size_of_setNotBlinkingCursor 000B  
                      strcpy@d 0040                        strlen@a 0074                        strcpy@s 003E  
                      strlen@s 0070                      _PORTAbits 000C                     _powerOnLcd 04A8  
             __CFG_FOSC$INTOSC 0000                      _TRISAbits 008C              ?_moveCursorToHome 0070  
           ??_moveCursorToHome 004D            waitLCDBusy@busyFlag 004A                ??_writeInsNoChk 004A  
             _mWritingPosition 0027           __end_of_setCursorOff 04A8                 __end_of_memset 0279  
               __end_of_strcat 0486                 __end_of_strcpy 03DC                 __end_of_strlen 03FF  
         __size_of_writeInsChk 000B            start_initialization 007E           __size_of_writeTxtChk 0056  
            __size_of_WakeTemp 001C                    __pdataBANK0 0059                  _wI2CTxSendPos 0025  
                     ??_memset 004D                     memset@dest 0047                       ??_strcat 007E  
                     ??_strcpy 007A                       ??_strlen 0072                    ?_powerOnLcd 0070  
                  __pbssBIGRAM 2328                      ___latbits 0003                  __pcstackBANK0 003E  
                __pcstackBANK1 00A0             writeInsChk@iOpCode 004C                       ?_initLCD 0070  
                     ?_setData 0070                  ??_waitLCDBusy 0047                 __size_of_myint 0078  
             _mDisplayOnOffReg 0029     __end_of_SetToSendDataToLCD 04DB                      clear_ram0 0486  
                     _PIE1bits 0091                       _PIE2bits 0092            __size_of_powerOnLcd 000B  
                     _PIR1bits 0011                       _PIR2bits 0012          __size_of_setCursorOff 000B  
                    main@F2177 0059   __end_of_SetToReadDataFromLCD 04E1    lcdWriteText@wCharReadingPos 0056  
                    main@wConv 00A0   __end_of_setNotBlinkingCursor 049D                      main@wTemp 00A8  
            lcdWriteText@iText 0051            __end_of_waitLCDBusy 0388                   _setCursorOff 049D  
                     _WakeTemp 0420      __size_of_moveCursorToHome 0008                   _wI2CTxBuffer 002A  
             _wI2CTxBufferSize 0026                     _ANSELCbits 018E               __size_of_initLCD 0050  
                   strcat@dest 0042               __size_of_setData 003C                  ?_clearDisplay 0070  
                     __ptext10 04E1                       __ptext11 04B3                       __ptext20 03DC  
                     __ptext12 0456                       __ptext21 03B2                       __ptext13 031F  
                     __ptext14 04D5                       __ptext15 035B                       __ptext16 04DB  
                     __ptext17 0420                       __ptext19 046E                       _wHexTemp 0020  
                   strcpy@dest 0076                  __size_of_main 00FC             writeTxtChk@iOpCode 0050  
                     int$flags 007E          __end_of_writeInsNoChk 046E                  ??_writeInsChk 004C  
                 ??_powerOnLcd 004D                  ??_writeTxtChk 004E                     _INTCONbits 000B  
                  _waitLCDBusy 035B                 ??_clearDisplay 004D                       intlevel1 0000  
         _SetToReadDataFromLCD 04DB                      strcat@src 0044                      strcpy@src 0078  
                   _OSCCONbits 0099           _setNotBlinkingCursor 0492             __end_of_powerOnLcd 04B3  
                __pstringtext1 043C                  __pstringtext2 04CE                  __pstringtext3 0000  
          __end_of_writeInsChk 04BE                    _SSPCON1bits 0215                    _SSPCON2bits 0216  
                  _SSPCON3bits 0217                  ?_lcdWriteText 0051            __end_of_writeTxtChk 02CF  
        ?_SetToReadDataFromLCD 0070          ?_setNotBlinkingCursor 0070               _moveCursorToHome 04C6  
       _mCursorDisplayShiftReg 0028  
