

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Apr 15 21:55:44 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F1518 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   120                           PORTB equ 0Dh ;# 
   121  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   122                           PORTC equ 0Eh ;# 
   123  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   124                           PORTE equ 010h ;# 
   125  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   126                           PIR1 equ 011h ;# 
   127  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   128                           PIR2 equ 012h ;# 
   129  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   130                           TMR0 equ 015h ;# 
   131  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   132                           TMR1 equ 016h ;# 
   133  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   134                           TMR1L equ 016h ;# 
   135  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   136                           TMR1H equ 017h ;# 
   137  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   138                           T1CON equ 018h ;# 
   139  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   140                           T1GCON equ 019h ;# 
   141  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   142                           TMR2 equ 01Ah ;# 
   143  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   144                           PR2 equ 01Bh ;# 
   145  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   146                           T2CON equ 01Ch ;# 
   147  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   148                           TRISA equ 08Ch ;# 
   149  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   150                           TRISB equ 08Dh ;# 
   151  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   152                           TRISC equ 08Eh ;# 
   153  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   154                           TRISE equ 090h ;# 
   155  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   156                           PIE1 equ 091h ;# 
   157  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   158                           PIE2 equ 092h ;# 
   159  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   160                           OPTION_REG equ 095h ;# 
   161  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   162                           PCON equ 096h ;# 
   163  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   164                           WDTCON equ 097h ;# 
   165  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   166                           OSCCON equ 099h ;# 
   167  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   168                           OSCSTAT equ 09Ah ;# 
   169  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   170                           ADRES equ 09Bh ;# 
   171  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   172                           ADRESL equ 09Bh ;# 
   173  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   174                           ADRESH equ 09Ch ;# 
   175  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   176                           ADCON0 equ 09Dh ;# 
   177  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   178                           ADCON1 equ 09Eh ;# 
   179  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   180                           LATA equ 010Ch ;# 
   181  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   182                           LATB equ 010Dh ;# 
   183  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   184                           LATC equ 010Eh ;# 
   185  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   186                           BORCON equ 0116h ;# 
   187  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   188                           FVRCON equ 0117h ;# 
   189  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   190                           APFCON equ 011Dh ;# 
   191  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   192                           ANSELA equ 018Ch ;# 
   193  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   194                           ANSELB equ 018Dh ;# 
   195  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   196                           ANSELC equ 018Eh ;# 
   197  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   198                           PMADR equ 0191h ;# 
   199  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   200                           PMADRL equ 0191h ;# 
   201  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   202                           PMADRH equ 0192h ;# 
   203  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   204                           PMDAT equ 0193h ;# 
   205  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   206                           PMDATL equ 0193h ;# 
   207  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   208                           PMDATH equ 0194h ;# 
   209  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   210                           PMCON1 equ 0195h ;# 
   211  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   212                           PMCON2 equ 0196h ;# 
   213  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   214                           VREGCON equ 0197h ;# 
   215  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   216                           RCREG equ 0199h ;# 
   217  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   218                           TXREG equ 019Ah ;# 
   219  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   220                           SP1BRG equ 019Bh ;# 
   221  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   222                           SP1BRGL equ 019Bh ;# 
   223  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   224                           SPBRG equ 019Bh ;# 
   225  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   226                           SPBRGL equ 019Bh ;# 
   227  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   228                           SP1BRGH equ 019Ch ;# 
   229  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   230                           SPBRGH equ 019Ch ;# 
   231  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   232                           RCSTA equ 019Dh ;# 
   233  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   234                           TXSTA equ 019Eh ;# 
   235  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   236                           BAUDCON equ 019Fh ;# 
   237  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   238                           WPUB equ 020Dh ;# 
   239  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   240                           WPUE equ 0210h ;# 
   241  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   242                           SSPBUF equ 0211h ;# 
   243  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   244                           SSP1BUF equ 0211h ;# 
   245  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   246                           SSPADD equ 0212h ;# 
   247  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   248                           SSP1ADD equ 0212h ;# 
   249  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   250                           SSPMSK equ 0213h ;# 
   251  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   252                           SSP1MSK equ 0213h ;# 
   253  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   254                           SSPSTAT equ 0214h ;# 
   255  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   256                           SSP1STAT equ 0214h ;# 
   257  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   258                           SSPCON1 equ 0215h ;# 
   259  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   260                           SSPCON equ 0215h ;# 
   261  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   262                           SSP1CON1 equ 0215h ;# 
   263  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   264                           SSPCON2 equ 0216h ;# 
   265  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   266                           SSP1CON2 equ 0216h ;# 
   267  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   268                           SSPCON3 equ 0217h ;# 
   269  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   270                           SSP1CON3 equ 0217h ;# 
   271  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   272                           CCPR1 equ 0291h ;# 
   273  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   274                           CCPR1L equ 0291h ;# 
   275  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   276                           CCPR1H equ 0292h ;# 
   277  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   278                           CCP1CON equ 0293h ;# 
   279  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   280                           CCPR2 equ 0298h ;# 
   281  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   282                           CCPR2L equ 0298h ;# 
   283  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   284                           CCPR2H equ 0299h ;# 
   285  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   286                           CCP2CON equ 029Ah ;# 
   287  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   288                           IOCBP equ 0394h ;# 
   289  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   290                           IOCBN equ 0395h ;# 
   291  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   292                           IOCBF equ 0396h ;# 
   293  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   294                           STATUS_SHAD equ 0FE4h ;# 
   295  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   296                           WREG_SHAD equ 0FE5h ;# 
   297  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   298                           BSR_SHAD equ 0FE6h ;# 
   299  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   300                           PCLATH_SHAD equ 0FE7h ;# 
   301  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   302                           FSR0L_SHAD equ 0FE8h ;# 
   303  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   304                           FSR0H_SHAD equ 0FE9h ;# 
   305  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   306                           FSR1L_SHAD equ 0FEAh ;# 
   307  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   308                           FSR1H_SHAD equ 0FEBh ;# 
   309  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   310                           STKPTR equ 0FEDh ;# 
   311  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   312                           TOSL equ 0FEEh ;# 
   313  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   314                           TOSH equ 0FEFh ;# 
   315  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   316                           INDF0 equ 00h ;# 
   317  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   318                           INDF1 equ 01h ;# 
   319  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   320                           PCL equ 02h ;# 
   321  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   322                           STATUS equ 03h ;# 
   323  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   324                           FSR0L equ 04h ;# 
   325  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   326                           FSR0H equ 05h ;# 
   327  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   328                           FSR1L equ 06h ;# 
   329  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   330                           FSR1H equ 07h ;# 
   331  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   332                           BSR equ 08h ;# 
   333  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   334                           WREG equ 09h ;# 
   335  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   336                           PCLATH equ 0Ah ;# 
   337  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   338                           INTCON equ 0Bh ;# 
   339  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   340                           PORTA equ 0Ch ;# 
   341  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   342                           PORTB equ 0Dh ;# 
   343  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   344                           PORTC equ 0Eh ;# 
   345  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   346                           PORTE equ 010h ;# 
   347  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   348                           PIR1 equ 011h ;# 
   349  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   350                           PIR2 equ 012h ;# 
   351  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   352                           TMR0 equ 015h ;# 
   353  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   354                           TMR1 equ 016h ;# 
   355  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   356                           TMR1L equ 016h ;# 
   357  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   358                           TMR1H equ 017h ;# 
   359  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   360                           T1CON equ 018h ;# 
   361  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   362                           T1GCON equ 019h ;# 
   363  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   364                           TMR2 equ 01Ah ;# 
   365  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   366                           PR2 equ 01Bh ;# 
   367  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   368                           T2CON equ 01Ch ;# 
   369  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   370                           TRISA equ 08Ch ;# 
   371  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   372                           TRISB equ 08Dh ;# 
   373  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   374                           TRISC equ 08Eh ;# 
   375  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   376                           TRISE equ 090h ;# 
   377  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   378                           PIE1 equ 091h ;# 
   379  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   380                           PIE2 equ 092h ;# 
   381  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   382                           OPTION_REG equ 095h ;# 
   383  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   384                           PCON equ 096h ;# 
   385  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   386                           WDTCON equ 097h ;# 
   387  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   388                           OSCCON equ 099h ;# 
   389  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   390                           OSCSTAT equ 09Ah ;# 
   391  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   392                           ADRES equ 09Bh ;# 
   393  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   394                           ADRESL equ 09Bh ;# 
   395  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   396                           ADRESH equ 09Ch ;# 
   397  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   398                           ADCON0 equ 09Dh ;# 
   399  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   400                           ADCON1 equ 09Eh ;# 
   401  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   402                           LATA equ 010Ch ;# 
   403  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   404                           LATB equ 010Dh ;# 
   405  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   406                           LATC equ 010Eh ;# 
   407  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   408                           BORCON equ 0116h ;# 
   409  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   410                           FVRCON equ 0117h ;# 
   411  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   412                           APFCON equ 011Dh ;# 
   413  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   414                           ANSELA equ 018Ch ;# 
   415  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   416                           ANSELB equ 018Dh ;# 
   417  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   418                           ANSELC equ 018Eh ;# 
   419  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   420                           PMADR equ 0191h ;# 
   421  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   422                           PMADRL equ 0191h ;# 
   423  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   424                           PMADRH equ 0192h ;# 
   425  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   426                           PMDAT equ 0193h ;# 
   427  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   428                           PMDATL equ 0193h ;# 
   429  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   430                           PMDATH equ 0194h ;# 
   431  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   432                           PMCON1 equ 0195h ;# 
   433  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   434                           PMCON2 equ 0196h ;# 
   435  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   436                           VREGCON equ 0197h ;# 
   437  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   438                           RCREG equ 0199h ;# 
   439  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   440                           TXREG equ 019Ah ;# 
   441  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   442                           SP1BRG equ 019Bh ;# 
   443  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   444                           SP1BRGL equ 019Bh ;# 
   445  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   446                           SPBRG equ 019Bh ;# 
   447  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   448                           SPBRGL equ 019Bh ;# 
   449  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   450                           SP1BRGH equ 019Ch ;# 
   451  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   452                           SPBRGH equ 019Ch ;# 
   453  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   454                           RCSTA equ 019Dh ;# 
   455  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   456                           TXSTA equ 019Eh ;# 
   457  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   458                           BAUDCON equ 019Fh ;# 
   459  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   460                           WPUB equ 020Dh ;# 
   461  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   462                           WPUE equ 0210h ;# 
   463  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   464                           SSPBUF equ 0211h ;# 
   465  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   466                           SSP1BUF equ 0211h ;# 
   467  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   468                           SSPADD equ 0212h ;# 
   469  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   470                           SSP1ADD equ 0212h ;# 
   471  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   472                           SSPMSK equ 0213h ;# 
   473  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   474                           SSP1MSK equ 0213h ;# 
   475  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   476                           SSPSTAT equ 0214h ;# 
   477  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   478                           SSP1STAT equ 0214h ;# 
   479  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   480                           SSPCON1 equ 0215h ;# 
   481  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   482                           SSPCON equ 0215h ;# 
   483  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   484                           SSP1CON1 equ 0215h ;# 
   485  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   486                           SSPCON2 equ 0216h ;# 
   487  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   488                           SSP1CON2 equ 0216h ;# 
   489  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   490                           SSPCON3 equ 0217h ;# 
   491  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   492                           SSP1CON3 equ 0217h ;# 
   493  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   494                           CCPR1 equ 0291h ;# 
   495  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   496                           CCPR1L equ 0291h ;# 
   497  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   498                           CCPR1H equ 0292h ;# 
   499  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   500                           CCP1CON equ 0293h ;# 
   501  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   502                           CCPR2 equ 0298h ;# 
   503  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   504                           CCPR2L equ 0298h ;# 
   505  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   506                           CCPR2H equ 0299h ;# 
   507  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   508                           CCP2CON equ 029Ah ;# 
   509  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   510                           IOCBP equ 0394h ;# 
   511  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   512                           IOCBN equ 0395h ;# 
   513  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   514                           IOCBF equ 0396h ;# 
   515  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   516                           STATUS_SHAD equ 0FE4h ;# 
   517  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   518                           WREG_SHAD equ 0FE5h ;# 
   519  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   520                           BSR_SHAD equ 0FE6h ;# 
   521  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   522                           PCLATH_SHAD equ 0FE7h ;# 
   523  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   524                           FSR0L_SHAD equ 0FE8h ;# 
   525  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   526                           FSR0H_SHAD equ 0FE9h ;# 
   527  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   528                           FSR1L_SHAD equ 0FEAh ;# 
   529  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   530                           FSR1H_SHAD equ 0FEBh ;# 
   531  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   532                           STKPTR equ 0FEDh ;# 
   533  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   534                           TOSL equ 0FEEh ;# 
   535  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   536                           TOSH equ 0FEFh ;# 
   537  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   538                           INDF0 equ 00h ;# 
   539  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   540                           INDF1 equ 01h ;# 
   541  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   542                           PCL equ 02h ;# 
   543  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   544                           STATUS equ 03h ;# 
   545  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   546                           FSR0L equ 04h ;# 
   547  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   548                           FSR0H equ 05h ;# 
   549  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   550                           FSR1L equ 06h ;# 
   551  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   552                           FSR1H equ 07h ;# 
   553  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   554                           BSR equ 08h ;# 
   555  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   556                           WREG equ 09h ;# 
   557  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   558                           PCLATH equ 0Ah ;# 
   559  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   560                           INTCON equ 0Bh ;# 
   561  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   562                           PORTA equ 0Ch ;# 
   563  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   564                           PORTB equ 0Dh ;# 
   565  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   566                           PORTC equ 0Eh ;# 
   567  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   568                           PORTE equ 010h ;# 
   569  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   570                           PIR1 equ 011h ;# 
   571  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   572                           PIR2 equ 012h ;# 
   573  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   574                           TMR0 equ 015h ;# 
   575  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   576                           TMR1 equ 016h ;# 
   577  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   578                           TMR1L equ 016h ;# 
   579  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   580                           TMR1H equ 017h ;# 
   581  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   582                           T1CON equ 018h ;# 
   583  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   584                           T1GCON equ 019h ;# 
   585  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   586                           TMR2 equ 01Ah ;# 
   587  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   588                           PR2 equ 01Bh ;# 
   589  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   590                           T2CON equ 01Ch ;# 
   591  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   592                           TRISA equ 08Ch ;# 
   593  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   594                           TRISB equ 08Dh ;# 
   595  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   596                           TRISC equ 08Eh ;# 
   597  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   598                           TRISE equ 090h ;# 
   599  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   600                           PIE1 equ 091h ;# 
   601  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   602                           PIE2 equ 092h ;# 
   603  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   604                           OPTION_REG equ 095h ;# 
   605  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   606                           PCON equ 096h ;# 
   607  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   608                           WDTCON equ 097h ;# 
   609  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   610                           OSCCON equ 099h ;# 
   611  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   612                           OSCSTAT equ 09Ah ;# 
   613  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   614                           ADRES equ 09Bh ;# 
   615  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   616                           ADRESL equ 09Bh ;# 
   617  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   618                           ADRESH equ 09Ch ;# 
   619  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   620                           ADCON0 equ 09Dh ;# 
   621  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   622                           ADCON1 equ 09Eh ;# 
   623  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   624                           LATA equ 010Ch ;# 
   625  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   626                           LATB equ 010Dh ;# 
   627  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   628                           LATC equ 010Eh ;# 
   629  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   630                           BORCON equ 0116h ;# 
   631  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   632                           FVRCON equ 0117h ;# 
   633  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   634                           APFCON equ 011Dh ;# 
   635  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   636                           ANSELA equ 018Ch ;# 
   637  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   638                           ANSELB equ 018Dh ;# 
   639  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   640                           ANSELC equ 018Eh ;# 
   641  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   642                           PMADR equ 0191h ;# 
   643  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   644                           PMADRL equ 0191h ;# 
   645  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   646                           PMADRH equ 0192h ;# 
   647  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   648                           PMDAT equ 0193h ;# 
   649  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   650                           PMDATL equ 0193h ;# 
   651  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   652                           PMDATH equ 0194h ;# 
   653  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   654                           PMCON1 equ 0195h ;# 
   655  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   656                           PMCON2 equ 0196h ;# 
   657  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   658                           VREGCON equ 0197h ;# 
   659  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   660                           RCREG equ 0199h ;# 
   661  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   662                           TXREG equ 019Ah ;# 
   663  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   664                           SP1BRG equ 019Bh ;# 
   665  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   666                           SP1BRGL equ 019Bh ;# 
   667  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   668                           SPBRG equ 019Bh ;# 
   669  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   670                           SPBRGL equ 019Bh ;# 
   671  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   672                           SP1BRGH equ 019Ch ;# 
   673  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   674                           SPBRGH equ 019Ch ;# 
   675  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   676                           RCSTA equ 019Dh ;# 
   677  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   678                           TXSTA equ 019Eh ;# 
   679  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   680                           BAUDCON equ 019Fh ;# 
   681  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   682                           WPUB equ 020Dh ;# 
   683  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   684                           WPUE equ 0210h ;# 
   685  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   686                           SSPBUF equ 0211h ;# 
   687  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   688                           SSP1BUF equ 0211h ;# 
   689  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   690                           SSPADD equ 0212h ;# 
   691  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   692                           SSP1ADD equ 0212h ;# 
   693  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   694                           SSPMSK equ 0213h ;# 
   695  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   696                           SSP1MSK equ 0213h ;# 
   697  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   698                           SSPSTAT equ 0214h ;# 
   699  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   700                           SSP1STAT equ 0214h ;# 
   701  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   702                           SSPCON1 equ 0215h ;# 
   703  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   704                           SSPCON equ 0215h ;# 
   705  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   706                           SSP1CON1 equ 0215h ;# 
   707  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   708                           SSPCON2 equ 0216h ;# 
   709  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   710                           SSP1CON2 equ 0216h ;# 
   711  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   712                           SSPCON3 equ 0217h ;# 
   713  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   714                           SSP1CON3 equ 0217h ;# 
   715  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   716                           CCPR1 equ 0291h ;# 
   717  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   718                           CCPR1L equ 0291h ;# 
   719  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   720                           CCPR1H equ 0292h ;# 
   721  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   722                           CCP1CON equ 0293h ;# 
   723  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   724                           CCPR2 equ 0298h ;# 
   725  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   726                           CCPR2L equ 0298h ;# 
   727  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   728                           CCPR2H equ 0299h ;# 
   729  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   730                           CCP2CON equ 029Ah ;# 
   731  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   732                           IOCBP equ 0394h ;# 
   733  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   734                           IOCBN equ 0395h ;# 
   735  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   736                           IOCBF equ 0396h ;# 
   737  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   738                           STATUS_SHAD equ 0FE4h ;# 
   739  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   740                           WREG_SHAD equ 0FE5h ;# 
   741  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   742                           BSR_SHAD equ 0FE6h ;# 
   743  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   744                           PCLATH_SHAD equ 0FE7h ;# 
   745  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   746                           FSR0L_SHAD equ 0FE8h ;# 
   747  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   748                           FSR0H_SHAD equ 0FE9h ;# 
   749  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   750                           FSR1L_SHAD equ 0FEAh ;# 
   751  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   752                           FSR1H_SHAD equ 0FEBh ;# 
   753  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   754                           STKPTR equ 0FEDh ;# 
   755  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   756                           TOSL equ 0FEEh ;# 
   757  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   758                           TOSH equ 0FEFh ;# 
   759  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   760                           INDF0 equ 00h ;# 
   761  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   762                           INDF1 equ 01h ;# 
   763  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   764                           PCL equ 02h ;# 
   765  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   766                           STATUS equ 03h ;# 
   767  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   768                           FSR0L equ 04h ;# 
   769  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   770                           FSR0H equ 05h ;# 
   771  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   772                           FSR1L equ 06h ;# 
   773  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   774                           FSR1H equ 07h ;# 
   775  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   776                           BSR equ 08h ;# 
   777  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   778                           WREG equ 09h ;# 
   779  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   780                           PCLATH equ 0Ah ;# 
   781  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   782                           INTCON equ 0Bh ;# 
   783  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   784                           PORTA equ 0Ch ;# 
   785  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   786                           PORTB equ 0Dh ;# 
   787  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   788                           PORTC equ 0Eh ;# 
   789  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   790                           PORTE equ 010h ;# 
   791  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   792                           PIR1 equ 011h ;# 
   793  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   794                           PIR2 equ 012h ;# 
   795  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   796                           TMR0 equ 015h ;# 
   797  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   798                           TMR1 equ 016h ;# 
   799  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   800                           TMR1L equ 016h ;# 
   801  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   802                           TMR1H equ 017h ;# 
   803  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   804                           T1CON equ 018h ;# 
   805  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   806                           T1GCON equ 019h ;# 
   807  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   808                           TMR2 equ 01Ah ;# 
   809  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   810                           PR2 equ 01Bh ;# 
   811  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   812                           T2CON equ 01Ch ;# 
   813  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   814                           TRISA equ 08Ch ;# 
   815  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   816                           TRISB equ 08Dh ;# 
   817  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   818                           TRISC equ 08Eh ;# 
   819  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   820                           TRISE equ 090h ;# 
   821  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   822                           PIE1 equ 091h ;# 
   823  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   824                           PIE2 equ 092h ;# 
   825  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   826                           OPTION_REG equ 095h ;# 
   827  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   828                           PCON equ 096h ;# 
   829  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   830                           WDTCON equ 097h ;# 
   831  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   832                           OSCCON equ 099h ;# 
   833  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   834                           OSCSTAT equ 09Ah ;# 
   835  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   836                           ADRES equ 09Bh ;# 
   837  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   838                           ADRESL equ 09Bh ;# 
   839  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   840                           ADRESH equ 09Ch ;# 
   841  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   842                           ADCON0 equ 09Dh ;# 
   843  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   844                           ADCON1 equ 09Eh ;# 
   845  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   846                           LATA equ 010Ch ;# 
   847  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   848                           LATB equ 010Dh ;# 
   849  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   850                           LATC equ 010Eh ;# 
   851  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   852                           BORCON equ 0116h ;# 
   853  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   854                           FVRCON equ 0117h ;# 
   855  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   856                           APFCON equ 011Dh ;# 
   857  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   858                           ANSELA equ 018Ch ;# 
   859  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   860                           ANSELB equ 018Dh ;# 
   861  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   862                           ANSELC equ 018Eh ;# 
   863  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   864                           PMADR equ 0191h ;# 
   865  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   866                           PMADRL equ 0191h ;# 
   867  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   868                           PMADRH equ 0192h ;# 
   869  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   870                           PMDAT equ 0193h ;# 
   871  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   872                           PMDATL equ 0193h ;# 
   873  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   874                           PMDATH equ 0194h ;# 
   875  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   876                           PMCON1 equ 0195h ;# 
   877  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   878                           PMCON2 equ 0196h ;# 
   879  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   880                           VREGCON equ 0197h ;# 
   881  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   882                           RCREG equ 0199h ;# 
   883  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   884                           TXREG equ 019Ah ;# 
   885  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   886                           SP1BRG equ 019Bh ;# 
   887  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   888                           SP1BRGL equ 019Bh ;# 
   889  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   890                           SPBRG equ 019Bh ;# 
   891  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   892                           SPBRGL equ 019Bh ;# 
   893  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   894                           SP1BRGH equ 019Ch ;# 
   895  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   896                           SPBRGH equ 019Ch ;# 
   897  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   898                           RCSTA equ 019Dh ;# 
   899  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   900                           TXSTA equ 019Eh ;# 
   901  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   902                           BAUDCON equ 019Fh ;# 
   903  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   904                           WPUB equ 020Dh ;# 
   905  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   906                           WPUE equ 0210h ;# 
   907  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   908                           SSPBUF equ 0211h ;# 
   909  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   910                           SSP1BUF equ 0211h ;# 
   911  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   912                           SSPADD equ 0212h ;# 
   913  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   914                           SSP1ADD equ 0212h ;# 
   915  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   916                           SSPMSK equ 0213h ;# 
   917  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   918                           SSP1MSK equ 0213h ;# 
   919  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   920                           SSPSTAT equ 0214h ;# 
   921  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   922                           SSP1STAT equ 0214h ;# 
   923  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   924                           SSPCON1 equ 0215h ;# 
   925  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   926                           SSPCON equ 0215h ;# 
   927  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   928                           SSP1CON1 equ 0215h ;# 
   929  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   930                           SSPCON2 equ 0216h ;# 
   931  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   932                           SSP1CON2 equ 0216h ;# 
   933  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   934                           SSPCON3 equ 0217h ;# 
   935  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   936                           SSP1CON3 equ 0217h ;# 
   937  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   938                           CCPR1 equ 0291h ;# 
   939  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   940                           CCPR1L equ 0291h ;# 
   941  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   942                           CCPR1H equ 0292h ;# 
   943  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   944                           CCP1CON equ 0293h ;# 
   945  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   946                           CCPR2 equ 0298h ;# 
   947  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   948                           CCPR2L equ 0298h ;# 
   949  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   950                           CCPR2H equ 0299h ;# 
   951  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   952                           CCP2CON equ 029Ah ;# 
   953  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   954                           IOCBP equ 0394h ;# 
   955  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   956                           IOCBN equ 0395h ;# 
   957  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   958                           IOCBF equ 0396h ;# 
   959  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   960                           STATUS_SHAD equ 0FE4h ;# 
   961  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   962                           WREG_SHAD equ 0FE5h ;# 
   963  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   964                           BSR_SHAD equ 0FE6h ;# 
   965  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   966                           PCLATH_SHAD equ 0FE7h ;# 
   967  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   968                           FSR0L_SHAD equ 0FE8h ;# 
   969  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   970                           FSR0H_SHAD equ 0FE9h ;# 
   971  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   972                           FSR1L_SHAD equ 0FEAh ;# 
   973  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   974                           FSR1H_SHAD equ 0FEBh ;# 
   975  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   976                           STKPTR equ 0FEDh ;# 
   977  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   978                           TOSL equ 0FEEh ;# 
   979  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   980                           TOSH equ 0FEFh ;# 
   981  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   982                           INDF0 equ 00h ;# 
   983  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   984                           INDF1 equ 01h ;# 
   985  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   986                           PCL equ 02h ;# 
   987  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   988                           STATUS equ 03h ;# 
   989  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   990                           FSR0L equ 04h ;# 
   991  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   992                           FSR0H equ 05h ;# 
   993  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   994                           FSR1L equ 06h ;# 
   995  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   996                           FSR1H equ 07h ;# 
   997  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   998                           BSR equ 08h ;# 
   999  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1000                           WREG equ 09h ;# 
  1001  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1002                           PCLATH equ 0Ah ;# 
  1003  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1004                           INTCON equ 0Bh ;# 
  1005  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1006                           PORTA equ 0Ch ;# 
  1007  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1008                           PORTB equ 0Dh ;# 
  1009  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1010                           PORTC equ 0Eh ;# 
  1011  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1012                           PORTE equ 010h ;# 
  1013  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1014                           PIR1 equ 011h ;# 
  1015  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1016                           PIR2 equ 012h ;# 
  1017  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1018                           TMR0 equ 015h ;# 
  1019  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1020                           TMR1 equ 016h ;# 
  1021  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1022                           TMR1L equ 016h ;# 
  1023  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1024                           TMR1H equ 017h ;# 
  1025  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1026                           T1CON equ 018h ;# 
  1027  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1028                           T1GCON equ 019h ;# 
  1029  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1030                           TMR2 equ 01Ah ;# 
  1031  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1032                           PR2 equ 01Bh ;# 
  1033  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1034                           T2CON equ 01Ch ;# 
  1035  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1036                           TRISA equ 08Ch ;# 
  1037  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1038                           TRISB equ 08Dh ;# 
  1039  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1040                           TRISC equ 08Eh ;# 
  1041  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1042                           TRISE equ 090h ;# 
  1043  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1044                           PIE1 equ 091h ;# 
  1045  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1046                           PIE2 equ 092h ;# 
  1047  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1048                           OPTION_REG equ 095h ;# 
  1049  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1050                           PCON equ 096h ;# 
  1051  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1052                           WDTCON equ 097h ;# 
  1053  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1054                           OSCCON equ 099h ;# 
  1055  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1056                           OSCSTAT equ 09Ah ;# 
  1057  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1058                           ADRES equ 09Bh ;# 
  1059  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1060                           ADRESL equ 09Bh ;# 
  1061  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1062                           ADRESH equ 09Ch ;# 
  1063  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1064                           ADCON0 equ 09Dh ;# 
  1065  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1066                           ADCON1 equ 09Eh ;# 
  1067  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1068                           LATA equ 010Ch ;# 
  1069  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1070                           LATB equ 010Dh ;# 
  1071  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1072                           LATC equ 010Eh ;# 
  1073  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1074                           BORCON equ 0116h ;# 
  1075  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1076                           FVRCON equ 0117h ;# 
  1077  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1078                           APFCON equ 011Dh ;# 
  1079  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1080                           ANSELA equ 018Ch ;# 
  1081  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1082                           ANSELB equ 018Dh ;# 
  1083  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1084                           ANSELC equ 018Eh ;# 
  1085  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1086                           PMADR equ 0191h ;# 
  1087  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1088                           PMADRL equ 0191h ;# 
  1089  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1090                           PMADRH equ 0192h ;# 
  1091  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1092                           PMDAT equ 0193h ;# 
  1093  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1094                           PMDATL equ 0193h ;# 
  1095  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1096                           PMDATH equ 0194h ;# 
  1097  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1098                           PMCON1 equ 0195h ;# 
  1099  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1100                           PMCON2 equ 0196h ;# 
  1101  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1102                           VREGCON equ 0197h ;# 
  1103  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1104                           RCREG equ 0199h ;# 
  1105  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1106                           TXREG equ 019Ah ;# 
  1107  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1108                           SP1BRG equ 019Bh ;# 
  1109  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1110                           SP1BRGL equ 019Bh ;# 
  1111  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1112                           SPBRG equ 019Bh ;# 
  1113  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1114                           SPBRGL equ 019Bh ;# 
  1115  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1116                           SP1BRGH equ 019Ch ;# 
  1117  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1118                           SPBRGH equ 019Ch ;# 
  1119  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1120                           RCSTA equ 019Dh ;# 
  1121  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1122                           TXSTA equ 019Eh ;# 
  1123  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1124                           BAUDCON equ 019Fh ;# 
  1125  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1126                           WPUB equ 020Dh ;# 
  1127  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1128                           WPUE equ 0210h ;# 
  1129  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1130                           SSPBUF equ 0211h ;# 
  1131  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1132                           SSP1BUF equ 0211h ;# 
  1133  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1134                           SSPADD equ 0212h ;# 
  1135  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1136                           SSP1ADD equ 0212h ;# 
  1137  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1138                           SSPMSK equ 0213h ;# 
  1139  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1140                           SSP1MSK equ 0213h ;# 
  1141  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1142                           SSPSTAT equ 0214h ;# 
  1143  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1144                           SSP1STAT equ 0214h ;# 
  1145  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1146                           SSPCON1 equ 0215h ;# 
  1147  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1148                           SSPCON equ 0215h ;# 
  1149  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1150                           SSP1CON1 equ 0215h ;# 
  1151  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1152                           SSPCON2 equ 0216h ;# 
  1153  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1154                           SSP1CON2 equ 0216h ;# 
  1155  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1156                           SSPCON3 equ 0217h ;# 
  1157  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1158                           SSP1CON3 equ 0217h ;# 
  1159  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1160                           CCPR1 equ 0291h ;# 
  1161  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1162                           CCPR1L equ 0291h ;# 
  1163  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1164                           CCPR1H equ 0292h ;# 
  1165  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1166                           CCP1CON equ 0293h ;# 
  1167  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1168                           CCPR2 equ 0298h ;# 
  1169  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1170                           CCPR2L equ 0298h ;# 
  1171  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1172                           CCPR2H equ 0299h ;# 
  1173  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1174                           CCP2CON equ 029Ah ;# 
  1175  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1176                           IOCBP equ 0394h ;# 
  1177  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1178                           IOCBN equ 0395h ;# 
  1179  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1180                           IOCBF equ 0396h ;# 
  1181  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1182                           STATUS_SHAD equ 0FE4h ;# 
  1183  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1184                           WREG_SHAD equ 0FE5h ;# 
  1185  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1186                           BSR_SHAD equ 0FE6h ;# 
  1187  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1188                           PCLATH_SHAD equ 0FE7h ;# 
  1189  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1190                           FSR0L_SHAD equ 0FE8h ;# 
  1191  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1192                           FSR0H_SHAD equ 0FE9h ;# 
  1193  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1194                           FSR1L_SHAD equ 0FEAh ;# 
  1195  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1196                           FSR1H_SHAD equ 0FEBh ;# 
  1197  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1198                           STKPTR equ 0FEDh ;# 
  1199  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1200                           TOSL equ 0FEEh ;# 
  1201  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1202                           TOSH equ 0FEFh ;# 
  1203  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1204                           INDF0 equ 00h ;# 
  1205  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1206                           INDF1 equ 01h ;# 
  1207  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1208                           PCL equ 02h ;# 
  1209  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1210                           STATUS equ 03h ;# 
  1211  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1212                           FSR0L equ 04h ;# 
  1213  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1214                           FSR0H equ 05h ;# 
  1215  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1216                           FSR1L equ 06h ;# 
  1217  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1218                           FSR1H equ 07h ;# 
  1219  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1220                           BSR equ 08h ;# 
  1221  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1222                           WREG equ 09h ;# 
  1223  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1224                           PCLATH equ 0Ah ;# 
  1225  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1226                           INTCON equ 0Bh ;# 
  1227  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1228                           PORTA equ 0Ch ;# 
  1229  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1230                           PORTB equ 0Dh ;# 
  1231  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1232                           PORTC equ 0Eh ;# 
  1233  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1234                           PORTE equ 010h ;# 
  1235  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1236                           PIR1 equ 011h ;# 
  1237  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1238                           PIR2 equ 012h ;# 
  1239  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1240                           TMR0 equ 015h ;# 
  1241  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1242                           TMR1 equ 016h ;# 
  1243  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1244                           TMR1L equ 016h ;# 
  1245  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1246                           TMR1H equ 017h ;# 
  1247  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1248                           T1CON equ 018h ;# 
  1249  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1250                           T1GCON equ 019h ;# 
  1251  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1252                           TMR2 equ 01Ah ;# 
  1253  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1254                           PR2 equ 01Bh ;# 
  1255  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1256                           T2CON equ 01Ch ;# 
  1257  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1258                           TRISA equ 08Ch ;# 
  1259  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1260                           TRISB equ 08Dh ;# 
  1261  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1262                           TRISC equ 08Eh ;# 
  1263  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1264                           TRISE equ 090h ;# 
  1265  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1266                           PIE1 equ 091h ;# 
  1267  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1268                           PIE2 equ 092h ;# 
  1269  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1270                           OPTION_REG equ 095h ;# 
  1271  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1272                           PCON equ 096h ;# 
  1273  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1274                           WDTCON equ 097h ;# 
  1275  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1276                           OSCCON equ 099h ;# 
  1277  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1278                           OSCSTAT equ 09Ah ;# 
  1279  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1280                           ADRES equ 09Bh ;# 
  1281  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1282                           ADRESL equ 09Bh ;# 
  1283  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1284                           ADRESH equ 09Ch ;# 
  1285  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1286                           ADCON0 equ 09Dh ;# 
  1287  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1288                           ADCON1 equ 09Eh ;# 
  1289  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1290                           LATA equ 010Ch ;# 
  1291  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1292                           LATB equ 010Dh ;# 
  1293  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1294                           LATC equ 010Eh ;# 
  1295  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1296                           BORCON equ 0116h ;# 
  1297  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1298                           FVRCON equ 0117h ;# 
  1299  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1300                           APFCON equ 011Dh ;# 
  1301  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1302                           ANSELA equ 018Ch ;# 
  1303  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1304                           ANSELB equ 018Dh ;# 
  1305  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1306                           ANSELC equ 018Eh ;# 
  1307  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1308                           PMADR equ 0191h ;# 
  1309  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1310                           PMADRL equ 0191h ;# 
  1311  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1312                           PMADRH equ 0192h ;# 
  1313  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1314                           PMDAT equ 0193h ;# 
  1315  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1316                           PMDATL equ 0193h ;# 
  1317  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1318                           PMDATH equ 0194h ;# 
  1319  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1320                           PMCON1 equ 0195h ;# 
  1321  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1322                           PMCON2 equ 0196h ;# 
  1323  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1324                           VREGCON equ 0197h ;# 
  1325  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1326                           RCREG equ 0199h ;# 
  1327  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1328                           TXREG equ 019Ah ;# 
  1329  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1330                           SP1BRG equ 019Bh ;# 
  1331  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1332                           SP1BRGL equ 019Bh ;# 
  1333  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1334                           SPBRG equ 019Bh ;# 
  1335  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1336                           SPBRGL equ 019Bh ;# 
  1337  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1338                           SP1BRGH equ 019Ch ;# 
  1339  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1340                           SPBRGH equ 019Ch ;# 
  1341  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1342                           RCSTA equ 019Dh ;# 
  1343  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1344                           TXSTA equ 019Eh ;# 
  1345  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1346                           BAUDCON equ 019Fh ;# 
  1347  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1348                           WPUB equ 020Dh ;# 
  1349  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1350                           WPUE equ 0210h ;# 
  1351  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1352                           SSPBUF equ 0211h ;# 
  1353  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1354                           SSP1BUF equ 0211h ;# 
  1355  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1356                           SSPADD equ 0212h ;# 
  1357  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1358                           SSP1ADD equ 0212h ;# 
  1359  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1360                           SSPMSK equ 0213h ;# 
  1361  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1362                           SSP1MSK equ 0213h ;# 
  1363  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1364                           SSPSTAT equ 0214h ;# 
  1365  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1366                           SSP1STAT equ 0214h ;# 
  1367  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1368                           SSPCON1 equ 0215h ;# 
  1369  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1370                           SSPCON equ 0215h ;# 
  1371  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1372                           SSP1CON1 equ 0215h ;# 
  1373  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1374                           SSPCON2 equ 0216h ;# 
  1375  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1376                           SSP1CON2 equ 0216h ;# 
  1377  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1378                           SSPCON3 equ 0217h ;# 
  1379  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1380                           SSP1CON3 equ 0217h ;# 
  1381  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1382                           CCPR1 equ 0291h ;# 
  1383  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1384                           CCPR1L equ 0291h ;# 
  1385  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1386                           CCPR1H equ 0292h ;# 
  1387  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1388                           CCP1CON equ 0293h ;# 
  1389  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1390                           CCPR2 equ 0298h ;# 
  1391  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1392                           CCPR2L equ 0298h ;# 
  1393  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1394                           CCPR2H equ 0299h ;# 
  1395  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1396                           CCP2CON equ 029Ah ;# 
  1397  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1398                           IOCBP equ 0394h ;# 
  1399  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1400                           IOCBN equ 0395h ;# 
  1401  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1402                           IOCBF equ 0396h ;# 
  1403  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1404                           STATUS_SHAD equ 0FE4h ;# 
  1405  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1406                           WREG_SHAD equ 0FE5h ;# 
  1407  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1408                           BSR_SHAD equ 0FE6h ;# 
  1409  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1410                           PCLATH_SHAD equ 0FE7h ;# 
  1411  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1412                           FSR0L_SHAD equ 0FE8h ;# 
  1413  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1414                           FSR0H_SHAD equ 0FE9h ;# 
  1415  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1416                           FSR1L_SHAD equ 0FEAh ;# 
  1417  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1418                           FSR1H_SHAD equ 0FEBh ;# 
  1419  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1420                           STKPTR equ 0FEDh ;# 
  1421  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1422                           TOSL equ 0FEEh ;# 
  1423  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1424                           TOSH equ 0FEFh ;# 
  1425  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1426                           INDF0 equ 00h ;# 
  1427  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1428                           INDF1 equ 01h ;# 
  1429  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1430                           PCL equ 02h ;# 
  1431  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1432                           STATUS equ 03h ;# 
  1433  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1434                           FSR0L equ 04h ;# 
  1435  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1436                           FSR0H equ 05h ;# 
  1437  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1438                           FSR1L equ 06h ;# 
  1439  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1440                           FSR1H equ 07h ;# 
  1441  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1442                           BSR equ 08h ;# 
  1443  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1444                           WREG equ 09h ;# 
  1445  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1446                           PCLATH equ 0Ah ;# 
  1447  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1448                           INTCON equ 0Bh ;# 
  1449  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1450                           PORTA equ 0Ch ;# 
  1451  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1452                           PORTB equ 0Dh ;# 
  1453  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1454                           PORTC equ 0Eh ;# 
  1455  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1456                           PORTE equ 010h ;# 
  1457  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1458                           PIR1 equ 011h ;# 
  1459  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1460                           PIR2 equ 012h ;# 
  1461  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1462                           TMR0 equ 015h ;# 
  1463  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1464                           TMR1 equ 016h ;# 
  1465  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1466                           TMR1L equ 016h ;# 
  1467  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1468                           TMR1H equ 017h ;# 
  1469  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1470                           T1CON equ 018h ;# 
  1471  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1472                           T1GCON equ 019h ;# 
  1473  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1474                           TMR2 equ 01Ah ;# 
  1475  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1476                           PR2 equ 01Bh ;# 
  1477  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1478                           T2CON equ 01Ch ;# 
  1479  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1480                           TRISA equ 08Ch ;# 
  1481  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1482                           TRISB equ 08Dh ;# 
  1483  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1484                           TRISC equ 08Eh ;# 
  1485  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1486                           TRISE equ 090h ;# 
  1487  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1488                           PIE1 equ 091h ;# 
  1489  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1490                           PIE2 equ 092h ;# 
  1491  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1492                           OPTION_REG equ 095h ;# 
  1493  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1494                           PCON equ 096h ;# 
  1495  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1496                           WDTCON equ 097h ;# 
  1497  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1498                           OSCCON equ 099h ;# 
  1499  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1500                           OSCSTAT equ 09Ah ;# 
  1501  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1502                           ADRES equ 09Bh ;# 
  1503  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1504                           ADRESL equ 09Bh ;# 
  1505  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1506                           ADRESH equ 09Ch ;# 
  1507  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1508                           ADCON0 equ 09Dh ;# 
  1509  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1510                           ADCON1 equ 09Eh ;# 
  1511  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1512                           LATA equ 010Ch ;# 
  1513  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1514                           LATB equ 010Dh ;# 
  1515  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1516                           LATC equ 010Eh ;# 
  1517  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1518                           BORCON equ 0116h ;# 
  1519  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1520                           FVRCON equ 0117h ;# 
  1521  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1522                           APFCON equ 011Dh ;# 
  1523  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1524                           ANSELA equ 018Ch ;# 
  1525  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1526                           ANSELB equ 018Dh ;# 
  1527  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1528                           ANSELC equ 018Eh ;# 
  1529  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1530                           PMADR equ 0191h ;# 
  1531  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1532                           PMADRL equ 0191h ;# 
  1533  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1534                           PMADRH equ 0192h ;# 
  1535  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1536                           PMDAT equ 0193h ;# 
  1537  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1538                           PMDATL equ 0193h ;# 
  1539  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1540                           PMDATH equ 0194h ;# 
  1541  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1542                           PMCON1 equ 0195h ;# 
  1543  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1544                           PMCON2 equ 0196h ;# 
  1545  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1546                           VREGCON equ 0197h ;# 
  1547  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1548                           RCREG equ 0199h ;# 
  1549  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1550                           TXREG equ 019Ah ;# 
  1551  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1552                           SP1BRG equ 019Bh ;# 
  1553  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1554                           SP1BRGL equ 019Bh ;# 
  1555  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1556                           SPBRG equ 019Bh ;# 
  1557  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1558                           SPBRGL equ 019Bh ;# 
  1559  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1560                           SP1BRGH equ 019Ch ;# 
  1561  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1562                           SPBRGH equ 019Ch ;# 
  1563  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1564                           RCSTA equ 019Dh ;# 
  1565  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1566                           TXSTA equ 019Eh ;# 
  1567  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1568                           BAUDCON equ 019Fh ;# 
  1569  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1570                           WPUB equ 020Dh ;# 
  1571  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1572                           WPUE equ 0210h ;# 
  1573  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1574                           SSPBUF equ 0211h ;# 
  1575  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1576                           SSP1BUF equ 0211h ;# 
  1577  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1578                           SSPADD equ 0212h ;# 
  1579  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1580                           SSP1ADD equ 0212h ;# 
  1581  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1582                           SSPMSK equ 0213h ;# 
  1583  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1584                           SSP1MSK equ 0213h ;# 
  1585  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1586                           SSPSTAT equ 0214h ;# 
  1587  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1588                           SSP1STAT equ 0214h ;# 
  1589  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1590                           SSPCON1 equ 0215h ;# 
  1591  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1592                           SSPCON equ 0215h ;# 
  1593  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1594                           SSP1CON1 equ 0215h ;# 
  1595  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1596                           SSPCON2 equ 0216h ;# 
  1597  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1598                           SSP1CON2 equ 0216h ;# 
  1599  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1600                           SSPCON3 equ 0217h ;# 
  1601  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1602                           SSP1CON3 equ 0217h ;# 
  1603  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1604                           CCPR1 equ 0291h ;# 
  1605  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1606                           CCPR1L equ 0291h ;# 
  1607  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1608                           CCPR1H equ 0292h ;# 
  1609  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1610                           CCP1CON equ 0293h ;# 
  1611  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1612                           CCPR2 equ 0298h ;# 
  1613  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1614                           CCPR2L equ 0298h ;# 
  1615  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1616                           CCPR2H equ 0299h ;# 
  1617  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1618                           CCP2CON equ 029Ah ;# 
  1619  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1620                           IOCBP equ 0394h ;# 
  1621  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1622                           IOCBN equ 0395h ;# 
  1623  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1624                           IOCBF equ 0396h ;# 
  1625  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1626                           STATUS_SHAD equ 0FE4h ;# 
  1627  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1628                           WREG_SHAD equ 0FE5h ;# 
  1629  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1630                           BSR_SHAD equ 0FE6h ;# 
  1631  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1632                           PCLATH_SHAD equ 0FE7h ;# 
  1633  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1634                           FSR0L_SHAD equ 0FE8h ;# 
  1635  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1636                           FSR0H_SHAD equ 0FE9h ;# 
  1637  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1638                           FSR1L_SHAD equ 0FEAh ;# 
  1639  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1640                           FSR1H_SHAD equ 0FEBh ;# 
  1641  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1642                           STKPTR equ 0FEDh ;# 
  1643  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1644                           TOSL equ 0FEEh ;# 
  1645  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1646                           TOSH equ 0FEFh ;# 
  1647  0FEF                     DABS 1,1568,48	;_gEusartRXBuffer
  1648                           DABS 1,1440,80	;_gEusartRXBuffer
  1649                           DABS 1,1320,72	;_gEusartRXBuffer
  1650                           	FNCALL	_main,_AddTrace
  1651                           	FNCALL	_main,_Debounce
  1652                           	FNCALL	_main,_EM1812EntryPoint
  1653                           	FNCALL	_main,_Esp8266OpenSocket
  1654                           	FNCALL	_main,_Esp8266SetAccessPointMode
  1655                           	FNCALL	_main,_Esp8266SetupWifi
  1656                           	FNCALL	_main,_PrintLog
  1657                           	FNCALL	_main,_clearDisplay
  1658                           	FNCALL	_main,_initLCD
  1659                           	FNCALL	_main,_lcdWriteText
  1660                           	FNCALL	_main,_memset
  1661                           	FNCALL	_main,_moveCursorToHome
  1662                           	FNCALL	_main,_powerOnLcd
  1663                           	FNCALL	_main,_printEM1812
  1664                           	FNCALL	_main,_setCursorOff
  1665                           	FNCALL	_main,_setCursorPosition
  1666                           	FNCALL	_main,_setNotBlinkingCursor
  1667                           	FNCALL	_setNotBlinkingCursor,_writeInsChk
  1668                           	FNCALL	_setCursorOff,_writeInsChk
  1669                           	FNCALL	_printEM1812,___awdiv
  1670                           	FNCALL	_printEM1812,___awmod
  1671                           	FNCALL	_powerOnLcd,_writeInsChk
  1672                           	FNCALL	_moveCursorToHome,_writeInsChk
  1673                           	FNCALL	_initLCD,_clearDisplay
  1674                           	FNCALL	_initLCD,_setData
  1675                           	FNCALL	_initLCD,_writeInsChk
  1676                           	FNCALL	_clearDisplay,_writeInsChk
  1677                           	FNCALL	_writeInsChk,_waitLCDBusy
  1678                           	FNCALL	_writeInsChk,_writeInsNoChk
  1679                           	FNCALL	_writeInsNoChk,_SetToSendDataToLCD
  1680                           	FNCALL	_writeInsNoChk,_setData
  1681                           	FNCALL	_PrintLog,_lcdWriteText
  1682                           	FNCALL	_PrintLog,_memset
  1683                           	FNCALL	_PrintLog,_strlen
  1684                           	FNCALL	_lcdWriteText,_writeTxtChk
  1685                           	FNCALL	_writeTxtChk,_SetToSendDataToLCD
  1686                           	FNCALL	_writeTxtChk,_setCursorPosition
  1687                           	FNCALL	_writeTxtChk,_setData
  1688                           	FNCALL	_writeTxtChk,_waitLCDBusy
  1689                           	FNCALL	_setCursorPosition,_SetToSendDataToLCD
  1690                           	FNCALL	_setCursorPosition,_setData
  1691                           	FNCALL	_setCursorPosition,_waitLCDBusy
  1692                           	FNCALL	_waitLCDBusy,_SetToReadDataFromLCD
  1693                           	FNCALL	_EM1812EntryPoint,_GetI2CStatus
  1694                           	FNCALL	_EM1812EntryPoint,_GetNewReceivedData
  1695                           	FNCALL	_EM1812EntryPoint,_I2C_GetData
  1696                           	FNCALL	_EM1812EntryPoint,_I2C_SendData
  1697                           	FNCALL	_I2C_SendData,_memcpy
  1698                           	FNCALL	_GetNewReceivedData,_memcpy
  1699                           	FNCALL	_AddTrace,_strcat
  1700                           	FNCALL	_AddTrace,_strlen
  1701                           	FNCALL	_strcat,_strcpy
  1702                           	FNCALL	_strcat,_strlen
  1703                           	FNROOT	_main
  1704                           	FNCALL	_myint,_EUSARTInterrupt
  1705                           	FNCALL	_myint,_I2C_Interrupt
  1706                           	FNCALL	_myint,_TempUpdateRequest
  1707                           	FNCALL	_myint,i1_lcdWriteText
  1708                           	FNCALL	i1_lcdWriteText,i1_writeTxtChk
  1709                           	FNCALL	i1_writeTxtChk,i1_SetToSendDataToLCD
  1710                           	FNCALL	i1_writeTxtChk,i1_setCursorPosition
  1711                           	FNCALL	i1_writeTxtChk,i1_setData
  1712                           	FNCALL	i1_writeTxtChk,i1_waitLCDBusy
  1713                           	FNCALL	i1_setCursorPosition,i1_SetToSendDataToLCD
  1714                           	FNCALL	i1_setCursorPosition,i1_setData
  1715                           	FNCALL	i1_setCursorPosition,i1_waitLCDBusy
  1716                           	FNCALL	i1_waitLCDBusy,i1_SetToReadDataFromLCD
  1717                           	FNCALL	intlevel1,_myint
  1718                           	global	intlevel1
  1719                           	FNROOT	intlevel1
  1720                           	global	_gEsp8266Echo
  1721                           	global	_gESPCommand
  1722                           	global	_gEsp8266State
  1723                           	global	_wI2CRxBufferSize
  1724                           	global	_wI2CTxBufferSize
  1725                           	global	_wI2CCommandState
  1726                           	global	EM1812EntryPoint@F1960
  1727                           	global	main@F2379
  1728                           	global	_wTempSet
  1729                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1730                           global __pidataBANK0
  1731                           __pidataBANK0:
  1732  0930                     	file	"./ESP8266.h"
  1733                           	line	17
  1734                           
  1735                           ;initializer for _gEsp8266Echo
  1736                           	retlw	01h
  1737  0930  3401               	line	16
  1738                           
  1739                           ;initializer for _gESPCommand
  1740                           	retlw	07h
  1741  0931  3407               	line	15
  1742                           
  1743                           ;initializer for _gEsp8266State
  1744                           	retlw	01h
  1745  0932  3401               	file	"./I2C.h"
  1746                           	line	24
  1747                           
  1748                           ;initializer for _wI2CRxBufferSize
  1749                           	retlw	014h
  1750  0933  3414               	line	23
  1751                           
  1752                           ;initializer for _wI2CTxBufferSize
  1753                           	retlw	014h
  1754  0934  3414               	line	14
  1755                           
  1756                           ;initializer for _wI2CCommandState
  1757                           	retlw	03h
  1758  0935  3403               psect	idataBANK1,class=CODE,space=0,delta=2,noexec
  1759                           global __pidataBANK1
  1760                           __pidataBANK1:
  1761  095D                     	file	"EM1812.c"
  1762                           	line	96
  1763                           
  1764                           ;initializer for EM1812EntryPoint@F1960
  1765                           	retlw	0B8h
  1766  095D  34B8               	retlw	03h
  1767  095E  3403               	retlw	low(0)
  1768  095F  3400               	retlw	04h
  1769  0960  3404               	file	"161518_temp_main.c"
  1770                           	line	192
  1771                           
  1772                           ;initializer for main@F2379
  1773                           	retlw	02Bh
  1774  0961  342B               	retlw	low(0)
  1775  0962  3400               	retlw	078h
  1776  0963  3478               	retlw	low(0)
  1777  0964  3400               	line	102
  1778                           
  1779                           ;initializer for _wTempSet
  1780                           	retlw	0D2h
  1781  0965  34D2               	retlw	0
  1782  0966  3400               
  1783                           	global	_gEspRxBufferPtr
  1784                           	global	Esp8266Entrypoint@wCommandsize
  1785                           	global	Esp8266Entrypoint@wCounter
  1786                           	global	Esp8266Entrypoint@prevEusartNbByteReceived
  1787                           	global	EM1812EntryPoint@wTry
  1788                           	global	_wTimer1IntCounter
  1789                           	global	_gEspRxBufferReadingPosition
  1790                           	global	_gEspRxBufferSize
  1791                           	global	_gTxTransmitSize
  1792                           	global	_gEUSARTError
  1793                           	global	_gTxReadingPosition
  1794                           	global	_gEusartRXBufferWritePtr
  1795                           	global	_wI2CTxSendPos
  1796                           	global	_wNewI2CReception
  1797                           	global	_wI2CRxNbOfByteToReceived
  1798                           	global	_wI2CTxNbOfByteToSend
  1799                           	global	_wReceptionBufferPosition
  1800                           	global	_wTimer0Counter
  1801                           	global	_wTempState
  1802                           	global	_mWritingPosition
  1803                           	global	_mCursorDisplayShiftReg
  1804                           	global	_mDisplayOnOffReg
  1805                           	global	EM1812EntryPoint@F1962
  1806                           	global	uint16_tToa@F1884
  1807                           	global	_gErrorCode
  1808                           	global	_wTemperature
  1809                           	global	_wHumidity
  1810                           	global	_wI2CRxBuffer
  1811                           	global	_wI2CTxBuffer
  1812                           	global	_wInterruptText
  1813                           	global	_gEusartTXBuffer
  1814                           	global	_gEusartRXBuffer
  1815                           	global	_PIR2bits
  1816                           _PIR2bits	set	0x12
  1817  0012                     	global	_TMR0
  1818                           _TMR0	set	0x15
  1819  0015                     	global	_PORTAbits
  1820                           _PORTAbits	set	0xC
  1821  000C                     	global	_TMR1L
  1822                           _TMR1L	set	0x16
  1823  0016                     	global	_TMR1H
  1824                           _TMR1H	set	0x17
  1825  0017                     	global	_PIR1bits
  1826                           _PIR1bits	set	0x11
  1827  0011                     	global	_PORTCbits
  1828                           _PORTCbits	set	0xE
  1829  000E                     	global	_PORTB
  1830                           _PORTB	set	0xD
  1831  000D                     	global	_T1CONbits
  1832                           _T1CONbits	set	0x18
  1833  0018                     	global	_PORTA
  1834                           _PORTA	set	0xC
  1835  000C                     	global	_INTCONbits
  1836                           _INTCONbits	set	0xB
  1837  000B                     	global	_PORTBbits
  1838                           _PORTBbits	set	0xD
  1839  000D                     	global	_PIE2bits
  1840                           _PIE2bits	set	0x92
  1841  0092                     	global	_TRISAbits
  1842                           _TRISAbits	set	0x8C
  1843  008C                     	global	_TRISCbits
  1844                           _TRISCbits	set	0x8E
  1845  008E                     	global	_TRISB
  1846                           _TRISB	set	0x8D
  1847  008D                     	global	_OPTION_REGbits
  1848                           _OPTION_REGbits	set	0x95
  1849  0095                     	global	_PIE1bits
  1850                           _PIE1bits	set	0x91
  1851  0091                     	global	_OSCCONbits
  1852                           _OSCCONbits	set	0x99
  1853  0099                     	global	_RCREG
  1854                           _RCREG	set	0x199
  1855  0199                     	global	_TXREG
  1856                           _TXREG	set	0x19A
  1857  019A                     	global	_RCSTAbits
  1858                           _RCSTAbits	set	0x19D
  1859  019D                     	global	_TXSTAbits
  1860                           _TXSTAbits	set	0x19E
  1861  019E                     	global	_SPBRGL
  1862                           _SPBRGL	set	0x19B
  1863  019B                     	global	_SPBRGH
  1864                           _SPBRGH	set	0x19C
  1865  019C                     	global	_ANSELAbits
  1866                           _ANSELAbits	set	0x18C
  1867  018C                     	global	_ANSELCbits
  1868                           _ANSELCbits	set	0x18E
  1869  018E                     	global	_ANSELB
  1870                           _ANSELB	set	0x18D
  1871  018D                     	global	_SSPBUF
  1872                           _SSPBUF	set	0x211
  1873  0211                     	global	_SSPSTATbits
  1874                           _SSPSTATbits	set	0x214
  1875  0214                     	global	_SSPCON2bits
  1876                           _SSPCON2bits	set	0x216
  1877  0216                     	global	_SSPADD
  1878                           _SSPADD	set	0x212
  1879  0212                     	global	_SSPCON1bits
  1880                           _SSPCON1bits	set	0x215
  1881  0215                     	global	_SSPCON3bits
  1882                           _SSPCON3bits	set	0x217
  1883  0217                     	global	_WPUB
  1884                           _WPUB	set	0x20D
  1885  020D                     psect	stringtext1,class=STRCODE,delta=2,noexec
  1886                           global __pstringtext1
  1887                           __pstringtext1:
  1888  1000                     	
  1889                           STR_38:	
  1890  1000                     	retlw	65	;'A'
  1891  1000  3441               	retlw	76	;'L'
  1892  1001  344C               	retlw	82	;'R'
  1893  1002  3452               	retlw	69	;'E'
  1894  1003  3445               	retlw	65	;'A'
  1895  1004  3441               	retlw	68	;'D'
  1896  1005  3444               	retlw	89	;'Y'
  1897  1006  3459               	retlw	32	;' '
  1898  1007  3420               	retlw	67	;'C'
  1899  1008  3443               	retlw	79	;'O'
  1900  1009  344F               	retlw	78	;'N'
  1901  100A  344E               	retlw	78	;'N'
  1902  100B  344E               	retlw	69	;'E'
  1903  100C  3445               	retlw	67	;'C'
  1904  100D  3443               	retlw	84	;'T'
  1905  100E  3454               	retlw	69	;'E'
  1906  100F  3445               	retlw	68	;'D'
  1907  1010  3444               	retlw	0
  1908  1011  3400               psect	stringtext2,class=STRCODE,delta=2,noexec
  1909                           global __pstringtext2
  1910                           __pstringtext2:
  1911  1012                     	
  1912                           STR_15:	
  1913  1012                     	retlw	65	;'A'
  1914  1012  3441               	retlw	84	;'T'
  1915  1013  3454               	retlw	43	;'+'
  1916  1014  342B               	retlw	67	;'C'
  1917  1015  3443               	retlw	87	;'W'
  1918  1016  3457               	retlw	83	;'S'
  1919  1017  3453               	retlw	65	;'A'
  1920  1018  3441               	retlw	80	;'P'
  1921  1019  3450               	retlw	61	;'='
  1922  101A  343D               	retlw	34	;'"'
  1923  101B  3422               	retlw	34	;'"'
  1924  101C  3422               	retlw	44	;','
  1925  101D  342C               	retlw	34	;'"'
  1926  101E  3422               	retlw	34	;'"'
  1927  101F  3422               	retlw	44	;','
  1928  1020  342C               	retlw	44	;','
  1929  1021  342C               	retlw	0
  1930  1022  3400               psect	stringtext3,class=STRCODE,delta=2,noexec
  1931                           global __pstringtext3
  1932                           __pstringtext3:
  1933  1023                     	
  1934                           STR_6:	
  1935  1023                     	retlw	45	;'-'
  1936  1023  342D               	retlw	83	;'S'
  1937  1024  3453               	retlw	101	;'e'
  1938  1025  3465               	retlw	116	;'t'
  1939  1026  3474               	retlw	32	;' '
  1940  1027  3420               	retlw	77	;'M'
  1941  1028  344D               	retlw	111	;'o'
  1942  1029  346F               	retlw	100	;'d'
  1943  102A  3464               	retlw	101	;'e'
  1944  102B  3465               	retlw	45	;'-'
  1945  102C  342D               	retlw	32	;' '
  1946  102D  3420               	retlw	32	;' '
  1947  102E  3420               	retlw	32	;' '
  1948  102F  3420               	retlw	32	;' '
  1949  1030  3420               	retlw	32	;' '
  1950  1031  3420               	retlw	10
  1951  1032  340A               	retlw	0
  1952  1033  3400               psect	stringtext4,class=STRCODE,delta=2,noexec
  1953                           global __pstringtext4
  1954                           __pstringtext4:
  1955  1034                     	
  1956                           STR_4:	
  1957  1034                     	retlw	45	;'-'
  1958  1034  342D               	retlw	83	;'S'
  1959  1035  3453               	retlw	101	;'e'
  1960  1036  3465               	retlw	116	;'t'
  1961  1037  3474               	retlw	32	;' '
  1962  1038  3420               	retlw	84	;'T'
  1963  1039  3454               	retlw	105	;'i'
  1964  103A  3469               	retlw	109	;'m'
  1965  103B  346D               	retlw	101	;'e'
  1966  103C  3465               	retlw	45	;'-'
  1967  103D  342D               	retlw	32	;' '
  1968  103E  3420               	retlw	32	;' '
  1969  103F  3420               	retlw	32	;' '
  1970  1040  3420               	retlw	32	;' '
  1971  1041  3420               	retlw	32	;' '
  1972  1042  3420               	retlw	10
  1973  1043  340A               	retlw	0
  1974  1044  3400               psect	stringtext5,class=STRCODE,delta=2,noexec
  1975                           global __pstringtext5
  1976                           __pstringtext5:
  1977  1045                     	
  1978                           STR_5:	
  1979  1045                     	retlw	45	;'-'
  1980  1045  342D               	retlw	83	;'S'
  1981  1046  3453               	retlw	101	;'e'
  1982  1047  3465               	retlw	116	;'t'
  1983  1048  3474               	retlw	32	;' '
  1984  1049  3420               	retlw	84	;'T'
  1985  104A  3454               	retlw	101	;'e'
  1986  104B  3465               	retlw	109	;'m'
  1987  104C  346D               	retlw	112	;'p'
  1988  104D  3470               	retlw	45	;'-'
  1989  104E  342D               	retlw	32	;' '
  1990  104F  3420               	retlw	32	;' '
  1991  1050  3420               	retlw	32	;' '
  1992  1051  3420               	retlw	32	;' '
  1993  1052  3420               	retlw	32	;' '
  1994  1053  3420               	retlw	10
  1995  1054  340A               	retlw	0
  1996  1055  3400               psect	stringtext6,class=STRCODE,delta=2,noexec
  1997                           global __pstringtext6
  1998                           __pstringtext6:
  1999  1056                     	
  2000                           STR_2:	
  2001  1056                     	retlw	84	;'T'
  2002  1056  3454               	retlw	101	;'e'
  2003  1057  3465               	retlw	109	;'m'
  2004  1058  346D               	retlw	112	;'p'
  2005  1059  3470               	retlw	32	;' '
  2006  105A  3420               	retlw	83	;'S'
  2007  105B  3453               	retlw	101	;'e'
  2008  105C  3465               	retlw	116	;'t'
  2009  105D  3474               	retlw	116	;'t'
  2010  105E  3474               	retlw	105	;'i'
  2011  105F  3469               	retlw	110	;'n'
  2012  1060  346E               	retlw	103	;'g'
  2013  1061  3467               	retlw	58	;':'
  2014  1062  343A               	retlw	32	;' '
  2015  1063  3420               	retlw	32	;' '
  2016  1064  3420               	retlw	10
  2017  1065  340A               	retlw	0
  2018  1066  3400               psect	stringtext7,class=STRCODE,delta=2,noexec
  2019                           global __pstringtext7
  2020                           __pstringtext7:
  2021  1067                     	
  2022                           STR_7:	
  2023  1067                     	retlw	87	;'W'
  2024  1067  3457               	retlw	84	;'T'
  2025  1068  3454               	retlw	70	;'F'
  2026  1069  3446               	retlw	32	;' '
  2027  106A  3420               	retlw	32	;' '
  2028  106B  3420               	retlw	32	;' '
  2029  106C  3420               	retlw	32	;' '
  2030  106D  3420               	retlw	32	;' '
  2031  106E  3420               	retlw	32	;' '
  2032  106F  3420               	retlw	32	;' '
  2033  1070  3420               	retlw	32	;' '
  2034  1071  3420               	retlw	32	;' '
  2035  1072  3420               	retlw	32	;' '
  2036  1073  3420               	retlw	32	;' '
  2037  1074  3420               	retlw	32	;' '
  2038  1075  3420               	retlw	0
  2039  1076  3400               psect	stringtext8,class=STRCODE,delta=2,noexec
  2040                           global __pstringtext8
  2041                           __pstringtext8:
  2042  1077                     	
  2043                           STR_1:	
  2044  1077                     	retlw	84	;'T'
  2045  1077  3454               	retlw	105	;'i'
  2046  1078  3469               	retlw	109	;'m'
  2047  1079  346D               	retlw	101	;'e'
  2048  107A  3465               	retlw	32	;' '
  2049  107B  3420               	retlw	32	;' '
  2050  107C  3420               	retlw	32	;' '
  2051  107D  3420               	retlw	32	;' '
  2052  107E  3420               	retlw	32	;' '
  2053  107F  3420               	retlw	32	;' '
  2054  1080  3420               	retlw	32	;' '
  2055  1081  3420               	retlw	32	;' '
  2056  1082  3420               	retlw	32	;' '
  2057  1083  3420               	retlw	32	;' '
  2058  1084  3420               	retlw	32	;' '
  2059  1085  3420               	retlw	0
  2060  1086  3400               psect	stringtext9,class=STRCODE,delta=2,noexec
  2061                           global __pstringtext9
  2062                           __pstringtext9:
  2063  1087                     	
  2064                           STR_3:	
  2065  1087                     	retlw	77	;'M'
  2066  1087  344D               	retlw	111	;'o'
  2067  1088  346F               	retlw	100	;'d'
  2068  1089  3464               	retlw	101	;'e'
  2069  108A  3465               	retlw	58	;':'
  2070  108B  343A               	retlw	32	;' '
  2071  108C  3420               	retlw	32	;' '
  2072  108D  3420               	retlw	32	;' '
  2073  108E  3420               	retlw	32	;' '
  2074  108F  3420               	retlw	32	;' '
  2075  1090  3420               	retlw	32	;' '
  2076  1091  3420               	retlw	32	;' '
  2077  1092  3420               	retlw	32	;' '
  2078  1093  3420               	retlw	32	;' '
  2079  1094  3420               	retlw	32	;' '
  2080  1095  3420               	retlw	0
  2081  1096  3400               psect	stringtext10,class=STRCODE,delta=2,noexec
  2082                           global __pstringtext10
  2083                           __pstringtext10:
  2084  1097                     	
  2085                           STR_26:	
  2086  1097                     	retlw	65	;'A'
  2087  1097  3441               	retlw	84	;'T'
  2088  1098  3454               	retlw	43	;'+'
  2089  1099  342B               	retlw	67	;'C'
  2090  109A  3443               	retlw	87	;'W'
  2091  109B  3457               	retlw	77	;'M'
  2092  109C  344D               	retlw	79	;'O'
  2093  109D  344F               	retlw	68	;'D'
  2094  109E  3444               	retlw	69	;'E'
  2095  109F  3445               	retlw	61	;'='
  2096  10A0  343D               	retlw	50	;'2'
  2097  10A1  3432               	retlw	13
  2098  10A2  340D               	retlw	10
  2099  10A3  340A               	retlw	0
  2100  10A4  3400               psect	stringtext11,class=STRCODE,delta=2,noexec
  2101                           global __pstringtext11
  2102                           __pstringtext11:
  2103  10A5                     	
  2104                           STR_10:	
  2105  10A5                     	retlw	69	;'E'
  2106  10A5  3445               	retlw	115	;'s'
  2107  10A6  3473               	retlw	112	;'p'
  2108  10A7  3470               	retlw	56	;'8'
  2109  10A8  3438               	retlw	50	;'2'
  2110  10A9  3432               	retlw	54	;'6'
  2111  10AA  3436               	retlw	54	;'6'
  2112  10AB  3436               	retlw	73	;'I'
  2113  10AC  3449               	retlw	110	;'n'
  2114  10AD  346E               	retlw	105	;'i'
  2115  10AE  3469               	retlw	116	;'t'
  2116  10AF  3474               	retlw	58	;':'
  2117  10B0  343A               	retlw	10
  2118  10B1  340A               	retlw	0
  2119  10B2  3400               psect	stringtext12,class=STRCODE,delta=2,noexec
  2120                           global __pstringtext12
  2121                           __pstringtext12:
  2122  10B3                     	
  2123                           STR_11:	
  2124  10B3                     	retlw	65	;'A'
  2125  10B3  3441               	retlw	84	;'T'
  2126  10B4  3454               	retlw	43	;'+'
  2127  10B5  342B               	retlw	67	;'C'
  2128  10B6  3443               	retlw	73	;'I'
  2129  10B7  3449               	retlw	80	;'P'
  2130  10B8  3450               	retlw	83	;'S'
  2131  10B9  3453               	retlw	84	;'T'
  2132  10BA  3454               	retlw	65	;'A'
  2133  10BB  3441               	retlw	82	;'R'
  2134  10BC  3452               	retlw	84	;'T'
  2135  10BD  3454               	retlw	61	;'='
  2136  10BE  343D               	retlw	34	;'"'
  2137  10BF  3422               	retlw	0
  2138  10C0  3400               psect	stringtext13,class=STRCODE,delta=2,noexec
  2139                           global __pstringtext13
  2140                           __pstringtext13:
  2141  10C1                     	
  2142                           STR_31:	
  2143  10C1                     	retlw	49	;'1'
  2144  10C1  3431               	retlw	57	;'9'
  2145  10C2  3439               	retlw	50	;'2'
  2146  10C3  3432               	retlw	46	;'.'
  2147  10C4  342E               	retlw	49	;'1'
  2148  10C5  3431               	retlw	54	;'6'
  2149  10C6  3436               	retlw	56	;'8'
  2150  10C7  3438               	retlw	46	;'.'
  2151  10C8  342E               	retlw	52	;'4'
  2152  10C9  3434               	retlw	46	;'.'
  2153  10CA  342E               	retlw	50	;'2'
  2154  10CB  3432               	retlw	53	;'5'
  2155  10CC  3435               	retlw	53	;'5'
  2156  10CD  3435               	retlw	0
  2157  10CE  3400               psect	stringtext14,class=STRCODE,delta=2,noexec
  2158                           global __pstringtext14
  2159                           __pstringtext14:
  2160  10CF                     	
  2161                           STR_22:	
  2162  10CF                     	retlw	65	;'A'
  2163  10CF  3441               	retlw	84	;'T'
  2164  10D0  3454               	retlw	43	;'+'
  2165  10D1  342B               	retlw	82	;'R'
  2166  10D2  3452               	retlw	69	;'E'
  2167  10D3  3445               	retlw	83	;'S'
  2168  10D4  3453               	retlw	84	;'T'
  2169  10D5  3454               	retlw	79	;'O'
  2170  10D6  344F               	retlw	82	;'R'
  2171  10D7  3452               	retlw	69	;'E'
  2172  10D8  3445               	retlw	13
  2173  10D9  340D               	retlw	10
  2174  10DA  340A               	retlw	0
  2175  10DB  3400               psect	stringtext15,class=STRCODE,delta=2,noexec
  2176                           global __pstringtext15
  2177                           __pstringtext15:
  2178  10DC                     	
  2179                           STR_8:	
  2180  10DC                     	retlw	72	;'H'
  2181  10DC  3448               	retlw	117	;'u'
  2182  10DD  3475               	retlw	109	;'m'
  2183  10DE  346D               	retlw	105	;'i'
  2184  10DF  3469               	retlw	100	;'d'
  2185  10E0  3464               	retlw	105	;'i'
  2186  10E1  3469               	retlw	116	;'t'
  2187  10E2  3474               	retlw	121	;'y'
  2188  10E3  3479               	retlw	32	;' '
  2189  10E4  3420               	retlw	58	;':'
  2190  10E5  343A               	retlw	32	;' '
  2191  10E6  3420               	retlw	0
  2192  10E7  3400               psect	stringtext16,class=STRCODE,delta=2,noexec
  2193                           global __pstringtext16
  2194                           __pstringtext16:
  2195  10E8                     	
  2196                           STR_16:	
  2197  10E8                     	retlw	65	;'A'
  2198  10E8  3441               	retlw	84	;'T'
  2199  10E9  3454               	retlw	43	;'+'
  2200  10EA  342B               	retlw	67	;'C'
  2201  10EB  3443               	retlw	87	;'W'
  2202  10EC  3457               	retlw	83	;'S'
  2203  10ED  3453               	retlw	65	;'A'
  2204  10EE  3441               	retlw	80	;'P'
  2205  10EF  3450               	retlw	61	;'='
  2206  10F0  343D               	retlw	34	;'"'
  2207  10F1  3422               	retlw	0
  2208  10F2  3400               psect	stringtext17,class=STRCODE,delta=2,noexec
  2209                           global __pstringtext17
  2210                           __pstringtext17:
  2211  10F3                     	
  2212                           STR_36:	
  2213  10F3                     	retlw	82	;'R'
  2214  10F3  3452               	retlw	101	;'e'
  2215  10F4  3465               	retlw	98	;'b'
  2216  10F5  3462               	retlw	111	;'o'
  2217  10F6  346F               	retlw	111	;'o'
  2218  10F7  346F               	retlw	116	;'t'
  2219  10F8  3474               	retlw	101	;'e'
  2220  10F9  3465               	retlw	100	;'d'
  2221  10FA  3464               	retlw	33	;'!'
  2222  10FB  3421               	retlw	0
  2223  10FC  3400               psect	stringtext18,class=STRCODE,delta=2,noexec
  2224                           global __pstringtext18
  2225                           __pstringtext18:
  2226  10FD                     	
  2227                           STR_28:	
  2228  10FD                     	retlw	49	;'1'
  2229  10FD  3431               	retlw	50	;'2'
  2230  10FE  3432               	retlw	51	;'3'
  2231  10FF  3433               	retlw	52	;'4'
  2232  1100  3434               	retlw	53	;'5'
  2233  1101  3435               	retlw	54	;'6'
  2234  1102  3436               	retlw	55	;'7'
  2235  1103  3437               	retlw	56	;'8'
  2236  1104  3438               	retlw	0
  2237  1105  3400               psect	stringtext19,class=STRCODE,delta=2,noexec
  2238                           global __pstringtext19
  2239                           __pstringtext19:
  2240  1106                     	
  2241                           STR_25:	
  2242  1106                     	retlw	65	;'A'
  2243  1106  3441               	retlw	80	;'P'
  2244  1107  3450               	retlw	32	;' '
  2245  1108  3420               	retlw	77	;'M'
  2246  1109  344D               	retlw	79	;'O'
  2247  110A  344F               	retlw	68	;'D'
  2248  110B  3444               	retlw	69	;'E'
  2249  110C  3445               	retlw	58	;':'
  2250  110D  343A               	retlw	0
  2251  110E  3400               psect	stringtext20,class=STRCODE,delta=2,noexec
  2252                           global __pstringtext20
  2253                           __pstringtext20:
  2254  110F                     	
  2255                           STR_21:	
  2256  110F                     	retlw	82	;'R'
  2257  110F  3452               	retlw	101	;'e'
  2258  1110  3465               	retlw	115	;'s'
  2259  1111  3473               	retlw	116	;'t'
  2260  1112  3474               	retlw	111	;'o'
  2261  1113  346F               	retlw	114	;'r'
  2262  1114  3472               	retlw	101	;'e'
  2263  1115  3465               	retlw	58	;':'
  2264  1116  343A               	retlw	0
  2265  1117  3400               psect	stringtext21,class=STRCODE,delta=2,noexec
  2266                           global __pstringtext21
  2267                           __pstringtext21:
  2268  1118                     	
  2269                           STR_9:	
  2270  1118                     	retlw	10
  2271  1118  340A               	retlw	84	;'T'
  2272  1119  3454               	retlw	101	;'e'
  2273  111A  3465               	retlw	109	;'m'
  2274  111B  346D               	retlw	112	;'p'
  2275  111C  3470               	retlw	32	;' '
  2276  111D  3420               	retlw	58	;':'
  2277  111E  343A               	retlw	32	;' '
  2278  111F  3420               	retlw	0
  2279  1120  3400               psect	stringtext22,class=STRCODE,delta=2,noexec
  2280                           global __pstringtext22
  2281                           __pstringtext22:
  2282  1121                     	
  2283                           STR_32:	
  2284  1121                     	retlw	83	;'S'
  2285  1121  3453               	retlw	79	;'O'
  2286  1122  344F               	retlw	67	;'C'
  2287  1123  3443               	retlw	75	;'K'
  2288  1124  344B               	retlw	69	;'E'
  2289  1125  3445               	retlw	84	;'T'
  2290  1126  3454               	retlw	58	;':'
  2291  1127  343A               	retlw	0
  2292  1128  3400               psect	stringtext23,class=STRCODE,delta=2,noexec
  2293                           global __pstringtext23
  2294                           __pstringtext23:
  2295  1129                     	
  2296                           STR_27:	
  2297  1129                     	retlw	77	;'M'
  2298  1129  344D               	retlw	101	;'e'
  2299  112A  3465               	retlw	99	;'c'
  2300  112B  3463               	retlw	99	;'c'
  2301  112C  3463               	retlw	111	;'o'
  2302  112D  346F               	retlw	115	;'s'
  2303  112E  3473               	retlw	0
  2304  112F  3400               psect	stringtext24,class=STRCODE,delta=2,noexec
  2305                           global __pstringtext24
  2306                           __pstringtext24:
  2307  1130                     	
  2308                           STR_24:	
  2309  1130                     	retlw	65	;'A'
  2310  1130  3441               	retlw	84	;'T'
  2311  1131  3454               	retlw	69	;'E'
  2312  1132  3445               	retlw	13
  2313  1133  340D               	retlw	10
  2314  1134  340A               	retlw	0
  2315  1135  3400               psect	stringtext25,class=STRCODE,delta=2,noexec
  2316                           global __pstringtext25
  2317                           __pstringtext25:
  2318  1136                     	
  2319                           STR_29:	
  2320  1136                     	retlw	87	;'W'
  2321  1136  3457               	retlw	73	;'I'
  2322  1137  3449               	retlw	70	;'F'
  2323  1138  3446               	retlw	73	;'I'
  2324  1139  3449               	retlw	58	;':'
  2325  113A  343A               	retlw	0
  2326  113B  3400               psect	stringtext26,class=STRCODE,delta=2,noexec
  2327                           global __pstringtext26
  2328                           __pstringtext26:
  2329  113C                     	
  2330                           STR_20:	
  2331  113C                     	retlw	44	;','
  2332  113C  342C               	retlw	48	;'0'
  2333  113D  3430               	retlw	13
  2334  113E  340D               	retlw	10
  2335  113F  340A               	retlw	0
  2336  1140  3400               psect	stringtext27,class=STRCODE,delta=2,noexec
  2337                           global __pstringtext27
  2338                           __pstringtext27:
  2339  1141                     	
  2340                           STR_19:	
  2341  1141                     	retlw	44	;','
  2342  1141  342C               	retlw	49	;'1'
  2343  1142  3431               	retlw	13
  2344  1143  340D               	retlw	10
  2345  1144  340A               	retlw	0
  2346  1145  3400               psect	stringtext28,class=STRCODE,delta=2,noexec
  2347                           global __pstringtext28
  2348                           __pstringtext28:
  2349  1146                     	
  2350                           STR_23:	
  2351  1146                     	retlw	65	;'A'
  2352  1146  3441               	retlw	84	;'T'
  2353  1147  3454               	retlw	69	;'E'
  2354  1148  3445               	retlw	58	;':'
  2355  1149  343A               	retlw	0
  2356  114A  3400               psect	stringtext29,class=STRCODE,delta=2,noexec
  2357                           global __pstringtext29
  2358                           __pstringtext29:
  2359  114B                     	
  2360                           STR_35:	
  2361  114B                     	retlw	108	;'l'
  2362  114B  346C               	retlw	111	;'o'
  2363  114C  346F               	retlw	97	;'a'
  2364  114D  3461               	retlw	100	;'d'
  2365  114E  3464               	retlw	0
  2366  114F  3400               psect	stringtext30,class=STRCODE,delta=2,noexec
  2367                           global __pstringtext30
  2368                           __pstringtext30:
  2369  1150                     	
  2370                           STR_34:	
  2371  1150                     	retlw	79	;'O'
  2372  1150  344F               	retlw	75	;'K'
  2373  1151  344B               	retlw	33	;'!'
  2374  1152  3421               	retlw	0
  2375  1153  3400               psect	stringtext31,class=STRCODE,delta=2,noexec
  2376                           global __pstringtext31
  2377                           __pstringtext31:
  2378  1154                     	
  2379                           STR_12:	
  2380  1154                     	retlw	34	;'"'
  2381  1154  3422               	retlw	44	;','
  2382  1155  342C               	retlw	34	;'"'
  2383  1156  3422               	retlw	0
  2384  1157  3400               psect	stringtext32,class=STRCODE,delta=2,noexec
  2385                           global __pstringtext32
  2386                           __pstringtext32:
  2387  1158                     	
  2388                           STR_30:	
  2389  1158                     	retlw	85	;'U'
  2390  1158  3455               	retlw	68	;'D'
  2391  1159  3444               	retlw	80	;'P'
  2392  115A  3450               	retlw	0
  2393  115B  3400               psect	stringtext33,class=STRCODE,delta=2,noexec
  2394                           global __pstringtext33
  2395                           __pstringtext33:
  2396  115C                     	
  2397                           STR_13:	
  2398  115C                     	retlw	34	;'"'
  2399  115C  3422               	retlw	44	;','
  2400  115D  342C               	retlw	0
  2401  115E  3400               psect	stringtext34,class=STRCODE,delta=2,noexec
  2402                           global __pstringtext34
  2403                           __pstringtext34:
  2404  115F                     	
  2405                           STR_33:	
  2406  115F                     	retlw	79	;'O'
  2407  115F  344F               	retlw	75	;'K'
  2408  1160  344B               	retlw	0
  2409  1161  3400               psect	stringtext35,class=STRCODE,delta=2,noexec
  2410                           global __pstringtext35
  2411                           __pstringtext35:
  2412  0000                     STR_37	equ	STR_33+0
  2413  115F                     STR_18	equ	STR_13+0
  2414  115C                     STR_17	equ	STR_12+0
  2415  1154                     STR_39	equ	STR_34+0
  2416  1150                     STR_14	equ	STR_20+2
  2417  113E                     ; #config settings
  2418                           global __CFG_FOSC$INTOSC
  2419                           __CFG_FOSC$INTOSC equ 0x0
  2420  0000                     global __CFG_WDTE$OFF
  2421                           __CFG_WDTE$OFF equ 0x0
  2422  0000                     global __CFG_PWRTE$ON
  2423                           __CFG_PWRTE$ON equ 0x0
  2424  0000                     global __CFG_MCLRE$OFF
  2425                           __CFG_MCLRE$OFF equ 0x0
  2426  0000                     global __CFG_CP$OFF
  2427                           __CFG_CP$OFF equ 0x0
  2428  0000                     global __CFG_BOREN$ON
  2429                           __CFG_BOREN$ON equ 0x0
  2430  0000                     global __CFG_CLKOUTEN$ON
  2431                           __CFG_CLKOUTEN$ON equ 0x0
  2432  0000                     global __CFG_IESO$OFF
  2433                           __CFG_IESO$OFF equ 0x0
  2434  0000                     global __CFG_FCMEN$OFF
  2435                           __CFG_FCMEN$OFF equ 0x0
  2436  0000                     global __CFG_WRT$OFF
  2437                           __CFG_WRT$OFF equ 0x0
  2438  0000                     global __CFG_VCAPEN$OFF
  2439                           __CFG_VCAPEN$OFF equ 0x0
  2440  0000                     global __CFG_STVREN$OFF
  2441                           __CFG_STVREN$OFF equ 0x0
  2442  0000                     global __CFG_BORV$LO
  2443                           __CFG_BORV$LO equ 0x0
  2444  0000                     global __CFG_LPBOR$OFF
  2445                           __CFG_LPBOR$OFF equ 0x0
  2446  0000                     global __CFG_LVP$OFF
  2447                           __CFG_LVP$OFF equ 0x0
  2448  0000                     	file	"C:\Users\dell\AppData\Local\Temp\s6c."
  2449                           	line	#
  2450                           psect cinit,class=CODE,delta=2
  2451                           global start_initialization
  2452                           start_initialization:
  2453  0062                     
  2454                           global __initialization
  2455                           __initialization:
  2456  0062                     DABS 1,9000,0,_gEusartRXBuffer	;BIGRAM
  2457                           psect	bssBANK0,class=BANK0,space=1,noexec
  2458                           global __pbssBANK0
  2459                           __pbssBANK0:
  2460  0045                     _gEspRxBufferPtr:
  2461  0045                            ds      2
  2462  0045                     
  2463                           Esp8266Entrypoint@wCommandsize:
  2464  0047                            ds      1
  2465  0047                     
  2466                           Esp8266Entrypoint@wCounter:
  2467  0048                            ds      1
  2468  0048                     
  2469                           Esp8266Entrypoint@prevEusartNbByteReceived:
  2470  0049                            ds      1
  2471  0049                     
  2472                           EM1812EntryPoint@wTry:
  2473  004A                            ds      1
  2474  004A                     
  2475                           _wTimer1IntCounter:
  2476  004B                            ds      1
  2477  004B                     
  2478                           _gEspRxBufferReadingPosition:
  2479  004C                            ds      1
  2480  004C                     
  2481                           _gEspRxBufferSize:
  2482  004D                            ds      1
  2483  004D                     
  2484                           _gTxTransmitSize:
  2485  004E                            ds      1
  2486  004E                     
  2487                           _gEUSARTError:
  2488  004F                            ds      1
  2489  004F                     
  2490                           _gTxReadingPosition:
  2491  0050                            ds      1
  2492  0050                     
  2493                           _gEusartRXBufferWritePtr:
  2494  0051                            ds      1
  2495  0051                     
  2496                           _wI2CTxSendPos:
  2497  0052                            ds      1
  2498  0052                     
  2499                           _wNewI2CReception:
  2500  0053                            ds      1
  2501  0053                     
  2502                           _wI2CRxNbOfByteToReceived:
  2503  0054                            ds      1
  2504  0054                     
  2505                           _wI2CTxNbOfByteToSend:
  2506  0055                            ds      1
  2507  0055                     
  2508                           _wReceptionCounterPrev:
  2509  0056                            ds      1
  2510  0056                     
  2511                           _wReceptionCounter:
  2512  0057                            ds      1
  2513  0057                     
  2514                           _wReceptionBufferPosition:
  2515  0058                            ds      1
  2516  0058                     
  2517                           _wTimer0Counter:
  2518  0059                            ds      1
  2519  0059                     
  2520                           _wTempState:
  2521  005A                            ds      1
  2522  005A                     
  2523                           _mWritingPosition:
  2524  005B                            ds      1
  2525  005B                     
  2526                           _mCursorDisplayShiftReg:
  2527  005C                            ds      1
  2528  005C                     
  2529                           _mDisplayOnOffReg:
  2530  005D                            ds      1
  2531  005D                     
  2532                           psect	dataBANK0,class=BANK0,space=1,noexec
  2533                           global __pdataBANK0
  2534                           __pdataBANK0:
  2535  005E                     	file	"./ESP8266.h"
  2536                           	line	17
  2537                           _gEsp8266Echo:
  2538  005E                            ds      1
  2539  005E                     
  2540                           psect	dataBANK0
  2541                           	file	"./ESP8266.h"
  2542                           	line	16
  2543                           _gESPCommand:
  2544  005F                            ds      1
  2545  005F                     
  2546                           psect	dataBANK0
  2547                           	file	"./ESP8266.h"
  2548                           	line	15
  2549                           _gEsp8266State:
  2550  0060                            ds      1
  2551  0060                     
  2552                           psect	dataBANK0
  2553                           	file	"./I2C.h"
  2554                           	line	24
  2555                           _wI2CRxBufferSize:
  2556  0061                            ds      1
  2557  0061                     
  2558                           psect	dataBANK0
  2559                           	file	"./I2C.h"
  2560                           	line	23
  2561                           _wI2CTxBufferSize:
  2562  0062                            ds      1
  2563  0062                     
  2564                           psect	dataBANK0
  2565                           	file	"./I2C.h"
  2566                           	line	14
  2567                           _wI2CCommandState:
  2568  0063                            ds      1
  2569  0063                     
  2570                           psect	bssBANK1,class=BANK1,space=1,noexec
  2571                           global __pbssBANK1
  2572                           __pbssBANK1:
  2573  00A0                     EM1812EntryPoint@F1962:
  2574  00A0                            ds      8
  2575  00A0                     
  2576                           uint16_tToa@F1884:
  2577  00A8                            ds      6
  2578  00A8                     
  2579                           _test:
  2580  00AE                            ds      2
  2581  00AE                     
  2582                           _wCounter2:
  2583  00B0                            ds      1
  2584  00B0                     
  2585                           _gErrorCode:
  2586  00B1                            ds      1
  2587  00B1                     
  2588                           _wTrial:
  2589  00B2                            ds      1
  2590  00B2                     
  2591                           _wTemperature:
  2592  00B3                            ds      2
  2593  00B3                     
  2594                           _wHumidity:
  2595  00B5                            ds      2
  2596  00B5                     
  2597                           psect	dataBANK1,class=BANK1,space=1,noexec
  2598                           global __pdataBANK1
  2599                           __pdataBANK1:
  2600  00C6                     	file	"EM1812.c"
  2601                           	line	96
  2602                           EM1812EntryPoint@F1960:
  2603  00C6                            ds      4
  2604  00C6                     
  2605                           psect	dataBANK1
  2606                           	file	"161518_temp_main.c"
  2607                           	line	192
  2608                           main@F2379:
  2609  00CA                            ds      4
  2610  00CA                     
  2611                           psect	dataBANK1
  2612                           	file	"161518_temp_main.c"
  2613                           	line	102
  2614                           _wTempSet:
  2615  00CE                            ds      2
  2616  00CE                     
  2617                           psect	bssBANK2,class=BANK2,space=1,noexec
  2618                           global __pbssBANK2
  2619                           __pbssBANK2:
  2620  0120                     _wHexTemp:
  2621  0120                            ds      20
  2622  0120                     
  2623                           _wI2CRxBuffer:
  2624  0134                            ds      20
  2625  0134                     
  2626                           _wI2CTxBuffer:
  2627  0148                            ds      20
  2628  0148                     
  2629                           psect	bssBANK3,class=BANK3,space=1,noexec
  2630                           global __pbssBANK3
  2631                           __pbssBANK3:
  2632  01A0                     _wInterruptText:
  2633  01A0                            ds      75
  2634  01A0                     
  2635                           psect	bssBANK4,class=BANK4,space=1,noexec
  2636                           global __pbssBANK4
  2637                           __pbssBANK4:
  2638  0220                     _gEusartTXBuffer:
  2639  0220                            ds      70
  2640  0220                     
  2641                           	file	"C:\Users\dell\AppData\Local\Temp\s6c."
  2642                           	line	#
  2643                           psect inittext,class=CODE,delta=2
  2644                           global init_ram,btemp
  2645                           init_ram:
  2646  099F                     	movwf btemp,f
  2647  099F  00FE               initloop:
  2648  09A0                     	moviw fsr0++
  2649  09A0  0012               	movwi fsr1++
  2650  09A1  001E               	movlw 1
  2651  09A2  3001               subwf btemp,f
  2652  09A3  02FE               movlw 0
  2653  09A4  3000               subwfb btemp+1,f
  2654  09A5  3BFF               	movf btemp+1,w
  2655  09A6  087F               	iorwf btemp,w
  2656  09A7  047E               	skipz
  2657  09A8  1D03               	goto initloop
  2658  09A9  29A0               	retlw 0
  2659  09AA  3400               ; Initialize objects allocated to BANK0
  2660                           	global __pidataBANK0,__pdataBANK0
  2661                           psect cinit,class=CODE,delta=2,merge=1
  2662                           	movlw low(__pidataBANK0)
  2663  0062  3030               	movwf fsr0l
  2664  0063  0084               	movlw high(__pidataBANK0)|80h
  2665  0064  3089               	movwf fsr0h
  2666  0065  0085               	movlw low(__pdataBANK0)
  2667  0066  305E               	movwf fsr1l
  2668  0067  0086               	movlw high(__pdataBANK0)
  2669  0068  3000               	movwf fsr1h
  2670  0069  0087               	movlw high(06h)
  2671  006A  3000               	movwf btemp+1
  2672  006B  00FF               	movlw low(06h)
  2673  006C  3006               	fcall init_ram
  2674  006D  3189  219F  3180   ; Initialize objects allocated to BANK1
  2675                           	global __pidataBANK1,__pdataBANK1
  2676                           psect cinit,class=CODE,delta=2,merge=1
  2677                           	movlw low(__pidataBANK1)
  2678  0070  305D               	movwf fsr0l
  2679  0071  0084               	movlw high(__pidataBANK1)|80h
  2680  0072  3089               	movwf fsr0h
  2681  0073  0085               	movlw low(__pdataBANK1)
  2682  0074  30C6               	movwf fsr1l
  2683  0075  0086               	movlw high(__pdataBANK1)
  2684  0076  3000               	movwf fsr1h
  2685  0077  0087               	movlw high(0Ah)
  2686  0078  3000               	movwf btemp+1
  2687  0079  00FF               	movlw low(0Ah)
  2688  007A  300A               	fcall init_ram
  2689  007B  3189  219F  3180   	line	#
  2690                           psect clrtext,class=CODE,delta=2
  2691                           global clear_ram0
  2692                           ;	Called with FSR0 containing the base address, and
  2693                           ;	btemp/btemp+1 has the size to clear
  2694                           clear_ram0:
  2695  0993                     	clrwdt			;clear the watchdog before getting into this loop
  2696  0993  0064               clrloop0:
  2697  0994                     	clrf	indf0		;clear RAM location pointed to by FSR
  2698  0994  0180               	addfsr	0,1
  2699  0995  3101               	movlw	1
  2700  0996  3001               	subwf	btemp,f
  2701  0997  02FE               	movlw	0
  2702  0998  3000               	subwfb btemp+1,f
  2703  0999  3BFF               	movf btemp+1,w
  2704  099A  087F               	iorwf btemp,w
  2705  099B  047E               	skipz
  2706  099C  1D03               	goto clrloop0	;have we reached the end yet?
  2707  099D  2994               	retlw	0		;all done for this memory range, return
  2708  099E  3400               ; Clear objects allocated to BIGRAM
  2709                           psect cinit,class=CODE,delta=2,merge=1
  2710                           	global __pbssBIGRAM
  2711                           	movlw	low(__pbssBIGRAM)
  2712  007E  3028               	movwf	fsr0l
  2713  007F  0084               	movlw	high(__pbssBIGRAM)
  2714  0080  3023               	movwf	fsr0h
  2715  0081  0085               	movlw	low(0C8h)
  2716  0082  30C8               	movwf	btemp
  2717  0083  00FE               	movlw	high(0C8h)
  2718  0084  3000               	movwf	btemp+1
  2719  0085  00FF               	fcall	clear_ram0
  2720  0086  3189  2193  3180   ; Clear objects allocated to BANK0
  2721                           psect cinit,class=CODE,delta=2,merge=1
  2722                           	global __pbssBANK0
  2723                           	movlw	low(__pbssBANK0)
  2724  0089  3045               	movwf	fsr0l
  2725  008A  0084               	movlw	high(__pbssBANK0)
  2726  008B  3000               	movwf	fsr0h
  2727  008C  0085               	movlw	low(019h)
  2728  008D  3019               	movwf	btemp
  2729  008E  00FE               	movlw	high(019h)
  2730  008F  3000               	movwf	btemp+1
  2731  0090  00FF               	fcall	clear_ram0
  2732  0091  3189  2193  3180   ; Clear objects allocated to BANK1
  2733                           psect cinit,class=CODE,delta=2,merge=1
  2734                           	global __pbssBANK1
  2735                           	movlw	low(__pbssBANK1)
  2736  0094  30A0               	movwf	fsr0l
  2737  0095  0084               	movlw	high(__pbssBANK1)
  2738  0096  3000               	movwf	fsr0h
  2739  0097  0085               	movlw	low(017h)
  2740  0098  3017               	movwf	btemp
  2741  0099  00FE               	movlw	high(017h)
  2742  009A  3000               	movwf	btemp+1
  2743  009B  00FF               	fcall	clear_ram0
  2744  009C  3189  2193  3180   ; Clear objects allocated to BANK2
  2745                           psect cinit,class=CODE,delta=2,merge=1
  2746                           	global __pbssBANK2
  2747                           	movlw	low(__pbssBANK2)
  2748  009F  3020               	movwf	fsr0l
  2749  00A0  0084               	movlw	high(__pbssBANK2)
  2750  00A1  3001               	movwf	fsr0h
  2751  00A2  0085               	movlw	low(03Ch)
  2752  00A3  303C               	movwf	btemp
  2753  00A4  00FE               	movlw	high(03Ch)
  2754  00A5  3000               	movwf	btemp+1
  2755  00A6  00FF               	fcall	clear_ram0
  2756  00A7  3189  2193  3180   ; Clear objects allocated to BANK3
  2757                           psect cinit,class=CODE,delta=2,merge=1
  2758                           	global __pbssBANK3
  2759                           	movlw	low(__pbssBANK3)
  2760  00AA  30A0               	movwf	fsr0l
  2761  00AB  0084               	movlw	high(__pbssBANK3)
  2762  00AC  3001               	movwf	fsr0h
  2763  00AD  0085               	movlw	low(04Bh)
  2764  00AE  304B               	movwf	btemp
  2765  00AF  00FE               	movlw	high(04Bh)
  2766  00B0  3000               	movwf	btemp+1
  2767  00B1  00FF               	fcall	clear_ram0
  2768  00B2  3189  2193  3180   ; Clear objects allocated to BANK4
  2769                           psect cinit,class=CODE,delta=2,merge=1
  2770                           	global __pbssBANK4
  2771                           	movlw	low(__pbssBANK4)
  2772  00B5  3020               	movwf	fsr0l
  2773  00B6  0084               	movlw	high(__pbssBANK4)
  2774  00B7  3002               	movwf	fsr0h
  2775  00B8  0085               	movlw	low(046h)
  2776  00B9  3046               	movwf	btemp
  2777  00BA  00FE               	movlw	high(046h)
  2778  00BB  3000               	movwf	btemp+1
  2779  00BC  00FF               	fcall	clear_ram0
  2780  00BD  3189  2193  3180   psect cinit,class=CODE,delta=2,merge=1
  2781                           global end_of_initialization,__end_of__initialization
  2782                           
  2783                           ;End of C runtime variable initialization code
  2784                           
  2785                           end_of_initialization:
  2786  00C0                     __end_of__initialization:
  2787  00C0                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  2788  00C0  107E               movlb 0
  2789  00C1  0020               ljmp _main	;jump to C main() function
  2790  00C2  3180  28C4         psect	cstackBANK5,class=BANK5,space=1,noexec
  2791                           global __pcstackBANK5
  2792                           __pcstackBANK5:
  2793  02A0                     	global	main@wConv
  2794                           main@wConv:	; 4 bytes @ 0x0
  2795  02A0                     	ds	4
  2796  02A0                     	global	main@wCounter
  2797                           main@wCounter:	; 2 bytes @ 0x4
  2798  02A4                     	ds	2
  2799  02A4                     	global	main@wTemp
  2800                           main@wTemp:	; 2 bytes @ 0x6
  2801  02A6                     	ds	2
  2802  02A6                     	global	main@wReadout
  2803                           main@wReadout:	; 20 bytes @ 0x8
  2804  02A8                     	ds	20
  2805  02A8                     	global	main@wIterationCounter
  2806                           main@wIterationCounter:	; 2 bytes @ 0x1C
  2807  02BC                     	ds	2
  2808  02BC                     	global	main@wEditingMode
  2809                           main@wEditingMode:	; 1 bytes @ 0x1E
  2810  02BE                     	ds	1
  2811  02BE                     	global	main@wHumidityPrev
  2812                           main@wHumidityPrev:	; 2 bytes @ 0x1F
  2813  02BF                     	ds	2
  2814  02BF                     	global	main@wTemperaturePrev
  2815                           main@wTemperaturePrev:	; 2 bytes @ 0x21
  2816  02C1                     	ds	2
  2817  02C1                     	global	main@wUpdateMenu
  2818                           main@wUpdateMenu:	; 1 bytes @ 0x23
  2819  02C3                     	ds	1
  2820  02C3                     	global	main@wDebounceEnter
  2821                           main@wDebounceEnter:	; 2 bytes @ 0x24
  2822  02C4                     	ds	2
  2823  02C4                     	global	main@wDebounceUp
  2824                           main@wDebounceUp:	; 2 bytes @ 0x26
  2825  02C6                     	ds	2
  2826  02C6                     	global	main@wDebounceDown
  2827                           main@wDebounceDown:	; 2 bytes @ 0x28
  2828  02C8                     	ds	2
  2829  02C8                     	global	main@wUpBottonPressed
  2830                           main@wUpBottonPressed:	; 1 bytes @ 0x2A
  2831  02CA                     	ds	1
  2832  02CA                     	global	main@wDownBottonPressed
  2833                           main@wDownBottonPressed:	; 1 bytes @ 0x2B
  2834  02CB                     	ds	1
  2835  02CB                     	global	main@wEnterBottonPressed
  2836                           main@wEnterBottonPressed:	; 1 bytes @ 0x2C
  2837  02CC                     	ds	1
  2838  02CC                     	global	main@wMenu
  2839                           main@wMenu:	; 1 bytes @ 0x2D
  2840  02CD                     	ds	1
  2841  02CD                     psect	cstackBANK1,class=BANK1,space=1,noexec
  2842                           global __pcstackBANK1
  2843                           __pcstackBANK1:
  2844  00B7                     ??_AddTrace:	; 1 bytes @ 0x0
  2845  00B7                     	global	EM1812EntryPoint@SetGetTempCommand
  2846                           EM1812EntryPoint@SetGetTempCommand:	; 4 bytes @ 0x0
  2847  00B7                     	ds	4
  2848  00B7                     	global	EM1812EntryPoint@ReceptionBuffer
  2849                           EM1812EntryPoint@ReceptionBuffer:	; 8 bytes @ 0x4
  2850  00BB                     	ds	2
  2851  00BB                     	global	AddTrace@oText
  2852                           AddTrace@oText:	; 1 bytes @ 0x6
  2853  00BD                     	ds	6
  2854  00BD                     	global	EM1812EntryPoint@oHumidity
  2855                           EM1812EntryPoint@oHumidity:	; 1 bytes @ 0xC
  2856  00C3                     	ds	1
  2857  00C3                     ??_main:	; 1 bytes @ 0xD
  2858  00C4                     	ds	2
  2859  00C4                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2860                           global __pcstackCOMMON
  2861                           __pcstackCOMMON:
  2862  0070                     ?_initLCD:	; 1 bytes @ 0x0
  2863  0070                     ?_clearDisplay:	; 1 bytes @ 0x0
  2864  0070                     ?_powerOnLcd:	; 1 bytes @ 0x0
  2865  0070                     ?_setCursorOff:	; 1 bytes @ 0x0
  2866  0070                     ?_moveCursorToHome:	; 1 bytes @ 0x0
  2867  0070                     ?_setNotBlinkingCursor:	; 1 bytes @ 0x0
  2868  0070                     ?_Esp8266OpenSocket:	; 1 bytes @ 0x0
  2869  0070                     ?_Esp8266SetAccessPointMode:	; 1 bytes @ 0x0
  2870  0070                     ?_Esp8266SetupWifi:	; 1 bytes @ 0x0
  2871  0070                     ??_TempUpdateRequest:	; 1 bytes @ 0x0
  2872  0070                     ?_setData:	; 1 bytes @ 0x0
  2873  0070                     ?_writeInsChk:	; 1 bytes @ 0x0
  2874  0070                     ?_writeTxtChk:	; 1 bytes @ 0x0
  2875  0070                     ?_SetToSendDataToLCD:	; 1 bytes @ 0x0
  2876  0070                     ?_waitLCDBusy:	; 1 bytes @ 0x0
  2877  0070                     ?_writeInsNoChk:	; 1 bytes @ 0x0
  2878  0070                     ?_PrintLog:	; 1 bytes @ 0x0
  2879  0070                     ?_main:	; 1 bytes @ 0x0
  2880  0070                     ?_myint:	; 1 bytes @ 0x0
  2881  0070                     ?_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  2882  0070                     ?i1_setData:	; 1 bytes @ 0x0
  2883  0070                     ??i1_setData:	; 1 bytes @ 0x0
  2884  0070                     ?i1_writeTxtChk:	; 1 bytes @ 0x0
  2885  0070                     ?i1_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  2886  0070                     ??i1_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  2887  0070                     ?i1_SetToSendDataToLCD:	; 1 bytes @ 0x0
  2888  0070                     ??i1_SetToSendDataToLCD:	; 1 bytes @ 0x0
  2889  0070                     ?i1_waitLCDBusy:	; 1 bytes @ 0x0
  2890  0070                     ??i1_waitLCDBusy:	; 1 bytes @ 0x0
  2891  0070                     	global	?_I2C_Interrupt
  2892                           ?_I2C_Interrupt:	; 2 bytes @ 0x0
  2893  0070                     	global	?_EUSARTInterrupt
  2894                           ?_EUSARTInterrupt:	; 2 bytes @ 0x0
  2895  0070                     ?_TempUpdateRequest:	; 2 bytes @ 0x0
  2896  0070                     	ds	2
  2897  0070                     ??_I2C_Interrupt:	; 1 bytes @ 0x2
  2898  0072                     ??_EUSARTInterrupt:	; 1 bytes @ 0x2
  2899  0072                     	global	i1setData@iValue
  2900                           i1setData@iValue:	; 1 bytes @ 0x2
  2901  0072                     	global	i1waitLCDBusy@busyFlag
  2902                           i1waitLCDBusy@busyFlag:	; 2 bytes @ 0x2
  2903  0072                     	ds	2
  2904  0072                     ?i1_setCursorPosition:	; 1 bytes @ 0x4
  2905  0074                     	global	I2C_Interrupt@oErrorCode
  2906                           I2C_Interrupt@oErrorCode:	; 1 bytes @ 0x4
  2907  0074                     	global	i1setCursorPosition@iPosition
  2908                           i1setCursorPosition@iPosition:	; 1 bytes @ 0x4
  2909  0074                     	ds	1
  2910  0074                     ??i1_setCursorPosition:	; 1 bytes @ 0x5
  2911  0075                     	ds	2
  2912  0075                     	global	i1setCursorPosition@iLine
  2913                           i1setCursorPosition@iLine:	; 1 bytes @ 0x7
  2914  0077                     	ds	1
  2915  0077                     	global	i1setCursorPosition@wLCDIndex
  2916                           i1setCursorPosition@wLCDIndex:	; 1 bytes @ 0x8
  2917  0078                     	ds	1
  2918  0078                     ??i1_writeTxtChk:	; 1 bytes @ 0x9
  2919  0079                     	ds	2
  2920  0079                     	global	i1writeTxtChk@iOpCode
  2921                           i1writeTxtChk@iOpCode:	; 1 bytes @ 0xB
  2922  007B                     	ds	1
  2923  007B                     ?i1_lcdWriteText:	; 1 bytes @ 0xC
  2924  007C                     	global	i1lcdWriteText@iText
  2925                           i1lcdWriteText@iText:	; 2 bytes @ 0xC
  2926  007C                     	ds	2
  2927  007C                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2928                           global __pcstackBANK0
  2929                           __pcstackBANK0:
  2930  0020                     ??i1_lcdWriteText:	; 1 bytes @ 0x0
  2931  0020                     	ds	3
  2932  0020                     	global	i1lcdWriteText@wCharReadingPos
  2933                           i1lcdWriteText@wCharReadingPos:	; 1 bytes @ 0x3
  2934  0023                     	ds	1
  2935  0023                     ??_myint:	; 1 bytes @ 0x4
  2936  0024                     	ds	1
  2937  0024                     	global	myint@wEUSARTError
  2938                           myint@wEUSARTError:	; 2 bytes @ 0x5
  2939  0025                     	ds	2
  2940  0025                     	global	myint@wText
  2941                           myint@wText:	; 3 bytes @ 0x7
  2942  0027                     	ds	3
  2943  0027                     	global	myint@wI2CError
  2944                           myint@wI2CError:	; 2 bytes @ 0xA
  2945  002A                     	ds	2
  2946  002A                     ?_memset:	; 1 bytes @ 0xC
  2947  002C                     ??_Esp8266OpenSocket:	; 1 bytes @ 0xC
  2948  002C                     ??_Esp8266SetAccessPointMode:	; 1 bytes @ 0xC
  2949  002C                     ??_Esp8266SetupWifi:	; 1 bytes @ 0xC
  2950  002C                     ??_setData:	; 1 bytes @ 0xC
  2951  002C                     ??_SetToSendDataToLCD:	; 1 bytes @ 0xC
  2952  002C                     ??_waitLCDBusy:	; 1 bytes @ 0xC
  2953  002C                     ?_Debounce:	; 1 bytes @ 0xC
  2954  002C                     ??_SetToReadDataFromLCD:	; 1 bytes @ 0xC
  2955  002C                     	global	?_strlen
  2956                           ?_strlen:	; 2 bytes @ 0xC
  2957  002C                     	global	?_GetI2CStatus
  2958                           ?_GetI2CStatus:	; 2 bytes @ 0xC
  2959  002C                     	global	?_I2C_GetData
  2960                           ?_I2C_GetData:	; 2 bytes @ 0xC
  2961  002C                     ?_memcpy:	; 2 bytes @ 0xC
  2962  002C                     	global	?___awdiv
  2963                           ?___awdiv:	; 2 bytes @ 0xC
  2964  002C                     	global	?___awmod
  2965                           ?___awmod:	; 2 bytes @ 0xC
  2966  002C                     	global	Debounce@ioTimer
  2967                           Debounce@ioTimer:	; 1 bytes @ 0xC
  2968  002C                     	global	I2C_GetData@iRxNumberOfByteExpected
  2969                           I2C_GetData@iRxNumberOfByteExpected:	; 1 bytes @ 0xC
  2970  002C                     	global	___awdiv@divisor
  2971                           ___awdiv@divisor:	; 2 bytes @ 0xC
  2972  002C                     	global	___awmod@divisor
  2973                           ___awmod@divisor:	; 2 bytes @ 0xC
  2974  002C                     	global	memcpy@d1
  2975                           memcpy@d1:	; 2 bytes @ 0xC
  2976  002C                     	global	memset@c
  2977                           memset@c:	; 2 bytes @ 0xC
  2978  002C                     	global	strlen@s
  2979                           strlen@s:	; 2 bytes @ 0xC
  2980  002C                     	ds	1
  2981  002C                     	global	Debounce@swPressed
  2982                           Debounce@swPressed:	; 1 bytes @ 0xD
  2983  002D                     	ds	1
  2984  002D                     ??_strlen:	; 1 bytes @ 0xE
  2985  002E                     ??_GetI2CStatus:	; 1 bytes @ 0xE
  2986  002E                     ??_I2C_GetData:	; 1 bytes @ 0xE
  2987  002E                     ??_Debounce:	; 1 bytes @ 0xE
  2988  002E                     	global	setData@iValue
  2989                           setData@iValue:	; 1 bytes @ 0xE
  2990  002E                     	global	waitLCDBusy@busyFlag
  2991                           waitLCDBusy@busyFlag:	; 2 bytes @ 0xE
  2992  002E                     	global	___awdiv@dividend
  2993                           ___awdiv@dividend:	; 2 bytes @ 0xE
  2994  002E                     	global	___awmod@dividend
  2995                           ___awmod@dividend:	; 2 bytes @ 0xE
  2996  002E                     	global	memcpy@s1
  2997                           memcpy@s1:	; 2 bytes @ 0xE
  2998  002E                     	global	memset@n
  2999                           memset@n:	; 2 bytes @ 0xE
  3000  002E                     	ds	1
  3001  002E                     ??_writeInsNoChk:	; 1 bytes @ 0xF
  3002  002F                     	global	I2C_GetData@iAdress
  3003                           I2C_GetData@iAdress:	; 1 bytes @ 0xF
  3004  002F                     	ds	1
  3005  002F                     ??_memset:	; 1 bytes @ 0x10
  3006  0030                     ?_setCursorPosition:	; 1 bytes @ 0x10
  3007  0030                     ??___awdiv:	; 1 bytes @ 0x10
  3008  0030                     ??___awmod:	; 1 bytes @ 0x10
  3009  0030                     	global	Debounce@iSwitch
  3010                           Debounce@iSwitch:	; 1 bytes @ 0x10
  3011  0030                     	global	writeInsNoChk@iOpCode
  3012                           writeInsNoChk@iOpCode:	; 1 bytes @ 0x10
  3013  0030                     	global	setCursorPosition@iPosition
  3014                           setCursorPosition@iPosition:	; 1 bytes @ 0x10
  3015  0030                     	global	memcpy@n
  3016                           memcpy@n:	; 2 bytes @ 0x10
  3017  0030                     	global	strlen@a
  3018                           strlen@a:	; 2 bytes @ 0x10
  3019  0030                     	ds	1
  3020  0030                     ??_setCursorPosition:	; 1 bytes @ 0x11
  3021  0031                     ??_writeInsChk:	; 1 bytes @ 0x11
  3022  0031                     	global	writeInsChk@iOpCode
  3023                           writeInsChk@iOpCode:	; 1 bytes @ 0x11
  3024  0031                     	global	___awdiv@counter
  3025                           ___awdiv@counter:	; 1 bytes @ 0x11
  3026  0031                     	global	___awmod@counter
  3027                           ___awmod@counter:	; 1 bytes @ 0x11
  3028  0031                     	ds	1
  3029  0031                     ??_initLCD:	; 1 bytes @ 0x12
  3030  0032                     ??_clearDisplay:	; 1 bytes @ 0x12
  3031  0032                     ??_powerOnLcd:	; 1 bytes @ 0x12
  3032  0032                     ??_setCursorOff:	; 1 bytes @ 0x12
  3033  0032                     ??_moveCursorToHome:	; 1 bytes @ 0x12
  3034  0032                     ??_setNotBlinkingCursor:	; 1 bytes @ 0x12
  3035  0032                     ??_memcpy:	; 1 bytes @ 0x12
  3036  0032                     ?_strcpy:	; 2 bytes @ 0x12
  3037  0032                     	global	___awdiv@sign
  3038                           ___awdiv@sign:	; 1 bytes @ 0x12
  3039  0032                     	global	___awmod@sign
  3040                           ___awmod@sign:	; 1 bytes @ 0x12
  3041  0032                     	global	memset@k
  3042                           memset@k:	; 2 bytes @ 0x12
  3043  0032                     	global	strcpy@dest
  3044                           strcpy@dest:	; 2 bytes @ 0x12
  3045  0032                     	ds	1
  3046  0032                     	global	setCursorPosition@iLine
  3047                           setCursorPosition@iLine:	; 1 bytes @ 0x13
  3048  0033                     	global	memcpy@tmp
  3049                           memcpy@tmp:	; 1 bytes @ 0x13
  3050  0033                     	global	___awdiv@quotient
  3051                           ___awdiv@quotient:	; 2 bytes @ 0x13
  3052  0033                     	ds	1
  3053  0033                     	global	setCursorPosition@wLCDIndex
  3054                           setCursorPosition@wLCDIndex:	; 1 bytes @ 0x14
  3055  0034                     	global	memset@dest
  3056                           memset@dest:	; 1 bytes @ 0x14
  3057  0034                     	global	memcpy@d
  3058                           memcpy@d:	; 2 bytes @ 0x14
  3059  0034                     	global	strcpy@src
  3060                           strcpy@src:	; 2 bytes @ 0x14
  3061  0034                     	ds	1
  3062  0034                     ?_printEM1812:	; 1 bytes @ 0x15
  3063  0035                     ??_writeTxtChk:	; 1 bytes @ 0x15
  3064  0035                     	global	memset@s
  3065                           memset@s:	; 1 bytes @ 0x15
  3066  0035                     	global	printEM1812@wVariable
  3067                           printEM1812@wVariable:	; 2 bytes @ 0x15
  3068  0035                     	ds	1
  3069  0035                     ??_strcpy:	; 1 bytes @ 0x16
  3070  0036                     	global	memcpy@s
  3071                           memcpy@s:	; 2 bytes @ 0x16
  3072  0036                     	ds	1
  3073  0036                     	global	writeTxtChk@iOpCode
  3074                           writeTxtChk@iOpCode:	; 1 bytes @ 0x17
  3075  0037                     	global	printEM1812@oTextOut
  3076                           printEM1812@oTextOut:	; 1 bytes @ 0x17
  3077  0037                     	ds	1
  3078  0037                     ?_lcdWriteText:	; 1 bytes @ 0x18
  3079  0038                     ??_printEM1812:	; 1 bytes @ 0x18
  3080  0038                     	global	?_I2C_SendData
  3081                           ?_I2C_SendData:	; 2 bytes @ 0x18
  3082  0038                     ?_GetNewReceivedData:	; 2 bytes @ 0x18
  3083  0038                     	global	I2C_SendData@iNumberofByte
  3084                           I2C_SendData@iNumberofByte:	; 1 bytes @ 0x18
  3085  0038                     	global	GetNewReceivedData@oDataSize
  3086                           GetNewReceivedData@oDataSize:	; 1 bytes @ 0x18
  3087  0038                     	global	lcdWriteText@iText
  3088                           lcdWriteText@iText:	; 2 bytes @ 0x18
  3089  0038                     	ds	1
  3090  0038                     ??_GetNewReceivedData:	; 1 bytes @ 0x19
  3091  0039                     	ds	1
  3092  0039                     ??_lcdWriteText:	; 1 bytes @ 0x1A
  3093  003A                     ??_I2C_SendData:	; 1 bytes @ 0x1A
  3094  003A                     	global	printEM1812@wUnity
  3095                           printEM1812@wUnity:	; 1 bytes @ 0x1A
  3096  003A                     	global	strcpy@s
  3097                           strcpy@s:	; 2 bytes @ 0x1A
  3098  003A                     	ds	1
  3099  003A                     	global	printEM1812@wDecimal
  3100                           printEM1812@wDecimal:	; 1 bytes @ 0x1B
  3101  003B                     	global	GetNewReceivedData@oData
  3102                           GetNewReceivedData@oData:	; 1 bytes @ 0x1B
  3103  003B                     	ds	1
  3104  003B                     	global	printEM1812@wIsNegative
  3105                           printEM1812@wIsNegative:	; 1 bytes @ 0x1C
  3106  003C                     	global	I2C_SendData@iData
  3107                           I2C_SendData@iData:	; 1 bytes @ 0x1C
  3108  003C                     	global	strcpy@d
  3109                           strcpy@d:	; 2 bytes @ 0x1C
  3110  003C                     	ds	1
  3111  003C                     	global	?_EM1812EntryPoint
  3112                           ?_EM1812EntryPoint:	; 2 bytes @ 0x1D
  3113  003D                     	global	lcdWriteText@wCharReadingPos
  3114                           lcdWriteText@wCharReadingPos:	; 1 bytes @ 0x1D
  3115  003D                     	global	printEM1812@wTen
  3116                           printEM1812@wTen:	; 1 bytes @ 0x1D
  3117  003D                     	global	EM1812EntryPoint@oTemperature
  3118                           EM1812EntryPoint@oTemperature:	; 1 bytes @ 0x1D
  3119  003D                     	ds	1
  3120  003D                     ??_PrintLog:	; 1 bytes @ 0x1E
  3121  003E                     ?_strcat:	; 2 bytes @ 0x1E
  3122  003E                     	global	printEM1812@wWritingPosition
  3123                           printEM1812@wWritingPosition:	; 1 bytes @ 0x1E
  3124  003E                     	global	strcat@dest
  3125                           strcat@dest:	; 2 bytes @ 0x1E
  3126  003E                     	ds	1
  3127  003E                     ??_EM1812EntryPoint:	; 1 bytes @ 0x1F
  3128  003F                     	ds	1
  3129  003F                     	global	PrintLog@wInterruptTextLen
  3130                           PrintLog@wInterruptTextLen:	; 1 bytes @ 0x20
  3131  0040                     	global	strcat@src
  3132                           strcat@src:	; 2 bytes @ 0x20
  3133  0040                     	ds	1
  3134  0040                     	global	PrintLog@iText
  3135                           PrintLog@iText:	; 1 bytes @ 0x21
  3136  0041                     	ds	1
  3137  0041                     ?_AddTrace:	; 1 bytes @ 0x22
  3138  0042                     ??_strcat:	; 1 bytes @ 0x22
  3139  0042                     	global	AddTrace@iSizeOfoText
  3140                           AddTrace@iSizeOfoText:	; 1 bytes @ 0x22
  3141  0042                     	ds	1
  3142  0042                     	global	AddTrace@iText
  3143                           AddTrace@iText:	; 2 bytes @ 0x23
  3144  0043                     	ds	2
  3145  0043                     ;!
  3146                           ;!Data Sizes:
  3147                           ;!    Strings     354
  3148                           ;!    Constant    0
  3149                           ;!    Data        16
  3150                           ;!    BSS         253
  3151                           ;!    Persistent  0
  3152                           ;!    Stack       0
  3153                           ;!
  3154                           ;!Auto Spaces:
  3155                           ;!    Space          Size  Autos    Used
  3156                           ;!    COMMON           14     14      14
  3157                           ;!    BANK0            80     37      68
  3158                           ;!    BANK1            80     15      48
  3159                           ;!    BANK2            80      0      60
  3160                           ;!    BANK3            80      0      75
  3161                           ;!    BANK4            80      0      70
  3162                           ;!    BANK5            80     46      46
  3163                           ;!    BANK6            80      0       0
  3164                           ;!    BANK7            80      0       0
  3165                           ;!    BANK8            80      0       0
  3166                           ;!    BANK9            80      0       0
  3167                           ;!    BANK10            8      0       0
  3168                           ;!    BANK11            0      0       0
  3169                           ;!    BANK12            0      0       0
  3170                           
  3171                           ;!
  3172                           ;!Pointer List with Targets:
  3173                           ;!
  3174                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 75
  3175                           ;!		 -> STR_28(CODE[9]), STR_27(CODE[7]), Esp8266SetNetworkParameters@wCommand(BANK0[70]
                                 ), STR_15(CODE[17]), 
  3176                           ;!		 -> Esp8266OpenSocketCommand@wCommand(BANK0[70]), STR_9(CODE[9]), STR_8(CODE[12]), m
                                 ain@wReadout(BANK5[20]), 
  3177                           ;!		 -> wInterruptText(BANK3[75]), 
  3178                           ;!
  3179                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 75
  3180                           ;!		 -> STR_28(CODE[9]), STR_27(CODE[7]), Esp8266SetNetworkParameters@wCommand(BANK0[70]
                                 ), STR_15(CODE[17]), 
  3181                           ;!		 -> Esp8266OpenSocketCommand@wCommand(BANK0[70]), STR_9(CODE[9]), STR_8(CODE[12]), m
                                 ain@wReadout(BANK5[20]), 
  3182                           ;!		 -> wInterruptText(BANK3[75]), 
  3183                           ;!
  3184                           ;!    strcpy@dest	PTR unsigned char  size(2) Largest target is 75
  3185                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wComma
                                 nd(BANK0[70]), wInterruptText(BANK3[75]), 
  3186                           ;!
  3187                           ;!    strcpy@d	PTR unsigned char  size(2) Largest target is 75
  3188                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wComma
                                 nd(BANK0[70]), wInterruptText(BANK3[75]), 
  3189                           ;!
  3190                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
  3191                           ;!		 -> STR_31(CODE[14]), STR_30(CODE[4]), STR_28(CODE[9]), STR_27(CODE[7]), 
  3192                           ;!		 -> STR_20(CODE[5]), STR_19(CODE[5]), Esp8266SetNetworkParameters@wNumber(COMMON[3])
                                 , STR_18(CODE[3]), 
  3193                           ;!		 -> STR_17(CODE[4]), STR_16(CODE[11]), STR_14(CODE[3]), Esp8266OpenSocketCommand@wPo
                                 rt(COMMON[7]), 
  3194                           ;!		 -> STR_13(CODE[3]), STR_12(CODE[4]), STR_11(CODE[14]), NULL(NULL[0]), 
  3195                           ;!		 -> STR_9(CODE[9]), STR_8(CODE[12]), main@wReadout(BANK5[20]), 
  3196                           ;!
  3197                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
  3198                           ;!		 -> STR_31(CODE[14]), STR_30(CODE[4]), STR_28(CODE[9]), STR_27(CODE[7]), 
  3199                           ;!		 -> STR_20(CODE[5]), STR_19(CODE[5]), Esp8266SetNetworkParameters@wNumber(COMMON[3])
                                 , STR_18(CODE[3]), 
  3200                           ;!		 -> STR_17(CODE[4]), STR_16(CODE[11]), STR_14(CODE[3]), Esp8266OpenSocketCommand@wPo
                                 rt(COMMON[7]), 
  3201                           ;!		 -> STR_13(CODE[3]), STR_12(CODE[4]), STR_11(CODE[14]), NULL(NULL[0]), 
  3202                           ;!		 -> STR_9(CODE[9]), STR_8(CODE[12]), main@wReadout(BANK5[20]), 
  3203                           ;!
  3204                           ;!    strcat@src	PTR const unsigned char  size(2) Largest target is 20
  3205                           ;!		 -> STR_31(CODE[14]), STR_30(CODE[4]), STR_28(CODE[9]), STR_27(CODE[7]), 
  3206                           ;!		 -> STR_20(CODE[5]), STR_19(CODE[5]), Esp8266SetNetworkParameters@wNumber(COMMON[3])
                                 , STR_18(CODE[3]), 
  3207                           ;!		 -> STR_17(CODE[4]), STR_14(CODE[3]), Esp8266OpenSocketCommand@wPort(COMMON[7]), STR
                                 _13(CODE[3]), 
  3208                           ;!		 -> STR_12(CODE[4]), NULL(NULL[0]), STR_9(CODE[9]), STR_8(CODE[12]), 
  3209                           ;!		 -> main@wReadout(BANK5[20]), 
  3210                           ;!
  3211                           ;!    strcat@dest	PTR unsigned char  size(2) Largest target is 75
  3212                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wComma
                                 nd(BANK0[70]), wInterruptText(BANK3[75]), 
  3213                           ;!
  3214                           ;!    memset@dest	PTR void  size(1) Largest target is 75
  3215                           ;!		 -> wI2CRxBuffer(BANK2[20]), wI2CTxBuffer(BANK2[20]), wInterruptText(BANK3[75]), 
  3216                           ;!
  3217                           ;!    memset@s	PTR unsigned char  size(1) Largest target is 75
  3218                           ;!		 -> wI2CRxBuffer(BANK2[20]), wI2CTxBuffer(BANK2[20]), wInterruptText(BANK3[75]), 
  3219                           ;!
  3220                           ;!    memcpy@d1	PTR void  size(2) Largest target is 70
  3221                           ;!		 -> gEusartTXBuffer(BANK4[70]), wI2CTxBuffer(BANK2[20]), EM1812EntryPoint@ReceptionB
                                 uffer(BANK1[8]), 
  3222                           ;!
  3223                           ;!    memcpy@d	PTR unsigned char  size(2) Largest target is 70
  3224                           ;!		 -> gEusartTXBuffer(BANK4[70]), wI2CTxBuffer(BANK2[20]), EM1812EntryPoint@ReceptionB
                                 uffer(BANK1[8]), 
  3225                           ;!
  3226                           ;!    memcpy@s1	PTR const void  size(2) Largest target is 70
  3227                           ;!		 -> STR_26(CODE[14]), STR_24(CODE[6]), STR_22(CODE[13]), Esp8266SetNetworkParameters
                                 @wCommand(BANK0[70]), 
  3228                           ;!		 -> Esp8266OpenSocketCommand@wCommand(BANK0[70]), wI2CRxBuffer(BANK2[20]), EM1812Ent
                                 ryPoint@SetGetTempCommand(BANK1[4]), 
  3229                           ;!
  3230                           ;!    memcpy@s	PTR const unsigned char  size(2) Largest target is 70
  3231                           ;!		 -> STR_26(CODE[14]), STR_24(CODE[6]), STR_22(CODE[13]), Esp8266SetNetworkParameters
                                 @wCommand(BANK0[70]), 
  3232                           ;!		 -> Esp8266OpenSocketCommand@wCommand(BANK0[70]), wI2CRxBuffer(BANK2[20]), EM1812Ent
                                 ryPoint@SetGetTempCommand(BANK1[4]), 
  3233                           ;!
  3234                           ;!    sp__strcpy	PTR unsigned char  size(2) Largest target is 75
  3235                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wComma
                                 nd(BANK0[70]), wInterruptText(BANK3[75]), 
  3236                           ;!
  3237                           ;!    sp__EusartGetRxBuffer	PTR unsigned char  size(2) Largest target is 200
  3238                           ;!		 -> gEusartRXBuffer(BIGRAM[200]), 
  3239                           ;!
  3240                           ;!    gEspRxBufferPtr	PTR unsigned char  size(2) Largest target is 200
  3241                           ;!		 -> gEusartRXBuffer(BIGRAM[200]), NULL(NULL[0]), 
  3242                           ;!
  3243                           ;!    sp__uint16_tToa	PTR unsigned char  size(1) Largest target is 7
  3244                           ;!		 -> Esp8266OpenSocketCommand@wPort(COMMON[7]), NULL(NULL[0]), 
  3245                           ;!
  3246                           ;!    sp__uint8_tToa	PTR unsigned char  size(1) Largest target is 4
  3247                           ;!		 -> Esp8266Entrypoint@wReturnNumber(COMMON[4]), NULL(NULL[0]), 
  3248                           ;!
  3249                           ;!    sp__strcat	PTR unsigned char  size(2) Largest target is 75
  3250                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wComma
                                 nd(BANK0[70]), wInterruptText(BANK3[75]), 
  3251                           ;!
  3252                           ;!    AddTrace@iText	PTR unsigned char  size(2) Largest target is 20
  3253                           ;!		 -> STR_9(CODE[9]), STR_8(CODE[12]), main@wReadout(BANK5[20]), 
  3254                           ;!
  3255                           ;!    AddTrace@oText	PTR unsigned char  size(1) Largest target is 75
  3256                           ;!		 -> wInterruptText(BANK3[75]), 
  3257                           ;!
  3258                           ;!    GetNewReceivedData@oData	PTR unsigned char  size(1) Largest target is 8
  3259                           ;!		 -> EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 
  3260                           ;!
  3261                           ;!    sp__memcpy	PTR void  size(2) Largest target is 70
  3262                           ;!		 -> gEusartTXBuffer(BANK4[70]), wI2CTxBuffer(BANK2[20]), EM1812EntryPoint@ReceptionB
                                 uffer(BANK1[8]), 
  3263                           ;!
  3264                           ;!    I2C_SendData@iData	PTR unsigned char  size(1) Largest target is 4
  3265                           ;!		 -> EM1812EntryPoint@SetGetTempCommand(BANK1[4]), 
  3266                           ;!
  3267                           ;!    EM1812EntryPoint@oTemperature	PTR short  size(1) Largest target is 2
  3268                           ;!		 -> wTemperature(BANK1[2]), 
  3269                           ;!
  3270                           ;!    EM1812EntryPoint@oHumidity	PTR short  size(1) Largest target is 2
  3271                           ;!		 -> wHumidity(BANK1[2]), 
  3272                           ;!
  3273                           ;!    printEM1812@oTextOut	PTR unsigned char  size(1) Largest target is 20
  3274                           ;!		 -> main@wReadout(BANK5[20]), 
  3275                           ;!
  3276                           ;!    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
  3277                           ;!		 -> Esp8266Entrypoint@wText(COMMON[3]), Esp8266Entrypoint@wReturnNumber(COMMON[4]), 
                                 STR_39(CODE[4]), STR_36(CODE[10]), 
  3278                           ;!		 -> STR_34(CODE[4]), STR_10(CODE[14]), NULL(NULL[0]), myint@wText(BANK0[3]), 
  3279                           ;!		 -> STR_7(CODE[16]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
  3280                           ;!		 -> STR_3(CODE[16]), main@wReadout(BANK5[20]), STR_2(CODE[17]), STR_1(CODE[16]), 
  3281                           ;!		 -> wInterruptText(BANK3[75]), 
  3282                           ;!
  3283                           ;!    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
  3284                           ;!		 -> main@wEnterBottonPressed(BANK5[1]), main@wDownBottonPressed(BANK5[1]), main@wUpB
                                 ottonPressed(BANK5[1]), 
  3285                           ;!
  3286                           ;!    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
  3287                           ;!		 -> main@wDebounceDown(BANK5[2]), main@wDebounceUp(BANK5[2]), main@wDebounceEnter(BA
                                 NK5[2]), 
  3288                           ;!
  3289                           ;!    sp__memset	PTR void  size(1) Largest target is 75
  3290                           ;!		 -> wI2CRxBuffer(BANK2[20]), wI2CTxBuffer(BANK2[20]), wInterruptText(BANK3[75]), 
  3291                           ;!
  3292                           ;!    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
  3293                           ;!		 -> wInterruptText(BANK3[75]), 
  3294                           ;!
  3295                           
  3296                           
  3297                           ;!
  3298                           ;!Critical Paths under _main in COMMON
  3299                           ;!
  3300                           ;!    None.
  3301                           ;!
  3302                           ;!Critical Paths under _myint in COMMON
  3303                           ;!
  3304                           ;!    _myint->i1_lcdWriteText
  3305                           ;!    i1_lcdWriteText->i1_writeTxtChk
  3306                           ;!    i1_writeTxtChk->i1_setCursorPosition
  3307                           ;!    i1_setCursorPosition->i1_waitLCDBusy
  3308                           ;!
  3309                           ;!Critical Paths under _main in BANK0
  3310                           ;!
  3311                           ;!    _main->_AddTrace
  3312                           ;!    _setNotBlinkingCursor->_writeInsChk
  3313                           ;!    _setCursorOff->_writeInsChk
  3314                           ;!    _printEM1812->___awdiv
  3315                           ;!    _powerOnLcd->_writeInsChk
  3316                           ;!    _moveCursorToHome->_writeInsChk
  3317                           ;!    _initLCD->_writeInsChk
  3318                           ;!    _clearDisplay->_writeInsChk
  3319                           ;!    _writeInsChk->_writeInsNoChk
  3320                           ;!    _writeInsNoChk->_setData
  3321                           ;!    _PrintLog->_lcdWriteText
  3322                           ;!    _lcdWriteText->_writeTxtChk
  3323                           ;!    _writeTxtChk->_setCursorPosition
  3324                           ;!    _setCursorPosition->_waitLCDBusy
  3325                           ;!    _EM1812EntryPoint->_I2C_SendData
  3326                           ;!    _I2C_SendData->_memcpy
  3327                           ;!    _GetNewReceivedData->_memcpy
  3328                           ;!    _AddTrace->_strcat
  3329                           ;!    _strcat->_strcpy
  3330                           ;!    _strcpy->_strlen
  3331                           ;!
  3332                           ;!Critical Paths under _myint in BANK0
  3333                           ;!
  3334                           ;!    _myint->i1_lcdWriteText
  3335                           ;!
  3336                           ;!Critical Paths under _main in BANK1
  3337                           ;!
  3338                           ;!    _main->_EM1812EntryPoint
  3339                           ;!
  3340                           ;!Critical Paths under _myint in BANK1
  3341                           ;!
  3342                           ;!    None.
  3343                           ;!
  3344                           ;!Critical Paths under _main in BANK2
  3345                           ;!
  3346                           ;!    None.
  3347                           ;!
  3348                           ;!Critical Paths under _myint in BANK2
  3349                           ;!
  3350                           ;!    None.
  3351                           ;!
  3352                           ;!Critical Paths under _main in BANK3
  3353                           ;!
  3354                           ;!    None.
  3355                           ;!
  3356                           ;!Critical Paths under _myint in BANK3
  3357                           ;!
  3358                           ;!    None.
  3359                           ;!
  3360                           ;!Critical Paths under _main in BANK4
  3361                           ;!
  3362                           ;!    None.
  3363                           ;!
  3364                           ;!Critical Paths under _myint in BANK4
  3365                           ;!
  3366                           ;!    None.
  3367                           ;!
  3368                           ;!Critical Paths under _main in BANK5
  3369                           ;!
  3370                           ;!    None.
  3371                           ;!
  3372                           ;!Critical Paths under _myint in BANK5
  3373                           ;!
  3374                           ;!    None.
  3375                           ;!
  3376                           ;!Critical Paths under _main in BANK6
  3377                           ;!
  3378                           ;!    None.
  3379                           ;!
  3380                           ;!Critical Paths under _myint in BANK6
  3381                           ;!
  3382                           ;!    None.
  3383                           ;!
  3384                           ;!Critical Paths under _main in BANK7
  3385                           ;!
  3386                           ;!    None.
  3387                           ;!
  3388                           ;!Critical Paths under _myint in BANK7
  3389                           ;!
  3390                           ;!    None.
  3391                           ;!
  3392                           ;!Critical Paths under _main in BANK8
  3393                           ;!
  3394                           ;!    None.
  3395                           ;!
  3396                           ;!Critical Paths under _myint in BANK8
  3397                           ;!
  3398                           ;!    None.
  3399                           ;!
  3400                           ;!Critical Paths under _main in BANK9
  3401                           ;!
  3402                           ;!    None.
  3403                           ;!
  3404                           ;!Critical Paths under _myint in BANK9
  3405                           ;!
  3406                           ;!    None.
  3407                           ;!
  3408                           ;!Critical Paths under _main in BANK10
  3409                           ;!
  3410                           ;!    None.
  3411                           ;!
  3412                           ;!Critical Paths under _myint in BANK10
  3413                           ;!
  3414                           ;!    None.
  3415                           ;!
  3416                           ;!Critical Paths under _main in BANK11
  3417                           ;!
  3418                           ;!    None.
  3419                           ;!
  3420                           ;!Critical Paths under _myint in BANK11
  3421                           ;!
  3422                           ;!    None.
  3423                           ;!
  3424                           ;!Critical Paths under _main in BANK12
  3425                           ;!
  3426                           ;!    None.
  3427                           ;!
  3428                           ;!Critical Paths under _myint in BANK12
  3429                           ;!
  3430                           ;!    None.
  3431                           
  3432 ;;
  3433 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3434 ;;
  3435                           
  3436                           ;!
  3437                           ;!Call Graph Tables:
  3438                           ;!
  3439                           ;! ---------------------------------------------------------------------------------
  3440                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3441                           ;! ---------------------------------------------------------------------------------
  3442                           ;! (0) _main                                                48    48      0   30994
  3443                           ;!                                             13 BANK1      2     2      0
  3444                           ;!                                              0 BANK5     46    46      0
  3445                           ;!                           _AddTrace
  3446                           ;!                           _Debounce
  3447                           ;!                   _EM1812EntryPoint
  3448                           ;!                  _Esp8266OpenSocket
  3449                           ;!          _Esp8266SetAccessPointMode
  3450                           ;!                   _Esp8266SetupWifi
  3451                           ;!                           _PrintLog
  3452                           ;!                       _clearDisplay
  3453                           ;!                            _initLCD
  3454                           ;!                       _lcdWriteText
  3455                           ;!                             _memset
  3456                           ;!                   _moveCursorToHome
  3457                           ;!                         _powerOnLcd
  3458                           ;!                        _printEM1812
  3459                           ;!                       _setCursorOff
  3460                           ;!                  _setCursorPosition
  3461                           ;!               _setNotBlinkingCursor
  3462                           ;! ---------------------------------------------------------------------------------
  3463                           ;! (1) _setNotBlinkingCursor                                 1     1      0     254
  3464                           ;!                                             18 BANK0      1     1      0
  3465                           ;!                        _writeInsChk
  3466                           ;! ---------------------------------------------------------------------------------
  3467                           ;! (1) _setCursorOff                                         1     1      0     254
  3468                           ;!                                             18 BANK0      1     1      0
  3469                           ;!                        _writeInsChk
  3470                           ;! ---------------------------------------------------------------------------------
  3471                           ;! (1) _printEM1812                                         10     7      3    4184
  3472                           ;!                                             21 BANK0     10     7      3
  3473                           ;!                            ___awdiv
  3474                           ;!                            ___awmod
  3475                           ;! ---------------------------------------------------------------------------------
  3476                           ;! (2) ___awmod                                              7     3      4    1333
  3477                           ;!                                             12 BANK0      7     3      4
  3478                           ;! ---------------------------------------------------------------------------------
  3479                           ;! (2) ___awdiv                                              9     5      4    1345
  3480                           ;!                                             12 BANK0      9     5      4
  3481                           ;! ---------------------------------------------------------------------------------
  3482                           ;! (1) _powerOnLcd                                           1     1      0     254
  3483                           ;!                                             18 BANK0      1     1      0
  3484                           ;!                        _writeInsChk
  3485                           ;! ---------------------------------------------------------------------------------
  3486                           ;! (1) _moveCursorToHome                                     0     0      0     254
  3487                           ;!                        _writeInsChk
  3488                           ;! ---------------------------------------------------------------------------------
  3489                           ;! (1) _initLCD                                              1     1      0     632
  3490                           ;!                                             18 BANK0      1     1      0
  3491                           ;!                       _clearDisplay
  3492                           ;!                            _setData
  3493                           ;!                        _writeInsChk
  3494                           ;! ---------------------------------------------------------------------------------
  3495                           ;! (2) _clearDisplay                                         0     0      0     254
  3496                           ;!                        _writeInsChk
  3497                           ;! ---------------------------------------------------------------------------------
  3498                           ;! (2) _writeInsChk                                          1     1      0     254
  3499                           ;!                                             17 BANK0      1     1      0
  3500                           ;!                        _waitLCDBusy
  3501                           ;!                      _writeInsNoChk
  3502                           ;! ---------------------------------------------------------------------------------
  3503                           ;! (3) _writeInsNoChk                                        2     2      0     186
  3504                           ;!                                             15 BANK0      2     2      0
  3505                           ;!                 _SetToSendDataToLCD
  3506                           ;!                            _setData
  3507                           ;! ---------------------------------------------------------------------------------
  3508                           ;! (1) _PrintLog                                             4     4      0    6882
  3509                           ;!                                             30 BANK0      4     4      0
  3510                           ;!                       _lcdWriteText
  3511                           ;!                             _memset
  3512                           ;!                             _strlen
  3513                           ;! ---------------------------------------------------------------------------------
  3514                           ;! (1) _memset                                              10     6      4    1881
  3515                           ;!                                             12 BANK0     10     6      4
  3516                           ;! ---------------------------------------------------------------------------------
  3517                           ;! (1) _lcdWriteText                                         6     4      2    3867
  3518                           ;!                                             24 BANK0      6     4      2
  3519                           ;!                        _writeTxtChk
  3520                           ;! ---------------------------------------------------------------------------------
  3521                           ;! (2) _writeTxtChk                                          3     3      0    2242
  3522                           ;!                                             21 BANK0      3     3      0
  3523                           ;!                 _SetToSendDataToLCD
  3524                           ;!                  _setCursorPosition
  3525                           ;!                            _setData
  3526                           ;!                        _waitLCDBusy
  3527                           ;! ---------------------------------------------------------------------------------
  3528                           ;! (1) _setCursorPosition                                    5     4      1    1957
  3529                           ;!                                             16 BANK0      5     4      1
  3530                           ;!                 _SetToSendDataToLCD
  3531                           ;!                            _setData
  3532                           ;!                        _waitLCDBusy
  3533                           ;! ---------------------------------------------------------------------------------
  3534                           ;! (3) _waitLCDBusy                                          4     4      0      37
  3535                           ;!                                             12 BANK0      4     4      0
  3536                           ;!               _SetToReadDataFromLCD
  3537                           ;! ---------------------------------------------------------------------------------
  3538                           ;! (4) _SetToReadDataFromLCD                                 0     0      0       0
  3539                           ;! ---------------------------------------------------------------------------------
  3540                           ;! (4) _setData                                              3     3      0     124
  3541                           ;!                                             12 BANK0      3     3      0
  3542                           ;! ---------------------------------------------------------------------------------
  3543                           ;! (4) _SetToSendDataToLCD                                   0     0      0       0
  3544                           ;! ---------------------------------------------------------------------------------
  3545                           ;! (1) _Esp8266SetupWifi                                     1     1      0       0
  3546                           ;!                                             12 BANK0      1     1      0
  3547                           ;! ---------------------------------------------------------------------------------
  3548                           ;! (1) _Esp8266SetAccessPointMode                            1     1      0       0
  3549                           ;!                                             12 BANK0      1     1      0
  3550                           ;! ---------------------------------------------------------------------------------
  3551                           ;! (1) _Esp8266OpenSocket                                    1     1      0       0
  3552                           ;!                                             12 BANK0      1     1      0
  3553                           ;! ---------------------------------------------------------------------------------
  3554                           ;! (1) _EM1812EntryPoint                                    20    18      2    3024
  3555                           ;!                                             29 BANK0      7     5      2
  3556                           ;!                                              0 BANK1     13    13      0
  3557                           ;!                       _GetI2CStatus
  3558                           ;!                 _GetNewReceivedData
  3559                           ;!                        _I2C_GetData
  3560                           ;!                       _I2C_SendData
  3561                           ;! ---------------------------------------------------------------------------------
  3562                           ;! (2) _I2C_SendData                                         5     3      2    1118
  3563                           ;!                                             24 BANK0      5     3      2
  3564                           ;!                             _memcpy
  3565                           ;! ---------------------------------------------------------------------------------
  3566                           ;! (2) _I2C_GetData                                          4     2      2     183
  3567                           ;!                                             12 BANK0      4     2      2
  3568                           ;! ---------------------------------------------------------------------------------
  3569                           ;! (2) _GetNewReceivedData                                   4     3      1    1056
  3570                           ;!                                             24 BANK0      4     3      1
  3571                           ;!                             _memcpy
  3572                           ;! ---------------------------------------------------------------------------------
  3573                           ;! (3) _memcpy                                              12     6      6     868
  3574                           ;!                                             12 BANK0     12     6      6
  3575                           ;! ---------------------------------------------------------------------------------
  3576                           ;! (2) _GetI2CStatus                                         4     2      2       0
  3577                           ;!                                             12 BANK0      4     2      2
  3578                           ;! ---------------------------------------------------------------------------------
  3579                           ;! (1) _Debounce                                             5     3      2     788
  3580                           ;!                                             12 BANK0      5     3      2
  3581                           ;! ---------------------------------------------------------------------------------
  3582                           ;! (1) _AddTrace                                            10     7      3    5346
  3583                           ;!                                             34 BANK0      3     0      3
  3584                           ;!                                              0 BANK1      7     7      0
  3585                           ;!                             _strcat
  3586                           ;!                             _strlen
  3587                           ;! ---------------------------------------------------------------------------------
  3588                           ;! (2) _strcat                                               4     0      4    3387
  3589                           ;!                                             30 BANK0      4     0      4
  3590                           ;!                             _strcpy
  3591                           ;!                             _strlen
  3592                           ;! ---------------------------------------------------------------------------------
  3593                           ;! (2) _strlen                                               6     4      2     940
  3594                           ;!                                             12 BANK0      6     4      2
  3595                           ;! ---------------------------------------------------------------------------------
  3596                           ;! (3) _strcpy                                              12     8      4     527
  3597                           ;!                                             18 BANK0     12     8      4
  3598                           ;!                             _strlen (ARG)
  3599                           ;! ---------------------------------------------------------------------------------
  3600                           ;! Estimated maximum stack depth 4
  3601                           ;! ---------------------------------------------------------------------------------
  3602                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3603                           ;! ---------------------------------------------------------------------------------
  3604                           ;! (7) _myint                                                8     8      0    1467
  3605                           ;!                                              4 BANK0      8     8      0
  3606                           ;!                    _EUSARTInterrupt
  3607                           ;!                      _I2C_Interrupt
  3608                           ;!                  _TempUpdateRequest
  3609                           ;!                     i1_lcdWriteText
  3610                           ;! ---------------------------------------------------------------------------------
  3611                           ;! (8) i1_lcdWriteText                                       6     4      2    1247
  3612                           ;!                                             12 COMMON     2     0      2
  3613                           ;!                                              0 BANK0      4     4      0
  3614                           ;!                      i1_writeTxtChk
  3615                           ;! ---------------------------------------------------------------------------------
  3616                           ;! (9) i1_writeTxtChk                                        3     3      0    1082
  3617                           ;!                                              9 COMMON     3     3      0
  3618                           ;!               i1_SetToSendDataToLCD
  3619                           ;!                i1_setCursorPosition
  3620                           ;!                          i1_setData
  3621                           ;!                      i1_waitLCDBusy
  3622                           ;! ---------------------------------------------------------------------------------
  3623                           ;! (10) i1_setCursorPosition                                 5     4      1     797
  3624                           ;!                                              4 COMMON     5     4      1
  3625                           ;!               i1_SetToSendDataToLCD
  3626                           ;!                          i1_setData
  3627                           ;!                      i1_waitLCDBusy
  3628                           ;! ---------------------------------------------------------------------------------
  3629                           ;! (10) i1_waitLCDBusy                                       4     4      0      37
  3630                           ;!                                              0 COMMON     4     4      0
  3631                           ;!             i1_SetToReadDataFromLCD
  3632                           ;! ---------------------------------------------------------------------------------
  3633                           ;! (11) i1_SetToReadDataFromLCD                              0     0      0       0
  3634                           ;! ---------------------------------------------------------------------------------
  3635                           ;! (10) i1_setData                                           3     3      0     124
  3636                           ;!                                              0 COMMON     3     3      0
  3637                           ;! ---------------------------------------------------------------------------------
  3638                           ;! (11) i1_SetToSendDataToLCD                                0     0      0       0
  3639                           ;! ---------------------------------------------------------------------------------
  3640                           ;! (8) _TempUpdateRequest                                    0     0      0       0
  3641                           ;! ---------------------------------------------------------------------------------
  3642                           ;! (8) _I2C_Interrupt                                        5     3      2      26
  3643                           ;!                                              0 COMMON     5     3      2
  3644                           ;! ---------------------------------------------------------------------------------
  3645                           ;! (8) _EUSARTInterrupt                                      4     2      2       0
  3646                           ;!                                              0 COMMON     4     2      2
  3647                           ;! ---------------------------------------------------------------------------------
  3648                           ;! Estimated maximum stack depth 11
  3649                           ;! ---------------------------------------------------------------------------------
  3650                           ;!
  3651                           ;! Call Graph Graphs:
  3652                           ;!
  3653                           ;! _main (ROOT)
  3654                           ;!   _AddTrace
  3655                           ;!     _strcat
  3656                           ;!       _strcpy
  3657                           ;!         _strlen (ARG)
  3658                           ;!       _strlen
  3659                           ;!     _strlen
  3660                           ;!   _Debounce
  3661                           ;!   _EM1812EntryPoint
  3662                           ;!     _GetI2CStatus
  3663                           ;!     _GetNewReceivedData
  3664                           ;!       _memcpy
  3665                           ;!     _I2C_GetData
  3666                           ;!     _I2C_SendData
  3667                           ;!       _memcpy
  3668                           ;!   _Esp8266OpenSocket
  3669                           ;!   _Esp8266SetAccessPointMode
  3670                           ;!   _Esp8266SetupWifi
  3671                           ;!   _PrintLog
  3672                           ;!     _lcdWriteText
  3673                           ;!       _writeTxtChk
  3674                           ;!         _SetToSendDataToLCD
  3675                           ;!         _setCursorPosition
  3676                           ;!           _SetToSendDataToLCD
  3677                           ;!           _setData
  3678                           ;!           _waitLCDBusy
  3679                           ;!             _SetToReadDataFromLCD
  3680                           ;!         _setData
  3681                           ;!         _waitLCDBusy
  3682                           ;!           _SetToReadDataFromLCD
  3683                           ;!     _memset
  3684                           ;!     _strlen
  3685                           ;!   _clearDisplay
  3686                           ;!     _writeInsChk
  3687                           ;!       _waitLCDBusy
  3688                           ;!         _SetToReadDataFromLCD
  3689                           ;!       _writeInsNoChk
  3690                           ;!         _SetToSendDataToLCD
  3691                           ;!         _setData
  3692                           ;!   _initLCD
  3693                           ;!     _clearDisplay
  3694                           ;!       _writeInsChk
  3695                           ;!         _waitLCDBusy
  3696                           ;!           _SetToReadDataFromLCD
  3697                           ;!         _writeInsNoChk
  3698                           ;!           _SetToSendDataToLCD
  3699                           ;!           _setData
  3700                           ;!     _setData
  3701                           ;!     _writeInsChk
  3702                           ;!       _waitLCDBusy
  3703                           ;!         _SetToReadDataFromLCD
  3704                           ;!       _writeInsNoChk
  3705                           ;!         _SetToSendDataToLCD
  3706                           ;!         _setData
  3707                           ;!   _lcdWriteText
  3708                           ;!     _writeTxtChk
  3709                           ;!       _SetToSendDataToLCD
  3710                           ;!       _setCursorPosition
  3711                           ;!         _SetToSendDataToLCD
  3712                           ;!         _setData
  3713                           ;!         _waitLCDBusy
  3714                           ;!           _SetToReadDataFromLCD
  3715                           ;!       _setData
  3716                           ;!       _waitLCDBusy
  3717                           ;!         _SetToReadDataFromLCD
  3718                           ;!   _memset
  3719                           ;!   _moveCursorToHome
  3720                           ;!     _writeInsChk
  3721                           ;!       _waitLCDBusy
  3722                           ;!         _SetToReadDataFromLCD
  3723                           ;!       _writeInsNoChk
  3724                           ;!         _SetToSendDataToLCD
  3725                           ;!         _setData
  3726                           ;!   _powerOnLcd
  3727                           ;!     _writeInsChk
  3728                           ;!       _waitLCDBusy
  3729                           ;!         _SetToReadDataFromLCD
  3730                           ;!       _writeInsNoChk
  3731                           ;!         _SetToSendDataToLCD
  3732                           ;!         _setData
  3733                           ;!   _printEM1812
  3734                           ;!     ___awdiv
  3735                           ;!     ___awmod
  3736                           ;!   _setCursorOff
  3737                           ;!     _writeInsChk
  3738                           ;!       _waitLCDBusy
  3739                           ;!         _SetToReadDataFromLCD
  3740                           ;!       _writeInsNoChk
  3741                           ;!         _SetToSendDataToLCD
  3742                           ;!         _setData
  3743                           ;!   _setCursorPosition
  3744                           ;!     _SetToSendDataToLCD
  3745                           ;!     _setData
  3746                           ;!     _waitLCDBusy
  3747                           ;!       _SetToReadDataFromLCD
  3748                           ;!   _setNotBlinkingCursor
  3749                           ;!     _writeInsChk
  3750                           ;!       _waitLCDBusy
  3751                           ;!         _SetToReadDataFromLCD
  3752                           ;!       _writeInsNoChk
  3753                           ;!         _SetToSendDataToLCD
  3754                           ;!         _setData
  3755                           ;!
  3756                           ;! _myint (ROOT)
  3757                           ;!   _EUSARTInterrupt
  3758                           ;!   _I2C_Interrupt
  3759                           ;!   _TempUpdateRequest
  3760                           ;!   i1_lcdWriteText
  3761                           ;!     i1_writeTxtChk
  3762                           ;!       i1_SetToSendDataToLCD
  3763                           ;!       i1_setCursorPosition
  3764                           ;!         i1_SetToSendDataToLCD
  3765                           ;!         i1_setData
  3766                           ;!         i1_waitLCDBusy
  3767                           ;!           i1_SetToReadDataFromLCD
  3768                           ;!       i1_setData
  3769                           ;!       i1_waitLCDBusy
  3770                           ;!         i1_SetToReadDataFromLCD
  3771                           ;!
  3772                           
  3773                           ;! Address spaces:
  3774                           
  3775                           ;!Name               Size   Autos  Total    Cost      Usage
  3776                           ;!BIGRAM             3F0      0       0       0        0.0%
  3777                           ;!NULL                 0      0       0       0        0.0%
  3778                           ;!CODE                 0      0       0       0        0.0%
  3779                           ;!BITCOMMON            E      0       0       1        0.0%
  3780                           ;!BITSFR0              0      0       0       1        0.0%
  3781                           ;!SFR0                 0      0       0       1        0.0%
  3782                           ;!COMMON               E      E       E       2      100.0%
  3783                           ;!BITSFR1              0      0       0       2        0.0%
  3784                           ;!SFR1                 0      0       0       2        0.0%
  3785                           ;!BITSFR2              0      0       0       3        0.0%
  3786                           ;!SFR2                 0      0       0       3        0.0%
  3787                           ;!STACK                0      0       0       3        0.0%
  3788                           ;!BITBANK0            50      0       0       4        0.0%
  3789                           ;!BITSFR3              0      0       0       4        0.0%
  3790                           ;!SFR3                 0      0       0       4        0.0%
  3791                           ;!BANK0               50     25      44       5       85.0%
  3792                           ;!BITSFR4              0      0       0       5        0.0%
  3793                           ;!SFR4                 0      0       0       5        0.0%
  3794                           ;!BITBANK1            50      0       0       6        0.0%
  3795                           ;!BITSFR5              0      0       0       6        0.0%
  3796                           ;!SFR5                 0      0       0       6        0.0%
  3797                           ;!BANK1               50      F      30       7       60.0%
  3798                           ;!BITSFR6              0      0       0       7        0.0%
  3799                           ;!SFR6                 0      0       0       7        0.0%
  3800                           ;!BITBANK2            50      0       0       8        0.0%
  3801                           ;!BITSFR7              0      0       0       8        0.0%
  3802                           ;!SFR7                 0      0       0       8        0.0%
  3803                           ;!BANK2               50      0      3C       9       75.0%
  3804                           ;!BITSFR8              0      0       0       9        0.0%
  3805                           ;!SFR8                 0      0       0       9        0.0%
  3806                           ;!BITBANK3            50      0       0      10        0.0%
  3807                           ;!BITSFR9              0      0       0      10        0.0%
  3808                           ;!SFR9                 0      0       0      10        0.0%
  3809                           ;!BANK3               50      0      4B      11       93.8%
  3810                           ;!BITSFR10             0      0       0      11        0.0%
  3811                           ;!SFR10                0      0       0      11        0.0%
  3812                           ;!BITBANK4            50      0       0      12        0.0%
  3813                           ;!BITSFR11             0      0       0      12        0.0%
  3814                           ;!SFR11                0      0       0      12        0.0%
  3815                           ;!BANK4               50      0      46      13       87.5%
  3816                           ;!BITSFR12             0      0       0      13        0.0%
  3817                           ;!SFR12                0      0       0      13        0.0%
  3818                           ;!BITBANK5            50      0       0      14        0.0%
  3819                           ;!BITSFR13             0      0       0      14        0.0%
  3820                           ;!SFR13                0      0       0      14        0.0%
  3821                           ;!BANK5               50     2E      2E      15       57.5%
  3822                           ;!BITSFR14             0      0       0      15        0.0%
  3823                           ;!SFR14                0      0       0      15        0.0%
  3824                           ;!BITBANK6            50      0       0      16        0.0%
  3825                           ;!BITSFR15             0      0       0      16        0.0%
  3826                           ;!SFR15                0      0       0      16        0.0%
  3827                           ;!BANK6               50      0       0      17        0.0%
  3828                           ;!BITSFR16             0      0       0      17        0.0%
  3829                           ;!SFR16                0      0       0      17        0.0%
  3830                           ;!BITBANK7            50      0       0      18        0.0%
  3831                           ;!BITSFR17             0      0       0      18        0.0%
  3832                           ;!SFR17                0      0       0      18        0.0%
  3833                           ;!BANK7               50      0       0      19        0.0%
  3834                           ;!BITSFR18             0      0       0      19        0.0%
  3835                           ;!SFR18                0      0       0      19        0.0%
  3836                           ;!BITSFR19             0      0       0      20        0.0%
  3837                           ;!SFR19                0      0       0      20        0.0%
  3838                           ;!ABS                  0      0     17D      20        0.0%
  3839                           ;!BITBANK8            50      0       0      21        0.0%
  3840                           ;!BITSFR20             0      0       0      21        0.0%
  3841                           ;!SFR20                0      0       0      21        0.0%
  3842                           ;!BANK8               50      0       0      22        0.0%
  3843                           ;!BITSFR21             0      0       0      22        0.0%
  3844                           ;!SFR21                0      0       0      22        0.0%
  3845                           ;!BITBANK9            50      0       0      23        0.0%
  3846                           ;!BITSFR22             0      0       0      23        0.0%
  3847                           ;!SFR22                0      0       0      23        0.0%
  3848                           ;!BANK9               50      0       0      24        0.0%
  3849                           ;!BITSFR23             0      0       0      24        0.0%
  3850                           ;!SFR23                0      0       0      24        0.0%
  3851                           ;!BITBANK10           50      0       0      25        0.0%
  3852                           ;!BITSFR24             0      0       0      25        0.0%
  3853                           ;!SFR24                0      0       0      25        0.0%
  3854                           ;!BANK10               8      0       0      26        0.0%
  3855                           ;!BITSFR25             0      0       0      26        0.0%
  3856                           ;!SFR25                0      0       0      26        0.0%
  3857                           ;!BITBANK11           50      0       0      27        0.0%
  3858                           ;!BITSFR26             0      0       0      27        0.0%
  3859                           ;!SFR26                0      0       0      27        0.0%
  3860                           ;!BITSFR27             0      0       0      28        0.0%
  3861                           ;!SFR27                0      0       0      28        0.0%
  3862                           ;!BANK11               0      0       0      28        0.0%
  3863                           ;!BITBANK12           30      0       0      29        0.0%
  3864                           ;!BITSFR28             0      0       0      29        0.0%
  3865                           ;!SFR28                0      0       0      29        0.0%
  3866                           ;!BITSFR29             0      0       0      30        0.0%
  3867                           ;!SFR29                0      0       0      30        0.0%
  3868                           ;!BANK12               0      0       0      30        0.0%
  3869                           ;!BITSFR30             0      0       0      31        0.0%
  3870                           ;!SFR30                0      0       0      31        0.0%
  3871                           ;!DATA                 0      0     17D      31        0.0%
  3872                           ;!BITSFR31             0      0       0      32        0.0%
  3873                           ;!SFR31                0      0       0      32        0.0%
  3874                           
  3875                           	global	_main
  3876                           
  3877 ;; *************** function _main *****************
  3878 ;; Defined at:
  3879 ;;		line 112 in file "161518_temp_main.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;		None
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;  wReadout       20    8[BANK5 ] unsigned char [20]
  3884 ;;  wConv           4    0[BANK5 ] unsigned char [4]
  3885 ;;  wDebounceDow    2   40[BANK5 ] unsigned short 
  3886 ;;  wDebounceUp     2   38[BANK5 ] unsigned short 
  3887 ;;  wDebounceEnt    2   36[BANK5 ] unsigned short 
  3888 ;;  wTemperature    2   33[BANK5 ] short 
  3889 ;;  wHumidityPre    2   31[BANK5 ] short 
  3890 ;;  wIterationCo    2   28[BANK5 ] unsigned short 
  3891 ;;  wTemp           2    6[BANK5 ] int 
  3892 ;;  wCounter        2    4[BANK5 ] int 
  3893 ;;  wMenu           1   45[BANK5 ] unsigned char 
  3894 ;;  wEnterBotton    1   44[BANK5 ] unsigned char 
  3895 ;;  wDownBottonP    1   43[BANK5 ] unsigned char 
  3896 ;;  wUpBottonPre    1   42[BANK5 ] unsigned char 
  3897 ;;  wUpdateMenu     1   35[BANK5 ] unsigned char 
  3898 ;;  wEditingMode    1   30[BANK5 ] unsigned char 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  1    wreg      void 
  3901 ;; Registers used:
  3902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3903 ;; Tracked objects:
  3904 ;;		On entry : B1F/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3909 ;;      Locals:         0       0       0       0       0       0      46       0       0       0       0       0       
       0       0
  3910 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  3911 ;;      Totals:         0       0       2       0       0       0      46       0       0       0       0       0       
       0       0
  3912 ;;Total ram usage:       48 bytes
  3913 ;; Hardware stack levels required when called:   12
  3914 ;; This function calls:
  3915 ;;		_AddTrace
  3916 ;;		_Debounce
  3917 ;;		_EM1812EntryPoint
  3918 ;;		_Esp8266OpenSocket
  3919 ;;		_Esp8266SetAccessPointMode
  3920 ;;		_Esp8266SetupWifi
  3921 ;;		_PrintLog
  3922 ;;		_clearDisplay
  3923 ;;		_initLCD
  3924 ;;		_lcdWriteText
  3925 ;;		_memset
  3926 ;;		_moveCursorToHome
  3927 ;;		_powerOnLcd
  3928 ;;		_printEM1812
  3929 ;;		_setCursorOff
  3930 ;;		_setCursorPosition
  3931 ;;		_setNotBlinkingCursor
  3932 ;; This function is called by:
  3933 ;;		Startup code after reset
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  3937                           	file	"161518_temp_main.c"
  3938                           	line	112
  3939                           global __pmaintext
  3940                           __pmaintext:	;psect for function _main
  3941  00C4                     psect	maintext
  3942                           	file	"161518_temp_main.c"
  3943                           	line	112
  3944                           	global	__size_of_main
  3945                           	__size_of_main	equ	__end_of_main-_main
  3946  030E                     	
  3947                           _main:	
  3948  00C4                     ;incstack = 0
  3949                           	opt	stack 4
  3950                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3951                           	line	114
  3952                           	
  3953                           l6143:	
  3954  00C4                     	movlb 1	; select bank1
  3955  00C4  0021               	clrf	(_gErrorCode)^080h
  3956  00C5  01B1               	line	117
  3957                           	movlb 5	; select bank5
  3958  00C6  0025               	clrf	(main@wHumidityPrev)^0280h
  3959  00C7  01BF               	clrf	(main@wHumidityPrev+1)^0280h
  3960  00C8  01C0               	line	118
  3961                           	clrf	(main@wTemperaturePrev)^0280h
  3962  00C9  01C1               	clrf	(main@wTemperaturePrev+1)^0280h
  3963  00CA  01C2               	line	119
  3964                           	
  3965                           l6145:	
  3966  00CB                     	movlw	0
  3967  00CB  3000               	movlb 0	; select bank0
  3968  00CC  0020               	movwf	(memset@c)
  3969  00CD  00AC               	movwf	(memset@c+1)
  3970  00CE  00AD               	movlw	04Bh
  3971  00CF  304B               	movwf	(memset@n)
  3972  00D0  00AE               	movlw	0
  3973  00D1  3000               	movwf	((memset@n))+1
  3974  00D2  00AF               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  3975  00D3  30A0               	fcall	_memset
  3976  00D4  3186  26DE  3180   	line	122
  3977                           	
  3978                           l6147:	
  3979  00D7                     	movlw	(0Fh & ((1<<4)-1))<<3
  3980  00D7  3078               	movlb 1	; select bank1
  3981  00D8  0021               	iorwf	(153)^080h,f	;volatile
  3982  00D9  0499               	line	123
  3983                           	
  3984                           l6149:	
  3985  00DA                     	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
  3986  00DA  30FC               	andwf	(153)^080h,f	;volatile
  3987  00DB  0599               	line	124
  3988                           	
  3989                           l6151:	
  3990  00DC                     	bcf	(11),7	;volatile
  3991  00DC  138B               	line	126
  3992                           	
  3993                           l6153:	
  3994  00DD                     	movlb 5	; select bank5
  3995  00DD  0025               	clrf	(main@wUpBottonPressed)^0280h
  3996  00DE  01CA               	line	127
  3997                           	
  3998                           l6155:	
  3999  00DF                     	clrf	(main@wDownBottonPressed)^0280h
  4000  00DF  01CB               	line	128
  4001                           	
  4002                           l6157:	
  4003  00E0                     	clrf	(main@wEnterBottonPressed)^0280h
  4004  00E0  01CC               	line	130
  4005                           	
  4006                           l6159:	
  4007  00E1                     	clrf	(main@wEditingMode)^0280h
  4008  00E1  01BE               	line	131
  4009                           	
  4010                           l6161:	
  4011  00E2                     	clrf	(main@wMenu)^0280h
  4012  00E2  01CD               	line	132
  4013                           	
  4014                           l6163:	
  4015  00E3                     	clrf	(main@wUpdateMenu)^0280h
  4016  00E3  01C3               	incf	(main@wUpdateMenu)^0280h,f
  4017  00E4  0AC3               	line	134
  4018                           	
  4019                           l6165:	
  4020  00E5                     	clrf	(main@wIterationCounter)^0280h
  4021  00E5  01BC               	clrf	(main@wIterationCounter+1)^0280h
  4022  00E6  01BD               	line	135
  4023                           	
  4024                           l6167:	
  4025  00E7                     	clrf	(main@wDebounceEnter)^0280h
  4026  00E7  01C4               	clrf	(main@wDebounceEnter+1)^0280h
  4027  00E8  01C5               	line	136
  4028                           	
  4029                           l6169:	
  4030  00E9                     	clrf	(main@wDebounceUp)^0280h
  4031  00E9  01C6               	clrf	(main@wDebounceUp+1)^0280h
  4032  00EA  01C7               	line	137
  4033                           	
  4034                           l6171:	
  4035  00EB                     	clrf	(main@wDebounceDown)^0280h
  4036  00EB  01C8               	clrf	(main@wDebounceDown+1)^0280h
  4037  00EC  01C9               	line	139
  4038                           	
  4039                           l6173:	
  4040  00ED                     	movlb 0	; select bank0
  4041  00ED  0020               	clrf	(12)	;volatile
  4042  00EE  018C               	line	143
  4043                           	
  4044                           l6175:	
  4045  00EF                     	movlw	((0 & ((1<<2)-1))<<6)|not (((1<<2)-1)<<6)
  4046  00EF  303F               	andwf	(24),f	;volatile
  4047  00F0  0598               	line	144
  4048                           	
  4049                           l6177:	
  4050  00F1                     	bcf	(24),3	;volatile
  4051  00F1  1198               	line	145
  4052                           	
  4053                           l6179:	
  4054  00F2                     	movlw	(03h & ((1<<2)-1))<<4
  4055  00F2  3030               	iorwf	(24),f	;volatile
  4056  00F3  0498               	line	146
  4057                           	
  4058                           l6181:	
  4059  00F4                     	bcf	(24),2	;volatile
  4060  00F4  1118               	line	147
  4061                           	
  4062                           l6183:	
  4063  00F5                     	bsf	(24),0	;volatile
  4064  00F5  1418               	line	148
  4065                           	
  4066                           l6185:	
  4067  00F6                     	movlb 1	; select bank1
  4068  00F6  0021               	bsf	(145)^080h,0	;volatile
  4069  00F7  1411               	line	152
  4070                           	
  4071                           l6187:	
  4072  00F8                     	movf	(149)^080h,w	;volatile
  4073  00F8  0815               	andlw	not (((1<<3)-1)<<0)
  4074  00F9  39F8               	iorlw	(02h & ((1<<3)-1))<<0
  4075  00FA  3802               	movwf	(149)^080h	;volatile
  4076  00FB  0095               	line	153
  4077                           	
  4078                           l6189:	
  4079  00FC                     	bcf	(149)^080h,5	;volatile
  4080  00FC  1295               	line	154
  4081                           	
  4082                           l6191:	
  4083  00FD                     	bcf	(149)^080h,3	;volatile
  4084  00FD  1195               	line	155
  4085                           	
  4086                           l6193:	
  4087  00FE                     	bcf	(11),5	;volatile
  4088  00FE  128B               	line	159
  4089                           	
  4090                           l6195:	
  4091  00FF                     	movlb 0	; select bank0
  4092  00FF  0020               	clrf	(13)	;volatile
  4093  0100  018D               	line	160
  4094                           	
  4095                           l6197:	
  4096  0101                     	movlb 3	; select bank3
  4097  0101  0023               	clrf	(397)^0180h	;volatile
  4098  0102  018D               	line	161
  4099                           	
  4100                           l6199:	
  4101  0103                     	movlw	low(0Fh)
  4102  0103  300F               	movlb 1	; select bank1
  4103  0104  0021               	movwf	(141)^080h	;volatile
  4104  0105  008D               	line	162
  4105                           	
  4106                           l6201:	
  4107  0106                     	movlw	low(0Fh)
  4108  0106  300F               	movlb 4	; select bank4
  4109  0107  0024               	movwf	(525)^0200h	;volatile
  4110  0108  008D               	line	163
  4111                           	
  4112                           l6203:	
  4113  0109                     	movlb 1	; select bank1
  4114  0109  0021               	bcf	(149)^080h,7	;volatile
  4115  010A  1395               	line	166
  4116                           	
  4117                           l6205:	
  4118  010B                     	bcf	(142)^080h,5	;volatile
  4119  010B  128E               	line	167
  4120                           	
  4121                           l6207:	
  4122  010C                     	movlb 3	; select bank3
  4123  010C  0023               	bsf	(398)^0180h,5	;volatile
  4124  010D  168E               	line	168
  4125                           	
  4126                           l6209:	
  4127  010E                     	movlb 0	; select bank0
  4128  010E  0020               	bcf	(14),5	;volatile
  4129  010F  128E               	line	179
  4130                           	
  4131                           l6211:	
  4132  0110                     	fcall	_initLCD
  4133  0110  318E  2665  3180   	line	180
  4134                           	
  4135                           l6213:	
  4136  0113                     	fcall	_clearDisplay
  4137  0113  3189  2113  3180   	line	181
  4138                           	
  4139                           l6215:	
  4140  0116                     	opt asmopt_push
  4141                           opt asmopt_off
  4142                           movlw  3
  4143  0116  3003               	movlb 1	; select bank1
  4144  0117  0021               movwf	((??_main+0)^080h+0+1),f
  4145  0118  00C5               movlw	8
  4146  0119  3008               movwf	((??_main+0)^080h+0),f
  4147  011A  00C4               	movlw	119
  4148  011B  3077               u4797:
  4149  011C                     decfsz	wreg
  4150  011C  0B89               	goto	u4797
  4151  011D  291C               	decfsz	((??_main+0)^080h+0),f
  4152  011E  0BC4               	goto	u4797
  4153  011F  291C               	decfsz	((??_main+0)^080h+0+1),f
  4154  0120  0BC5               	goto	u4797
  4155  0121  291C               opt asmopt_pop
  4156                           
  4157                           	line	182
  4158                           	
  4159                           l6217:	
  4160  0122                     	fcall	_powerOnLcd
  4161  0122  3189  2172  3180   	line	183
  4162                           	
  4163                           l6219:	
  4164  0125                     	opt asmopt_push
  4165                           opt asmopt_off
  4166                           movlw  3
  4167  0125  3003               	movlb 1	; select bank1
  4168  0126  0021               movwf	((??_main+0)^080h+0+1),f
  4169  0127  00C5               movlw	8
  4170  0128  3008               movwf	((??_main+0)^080h+0),f
  4171  0129  00C4               	movlw	119
  4172  012A  3077               u4807:
  4173  012B                     decfsz	wreg
  4174  012B  0B89               	goto	u4807
  4175  012C  292B               	decfsz	((??_main+0)^080h+0),f
  4176  012D  0BC4               	goto	u4807
  4177  012E  292B               	decfsz	((??_main+0)^080h+0+1),f
  4178  012F  0BC5               	goto	u4807
  4179  0130  292B               opt asmopt_pop
  4180                           
  4181                           	line	184
  4182                           	
  4183                           l6221:	
  4184  0131                     	fcall	_setCursorOff
  4185  0131  3189  217D  3180   	line	185
  4186                           	
  4187                           l6223:	
  4188  0134                     	opt asmopt_push
  4189                           opt asmopt_off
  4190                           movlw  3
  4191  0134  3003               	movlb 1	; select bank1
  4192  0135  0021               movwf	((??_main+0)^080h+0+1),f
  4193  0136  00C5               movlw	8
  4194  0137  3008               movwf	((??_main+0)^080h+0),f
  4195  0138  00C4               	movlw	119
  4196  0139  3077               u4817:
  4197  013A                     decfsz	wreg
  4198  013A  0B89               	goto	u4817
  4199  013B  293A               	decfsz	((??_main+0)^080h+0),f
  4200  013C  0BC4               	goto	u4817
  4201  013D  293A               	decfsz	((??_main+0)^080h+0+1),f
  4202  013E  0BC5               	goto	u4817
  4203  013F  293A               opt asmopt_pop
  4204                           
  4205                           	line	186
  4206                           	
  4207                           l6225:	
  4208  0140                     	fcall	_moveCursorToHome
  4209  0140  3189  214B  3180   	line	187
  4210                           	
  4211                           l6227:	
  4212  0143                     	opt asmopt_push
  4213                           opt asmopt_off
  4214                           movlw  3
  4215  0143  3003               	movlb 1	; select bank1
  4216  0144  0021               movwf	((??_main+0)^080h+0+1),f
  4217  0145  00C5               movlw	8
  4218  0146  3008               movwf	((??_main+0)^080h+0),f
  4219  0147  00C4               	movlw	119
  4220  0148  3077               u4827:
  4221  0149                     decfsz	wreg
  4222  0149  0B89               	goto	u4827
  4223  014A  2949               	decfsz	((??_main+0)^080h+0),f
  4224  014B  0BC4               	goto	u4827
  4225  014C  2949               	decfsz	((??_main+0)^080h+0+1),f
  4226  014D  0BC5               	goto	u4827
  4227  014E  2949               opt asmopt_pop
  4228                           
  4229                           	line	188
  4230                           	
  4231                           l6229:	
  4232  014F                     	fcall	_setNotBlinkingCursor
  4233  014F  3189  2188  3180   	line	189
  4234                           	
  4235                           l6231:	
  4236  0152                     	opt asmopt_push
  4237                           opt asmopt_off
  4238                           movlw  3
  4239  0152  3003               	movlb 1	; select bank1
  4240  0153  0021               movwf	((??_main+0)^080h+0+1),f
  4241  0154  00C5               movlw	8
  4242  0155  3008               movwf	((??_main+0)^080h+0),f
  4243  0156  00C4               	movlw	119
  4244  0157  3077               u4837:
  4245  0158                     decfsz	wreg
  4246  0158  0B89               	goto	u4837
  4247  0159  2958               	decfsz	((??_main+0)^080h+0),f
  4248  015A  0BC4               	goto	u4837
  4249  015B  2958               	decfsz	((??_main+0)^080h+0+1),f
  4250  015C  0BC5               	goto	u4837
  4251  015D  2958               opt asmopt_pop
  4252                           
  4253                           	line	192
  4254                           	
  4255                           l6233:	
  4256  015E                     	movlb 5	; select bank5
  4257  015E  0025               	clrf	(main@wCounter)^0280h
  4258  015F  01A4               	clrf	(main@wCounter+1)^0280h
  4259  0160  01A5               	line	193
  4260                           	
  4261                           l6235:	
  4262  0161                     	movlb 1	; select bank1
  4263  0161  0021               	movf	(main@F2379+3)^080h,w
  4264  0162  084D               	movlb 5	; select bank5
  4265  0163  0025               	movwf	(main@wConv+3)^0280h
  4266  0164  00A3               	movlb 1	; select bank1
  4267  0165  0021               	movf	(main@F2379+2)^080h,w
  4268  0166  084C               	movlb 5	; select bank5
  4269  0167  0025               	movwf	(main@wConv+2)^0280h
  4270  0168  00A2               	movlb 1	; select bank1
  4271  0169  0021               	movf	(main@F2379+1)^080h,w
  4272  016A  084B               	movlb 5	; select bank5
  4273  016B  0025               	movwf	(main@wConv+1)^0280h
  4274  016C  00A1               	movlb 1	; select bank1
  4275  016D  0021               	movf	(main@F2379)^080h,w
  4276  016E  084A               	movlb 5	; select bank5
  4277  016F  0025               	movwf	(main@wConv)^0280h
  4278  0170  00A0               
  4279                           	line	194
  4280                           	
  4281                           l6237:	
  4282  0171                     	clrf	(main@wTemp)^0280h
  4283  0171  01A6               	clrf	(main@wTemp+1)^0280h
  4284  0172  01A7               	line	197
  4285                           	
  4286                           l6239:	
  4287  0173                     	fcall	_clearDisplay
  4288  0173  3189  2113  3180   	line	198
  4289                           	
  4290                           l6241:	
  4291  0176                     	fcall	_moveCursorToHome
  4292  0176  3189  214B  3180   	line	199
  4293                           	
  4294                           l6243:	
  4295  0179                     	opt asmopt_push
  4296                           opt asmopt_off
  4297                           movlw	156
  4298  0179  309C               	movlb 1	; select bank1
  4299  017A  0021               movwf	((??_main+0)^080h+0),f
  4300  017B  00C4               	movlw	215
  4301  017C  30D7               u4847:
  4302  017D                     decfsz	wreg
  4303  017D  0B89               	goto	u4847
  4304  017E  297D               	decfsz	((??_main+0)^080h+0),f
  4305  017F  0BC4               	goto	u4847
  4306  0180  297D               opt asmopt_pop
  4307                           
  4308                           	line	207
  4309                           	
  4310                           l6245:	
  4311  0181                     	opt asmopt_push
  4312                           opt asmopt_off
  4313                           movlw  21
  4314  0181  3015               	movlb 1	; select bank1
  4315  0182  0021               movwf	((??_main+0)^080h+0+1),f
  4316  0183  00C5               movlw	75
  4317  0184  304B               movwf	((??_main+0)^080h+0),f
  4318  0185  00C4               	movlw	190
  4319  0186  30BE               u4857:
  4320  0187                     decfsz	wreg
  4321  0187  0B89               	goto	u4857
  4322  0188  2987               	decfsz	((??_main+0)^080h+0),f
  4323  0189  0BC4               	goto	u4857
  4324  018A  2987               	decfsz	((??_main+0)^080h+0+1),f
  4325  018B  0BC5               	goto	u4857
  4326  018C  2987               	nop
  4327  018D  0000               opt asmopt_pop
  4328                           
  4329                           	goto	l6247
  4330  018E  298F               	line	213
  4331                           	
  4332                           l173:	
  4333  018F                     	line	215
  4334                           	
  4335                           l6247:	
  4336  018F                     	movlb 5	; select bank5
  4337  018F  0025               	movf	((main@wUpdateMenu)^0280h),w
  4338  0190  0843               	btfsc	status,2
  4339  0191  1903               	goto	u4431
  4340  0192  2994               	goto	u4430
  4341  0193  2995               u4431:
  4342  0194                     	goto	l6277
  4343  0194  2A52               u4430:
  4344  0195                     	line	217
  4345                           	
  4346                           l6249:	
  4347  0195                     	clrf	(main@wUpdateMenu)^0280h
  4348  0195  01C3               	line	218
  4349                           	goto	l6275
  4350  0196  2A33               	line	220
  4351                           	
  4352                           l176:	
  4353  0197                     	line	221
  4354                           	
  4355                           l6251:	
  4356  0197                     	movlb 0	; select bank0
  4357  0197  0020               	clrf	(setCursorPosition@iPosition)
  4358  0198  01B0               	movlw	low(0)
  4359  0199  3000               	fcall	_setCursorPosition
  4360  019A  318D  2540  3180   	line	222
  4361                           	movlw	low(((STR_1)|8000h))
  4362  019D  3077               	movlb 0	; select bank0
  4363  019E  0020               	movwf	(lcdWriteText@iText)
  4364  019F  00B8               	movlw	high(((STR_1)|8000h))
  4365  01A0  3090               	movwf	((lcdWriteText@iText))+1
  4366  01A1  00B9               	fcall	_lcdWriteText
  4367  01A2  318A  22D6  3180   	line	223
  4368                           	goto	l6277
  4369  01A5  2A52               	line	224
  4370                           	
  4371                           l178:	
  4372  01A6                     	line	225
  4373                           	
  4374                           l6253:	
  4375  01A6                     	movlb 0	; select bank0
  4376  01A6  0020               	clrf	(setCursorPosition@iPosition)
  4377  01A7  01B0               	movlw	low(0)
  4378  01A8  3000               	fcall	_setCursorPosition
  4379  01A9  318D  2540  3180   	line	226
  4380                           	movlw	low(((STR_2)|8000h))
  4381  01AC  3056               	movlb 0	; select bank0
  4382  01AD  0020               	movwf	(lcdWriteText@iText)
  4383  01AE  00B8               	movlw	high(((STR_2)|8000h))
  4384  01AF  3090               	movwf	((lcdWriteText@iText))+1
  4385  01B0  00B9               	fcall	_lcdWriteText
  4386  01B1  318A  22D6  3180   	line	227
  4387                           	
  4388                           l6255:	
  4389  01B4                     	movlb 1	; select bank1
  4390  01B4  0021               	movf	(_wTempSet+1)^080h,w
  4391  01B5  084F               	movlb 0	; select bank0
  4392  01B6  0020               	movwf	(printEM1812@wVariable+1)
  4393  01B7  00B6               	movlb 1	; select bank1
  4394  01B8  0021               	movf	(_wTempSet)^080h,w
  4395  01B9  084E               	movlb 0	; select bank0
  4396  01BA  0020               	movwf	(printEM1812@wVariable)
  4397  01BB  00B5               	movlw	(low(main@wReadout|((0x2)<<8)))&0ffh
  4398  01BC  30A8               	movlb 1	; select bank1
  4399  01BD  0021               	movwf	(??_main+0)^080h+0
  4400  01BE  00C4               	movf	(??_main+0)^080h+0,w
  4401  01BF  0844               	movlb 0	; select bank0
  4402  01C0  0020               	movwf	(printEM1812@oTextOut)
  4403  01C1  00B7               	fcall	_printEM1812
  4404  01C2  3186  2628  3180   	line	228
  4405                           	
  4406                           l6257:	
  4407  01C5                     	movlw	low(main@wReadout)
  4408  01C5  30A8               	movlb 0	; select bank0
  4409  01C6  0020               	movwf	(lcdWriteText@iText)
  4410  01C7  00B8               	movlw	high(main@wReadout)
  4411  01C8  3002               	movwf	(lcdWriteText@iText+1)
  4412  01C9  00B9               	fcall	_lcdWriteText
  4413  01CA  318A  22D6  3180   	line	229
  4414                           	goto	l6277
  4415  01CD  2A52               	line	230
  4416                           	
  4417                           l179:	
  4418  01CE                     	line	231
  4419                           	
  4420                           l6259:	
  4421  01CE                     	movlb 0	; select bank0
  4422  01CE  0020               	clrf	(setCursorPosition@iPosition)
  4423  01CF  01B0               	movlw	low(0)
  4424  01D0  3000               	fcall	_setCursorPosition
  4425  01D1  318D  2540  3180   	line	232
  4426                           	movlw	low(((STR_3)|8000h))
  4427  01D4  3087               	movlb 0	; select bank0
  4428  01D5  0020               	movwf	(lcdWriteText@iText)
  4429  01D6  00B8               	movlw	high(((STR_3)|8000h))
  4430  01D7  3090               	movwf	((lcdWriteText@iText))+1
  4431  01D8  00B9               	fcall	_lcdWriteText
  4432  01D9  318A  22D6  3180   	line	233
  4433                           	goto	l6277
  4434  01DC  2A52               	line	234
  4435                           	
  4436                           l180:	
  4437  01DD                     	line	235
  4438                           	
  4439                           l6261:	
  4440  01DD                     	movlb 0	; select bank0
  4441  01DD  0020               	clrf	(setCursorPosition@iPosition)
  4442  01DE  01B0               	movlw	low(0)
  4443  01DF  3000               	fcall	_setCursorPosition
  4444  01E0  318D  2540  3180   	line	236
  4445                           	movlw	low(((STR_4)|8000h))
  4446  01E3  3034               	movlb 0	; select bank0
  4447  01E4  0020               	movwf	(lcdWriteText@iText)
  4448  01E5  00B8               	movlw	high(((STR_4)|8000h))
  4449  01E6  3090               	movwf	((lcdWriteText@iText))+1
  4450  01E7  00B9               	fcall	_lcdWriteText
  4451  01E8  318A  22D6  3180   	line	237
  4452                           	goto	l6277
  4453  01EB  2A52               	line	238
  4454                           	
  4455                           l181:	
  4456  01EC                     	line	239
  4457                           	
  4458                           l6263:	
  4459  01EC                     	movlb 0	; select bank0
  4460  01EC  0020               	clrf	(setCursorPosition@iPosition)
  4461  01ED  01B0               	movlw	low(0)
  4462  01EE  3000               	fcall	_setCursorPosition
  4463  01EF  318D  2540  3180   	line	240
  4464                           	movlw	low(((STR_5)|8000h))
  4465  01F2  3045               	movlb 0	; select bank0
  4466  01F3  0020               	movwf	(lcdWriteText@iText)
  4467  01F4  00B8               	movlw	high(((STR_5)|8000h))
  4468  01F5  3090               	movwf	((lcdWriteText@iText))+1
  4469  01F6  00B9               	fcall	_lcdWriteText
  4470  01F7  318A  22D6  3180   	line	241
  4471                           	
  4472                           l6265:	
  4473  01FA                     	movlb 1	; select bank1
  4474  01FA  0021               	movf	(_wTempSet+1)^080h,w
  4475  01FB  084F               	movlb 0	; select bank0
  4476  01FC  0020               	movwf	(printEM1812@wVariable+1)
  4477  01FD  00B6               	movlb 1	; select bank1
  4478  01FE  0021               	movf	(_wTempSet)^080h,w
  4479  01FF  084E               	movlb 0	; select bank0
  4480  0200  0020               	movwf	(printEM1812@wVariable)
  4481  0201  00B5               	movlw	(low(main@wReadout|((0x2)<<8)))&0ffh
  4482  0202  30A8               	movlb 1	; select bank1
  4483  0203  0021               	movwf	(??_main+0)^080h+0
  4484  0204  00C4               	movf	(??_main+0)^080h+0,w
  4485  0205  0844               	movlb 0	; select bank0
  4486  0206  0020               	movwf	(printEM1812@oTextOut)
  4487  0207  00B7               	fcall	_printEM1812
  4488  0208  3186  2628  3180   	line	242
  4489                           	
  4490                           l6267:	
  4491  020B                     	movlw	low(main@wReadout)
  4492  020B  30A8               	movlb 0	; select bank0
  4493  020C  0020               	movwf	(lcdWriteText@iText)
  4494  020D  00B8               	movlw	high(main@wReadout)
  4495  020E  3002               	movwf	(lcdWriteText@iText+1)
  4496  020F  00B9               	fcall	_lcdWriteText
  4497  0210  318A  22D6  3180   	line	243
  4498                           	goto	l6277
  4499  0213  2A52               	line	244
  4500                           	
  4501                           l182:	
  4502  0214                     	line	245
  4503                           	
  4504                           l6269:	
  4505  0214                     	movlb 0	; select bank0
  4506  0214  0020               	clrf	(setCursorPosition@iPosition)
  4507  0215  01B0               	movlw	low(0)
  4508  0216  3000               	fcall	_setCursorPosition
  4509  0217  318D  2540  3180   	line	246
  4510                           	movlw	low(((STR_6)|8000h))
  4511  021A  3023               	movlb 0	; select bank0
  4512  021B  0020               	movwf	(lcdWriteText@iText)
  4513  021C  00B8               	movlw	high(((STR_6)|8000h))
  4514  021D  3090               	movwf	((lcdWriteText@iText))+1
  4515  021E  00B9               	fcall	_lcdWriteText
  4516  021F  318A  22D6  3180   	line	248
  4517                           	goto	l6277
  4518  0222  2A52               	line	249
  4519                           	
  4520                           l183:	
  4521  0223                     	line	250
  4522                           	
  4523                           l6271:	
  4524  0223                     	movlb 0	; select bank0
  4525  0223  0020               	clrf	(setCursorPosition@iPosition)
  4526  0224  01B0               	movlw	low(0)
  4527  0225  3000               	fcall	_setCursorPosition
  4528  0226  318D  2540  3180   	line	251
  4529                           	movlw	low(((STR_7)|8000h))
  4530  0229  3067               	movlb 0	; select bank0
  4531  022A  0020               	movwf	(lcdWriteText@iText)
  4532  022B  00B8               	movlw	high(((STR_7)|8000h))
  4533  022C  3090               	movwf	((lcdWriteText@iText))+1
  4534  022D  00B9               	fcall	_lcdWriteText
  4535  022E  318A  22D6  3180   	line	252
  4536                           	goto	l6277
  4537  0231  2A52               	line	253
  4538                           	
  4539                           l6273:	
  4540  0232                     	goto	l6277
  4541  0232  2A52               	
  4542                           l175:	
  4543  0233                     	
  4544                           l6275:	
  4545  0233                     	movlb 5	; select bank5
  4546  0233  0025               	movf	(main@wMenu)^0280h,w
  4547  0234  084D               	movlb 1	; select bank1
  4548  0235  0021               	movwf	(??_main+0)^080h+0
  4549  0236  00C4               	clrf	(??_main+0)^080h+0+1
  4550  0237  01C5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4551                           ; Switch size 1, requested type "space"
  4552                           ; Number of cases is 1, Range of values is 0 to 0
  4553                           ; switch strategies available:
  4554                           ; Name         Instructions Cycles
  4555                           ; simple_byte            4     3 (average)
  4556                           ; direct_byte            8     6 (fixed)
  4557                           ; jumptable            260     6 (fixed)
  4558                           ;	Chosen strategy is simple_byte
  4559                           
  4560                           	movf 1+(??_main+0)^080h+0,w
  4561  0238  0845               	opt asmopt_push
  4562                           	opt asmopt_off
  4563                           	xorlw	0^0	; case 0
  4564  0239  3A00               	skipnz
  4565  023A  1903               	goto	l6933
  4566  023B  2A3D               	goto	l6271
  4567  023C  2A23               	opt asmopt_pop
  4568                           	
  4569                           l6933:	
  4570  023D                     ; Switch size 1, requested type "space"
  4571                           ; Number of cases is 6, Range of values is 0 to 130
  4572                           ; switch strategies available:
  4573                           ; Name         Instructions Cycles
  4574                           ; simple_byte           19    10 (average)
  4575                           ; jumptable            260     6 (fixed)
  4576                           ;	Chosen strategy is simple_byte
  4577                           
  4578                           	movf 0+(??_main+0)^080h+0,w
  4579  023D  0844               	opt asmopt_push
  4580                           	opt asmopt_off
  4581                           	xorlw	0^0	; case 0
  4582  023E  3A00               	skipnz
  4583  023F  1903               	goto	l6251
  4584  0240  2997               	xorlw	1^0	; case 1
  4585  0241  3A01               	skipnz
  4586  0242  1903               	goto	l6253
  4587  0243  29A6               	xorlw	2^1	; case 2
  4588  0244  3A03               	skipnz
  4589  0245  1903               	goto	l6259
  4590  0246  29CE               	xorlw	128^2	; case 128
  4591  0247  3A82               	skipnz
  4592  0248  1903               	goto	l6261
  4593  0249  29DD               	xorlw	129^128	; case 129
  4594  024A  3A01               	skipnz
  4595  024B  1903               	goto	l6263
  4596  024C  29EC               	xorlw	130^129	; case 130
  4597  024D  3A03               	skipnz
  4598  024E  1903               	goto	l6269
  4599  024F  2A14               	goto	l6271
  4600  0250  2A23               	opt asmopt_pop
  4601                           
  4602                           	
  4603                           l177:	
  4604  0251                     	goto	l6277
  4605  0251  2A52               	line	254
  4606                           	
  4607                           l174:	
  4608  0252                     	line	257
  4609                           	
  4610                           l6277:	
  4611  0252                     	movlw	(low(_wTemperature|((0x0)<<8)))&0ffh
  4612  0252  30B3               	movlb 1	; select bank1
  4613  0253  0021               	movwf	(??_main+0)^080h+0
  4614  0254  00C4               	movf	(??_main+0)^080h+0,w
  4615  0255  0844               	movlb 0	; select bank0
  4616  0256  0020               	movwf	(EM1812EntryPoint@oTemperature)
  4617  0257  00BD               	movlw	(low(_wHumidity|((0x0)<<8)))&0ffh
  4618  0258  30B5               	fcall	_EM1812EntryPoint
  4619  0259  3183  23D2  3180   	goto	l6303
  4620  025C  2AF1               	line	259
  4621                           	
  4622                           l6279:	
  4623  025D                     	goto	l6303
  4624  025D  2AF1               	
  4625                           l6281:	
  4626  025E                     	movlb 1	; select bank1
  4627  025E  0021               	movf	(_wHumidity+1)^080h,w
  4628  025F  0836               	movlb 5	; select bank5
  4629  0260  0025               	xorwf	(main@wHumidityPrev+1)^0280h,w
  4630  0261  0640               	skipz
  4631  0262  1D03               	goto	u4445
  4632  0263  2A68               	movlb 1	; select bank1
  4633  0264  0021               	movf	(_wHumidity)^080h,w
  4634  0265  0835               	movlb 5	; select bank5
  4635  0266  0025               	xorwf	(main@wHumidityPrev)^0280h,w
  4636  0267  063F               u4445:
  4637  0268                     
  4638                           	skipz
  4639  0268  1D03               	goto	u4441
  4640  0269  2A6B               	goto	u4440
  4641  026A  2A6C               u4441:
  4642  026B                     	goto	l6285
  4643  026B  2A7B               u4440:
  4644  026C                     	
  4645                           l6283:	
  4646  026C                     	movlb 1	; select bank1
  4647  026C  0021               	movf	(_wTemperature+1)^080h,w
  4648  026D  0834               	movlb 5	; select bank5
  4649  026E  0025               	xorwf	(main@wTemperaturePrev+1)^0280h,w
  4650  026F  0642               	skipz
  4651  0270  1D03               	goto	u4455
  4652  0271  2A76               	movlb 1	; select bank1
  4653  0272  0021               	movf	(_wTemperature)^080h,w
  4654  0273  0833               	movlb 5	; select bank5
  4655  0274  0025               	xorwf	(main@wTemperaturePrev)^0280h,w
  4656  0275  0641               u4455:
  4657  0276                     
  4658                           	skipnz
  4659  0276  1903               	goto	u4451
  4660  0277  2A79               	goto	u4450
  4661  0278  2A7A               u4451:
  4662  0279                     	goto	l6303
  4663  0279  2AF1               u4450:
  4664  027A                     	goto	l6285
  4665  027A  2A7B               	
  4666                           l187:	
  4667  027B                     	line	260
  4668                           	
  4669                           l6285:	
  4670  027B                     	movlb 1	; select bank1
  4671  027B  0021               	movf	(_wHumidity+1)^080h,w
  4672  027C  0836               	movlb 5	; select bank5
  4673  027D  0025               	movwf	(main@wHumidityPrev+1)^0280h
  4674  027E  00C0               	movlb 1	; select bank1
  4675  027F  0021               	movf	(_wHumidity)^080h,w
  4676  0280  0835               	movlb 5	; select bank5
  4677  0281  0025               	movwf	(main@wHumidityPrev)^0280h
  4678  0282  00BF               	line	261
  4679                           	movlb 1	; select bank1
  4680  0283  0021               	movf	(_wTemperature+1)^080h,w
  4681  0284  0834               	movlb 5	; select bank5
  4682  0285  0025               	movwf	(main@wTemperaturePrev+1)^0280h
  4683  0286  00C2               	movlb 1	; select bank1
  4684  0287  0021               	movf	(_wTemperature)^080h,w
  4685  0288  0833               	movlb 5	; select bank5
  4686  0289  0025               	movwf	(main@wTemperaturePrev)^0280h
  4687  028A  00C1               	line	262
  4688                           	
  4689                           l6287:	
  4690  028B                     	movlb 0	; select bank0
  4691  028B  0020               	clrf	(setCursorPosition@iPosition)
  4692  028C  01B0               	movlw	low(02h)
  4693  028D  3002               	fcall	_setCursorPosition
  4694  028E  318D  2540  3180   	line	263
  4695                           	
  4696                           l6289:	
  4697  0291                     	movlb 5	; select bank5
  4698  0291  0025               	movf	(main@wHumidityPrev+1)^0280h,w
  4699  0292  0840               	movlb 0	; select bank0
  4700  0293  0020               	movwf	(printEM1812@wVariable+1)
  4701  0294  00B6               	movlb 5	; select bank5
  4702  0295  0025               	movf	(main@wHumidityPrev)^0280h,w
  4703  0296  083F               	movlb 0	; select bank0
  4704  0297  0020               	movwf	(printEM1812@wVariable)
  4705  0298  00B5               	movlw	(low(main@wReadout|((0x2)<<8)))&0ffh
  4706  0299  30A8               	movlb 1	; select bank1
  4707  029A  0021               	movwf	(??_main+0)^080h+0
  4708  029B  00C4               	movf	(??_main+0)^080h+0,w
  4709  029C  0844               	movlb 0	; select bank0
  4710  029D  0020               	movwf	(printEM1812@oTextOut)
  4711  029E  00B7               	fcall	_printEM1812
  4712  029F  3186  2628  3180   	line	264
  4713                           	
  4714                           l6291:	
  4715  02A2                     	movlw	low(04Bh)
  4716  02A2  304B               	movlb 1	; select bank1
  4717  02A3  0021               	movwf	(??_main+0)^080h+0
  4718  02A4  00C4               	movf	(??_main+0)^080h+0,w
  4719  02A5  0844               	movlb 0	; select bank0
  4720  02A6  0020               	movwf	(AddTrace@iSizeOfoText)
  4721  02A7  00C2               	movlw	low(((STR_8)|8000h))
  4722  02A8  30DC               	movwf	(AddTrace@iText)
  4723  02A9  00C3               	movlw	high(((STR_8)|8000h))
  4724  02AA  3090               	movwf	((AddTrace@iText))+1
  4725  02AB  00C4               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  4726  02AC  30A0               	fcall	_AddTrace
  4727  02AD  318C  244D  3180   	line	265
  4728                           	
  4729                           l6293:	
  4730  02B0                     	movlw	low(04Bh)
  4731  02B0  304B               	movlb 1	; select bank1
  4732  02B1  0021               	movwf	(??_main+0)^080h+0
  4733  02B2  00C4               	movf	(??_main+0)^080h+0,w
  4734  02B3  0844               	movlb 0	; select bank0
  4735  02B4  0020               	movwf	(AddTrace@iSizeOfoText)
  4736  02B5  00C2               	movlw	low(main@wReadout)
  4737  02B6  30A8               	movwf	(AddTrace@iText)
  4738  02B7  00C3               	movlw	high(main@wReadout)
  4739  02B8  3002               	movwf	(AddTrace@iText+1)
  4740  02B9  00C4               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  4741  02BA  30A0               	fcall	_AddTrace
  4742  02BB  318C  244D  3180   	line	266
  4743                           	
  4744                           l6295:	
  4745  02BE                     	movlb 5	; select bank5
  4746  02BE  0025               	movf	(main@wTemperaturePrev+1)^0280h,w
  4747  02BF  0842               	movlb 0	; select bank0
  4748  02C0  0020               	movwf	(printEM1812@wVariable+1)
  4749  02C1  00B6               	movlb 5	; select bank5
  4750  02C2  0025               	movf	(main@wTemperaturePrev)^0280h,w
  4751  02C3  0841               	movlb 0	; select bank0
  4752  02C4  0020               	movwf	(printEM1812@wVariable)
  4753  02C5  00B5               	movlw	(low(main@wReadout|((0x2)<<8)))&0ffh
  4754  02C6  30A8               	movlb 1	; select bank1
  4755  02C7  0021               	movwf	(??_main+0)^080h+0
  4756  02C8  00C4               	movf	(??_main+0)^080h+0,w
  4757  02C9  0844               	movlb 0	; select bank0
  4758  02CA  0020               	movwf	(printEM1812@oTextOut)
  4759  02CB  00B7               	fcall	_printEM1812
  4760  02CC  3186  2628  3180   	line	267
  4761                           	
  4762                           l6297:	
  4763  02CF                     	movlw	low(04Bh)
  4764  02CF  304B               	movlb 1	; select bank1
  4765  02D0  0021               	movwf	(??_main+0)^080h+0
  4766  02D1  00C4               	movf	(??_main+0)^080h+0,w
  4767  02D2  0844               	movlb 0	; select bank0
  4768  02D3  0020               	movwf	(AddTrace@iSizeOfoText)
  4769  02D4  00C2               	movlw	low(((STR_9)|8000h))
  4770  02D5  3018               	movwf	(AddTrace@iText)
  4771  02D6  00C3               	movlw	high(((STR_9)|8000h))
  4772  02D7  3091               	movwf	((AddTrace@iText))+1
  4773  02D8  00C4               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  4774  02D9  30A0               	fcall	_AddTrace
  4775  02DA  318C  244D  3180   	line	268
  4776                           	
  4777                           l6299:	
  4778  02DD                     	movlw	low(04Bh)
  4779  02DD  304B               	movlb 1	; select bank1
  4780  02DE  0021               	movwf	(??_main+0)^080h+0
  4781  02DF  00C4               	movf	(??_main+0)^080h+0,w
  4782  02E0  0844               	movlb 0	; select bank0
  4783  02E1  0020               	movwf	(AddTrace@iSizeOfoText)
  4784  02E2  00C2               	movlw	low(main@wReadout)
  4785  02E3  30A8               	movwf	(AddTrace@iText)
  4786  02E4  00C3               	movlw	high(main@wReadout)
  4787  02E5  3002               	movwf	(AddTrace@iText+1)
  4788  02E6  00C4               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  4789  02E7  30A0               	fcall	_AddTrace
  4790  02E8  318C  244D  3180   	line	269
  4791                           	
  4792                           l6301:	
  4793  02EB                     	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  4794  02EB  30A0               	fcall	_PrintLog
  4795  02EC  318B  2300  3180   	goto	l6303
  4796  02EF  2AF1               	line	270
  4797                           	
  4798                           l185:	
  4799  02F0                     	goto	l6303
  4800  02F0  2AF1               	line	271
  4801                           	
  4802                           l184:	
  4803  02F1                     	line	272
  4804                           	
  4805                           l6303:	
  4806  02F1                     	movlw	01h
  4807  02F1  3001               	movlb 5	; select bank5
  4808  02F2  0025               	addwf	(main@wIterationCounter)^0280h,f
  4809  02F3  07BC               	movlw	0
  4810  02F4  3000               	addwfc	(main@wIterationCounter+1)^0280h,f
  4811  02F5  3DBD               	line	275
  4812                           	
  4813                           l6305:	
  4814  02F6                     	movlw	(low(main@wDebounceEnter|((0x2)<<8)))&0ffh
  4815  02F6  30C4               	movlb 1	; select bank1
  4816  02F7  0021               	movwf	(??_main+0)^080h+0
  4817  02F8  00C4               	movf	(??_main+0)^080h+0,w
  4818  02F9  0844               	movlb 0	; select bank0
  4819  02FA  0020               	movwf	(Debounce@ioTimer)
  4820  02FB  00AC               	movlw	(low(main@wEnterBottonPressed|((0x2)<<8)))&0ffh
  4821  02FC  30CC               	movlb 1	; select bank1
  4822  02FD  0021               	movwf	(??_main+1)^080h+0
  4823  02FE  00C5               	movf	(??_main+1)^080h+0,w
  4824  02FF  0845               	movlb 0	; select bank0
  4825  0300  0020               	movwf	(Debounce@swPressed)
  4826  0301  00AD               	movf	(13),w	;volatile
  4827  0302  080D               	andlw	(1<<1)-1
  4828  0303  3901               	fcall	_Debounce
  4829  0304  318C  2496  3180   	line	276
  4830                           	
  4831                           l6307:	
  4832  0307                     	movlw	(low(main@wDebounceUp|((0x2)<<8)))&0ffh
  4833  0307  30C6               	movlb 1	; select bank1
  4834  0308  0021               	movwf	(??_main+0)^080h+0
  4835  0309  00C4               	movf	(??_main+0)^080h+0,w
  4836  030A  0844               	movlb 0	; select bank0
  4837  030B  0020               	movwf	(Debounce@ioTimer)
  4838  030C  00AC               	movlw	(low(main@wUpBottonPressed|((0x2)<<8)))&0ffh
  4839  030D  30CA               	movlb 1	; select bank1
  4840  030E  0021               	movwf	(??_main+1)^080h+0
  4841  030F  00C5               	movf	(??_main+1)^080h+0,w
  4842  0310  0845               	movlb 0	; select bank0
  4843  0311  0020               	movwf	(Debounce@swPressed)
  4844  0312  00AD               	rrf	(13),w	;volatile
  4845  0313  0C0D               	andlw	(1<<1)-1
  4846  0314  3901               	fcall	_Debounce
  4847  0315  318C  2496  3180   	line	277
  4848                           	
  4849                           l6309:	
  4850  0318                     	movlw	(low(main@wDebounceDown|((0x2)<<8)))&0ffh
  4851  0318  30C8               	movlb 1	; select bank1
  4852  0319  0021               	movwf	(??_main+0)^080h+0
  4853  031A  00C4               	movf	(??_main+0)^080h+0,w
  4854  031B  0844               	movlb 0	; select bank0
  4855  031C  0020               	movwf	(Debounce@ioTimer)
  4856  031D  00AC               	movlw	(low(main@wDownBottonPressed|((0x2)<<8)))&0ffh
  4857  031E  30CB               	movlb 1	; select bank1
  4858  031F  0021               	movwf	(??_main+1)^080h+0
  4859  0320  00C5               	movf	(??_main+1)^080h+0,w
  4860  0321  0845               	movlb 0	; select bank0
  4861  0322  0020               	movwf	(Debounce@swPressed)
  4862  0323  00AD               	rrf	(13),w	;volatile
  4863  0324  0C0D               	rrf	wreg,f
  4864  0325  0C89               	andlw	(1<<1)-1
  4865  0326  3901               	fcall	_Debounce
  4866  0327  318C  2496  3180   	line	281
  4867                           	
  4868                           l6311:	
  4869  032A                     	movlb 5	; select bank5
  4870  032A  0025               		decf	((main@wUpBottonPressed)^0280h),w
  4871  032B  034A               	btfss	status,2
  4872  032C  1D03               	goto	u4461
  4873  032D  2B2F               	goto	u4460
  4874  032E  2B30               u4461:
  4875  032F                     	goto	l6327
  4876  032F  2B5E               u4460:
  4877  0330                     	line	282
  4878                           	
  4879                           l6313:	
  4880  0330                     	fcall	_Esp8266OpenSocket
  4881  0330  3189  2136  3180   	line	283
  4882                           	
  4883                           l6315:	
  4884  0333                     	movlb 5	; select bank5
  4885  0333  0025               	clrf	(main@wUpdateMenu)^0280h
  4886  0334  01C3               	incf	(main@wUpdateMenu)^0280h,f
  4887  0335  0AC3               	line	284
  4888                           	
  4889                           l6317:	
  4890  0336                     	clrf	(main@wUpBottonPressed)^0280h
  4891  0336  01CA               	line	285
  4892                           	goto	l6325
  4893  0337  2B49               	line	286
  4894                           	
  4895                           l190:	
  4896  0338                     	line	288
  4897                           	goto	l6327
  4898  0338  2B5E               	line	289
  4899                           	
  4900                           l192:	
  4901  0339                     	line	290
  4902                           	
  4903                           l6319:	
  4904  0339                     	movlb 1	; select bank1
  4905  0339  0021               	movf	(_wTempSet)^080h,w
  4906  033A  084E               	addlw	01h
  4907  033B  3E01               	movwf	(_wTempSet)^080h
  4908  033C  00CE               	movlw	0
  4909  033D  3000               	addwfc	(_wTempSet+1)^080h,w
  4910  033E  3D4F               	movwf	1+(_wTempSet)^080h
  4911  033F  00CF               	line	291
  4912                           	goto	l6327
  4913  0340  2B5E               	line	292
  4914                           	
  4915                           l193:	
  4916  0341                     	line	293
  4917                           	goto	l6327
  4918  0341  2B5E               	line	294
  4919                           	
  4920                           l194:	
  4921  0342                     	line	295
  4922                           	
  4923                           l6321:	
  4924  0342                     	movlw	low(01h)
  4925  0342  3001               	movwf	(??_main+0)^080h+0
  4926  0343  00C4               	movf	(??_main+0)^080h+0,w
  4927  0344  0844               	movlb 5	; select bank5
  4928  0345  0025               	addwf	(main@wMenu)^0280h,f
  4929  0346  07CD               	line	296
  4930                           	goto	l6327
  4931  0347  2B5E               	line	297
  4932                           	
  4933                           l6323:	
  4934  0348                     	goto	l6327
  4935  0348  2B5E               	
  4936                           l189:	
  4937  0349                     	
  4938                           l6325:	
  4939  0349                     	movf	(main@wMenu)^0280h,w
  4940  0349  084D               	movlb 1	; select bank1
  4941  034A  0021               	movwf	(??_main+0)^080h+0
  4942  034B  00C4               	clrf	(??_main+0)^080h+0+1
  4943  034C  01C5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4944                           ; Switch size 1, requested type "space"
  4945                           ; Number of cases is 1, Range of values is 0 to 0
  4946                           ; switch strategies available:
  4947                           ; Name         Instructions Cycles
  4948                           ; simple_byte            4     3 (average)
  4949                           ; direct_byte            8     6 (fixed)
  4950                           ; jumptable            260     6 (fixed)
  4951                           ;	Chosen strategy is simple_byte
  4952                           
  4953                           	movf 1+(??_main+0)^080h+0,w
  4954  034D  0845               	opt asmopt_push
  4955                           	opt asmopt_off
  4956                           	xorlw	0^0	; case 0
  4957  034E  3A00               	skipnz
  4958  034F  1903               	goto	l6935
  4959  0350  2B52               	goto	l6321
  4960  0351  2B42               	opt asmopt_pop
  4961                           	
  4962                           l6935:	
  4963  0352                     ; Switch size 1, requested type "space"
  4964                           ; Number of cases is 3, Range of values is 128 to 130
  4965                           ; switch strategies available:
  4966                           ; Name         Instructions Cycles
  4967                           ; simple_byte           10     6 (average)
  4968                           ; direct_byte           15     9 (fixed)
  4969                           ; jumptable            263     9 (fixed)
  4970                           ;	Chosen strategy is simple_byte
  4971                           
  4972                           	movf 0+(??_main+0)^080h+0,w
  4973  0352  0844               	opt asmopt_push
  4974                           	opt asmopt_off
  4975                           	xorlw	128^0	; case 128
  4976  0353  3A80               	skipnz
  4977  0354  1903               	goto	l6327
  4978  0355  2B5E               	xorlw	129^128	; case 129
  4979  0356  3A01               	skipnz
  4980  0357  1903               	goto	l6319
  4981  0358  2B39               	xorlw	130^129	; case 130
  4982  0359  3A03               	skipnz
  4983  035A  1903               	goto	l6327
  4984  035B  2B5E               	goto	l6321
  4985  035C  2B42               	opt asmopt_pop
  4986                           
  4987                           	
  4988                           l191:	
  4989  035D                     	goto	l6327
  4990  035D  2B5E               	line	299
  4991                           	
  4992                           l188:	
  4993  035E                     	line	300
  4994                           	
  4995                           l6327:	
  4996  035E                     	movlb 5	; select bank5
  4997  035E  0025               		decf	((main@wDownBottonPressed)^0280h),w
  4998  035F  034B               	btfss	status,2
  4999  0360  1D03               	goto	u4471
  5000  0361  2B63               	goto	u4470
  5001  0362  2B64               u4471:
  5002  0363                     	goto	l6345
  5003  0363  2B93               u4470:
  5004  0364                     	line	301
  5005                           	
  5006                           l6329:	
  5007  0364                     	clrf	(main@wUpdateMenu)^0280h
  5008  0364  01C3               	incf	(main@wUpdateMenu)^0280h,f
  5009  0365  0AC3               	line	302
  5010                           	
  5011                           l6331:	
  5012  0366                     	clrf	(main@wDownBottonPressed)^0280h
  5013  0366  01CB               	line	303
  5014                           	
  5015                           l6333:	
  5016  0367                     	fcall	_clearDisplay
  5017  0367  3189  2113  3180   	line	304
  5018                           	
  5019                           l6335:	
  5020  036A                     	fcall	_moveCursorToHome
  5021  036A  3189  214B  3180   	line	305
  5022                           	goto	l6343
  5023  036D  2B7D               	line	306
  5024                           	
  5025                           l197:	
  5026  036E                     	line	308
  5027                           	goto	l6345
  5028  036E  2B93               	line	309
  5029                           	
  5030                           l199:	
  5031  036F                     	line	310
  5032                           	
  5033                           l6337:	
  5034  036F                     	movlb 1	; select bank1
  5035  036F  0021               	movf	(_wTempSet)^080h,w
  5036  0370  084E               	addlw	0FFh
  5037  0371  3EFF               	movwf	(_wTempSet)^080h
  5038  0372  00CE               	movlw	0FFh
  5039  0373  30FF               	addwfc	(_wTempSet+1)^080h,w
  5040  0374  3D4F               	movwf	1+(_wTempSet)^080h
  5041  0375  00CF               	line	311
  5042                           	goto	l6345
  5043  0376  2B93               	line	312
  5044                           	
  5045                           l200:	
  5046  0377                     	line	313
  5047                           	goto	l6345
  5048  0377  2B93               	line	314
  5049                           	
  5050                           l201:	
  5051  0378                     	line	315
  5052                           	
  5053                           l6339:	
  5054  0378                     	movlw	01h
  5055  0378  3001               	movlb 5	; select bank5
  5056  0379  0025               	subwf	(main@wMenu)^0280h,f
  5057  037A  02CD               	line	316
  5058                           	goto	l6345
  5059  037B  2B93               	line	317
  5060                           	
  5061                           l6341:	
  5062  037C                     	goto	l6345
  5063  037C  2B93               	
  5064                           l196:	
  5065  037D                     	
  5066                           l6343:	
  5067  037D                     	movlb 5	; select bank5
  5068  037D  0025               	movf	(main@wMenu)^0280h,w
  5069  037E  084D               	movlb 1	; select bank1
  5070  037F  0021               	movwf	(??_main+0)^080h+0
  5071  0380  00C4               	clrf	(??_main+0)^080h+0+1
  5072  0381  01C5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5073                           ; Switch size 1, requested type "space"
  5074                           ; Number of cases is 1, Range of values is 0 to 0
  5075                           ; switch strategies available:
  5076                           ; Name         Instructions Cycles
  5077                           ; simple_byte            4     3 (average)
  5078                           ; direct_byte            8     6 (fixed)
  5079                           ; jumptable            260     6 (fixed)
  5080                           ;	Chosen strategy is simple_byte
  5081                           
  5082                           	movf 1+(??_main+0)^080h+0,w
  5083  0382  0845               	opt asmopt_push
  5084                           	opt asmopt_off
  5085                           	xorlw	0^0	; case 0
  5086  0383  3A00               	skipnz
  5087  0384  1903               	goto	l6937
  5088  0385  2B87               	goto	l6339
  5089  0386  2B78               	opt asmopt_pop
  5090                           	
  5091                           l6937:	
  5092  0387                     ; Switch size 1, requested type "space"
  5093                           ; Number of cases is 3, Range of values is 128 to 130
  5094                           ; switch strategies available:
  5095                           ; Name         Instructions Cycles
  5096                           ; simple_byte           10     6 (average)
  5097                           ; direct_byte           15     9 (fixed)
  5098                           ; jumptable            263     9 (fixed)
  5099                           ;	Chosen strategy is simple_byte
  5100                           
  5101                           	movf 0+(??_main+0)^080h+0,w
  5102  0387  0844               	opt asmopt_push
  5103                           	opt asmopt_off
  5104                           	xorlw	128^0	; case 128
  5105  0388  3A80               	skipnz
  5106  0389  1903               	goto	l6345
  5107  038A  2B93               	xorlw	129^128	; case 129
  5108  038B  3A01               	skipnz
  5109  038C  1903               	goto	l6337
  5110  038D  2B6F               	xorlw	130^129	; case 130
  5111  038E  3A03               	skipnz
  5112  038F  1903               	goto	l6345
  5113  0390  2B93               	goto	l6339
  5114  0391  2B78               	opt asmopt_pop
  5115                           
  5116                           	
  5117                           l198:	
  5118  0392                     	goto	l6345
  5119  0392  2B93               	line	318
  5120                           	
  5121                           l195:	
  5122  0393                     	line	319
  5123                           	
  5124                           l6345:	
  5125  0393                     	movlb 5	; select bank5
  5126  0393  0025               		decf	((main@wEnterBottonPressed)^0280h),w
  5127  0394  034C               	btfss	status,2
  5128  0395  1D03               	goto	u4481
  5129  0396  2B98               	goto	u4480
  5130  0397  2B99               u4481:
  5131  0398                     	goto	l6363
  5132  0398  2BB5               u4480:
  5133  0399                     	line	320
  5134                           	
  5135                           l6347:	
  5136  0399                     	clrf	(main@wUpdateMenu)^0280h
  5137  0399  01C3               	incf	(main@wUpdateMenu)^0280h,f
  5138  039A  0AC3               	line	321
  5139                           	
  5140                           l6349:	
  5141  039B                     	clrf	(main@wEnterBottonPressed)^0280h
  5142  039B  01CC               	line	323
  5143                           	
  5144                           l6351:	
  5145  039C                     	movf	((main@wEditingMode)^0280h),w
  5146  039C  083E               	btfss	status,2
  5147  039D  1D03               	goto	u4491
  5148  039E  2BA0               	goto	u4490
  5149  039F  2BA1               u4491:
  5150  03A0                     	goto	l6359
  5151  03A0  2BAE               u4490:
  5152  03A1                     	line	324
  5153                           	
  5154                           l6353:	
  5155  03A1                     	clrf	(main@wEditingMode)^0280h
  5156  03A1  01BE               	incf	(main@wEditingMode)^0280h,f
  5157  03A2  0ABE               	line	325
  5158                           	
  5159                           l6355:	
  5160  03A3                     	movf	(main@wMenu)^0280h,w
  5161  03A3  084D               	addlw	080h
  5162  03A4  3E80               	movlb 1	; select bank1
  5163  03A5  0021               	movwf	(??_main+0)^080h+0
  5164  03A6  00C4               	movf	(??_main+0)^080h+0,w
  5165  03A7  0844               	movlb 5	; select bank5
  5166  03A8  0025               	movwf	(main@wMenu)^0280h
  5167  03A9  00CD               	line	326
  5168                           	
  5169                           l6357:	
  5170  03AA                     	fcall	_Esp8266SetAccessPointMode
  5171  03AA  3189  213D  3180   	line	327
  5172                           	goto	l6363
  5173  03AD  2BB5               	
  5174                           l203:	
  5175  03AE                     	line	328
  5176                           	
  5177                           l6359:	
  5178  03AE                     	fcall	_Esp8266SetupWifi
  5179  03AE  3189  2144  3180   	line	329
  5180                           	
  5181                           l6361:	
  5182  03B1                     	movlb 5	; select bank5
  5183  03B1  0025               	clrf	(main@wEditingMode)^0280h
  5184  03B2  01BE               	goto	l6363
  5185  03B3  2BB5               	line	330
  5186                           	
  5187                           l204:	
  5188  03B4                     	goto	l6363
  5189  03B4  2BB5               	line	331
  5190                           	
  5191                           l202:	
  5192  03B5                     	line	332
  5193                           	
  5194                           l6363:	
  5195  03B5                     	movlb 5	; select bank5
  5196  03B5  0025               		incf	((main@wMenu)^0280h),w
  5197  03B6  0A4D               	btfss	status,2
  5198  03B7  1D03               	goto	u4501
  5199  03B8  2BBA               	goto	u4500
  5200  03B9  2BBB               u4501:
  5201  03BA                     	goto	l6369
  5202  03BA  2BC4               u4500:
  5203  03BB                     	line	333
  5204                           	
  5205                           l6365:	
  5206  03BB                     	clrf	(main@wUpdateMenu)^0280h
  5207  03BB  01C3               	incf	(main@wUpdateMenu)^0280h,f
  5208  03BC  0AC3               	line	334
  5209                           	
  5210                           l6367:	
  5211  03BD                     	movlw	low(02h)
  5212  03BD  3002               	movlb 1	; select bank1
  5213  03BE  0021               	movwf	(??_main+0)^080h+0
  5214  03BF  00C4               	movf	(??_main+0)^080h+0,w
  5215  03C0  0844               	movlb 5	; select bank5
  5216  03C1  0025               	movwf	(main@wMenu)^0280h
  5217  03C2  00CD               	goto	l6369
  5218  03C3  2BC4               	line	335
  5219                           	
  5220                           l205:	
  5221  03C4                     	line	336
  5222                           	
  5223                           l6369:	
  5224  03C4                     		movlw	3
  5225  03C4  3003               	xorwf	((main@wMenu)^0280h),w
  5226  03C5  064D               	btfss	status,2
  5227  03C6  1D03               	goto	u4511
  5228  03C7  2BC9               	goto	u4510
  5229  03C8  2BCA               u4511:
  5230  03C9                     	goto	l6247
  5231  03C9  298F               u4510:
  5232  03CA                     	line	337
  5233                           	
  5234                           l6371:	
  5235  03CA                     	clrf	(main@wUpdateMenu)^0280h
  5236  03CA  01C3               	incf	(main@wUpdateMenu)^0280h,f
  5237  03CB  0AC3               	line	338
  5238                           	
  5239                           l6373:	
  5240  03CC                     	clrf	(main@wMenu)^0280h
  5241  03CC  01CD               	goto	l6247
  5242  03CD  298F               	line	339
  5243                           	
  5244                           l206:	
  5245  03CE                     	goto	l6247
  5246  03CE  298F               	line	342
  5247                           	
  5248                           l207:	
  5249  03CF                     	goto	l6247
  5250  03CF  298F               	
  5251                           l208:	
  5252  03D0                     	line	344
  5253                           	
  5254                           l209:	
  5255  03D0                     	global	start
  5256                           	ljmp	start
  5257  03D0  3180  2860         	opt stack 0
  5258                           GLOBAL	__end_of_main
  5259                           	__end_of_main:
  5260  03D2                     	signat	_main,89
  5261                           	global	_setNotBlinkingCursor
  5262                           
  5263 ;; *************** function _setNotBlinkingCursor *****************
  5264 ;; Defined at:
  5265 ;;		line 277 in file "LCD_hd44780u_qy_2004a.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;		None
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;		None
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  1    wreg      void 
  5272 ;; Registers used:
  5273 ;;		wreg, status,2, status,0, pclath, cstack
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5281 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5282 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5283 ;;Total ram usage:        1 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    9
  5286 ;; This function calls:
  5287 ;;		_writeInsChk
  5288 ;; This function is called by:
  5289 ;;		_main
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  5293                           	file	"LCD_hd44780u_qy_2004a.c"
  5294                           	line	277
  5295                           global __ptext1
  5296                           __ptext1:	;psect for function _setNotBlinkingCursor
  5297  0988                     psect	text1
  5298                           	file	"LCD_hd44780u_qy_2004a.c"
  5299                           	line	277
  5300                           	global	__size_of_setNotBlinkingCursor
  5301                           	__size_of_setNotBlinkingCursor	equ	__end_of_setNotBlinkingCursor-_setNotBlinkingCursor

  5302  000B                     	
  5303                           _setNotBlinkingCursor:	
  5304  0988                     ;incstack = 0
  5305                           	opt	stack 6
  5306                           ; Regs used in _setNotBlinkingCursor: [wreg+status,2+status,0+pclath+cstack]
  5307                           	line	279
  5308                           	
  5309                           l5853:	
  5310  0988                     ;LCD_hd44780u_qy_2004a.c: 279:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFE;
  5311                           	movlb 0	; select bank0
  5312  0988  0020               	movf	(_mDisplayOnOffReg),w
  5313  0989  085D               	andlw	0FEh
  5314  098A  39FE               	movwf	(??_setNotBlinkingCursor+0)+0
  5315  098B  00B2               	movf	(??_setNotBlinkingCursor+0)+0,w
  5316  098C  0832               	movwf	(_mDisplayOnOffReg)
  5317  098D  00DD               	line	280
  5318                           	
  5319                           l5855:	
  5320  098E                     ;LCD_hd44780u_qy_2004a.c: 280:   writeInsChk(mDisplayOnOffReg);
  5321                           	movf	(_mDisplayOnOffReg),w
  5322  098E  085D               	fcall	_writeInsChk
  5323  098F  3189  2167  3189   	line	281
  5324                           	
  5325                           l351:	
  5326  0992                     	return
  5327  0992  0008               	opt stack 0
  5328                           GLOBAL	__end_of_setNotBlinkingCursor
  5329                           	__end_of_setNotBlinkingCursor:
  5330  0993                     	signat	_setNotBlinkingCursor,89
  5331                           	global	_setCursorOff
  5332                           
  5333 ;; *************** function _setCursorOff *****************
  5334 ;; Defined at:
  5335 ;;		line 282 in file "LCD_hd44780u_qy_2004a.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;		None
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;		None
  5340 ;; Return value:  Size  Location     Type
  5341 ;;                  1    wreg      void 
  5342 ;; Registers used:
  5343 ;;		wreg, status,2, status,0, pclath, cstack
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5351 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5352 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5353 ;;Total ram usage:        1 bytes
  5354 ;; Hardware stack levels used:    1
  5355 ;; Hardware stack levels required when called:    9
  5356 ;; This function calls:
  5357 ;;		_writeInsChk
  5358 ;; This function is called by:
  5359 ;;		_main
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  5363                           	line	282
  5364                           global __ptext2
  5365                           __ptext2:	;psect for function _setCursorOff
  5366  097D                     psect	text2
  5367                           	file	"LCD_hd44780u_qy_2004a.c"
  5368                           	line	282
  5369                           	global	__size_of_setCursorOff
  5370                           	__size_of_setCursorOff	equ	__end_of_setCursorOff-_setCursorOff
  5371  000B                     	
  5372                           _setCursorOff:	
  5373  097D                     ;incstack = 0
  5374                           	opt	stack 6
  5375                           ; Regs used in _setCursorOff: [wreg+status,2+status,0+pclath+cstack]
  5376                           	line	284
  5377                           	
  5378                           l5845:	
  5379  097D                     ;LCD_hd44780u_qy_2004a.c: 284:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFD;
  5380                           	movlb 0	; select bank0
  5381  097D  0020               	movf	(_mDisplayOnOffReg),w
  5382  097E  085D               	andlw	0FDh
  5383  097F  39FD               	movwf	(??_setCursorOff+0)+0
  5384  0980  00B2               	movf	(??_setCursorOff+0)+0,w
  5385  0981  0832               	movwf	(_mDisplayOnOffReg)
  5386  0982  00DD               	line	285
  5387                           	
  5388                           l5847:	
  5389  0983                     ;LCD_hd44780u_qy_2004a.c: 285:   writeInsChk(mDisplayOnOffReg);
  5390                           	movf	(_mDisplayOnOffReg),w
  5391  0983  085D               	fcall	_writeInsChk
  5392  0984  3189  2167  3189   	line	286
  5393                           	
  5394                           l354:	
  5395  0987                     	return
  5396  0987  0008               	opt stack 0
  5397                           GLOBAL	__end_of_setCursorOff
  5398                           	__end_of_setCursorOff:
  5399  0988                     	signat	_setCursorOff,89
  5400                           	global	_printEM1812
  5401                           
  5402 ;; *************** function _printEM1812 *****************
  5403 ;; Defined at:
  5404 ;;		line 16 in file "EM1812.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  wVariable       2   21[BANK0 ] short 
  5407 ;;  oTextOut        1   23[BANK0 ] PTR unsigned char 
  5408 ;;		 -> main@wReadout(20), 
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;  wWritingPosi    1   30[BANK0 ] unsigned char 
  5411 ;;  wTen            1   29[BANK0 ] unsigned char 
  5412 ;;  wIsNegative     1   28[BANK0 ] unsigned char 
  5413 ;;  wDecimal        1   27[BANK0 ] unsigned char 
  5414 ;;  wUnity          1   26[BANK0 ] unsigned char 
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  1    wreg      void 
  5417 ;; Registers used:
  5418 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5424 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  5425 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  5426 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5427 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  5428 ;;Total ram usage:       10 bytes
  5429 ;; Hardware stack levels used:    1
  5430 ;; Hardware stack levels required when called:    7
  5431 ;; This function calls:
  5432 ;;		___awdiv
  5433 ;;		___awmod
  5434 ;; This function is called by:
  5435 ;;		_main
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  5439                           	file	"EM1812.c"
  5440                           	line	16
  5441                           global __ptext3
  5442                           __ptext3:	;psect for function _printEM1812
  5443  0628                     psect	text3
  5444                           	file	"EM1812.c"
  5445                           	line	16
  5446                           	global	__size_of_printEM1812
  5447                           	__size_of_printEM1812	equ	__end_of_printEM1812-_printEM1812
  5448  00B6                     	
  5449                           _printEM1812:	
  5450  0628                     ;incstack = 0
  5451                           	opt	stack 8
  5452                           ; Regs used in _printEM1812: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5453                           	line	21
  5454                           	
  5455                           l5857:	
  5456  0628                     ;EM1812.c: 16: void printEM1812(int16_t wVariable, char* oTextOut);EM1812.c: 17: {;EM181
                                 2.c: 18:     uint8_t wTen;;EM1812.c: 19:     uint8_t wUnity;;EM1812.c: 20:     uint8_t w
                                 Decimal;;EM1812.c: 21:     uint8_t wIsNegative=0;
  5457                           	movlb 0	; select bank0
  5458  0628  0020               	clrf	(printEM1812@wIsNegative)
  5459  0629  01BC               	line	22
  5460                           ;EM1812.c: 22:     uint8_t wWritingPosition=0;
  5461                           	clrf	(printEM1812@wWritingPosition)
  5462  062A  01BE               	line	24
  5463                           	
  5464                           l5859:	
  5465  062B                     ;EM1812.c: 24:     if(wVariable < 0)
  5466                           	btfss	(printEM1812@wVariable+1),7
  5467  062B  1FB6               	goto	u4151
  5468  062C  2E2E               	goto	u4150
  5469  062D  2E2F               u4151:
  5470  062E                     	goto	l5865
  5471  062E  2E37               u4150:
  5472  062F                     	line	26
  5473                           	
  5474                           l5861:	
  5475  062F                     ;EM1812.c: 25:     {;EM1812.c: 26:         wIsNegative = 1;
  5476                           	clrf	(printEM1812@wIsNegative)
  5477  062F  01BC               	incf	(printEM1812@wIsNegative),f
  5478  0630  0ABC               	line	27
  5479                           	
  5480                           l5863:	
  5481  0631                     ;EM1812.c: 27:         wVariable = -wVariable;
  5482                           	comf	(printEM1812@wVariable),f
  5483  0631  09B5               	comf	(printEM1812@wVariable+1),f
  5484  0632  09B6               	incf	(printEM1812@wVariable),f
  5485  0633  0AB5               	skipnz
  5486  0634  1903               	incf	(printEM1812@wVariable+1),f
  5487  0635  0AB6               	goto	l5865
  5488  0636  2E37               	line	28
  5489                           ;EM1812.c: 28:     }
  5490                           	
  5491                           l446:	
  5492  0637                     	line	30
  5493                           	
  5494                           l5865:	
  5495  0637                     ;EM1812.c: 30:     wTen = wVariable/100;
  5496                           	movlw	064h
  5497  0637  3064               	movwf	(___awdiv@divisor)
  5498  0638  00AC               	movlw	0
  5499  0639  3000               	movwf	((___awdiv@divisor))+1
  5500  063A  00AD               	movf	(printEM1812@wVariable+1),w
  5501  063B  0836               	movwf	(___awdiv@dividend+1)
  5502  063C  00AF               	movf	(printEM1812@wVariable),w
  5503  063D  0835               	movwf	(___awdiv@dividend)
  5504  063E  00AE               	fcall	___awdiv
  5505  063F  3187  2792  3186   	movlb 0	; select bank0
  5506  0642  0020               	movf	(0+(?___awdiv)),w
  5507  0643  082C               	movwf	(??_printEM1812+0)+0
  5508  0644  00B8               	movf	(??_printEM1812+0)+0,w
  5509  0645  0838               	movwf	(printEM1812@wTen)
  5510  0646  00BD               	line	31
  5511                           	
  5512                           l5867:	
  5513  0647                     ;EM1812.c: 31:     wVariable = wVariable % 100;
  5514                           	movlw	064h
  5515  0647  3064               	movwf	(___awmod@divisor)
  5516  0648  00AC               	movlw	0
  5517  0649  3000               	movwf	((___awmod@divisor))+1
  5518  064A  00AD               	movf	(printEM1812@wVariable+1),w
  5519  064B  0836               	movwf	(___awmod@dividend+1)
  5520  064C  00AF               	movf	(printEM1812@wVariable),w
  5521  064D  0835               	movwf	(___awmod@dividend)
  5522  064E  00AE               	fcall	___awmod
  5523  064F  318C  24E2  3186   	movlb 0	; select bank0
  5524  0652  0020               	movf	(1+(?___awmod)),w
  5525  0653  082D               	movwf	(printEM1812@wVariable+1)
  5526  0654  00B6               	movf	(0+(?___awmod)),w
  5527  0655  082C               	movwf	(printEM1812@wVariable)
  5528  0656  00B5               	line	32
  5529                           	
  5530                           l5869:	
  5531  0657                     ;EM1812.c: 32:     wUnity = wVariable/10;
  5532                           	movlw	0Ah
  5533  0657  300A               	movwf	(___awdiv@divisor)
  5534  0658  00AC               	movlw	0
  5535  0659  3000               	movwf	((___awdiv@divisor))+1
  5536  065A  00AD               	movf	(printEM1812@wVariable+1),w
  5537  065B  0836               	movwf	(___awdiv@dividend+1)
  5538  065C  00AF               	movf	(printEM1812@wVariable),w
  5539  065D  0835               	movwf	(___awdiv@dividend)
  5540  065E  00AE               	fcall	___awdiv
  5541  065F  3187  2792  3186   	movlb 0	; select bank0
  5542  0662  0020               	movf	(0+(?___awdiv)),w
  5543  0663  082C               	movwf	(??_printEM1812+0)+0
  5544  0664  00B8               	movf	(??_printEM1812+0)+0,w
  5545  0665  0838               	movwf	(printEM1812@wUnity)
  5546  0666  00BA               	line	33
  5547                           	
  5548                           l5871:	
  5549  0667                     ;EM1812.c: 33:     wVariable = wVariable %10;
  5550                           	movlw	0Ah
  5551  0667  300A               	movwf	(___awmod@divisor)
  5552  0668  00AC               	movlw	0
  5553  0669  3000               	movwf	((___awmod@divisor))+1
  5554  066A  00AD               	movf	(printEM1812@wVariable+1),w
  5555  066B  0836               	movwf	(___awmod@dividend+1)
  5556  066C  00AF               	movf	(printEM1812@wVariable),w
  5557  066D  0835               	movwf	(___awmod@dividend)
  5558  066E  00AE               	fcall	___awmod
  5559  066F  318C  24E2  3186   	movlb 0	; select bank0
  5560  0672  0020               	movf	(1+(?___awmod)),w
  5561  0673  082D               	movwf	(printEM1812@wVariable+1)
  5562  0674  00B6               	movf	(0+(?___awmod)),w
  5563  0675  082C               	movwf	(printEM1812@wVariable)
  5564  0676  00B5               	line	34
  5565                           	
  5566                           l5873:	
  5567  0677                     ;EM1812.c: 34:     wDecimal = wVariable;
  5568                           	movf	(printEM1812@wVariable),w
  5569  0677  0835               	movwf	(??_printEM1812+0)+0
  5570  0678  00B8               	movf	(??_printEM1812+0)+0,w
  5571  0679  0838               	movwf	(printEM1812@wDecimal)
  5572  067A  00BB               	line	37
  5573                           ;EM1812.c: 37:     if(wIsNegative)
  5574                           	movf	((printEM1812@wIsNegative)),w
  5575  067B  083C               	btfsc	status,2
  5576  067C  1903               	goto	u4161
  5577  067D  2E7F               	goto	u4160
  5578  067E  2E80               u4161:
  5579  067F                     	goto	l5879
  5580  067F  2E90               u4160:
  5581  0680                     	line	39
  5582                           	
  5583                           l5875:	
  5584  0680                     ;EM1812.c: 38:     {;EM1812.c: 39:         oTextOut[wWritingPosition] = '-';
  5585                           	movlw	low(02Dh)
  5586  0680  302D               	movwf	(??_printEM1812+0)+0
  5587  0681  00B8               	movf	(printEM1812@wWritingPosition),w
  5588  0682  083E               	addwf	(printEM1812@oTextOut),w
  5589  0683  0737               	movwf	(??_printEM1812+1)+0
  5590  0684  00B9               	movf	0+(??_printEM1812+1)+0,w
  5591  0685  0839               	movwf	fsr1l
  5592  0686  0086               	movlw 2	; select bank4/5
  5593  0687  3002               	movwf fsr1h	
  5594  0688  0087               	
  5595                           	movf	(??_printEM1812+0)+0,w
  5596  0689  0838               	movwf	indf1
  5597  068A  0081               	line	40
  5598                           	
  5599                           l5877:	
  5600  068B                     ;EM1812.c: 40:         wWritingPosition++;
  5601                           	movlw	low(01h)
  5602  068B  3001               	movwf	(??_printEM1812+0)+0
  5603  068C  00B8               	movf	(??_printEM1812+0)+0,w
  5604  068D  0838               	addwf	(printEM1812@wWritingPosition),f
  5605  068E  07BE               	goto	l5879
  5606  068F  2E90               	line	41
  5607                           ;EM1812.c: 41:     }
  5608                           	
  5609                           l447:	
  5610  0690                     	line	42
  5611                           	
  5612                           l5879:	
  5613  0690                     ;EM1812.c: 42:     if( wTen != 0 )
  5614                           	movf	((printEM1812@wTen)),w
  5615  0690  083D               	btfsc	status,2
  5616  0691  1903               	goto	u4171
  5617  0692  2E94               	goto	u4170
  5618  0693  2E95               u4171:
  5619  0694                     	goto	l5885
  5620  0694  2EA6               u4170:
  5621  0695                     	line	44
  5622                           	
  5623                           l5881:	
  5624  0695                     ;EM1812.c: 43:     {;EM1812.c: 44:         oTextOut[wWritingPosition] = '0' + wTen;
  5625                           	movf	(printEM1812@wTen),w
  5626  0695  083D               	addlw	030h
  5627  0696  3E30               	movwf	(??_printEM1812+0)+0
  5628  0697  00B8               	movf	(printEM1812@wWritingPosition),w
  5629  0698  083E               	addwf	(printEM1812@oTextOut),w
  5630  0699  0737               	movwf	(??_printEM1812+1)+0
  5631  069A  00B9               	movf	0+(??_printEM1812+1)+0,w
  5632  069B  0839               	movwf	fsr1l
  5633  069C  0086               	movlw 2	; select bank4/5
  5634  069D  3002               	movwf fsr1h	
  5635  069E  0087               	
  5636                           	movf	(??_printEM1812+0)+0,w
  5637  069F  0838               	movwf	indf1
  5638  06A0  0081               	line	45
  5639                           	
  5640                           l5883:	
  5641  06A1                     ;EM1812.c: 45:         wWritingPosition++;
  5642                           	movlw	low(01h)
  5643  06A1  3001               	movwf	(??_printEM1812+0)+0
  5644  06A2  00B8               	movf	(??_printEM1812+0)+0,w
  5645  06A3  0838               	addwf	(printEM1812@wWritingPosition),f
  5646  06A4  07BE               	goto	l5885
  5647  06A5  2EA6               	line	46
  5648                           ;EM1812.c: 46:     }
  5649                           	
  5650                           l448:	
  5651  06A6                     	line	47
  5652                           	
  5653                           l5885:	
  5654  06A6                     ;EM1812.c: 47:     oTextOut[wWritingPosition] = '0' + wUnity;
  5655                           	movf	(printEM1812@wUnity),w
  5656  06A6  083A               	addlw	030h
  5657  06A7  3E30               	movwf	(??_printEM1812+0)+0
  5658  06A8  00B8               	movf	(printEM1812@wWritingPosition),w
  5659  06A9  083E               	addwf	(printEM1812@oTextOut),w
  5660  06AA  0737               	movwf	(??_printEM1812+1)+0
  5661  06AB  00B9               	movf	0+(??_printEM1812+1)+0,w
  5662  06AC  0839               	movwf	fsr1l
  5663  06AD  0086               	movlw 2	; select bank4/5
  5664  06AE  3002               	movwf fsr1h	
  5665  06AF  0087               	
  5666                           	movf	(??_printEM1812+0)+0,w
  5667  06B0  0838               	movwf	indf1
  5668  06B1  0081               	line	48
  5669                           ;EM1812.c: 48:     wWritingPosition++;
  5670                           	movlw	low(01h)
  5671  06B2  3001               	movwf	(??_printEM1812+0)+0
  5672  06B3  00B8               	movf	(??_printEM1812+0)+0,w
  5673  06B4  0838               	addwf	(printEM1812@wWritingPosition),f
  5674  06B5  07BE               	line	49
  5675                           	
  5676                           l5887:	
  5677  06B6                     ;EM1812.c: 49:     oTextOut[wWritingPosition] = ',';
  5678                           	movlw	low(02Ch)
  5679  06B6  302C               	movwf	(??_printEM1812+0)+0
  5680  06B7  00B8               	movf	(printEM1812@wWritingPosition),w
  5681  06B8  083E               	addwf	(printEM1812@oTextOut),w
  5682  06B9  0737               	movwf	(??_printEM1812+1)+0
  5683  06BA  00B9               	movf	0+(??_printEM1812+1)+0,w
  5684  06BB  0839               	movwf	fsr1l
  5685  06BC  0086               	movlw 2	; select bank4/5
  5686  06BD  3002               	movwf fsr1h	
  5687  06BE  0087               	
  5688                           	movf	(??_printEM1812+0)+0,w
  5689  06BF  0838               	movwf	indf1
  5690  06C0  0081               	line	50
  5691                           	
  5692                           l5889:	
  5693  06C1                     ;EM1812.c: 50:     wWritingPosition++;
  5694                           	movlw	low(01h)
  5695  06C1  3001               	movwf	(??_printEM1812+0)+0
  5696  06C2  00B8               	movf	(??_printEM1812+0)+0,w
  5697  06C3  0838               	addwf	(printEM1812@wWritingPosition),f
  5698  06C4  07BE               	line	51
  5699                           ;EM1812.c: 51:     oTextOut[wWritingPosition] = '0' + wDecimal;
  5700                           	movf	(printEM1812@wDecimal),w
  5701  06C5  083B               	addlw	030h
  5702  06C6  3E30               	movwf	(??_printEM1812+0)+0
  5703  06C7  00B8               	movf	(printEM1812@wWritingPosition),w
  5704  06C8  083E               	addwf	(printEM1812@oTextOut),w
  5705  06C9  0737               	movwf	(??_printEM1812+1)+0
  5706  06CA  00B9               	movf	0+(??_printEM1812+1)+0,w
  5707  06CB  0839               	movwf	fsr1l
  5708  06CC  0086               	movlw 2	; select bank4/5
  5709  06CD  3002               	movwf fsr1h	
  5710  06CE  0087               	
  5711                           	movf	(??_printEM1812+0)+0,w
  5712  06CF  0838               	movwf	indf1
  5713  06D0  0081               	line	52
  5714                           	
  5715                           l5891:	
  5716  06D1                     ;EM1812.c: 52:     wWritingPosition++;
  5717                           	movlw	low(01h)
  5718  06D1  3001               	movwf	(??_printEM1812+0)+0
  5719  06D2  00B8               	movf	(??_printEM1812+0)+0,w
  5720  06D3  0838               	addwf	(printEM1812@wWritingPosition),f
  5721  06D4  07BE               	line	53
  5722                           	
  5723                           l5893:	
  5724  06D5                     ;EM1812.c: 53:     oTextOut[wWritingPosition] = 0;
  5725                           	movf	(printEM1812@wWritingPosition),w
  5726  06D5  083E               	addwf	(printEM1812@oTextOut),w
  5727  06D6  0737               	movwf	(??_printEM1812+0)+0
  5728  06D7  00B8               	movf	0+(??_printEM1812+0)+0,w
  5729  06D8  0838               	movwf	fsr1l
  5730  06D9  0086               	movlw 2	; select bank4/5
  5731  06DA  3002               	movwf fsr1h	
  5732  06DB  0087               	
  5733                           	clrf	indf1
  5734  06DC  0181               	line	55
  5735                           	
  5736                           l449:	
  5737  06DD                     	return
  5738  06DD  0008               	opt stack 0
  5739                           GLOBAL	__end_of_printEM1812
  5740                           	__end_of_printEM1812:
  5741  06DE                     	signat	_printEM1812,8313
  5742                           	global	___awmod
  5743                           
  5744 ;; *************** function ___awmod *****************
  5745 ;; Defined at:
  5746 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  divisor         2   12[BANK0 ] int 
  5749 ;;  dividend        2   14[BANK0 ] int 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  sign            1   18[BANK0 ] unsigned char 
  5752 ;;  counter         1   17[BANK0 ] unsigned char 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  2   12[BANK0 ] int 
  5755 ;; Registers used:
  5756 ;;		wreg, status,2, status,0
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5762 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  5763 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5764 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5765 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
  5766 ;;Total ram usage:        7 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; Hardware stack levels required when called:    6
  5769 ;; This function calls:
  5770 ;;		Nothing
  5771 ;; This function is called by:
  5772 ;;		_printEM1812
  5773 ;;		_uint8_tToa
  5774 ;;		_Esp8266SetNetworkParameters
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  5778                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  5779                           	line	5
  5780                           global __ptext4
  5781                           __ptext4:	;psect for function ___awmod
  5782  0CE2                     psect	text4
  5783                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  5784                           	line	5
  5785                           	global	__size_of___awmod
  5786                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  5787  005E                     	
  5788                           ___awmod:	
  5789  0CE2                     ;incstack = 0
  5790                           	opt	stack 8
  5791                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5792                           	line	12
  5793                           	
  5794                           l5695:	
  5795  0CE2                     	movlb 0	; select bank0
  5796  0CE2  0020               	clrf	(___awmod@sign)
  5797  0CE3  01B2               	line	13
  5798                           	
  5799                           l5697:	
  5800  0CE4                     	btfss	(___awmod@dividend+1),7
  5801  0CE4  1FAF               	goto	u3961
  5802  0CE5  2CE7               	goto	u3960
  5803  0CE6  2CE8               u3961:
  5804  0CE7                     	goto	l5703
  5805  0CE7  2CF0               u3960:
  5806  0CE8                     	line	14
  5807                           	
  5808                           l5699:	
  5809  0CE8                     	comf	(___awmod@dividend),f
  5810  0CE8  09AE               	comf	(___awmod@dividend+1),f
  5811  0CE9  09AF               	incf	(___awmod@dividend),f
  5812  0CEA  0AAE               	skipnz
  5813  0CEB  1903               	incf	(___awmod@dividend+1),f
  5814  0CEC  0AAF               	line	15
  5815                           	
  5816                           l5701:	
  5817  0CED                     	clrf	(___awmod@sign)
  5818  0CED  01B2               	incf	(___awmod@sign),f
  5819  0CEE  0AB2               	goto	l5703
  5820  0CEF  2CF0               	line	16
  5821                           	
  5822                           l1079:	
  5823  0CF0                     	line	17
  5824                           	
  5825                           l5703:	
  5826  0CF0                     	btfss	(___awmod@divisor+1),7
  5827  0CF0  1FAD               	goto	u3971
  5828  0CF1  2CF3               	goto	u3970
  5829  0CF2  2CF4               u3971:
  5830  0CF3                     	goto	l5707
  5831  0CF3  2CFA               u3970:
  5832  0CF4                     	line	18
  5833                           	
  5834                           l5705:	
  5835  0CF4                     	comf	(___awmod@divisor),f
  5836  0CF4  09AC               	comf	(___awmod@divisor+1),f
  5837  0CF5  09AD               	incf	(___awmod@divisor),f
  5838  0CF6  0AAC               	skipnz
  5839  0CF7  1903               	incf	(___awmod@divisor+1),f
  5840  0CF8  0AAD               	goto	l5707
  5841  0CF9  2CFA               	
  5842                           l1080:	
  5843  0CFA                     	line	19
  5844                           	
  5845                           l5707:	
  5846  0CFA                     	movf	((___awmod@divisor)),w
  5847  0CFA  082C               iorwf	((___awmod@divisor+1)),w
  5848  0CFB  042D               	btfsc	status,2
  5849  0CFC  1903               	goto	u3981
  5850  0CFD  2CFF               	goto	u3980
  5851  0CFE  2D00               u3981:
  5852  0CFF                     	goto	l5725
  5853  0CFF  2D2F               u3980:
  5854  0D00                     	line	20
  5855                           	
  5856                           l5709:	
  5857  0D00                     	clrf	(___awmod@counter)
  5858  0D00  01B1               	incf	(___awmod@counter),f
  5859  0D01  0AB1               	line	21
  5860                           	goto	l5715
  5861  0D02  2D0D               	
  5862                           l1083:	
  5863  0D03                     	line	22
  5864                           	
  5865                           l5711:	
  5866  0D03                     	movlw	01h
  5867  0D03  3001               	
  5868                           u3995:
  5869  0D04                     	lslf	(___awmod@divisor),f
  5870  0D04  35AC               	rlf	(___awmod@divisor+1),f
  5871  0D05  0DAD               	decfsz	wreg,f
  5872  0D06  0B89               	goto	u3995
  5873  0D07  2D04               	line	23
  5874                           	
  5875                           l5713:	
  5876  0D08                     	movlw	low(01h)
  5877  0D08  3001               	movwf	(??___awmod+0)+0
  5878  0D09  00B0               	movf	(??___awmod+0)+0,w
  5879  0D0A  0830               	addwf	(___awmod@counter),f
  5880  0D0B  07B1               	goto	l5715
  5881  0D0C  2D0D               	line	24
  5882                           	
  5883                           l1082:	
  5884  0D0D                     	line	21
  5885                           	
  5886                           l5715:	
  5887  0D0D                     	btfss	(___awmod@divisor+1),(15)&7
  5888  0D0D  1FAD               	goto	u4001
  5889  0D0E  2D10               	goto	u4000
  5890  0D0F  2D11               u4001:
  5891  0D10                     	goto	l5711
  5892  0D10  2D03               u4000:
  5893  0D11                     	goto	l5717
  5894  0D11  2D13               	
  5895                           l1084:	
  5896  0D12                     	goto	l5717
  5897  0D12  2D13               	line	25
  5898                           	
  5899                           l1085:	
  5900  0D13                     	line	26
  5901                           	
  5902                           l5717:	
  5903  0D13                     	movf	(___awmod@divisor+1),w
  5904  0D13  082D               	subwf	(___awmod@dividend+1),w
  5905  0D14  022F               	skipz
  5906  0D15  1D03               	goto	u4015
  5907  0D16  2D19               	movf	(___awmod@divisor),w
  5908  0D17  082C               	subwf	(___awmod@dividend),w
  5909  0D18  022E               u4015:
  5910  0D19                     	skipc
  5911  0D19  1C03               	goto	u4011
  5912  0D1A  2D1C               	goto	u4010
  5913  0D1B  2D1D               u4011:
  5914  0D1C                     	goto	l5721
  5915  0D1C  2D22               u4010:
  5916  0D1D                     	line	27
  5917                           	
  5918                           l5719:	
  5919  0D1D                     	movf	(___awmod@divisor),w
  5920  0D1D  082C               	subwf	(___awmod@dividend),f
  5921  0D1E  02AE               	movf	(___awmod@divisor+1),w
  5922  0D1F  082D               	subwfb	(___awmod@dividend+1),f
  5923  0D20  3BAF               	goto	l5721
  5924  0D21  2D22               	
  5925                           l1086:	
  5926  0D22                     	line	28
  5927                           	
  5928                           l5721:	
  5929  0D22                     	movlw	01h
  5930  0D22  3001               	
  5931                           u4025:
  5932  0D23                     	lsrf	(___awmod@divisor+1),f
  5933  0D23  36AD               	rrf	(___awmod@divisor),f
  5934  0D24  0CAC               	decfsz	wreg,f
  5935  0D25  0B89               	goto	u4025
  5936  0D26  2D23               	line	29
  5937                           	
  5938                           l5723:	
  5939  0D27                     	movlw	01h
  5940  0D27  3001               	subwf	(___awmod@counter),f
  5941  0D28  02B1               	btfss	status,2
  5942  0D29  1D03               	goto	u4031
  5943  0D2A  2D2C               	goto	u4030
  5944  0D2B  2D2D               u4031:
  5945  0D2C                     	goto	l5717
  5946  0D2C  2D13               u4030:
  5947  0D2D                     	goto	l5725
  5948  0D2D  2D2F               	
  5949                           l1087:	
  5950  0D2E                     	goto	l5725
  5951  0D2E  2D2F               	line	30
  5952                           	
  5953                           l1081:	
  5954  0D2F                     	line	31
  5955                           	
  5956                           l5725:	
  5957  0D2F                     	movf	((___awmod@sign)),w
  5958  0D2F  0832               	btfsc	status,2
  5959  0D30  1903               	goto	u4041
  5960  0D31  2D33               	goto	u4040
  5961  0D32  2D34               u4041:
  5962  0D33                     	goto	l5729
  5963  0D33  2D3A               u4040:
  5964  0D34                     	line	32
  5965                           	
  5966                           l5727:	
  5967  0D34                     	comf	(___awmod@dividend),f
  5968  0D34  09AE               	comf	(___awmod@dividend+1),f
  5969  0D35  09AF               	incf	(___awmod@dividend),f
  5970  0D36  0AAE               	skipnz
  5971  0D37  1903               	incf	(___awmod@dividend+1),f
  5972  0D38  0AAF               	goto	l5729
  5973  0D39  2D3A               	
  5974                           l1088:	
  5975  0D3A                     	line	33
  5976                           	
  5977                           l5729:	
  5978  0D3A                     	movf	(___awmod@dividend+1),w
  5979  0D3A  082F               	movwf	(?___awmod+1)
  5980  0D3B  00AD               	movf	(___awmod@dividend),w
  5981  0D3C  082E               	movwf	(?___awmod)
  5982  0D3D  00AC               	goto	l1089
  5983  0D3E  2D3F               	
  5984                           l5731:	
  5985  0D3F                     	line	34
  5986                           	
  5987                           l1089:	
  5988  0D3F                     	return
  5989  0D3F  0008               	opt stack 0
  5990                           GLOBAL	__end_of___awmod
  5991                           	__end_of___awmod:
  5992  0D40                     	signat	___awmod,8314
  5993                           	global	___awdiv
  5994                           
  5995 ;; *************** function ___awdiv *****************
  5996 ;; Defined at:
  5997 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;  divisor         2   12[BANK0 ] int 
  6000 ;;  dividend        2   14[BANK0 ] int 
  6001 ;; Auto vars:     Size  Location     Type
  6002 ;;  quotient        2   19[BANK0 ] int 
  6003 ;;  sign            1   18[BANK0 ] unsigned char 
  6004 ;;  counter         1   17[BANK0 ] unsigned char 
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  2   12[BANK0 ] int 
  6007 ;; Registers used:
  6008 ;;		wreg, status,2, status,0
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6014 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6015 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6016 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6017 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0
  6018 ;;Total ram usage:        9 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; Hardware stack levels required when called:    6
  6021 ;; This function calls:
  6022 ;;		Nothing
  6023 ;; This function is called by:
  6024 ;;		_printEM1812
  6025 ;;		_uint8_tToa
  6026 ;;		_Esp8266SetNetworkParameters
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  6030                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  6031                           	line	5
  6032                           global __ptext5
  6033                           __ptext5:	;psect for function ___awdiv
  6034  0792                     psect	text5
  6035                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  6036                           	line	5
  6037                           	global	__size_of___awdiv
  6038                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  6039  006A                     	
  6040                           ___awdiv:	
  6041  0792                     ;incstack = 0
  6042                           	opt	stack 8
  6043                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6044                           	line	13
  6045                           	
  6046                           l5651:	
  6047  0792                     	movlb 0	; select bank0
  6048  0792  0020               	clrf	(___awdiv@sign)
  6049  0793  01B2               	line	14
  6050                           	
  6051                           l5653:	
  6052  0794                     	btfss	(___awdiv@divisor+1),7
  6053  0794  1FAD               	goto	u3861
  6054  0795  2F97               	goto	u3860
  6055  0796  2F98               u3861:
  6056  0797                     	goto	l5659
  6057  0797  2FA0               u3860:
  6058  0798                     	line	15
  6059                           	
  6060                           l5655:	
  6061  0798                     	comf	(___awdiv@divisor),f
  6062  0798  09AC               	comf	(___awdiv@divisor+1),f
  6063  0799  09AD               	incf	(___awdiv@divisor),f
  6064  079A  0AAC               	skipnz
  6065  079B  1903               	incf	(___awdiv@divisor+1),f
  6066  079C  0AAD               	line	16
  6067                           	
  6068                           l5657:	
  6069  079D                     	clrf	(___awdiv@sign)
  6070  079D  01B2               	incf	(___awdiv@sign),f
  6071  079E  0AB2               	goto	l5659
  6072  079F  2FA0               	line	17
  6073                           	
  6074                           l1066:	
  6075  07A0                     	line	18
  6076                           	
  6077                           l5659:	
  6078  07A0                     	btfss	(___awdiv@dividend+1),7
  6079  07A0  1FAF               	goto	u3871
  6080  07A1  2FA3               	goto	u3870
  6081  07A2  2FA4               u3871:
  6082  07A3                     	goto	l5665
  6083  07A3  2FAE               u3870:
  6084  07A4                     	line	19
  6085                           	
  6086                           l5661:	
  6087  07A4                     	comf	(___awdiv@dividend),f
  6088  07A4  09AE               	comf	(___awdiv@dividend+1),f
  6089  07A5  09AF               	incf	(___awdiv@dividend),f
  6090  07A6  0AAE               	skipnz
  6091  07A7  1903               	incf	(___awdiv@dividend+1),f
  6092  07A8  0AAF               	line	20
  6093                           	
  6094                           l5663:	
  6095  07A9                     	movlw	low(01h)
  6096  07A9  3001               	movwf	(??___awdiv+0)+0
  6097  07AA  00B0               	movf	(??___awdiv+0)+0,w
  6098  07AB  0830               	xorwf	(___awdiv@sign),f
  6099  07AC  06B2               	goto	l5665
  6100  07AD  2FAE               	line	21
  6101                           	
  6102                           l1067:	
  6103  07AE                     	line	22
  6104                           	
  6105                           l5665:	
  6106  07AE                     	clrf	(___awdiv@quotient)
  6107  07AE  01B3               	clrf	(___awdiv@quotient+1)
  6108  07AF  01B4               	line	23
  6109                           	
  6110                           l5667:	
  6111  07B0                     	movf	((___awdiv@divisor)),w
  6112  07B0  082C               iorwf	((___awdiv@divisor+1)),w
  6113  07B1  042D               	btfsc	status,2
  6114  07B2  1903               	goto	u3881
  6115  07B3  2FB5               	goto	u3880
  6116  07B4  2FB6               u3881:
  6117  07B5                     	goto	l5687
  6118  07B5  2FEB               u3880:
  6119  07B6                     	line	24
  6120                           	
  6121                           l5669:	
  6122  07B6                     	clrf	(___awdiv@counter)
  6123  07B6  01B1               	incf	(___awdiv@counter),f
  6124  07B7  0AB1               	line	25
  6125                           	goto	l5675
  6126  07B8  2FC3               	
  6127                           l1070:	
  6128  07B9                     	line	26
  6129                           	
  6130                           l5671:	
  6131  07B9                     	movlw	01h
  6132  07B9  3001               	
  6133                           u3895:
  6134  07BA                     	lslf	(___awdiv@divisor),f
  6135  07BA  35AC               	rlf	(___awdiv@divisor+1),f
  6136  07BB  0DAD               	decfsz	wreg,f
  6137  07BC  0B89               	goto	u3895
  6138  07BD  2FBA               	line	27
  6139                           	
  6140                           l5673:	
  6141  07BE                     	movlw	low(01h)
  6142  07BE  3001               	movwf	(??___awdiv+0)+0
  6143  07BF  00B0               	movf	(??___awdiv+0)+0,w
  6144  07C0  0830               	addwf	(___awdiv@counter),f
  6145  07C1  07B1               	goto	l5675
  6146  07C2  2FC3               	line	28
  6147                           	
  6148                           l1069:	
  6149  07C3                     	line	25
  6150                           	
  6151                           l5675:	
  6152  07C3                     	btfss	(___awdiv@divisor+1),(15)&7
  6153  07C3  1FAD               	goto	u3901
  6154  07C4  2FC6               	goto	u3900
  6155  07C5  2FC7               u3901:
  6156  07C6                     	goto	l5671
  6157  07C6  2FB9               u3900:
  6158  07C7                     	goto	l5677
  6159  07C7  2FC9               	
  6160                           l1071:	
  6161  07C8                     	goto	l5677
  6162  07C8  2FC9               	line	29
  6163                           	
  6164                           l1072:	
  6165  07C9                     	line	30
  6166                           	
  6167                           l5677:	
  6168  07C9                     	movlw	01h
  6169  07C9  3001               	
  6170                           u3915:
  6171  07CA                     	lslf	(___awdiv@quotient),f
  6172  07CA  35B3               	rlf	(___awdiv@quotient+1),f
  6173  07CB  0DB4               	decfsz	wreg,f
  6174  07CC  0B89               	goto	u3915
  6175  07CD  2FCA               	line	31
  6176                           	movf	(___awdiv@divisor+1),w
  6177  07CE  082D               	subwf	(___awdiv@dividend+1),w
  6178  07CF  022F               	skipz
  6179  07D0  1D03               	goto	u3925
  6180  07D1  2FD4               	movf	(___awdiv@divisor),w
  6181  07D2  082C               	subwf	(___awdiv@dividend),w
  6182  07D3  022E               u3925:
  6183  07D4                     	skipc
  6184  07D4  1C03               	goto	u3921
  6185  07D5  2FD7               	goto	u3920
  6186  07D6  2FD8               u3921:
  6187  07D7                     	goto	l5683
  6188  07D7  2FDE               u3920:
  6189  07D8                     	line	32
  6190                           	
  6191                           l5679:	
  6192  07D8                     	movf	(___awdiv@divisor),w
  6193  07D8  082C               	subwf	(___awdiv@dividend),f
  6194  07D9  02AE               	movf	(___awdiv@divisor+1),w
  6195  07DA  082D               	subwfb	(___awdiv@dividend+1),f
  6196  07DB  3BAF               	line	33
  6197                           	
  6198                           l5681:	
  6199  07DC                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  6200  07DC  1433               	goto	l5683
  6201  07DD  2FDE               	line	34
  6202                           	
  6203                           l1073:	
  6204  07DE                     	line	35
  6205                           	
  6206                           l5683:	
  6207  07DE                     	movlw	01h
  6208  07DE  3001               	
  6209                           u3935:
  6210  07DF                     	lsrf	(___awdiv@divisor+1),f
  6211  07DF  36AD               	rrf	(___awdiv@divisor),f
  6212  07E0  0CAC               	decfsz	wreg,f
  6213  07E1  0B89               	goto	u3935
  6214  07E2  2FDF               	line	36
  6215                           	
  6216                           l5685:	
  6217  07E3                     	movlw	01h
  6218  07E3  3001               	subwf	(___awdiv@counter),f
  6219  07E4  02B1               	btfss	status,2
  6220  07E5  1D03               	goto	u3941
  6221  07E6  2FE8               	goto	u3940
  6222  07E7  2FE9               u3941:
  6223  07E8                     	goto	l5677
  6224  07E8  2FC9               u3940:
  6225  07E9                     	goto	l5687
  6226  07E9  2FEB               	
  6227                           l1074:	
  6228  07EA                     	goto	l5687
  6229  07EA  2FEB               	line	37
  6230                           	
  6231                           l1068:	
  6232  07EB                     	line	38
  6233                           	
  6234                           l5687:	
  6235  07EB                     	movf	((___awdiv@sign)),w
  6236  07EB  0832               	btfsc	status,2
  6237  07EC  1903               	goto	u3951
  6238  07ED  2FEF               	goto	u3950
  6239  07EE  2FF0               u3951:
  6240  07EF                     	goto	l5691
  6241  07EF  2FF6               u3950:
  6242  07F0                     	line	39
  6243                           	
  6244                           l5689:	
  6245  07F0                     	comf	(___awdiv@quotient),f
  6246  07F0  09B3               	comf	(___awdiv@quotient+1),f
  6247  07F1  09B4               	incf	(___awdiv@quotient),f
  6248  07F2  0AB3               	skipnz
  6249  07F3  1903               	incf	(___awdiv@quotient+1),f
  6250  07F4  0AB4               	goto	l5691
  6251  07F5  2FF6               	
  6252                           l1075:	
  6253  07F6                     	line	40
  6254                           	
  6255                           l5691:	
  6256  07F6                     	movf	(___awdiv@quotient+1),w
  6257  07F6  0834               	movwf	(?___awdiv+1)
  6258  07F7  00AD               	movf	(___awdiv@quotient),w
  6259  07F8  0833               	movwf	(?___awdiv)
  6260  07F9  00AC               	goto	l1076
  6261  07FA  2FFB               	
  6262                           l5693:	
  6263  07FB                     	line	41
  6264                           	
  6265                           l1076:	
  6266  07FB                     	return
  6267  07FB  0008               	opt stack 0
  6268                           GLOBAL	__end_of___awdiv
  6269                           	__end_of___awdiv:
  6270  07FC                     	signat	___awdiv,8314
  6271                           	global	_powerOnLcd
  6272                           
  6273 ;; *************** function _powerOnLcd *****************
  6274 ;; Defined at:
  6275 ;;		line 267 in file "LCD_hd44780u_qy_2004a.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;		None
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;		None
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  1    wreg      void 
  6282 ;; Registers used:
  6283 ;;		wreg, status,2, status,0, pclath, cstack
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6291 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6292 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6293 ;;Total ram usage:        1 bytes
  6294 ;; Hardware stack levels used:    1
  6295 ;; Hardware stack levels required when called:    9
  6296 ;; This function calls:
  6297 ;;		_writeInsChk
  6298 ;; This function is called by:
  6299 ;;		_main
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  6303                           	file	"LCD_hd44780u_qy_2004a.c"
  6304                           	line	267
  6305                           global __ptext6
  6306                           __ptext6:	;psect for function _powerOnLcd
  6307  0972                     psect	text6
  6308                           	file	"LCD_hd44780u_qy_2004a.c"
  6309                           	line	267
  6310                           	global	__size_of_powerOnLcd
  6311                           	__size_of_powerOnLcd	equ	__end_of_powerOnLcd-_powerOnLcd
  6312  000B                     	
  6313                           _powerOnLcd:	
  6314  0972                     ;incstack = 0
  6315                           	opt	stack 6
  6316                           ; Regs used in _powerOnLcd: [wreg+status,2+status,0+pclath+cstack]
  6317                           	line	269
  6318                           	
  6319                           l5841:	
  6320  0972                     ;LCD_hd44780u_qy_2004a.c: 269:   mDisplayOnOffReg = mDisplayOnOffReg | 0x04;
  6321                           	movlb 0	; select bank0
  6322  0972  0020               	movf	(_mDisplayOnOffReg),w
  6323  0973  085D               	iorlw	04h
  6324  0974  3804               	movwf	(??_powerOnLcd+0)+0
  6325  0975  00B2               	movf	(??_powerOnLcd+0)+0,w
  6326  0976  0832               	movwf	(_mDisplayOnOffReg)
  6327  0977  00DD               	line	270
  6328                           	
  6329                           l5843:	
  6330  0978                     ;LCD_hd44780u_qy_2004a.c: 270:   writeInsChk(mDisplayOnOffReg);
  6331                           	movf	(_mDisplayOnOffReg),w
  6332  0978  085D               	fcall	_writeInsChk
  6333  0979  3189  2167  3189   	line	271
  6334                           	
  6335                           l345:	
  6336  097C                     	return
  6337  097C  0008               	opt stack 0
  6338                           GLOBAL	__end_of_powerOnLcd
  6339                           	__end_of_powerOnLcd:
  6340  097D                     	signat	_powerOnLcd,89
  6341                           	global	_moveCursorToHome
  6342                           
  6343 ;; *************** function _moveCursorToHome *****************
  6344 ;; Defined at:
  6345 ;;		line 328 in file "LCD_hd44780u_qy_2004a.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;		None
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;		None
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  1    wreg      void 
  6352 ;; Registers used:
  6353 ;;		wreg, status,2, status,0, pclath, cstack
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6363 ;;Total ram usage:        0 bytes
  6364 ;; Hardware stack levels used:    1
  6365 ;; Hardware stack levels required when called:    9
  6366 ;; This function calls:
  6367 ;;		_writeInsChk
  6368 ;; This function is called by:
  6369 ;;		_main
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  6373                           	line	328
  6374                           global __ptext7
  6375                           __ptext7:	;psect for function _moveCursorToHome
  6376  094B                     psect	text7
  6377                           	file	"LCD_hd44780u_qy_2004a.c"
  6378                           	line	328
  6379                           	global	__size_of_moveCursorToHome
  6380                           	__size_of_moveCursorToHome	equ	__end_of_moveCursorToHome-_moveCursorToHome
  6381  0008                     	
  6382                           _moveCursorToHome:	
  6383  094B                     ;incstack = 0
  6384                           	opt	stack 6
  6385                           ; Regs used in _moveCursorToHome: [wreg+status,2+status,0+pclath+cstack]
  6386                           	line	330
  6387                           	
  6388                           l5849:	
  6389  094B                     ;LCD_hd44780u_qy_2004a.c: 330:   writeInsChk(0x02);
  6390                           	movlw	low(02h)
  6391  094B  3002               	fcall	_writeInsChk
  6392  094C  3189  2167  3189   	line	331
  6393                           	
  6394                           l5851:	
  6395  094F                     ;LCD_hd44780u_qy_2004a.c: 331:   mWritingPosition=1;
  6396                           	movlb 0	; select bank0
  6397  094F  0020               	clrf	(_mWritingPosition)
  6398  0950  01DB               	incf	(_mWritingPosition),f
  6399  0951  0ADB               	line	332
  6400                           	
  6401                           l381:	
  6402  0952                     	return
  6403  0952  0008               	opt stack 0
  6404                           GLOBAL	__end_of_moveCursorToHome
  6405                           	__end_of_moveCursorToHome:
  6406  0953                     	signat	_moveCursorToHome,89
  6407                           	global	_initLCD
  6408                           
  6409 ;; *************** function _initLCD *****************
  6410 ;; Defined at:
  6411 ;;		line 10 in file "LCD_hd44780u_qy_2004a.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;		None
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;		None
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  1    wreg      void 
  6418 ;; Registers used:
  6419 ;;		wreg, status,2, status,0, pclath, cstack
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6427 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6428 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6429 ;;Total ram usage:        1 bytes
  6430 ;; Hardware stack levels used:    1
  6431 ;; Hardware stack levels required when called:   10
  6432 ;; This function calls:
  6433 ;;		_clearDisplay
  6434 ;;		_setData
  6435 ;;		_writeInsChk
  6436 ;; This function is called by:
  6437 ;;		_main
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  6441                           	line	10
  6442                           global __ptext8
  6443                           __ptext8:	;psect for function _initLCD
  6444  0E65                     psect	text8
  6445                           	file	"LCD_hd44780u_qy_2004a.c"
  6446                           	line	10
  6447                           	global	__size_of_initLCD
  6448                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  6449  0064                     	
  6450                           _initLCD:	
  6451  0E65                     ;incstack = 0
  6452                           	opt	stack 5
  6453                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  6454                           	line	13
  6455                           	
  6456                           l5819:	
  6457  0E65                     ;LCD_hd44780u_qy_2004a.c: 13:   ANSELAbits.ANSA0 = 0;
  6458                           	movlb 3	; select bank3
  6459  0E65  0023               	bcf	(396)^0180h,0	;volatile
  6460  0E66  100C               	line	14
  6461                           ;LCD_hd44780u_qy_2004a.c: 14:   ANSELAbits.ANSA1 = 0;
  6462                           	bcf	(396)^0180h,1	;volatile
  6463  0E67  108C               	line	15
  6464                           ;LCD_hd44780u_qy_2004a.c: 15:   ANSELAbits.ANSA2 = 0;
  6465                           	bcf	(396)^0180h,2	;volatile
  6466  0E68  110C               	line	16
  6467                           ;LCD_hd44780u_qy_2004a.c: 16:   ANSELAbits.ANSA3 = 0;
  6468                           	bcf	(396)^0180h,3	;volatile
  6469  0E69  118C               	line	17
  6470                           ;LCD_hd44780u_qy_2004a.c: 17:   ANSELCbits.ANSC2 = 0;
  6471                           	bcf	(398)^0180h,2	;volatile
  6472  0E6A  110E               	line	18
  6473                           ;LCD_hd44780u_qy_2004a.c: 18:   ANSELCbits.ANSC1 = 0;
  6474                           	bcf	(398)^0180h,1	;volatile
  6475  0E6B  108E               	line	19
  6476                           ;LCD_hd44780u_qy_2004a.c: 19:   ANSELCbits.ANSC0 = 0;
  6477                           	bcf	(398)^0180h,0	;volatile
  6478  0E6C  100E               	line	21
  6479                           ;LCD_hd44780u_qy_2004a.c: 21:   PORTAbits.RA0 = 0;
  6480                           	movlb 0	; select bank0
  6481  0E6D  0020               	bcf	(12),0	;volatile
  6482  0E6E  100C               	line	22
  6483                           ;LCD_hd44780u_qy_2004a.c: 22:   PORTAbits.RA1 = 0;
  6484                           	bcf	(12),1	;volatile
  6485  0E6F  108C               	line	23
  6486                           ;LCD_hd44780u_qy_2004a.c: 23:   PORTAbits.RA2 = 0;
  6487                           	bcf	(12),2	;volatile
  6488  0E70  110C               	line	24
  6489                           ;LCD_hd44780u_qy_2004a.c: 24:   PORTAbits.RA3 = 0;
  6490                           	bcf	(12),3	;volatile
  6491  0E71  118C               	line	25
  6492                           ;LCD_hd44780u_qy_2004a.c: 25:   PORTCbits.RC2=0;
  6493                           	bcf	(14),2	;volatile
  6494  0E72  110E               	line	26
  6495                           ;LCD_hd44780u_qy_2004a.c: 26:   PORTCbits.RC1=0;
  6496                           	bcf	(14),1	;volatile
  6497  0E73  108E               	line	27
  6498                           ;LCD_hd44780u_qy_2004a.c: 27:   PORTCbits.RC0=0;
  6499                           	bcf	(14),0	;volatile
  6500  0E74  100E               	line	29
  6501                           ;LCD_hd44780u_qy_2004a.c: 29:   TRISCbits.TRISC2 = 0;
  6502                           	movlb 1	; select bank1
  6503  0E75  0021               	bcf	(142)^080h,2	;volatile
  6504  0E76  110E               	line	30
  6505                           ;LCD_hd44780u_qy_2004a.c: 30:   TRISCbits.TRISC1 = 0;
  6506                           	bcf	(142)^080h,1	;volatile
  6507  0E77  108E               	line	31
  6508                           ;LCD_hd44780u_qy_2004a.c: 31:   TRISCbits.TRISC0 = 0;
  6509                           	bcf	(142)^080h,0	;volatile
  6510  0E78  100E               	line	32
  6511                           ;LCD_hd44780u_qy_2004a.c: 32:   TRISAbits.TRISA0 = 0;
  6512                           	bcf	(140)^080h,0	;volatile
  6513  0E79  100C               	line	33
  6514                           ;LCD_hd44780u_qy_2004a.c: 33:   TRISAbits.TRISA1 = 0;
  6515                           	bcf	(140)^080h,1	;volatile
  6516  0E7A  108C               	line	34
  6517                           ;LCD_hd44780u_qy_2004a.c: 34:   TRISAbits.TRISA2 = 0;
  6518                           	bcf	(140)^080h,2	;volatile
  6519  0E7B  110C               	line	35
  6520                           ;LCD_hd44780u_qy_2004a.c: 35:   TRISAbits.TRISA3 = 0;
  6521                           	bcf	(140)^080h,3	;volatile
  6522  0E7C  118C               	line	38
  6523                           ;LCD_hd44780u_qy_2004a.c: 38:   PORTCbits.RC2 = 0;
  6524                           	movlb 0	; select bank0
  6525  0E7D  0020               	bcf	(14),2	;volatile
  6526  0E7E  110E               	line	39
  6527                           ;LCD_hd44780u_qy_2004a.c: 39:   PORTCbits.RC1 = 0;
  6528                           	bcf	(14),1	;volatile
  6529  0E7F  108E               	line	40
  6530                           ;LCD_hd44780u_qy_2004a.c: 40:   PORTCbits.RC0 = 0;
  6531                           	bcf	(14),0	;volatile
  6532  0E80  100E               	line	43
  6533                           	
  6534                           l5821:	
  6535  0E81                     ;LCD_hd44780u_qy_2004a.c: 43:   _delay((unsigned long)((15)*(16000000/4000.0)));
  6536                           	opt asmopt_push
  6537                           opt asmopt_off
  6538                           movlw	78
  6539  0E81  304E               	movlb 0	; select bank0
  6540  0E82  0020               movwf	((??_initLCD+0)+0),f
  6541  0E83  00B2               	movlw	235
  6542  0E84  30EB               u4867:
  6543  0E85                     decfsz	wreg
  6544  0E85  0B89               	goto	u4867
  6545  0E86  2E85               	decfsz	((??_initLCD+0)+0),f
  6546  0E87  0BB2               	goto	u4867
  6547  0E88  2E85               opt asmopt_pop
  6548                           
  6549                           	line	44
  6550                           	
  6551                           l5823:	
  6552  0E89                     ;LCD_hd44780u_qy_2004a.c: 44:   setData(0x3);
  6553                           	movlw	low(03h)
  6554  0E89  3003               	fcall	_setData
  6555  0E8A  318B  23CC  318E   	line	45
  6556                           	
  6557                           l5825:	
  6558  0E8D                     ;LCD_hd44780u_qy_2004a.c: 45:   _delay((unsigned long)((5)*(16000000/4000.0)));
  6559                           	opt asmopt_push
  6560                           opt asmopt_off
  6561                           movlw	26
  6562  0E8D  301A               	movlb 0	; select bank0
  6563  0E8E  0020               movwf	((??_initLCD+0)+0),f
  6564  0E8F  00B2               	movlw	248
  6565  0E90  30F8               u4877:
  6566  0E91                     decfsz	wreg
  6567  0E91  0B89               	goto	u4877
  6568  0E92  2E91               	decfsz	((??_initLCD+0)+0),f
  6569  0E93  0BB2               	goto	u4877
  6570  0E94  2E91               	nop
  6571  0E95  0000               opt asmopt_pop
  6572                           
  6573                           	line	46
  6574                           ;LCD_hd44780u_qy_2004a.c: 46:   setData(0x3);
  6575                           	movlw	low(03h)
  6576  0E96  3003               	fcall	_setData
  6577  0E97  318B  23CC  318E   	line	47
  6578                           	
  6579                           l5827:	
  6580  0E9A                     ;LCD_hd44780u_qy_2004a.c: 47:   _delay((unsigned long)((150)*(16000000/4000000.0)));
  6581                           	opt asmopt_push
  6582                           opt asmopt_off
  6583                           	movlw	200
  6584  0E9A  30C8               u4887:
  6585  0E9B                     decfsz	wreg
  6586  0E9B  0B89               	goto	u4887
  6587  0E9C  2E9B               opt asmopt_pop
  6588                           
  6589                           	line	48
  6590                           	
  6591                           l5829:	
  6592  0E9D                     ;LCD_hd44780u_qy_2004a.c: 48:   setData(0x3);
  6593                           	movlw	low(03h)
  6594  0E9D  3003               	fcall	_setData
  6595  0E9E  318B  23CC  318E   	line	49
  6596                           ;LCD_hd44780u_qy_2004a.c: 49:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  6597                           	opt asmopt_push
  6598                           opt asmopt_off
  6599                           	movlw	13
  6600  0EA1  300D               u4897:
  6601  0EA2                     decfsz	wreg
  6602  0EA2  0B89               	goto	u4897
  6603  0EA3  2EA2               	nop
  6604  0EA4  0000               opt asmopt_pop
  6605                           
  6606                           	line	50
  6607                           	
  6608                           l5831:	
  6609  0EA5                     ;LCD_hd44780u_qy_2004a.c: 50:   setData(0x2);
  6610                           	movlw	low(02h)
  6611  0EA5  3002               	fcall	_setData
  6612  0EA6  318B  23CC  318E   	line	51
  6613                           	
  6614                           l5833:	
  6615  0EA9                     ;LCD_hd44780u_qy_2004a.c: 51:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  6616                           	opt asmopt_push
  6617                           opt asmopt_off
  6618                           	movlw	13
  6619  0EA9  300D               u4907:
  6620  0EAA                     decfsz	wreg
  6621  0EAA  0B89               	goto	u4907
  6622  0EAB  2EAA               	nop
  6623  0EAC  0000               opt asmopt_pop
  6624                           
  6625                           	line	52
  6626                           ;LCD_hd44780u_qy_2004a.c: 52:   writeInsChk(0x28);
  6627                           	movlw	low(028h)
  6628  0EAD  3028               	fcall	_writeInsChk
  6629  0EAE  3189  2167  318E   	line	53
  6630                           	
  6631                           l5835:	
  6632  0EB1                     ;LCD_hd44780u_qy_2004a.c: 53:   mDisplayOnOffReg = 0x0F;
  6633                           	movlw	low(0Fh)
  6634  0EB1  300F               	movlb 0	; select bank0
  6635  0EB2  0020               	movwf	(??_initLCD+0)+0
  6636  0EB3  00B2               	movf	(??_initLCD+0)+0,w
  6637  0EB4  0832               	movwf	(_mDisplayOnOffReg)
  6638  0EB5  00DD               	line	54
  6639                           	
  6640                           l5837:	
  6641  0EB6                     ;LCD_hd44780u_qy_2004a.c: 54:   mCursorDisplayShiftReg= 0x06;
  6642                           	movlw	low(06h)
  6643  0EB6  3006               	movwf	(??_initLCD+0)+0
  6644  0EB7  00B2               	movf	(??_initLCD+0)+0,w
  6645  0EB8  0832               	movwf	(_mCursorDisplayShiftReg)
  6646  0EB9  00DC               	line	55
  6647                           ;LCD_hd44780u_qy_2004a.c: 55:   writeInsChk(mDisplayOnOffReg);
  6648                           	movf	(_mDisplayOnOffReg),w
  6649  0EBA  085D               	fcall	_writeInsChk
  6650  0EBB  3189  2167  318E   	line	57
  6651                           ;LCD_hd44780u_qy_2004a.c: 57:   clearDisplay();
  6652                           	fcall	_clearDisplay
  6653  0EBE  3189  2113  318E   	line	58
  6654                           ;LCD_hd44780u_qy_2004a.c: 58:   writeInsChk(0x06);
  6655                           	movlw	low(06h)
  6656  0EC1  3006               	fcall	_writeInsChk
  6657  0EC2  3189  2167  318E   	line	59
  6658                           	
  6659                           l5839:	
  6660  0EC5                     ;LCD_hd44780u_qy_2004a.c: 59:   mWritingPosition=1;
  6661                           	movlb 0	; select bank0
  6662  0EC5  0020               	clrf	(_mWritingPosition)
  6663  0EC6  01DB               	incf	(_mWritingPosition),f
  6664  0EC7  0ADB               	line	61
  6665                           	
  6666                           l262:	
  6667  0EC8                     	return
  6668  0EC8  0008               	opt stack 0
  6669                           GLOBAL	__end_of_initLCD
  6670                           	__end_of_initLCD:
  6671  0EC9                     	signat	_initLCD,89
  6672                           	global	_clearDisplay
  6673                           
  6674 ;; *************** function _clearDisplay *****************
  6675 ;; Defined at:
  6676 ;;		line 324 in file "LCD_hd44780u_qy_2004a.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;		None
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;		None
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  1    wreg      void 
  6683 ;; Registers used:
  6684 ;;		wreg, status,2, status,0, pclath, cstack
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 0/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6694 ;;Total ram usage:        0 bytes
  6695 ;; Hardware stack levels used:    1
  6696 ;; Hardware stack levels required when called:    9
  6697 ;; This function calls:
  6698 ;;		_writeInsChk
  6699 ;; This function is called by:
  6700 ;;		_main
  6701 ;;		_initLCD
  6702 ;; This function uses a non-reentrant model
  6703 ;;
  6704                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  6705                           	line	324
  6706                           global __ptext9
  6707                           __ptext9:	;psect for function _clearDisplay
  6708  0913                     psect	text9
  6709                           	file	"LCD_hd44780u_qy_2004a.c"
  6710                           	line	324
  6711                           	global	__size_of_clearDisplay
  6712                           	__size_of_clearDisplay	equ	__end_of_clearDisplay-_clearDisplay
  6713  0005                     	
  6714                           _clearDisplay:	
  6715  0913                     ;incstack = 0
  6716                           	opt	stack 5
  6717                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  6718                           	line	326
  6719                           	
  6720                           l5571:	
  6721  0913                     ;LCD_hd44780u_qy_2004a.c: 326:   writeInsChk(0x01);
  6722                           	movlw	low(01h)
  6723  0913  3001               	fcall	_writeInsChk
  6724  0914  3189  2167  3189   	line	327
  6725                           	
  6726                           l378:	
  6727  0917                     	return
  6728  0917  0008               	opt stack 0
  6729                           GLOBAL	__end_of_clearDisplay
  6730                           	__end_of_clearDisplay:
  6731  0918                     	signat	_clearDisplay,89
  6732                           	global	_writeInsChk
  6733                           
  6734 ;; *************** function _writeInsChk *****************
  6735 ;; Defined at:
  6736 ;;		line 211 in file "LCD_hd44780u_qy_2004a.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;  iOpCode         1    wreg     unsigned char 
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;  iOpCode         1   17[BANK0 ] unsigned char 
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  1    wreg      void 
  6743 ;; Registers used:
  6744 ;;		wreg, status,2, status,0, pclath, cstack
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6751 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6753 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6754 ;;Total ram usage:        1 bytes
  6755 ;; Hardware stack levels used:    1
  6756 ;; Hardware stack levels required when called:    8
  6757 ;; This function calls:
  6758 ;;		_waitLCDBusy
  6759 ;;		_writeInsNoChk
  6760 ;; This function is called by:
  6761 ;;		_initLCD
  6762 ;;		_powerOnLcd
  6763 ;;		_setNotBlinkingCursor
  6764 ;;		_setCursorOff
  6765 ;;		_clearDisplay
  6766 ;;		_moveCursorToHome
  6767 ;;		_powerOffLcd
  6768 ;;		_setBlinkingCursor
  6769 ;;		_setCursorOn
  6770 ;;		_setCursorMovingLeft
  6771 ;;		_setCursorMovingRight
  6772 ;;		_setDisplayMovingRight
  6773 ;;		_setDisplayMovingLeft
  6774 ;;		_moveCursorRight
  6775 ;;		_moveCursorLeft
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  6779                           	line	211
  6780                           global __ptext10
  6781                           __ptext10:	;psect for function _writeInsChk
  6782  0967                     psect	text10
  6783                           	file	"LCD_hd44780u_qy_2004a.c"
  6784                           	line	211
  6785                           	global	__size_of_writeInsChk
  6786                           	__size_of_writeInsChk	equ	__end_of_writeInsChk-_writeInsChk
  6787  000B                     	
  6788                           _writeInsChk:	
  6789  0967                     ;incstack = 0
  6790                           	opt	stack 6
  6791                           ; Regs used in _writeInsChk: [wreg+status,2+status,0+pclath+cstack]
  6792                           ;writeInsChk@iOpCode stored from wreg
  6793                           	movlb 0	; select bank0
  6794  0967  0020               	movwf	(writeInsChk@iOpCode)
  6795  0968  00B1               	line	213
  6796                           	
  6797                           l5407:	
  6798  0969                     ;LCD_hd44780u_qy_2004a.c: 211: void writeInsChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 2
                                 12: {;LCD_hd44780u_qy_2004a.c: 213:   waitLCDBusy();
  6799                           	fcall	_waitLCDBusy
  6800  0969  318A  22AC  3189   	line	214
  6801                           ;LCD_hd44780u_qy_2004a.c: 214:   writeInsNoChk(iOpCode);
  6802                           	movlb 0	; select bank0
  6803  096C  0020               	movf	(writeInsChk@iOpCode),w
  6804  096D  0831               	fcall	_writeInsNoChk
  6805  096E  3189  21D0  3189   	line	215
  6806                           	
  6807                           l324:	
  6808  0971                     	return
  6809  0971  0008               	opt stack 0
  6810                           GLOBAL	__end_of_writeInsChk
  6811                           	__end_of_writeInsChk:
  6812  0972                     	signat	_writeInsChk,4217
  6813                           	global	_writeInsNoChk
  6814                           
  6815 ;; *************** function _writeInsNoChk *****************
  6816 ;; Defined at:
  6817 ;;		line 217 in file "LCD_hd44780u_qy_2004a.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;  iOpCode         1    wreg     unsigned char 
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;  iOpCode         1   16[BANK0 ] unsigned char 
  6822 ;; Return value:  Size  Location     Type
  6823 ;;                  1    wreg      void 
  6824 ;; Registers used:
  6825 ;;		wreg, status,2, status,0, pclath, cstack
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/0
  6828 ;;		On exit  : 0/0
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6832 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6833 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6834 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6835 ;;Total ram usage:        2 bytes
  6836 ;; Hardware stack levels used:    1
  6837 ;; Hardware stack levels required when called:    7
  6838 ;; This function calls:
  6839 ;;		_SetToSendDataToLCD
  6840 ;;		_setData
  6841 ;; This function is called by:
  6842 ;;		_writeInsChk
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  6846                           	line	217
  6847                           global __ptext11
  6848                           __ptext11:	;psect for function _writeInsNoChk
  6849  09D0                     psect	text11
  6850                           	file	"LCD_hd44780u_qy_2004a.c"
  6851                           	line	217
  6852                           	global	__size_of_writeInsNoChk
  6853                           	__size_of_writeInsNoChk	equ	__end_of_writeInsNoChk-_writeInsNoChk
  6854  0018                     	
  6855                           _writeInsNoChk:	
  6856  09D0                     ;incstack = 0
  6857                           	opt	stack 6
  6858                           ; Regs used in _writeInsNoChk: [wreg+status,2+status,0+pclath+cstack]
  6859                           ;writeInsNoChk@iOpCode stored from wreg
  6860                           	movlb 0	; select bank0
  6861  09D0  0020               	movwf	(writeInsNoChk@iOpCode)
  6862  09D1  00B0               	line	219
  6863                           	
  6864                           l5359:	
  6865  09D2                     ;LCD_hd44780u_qy_2004a.c: 217: void writeInsNoChk(char iOpCode);LCD_hd44780u_qy_2004a.c:
                                  218: {;LCD_hd44780u_qy_2004a.c: 219:   SetToSendDataToLCD();
  6866                           	fcall	_SetToSendDataToLCD
  6867  09D2  3189  2124  3189   	line	220
  6868                           	
  6869                           l5361:	
  6870  09D5                     ;LCD_hd44780u_qy_2004a.c: 220:   PORTCbits.RC2 = 0;
  6871                           	movlb 0	; select bank0
  6872  09D5  0020               	bcf	(14),2	;volatile
  6873  09D6  110E               	line	221
  6874                           	
  6875                           l5363:	
  6876  09D7                     ;LCD_hd44780u_qy_2004a.c: 221:   PORTCbits.RC1 = 0;
  6877                           	bcf	(14),1	;volatile
  6878  09D7  108E               	line	222
  6879                           	
  6880                           l5365:	
  6881  09D8                     ;LCD_hd44780u_qy_2004a.c: 222:   setData(iOpCode >> 4);
  6882                           	movf	(writeInsNoChk@iOpCode),w
  6883  09D8  0830               	movwf	(??_writeInsNoChk+0)+0
  6884  09D9  00AF               	movlw	04h
  6885  09DA  3004               u3585:
  6886  09DB                     	lsrf	(??_writeInsNoChk+0)+0,f
  6887  09DB  36AF               	decfsz	wreg,f
  6888  09DC  0B89               	goto	u3585
  6889  09DD  29DB               	movf	0+(??_writeInsNoChk+0)+0,w
  6890  09DE  082F               	fcall	_setData
  6891  09DF  318B  23CC  3189   	line	223
  6892                           	
  6893                           l5367:	
  6894  09E2                     ;LCD_hd44780u_qy_2004a.c: 223:   setData(iOpCode);
  6895                           	movlb 0	; select bank0
  6896  09E2  0020               	movf	(writeInsNoChk@iOpCode),w
  6897  09E3  0830               	fcall	_setData
  6898  09E4  318B  23CC  3189   	line	224
  6899                           	
  6900                           l327:	
  6901  09E7                     	return
  6902  09E7  0008               	opt stack 0
  6903                           GLOBAL	__end_of_writeInsNoChk
  6904                           	__end_of_writeInsNoChk:
  6905  09E8                     	signat	_writeInsNoChk,4217
  6906                           	global	_PrintLog
  6907                           
  6908 ;; *************** function _PrintLog *****************
  6909 ;; Defined at:
  6910 ;;		line 64 in file "161518_temp_main.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;  iText           1    wreg     PTR unsigned char 
  6913 ;;		 -> wInterruptText(75), 
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;  iText           1   33[BANK0 ] PTR unsigned char 
  6916 ;;		 -> wInterruptText(75), 
  6917 ;;  wInterruptTe    1   32[BANK0 ] unsigned char 
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  1    wreg      void 
  6920 ;; Registers used:
  6921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6928 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6929 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6930 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6931 ;;Total ram usage:        4 bytes
  6932 ;; Hardware stack levels used:    1
  6933 ;; Hardware stack levels required when called:   11
  6934 ;; This function calls:
  6935 ;;		_lcdWriteText
  6936 ;;		_memset
  6937 ;;		_strlen
  6938 ;; This function is called by:
  6939 ;;		_main
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  6943                           	file	"161518_temp_main.c"
  6944                           	line	64
  6945                           global __ptext12
  6946                           __ptext12:	;psect for function _PrintLog
  6947  0B00                     psect	text12
  6948                           	file	"161518_temp_main.c"
  6949                           	line	64
  6950                           	global	__size_of_PrintLog
  6951                           	__size_of_PrintLog	equ	__end_of_PrintLog-_PrintLog
  6952  002B                     	
  6953                           _PrintLog:	
  6954  0B00                     ;incstack = 0
  6955                           	opt	stack 4
  6956                           ; Regs used in _PrintLog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6957                           ;PrintLog@iText stored from wreg
  6958                           	movlb 0	; select bank0
  6959  0B00  0020               	movwf	(PrintLog@iText)
  6960  0B01  00C1               	line	65
  6961                           	
  6962                           l5795:	
  6963  0B02                     	movf	(PrintLog@iText),w
  6964  0B02  0841               	movwf	(strlen@s)
  6965  0B03  00AC               	movlw	0x1
  6966  0B04  3001               
  6967                           	movwf	(strlen@s+1)
  6968  0B05  00AD               	fcall	_strlen
  6969  0B06  318A  220B  318B   	movlb 0	; select bank0
  6970  0B09  0020               	movf	(0+(?_strlen)),w
  6971  0B0A  082C               	movwf	(??_PrintLog+0)+0
  6972  0B0B  00BE               	movf	(??_PrintLog+0)+0,w
  6973  0B0C  083E               	movwf	(PrintLog@wInterruptTextLen)
  6974  0B0D  00C0               	line	67
  6975                           	
  6976                           l5797:	
  6977  0B0E                     	movf	((PrintLog@wInterruptTextLen)),w
  6978  0B0E  0840               	btfsc	status,2
  6979  0B0F  1903               	goto	u4111
  6980  0B10  2B12               	goto	u4110
  6981  0B11  2B13               u4111:
  6982  0B12                     	goto	l151
  6983  0B12  2B2A               u4110:
  6984  0B13                     	line	68
  6985                           	
  6986                           l5799:	
  6987  0B13                     	movf	(PrintLog@iText),w
  6988  0B13  0841               	movwf	(lcdWriteText@iText)
  6989  0B14  00B8               	movlw	0x1
  6990  0B15  3001               
  6991                           	movwf	(lcdWriteText@iText+1)
  6992  0B16  00B9               	fcall	_lcdWriteText
  6993  0B17  318A  22D6  318B   	line	69
  6994                           	
  6995                           l5801:	
  6996  0B1A                     	movlw	0
  6997  0B1A  3000               	movlb 0	; select bank0
  6998  0B1B  0020               	movwf	(memset@c)
  6999  0B1C  00AC               	movwf	(memset@c+1)
  7000  0B1D  00AD               	movf	(PrintLog@wInterruptTextLen),w
  7001  0B1E  0840               	movwf	(??_PrintLog+0)+0
  7002  0B1F  00BE               	clrf	(??_PrintLog+0)+0+1
  7003  0B20  01BF               	movf	0+(??_PrintLog+0)+0,w
  7004  0B21  083E               	movwf	(memset@n)
  7005  0B22  00AE               	movf	1+(??_PrintLog+0)+0,w
  7006  0B23  083F               	movwf	(memset@n+1)
  7007  0B24  00AF               	movf	(PrintLog@iText),w
  7008  0B25  0841               	fcall	_memset
  7009  0B26  3186  26DE  318B   	goto	l151
  7010  0B29  2B2A               	line	70
  7011                           	
  7012                           l150:	
  7013  0B2A                     	line	71
  7014                           	
  7015                           l151:	
  7016  0B2A                     	return
  7017  0B2A  0008               	opt stack 0
  7018                           GLOBAL	__end_of_PrintLog
  7019                           	__end_of_PrintLog:
  7020  0B2B                     	signat	_PrintLog,4217
  7021                           	global	_memset
  7022                           
  7023 ;; *************** function _memset *****************
  7024 ;; Defined at:
  7025 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  7026 ;; Parameters:    Size  Location     Type
  7027 ;;  dest            1    wreg     PTR void 
  7028 ;;		 -> wI2CRxBuffer(20), wI2CTxBuffer(20), wInterruptText(75), 
  7029 ;;  c               2   12[BANK0 ] int 
  7030 ;;  n               2   14[BANK0 ] unsigned int 
  7031 ;; Auto vars:     Size  Location     Type
  7032 ;;  dest            1   20[BANK0 ] PTR void 
  7033 ;;		 -> wI2CRxBuffer(20), wI2CTxBuffer(20), wInterruptText(75), 
  7034 ;;  k               2   18[BANK0 ] unsigned int 
  7035 ;;  s               1   21[BANK0 ] PTR unsigned char 
  7036 ;;		 -> wI2CRxBuffer(20), wI2CTxBuffer(20), wInterruptText(75), 
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  1    wreg      PTR void 
  7039 ;; Registers used:
  7040 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7046 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  7047 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  7048 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7049 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  7050 ;;Total ram usage:       10 bytes
  7051 ;; Hardware stack levels used:    1
  7052 ;; Hardware stack levels required when called:    6
  7053 ;; This function calls:
  7054 ;;		Nothing
  7055 ;; This function is called by:
  7056 ;;		_PrintLog
  7057 ;;		_main
  7058 ;;		_I2CInit
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           psect	text13,local,class=CODE,delta=2,merge=1,group=2
  7062                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  7063                           	line	4
  7064                           global __ptext13
  7065                           __ptext13:	;psect for function _memset
  7066  06DE                     psect	text13
  7067                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  7068                           	line	4
  7069                           	global	__size_of_memset
  7070                           	__size_of_memset	equ	__end_of_memset-_memset
  7071  00B4                     	
  7072                           _memset:	
  7073  06DE                     ;incstack = 0
  7074                           	opt	stack 9
  7075                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7076                           ;memset@dest stored from wreg
  7077                           	movlb 0	; select bank0
  7078  06DE  0020               	movwf	(memset@dest)
  7079  06DF  00B4               	line	6
  7080                           	
  7081                           l5525:	
  7082  06E0                     	movf	(memset@dest),w
  7083  06E0  0834               	movwf	(??_memset+0)+0
  7084  06E1  00B0               	movf	(??_memset+0)+0,w
  7085  06E2  0830               	movwf	(memset@s)
  7086  06E3  00B5               	line	13
  7087                           	
  7088                           l5527:	
  7089  06E4                     	movf	((memset@n)),w
  7090  06E4  082E               iorwf	((memset@n+1)),w
  7091  06E5  042F               	btfss	status,2
  7092  06E6  1D03               	goto	u3731
  7093  06E7  2EE9               	goto	u3730
  7094  06E8  2EEA               u3731:
  7095  06E9                     	goto	l5531
  7096  06E9  2EEC               u3730:
  7097  06EA                     	goto	l1364
  7098  06EA  2F91               	
  7099                           l5529:	
  7100  06EB                     ;	Return value of _memset is never used
  7101                           	goto	l1364
  7102  06EB  2F91               	
  7103                           l1363:	
  7104  06EC                     	line	14
  7105                           	
  7106                           l5531:	
  7107  06EC                     	movf	(memset@c),w
  7108  06EC  082C               	movwf	(??_memset+0)+0
  7109  06ED  00B0               	movf	(memset@s),w
  7110  06EE  0835               	movwf	fsr1l
  7111  06EF  0086               	movlw 1	; select bank2/3
  7112  06F0  3001               	movwf fsr1h	
  7113  06F1  0087               	
  7114                           	movf	(??_memset+0)+0,w
  7115  06F2  0830               	movwf	indf1
  7116  06F3  0081               	line	15
  7117                           	
  7118                           l5533:	
  7119  06F4                     	movf	(memset@c),w
  7120  06F4  082C               	movwf	(??_memset+0)+0
  7121  06F5  00B0               	movf	(memset@n),w
  7122  06F6  082E               	addlw	0FFh
  7123  06F7  3EFF               	addwf	(memset@s),w
  7124  06F8  0735               	movwf	(??_memset+1)+0
  7125  06F9  00B1               	movf	0+(??_memset+1)+0,w
  7126  06FA  0831               	movwf	fsr1l
  7127  06FB  0086               	movlw 1	; select bank2/3
  7128  06FC  3001               	movwf fsr1h	
  7129  06FD  0087               	
  7130                           	movf	(??_memset+0)+0,w
  7131  06FE  0830               	movwf	indf1
  7132  06FF  0081               	line	16
  7133                           	
  7134                           l5535:	
  7135  0700                     	movlw	0
  7136  0700  3000               	subwf	(memset@n+1),w
  7137  0701  022F               	movlw	03h
  7138  0702  3003               	skipnz
  7139  0703  1903               	subwf	(memset@n),w
  7140  0704  022E               	skipnc
  7141  0705  1803               	goto	u3741
  7142  0706  2F08               	goto	u3740
  7143  0707  2F09               u3741:
  7144  0708                     	goto	l5539
  7145  0708  2F0B               u3740:
  7146  0709                     	goto	l1364
  7147  0709  2F91               	
  7148                           l5537:	
  7149  070A                     ;	Return value of _memset is never used
  7150                           	goto	l1364
  7151  070A  2F91               	
  7152                           l1365:	
  7153  070B                     	line	17
  7154                           	
  7155                           l5539:	
  7156  070B                     	movf	(memset@c),w
  7157  070B  082C               	movwf	(??_memset+0)+0
  7158  070C  00B0               	incf	(memset@s),w
  7159  070D  0A35               	movwf	fsr1l
  7160  070E  0086               	movlw 1	; select bank2/3
  7161  070F  3001               	movwf fsr1h	
  7162  0710  0087               	
  7163                           	movf	(??_memset+0)+0,w
  7164  0711  0830               	movwf	indf1
  7165  0712  0081               	line	18
  7166                           	
  7167                           l5541:	
  7168  0713                     	movf	(memset@c),w
  7169  0713  082C               	movwf	(??_memset+0)+0
  7170  0714  00B0               	movf	(memset@s),w
  7171  0715  0835               	addlw	02h
  7172  0716  3E02               	movwf	fsr1l
  7173  0717  0086               	movlw 1	; select bank2/3
  7174  0718  3001               	movwf fsr1h	
  7175  0719  0087               	
  7176                           	movf	(??_memset+0)+0,w
  7177  071A  0830               	movwf	indf1
  7178  071B  0081               	line	19
  7179                           	
  7180                           l5543:	
  7181  071C                     	movf	(memset@c),w
  7182  071C  082C               	movwf	(??_memset+0)+0
  7183  071D  00B0               	movf	(memset@n),w
  7184  071E  082E               	addlw	0FEh
  7185  071F  3EFE               	addwf	(memset@s),w
  7186  0720  0735               	movwf	(??_memset+1)+0
  7187  0721  00B1               	movf	0+(??_memset+1)+0,w
  7188  0722  0831               	movwf	fsr1l
  7189  0723  0086               	movlw 1	; select bank2/3
  7190  0724  3001               	movwf fsr1h	
  7191  0725  0087               	
  7192                           	movf	(??_memset+0)+0,w
  7193  0726  0830               	movwf	indf1
  7194  0727  0081               	line	20
  7195                           	
  7196                           l5545:	
  7197  0728                     	movf	(memset@c),w
  7198  0728  082C               	movwf	(??_memset+0)+0
  7199  0729  00B0               	movf	(memset@n),w
  7200  072A  082E               	addlw	0FDh
  7201  072B  3EFD               	addwf	(memset@s),w
  7202  072C  0735               	movwf	(??_memset+1)+0
  7203  072D  00B1               	movf	0+(??_memset+1)+0,w
  7204  072E  0831               	movwf	fsr1l
  7205  072F  0086               	movlw 1	; select bank2/3
  7206  0730  3001               	movwf fsr1h	
  7207  0731  0087               	
  7208                           	movf	(??_memset+0)+0,w
  7209  0732  0830               	movwf	indf1
  7210  0733  0081               	line	21
  7211                           	
  7212                           l5547:	
  7213  0734                     	movlw	0
  7214  0734  3000               	subwf	(memset@n+1),w
  7215  0735  022F               	movlw	07h
  7216  0736  3007               	skipnz
  7217  0737  1903               	subwf	(memset@n),w
  7218  0738  022E               	skipnc
  7219  0739  1803               	goto	u3751
  7220  073A  2F3C               	goto	u3750
  7221  073B  2F3D               u3751:
  7222  073C                     	goto	l5551
  7223  073C  2F3F               u3750:
  7224  073D                     	goto	l1364
  7225  073D  2F91               	
  7226                           l5549:	
  7227  073E                     ;	Return value of _memset is never used
  7228                           	goto	l1364
  7229  073E  2F91               	
  7230                           l1366:	
  7231  073F                     	line	22
  7232                           	
  7233                           l5551:	
  7234  073F                     	movf	(memset@c),w
  7235  073F  082C               	movwf	(??_memset+0)+0
  7236  0740  00B0               	movf	(memset@s),w
  7237  0741  0835               	addlw	03h
  7238  0742  3E03               	movwf	fsr1l
  7239  0743  0086               	movlw 1	; select bank2/3
  7240  0744  3001               	movwf fsr1h	
  7241  0745  0087               	
  7242                           	movf	(??_memset+0)+0,w
  7243  0746  0830               	movwf	indf1
  7244  0747  0081               	line	23
  7245                           	movf	(memset@c),w
  7246  0748  082C               	movwf	(??_memset+0)+0
  7247  0749  00B0               	movf	(memset@n),w
  7248  074A  082E               	addlw	0FCh
  7249  074B  3EFC               	addwf	(memset@s),w
  7250  074C  0735               	movwf	(??_memset+1)+0
  7251  074D  00B1               	movf	0+(??_memset+1)+0,w
  7252  074E  0831               	movwf	fsr1l
  7253  074F  0086               	movlw 1	; select bank2/3
  7254  0750  3001               	movwf fsr1h	
  7255  0751  0087               	
  7256                           	movf	(??_memset+0)+0,w
  7257  0752  0830               	movwf	indf1
  7258  0753  0081               	line	24
  7259                           	
  7260                           l5553:	
  7261  0754                     	movlw	0
  7262  0754  3000               	subwf	(memset@n+1),w
  7263  0755  022F               	movlw	09h
  7264  0756  3009               	skipnz
  7265  0757  1903               	subwf	(memset@n),w
  7266  0758  022E               	skipnc
  7267  0759  1803               	goto	u3761
  7268  075A  2F5C               	goto	u3760
  7269  075B  2F5D               u3761:
  7270  075C                     	goto	l5557
  7271  075C  2F5F               u3760:
  7272  075D                     	goto	l1364
  7273  075D  2F91               	
  7274                           l5555:	
  7275  075E                     ;	Return value of _memset is never used
  7276                           	goto	l1364
  7277  075E  2F91               	
  7278                           l1367:	
  7279  075F                     	line	31
  7280                           	
  7281                           l5557:	
  7282  075F                     	comf	(memset@s),w
  7283  075F  0935               	movwf	(??_memset+0)+0
  7284  0760  00B0               	comf	(memset@s+1),w
  7285  0761  0936               	movwf	((??_memset+0)+0+1)
  7286  0762  00B1               	incf	(??_memset+0)+0,f
  7287  0763  0AB0               	skipnz
  7288  0764  1903               	incf	((??_memset+0)+0+1),f
  7289  0765  0AB1               	movlw	0
  7290  0766  3000               	andwf	0+(??_memset+0)+0,w
  7291  0767  0530               	movwf	(memset@k)
  7292  0768  00B2               	movlw	0
  7293  0769  3000               	andwf	1+(??_memset+0)+0,w
  7294  076A  0531               	movwf	1+(memset@k)
  7295  076B  00B3               	line	32
  7296                           	movf	(memset@k),w
  7297  076C  0832               	movwf	(??_memset+0)+0
  7298  076D  00B0               	movf	(??_memset+0)+0,w
  7299  076E  0830               	addwf	(memset@s),f
  7300  076F  07B5               	line	33
  7301                           	
  7302                           l5559:	
  7303  0770                     	movf	(memset@k),w
  7304  0770  0832               	subwf	(memset@n),f
  7305  0771  02AE               	movf	(memset@k+1),w
  7306  0772  0833               	subwfb	(memset@n+1),f
  7307  0773  3BAF               	line	34
  7308                           	
  7309                           l5561:	
  7310  0774                     	movlw	0FCh
  7311  0774  30FC               	andwf	(memset@n),f
  7312  0775  05AE               	movlw	0FFh
  7313  0776  30FF               	andwf	(memset@n+1),f
  7314  0777  05AF               	line	86
  7315                           	goto	l5569
  7316  0778  2F8A               	
  7317                           l1369:	
  7318  0779                     	
  7319                           l5563:	
  7320  0779                     	movf	(memset@c),w
  7321  0779  082C               	movwf	(??_memset+0)+0
  7322  077A  00B0               	movf	(memset@s),w
  7323  077B  0835               	movwf	fsr1l
  7324  077C  0086               	movlw 1	; select bank2/3
  7325  077D  3001               	movwf fsr1h	
  7326  077E  0087               	
  7327                           	movf	(??_memset+0)+0,w
  7328  077F  0830               	movwf	indf1
  7329  0780  0081               	
  7330                           l5565:	
  7331  0781                     	movlw	01h
  7332  0781  3001               	subwf	(memset@n),f
  7333  0782  02AE               	movlw	0
  7334  0783  3000               	subwfb	(memset@n+1),f
  7335  0784  3BAF               	
  7336                           l5567:	
  7337  0785                     	movlw	low(01h)
  7338  0785  3001               	movwf	(??_memset+0)+0
  7339  0786  00B0               	movf	(??_memset+0)+0,w
  7340  0787  0830               	addwf	(memset@s),f
  7341  0788  07B5               	goto	l5569
  7342  0789  2F8A               	
  7343                           l1368:	
  7344  078A                     	
  7345                           l5569:	
  7346  078A                     	movf	((memset@n)),w
  7347  078A  082E               iorwf	((memset@n+1)),w
  7348  078B  042F               	btfss	status,2
  7349  078C  1D03               	goto	u3771
  7350  078D  2F8F               	goto	u3770
  7351  078E  2F90               u3771:
  7352  078F                     	goto	l5563
  7353  078F  2F79               u3770:
  7354  0790                     	goto	l1364
  7355  0790  2F91               	
  7356                           l1370:	
  7357  0791                     	line	90
  7358                           ;	Return value of _memset is never used
  7359                           	
  7360                           l1364:	
  7361  0791                     	return
  7362  0791  0008               	opt stack 0
  7363                           GLOBAL	__end_of_memset
  7364                           	__end_of_memset:
  7365  0792                     	signat	_memset,12409
  7366                           	global	_lcdWriteText
  7367                           
  7368 ;; *************** function _lcdWriteText *****************
  7369 ;; Defined at:
  7370 ;;		line 63 in file "LCD_hd44780u_qy_2004a.c"
  7371 ;; Parameters:    Size  Location     Type
  7372 ;;  iText           2   24[BANK0 ] PTR unsigned char 
  7373 ;;		 -> Esp8266Entrypoint@wText(3), Esp8266Entrypoint@wReturnNumber(4), STR_39(4), STR_36(10), 
  7374 ;;		 -> STR_34(4), STR_10(14), NULL(0), myint@wText(3), 
  7375 ;;		 -> STR_7(16), STR_6(17), STR_5(17), STR_4(17), 
  7376 ;;		 -> STR_3(16), main@wReadout(20), STR_2(17), STR_1(16), 
  7377 ;;		 -> wInterruptText(75), 
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;  wCharReading    1   29[BANK0 ] unsigned char 
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1    wreg      void 
  7382 ;; Registers used:
  7383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7389 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7390 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7391 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  7392 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  7393 ;;Total ram usage:        6 bytes
  7394 ;; Hardware stack levels used:    1
  7395 ;; Hardware stack levels required when called:   10
  7396 ;; This function calls:
  7397 ;;		_writeTxtChk
  7398 ;; This function is called by:
  7399 ;;		_PrintLog
  7400 ;;		_main
  7401 ;;		_Esp8266Init
  7402 ;;		_Esp8266Entrypoint
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  7406                           	file	"LCD_hd44780u_qy_2004a.c"
  7407                           	line	63
  7408                           global __ptext14
  7409                           __ptext14:	;psect for function _lcdWriteText
  7410  0AD6                     psect	text14
  7411                           	file	"LCD_hd44780u_qy_2004a.c"
  7412                           	line	63
  7413                           	global	__size_of_lcdWriteText
  7414                           	__size_of_lcdWriteText	equ	__end_of_lcdWriteText-_lcdWriteText
  7415  002A                     	
  7416                           _lcdWriteText:	
  7417  0AD6                     ;incstack = 0
  7418                           	opt	stack 5
  7419                           ; Regs used in _lcdWriteText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7420                           	line	65
  7421                           	
  7422                           l5517:	
  7423  0AD6                     ;LCD_hd44780u_qy_2004a.c: 63: void lcdWriteText(char *iText);LCD_hd44780u_qy_2004a.c: 64
                                 :  {;LCD_hd44780u_qy_2004a.c: 65:   unsigned char wCharReadingPos = 0;
  7424                           	movlb 0	; select bank0
  7425  0AD6  0020               	clrf	(lcdWriteText@wCharReadingPos)
  7426  0AD7  01BD               	line	66
  7427                           ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
  7428                           	goto	l5523
  7429  0AD8  2AEE               	
  7430                           l266:	
  7431  0AD9                     	line	68
  7432                           	
  7433                           l5519:	
  7434  0AD9                     ;LCD_hd44780u_qy_2004a.c: 67:   {;LCD_hd44780u_qy_2004a.c: 68:     writeTxtChk(iText[wCh
                                 arReadingPos]);
  7435                           	movf	(lcdWriteText@iText+1),w
  7436  0AD9  0839               	movwf	(??_lcdWriteText+0)+0+1
  7437  0ADA  00BB               	movf	(lcdWriteText@iText),w
  7438  0ADB  0838               	movwf	(??_lcdWriteText+0)+0
  7439  0ADC  00BA               	movf	(lcdWriteText@wCharReadingPos),w
  7440  0ADD  083D               	addwf	(??_lcdWriteText+0)+0,w
  7441  0ADE  073A               	movwf	fsr0l
  7442  0ADF  0084               	movf	(??_lcdWriteText+0)+1,w
  7443  0AE0  083B               	skipnc
  7444  0AE1  1803               	incf	(??_lcdWriteText+0)+1,w
  7445  0AE2  0A3B               	movwf	fsr0h
  7446  0AE3  0085               
  7447                           	movf	indf0,w ;code access
  7448  0AE4  0800               	fcall	_writeTxtChk
  7449  0AE5  318F  2761  318A   	line	69
  7450                           	
  7451                           l5521:	
  7452  0AE8                     ;LCD_hd44780u_qy_2004a.c: 69:     wCharReadingPos++;
  7453                           	movlw	low(01h)
  7454  0AE8  3001               	movlb 0	; select bank0
  7455  0AE9  0020               	movwf	(??_lcdWriteText+0)+0
  7456  0AEA  00BA               	movf	(??_lcdWriteText+0)+0,w
  7457  0AEB  083A               	addwf	(lcdWriteText@wCharReadingPos),f
  7458  0AEC  07BD               	goto	l5523
  7459  0AED  2AEE               	line	70
  7460                           ;LCD_hd44780u_qy_2004a.c: 70:   }
  7461                           	
  7462                           l265:	
  7463  0AEE                     	line	66
  7464                           	
  7465                           l5523:	
  7466  0AEE                     ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
  7467                           	movf	(lcdWriteText@iText+1),w
  7468  0AEE  0839               	movwf	(??_lcdWriteText+0)+0+1
  7469  0AEF  00BB               	movf	(lcdWriteText@iText),w
  7470  0AF0  0838               	movwf	(??_lcdWriteText+0)+0
  7471  0AF1  00BA               	movf	(lcdWriteText@wCharReadingPos),w
  7472  0AF2  083D               	addwf	(??_lcdWriteText+0)+0,w
  7473  0AF3  073A               	movwf	fsr0l
  7474  0AF4  0084               	movf	(??_lcdWriteText+0)+1,w
  7475  0AF5  083B               	skipnc
  7476  0AF6  1803               	incf	(??_lcdWriteText+0)+1,w
  7477  0AF7  0A3B               	movwf	fsr0h
  7478  0AF8  0085               
  7479                           	moviw	fsr0++
  7480  0AF9  0012               	btfss	status,2
  7481  0AFA  1D03               	goto	u3721
  7482  0AFB  2AFD               	goto	u3720
  7483  0AFC  2AFE               u3721:
  7484  0AFD                     	goto	l5519
  7485  0AFD  2AD9               u3720:
  7486  0AFE                     	goto	l268
  7487  0AFE  2AFF               	
  7488                           l267:	
  7489  0AFF                     	line	72
  7490                           	
  7491                           l268:	
  7492  0AFF                     	return
  7493  0AFF  0008               	opt stack 0
  7494                           GLOBAL	__end_of_lcdWriteText
  7495                           	__end_of_lcdWriteText:
  7496  0B00                     	signat	_lcdWriteText,4217
  7497                           	global	_writeTxtChk
  7498                           
  7499 ;; *************** function _writeTxtChk *****************
  7500 ;; Defined at:
  7501 ;;		line 154 in file "LCD_hd44780u_qy_2004a.c"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;  iOpCode         1    wreg     unsigned char 
  7504 ;; Auto vars:     Size  Location     Type
  7505 ;;  iOpCode         1   23[BANK0 ] unsigned char 
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  1    wreg      void 
  7508 ;; Registers used:
  7509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7516 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7517 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7518 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  7519 ;;Total ram usage:        3 bytes
  7520 ;; Hardware stack levels used:    1
  7521 ;; Hardware stack levels required when called:    9
  7522 ;; This function calls:
  7523 ;;		_SetToSendDataToLCD
  7524 ;;		_setCursorPosition
  7525 ;;		_setData
  7526 ;;		_waitLCDBusy
  7527 ;; This function is called by:
  7528 ;;		_lcdWriteText
  7529 ;;		_lcdWriteAllText
  7530 ;;		_lcdWriteRotaryBuffer
  7531 ;;		_lcdWriteRotText
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  7535                           	line	154
  7536                           global __ptext15
  7537                           __ptext15:	;psect for function _writeTxtChk
  7538  0F61                     psect	text15
  7539                           	file	"LCD_hd44780u_qy_2004a.c"
  7540                           	line	154
  7541                           	global	__size_of_writeTxtChk
  7542                           	__size_of_writeTxtChk	equ	__end_of_writeTxtChk-_writeTxtChk
  7543  009F                     	
  7544                           _writeTxtChk:	
  7545  0F61                     ;incstack = 0
  7546                           	opt	stack 5
  7547                           ; Regs used in _writeTxtChk: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7548                           ;writeTxtChk@iOpCode stored from wreg
  7549                           	movlb 0	; select bank0
  7550  0F61  0020               	movwf	(writeTxtChk@iOpCode)
  7551  0F62  00B7               	line	156
  7552                           	
  7553                           l5409:	
  7554  0F63                     ;LCD_hd44780u_qy_2004a.c: 154: void writeTxtChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 55: {;LCD_hd44780u_qy_2004a.c: 156:     if(iOpCode == '\r')
  7555                           		movlw	13
  7556  0F63  300D               	xorwf	((writeTxtChk@iOpCode)),w
  7557  0F64  0637               	btfss	status,2
  7558  0F65  1D03               	goto	u3631
  7559  0F66  2F68               	goto	u3630
  7560  0F67  2F69               u3631:
  7561  0F68                     	goto	l5413
  7562  0F68  2F6B               u3630:
  7563  0F69                     	goto	l307
  7564  0F69  2FFF               	line	158
  7565                           	
  7566                           l5411:	
  7567  0F6A                     ;LCD_hd44780u_qy_2004a.c: 157:     {;LCD_hd44780u_qy_2004a.c: 158:       return;
  7568                           	goto	l307
  7569  0F6A  2FFF               	line	159
  7570                           ;LCD_hd44780u_qy_2004a.c: 159:     }
  7571                           	
  7572                           l306:	
  7573  0F6B                     	line	160
  7574                           	
  7575                           l5413:	
  7576  0F6B                     ;LCD_hd44780u_qy_2004a.c: 160:   SetToSendDataToLCD();
  7577                           	fcall	_SetToSendDataToLCD
  7578  0F6B  3189  2124  318F   	line	161
  7579                           	
  7580                           l5415:	
  7581  0F6E                     ;LCD_hd44780u_qy_2004a.c: 161:   PORTCbits.RC2 = 1;
  7582                           	movlb 0	; select bank0
  7583  0F6E  0020               	bsf	(14),2	;volatile
  7584  0F6F  150E               	line	162
  7585                           	
  7586                           l5417:	
  7587  0F70                     ;LCD_hd44780u_qy_2004a.c: 162:   PORTCbits.RC1 = 0;
  7588                           	bcf	(14),1	;volatile
  7589  0F70  108E               	line	163
  7590                           	
  7591                           l5419:	
  7592  0F71                     ;LCD_hd44780u_qy_2004a.c: 163:   if(iOpCode == '\n')
  7593                           		movlw	10
  7594  0F71  300A               	xorwf	((writeTxtChk@iOpCode)),w
  7595  0F72  0637               	btfss	status,2
  7596  0F73  1D03               	goto	u3641
  7597  0F74  2F76               	goto	u3640
  7598  0F75  2F77               u3641:
  7599  0F76                     	goto	l5449
  7600  0F76  2FC9               u3640:
  7601  0F77                     	line	165
  7602                           	
  7603                           l5421:	
  7604  0F77                     ;LCD_hd44780u_qy_2004a.c: 164:   {;LCD_hd44780u_qy_2004a.c: 165:    if(mWritingPosition 
                                 < 20)
  7605                           	movlw	low(014h)
  7606  0F77  3014               	subwf	(_mWritingPosition),w
  7607  0F78  025B               	skipnc
  7608  0F79  1803               	goto	u3651
  7609  0F7A  2F7C               	goto	u3650
  7610  0F7B  2F7D               u3651:
  7611  0F7C                     	goto	l5425
  7612  0F7C  2F83               u3650:
  7613  0F7D                     	line	167
  7614                           	
  7615                           l5423:	
  7616  0F7D                     ;LCD_hd44780u_qy_2004a.c: 166:    {;LCD_hd44780u_qy_2004a.c: 167:        setCursorPositi
                                 on(1,0);
  7617                           	clrf	(setCursorPosition@iPosition)
  7618  0F7D  01B0               	movlw	low(01h)
  7619  0F7E  3001               	fcall	_setCursorPosition
  7620  0F7F  318D  2540  318F   	line	168
  7621                           ;LCD_hd44780u_qy_2004a.c: 168:    }
  7622                           	goto	l307
  7623  0F82  2FFF               	line	169
  7624                           ;LCD_hd44780u_qy_2004a.c: 169:    else if(mWritingPosition < 40)
  7625                           	
  7626                           l309:	
  7627  0F83                     	
  7628                           l5425:	
  7629  0F83                     	movlw	low(028h)
  7630  0F83  3028               	movlb 0	; select bank0
  7631  0F84  0020               	subwf	(_mWritingPosition),w
  7632  0F85  025B               	skipnc
  7633  0F86  1803               	goto	u3661
  7634  0F87  2F89               	goto	u3660
  7635  0F88  2F8A               u3661:
  7636  0F89                     	goto	l5429
  7637  0F89  2F90               u3660:
  7638  0F8A                     	line	171
  7639                           	
  7640                           l5427:	
  7641  0F8A                     ;LCD_hd44780u_qy_2004a.c: 170:    {;LCD_hd44780u_qy_2004a.c: 171:        setCursorPositi
                                 on(2,0);
  7642                           	clrf	(setCursorPosition@iPosition)
  7643  0F8A  01B0               	movlw	low(02h)
  7644  0F8B  3002               	fcall	_setCursorPosition
  7645  0F8C  318D  2540  318F   	line	172
  7646                           ;LCD_hd44780u_qy_2004a.c: 172:    }
  7647                           	goto	l307
  7648  0F8F  2FFF               	line	173
  7649                           ;LCD_hd44780u_qy_2004a.c: 173:    else if(mWritingPosition < 60)
  7650                           	
  7651                           l311:	
  7652  0F90                     	
  7653                           l5429:	
  7654  0F90                     	movlw	low(03Ch)
  7655  0F90  303C               	movlb 0	; select bank0
  7656  0F91  0020               	subwf	(_mWritingPosition),w
  7657  0F92  025B               	skipnc
  7658  0F93  1803               	goto	u3671
  7659  0F94  2F96               	goto	u3670
  7660  0F95  2F97               u3671:
  7661  0F96                     	goto	l5433
  7662  0F96  2F9D               u3670:
  7663  0F97                     	line	175
  7664                           	
  7665                           l5431:	
  7666  0F97                     ;LCD_hd44780u_qy_2004a.c: 174:    {;LCD_hd44780u_qy_2004a.c: 175:        setCursorPositi
                                 on(3,0);
  7667                           	clrf	(setCursorPosition@iPosition)
  7668  0F97  01B0               	movlw	low(03h)
  7669  0F98  3003               	fcall	_setCursorPosition
  7670  0F99  318D  2540  318F   	line	176
  7671                           ;LCD_hd44780u_qy_2004a.c: 176:    }
  7672                           	goto	l307
  7673  0F9C  2FFF               	line	177
  7674                           ;LCD_hd44780u_qy_2004a.c: 177:    else
  7675                           	
  7676                           l313:	
  7677  0F9D                     	line	179
  7678                           	
  7679                           l5433:	
  7680  0F9D                     ;LCD_hd44780u_qy_2004a.c: 178:    {;LCD_hd44780u_qy_2004a.c: 179:        setCursorPositi
                                 on(0,0);
  7681                           	movlb 0	; select bank0
  7682  0F9D  0020               	clrf	(setCursorPosition@iPosition)
  7683  0F9E  01B0               	movlw	low(0)
  7684  0F9F  3000               	fcall	_setCursorPosition
  7685  0FA0  318D  2540  318F   	goto	l307
  7686  0FA3  2FFF               	line	180
  7687                           ;LCD_hd44780u_qy_2004a.c: 180:    }
  7688                           	
  7689                           l314:	
  7690  0FA4                     	goto	l307
  7691  0FA4  2FFF               	
  7692                           l312:	
  7693  0FA5                     	goto	l307
  7694  0FA5  2FFF               	
  7695                           l310:	
  7696  0FA6                     	goto	l307
  7697  0FA6  2FFF               	line	181
  7698                           	
  7699                           l5435:	
  7700  0FA7                     ;LCD_hd44780u_qy_2004a.c: 181:    return;
  7701                           	goto	l307
  7702  0FA7  2FFF               	line	182
  7703                           ;LCD_hd44780u_qy_2004a.c: 182:   }
  7704                           	
  7705                           l308:	
  7706  0FA8                     	line	183
  7707                           ;LCD_hd44780u_qy_2004a.c: 183:   switch(mWritingPosition)
  7708                           	goto	l5449
  7709  0FA8  2FC9               	line	185
  7710                           ;LCD_hd44780u_qy_2004a.c: 184:   {;LCD_hd44780u_qy_2004a.c: 185:     case 20:
  7711                           	
  7712                           l316:	
  7713  0FA9                     	line	186
  7714                           	
  7715                           l5437:	
  7716  0FA9                     ;LCD_hd44780u_qy_2004a.c: 186:       setCursorPosition(1,0);
  7717                           	movlb 0	; select bank0
  7718  0FA9  0020               	clrf	(setCursorPosition@iPosition)
  7719  0FAA  01B0               	movlw	low(01h)
  7720  0FAB  3001               	fcall	_setCursorPosition
  7721  0FAC  318D  2540  318F   	line	187
  7722                           ;LCD_hd44780u_qy_2004a.c: 187:       break;
  7723                           	goto	l5451
  7724  0FAF  2FE0               	line	188
  7725                           ;LCD_hd44780u_qy_2004a.c: 188:     case 40:
  7726                           	
  7727                           l318:	
  7728  0FB0                     	line	189
  7729                           	
  7730                           l5439:	
  7731  0FB0                     ;LCD_hd44780u_qy_2004a.c: 189:       setCursorPosition(2,0);
  7732                           	movlb 0	; select bank0
  7733  0FB0  0020               	clrf	(setCursorPosition@iPosition)
  7734  0FB1  01B0               	movlw	low(02h)
  7735  0FB2  3002               	fcall	_setCursorPosition
  7736  0FB3  318D  2540  318F   	line	190
  7737                           ;LCD_hd44780u_qy_2004a.c: 190:       break;
  7738                           	goto	l5451
  7739  0FB6  2FE0               	line	191
  7740                           ;LCD_hd44780u_qy_2004a.c: 191:     case 60:
  7741                           	
  7742                           l319:	
  7743  0FB7                     	line	192
  7744                           	
  7745                           l5441:	
  7746  0FB7                     ;LCD_hd44780u_qy_2004a.c: 192:       setCursorPosition(3,0);
  7747                           	movlb 0	; select bank0
  7748  0FB7  0020               	clrf	(setCursorPosition@iPosition)
  7749  0FB8  01B0               	movlw	low(03h)
  7750  0FB9  3003               	fcall	_setCursorPosition
  7751  0FBA  318D  2540  318F   	line	193
  7752                           ;LCD_hd44780u_qy_2004a.c: 193:       break;
  7753                           	goto	l5451
  7754  0FBD  2FE0               	line	194
  7755                           ;LCD_hd44780u_qy_2004a.c: 194:     case 80:
  7756                           	
  7757                           l320:	
  7758  0FBE                     	line	195
  7759                           	
  7760                           l5443:	
  7761  0FBE                     ;LCD_hd44780u_qy_2004a.c: 195:       setCursorPosition(0,0);
  7762                           	movlb 0	; select bank0
  7763  0FBE  0020               	clrf	(setCursorPosition@iPosition)
  7764  0FBF  01B0               	movlw	low(0)
  7765  0FC0  3000               	fcall	_setCursorPosition
  7766  0FC1  318D  2540  318F   	line	196
  7767                           	
  7768                           l5445:	
  7769  0FC4                     ;LCD_hd44780u_qy_2004a.c: 196:       mWritingPosition = 0;
  7770                           	movlb 0	; select bank0
  7771  0FC4  0020               	clrf	(_mWritingPosition)
  7772  0FC5  01DB               	line	197
  7773                           ;LCD_hd44780u_qy_2004a.c: 197:       break;
  7774                           	goto	l5451
  7775  0FC6  2FE0               	line	198
  7776                           ;LCD_hd44780u_qy_2004a.c: 198:     default:
  7777                           	
  7778                           l321:	
  7779  0FC7                     	line	199
  7780                           ;LCD_hd44780u_qy_2004a.c: 199:       break;
  7781                           	goto	l5451
  7782  0FC7  2FE0               	line	200
  7783                           	
  7784                           l5447:	
  7785  0FC8                     ;LCD_hd44780u_qy_2004a.c: 200:   }
  7786                           	goto	l5451
  7787  0FC8  2FE0               	
  7788                           l315:	
  7789  0FC9                     	
  7790                           l5449:	
  7791  0FC9                     	movlb 0	; select bank0
  7792  0FC9  0020               	movf	(_mWritingPosition),w
  7793  0FCA  085B               	movwf	(??_writeTxtChk+0)+0
  7794  0FCB  00B5               	clrf	(??_writeTxtChk+0)+0+1
  7795  0FCC  01B6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  7796                           ; Switch size 1, requested type "space"
  7797                           ; Number of cases is 1, Range of values is 0 to 0
  7798                           ; switch strategies available:
  7799                           ; Name         Instructions Cycles
  7800                           ; simple_byte            4     3 (average)
  7801                           ; direct_byte            8     6 (fixed)
  7802                           ; jumptable            260     6 (fixed)
  7803                           ;	Chosen strategy is simple_byte
  7804                           
  7805                           	movf 1+(??_writeTxtChk+0)+0,w
  7806  0FCD  0836               	opt asmopt_push
  7807                           	opt asmopt_off
  7808                           	xorlw	0^0	; case 0
  7809  0FCE  3A00               	skipnz
  7810  0FCF  1903               	goto	l6939
  7811  0FD0  2FD2               	goto	l5451
  7812  0FD1  2FE0               	opt asmopt_pop
  7813                           	
  7814                           l6939:	
  7815  0FD2                     ; Switch size 1, requested type "space"
  7816                           ; Number of cases is 4, Range of values is 20 to 80
  7817                           ; switch strategies available:
  7818                           ; Name         Instructions Cycles
  7819                           ; simple_byte           13     7 (average)
  7820                           ; direct_byte          131     9 (fixed)
  7821                           ; jumptable            263     9 (fixed)
  7822                           ;	Chosen strategy is simple_byte
  7823                           
  7824                           	movf 0+(??_writeTxtChk+0)+0,w
  7825  0FD2  0835               	opt asmopt_push
  7826                           	opt asmopt_off
  7827                           	xorlw	20^0	; case 20
  7828  0FD3  3A14               	skipnz
  7829  0FD4  1903               	goto	l5437
  7830  0FD5  2FA9               	xorlw	40^20	; case 40
  7831  0FD6  3A3C               	skipnz
  7832  0FD7  1903               	goto	l5439
  7833  0FD8  2FB0               	xorlw	60^40	; case 60
  7834  0FD9  3A14               	skipnz
  7835  0FDA  1903               	goto	l5441
  7836  0FDB  2FB7               	xorlw	80^60	; case 80
  7837  0FDC  3A6C               	skipnz
  7838  0FDD  1903               	goto	l5443
  7839  0FDE  2FBE               	goto	l5451
  7840  0FDF  2FE0               	opt asmopt_pop
  7841                           
  7842                           	
  7843                           l317:	
  7844  0FE0                     	line	201
  7845                           	
  7846                           l5451:	
  7847  0FE0                     ;LCD_hd44780u_qy_2004a.c: 201:   waitLCDBusy();
  7848                           	fcall	_waitLCDBusy
  7849  0FE0  318A  22AC  318F   	line	202
  7850                           	
  7851                           l5453:	
  7852  0FE3                     ;LCD_hd44780u_qy_2004a.c: 202:   SetToSendDataToLCD();
  7853                           	fcall	_SetToSendDataToLCD
  7854  0FE3  3189  2124  318F   	line	203
  7855                           	
  7856                           l5455:	
  7857  0FE6                     ;LCD_hd44780u_qy_2004a.c: 203:   PORTCbits.RC2 = 1;
  7858                           	movlb 0	; select bank0
  7859  0FE6  0020               	bsf	(14),2	;volatile
  7860  0FE7  150E               	line	204
  7861                           	
  7862                           l5457:	
  7863  0FE8                     ;LCD_hd44780u_qy_2004a.c: 204:   PORTCbits.RC1 = 0;
  7864                           	bcf	(14),1	;volatile
  7865  0FE8  108E               	line	205
  7866                           	
  7867                           l5459:	
  7868  0FE9                     ;LCD_hd44780u_qy_2004a.c: 205:   setData(iOpCode >> 4);
  7869                           	movf	(writeTxtChk@iOpCode),w
  7870  0FE9  0837               	movwf	(??_writeTxtChk+0)+0
  7871  0FEA  00B5               	movlw	04h
  7872  0FEB  3004               u3685:
  7873  0FEC                     	lsrf	(??_writeTxtChk+0)+0,f
  7874  0FEC  36B5               	decfsz	wreg,f
  7875  0FED  0B89               	goto	u3685
  7876  0FEE  2FEC               	movf	0+(??_writeTxtChk+0)+0,w
  7877  0FEF  0835               	fcall	_setData
  7878  0FF0  318B  23CC  318F   	line	206
  7879                           	
  7880                           l5461:	
  7881  0FF3                     ;LCD_hd44780u_qy_2004a.c: 206:   setData(iOpCode);
  7882                           	movlb 0	; select bank0
  7883  0FF3  0020               	movf	(writeTxtChk@iOpCode),w
  7884  0FF4  0837               	fcall	_setData
  7885  0FF5  318B  23CC  318F   	line	207
  7886                           	
  7887                           l5463:	
  7888  0FF8                     ;LCD_hd44780u_qy_2004a.c: 207:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  7889                           		opt asmopt_push
  7890                           	opt asmopt_off
  7891                           	nop2	;2 cycle nop
  7892  0FF8  3200               	nop2	;2 cycle nop
  7893  0FF9  3200               	opt asmopt_pop
  7894                           
  7895                           	line	208
  7896                           	
  7897                           l5465:	
  7898  0FFA                     ;LCD_hd44780u_qy_2004a.c: 208:   mWritingPosition++;
  7899                           	movlw	low(01h)
  7900  0FFA  3001               	movlb 0	; select bank0
  7901  0FFB  0020               	movwf	(??_writeTxtChk+0)+0
  7902  0FFC  00B5               	movf	(??_writeTxtChk+0)+0,w
  7903  0FFD  0835               	addwf	(_mWritingPosition),f
  7904  0FFE  07DB               	line	209
  7905                           	
  7906                           l307:	
  7907  0FFF                     	return
  7908  0FFF  0008               	opt stack 0
  7909                           GLOBAL	__end_of_writeTxtChk
  7910                           	__end_of_writeTxtChk:
  7911  1000                     	signat	_writeTxtChk,4217
  7912                           	global	_setCursorPosition
  7913                           
  7914 ;; *************** function _setCursorPosition *****************
  7915 ;; Defined at:
  7916 ;;		line 333 in file "LCD_hd44780u_qy_2004a.c"
  7917 ;; Parameters:    Size  Location     Type
  7918 ;;  iLine           1    wreg     unsigned char 
  7919 ;;  iPosition       1   16[BANK0 ] unsigned char 
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;  iLine           1   19[BANK0 ] unsigned char 
  7922 ;;  wLCDIndex       1   20[BANK0 ] unsigned char 
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  1    wreg      void 
  7925 ;; Registers used:
  7926 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7932 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7933 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7934 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7935 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7936 ;;Total ram usage:        5 bytes
  7937 ;; Hardware stack levels used:    1
  7938 ;; Hardware stack levels required when called:    8
  7939 ;; This function calls:
  7940 ;;		_SetToSendDataToLCD
  7941 ;;		_setData
  7942 ;;		_waitLCDBusy
  7943 ;; This function is called by:
  7944 ;;		_main
  7945 ;;		_writeTxtChk
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  7949                           	line	333
  7950                           global __ptext16
  7951                           __ptext16:	;psect for function _setCursorPosition
  7952  0D40                     psect	text16
  7953                           	file	"LCD_hd44780u_qy_2004a.c"
  7954                           	line	333
  7955                           	global	__size_of_setCursorPosition
  7956                           	__size_of_setCursorPosition	equ	__end_of_setCursorPosition-_setCursorPosition
  7957  0060                     	
  7958                           _setCursorPosition:	
  7959  0D40                     ;incstack = 0
  7960                           	opt	stack 7
  7961                           ; Regs used in _setCursorPosition: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7962                           ;setCursorPosition@iLine stored from wreg
  7963                           	movlb 0	; select bank0
  7964  0D40  0020               	movwf	(setCursorPosition@iLine)
  7965  0D41  00B3               	line	335
  7966                           	
  7967                           l5329:	
  7968  0D42                     ;LCD_hd44780u_qy_2004a.c: 333: void setCursorPosition(char iLine, char iPosition);LCD_hd
                                 44780u_qy_2004a.c: 334: {;LCD_hd44780u_qy_2004a.c: 335:   char wLCDIndex=0;
  7969                           	clrf	(setCursorPosition@wLCDIndex)
  7970  0D42  01B4               	line	337
  7971                           ;LCD_hd44780u_qy_2004a.c: 337:   switch(iLine)
  7972                           	goto	l5341
  7973  0D43  2D70               	line	339
  7974                           ;LCD_hd44780u_qy_2004a.c: 338:   {;LCD_hd44780u_qy_2004a.c: 339:       case 0:
  7975                           	
  7976                           l385:	
  7977  0D44                     	line	340
  7978                           	
  7979                           l5331:	
  7980  0D44                     ;LCD_hd44780u_qy_2004a.c: 340:           wLCDIndex = 0x00 + iPosition;
  7981                           	movf	(setCursorPosition@iPosition),w
  7982  0D44  0830               	movwf	(??_setCursorPosition+0)+0
  7983  0D45  00B1               	movf	(??_setCursorPosition+0)+0,w
  7984  0D46  0831               	movwf	(setCursorPosition@wLCDIndex)
  7985  0D47  00B4               	line	341
  7986                           ;LCD_hd44780u_qy_2004a.c: 341:           mWritingPosition = iPosition;
  7987                           	movf	(setCursorPosition@iPosition),w
  7988  0D48  0830               	movwf	(??_setCursorPosition+0)+0
  7989  0D49  00B1               	movf	(??_setCursorPosition+0)+0,w
  7990  0D4A  0831               	movwf	(_mWritingPosition)
  7991  0D4B  00DB               	line	342
  7992                           ;LCD_hd44780u_qy_2004a.c: 342:           break;
  7993                           	goto	l5343
  7994  0D4C  2D86               	line	343
  7995                           ;LCD_hd44780u_qy_2004a.c: 343:       case 1:
  7996                           	
  7997                           l387:	
  7998  0D4D                     	line	344
  7999                           	
  8000                           l5333:	
  8001  0D4D                     ;LCD_hd44780u_qy_2004a.c: 344:           wLCDIndex = 0x40 + iPosition;
  8002                           	movf	(setCursorPosition@iPosition),w
  8003  0D4D  0830               	addlw	040h
  8004  0D4E  3E40               	movwf	(??_setCursorPosition+0)+0
  8005  0D4F  00B1               	movf	(??_setCursorPosition+0)+0,w
  8006  0D50  0831               	movwf	(setCursorPosition@wLCDIndex)
  8007  0D51  00B4               	line	345
  8008                           ;LCD_hd44780u_qy_2004a.c: 345:           mWritingPosition = 20 + iPosition;
  8009                           	movf	(setCursorPosition@iPosition),w
  8010  0D52  0830               	addlw	014h
  8011  0D53  3E14               	movwf	(??_setCursorPosition+0)+0
  8012  0D54  00B1               	movf	(??_setCursorPosition+0)+0,w
  8013  0D55  0831               	movwf	(_mWritingPosition)
  8014  0D56  00DB               	line	346
  8015                           ;LCD_hd44780u_qy_2004a.c: 346:           break;
  8016                           	goto	l5343
  8017  0D57  2D86               	line	347
  8018                           ;LCD_hd44780u_qy_2004a.c: 347:       case 2:
  8019                           	
  8020                           l388:	
  8021  0D58                     	line	348
  8022                           	
  8023                           l5335:	
  8024  0D58                     ;LCD_hd44780u_qy_2004a.c: 348:           wLCDIndex = 0x14 + iPosition;
  8025                           	movf	(setCursorPosition@iPosition),w
  8026  0D58  0830               	addlw	014h
  8027  0D59  3E14               	movwf	(??_setCursorPosition+0)+0
  8028  0D5A  00B1               	movf	(??_setCursorPosition+0)+0,w
  8029  0D5B  0831               	movwf	(setCursorPosition@wLCDIndex)
  8030  0D5C  00B4               	line	349
  8031                           ;LCD_hd44780u_qy_2004a.c: 349:           mWritingPosition = 40 + iPosition;
  8032                           	movf	(setCursorPosition@iPosition),w
  8033  0D5D  0830               	addlw	028h
  8034  0D5E  3E28               	movwf	(??_setCursorPosition+0)+0
  8035  0D5F  00B1               	movf	(??_setCursorPosition+0)+0,w
  8036  0D60  0831               	movwf	(_mWritingPosition)
  8037  0D61  00DB               	line	350
  8038                           ;LCD_hd44780u_qy_2004a.c: 350:           break;
  8039                           	goto	l5343
  8040  0D62  2D86               	line	351
  8041                           ;LCD_hd44780u_qy_2004a.c: 351:       case 3:
  8042                           	
  8043                           l389:	
  8044  0D63                     	line	352
  8045                           	
  8046                           l5337:	
  8047  0D63                     ;LCD_hd44780u_qy_2004a.c: 352:           wLCDIndex = 0x54 + iPosition;
  8048                           	movf	(setCursorPosition@iPosition),w
  8049  0D63  0830               	addlw	054h
  8050  0D64  3E54               	movwf	(??_setCursorPosition+0)+0
  8051  0D65  00B1               	movf	(??_setCursorPosition+0)+0,w
  8052  0D66  0831               	movwf	(setCursorPosition@wLCDIndex)
  8053  0D67  00B4               	line	353
  8054                           ;LCD_hd44780u_qy_2004a.c: 353:           mWritingPosition = 60 + iPosition;
  8055                           	movf	(setCursorPosition@iPosition),w
  8056  0D68  0830               	addlw	03Ch
  8057  0D69  3E3C               	movwf	(??_setCursorPosition+0)+0
  8058  0D6A  00B1               	movf	(??_setCursorPosition+0)+0,w
  8059  0D6B  0831               	movwf	(_mWritingPosition)
  8060  0D6C  00DB               	line	354
  8061                           ;LCD_hd44780u_qy_2004a.c: 354:           break;
  8062                           	goto	l5343
  8063  0D6D  2D86               	line	355
  8064                           ;LCD_hd44780u_qy_2004a.c: 355:       default:
  8065                           	
  8066                           l390:	
  8067  0D6E                     	line	356
  8068                           ;LCD_hd44780u_qy_2004a.c: 356:       break;
  8069                           	goto	l5343
  8070  0D6E  2D86               	line	357
  8071                           	
  8072                           l5339:	
  8073  0D6F                     ;LCD_hd44780u_qy_2004a.c: 357:   }
  8074                           	goto	l5343
  8075  0D6F  2D86               	
  8076                           l384:	
  8077  0D70                     	
  8078                           l5341:	
  8079  0D70                     	movf	(setCursorPosition@iLine),w
  8080  0D70  0833               	movwf	(??_setCursorPosition+0)+0
  8081  0D71  00B1               	clrf	(??_setCursorPosition+0)+0+1
  8082  0D72  01B2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  8083                           ; Switch size 1, requested type "space"
  8084                           ; Number of cases is 1, Range of values is 0 to 0
  8085                           ; switch strategies available:
  8086                           ; Name         Instructions Cycles
  8087                           ; simple_byte            4     3 (average)
  8088                           ; direct_byte            8     6 (fixed)
  8089                           ; jumptable            260     6 (fixed)
  8090                           ;	Chosen strategy is simple_byte
  8091                           
  8092                           	movf 1+(??_setCursorPosition+0)+0,w
  8093  0D73  0832               	opt asmopt_push
  8094                           	opt asmopt_off
  8095                           	xorlw	0^0	; case 0
  8096  0D74  3A00               	skipnz
  8097  0D75  1903               	goto	l6941
  8098  0D76  2D78               	goto	l5343
  8099  0D77  2D86               	opt asmopt_pop
  8100                           	
  8101                           l6941:	
  8102  0D78                     ; Switch size 1, requested type "space"
  8103                           ; Number of cases is 4, Range of values is 0 to 3
  8104                           ; switch strategies available:
  8105                           ; Name         Instructions Cycles
  8106                           ; simple_byte           13     7 (average)
  8107                           ; direct_byte           14     6 (fixed)
  8108                           ; jumptable            260     6 (fixed)
  8109                           ;	Chosen strategy is simple_byte
  8110                           
  8111                           	movf 0+(??_setCursorPosition+0)+0,w
  8112  0D78  0831               	opt asmopt_push
  8113                           	opt asmopt_off
  8114                           	xorlw	0^0	; case 0
  8115  0D79  3A00               	skipnz
  8116  0D7A  1903               	goto	l5331
  8117  0D7B  2D44               	xorlw	1^0	; case 1
  8118  0D7C  3A01               	skipnz
  8119  0D7D  1903               	goto	l5333
  8120  0D7E  2D4D               	xorlw	2^1	; case 2
  8121  0D7F  3A03               	skipnz
  8122  0D80  1903               	goto	l5335
  8123  0D81  2D58               	xorlw	3^2	; case 3
  8124  0D82  3A01               	skipnz
  8125  0D83  1903               	goto	l5337
  8126  0D84  2D63               	goto	l5343
  8127  0D85  2D86               	opt asmopt_pop
  8128                           
  8129                           	
  8130                           l386:	
  8131  0D86                     	line	359
  8132                           	
  8133                           l5343:	
  8134  0D86                     ;LCD_hd44780u_qy_2004a.c: 359:   waitLCDBusy();
  8135                           	fcall	_waitLCDBusy
  8136  0D86  318A  22AC  318D   	line	361
  8137                           	
  8138                           l5345:	
  8139  0D89                     ;LCD_hd44780u_qy_2004a.c: 361:   SetToSendDataToLCD();
  8140                           	fcall	_SetToSendDataToLCD
  8141  0D89  3189  2124  318D   	line	362
  8142                           	
  8143                           l5347:	
  8144  0D8C                     ;LCD_hd44780u_qy_2004a.c: 362:   PORTCbits.RC2 = 0;
  8145                           	movlb 0	; select bank0
  8146  0D8C  0020               	bcf	(14),2	;volatile
  8147  0D8D  110E               	line	363
  8148                           	
  8149                           l5349:	
  8150  0D8E                     ;LCD_hd44780u_qy_2004a.c: 363:   PORTCbits.RC1 = 0;
  8151                           	bcf	(14),1	;volatile
  8152  0D8E  108E               	line	364
  8153                           	
  8154                           l5351:	
  8155  0D8F                     ;LCD_hd44780u_qy_2004a.c: 364:   setData((wLCDIndex >> 4) | 0x8 );
  8156                           	movf	(setCursorPosition@wLCDIndex),w
  8157  0D8F  0834               	movwf	(??_setCursorPosition+0)+0
  8158  0D90  00B1               	movlw	04h
  8159  0D91  3004               u3575:
  8160  0D92                     	lsrf	(??_setCursorPosition+0)+0,f
  8161  0D92  36B1               	decfsz	wreg,f
  8162  0D93  0B89               	goto	u3575
  8163  0D94  2D92               	movf	0+(??_setCursorPosition+0)+0,w
  8164  0D95  0831               	iorlw	08h
  8165  0D96  3808               	fcall	_setData
  8166  0D97  318B  23CC  318D   	line	365
  8167                           	
  8168                           l5353:	
  8169  0D9A                     ;LCD_hd44780u_qy_2004a.c: 365:   setData(wLCDIndex);
  8170                           	movlb 0	; select bank0
  8171  0D9A  0020               	movf	(setCursorPosition@wLCDIndex),w
  8172  0D9B  0834               	fcall	_setData
  8173  0D9C  318B  23CC  318D   	line	367
  8174                           	
  8175                           l391:	
  8176  0D9F                     	return
  8177  0D9F  0008               	opt stack 0
  8178                           GLOBAL	__end_of_setCursorPosition
  8179                           	__end_of_setCursorPosition:
  8180  0DA0                     	signat	_setCursorPosition,8313
  8181                           	global	_waitLCDBusy
  8182                           
  8183 ;; *************** function _waitLCDBusy *****************
  8184 ;; Defined at:
  8185 ;;		line 241 in file "LCD_hd44780u_qy_2004a.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;		None
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;  busyFlag        2   14[BANK0 ] int 
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  1    wreg      void 
  8192 ;; Registers used:
  8193 ;;		wreg, status,2, status,0, pclath, cstack
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8200 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8201 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8202 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  8203 ;;Total ram usage:        4 bytes
  8204 ;; Hardware stack levels used:    1
  8205 ;; Hardware stack levels required when called:    7
  8206 ;; This function calls:
  8207 ;;		_SetToReadDataFromLCD
  8208 ;; This function is called by:
  8209 ;;		_writeTxtChk
  8210 ;;		_writeInsChk
  8211 ;;		_setCursorPosition
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  8215                           	line	241
  8216                           global __ptext17
  8217                           __ptext17:	;psect for function _waitLCDBusy
  8218  0AAC                     psect	text17
  8219                           	file	"LCD_hd44780u_qy_2004a.c"
  8220                           	line	241
  8221                           	global	__size_of_waitLCDBusy
  8222                           	__size_of_waitLCDBusy	equ	__end_of_waitLCDBusy-_waitLCDBusy
  8223  002A                     	
  8224                           _waitLCDBusy:	
  8225  0AAC                     ;incstack = 0
  8226                           	opt	stack 6
  8227                           ; Regs used in _waitLCDBusy: [wreg+status,2+status,0+pclath+cstack]
  8228                           	line	243
  8229                           	
  8230                           l5311:	
  8231  0AAC                     ;LCD_hd44780u_qy_2004a.c: 243:   PORTCbits.RC2 = 0;
  8232                           	movlb 0	; select bank0
  8233  0AAC  0020               	bcf	(14),2	;volatile
  8234  0AAD  110E               	line	244
  8235                           ;LCD_hd44780u_qy_2004a.c: 244:   PORTCbits.RC1 = 1;
  8236                           	bsf	(14),1	;volatile
  8237  0AAE  148E               	line	246
  8238                           	
  8239                           l5313:	
  8240  0AAF                     ;LCD_hd44780u_qy_2004a.c: 246:   SetToReadDataFromLCD();
  8241                           	fcall	_SetToReadDataFromLCD
  8242  0AAF  3189  212A  318A   	line	248
  8243                           	
  8244                           l5315:	
  8245  0AB2                     ;LCD_hd44780u_qy_2004a.c: 248:   int busyFlag = 1;
  8246                           	movlw	01h
  8247  0AB2  3001               	movlb 0	; select bank0
  8248  0AB3  0020               	movwf	(waitLCDBusy@busyFlag)
  8249  0AB4  00AE               	movlw	0
  8250  0AB5  3000               	movwf	((waitLCDBusy@busyFlag))+1
  8251  0AB6  00AF               	line	249
  8252                           ;LCD_hd44780u_qy_2004a.c: 249:   while(busyFlag == 1)
  8253                           	goto	l336
  8254  0AB7  2ACD               	
  8255                           l337:	
  8256  0AB8                     	line	252
  8257                           ;LCD_hd44780u_qy_2004a.c: 250:   {;LCD_hd44780u_qy_2004a.c: 252:     PORTCbits.RC0 = 1;

  8258                           	bsf	(14),0	;volatile
  8259  0AB8  140E               	line	253
  8260                           ;LCD_hd44780u_qy_2004a.c: 253:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  8261                           		opt asmopt_push
  8262                           	opt asmopt_off
  8263                           	nop2	;2 cycle nop
  8264  0AB9  3200               	nop2	;2 cycle nop
  8265  0ABA  3200               	opt asmopt_pop
  8266                           
  8267                           	line	254
  8268                           	
  8269                           l5317:	
  8270  0ABB                     ;LCD_hd44780u_qy_2004a.c: 254:     busyFlag = PORTAbits.RA0;
  8271                           	movlb 0	; select bank0
  8272  0ABB  0020               	movf	(12),w	;volatile
  8273  0ABC  080C               	andlw	(1<<1)-1
  8274  0ABD  3901               	movwf	(??_waitLCDBusy+0)+0
  8275  0ABE  00AC               	clrf	(??_waitLCDBusy+0)+0+1
  8276  0ABF  01AD               	movf	0+(??_waitLCDBusy+0)+0,w
  8277  0AC0  082C               	movwf	(waitLCDBusy@busyFlag)
  8278  0AC1  00AE               	movf	1+(??_waitLCDBusy+0)+0,w
  8279  0AC2  082D               	movwf	(waitLCDBusy@busyFlag+1)
  8280  0AC3  00AF               	line	255
  8281                           	
  8282                           l5319:	
  8283  0AC4                     ;LCD_hd44780u_qy_2004a.c: 255:     PORTCbits.RC0 = 0;
  8284                           	bcf	(14),0	;volatile
  8285  0AC4  100E               	line	256
  8286                           	
  8287                           l5321:	
  8288  0AC5                     ;LCD_hd44780u_qy_2004a.c: 256:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  8289                           		opt asmopt_push
  8290                           	opt asmopt_off
  8291                           	nop2	;2 cycle nop
  8292  0AC5  3200               	nop2	;2 cycle nop
  8293  0AC6  3200               	nop2	;2 cycle nop
  8294  0AC7  3200               	nop2	;2 cycle nop
  8295  0AC8  3200               	opt asmopt_pop
  8296                           
  8297                           	line	258
  8298                           	
  8299                           l5323:	
  8300  0AC9                     ;LCD_hd44780u_qy_2004a.c: 258:     PORTCbits.RC0 = 1;
  8301                           	movlb 0	; select bank0
  8302  0AC9  0020               	bsf	(14),0	;volatile
  8303  0ACA  140E               	line	259
  8304                           	
  8305                           l5325:	
  8306  0ACB                     ;LCD_hd44780u_qy_2004a.c: 259:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  8307                           		opt asmopt_push
  8308                           	opt asmopt_off
  8309                           	nop2	;2 cycle nop
  8310  0ACB  3200               	nop2	;2 cycle nop
  8311  0ACC  3200               	opt asmopt_pop
  8312                           
  8313                           	line	260
  8314                           ;LCD_hd44780u_qy_2004a.c: 260:   }
  8315                           	
  8316                           l336:	
  8317  0ACD                     	line	249
  8318                           ;LCD_hd44780u_qy_2004a.c: 249:   while(busyFlag == 1)
  8319                           	movlb 0	; select bank0
  8320  0ACD  0020               		decf	((waitLCDBusy@busyFlag)),w
  8321  0ACE  032E               iorwf	((waitLCDBusy@busyFlag+1)),w
  8322  0ACF  042F               	btfsc	status,2
  8323  0AD0  1903               	goto	u3561
  8324  0AD1  2AD3               	goto	u3560
  8325  0AD2  2AD4               u3561:
  8326  0AD3                     	goto	l337
  8327  0AD3  2AB8               u3560:
  8328  0AD4                     	goto	l339
  8329  0AD4  2AD5               	
  8330                           l338:	
  8331  0AD5                     	line	261
  8332                           	
  8333                           l339:	
  8334  0AD5                     	return
  8335  0AD5  0008               	opt stack 0
  8336                           GLOBAL	__end_of_waitLCDBusy
  8337                           	__end_of_waitLCDBusy:
  8338  0AD6                     	signat	_waitLCDBusy,89
  8339                           	global	_SetToReadDataFromLCD
  8340                           
  8341 ;; *************** function _SetToReadDataFromLCD *****************
  8342 ;; Defined at:
  8343 ;;		line 226 in file "LCD_hd44780u_qy_2004a.c"
  8344 ;; Parameters:    Size  Location     Type
  8345 ;;		None
  8346 ;; Auto vars:     Size  Location     Type
  8347 ;;		None
  8348 ;; Return value:  Size  Location     Type
  8349 ;;                  1    wreg      void 
  8350 ;; Registers used:
  8351 ;;		None
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 0/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8361 ;;Total ram usage:        0 bytes
  8362 ;; Hardware stack levels used:    1
  8363 ;; Hardware stack levels required when called:    6
  8364 ;; This function calls:
  8365 ;;		Nothing
  8366 ;; This function is called by:
  8367 ;;		_waitLCDBusy
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  8371                           	line	226
  8372                           global __ptext18
  8373                           __ptext18:	;psect for function _SetToReadDataFromLCD
  8374  092A                     psect	text18
  8375                           	file	"LCD_hd44780u_qy_2004a.c"
  8376                           	line	226
  8377                           	global	__size_of_SetToReadDataFromLCD
  8378                           	__size_of_SetToReadDataFromLCD	equ	__end_of_SetToReadDataFromLCD-_SetToReadDataFromLCD

  8379  0006                     	
  8380                           _SetToReadDataFromLCD:	
  8381  092A                     ;incstack = 0
  8382                           	opt	stack 6
  8383                           ; Regs used in _SetToReadDataFromLCD: []
  8384                           	line	228
  8385                           	
  8386                           l5297:	
  8387  092A                     ;LCD_hd44780u_qy_2004a.c: 228:   TRISAbits.TRISA0 = 1;
  8388                           	movlb 1	; select bank1
  8389  092A  0021               	bsf	(140)^080h,0	;volatile
  8390  092B  140C               	line	229
  8391                           ;LCD_hd44780u_qy_2004a.c: 229:   TRISAbits.TRISA1 = 1;
  8392                           	bsf	(140)^080h,1	;volatile
  8393  092C  148C               	line	230
  8394                           ;LCD_hd44780u_qy_2004a.c: 230:   TRISAbits.TRISA2 = 1;
  8395                           	bsf	(140)^080h,2	;volatile
  8396  092D  150C               	line	231
  8397                           ;LCD_hd44780u_qy_2004a.c: 231:   TRISAbits.TRISA3 = 1;
  8398                           	bsf	(140)^080h,3	;volatile
  8399  092E  158C               	line	232
  8400                           	
  8401                           l330:	
  8402  092F                     	return
  8403  092F  0008               	opt stack 0
  8404                           GLOBAL	__end_of_SetToReadDataFromLCD
  8405                           	__end_of_SetToReadDataFromLCD:
  8406  0930                     	signat	_SetToReadDataFromLCD,89
  8407                           	global	_setData
  8408                           
  8409 ;; *************** function _setData *****************
  8410 ;; Defined at:
  8411 ;;		line 142 in file "LCD_hd44780u_qy_2004a.c"
  8412 ;; Parameters:    Size  Location     Type
  8413 ;;  iValue          1    wreg     unsigned char 
  8414 ;; Auto vars:     Size  Location     Type
  8415 ;;  iValue          1   14[BANK0 ] unsigned char 
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  1    wreg      void 
  8418 ;; Registers used:
  8419 ;;		wreg, status,2, status,0
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8426 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8427 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8428 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  8429 ;;Total ram usage:        3 bytes
  8430 ;; Hardware stack levels used:    1
  8431 ;; Hardware stack levels required when called:    6
  8432 ;; This function calls:
  8433 ;;		Nothing
  8434 ;; This function is called by:
  8435 ;;		_initLCD
  8436 ;;		_writeTxtChk
  8437 ;;		_writeInsNoChk
  8438 ;;		_setCursorPosition
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  8442                           	line	142
  8443                           global __ptext19
  8444                           __ptext19:	;psect for function _setData
  8445  0BCC                     psect	text19
  8446                           	file	"LCD_hd44780u_qy_2004a.c"
  8447                           	line	142
  8448                           	global	__size_of_setData
  8449                           	__size_of_setData	equ	__end_of_setData-_setData
  8450  003C                     	
  8451                           _setData:	
  8452  0BCC                     ;incstack = 0
  8453                           	opt	stack 6
  8454                           ; Regs used in _setData: [wreg+status,2+status,0]
  8455                           ;setData@iValue stored from wreg
  8456                           	movlb 0	; select bank0
  8457  0BCC  0020               	movwf	(setData@iValue)
  8458  0BCD  00AE               	line	144
  8459                           	
  8460                           l5299:	
  8461  0BCE                     ;LCD_hd44780u_qy_2004a.c: 142: void setData(char iValue);LCD_hd44780u_qy_2004a.c: 143: {
                                 ;LCD_hd44780u_qy_2004a.c: 144:   PORTCbits.RC0 = 1;
  8462                           	bsf	(14),0	;volatile
  8463  0BCE  140E               	line	145
  8464                           	
  8465                           l5301:	
  8466  0BCF                     ;LCD_hd44780u_qy_2004a.c: 145:   PORTAbits.RA0 = (iValue & 0x8) >> 3;
  8467                           	movf	(setData@iValue),w
  8468  0BCF  082E               	movwf	(??_setData+0)+0
  8469  0BD0  00AC               	movlw	03h
  8470  0BD1  3003               u3545:
  8471  0BD2                     	lsrf	(??_setData+0)+0,f
  8472  0BD2  36AC               	decfsz	wreg,f
  8473  0BD3  0B89               	goto	u3545
  8474  0BD4  2BD2               	movlw	low(01h)
  8475  0BD5  3001               	andwf	0+(??_setData+0)+0,w
  8476  0BD6  052C               	movwf	(??_setData+1)+0
  8477  0BD7  00AD               	movf	(12),w	;volatile
  8478  0BD8  080C               	xorwf	0+(??_setData+1)+0,w
  8479  0BD9  062D               	andlw	not ((1<<1)-1)
  8480  0BDA  39FE               	xorwf	0+(??_setData+1)+0,w
  8481  0BDB  062D               	movwf	(12)	;volatile
  8482  0BDC  008C               	line	146
  8483                           ;LCD_hd44780u_qy_2004a.c: 146:   PORTAbits.RA1 = (iValue & 0x4) >> 2;
  8484                           	movf	(setData@iValue),w
  8485  0BDD  082E               	movwf	(??_setData+0)+0
  8486  0BDE  00AC               	movlw	02h
  8487  0BDF  3002               u3555:
  8488  0BE0                     	lsrf	(??_setData+0)+0,f
  8489  0BE0  36AC               	decfsz	wreg,f
  8490  0BE1  0B89               	goto	u3555
  8491  0BE2  2BE0               	movf	0+(??_setData+0)+0,w
  8492  0BE3  082C               	andlw	01h
  8493  0BE4  3901               	movwf	(??_setData+1)+0
  8494  0BE5  00AD               	rlf	(??_setData+1)+0,f
  8495  0BE6  0DAD               	movf	(12),w	;volatile
  8496  0BE7  080C               	xorwf	(??_setData+1)+0,w
  8497  0BE8  062D               	andlw	not (((1<<1)-1)<<1)
  8498  0BE9  39FD               	xorwf	(??_setData+1)+0,w
  8499  0BEA  062D               	movwf	(12)	;volatile
  8500  0BEB  008C               	line	147
  8501                           ;LCD_hd44780u_qy_2004a.c: 147:   PORTAbits.RA2 = (iValue & 0x2) >> 1;
  8502                           	lsrf	(setData@iValue),w
  8503  0BEC  362E               	andlw	01h
  8504  0BED  3901               	movwf	(??_setData+0)+0
  8505  0BEE  00AC               	rlf	(??_setData+0)+0,f
  8506  0BEF  0DAC               	rlf	(??_setData+0)+0,f
  8507  0BF0  0DAC               	movf	(12),w	;volatile
  8508  0BF1  080C               	xorwf	(??_setData+0)+0,w
  8509  0BF2  062C               	andlw	not (((1<<1)-1)<<2)
  8510  0BF3  39FB               	xorwf	(??_setData+0)+0,w
  8511  0BF4  062C               	movwf	(12)	;volatile
  8512  0BF5  008C               	line	148
  8513                           ;LCD_hd44780u_qy_2004a.c: 148:   PORTAbits.RA3 = (iValue & 0x1) ;
  8514                           	movf	(setData@iValue),w
  8515  0BF6  082E               	andlw	01h
  8516  0BF7  3901               	movwf	(??_setData+0)+0
  8517  0BF8  00AC               	rlf	(??_setData+0)+0,f
  8518  0BF9  0DAC               	rlf	(??_setData+0)+0,f
  8519  0BFA  0DAC               	rlf	(??_setData+0)+0,f
  8520  0BFB  0DAC               	movf	(12),w	;volatile
  8521  0BFC  080C               	xorwf	(??_setData+0)+0,w
  8522  0BFD  062C               	andlw	not (((1<<1)-1)<<3)
  8523  0BFE  39F7               	xorwf	(??_setData+0)+0,w
  8524  0BFF  062C               	movwf	(12)	;volatile
  8525  0C00  008C               	line	149
  8526                           	
  8527                           l5303:	
  8528  0C01                     ;LCD_hd44780u_qy_2004a.c: 149:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  8529                           		opt asmopt_push
  8530                           	opt asmopt_off
  8531                           	nop2	;2 cycle nop
  8532  0C01  3200               	nop2	;2 cycle nop
  8533  0C02  3200               	opt asmopt_pop
  8534                           
  8535                           	line	150
  8536                           	
  8537                           l5305:	
  8538  0C03                     ;LCD_hd44780u_qy_2004a.c: 150:   PORTCbits.RC0 = 0;
  8539                           	movlb 0	; select bank0
  8540  0C03  0020               	bcf	(14),0	;volatile
  8541  0C04  100E               	line	151
  8542                           	
  8543                           l5307:	
  8544  0C05                     ;LCD_hd44780u_qy_2004a.c: 151:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  8545                           		opt asmopt_push
  8546                           	opt asmopt_off
  8547                           	nop2	;2 cycle nop
  8548  0C05  3200               	nop2	;2 cycle nop
  8549  0C06  3200               	opt asmopt_pop
  8550                           
  8551                           	line	152
  8552                           	
  8553                           l303:	
  8554  0C07                     	return
  8555  0C07  0008               	opt stack 0
  8556                           GLOBAL	__end_of_setData
  8557                           	__end_of_setData:
  8558  0C08                     	signat	_setData,4217
  8559                           	global	_SetToSendDataToLCD
  8560                           
  8561 ;; *************** function _SetToSendDataToLCD *****************
  8562 ;; Defined at:
  8563 ;;		line 233 in file "LCD_hd44780u_qy_2004a.c"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;		None
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;		None
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  1    wreg      void 
  8570 ;; Registers used:
  8571 ;;		None
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8581 ;;Total ram usage:        0 bytes
  8582 ;; Hardware stack levels used:    1
  8583 ;; Hardware stack levels required when called:    6
  8584 ;; This function calls:
  8585 ;;		Nothing
  8586 ;; This function is called by:
  8587 ;;		_writeTxtChk
  8588 ;;		_writeInsNoChk
  8589 ;;		_setCursorPosition
  8590 ;; This function uses a non-reentrant model
  8591 ;;
  8592                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  8593                           	line	233
  8594                           global __ptext20
  8595                           __ptext20:	;psect for function _SetToSendDataToLCD
  8596  0924                     psect	text20
  8597                           	file	"LCD_hd44780u_qy_2004a.c"
  8598                           	line	233
  8599                           	global	__size_of_SetToSendDataToLCD
  8600                           	__size_of_SetToSendDataToLCD	equ	__end_of_SetToSendDataToLCD-_SetToSendDataToLCD
  8601  0006                     	
  8602                           _SetToSendDataToLCD:	
  8603  0924                     ;incstack = 0
  8604                           	opt	stack 6
  8605                           ; Regs used in _SetToSendDataToLCD: []
  8606                           	line	235
  8607                           	
  8608                           l5309:	
  8609  0924                     ;LCD_hd44780u_qy_2004a.c: 235:   TRISAbits.TRISA0 = 0;;
  8610                           	movlb 1	; select bank1
  8611  0924  0021               	bcf	(140)^080h,0	;volatile
  8612  0925  100C               	line	236
  8613                           ;LCD_hd44780u_qy_2004a.c: 236:   TRISAbits.TRISA1 = 0;;
  8614                           	bcf	(140)^080h,1	;volatile
  8615  0926  108C               	line	237
  8616                           ;LCD_hd44780u_qy_2004a.c: 237:   TRISAbits.TRISA2 = 0;;
  8617                           	bcf	(140)^080h,2	;volatile
  8618  0927  110C               	line	238
  8619                           ;LCD_hd44780u_qy_2004a.c: 238:   TRISAbits.TRISA3 = 0;;
  8620                           	bcf	(140)^080h,3	;volatile
  8621  0928  118C               	line	239
  8622                           	
  8623                           l333:	
  8624  0929                     	return
  8625  0929  0008               	opt stack 0
  8626                           GLOBAL	__end_of_SetToSendDataToLCD
  8627                           	__end_of_SetToSendDataToLCD:
  8628  092A                     	signat	_SetToSendDataToLCD,89
  8629                           	global	_Esp8266SetupWifi
  8630                           
  8631 ;; *************** function _Esp8266SetupWifi *****************
  8632 ;; Defined at:
  8633 ;;		line 105 in file "ESP8266.c"
  8634 ;; Parameters:    Size  Location     Type
  8635 ;;		None
  8636 ;; Auto vars:     Size  Location     Type
  8637 ;;		None
  8638 ;; Return value:  Size  Location     Type
  8639 ;;                  1    wreg      void 
  8640 ;; Registers used:
  8641 ;;		wreg, status,2
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8649 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8650 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8651 ;;Total ram usage:        1 bytes
  8652 ;; Hardware stack levels used:    1
  8653 ;; Hardware stack levels required when called:    6
  8654 ;; This function calls:
  8655 ;;		Nothing
  8656 ;; This function is called by:
  8657 ;;		_main
  8658 ;;		_Esp8266Init
  8659 ;; This function uses a non-reentrant model
  8660 ;;
  8661                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  8662                           	file	"ESP8266.c"
  8663                           	line	105
  8664                           global __ptext21
  8665                           __ptext21:	;psect for function _Esp8266SetupWifi
  8666  0944                     psect	text21
  8667                           	file	"ESP8266.c"
  8668                           	line	105
  8669                           	global	__size_of_Esp8266SetupWifi
  8670                           	__size_of_Esp8266SetupWifi	equ	__end_of_Esp8266SetupWifi-_Esp8266SetupWifi
  8671  0007                     	
  8672                           _Esp8266SetupWifi:	
  8673  0944                     ;incstack = 0
  8674                           	opt	stack 9
  8675                           ; Regs used in _Esp8266SetupWifi: [wreg+status,2]
  8676                           	line	107
  8677                           	
  8678                           l5999:	
  8679  0944                     ;ESP8266.c: 107:     gEsp8266State = eSettingUpCommand;
  8680                           	movlb 0	; select bank0
  8681  0944  0020               	clrf	(_gEsp8266State)
  8682  0945  01E0               	line	108
  8683                           	
  8684                           l6001:	
  8685  0946                     ;ESP8266.c: 108:     gESPCommand = eSettingWiFiMode;
  8686                           	movlw	low(05h)
  8687  0946  3005               	movwf	(??_Esp8266SetupWifi+0)+0
  8688  0947  00AC               	movf	(??_Esp8266SetupWifi+0)+0,w
  8689  0948  082C               	movwf	(_gESPCommand)
  8690  0949  00DF               	line	109
  8691                           	
  8692                           l772:	
  8693  094A                     	return
  8694  094A  0008               	opt stack 0
  8695                           GLOBAL	__end_of_Esp8266SetupWifi
  8696                           	__end_of_Esp8266SetupWifi:
  8697  094B                     	signat	_Esp8266SetupWifi,89
  8698                           	global	_Esp8266SetAccessPointMode
  8699                           
  8700 ;; *************** function _Esp8266SetAccessPointMode *****************
  8701 ;; Defined at:
  8702 ;;		line 100 in file "ESP8266.c"
  8703 ;; Parameters:    Size  Location     Type
  8704 ;;		None
  8705 ;; Auto vars:     Size  Location     Type
  8706 ;;		None
  8707 ;; Return value:  Size  Location     Type
  8708 ;;                  1    wreg      void 
  8709 ;; Registers used:
  8710 ;;		wreg, status,2
  8711 ;; Tracked objects:
  8712 ;;		On entry : 0/0
  8713 ;;		On exit  : 0/0
  8714 ;;		Unchanged: 0/0
  8715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8718 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8719 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8720 ;;Total ram usage:        1 bytes
  8721 ;; Hardware stack levels used:    1
  8722 ;; Hardware stack levels required when called:    6
  8723 ;; This function calls:
  8724 ;;		Nothing
  8725 ;; This function is called by:
  8726 ;;		_main
  8727 ;;		_Esp8266Init
  8728 ;; This function uses a non-reentrant model
  8729 ;;
  8730                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  8731                           	line	100
  8732                           global __ptext22
  8733                           __ptext22:	;psect for function _Esp8266SetAccessPointMode
  8734  093D                     psect	text22
  8735                           	file	"ESP8266.c"
  8736                           	line	100
  8737                           	global	__size_of_Esp8266SetAccessPointMode
  8738                           	__size_of_Esp8266SetAccessPointMode	equ	__end_of_Esp8266SetAccessPointMode-_Esp8266SetA
                                 ccessPointMode
  8739  0007                     	
  8740                           _Esp8266SetAccessPointMode:	
  8741  093D                     ;incstack = 0
  8742                           	opt	stack 9
  8743                           ; Regs used in _Esp8266SetAccessPointMode: [wreg+status,2]
  8744                           	line	102
  8745                           	
  8746                           l5995:	
  8747  093D                     ;ESP8266.c: 102:     gEsp8266State = eSettingUpCommand;
  8748                           	movlb 0	; select bank0
  8749  093D  0020               	clrf	(_gEsp8266State)
  8750  093E  01E0               	line	103
  8751                           	
  8752                           l5997:	
  8753  093F                     ;ESP8266.c: 103:     gESPCommand = eSettingAPMode;
  8754                           	movlw	low(04h)
  8755  093F  3004               	movwf	(??_Esp8266SetAccessPointMode+0)+0
  8756  0940  00AC               	movf	(??_Esp8266SetAccessPointMode+0)+0,w
  8757  0941  082C               	movwf	(_gESPCommand)
  8758  0942  00DF               	line	104
  8759                           	
  8760                           l769:	
  8761  0943                     	return
  8762  0943  0008               	opt stack 0
  8763                           GLOBAL	__end_of_Esp8266SetAccessPointMode
  8764                           	__end_of_Esp8266SetAccessPointMode:
  8765  0944                     	signat	_Esp8266SetAccessPointMode,89
  8766                           	global	_Esp8266OpenSocket
  8767                           
  8768 ;; *************** function _Esp8266OpenSocket *****************
  8769 ;; Defined at:
  8770 ;;		line 110 in file "ESP8266.c"
  8771 ;; Parameters:    Size  Location     Type
  8772 ;;		None
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;		None
  8775 ;; Return value:  Size  Location     Type
  8776 ;;                  1    wreg      void 
  8777 ;; Registers used:
  8778 ;;		wreg, status,2
  8779 ;; Tracked objects:
  8780 ;;		On entry : 0/0
  8781 ;;		On exit  : 0/0
  8782 ;;		Unchanged: 0/0
  8783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8786 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8787 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8788 ;;Total ram usage:        1 bytes
  8789 ;; Hardware stack levels used:    1
  8790 ;; Hardware stack levels required when called:    6
  8791 ;; This function calls:
  8792 ;;		Nothing
  8793 ;; This function is called by:
  8794 ;;		_main
  8795 ;;		_Esp8266Init
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  8799                           	line	110
  8800                           global __ptext23
  8801                           __ptext23:	;psect for function _Esp8266OpenSocket
  8802  0936                     psect	text23
  8803                           	file	"ESP8266.c"
  8804                           	line	110
  8805                           	global	__size_of_Esp8266OpenSocket
  8806                           	__size_of_Esp8266OpenSocket	equ	__end_of_Esp8266OpenSocket-_Esp8266OpenSocket
  8807  0007                     	
  8808                           _Esp8266OpenSocket:	
  8809  0936                     ;incstack = 0
  8810                           	opt	stack 9
  8811                           ; Regs used in _Esp8266OpenSocket: [wreg+status,2]
  8812                           	line	112
  8813                           	
  8814                           l5991:	
  8815  0936                     ;ESP8266.c: 112:     gEsp8266State = eSettingUpCommand;
  8816                           	movlb 0	; select bank0
  8817  0936  0020               	clrf	(_gEsp8266State)
  8818  0937  01E0               	line	113
  8819                           	
  8820                           l5993:	
  8821  0938                     ;ESP8266.c: 113:     gESPCommand = eOpenUDPSocket;
  8822                           	movlw	low(08h)
  8823  0938  3008               	movwf	(??_Esp8266OpenSocket+0)+0
  8824  0939  00AC               	movf	(??_Esp8266OpenSocket+0)+0,w
  8825  093A  082C               	movwf	(_gESPCommand)
  8826  093B  00DF               	line	114
  8827                           	
  8828                           l775:	
  8829  093C                     	return
  8830  093C  0008               	opt stack 0
  8831                           GLOBAL	__end_of_Esp8266OpenSocket
  8832                           	__end_of_Esp8266OpenSocket:
  8833  093D                     	signat	_Esp8266OpenSocket,89
  8834                           	global	_EM1812EntryPoint
  8835                           
  8836 ;; *************** function _EM1812EntryPoint *****************
  8837 ;; Defined at:
  8838 ;;		line 95 in file "EM1812.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  oHumidity       1    wreg     PTR short 
  8841 ;;		 -> wHumidity(2), 
  8842 ;;  oTemperature    1   29[BANK0 ] PTR short 
  8843 ;;		 -> wTemperature(2), 
  8844 ;; Auto vars:     Size  Location     Type
  8845 ;;  oHumidity       1   12[BANK1 ] PTR short 
  8846 ;;		 -> wHumidity(2), 
  8847 ;;  ReceptionBuf    8    4[BANK1 ] unsigned char [8]
  8848 ;;  SetGetTempCo    4    0[BANK1 ] unsigned char [4]
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  2   29[BANK0 ] int 
  8851 ;; Registers used:
  8852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8858 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8859 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
       0       0
  8860 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  8861 ;;      Totals:         0       7      13       0       0       0       0       0       0       0       0       0       
       0       0
  8862 ;;Total ram usage:       20 bytes
  8863 ;; Hardware stack levels used:    1
  8864 ;; Hardware stack levels required when called:    8
  8865 ;; This function calls:
  8866 ;;		_GetI2CStatus
  8867 ;;		_GetNewReceivedData
  8868 ;;		_I2C_GetData
  8869 ;;		_I2C_SendData
  8870 ;; This function is called by:
  8871 ;;		_main
  8872 ;; This function uses a non-reentrant model
  8873 ;;
  8874                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  8875                           	file	"EM1812.c"
  8876                           	line	95
  8877                           global __ptext24
  8878                           __ptext24:	;psect for function _EM1812EntryPoint
  8879  03D2                     psect	text24
  8880                           	file	"EM1812.c"
  8881                           	line	95
  8882                           	global	__size_of_EM1812EntryPoint
  8883                           	__size_of_EM1812EntryPoint	equ	__end_of_EM1812EntryPoint-_EM1812EntryPoint
  8884  0130                     	
  8885                           _EM1812EntryPoint:	
  8886  03D2                     ;incstack = 0
  8887                           	opt	stack 7
  8888                           ; Regs used in _EM1812EntryPoint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8889                           ;EM1812EntryPoint@oHumidity stored from wreg
  8890                           	movlb 1	; select bank1
  8891  03D2  0021               	movwf	(EM1812EntryPoint@oHumidity)^080h
  8892  03D3  00C3               	line	97
  8893                           	
  8894                           l5895:	
  8895  03D4                     ;EM1812.c: 95: int EM1812EntryPoint(int16_t* oHumidity, int16_t* oTemperature);EM1812.c:
                                  96: {;EM1812.c: 97:     uint8_t SetGetTempCommand[4] = {0xB8,0x03,0x00,0x04};
  8896                           	movf	(EM1812EntryPoint@F1960+3)^080h,w
  8897  03D4  0849               	movwf	(EM1812EntryPoint@SetGetTempCommand+3)^080h
  8898  03D5  00BA               	movf	(EM1812EntryPoint@F1960+2)^080h,w
  8899  03D6  0848               	movwf	(EM1812EntryPoint@SetGetTempCommand+2)^080h
  8900  03D7  00B9               	movf	(EM1812EntryPoint@F1960+1)^080h,w
  8901  03D8  0847               	movwf	(EM1812EntryPoint@SetGetTempCommand+1)^080h
  8902  03D9  00B8               	movf	(EM1812EntryPoint@F1960)^080h,w
  8903  03DA  0846               	movwf	(EM1812EntryPoint@SetGetTempCommand)^080h
  8904  03DB  00B7               
  8905                           	line	98
  8906                           	
  8907                           l5897:	
  8908  03DC                     ;EM1812.c: 98:     uint8_t ReceptionBuffer[8] = {0,0,0,0};
  8909                           	movlw	low(EM1812EntryPoint@F1962)
  8910  03DC  30A0               	movwf	fsr1l
  8911  03DD  0086               	movlw	high(EM1812EntryPoint@F1962)
  8912  03DE  3000               	movwf	fsr1h
  8913  03DF  0087               	movlw	low(EM1812EntryPoint@ReceptionBuffer)
  8914  03E0  30BB               	movwf	fsr0l
  8915  03E1  0084               	movlw	high(EM1812EntryPoint@ReceptionBuffer)
  8916  03E2  3000               	movwf	fsr0h
  8917  03E3  0085               	movlw	8
  8918  03E4  3008               	movlb 0	; select bank0
  8919  03E5  0020               	movwf	(??_EM1812EntryPoint+0)+0
  8920  03E6  00BF               u4180:
  8921  03E7                     	moviw	fsr1++
  8922  03E7  0016               	movwi	fsr0++
  8923  03E8  001A               	decfsz	(??_EM1812EntryPoint+0)+0,f
  8924  03E9  0BBF               	goto	u4180
  8925  03EA  2BE7               	line	101
  8926                           ;EM1812.c: 99:     static uint8_t wTry =0;;EM1812.c: 101:     switch( wTempState )
  8927                           	goto	l5973
  8928  03EB  2CEC               	line	103
  8929                           ;EM1812.c: 102:     {;EM1812.c: 103:         case eSetGetTemp:
  8930                           	
  8931                           l473:	
  8932  03EC                     	line	104
  8933                           	
  8934                           l5899:	
  8935  03EC                     ;EM1812.c: 104:             if(I2C_SendData(SetGetTempCommand,4))
  8936                           	movlw	low(04h)
  8937  03EC  3004               	movwf	(??_EM1812EntryPoint+0)+0
  8938  03ED  00BF               	movf	(??_EM1812EntryPoint+0)+0,w
  8939  03EE  083F               	movwf	(I2C_SendData@iNumberofByte)
  8940  03EF  00B8               	movlw	(low(EM1812EntryPoint@SetGetTempCommand|((0x0)<<8)))&0ffh
  8941  03F0  30B7               	fcall	_I2C_SendData
  8942  03F1  318C  2408  3183   	movlb 0	; select bank0
  8943  03F4  0020               	movf	((0+(?_I2C_SendData))),w
  8944  03F5  0838               iorwf	((1+(?_I2C_SendData))),w
  8945  03F6  0439               	btfsc	status,2
  8946  03F7  1903               	goto	u4191
  8947  03F8  2BFA               	goto	u4190
  8948  03F9  2BFB               u4191:
  8949  03FA                     	goto	l5975
  8950  03FA  2CFE               u4190:
  8951  03FB                     	line	106
  8952                           	
  8953                           l5901:	
  8954  03FB                     ;EM1812.c: 105:             {;EM1812.c: 106:                 wTempState = eWaitSetGetTem
                                 pProcessing;
  8955                           	clrf	(_wTempState)
  8956  03FB  01DA               	incf	(_wTempState),f
  8957  03FC  0ADA               	line	107
  8958                           ;EM1812.c: 107:                 INTCONbits.TMR0IE = 0;
  8959                           	bcf	(11),5	;volatile
  8960  03FD  128B               	line	108
  8961                           	
  8962                           l5903:	
  8963  03FE                     ;EM1812.c: 108:                 TMR0 = 0;
  8964                           	clrf	(21)	;volatile
  8965  03FE  0195               	line	109
  8966                           ;EM1812.c: 109:                 wTimer0Counter=0;
  8967                           	clrf	(_wTimer0Counter)
  8968  03FF  01D9               	line	110
  8969                           	
  8970                           l5905:	
  8971  0400                     ;EM1812.c: 110:                 INTCONbits.TMR0IE = 1;
  8972                           	bsf	(11),5	;volatile
  8973  0400  168B               	goto	l5975
  8974  0401  2CFE               	line	111
  8975                           ;EM1812.c: 111:             }
  8976                           	
  8977                           l474:	
  8978  0402                     	line	112
  8979                           ;EM1812.c: 112:             break;
  8980                           	goto	l5975
  8981  0402  2CFE               	line	113
  8982                           ;EM1812.c: 113:         case eWaitSetGetTempProcessing:
  8983                           	
  8984                           l476:	
  8985  0403                     	line	114
  8986                           	
  8987                           l5907:	
  8988  0403                     ;EM1812.c: 114:             if(wTimer0Counter == 2)
  8989                           		movlw	2
  8990  0403  3002               	xorwf	((_wTimer0Counter)),w
  8991  0404  0659               	btfss	status,2
  8992  0405  1D03               	goto	u4201
  8993  0406  2C08               	goto	u4200
  8994  0407  2C09               u4201:
  8995  0408                     	goto	l5975
  8996  0408  2CFE               u4200:
  8997  0409                     	line	116
  8998                           	
  8999                           l5909:	
  9000  0409                     ;EM1812.c: 115:             {;EM1812.c: 116:                 wTempState = eGetTemp;
  9001                           	movlw	low(02h)
  9002  0409  3002               	movwf	(??_EM1812EntryPoint+0)+0
  9003  040A  00BF               	movf	(??_EM1812EntryPoint+0)+0,w
  9004  040B  083F               	movwf	(_wTempState)
  9005  040C  00DA               	line	117
  9006                           	
  9007                           l5911:	
  9008  040D                     ;EM1812.c: 117:                 INTCONbits.TMR0IE = 0;
  9009                           	bcf	(11),5	;volatile
  9010  040D  128B               	goto	l5975
  9011  040E  2CFE               	line	118
  9012                           ;EM1812.c: 118:             }
  9013                           	
  9014                           l477:	
  9015  040F                     	line	119
  9016                           ;EM1812.c: 119:             break;
  9017                           	goto	l5975
  9018  040F  2CFE               	line	120
  9019                           ;EM1812.c: 120:         case eGetTemp:
  9020                           	
  9021                           l478:	
  9022  0410                     	line	121
  9023                           	
  9024                           l5913:	
  9025  0410                     ;EM1812.c: 121:             if(GetI2CStatus() == CommandFailed)
  9026                           	fcall	_GetI2CStatus
  9027  0410  3189  2153  3183   		movlw	5
  9028  0413  3005               	movlb 0	; select bank0
  9029  0414  0020               	xorwf	((0+(?_GetI2CStatus))),w
  9030  0415  062C               iorwf	((1+(?_GetI2CStatus))),w
  9031  0416  042D               	btfss	status,2
  9032  0417  1D03               	goto	u4211
  9033  0418  2C1A               	goto	u4210
  9034  0419  2C1B               u4211:
  9035  041A                     	goto	l5923
  9036  041A  2C2C               u4210:
  9037  041B                     	line	123
  9038                           	
  9039                           l5915:	
  9040  041B                     ;EM1812.c: 122:             {;EM1812.c: 123:                 wTempState = eSetGetTemp;
  9041                           	clrf	(_wTempState)
  9042  041B  01DA               	line	124
  9043                           	
  9044                           l5917:	
  9045  041C                     ;EM1812.c: 124:                 wTry++;
  9046                           	movlw	low(01h)
  9047  041C  3001               	movwf	(??_EM1812EntryPoint+0)+0
  9048  041D  00BF               	movf	(??_EM1812EntryPoint+0)+0,w
  9049  041E  083F               	addwf	(EM1812EntryPoint@wTry),f
  9050  041F  07CA               	line	125
  9051                           	
  9052                           l5919:	
  9053  0420                     ;EM1812.c: 125:                 if(wTry == 6)
  9054                           		movlw	6
  9055  0420  3006               	xorwf	((EM1812EntryPoint@wTry)),w
  9056  0421  064A               	btfss	status,2
  9057  0422  1D03               	goto	u4221
  9058  0423  2C25               	goto	u4220
  9059  0424  2C26               u4221:
  9060  0425                     	goto	l5975
  9061  0425  2CFE               u4220:
  9062  0426                     	line	127
  9063                           	
  9064                           l5921:	
  9065  0426                     ;EM1812.c: 126:                 {;EM1812.c: 127:                    wTempState = eError;
                                 
  9066                           	movlw	low(06h)
  9067  0426  3006               	movwf	(??_EM1812EntryPoint+0)+0
  9068  0427  00BF               	movf	(??_EM1812EntryPoint+0)+0,w
  9069  0428  083F               	movwf	(_wTempState)
  9070  0429  00DA               	goto	l5975
  9071  042A  2CFE               	line	128
  9072                           ;EM1812.c: 128:                 }
  9073                           	
  9074                           l480:	
  9075  042B                     	line	129
  9076                           ;EM1812.c: 129:             }
  9077                           	goto	l5975
  9078  042B  2CFE               	line	130
  9079                           ;EM1812.c: 130:             else if (GetI2CStatus() == CommandCompleted)
  9080                           	
  9081                           l479:	
  9082  042C                     	
  9083                           l5923:	
  9084  042C                     	fcall	_GetI2CStatus
  9085  042C  3189  2153  3183   		movlw	3
  9086  042F  3003               	movlb 0	; select bank0
  9087  0430  0020               	xorwf	((0+(?_GetI2CStatus))),w
  9088  0431  062C               iorwf	((1+(?_GetI2CStatus))),w
  9089  0432  042D               	btfss	status,2
  9090  0433  1D03               	goto	u4231
  9091  0434  2C36               	goto	u4230
  9092  0435  2C37               u4231:
  9093  0436                     	goto	l5975
  9094  0436  2CFE               u4230:
  9095  0437                     	line	132
  9096                           	
  9097                           l5925:	
  9098  0437                     ;EM1812.c: 131:             {;EM1812.c: 132:                 if(I2C_GetData(0xB9,8))
  9099                           	movlw	low(08h)
  9100  0437  3008               	movwf	(??_EM1812EntryPoint+0)+0
  9101  0438  00BF               	movf	(??_EM1812EntryPoint+0)+0,w
  9102  0439  083F               	movwf	(I2C_GetData@iRxNumberOfByteExpected)
  9103  043A  00AC               	movlw	low(0B9h)
  9104  043B  30B9               	fcall	_I2C_GetData
  9105  043C  318B  235A  3183   	movlb 0	; select bank0
  9106  043F  0020               	movf	((0+(?_I2C_GetData))),w
  9107  0440  082C               iorwf	((1+(?_I2C_GetData))),w
  9108  0441  042D               	btfsc	status,2
  9109  0442  1903               	goto	u4241
  9110  0443  2C45               	goto	u4240
  9111  0444  2C46               u4241:
  9112  0445                     	goto	l5975
  9113  0445  2CFE               u4240:
  9114  0446                     	line	134
  9115                           	
  9116                           l5927:	
  9117  0446                     ;EM1812.c: 133:                 {;EM1812.c: 134:                     wTempState = eWaitG
                                 etTempProcessing;
  9118                           	movlw	low(03h)
  9119  0446  3003               	movwf	(??_EM1812EntryPoint+0)+0
  9120  0447  00BF               	movf	(??_EM1812EntryPoint+0)+0,w
  9121  0448  083F               	movwf	(_wTempState)
  9122  0449  00DA               	line	135
  9123                           	
  9124                           l5929:	
  9125  044A                     ;EM1812.c: 135:                     INTCONbits.TMR0IE = 0;
  9126                           	bcf	(11),5	;volatile
  9127  044A  128B               	line	136
  9128                           	
  9129                           l5931:	
  9130  044B                     ;EM1812.c: 136:                     TMR0 = 0;
  9131                           	clrf	(21)	;volatile
  9132  044B  0195               	line	137
  9133                           	
  9134                           l5933:	
  9135  044C                     ;EM1812.c: 137:                     wTimer0Counter=0;
  9136                           	clrf	(_wTimer0Counter)
  9137  044C  01D9               	line	138
  9138                           	
  9139                           l5935:	
  9140  044D                     ;EM1812.c: 138:                     INTCONbits.TMR0IE = 1;
  9141                           	bsf	(11),5	;volatile
  9142  044D  168B               	goto	l5975
  9143  044E  2CFE               	line	139
  9144                           ;EM1812.c: 139:                 }
  9145                           	
  9146                           l483:	
  9147  044F                     	goto	l5975
  9148  044F  2CFE               	line	140
  9149                           ;EM1812.c: 140:             }
  9150                           	
  9151                           l482:	
  9152  0450                     	goto	l5975
  9153  0450  2CFE               	
  9154                           l481:	
  9155  0451                     	line	141
  9156                           ;EM1812.c: 141:             break;
  9157                           	goto	l5975
  9158  0451  2CFE               	line	142
  9159                           ;EM1812.c: 142:         case eWaitGetTempProcessing:
  9160                           	
  9161                           l484:	
  9162  0452                     	line	143
  9163                           	
  9164                           l5937:	
  9165  0452                     ;EM1812.c: 143:             if(wTimer0Counter == 2)
  9166                           		movlw	2
  9167  0452  3002               	xorwf	((_wTimer0Counter)),w
  9168  0453  0659               	btfss	status,2
  9169  0454  1D03               	goto	u4251
  9170  0455  2C57               	goto	u4250
  9171  0456  2C58               u4251:
  9172  0457                     	goto	l5975
  9173  0457  2CFE               u4250:
  9174  0458                     	line	145
  9175                           	
  9176                           l5939:	
  9177  0458                     ;EM1812.c: 144:             {;EM1812.c: 145:                 wTempState = eValueReceptio
                                 n;
  9178                           	movlw	low(04h)
  9179  0458  3004               	movwf	(??_EM1812EntryPoint+0)+0
  9180  0459  00BF               	movf	(??_EM1812EntryPoint+0)+0,w
  9181  045A  083F               	movwf	(_wTempState)
  9182  045B  00DA               	line	146
  9183                           	
  9184                           l5941:	
  9185  045C                     ;EM1812.c: 146:                 INTCONbits.TMR0IE = 0;
  9186                           	bcf	(11),5	;volatile
  9187  045C  128B               	goto	l5975
  9188  045D  2CFE               	line	147
  9189                           ;EM1812.c: 147:             }
  9190                           	
  9191                           l485:	
  9192  045E                     	line	148
  9193                           ;EM1812.c: 148:             break;
  9194                           	goto	l5975
  9195  045E  2CFE               	line	149
  9196                           ;EM1812.c: 149:         case eValueReception:
  9197                           	
  9198                           l486:	
  9199  045F                     	line	150
  9200                           	
  9201                           l5943:	
  9202  045F                     ;EM1812.c: 150:             if(GetI2CStatus() == CommandFailed)
  9203                           	fcall	_GetI2CStatus
  9204  045F  3189  2153  3183   		movlw	5
  9205  0462  3005               	movlb 0	; select bank0
  9206  0463  0020               	xorwf	((0+(?_GetI2CStatus))),w
  9207  0464  062C               iorwf	((1+(?_GetI2CStatus))),w
  9208  0465  042D               	btfss	status,2
  9209  0466  1D03               	goto	u4261
  9210  0467  2C69               	goto	u4260
  9211  0468  2C6A               u4261:
  9212  0469                     	goto	l5947
  9213  0469  2C6C               u4260:
  9214  046A                     	line	152
  9215                           	
  9216                           l5945:	
  9217  046A                     ;EM1812.c: 151:             {;EM1812.c: 152:                 wTempState=eSetGetTemp;
  9218                           	clrf	(_wTempState)
  9219  046A  01DA               	line	153
  9220                           ;EM1812.c: 153:             }
  9221                           	goto	l5975
  9222  046B  2CFE               	line	154
  9223                           ;EM1812.c: 154:             else if(GetI2CStatus() == CommandCompleted)
  9224                           	
  9225                           l487:	
  9226  046C                     	
  9227                           l5947:	
  9228  046C                     	fcall	_GetI2CStatus
  9229  046C  3189  2153  3183   		movlw	3
  9230  046F  3003               	movlb 0	; select bank0
  9231  0470  0020               	xorwf	((0+(?_GetI2CStatus))),w
  9232  0471  062C               iorwf	((1+(?_GetI2CStatus))),w
  9233  0472  042D               	btfss	status,2
  9234  0473  1D03               	goto	u4271
  9235  0474  2C76               	goto	u4270
  9236  0475  2C77               u4271:
  9237  0476                     	goto	l5975
  9238  0476  2CFE               u4270:
  9239  0477                     	line	156
  9240                           	
  9241                           l5949:	
  9242  0477                     ;EM1812.c: 155:             {;EM1812.c: 156:                 GetNewReceivedData(Receptio
                                 nBuffer,8);
  9243                           	movlw	low(08h)
  9244  0477  3008               	movwf	(??_EM1812EntryPoint+0)+0
  9245  0478  00BF               	movf	(??_EM1812EntryPoint+0)+0,w
  9246  0479  083F               	movwf	(GetNewReceivedData@oDataSize)
  9247  047A  00B8               	movlw	(low(EM1812EntryPoint@ReceptionBuffer|((0x0)<<8)))&0ffh
  9248  047B  30BB               	fcall	_GetNewReceivedData
  9249  047C  3189  21E8  3183   	line	157
  9250                           	
  9251                           l5951:	
  9252  047F                     ;EM1812.c: 157:                 if(ReceptionBuffer[2] & 0x80 )
  9253                           	movlb 1	; select bank1
  9254  047F  0021               	btfss	0+(EM1812EntryPoint@ReceptionBuffer)^080h+02h,(7)&7
  9255  0480  1FBD               	goto	u4281
  9256  0481  2C83               	goto	u4280
  9257  0482  2C84               u4281:
  9258  0483                     	goto	l5955
  9259  0483  2CA4               u4280:
  9260  0484                     	line	159
  9261                           	
  9262                           l5953:	
  9263  0484                     ;EM1812.c: 158:                 {;EM1812.c: 159:                   *oHumidity = -((Recep
                                 tionBuffer[2] & 0x7F)*256) + ReceptionBuffer[3];
  9264                           	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+02h,w
  9265  0484  083D               	andlw	07Fh
  9266  0485  397F               	movlb 0	; select bank0
  9267  0486  0020               	movwf	(??_EM1812EntryPoint+0)+0
  9268  0487  00BF               	clrf	(??_EM1812EntryPoint+0)+0+1
  9269  0488  01C0               	movf	(??_EM1812EntryPoint+0)+0,w
  9270  0489  083F               	movwf	(??_EM1812EntryPoint+0)+1
  9271  048A  00C0               	clrf	(??_EM1812EntryPoint+0)+0
  9272  048B  01BF               	comf	(??_EM1812EntryPoint+0)+0,f
  9273  048C  09BF               	comf	(??_EM1812EntryPoint+0)+1,f
  9274  048D  09C0               	incf	(??_EM1812EntryPoint+0)+0,f
  9275  048E  0ABF               	skipnz
  9276  048F  1903               	incf	(??_EM1812EntryPoint+0)+1,f
  9277  0490  0AC0               	movlb 1	; select bank1
  9278  0491  0021               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+03h,w
  9279  0492  083E               	movlb 0	; select bank0
  9280  0493  0020               	addwf	0+(??_EM1812EntryPoint+0)+0,w
  9281  0494  073F               	movwf	(??_EM1812EntryPoint+3)+0
  9282  0495  00C2               	movf	1+(??_EM1812EntryPoint+0)+0,w
  9283  0496  0840               	skipnc
  9284  0497  1803               	incf	1+(??_EM1812EntryPoint+0)+0,w
  9285  0498  0A40               	movwf	((??_EM1812EntryPoint+3)+0)+1
  9286  0499  00C3               	movlb 1	; select bank1
  9287  049A  0021               	movf	(EM1812EntryPoint@oHumidity)^080h,w
  9288  049B  0843               	movwf	fsr1l
  9289  049C  0086               	clrf fsr1h	
  9290  049D  0187               	
  9291                           	movlb 0	; select bank0
  9292  049E  0020               	movf	0+(??_EM1812EntryPoint+3)+0,w
  9293  049F  0842               	movwi	[0]fsr1
  9294  04A0  3FC0               	movf	1+(??_EM1812EntryPoint+3)+0,w
  9295  04A1  0843               	movwi	[1]fsr1
  9296  04A2  3FC1               	line	160
  9297                           ;EM1812.c: 160:                 }
  9298                           	goto	l5957
  9299  04A3  2CAD               	line	161
  9300                           ;EM1812.c: 161:                 else
  9301                           	
  9302                           l490:	
  9303  04A4                     	line	163
  9304                           	
  9305                           l5955:	
  9306  04A4                     ;EM1812.c: 162:                 {;EM1812.c: 163:                   *oHumidity = (Recepti
                                 onBuffer[2]*256) + ReceptionBuffer[3];
  9307                           	movlb 1	; select bank1
  9308  04A4  0021               	movf	(EM1812EntryPoint@oHumidity)^080h,w
  9309  04A5  0843               	movwf	fsr1l
  9310  04A6  0086               	clrf fsr1h	
  9311  04A7  0187               	
  9312                           	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+03h,w
  9313  04A8  083E               	movwi	[0]fsr1
  9314  04A9  3FC0               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+02h,w
  9315  04AA  083D               	movwi	[1]fsr1
  9316  04AB  3FC1               	goto	l5957
  9317  04AC  2CAD               	line	164
  9318                           ;EM1812.c: 164:                 }
  9319                           	
  9320                           l491:	
  9321  04AD                     	line	165
  9322                           	
  9323                           l5957:	
  9324  04AD                     ;EM1812.c: 165:                 if(ReceptionBuffer[4] & 0x80 )
  9325                           	movlb 1	; select bank1
  9326  04AD  0021               	btfss	0+(EM1812EntryPoint@ReceptionBuffer)^080h+04h,(7)&7
  9327  04AE  1FBF               	goto	u4291
  9328  04AF  2CB1               	goto	u4290
  9329  04B0  2CB2               u4291:
  9330  04B1                     	goto	l5961
  9331  04B1  2CD0               u4290:
  9332  04B2                     	line	167
  9333                           	
  9334                           l5959:	
  9335  04B2                     ;EM1812.c: 166:                 {;EM1812.c: 167:                   *oTemperature = -((Re
                                 ceptionBuffer[4] & 0x7F)*256) + ReceptionBuffer[5];
  9336                           	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+04h,w
  9337  04B2  083F               	andlw	07Fh
  9338  04B3  397F               	movlb 0	; select bank0
  9339  04B4  0020               	movwf	(??_EM1812EntryPoint+0)+0
  9340  04B5  00BF               	clrf	(??_EM1812EntryPoint+0)+0+1
  9341  04B6  01C0               	movf	(??_EM1812EntryPoint+0)+0,w
  9342  04B7  083F               	movwf	(??_EM1812EntryPoint+0)+1
  9343  04B8  00C0               	clrf	(??_EM1812EntryPoint+0)+0
  9344  04B9  01BF               	comf	(??_EM1812EntryPoint+0)+0,f
  9345  04BA  09BF               	comf	(??_EM1812EntryPoint+0)+1,f
  9346  04BB  09C0               	incf	(??_EM1812EntryPoint+0)+0,f
  9347  04BC  0ABF               	skipnz
  9348  04BD  1903               	incf	(??_EM1812EntryPoint+0)+1,f
  9349  04BE  0AC0               	movlb 1	; select bank1
  9350  04BF  0021               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+05h,w
  9351  04C0  0840               	movlb 0	; select bank0
  9352  04C1  0020               	addwf	0+(??_EM1812EntryPoint+0)+0,w
  9353  04C2  073F               	movwf	(??_EM1812EntryPoint+3)+0
  9354  04C3  00C2               	movf	1+(??_EM1812EntryPoint+0)+0,w
  9355  04C4  0840               	skipnc
  9356  04C5  1803               	incf	1+(??_EM1812EntryPoint+0)+0,w
  9357  04C6  0A40               	movwf	((??_EM1812EntryPoint+3)+0)+1
  9358  04C7  00C3               	movf	(EM1812EntryPoint@oTemperature),w
  9359  04C8  083D               	movwf	fsr1l
  9360  04C9  0086               	clrf fsr1h	
  9361  04CA  0187               	
  9362                           	movf	0+(??_EM1812EntryPoint+3)+0,w
  9363  04CB  0842               	movwi	[0]fsr1
  9364  04CC  3FC0               	movf	1+(??_EM1812EntryPoint+3)+0,w
  9365  04CD  0843               	movwi	[1]fsr1
  9366  04CE  3FC1               	line	168
  9367                           ;EM1812.c: 168:                 }
  9368                           	goto	l5963
  9369  04CF  2CDA               	line	169
  9370                           ;EM1812.c: 169:                 else
  9371                           	
  9372                           l492:	
  9373  04D0                     	line	171
  9374                           	
  9375                           l5961:	
  9376  04D0                     ;EM1812.c: 170:                 {;EM1812.c: 171:                   *oTemperature = (Rece
                                 ptionBuffer[4] *256) + ReceptionBuffer[5];
  9377                           	movlb 0	; select bank0
  9378  04D0  0020               	movf	(EM1812EntryPoint@oTemperature),w
  9379  04D1  083D               	movwf	fsr1l
  9380  04D2  0086               	clrf fsr1h	
  9381  04D3  0187               	
  9382                           	movlb 1	; select bank1
  9383  04D4  0021               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+05h,w
  9384  04D5  0840               	movwi	[0]fsr1
  9385  04D6  3FC0               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+04h,w
  9386  04D7  083F               	movwi	[1]fsr1
  9387  04D8  3FC1               	goto	l5963
  9388  04D9  2CDA               	line	172
  9389                           ;EM1812.c: 172:                 }
  9390                           	
  9391                           l493:	
  9392  04DA                     	line	173
  9393                           	
  9394                           l5963:	
  9395  04DA                     ;EM1812.c: 173:                 wTempState = eIdle;
  9396                           	movlw	low(05h)
  9397  04DA  3005               	movlb 0	; select bank0
  9398  04DB  0020               	movwf	(??_EM1812EntryPoint+0)+0
  9399  04DC  00BF               	movf	(??_EM1812EntryPoint+0)+0,w
  9400  04DD  083F               	movwf	(_wTempState)
  9401  04DE  00DA               	line	174
  9402                           	
  9403                           l5965:	
  9404  04DF                     ;EM1812.c: 174:                 return 1;
  9405                           	movlw	01h
  9406  04DF  3001               	movwf	(?_EM1812EntryPoint)
  9407  04E0  00BD               	movlw	0
  9408  04E1  3000               	movwf	((?_EM1812EntryPoint))+1
  9409  04E2  00BE               	goto	l494
  9410  04E3  2D01               	
  9411                           l5967:	
  9412  04E4                     	goto	l494
  9413  04E4  2D01               	line	175
  9414                           ;EM1812.c: 175:             }
  9415                           	
  9416                           l489:	
  9417  04E5                     	goto	l5975
  9418  04E5  2CFE               	
  9419                           l488:	
  9420  04E6                     	line	176
  9421                           ;EM1812.c: 176:             break;
  9422                           	goto	l5975
  9423  04E6  2CFE               	line	177
  9424                           ;EM1812.c: 177:         case eIdle:
  9425                           	
  9426                           l495:	
  9427  04E7                     	line	178
  9428                           	
  9429                           l5969:	
  9430  04E7                     ;EM1812.c: 178:             wTry=0;
  9431                           	clrf	(EM1812EntryPoint@wTry)
  9432  04E7  01CA               	line	179
  9433                           ;EM1812.c: 179:             break;
  9434                           	goto	l5975
  9435  04E8  2CFE               	line	180
  9436                           ;EM1812.c: 180:         case eError:
  9437                           	
  9438                           l496:	
  9439  04E9                     	goto	l5975
  9440  04E9  2CFE               	line	181
  9441                           ;EM1812.c: 181:         default:
  9442                           	
  9443                           l497:	
  9444  04EA                     	line	182
  9445                           ;EM1812.c: 182:             break;
  9446                           	goto	l5975
  9447  04EA  2CFE               	line	183
  9448                           	
  9449                           l5971:	
  9450  04EB                     ;EM1812.c: 183:     }
  9451                           	goto	l5975
  9452  04EB  2CFE               	
  9453                           l472:	
  9454  04EC                     	
  9455                           l5973:	
  9456  04EC                     	movf	(_wTempState),w
  9457  04EC  085A               	movwf	(??_EM1812EntryPoint+0)+0
  9458  04ED  00BF               	clrf	(??_EM1812EntryPoint+0)+0+1
  9459  04EE  01C0               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9460                           ; Switch size 1, requested type "space"
  9461                           ; Number of cases is 1, Range of values is 0 to 0
  9462                           ; switch strategies available:
  9463                           ; Name         Instructions Cycles
  9464                           ; simple_byte            4     3 (average)
  9465                           ; direct_byte            8     6 (fixed)
  9466                           ; jumptable            260     6 (fixed)
  9467                           ;	Chosen strategy is simple_byte
  9468                           
  9469                           	movf 1+(??_EM1812EntryPoint+0)+0,w
  9470  04EF  0840               	opt asmopt_push
  9471                           	opt asmopt_off
  9472                           	xorlw	0^0	; case 0
  9473  04F0  3A00               	skipnz
  9474  04F1  1903               	goto	l6943
  9475  04F2  2CF4               	goto	l5975
  9476  04F3  2CFE               	opt asmopt_pop
  9477                           	
  9478                           l6943:	
  9479  04F4                     ; Switch size 1, requested type "space"
  9480                           ; Number of cases is 7, Range of values is 0 to 6
  9481                           ; switch strategies available:
  9482                           ; Name         Instructions Cycles
  9483                           ; direct_byte           20     6 (fixed)
  9484                           ; simple_byte           22    12 (average)
  9485                           ; jumptable            260     6 (fixed)
  9486                           ;	Chosen strategy is direct_byte
  9487                           
  9488                           	movf 0+(??_EM1812EntryPoint+0)+0,w
  9489  04F4  083F               	movwf fsr0l
  9490  04F5  0084               	movlw	7
  9491  04F6  3007               	subwf	fsr0l,w
  9492  04F7  0204               skipnc
  9493  04F8  1803               goto l5975
  9494  04F9  2CFE               movlp high(S6945)
  9495  04FA  3188               	lslf fsr0l,w
  9496  04FB  3504               	addlw low(S6945)
  9497  04FC  3E00               	movwf pc
  9498  04FD  0082               psect	swtext1,local,class=CONST,delta=2
  9499                           global __pswtext1
  9500                           __pswtext1:
  9501  0800                     S6945:
  9502  0800                     	ljmp	l5899
  9503  0800  3183  2BEC         	ljmp	l5907
  9504  0802  3184  2C03         	ljmp	l5913
  9505  0804  3184  2C10         	ljmp	l5937
  9506  0806  3184  2C52         	ljmp	l5943
  9507  0808  3184  2C5F         	ljmp	l5969
  9508  080A  3184  2CE7         	ljmp	l5975
  9509  080C  3184  2CFE         psect	text24
  9510                           
  9511                           	
  9512                           l475:	
  9513  04FE                     	line	184
  9514                           	
  9515                           l5975:	
  9516  04FE                     ;EM1812.c: 184:     return 0;
  9517                           	clrf	(?_EM1812EntryPoint)
  9518  04FE  01BD               	clrf	(?_EM1812EntryPoint+1)
  9519  04FF  01BE               	goto	l494
  9520  0500  2D01               	
  9521                           l5977:	
  9522  0501                     	line	185
  9523                           	
  9524                           l494:	
  9525  0501                     	return
  9526  0501  0008               	opt stack 0
  9527                           GLOBAL	__end_of_EM1812EntryPoint
  9528                           	__end_of_EM1812EntryPoint:
  9529  0502                     	signat	_EM1812EntryPoint,8314
  9530                           	global	_I2C_SendData
  9531                           
  9532 ;; *************** function _I2C_SendData *****************
  9533 ;; Defined at:
  9534 ;;		line 43 in file "I2C.c"
  9535 ;; Parameters:    Size  Location     Type
  9536 ;;  iData           1    wreg     PTR unsigned char 
  9537 ;;		 -> EM1812EntryPoint@SetGetTempCommand(4), 
  9538 ;;  iNumberofByt    1   24[BANK0 ] unsigned char 
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;  iData           1   28[BANK0 ] PTR unsigned char 
  9541 ;;		 -> EM1812EntryPoint@SetGetTempCommand(4), 
  9542 ;; Return value:  Size  Location     Type
  9543 ;;                  2   24[BANK0 ] int 
  9544 ;; Registers used:
  9545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9546 ;; Tracked objects:
  9547 ;;		On entry : 0/0
  9548 ;;		On exit  : 0/0
  9549 ;;		Unchanged: 0/0
  9550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9551 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9552 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9553 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9554 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  9555 ;;Total ram usage:        5 bytes
  9556 ;; Hardware stack levels used:    1
  9557 ;; Hardware stack levels required when called:    7
  9558 ;; This function calls:
  9559 ;;		_memcpy
  9560 ;; This function is called by:
  9561 ;;		_EM1812EntryPoint
  9562 ;; This function uses a non-reentrant model
  9563 ;;
  9564                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  9565                           	file	"I2C.c"
  9566                           	line	43
  9567                           global __ptext25
  9568                           __ptext25:	;psect for function _I2C_SendData
  9569  0C08                     psect	text25
  9570                           	file	"I2C.c"
  9571                           	line	43
  9572                           	global	__size_of_I2C_SendData
  9573                           	__size_of_I2C_SendData	equ	__end_of_I2C_SendData-_I2C_SendData
  9574  0045                     	
  9575                           _I2C_SendData:	
  9576  0C08                     ;incstack = 0
  9577                           	opt	stack 7
  9578                           ; Regs used in _I2C_SendData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9579                           ;I2C_SendData@iData stored from wreg
  9580                           	movlb 0	; select bank0
  9581  0C08  0020               	movwf	(I2C_SendData@iData)
  9582  0C09  00BC               	line	45
  9583                           	
  9584                           l5573:	
  9585  0C0A                     ;I2C.c: 43: int I2C_SendData(uint8_t* iData,uint8_t iNumberofByte);I2C.c: 44: {;I2C.c: 4
                                 5:     if(wI2CCommandState == CommandCompleted || wI2CCommandState == CommandFailed)
  9586                           		movlw	3
  9587  0C0A  3003               	xorwf	((_wI2CCommandState)),w
  9588  0C0B  0663               	btfsc	status,2
  9589  0C0C  1903               	goto	u3781
  9590  0C0D  2C0F               	goto	u3780
  9591  0C0E  2C10               u3781:
  9592  0C0F                     	goto	l5577
  9593  0C0F  2C17               u3780:
  9594  0C10                     	
  9595                           l5575:	
  9596  0C10                     		movlw	5
  9597  0C10  3005               	xorwf	((_wI2CCommandState)),w
  9598  0C11  0663               	btfss	status,2
  9599  0C12  1D03               	goto	u3791
  9600  0C13  2C15               	goto	u3790
  9601  0C14  2C16               u3791:
  9602  0C15                     	goto	l5599
  9603  0C15  2C49               u3790:
  9604  0C16                     	goto	l5577
  9605  0C16  2C17               	
  9606                           l570:	
  9607  0C17                     	line	47
  9608                           	
  9609                           l5577:	
  9610  0C17                     ;I2C.c: 46:     {;I2C.c: 47:         if(iNumberofByte < wI2CTxBufferSize )
  9611                           	movf	(_wI2CTxBufferSize),w
  9612  0C17  0862               	subwf	(I2C_SendData@iNumberofByte),w
  9613  0C18  0238               	skipnc
  9614  0C19  1803               	goto	u3801
  9615  0C1A  2C1C               	goto	u3800
  9616  0C1B  2C1D               u3801:
  9617  0C1C                     	goto	l5583
  9618  0C1C  2C35               u3800:
  9619  0C1D                     	line	49
  9620                           	
  9621                           l5579:	
  9622  0C1D                     ;I2C.c: 48:         {;I2C.c: 49:             memcpy(wI2CTxBuffer,iData,iNumberofByte);
  9623                           	movlw	low(_wI2CTxBuffer)
  9624  0C1D  3048               	movwf	(memcpy@d1)
  9625  0C1E  00AC               	movlw	high(_wI2CTxBuffer)
  9626  0C1F  3001               	movwf	(memcpy@d1+1)
  9627  0C20  00AD               	movf	(I2C_SendData@iData),w
  9628  0C21  083C               	movwf	(memcpy@s1)
  9629  0C22  00AE               	movlw	0x0
  9630  0C23  3000               
  9631                           	movwf	(memcpy@s1+1)
  9632  0C24  00AF               	movf	(I2C_SendData@iNumberofByte),w
  9633  0C25  0838               	movwf	(??_I2C_SendData+0)+0
  9634  0C26  00BA               	clrf	(??_I2C_SendData+0)+0+1
  9635  0C27  01BB               	movf	0+(??_I2C_SendData+0)+0,w
  9636  0C28  083A               	movwf	(memcpy@n)
  9637  0C29  00B0               	movf	1+(??_I2C_SendData+0)+0,w
  9638  0C2A  083B               	movwf	(memcpy@n+1)
  9639  0C2B  00B1               	fcall	_memcpy
  9640  0C2C  318B  232B  318C   	line	50
  9641                           	
  9642                           l5581:	
  9643  0C2F                     ;I2C.c: 50:             wI2CTxNbOfByteToSend = iNumberofByte;
  9644                           	movlb 0	; select bank0
  9645  0C2F  0020               	movf	(I2C_SendData@iNumberofByte),w
  9646  0C30  0838               	movwf	(??_I2C_SendData+0)+0
  9647  0C31  00BA               	movf	(??_I2C_SendData+0)+0,w
  9648  0C32  083A               	movwf	(_wI2CTxNbOfByteToSend)
  9649  0C33  00D5               	line	51
  9650                           ;I2C.c: 51:         }
  9651                           	goto	l5587
  9652  0C34  2C39               	line	52
  9653                           ;I2C.c: 52:         else
  9654                           	
  9655                           l571:	
  9656  0C35                     	line	54
  9657                           	
  9658                           l5583:	
  9659  0C35                     ;I2C.c: 53:         {;I2C.c: 54:             return 0;
  9660                           	clrf	(?_I2C_SendData)
  9661  0C35  01B8               	clrf	(?_I2C_SendData+1)
  9662  0C36  01B9               	goto	l573
  9663  0C37  2C4C               	
  9664                           l5585:	
  9665  0C38                     	goto	l573
  9666  0C38  2C4C               	line	55
  9667                           ;I2C.c: 55:         }
  9668                           	
  9669                           l572:	
  9670  0C39                     	line	56
  9671                           	
  9672                           l5587:	
  9673  0C39                     ;I2C.c: 56:         wI2CTxSendPos = 0;
  9674                           	clrf	(_wI2CTxSendPos)
  9675  0C39  01D2               	line	57
  9676                           	
  9677                           l5589:	
  9678  0C3A                     ;I2C.c: 57:         PIE1bits.SSPIE = 1;
  9679                           	movlb 1	; select bank1
  9680  0C3A  0021               	bsf	(145)^080h,3	;volatile
  9681  0C3B  1591               	line	58
  9682                           	
  9683                           l5591:	
  9684  0C3C                     ;I2C.c: 58:         SSPCON3bits.ACKTIM = 1;
  9685                           	movlb 4	; select bank4
  9686  0C3C  0024               	bsf	(535)^0200h,7	;volatile
  9687  0C3D  1797               	line	59
  9688                           ;I2C.c: 59:         wI2CCommandState = CommandSent;
  9689                           	movlb 0	; select bank0
  9690  0C3E  0020               	clrf	(_wI2CCommandState)
  9691  0C3F  01E3               	line	60
  9692                           	
  9693                           l5593:	
  9694  0C40                     ;I2C.c: 60:         SSPCON2bits.SEN = 1;
  9695                           	movlb 4	; select bank4
  9696  0C40  0024               	bsf	(534)^0200h,0	;volatile
  9697  0C41  1416               	line	61
  9698                           	
  9699                           l5595:	
  9700  0C42                     ;I2C.c: 61:         return 1;
  9701                           	movlw	01h
  9702  0C42  3001               	movlb 0	; select bank0
  9703  0C43  0020               	movwf	(?_I2C_SendData)
  9704  0C44  00B8               	movlw	0
  9705  0C45  3000               	movwf	((?_I2C_SendData))+1
  9706  0C46  00B9               	goto	l573
  9707  0C47  2C4C               	
  9708                           l5597:	
  9709  0C48                     	goto	l573
  9710  0C48  2C4C               	line	62
  9711                           ;I2C.c: 62:     }
  9712                           	
  9713                           l568:	
  9714  0C49                     	line	63
  9715                           	
  9716                           l5599:	
  9717  0C49                     ;I2C.c: 63:     return 0;
  9718                           	clrf	(?_I2C_SendData)
  9719  0C49  01B8               	clrf	(?_I2C_SendData+1)
  9720  0C4A  01B9               	goto	l573
  9721  0C4B  2C4C               	
  9722                           l5601:	
  9723  0C4C                     	line	64
  9724                           	
  9725                           l573:	
  9726  0C4C                     	return
  9727  0C4C  0008               	opt stack 0
  9728                           GLOBAL	__end_of_I2C_SendData
  9729                           	__end_of_I2C_SendData:
  9730  0C4D                     	signat	_I2C_SendData,8314
  9731                           	global	_I2C_GetData
  9732                           
  9733 ;; *************** function _I2C_GetData *****************
  9734 ;; Defined at:
  9735 ;;		line 66 in file "I2C.c"
  9736 ;; Parameters:    Size  Location     Type
  9737 ;;  iAdress         1    wreg     unsigned char 
  9738 ;;  iRxNumberOfB    1   12[BANK0 ] unsigned char 
  9739 ;; Auto vars:     Size  Location     Type
  9740 ;;  iAdress         1   15[BANK0 ] unsigned char 
  9741 ;; Return value:  Size  Location     Type
  9742 ;;                  2   12[BANK0 ] int 
  9743 ;; Registers used:
  9744 ;;		wreg, status,2, status,0
  9745 ;; Tracked objects:
  9746 ;;		On entry : 0/0
  9747 ;;		On exit  : 0/0
  9748 ;;		Unchanged: 0/0
  9749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9750 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9751 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9752 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9753 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  9754 ;;Total ram usage:        4 bytes
  9755 ;; Hardware stack levels used:    1
  9756 ;; Hardware stack levels required when called:    6
  9757 ;; This function calls:
  9758 ;;		Nothing
  9759 ;; This function is called by:
  9760 ;;		_EM1812EntryPoint
  9761 ;; This function uses a non-reentrant model
  9762 ;;
  9763                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  9764                           	line	66
  9765                           global __ptext26
  9766                           __ptext26:	;psect for function _I2C_GetData
  9767  0B5A                     psect	text26
  9768                           	file	"I2C.c"
  9769                           	line	66
  9770                           	global	__size_of_I2C_GetData
  9771                           	__size_of_I2C_GetData	equ	__end_of_I2C_GetData-_I2C_GetData
  9772  0036                     	
  9773                           _I2C_GetData:	
  9774  0B5A                     ;incstack = 0
  9775                           	opt	stack 8
  9776                           ; Regs used in _I2C_GetData: [wreg+status,2+status,0]
  9777                           ;I2C_GetData@iAdress stored from wreg
  9778                           	movlb 0	; select bank0
  9779  0B5A  0020               	movwf	(I2C_GetData@iAdress)
  9780  0B5B  00AF               	line	68
  9781                           	
  9782                           l5607:	
  9783  0B5C                     ;I2C.c: 66: int I2C_GetData(uint8_t iAdress, uint8_t iRxNumberOfByteExpected);I2C.c: 67:
                                  {;I2C.c: 68:     if((wI2CCommandState == CommandCompleted || wI2CCommandState == Comman
                                 dFailed) && iRxNumberOfByteExpected <= wI2CRxBufferSize)
  9784                           		movlw	3
  9785  0B5C  3003               	xorwf	((_wI2CCommandState)),w
  9786  0B5D  0663               	btfsc	status,2
  9787  0B5E  1903               	goto	u3811
  9788  0B5F  2B61               	goto	u3810
  9789  0B60  2B62               u3811:
  9790  0B61                     	goto	l5611
  9791  0B61  2B69               u3810:
  9792  0B62                     	
  9793                           l5609:	
  9794  0B62                     		movlw	5
  9795  0B62  3005               	xorwf	((_wI2CCommandState)),w
  9796  0B63  0663               	btfss	status,2
  9797  0B64  1D03               	goto	u3821
  9798  0B65  2B67               	goto	u3820
  9799  0B66  2B68               u3821:
  9800  0B67                     	goto	l5633
  9801  0B67  2B8C               u3820:
  9802  0B68                     	goto	l5611
  9803  0B68  2B69               	
  9804                           l578:	
  9805  0B69                     	
  9806                           l5611:	
  9807  0B69                     	movf	(I2C_GetData@iRxNumberOfByteExpected),w
  9808  0B69  082C               	subwf	(_wI2CRxBufferSize),w
  9809  0B6A  0261               	skipc
  9810  0B6B  1C03               	goto	u3831
  9811  0B6C  2B6E               	goto	u3830
  9812  0B6D  2B6F               u3831:
  9813  0B6E                     	goto	l5633
  9814  0B6E  2B8C               u3830:
  9815  0B6F                     	line	70
  9816                           	
  9817                           l5613:	
  9818  0B6F                     ;I2C.c: 69:     {;I2C.c: 70:         wI2CTxBuffer[0]= iAdress;
  9819                           	movf	(I2C_GetData@iAdress),w
  9820  0B6F  082F               	movwf	(??_I2C_GetData+0)+0
  9821  0B70  00AE               	movf	(??_I2C_GetData+0)+0,w
  9822  0B71  082E               	movlb 2	; select bank2
  9823  0B72  0022               	movwf	(_wI2CTxBuffer)^0100h
  9824  0B73  00C8               	line	71
  9825                           	
  9826                           l5615:	
  9827  0B74                     ;I2C.c: 71:         wI2CTxNbOfByteToSend = 1;
  9828                           	movlb 0	; select bank0
  9829  0B74  0020               	clrf	(_wI2CTxNbOfByteToSend)
  9830  0B75  01D5               	incf	(_wI2CTxNbOfByteToSend),f
  9831  0B76  0AD5               	line	72
  9832                           ;I2C.c: 72:         wI2CRxNbOfByteToReceived = iRxNumberOfByteExpected;
  9833                           	movf	(I2C_GetData@iRxNumberOfByteExpected),w
  9834  0B77  082C               	movwf	(??_I2C_GetData+0)+0
  9835  0B78  00AE               	movf	(??_I2C_GetData+0)+0,w
  9836  0B79  082E               	movwf	(_wI2CRxNbOfByteToReceived)
  9837  0B7A  00D4               	line	73
  9838                           	
  9839                           l5617:	
  9840  0B7B                     ;I2C.c: 73:         wI2CTxSendPos = 0;
  9841                           	clrf	(_wI2CTxSendPos)
  9842  0B7B  01D2               	line	74
  9843                           	
  9844                           l5619:	
  9845  0B7C                     ;I2C.c: 74:         wReceptionBufferPosition = 0;
  9846                           	clrf	(_wReceptionBufferPosition)
  9847  0B7C  01D8               	line	75
  9848                           	
  9849                           l5621:	
  9850  0B7D                     ;I2C.c: 75:         PIE1bits.SSPIE = 1;
  9851                           	movlb 1	; select bank1
  9852  0B7D  0021               	bsf	(145)^080h,3	;volatile
  9853  0B7E  1591               	line	76
  9854                           	
  9855                           l5623:	
  9856  0B7F                     ;I2C.c: 76:         SSPCON3bits.ACKTIM = 1;
  9857                           	movlb 4	; select bank4
  9858  0B7F  0024               	bsf	(535)^0200h,7	;volatile
  9859  0B80  1797               	line	77
  9860                           	
  9861                           l5625:	
  9862  0B81                     ;I2C.c: 77:         wI2CCommandState = CommandSent;
  9863                           	movlb 0	; select bank0
  9864  0B81  0020               	clrf	(_wI2CCommandState)
  9865  0B82  01E3               	line	78
  9866                           	
  9867                           l5627:	
  9868  0B83                     ;I2C.c: 78:         SSPCON2bits.SEN = 1;
  9869                           	movlb 4	; select bank4
  9870  0B83  0024               	bsf	(534)^0200h,0	;volatile
  9871  0B84  1416               	line	79
  9872                           	
  9873                           l5629:	
  9874  0B85                     ;I2C.c: 79:         return 1;
  9875                           	movlw	01h
  9876  0B85  3001               	movlb 0	; select bank0
  9877  0B86  0020               	movwf	(?_I2C_GetData)
  9878  0B87  00AC               	movlw	0
  9879  0B88  3000               	movwf	((?_I2C_GetData))+1
  9880  0B89  00AD               	goto	l579
  9881  0B8A  2B8F               	
  9882                           l5631:	
  9883  0B8B                     	goto	l579
  9884  0B8B  2B8F               	line	80
  9885                           ;I2C.c: 80:     }
  9886                           	
  9887                           l576:	
  9888  0B8C                     	line	81
  9889                           	
  9890                           l5633:	
  9891  0B8C                     ;I2C.c: 81:     return 0;
  9892                           	clrf	(?_I2C_GetData)
  9893  0B8C  01AC               	clrf	(?_I2C_GetData+1)
  9894  0B8D  01AD               	goto	l579
  9895  0B8E  2B8F               	
  9896                           l5635:	
  9897  0B8F                     	line	82
  9898                           	
  9899                           l579:	
  9900  0B8F                     	return
  9901  0B8F  0008               	opt stack 0
  9902                           GLOBAL	__end_of_I2C_GetData
  9903                           	__end_of_I2C_GetData:
  9904  0B90                     	signat	_I2C_GetData,8314
  9905                           	global	_GetNewReceivedData
  9906                           
  9907 ;; *************** function _GetNewReceivedData *****************
  9908 ;; Defined at:
  9909 ;;		line 84 in file "I2C.c"
  9910 ;; Parameters:    Size  Location     Type
  9911 ;;  oData           1    wreg     PTR unsigned char 
  9912 ;;		 -> EM1812EntryPoint@ReceptionBuffer(8), 
  9913 ;;  oDataSize       1   24[BANK0 ] unsigned char 
  9914 ;; Auto vars:     Size  Location     Type
  9915 ;;  oData           1   27[BANK0 ] PTR unsigned char 
  9916 ;;		 -> EM1812EntryPoint@ReceptionBuffer(8), 
  9917 ;; Return value:  Size  Location     Type
  9918 ;;                  2   24[BANK0 ] int 
  9919 ;; Registers used:
  9920 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9921 ;; Tracked objects:
  9922 ;;		On entry : 0/0
  9923 ;;		On exit  : 0/0
  9924 ;;		Unchanged: 0/0
  9925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9926 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9927 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9928 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9929 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  9930 ;;Total ram usage:        4 bytes
  9931 ;; Hardware stack levels used:    1
  9932 ;; Hardware stack levels required when called:    7
  9933 ;; This function calls:
  9934 ;;		_memcpy
  9935 ;; This function is called by:
  9936 ;;		_EM1812EntryPoint
  9937 ;; This function uses a non-reentrant model
  9938 ;;
  9939                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
  9940                           	line	84
  9941                           global __ptext27
  9942                           __ptext27:	;psect for function _GetNewReceivedData
  9943  09E8                     psect	text27
  9944                           	file	"I2C.c"
  9945                           	line	84
  9946                           	global	__size_of_GetNewReceivedData
  9947                           	__size_of_GetNewReceivedData	equ	__end_of_GetNewReceivedData-_GetNewReceivedData
  9948  0023                     	
  9949                           _GetNewReceivedData:	
  9950  09E8                     ;incstack = 0
  9951                           	opt	stack 7
  9952                           ; Regs used in _GetNewReceivedData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9953                           ;GetNewReceivedData@oData stored from wreg
  9954                           	movlb 0	; select bank0
  9955  09E8  0020               	movwf	(GetNewReceivedData@oData)
  9956  09E9  00BB               	line	86
  9957                           	
  9958                           l5637:	
  9959  09EA                     ;I2C.c: 84: int GetNewReceivedData(uint8_t* oData, uint8_t oDataSize);I2C.c: 85: {;I2C.c
                                 : 86:     if(wNewI2CReception == 1 && wI2CCommandState == CommandCompleted)
  9960                           		decf	((_wNewI2CReception)),w
  9961  09EA  0353               	btfss	status,2
  9962  09EB  1D03               	goto	u3841
  9963  09EC  29EE               	goto	u3840
  9964  09ED  29EF               u3841:
  9965  09EE                     	goto	l583
  9966  09EE  2A0A               u3840:
  9967  09EF                     	
  9968                           l5639:	
  9969  09EF                     		movlw	3
  9970  09EF  3003               	xorwf	((_wI2CCommandState)),w
  9971  09F0  0663               	btfss	status,2
  9972  09F1  1D03               	goto	u3851
  9973  09F2  29F4               	goto	u3850
  9974  09F3  29F5               u3851:
  9975  09F4                     	goto	l583
  9976  09F4  2A0A               u3850:
  9977  09F5                     	line	88
  9978                           	
  9979                           l5641:	
  9980  09F5                     ;I2C.c: 87:     {;I2C.c: 88:         wNewI2CReception = 0;
  9981                           	clrf	(_wNewI2CReception)
  9982  09F5  01D3               	line	89
  9983                           	
  9984                           l5643:	
  9985  09F6                     ;I2C.c: 89:         memcpy(oData,wI2CRxBuffer,oDataSize);
  9986                           	movf	(GetNewReceivedData@oData),w
  9987  09F6  083B               	movwf	(memcpy@d1)
  9988  09F7  00AC               	movlw	0x0
  9989  09F8  3000               
  9990                           	movwf	(memcpy@d1+1)
  9991  09F9  00AD               	movlw	low(_wI2CRxBuffer)
  9992  09FA  3034               	movwf	(memcpy@s1)
  9993  09FB  00AE               	movlw	high(_wI2CRxBuffer)
  9994  09FC  3001               	movwf	(memcpy@s1+1)
  9995  09FD  00AF               	movf	(GetNewReceivedData@oDataSize),w
  9996  09FE  0838               	movwf	(??_GetNewReceivedData+0)+0
  9997  09FF  00B9               	clrf	(??_GetNewReceivedData+0)+0+1
  9998  0A00  01BA               	movf	0+(??_GetNewReceivedData+0)+0,w
  9999  0A01  0839               	movwf	(memcpy@n)
 10000  0A02  00B0               	movf	1+(??_GetNewReceivedData+0)+0,w
 10001  0A03  083A               	movwf	(memcpy@n+1)
 10002  0A04  00B1               	fcall	_memcpy
 10003  0A05  318B  232B  3189   	goto	l583
 10004  0A08  2A0A               	line	90
 10005                           	
 10006                           l5645:	
 10007  0A09                     ;I2C.c: 90:         return 1;;	Return value of _GetNewReceivedData is never used
 10008                           	goto	l583
 10009  0A09  2A0A               	line	91
 10010                           ;I2C.c: 91:     }
 10011                           	
 10012                           l582:	
 10013  0A0A                     	line	93
 10014                           ;I2C.c: 92:     return 0;;	Return value of _GetNewReceivedData is never used
 10015                           	
 10016                           l583:	
 10017  0A0A                     	return
 10018  0A0A  0008               	opt stack 0
 10019                           GLOBAL	__end_of_GetNewReceivedData
 10020                           	__end_of_GetNewReceivedData:
 10021  0A0B                     	signat	_GetNewReceivedData,8314
 10022                           	global	_memcpy
 10023                           
 10024 ;; *************** function _memcpy *****************
 10025 ;; Defined at:
 10026 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
 10027 ;; Parameters:    Size  Location     Type
 10028 ;;  d1              2   12[BANK0 ] PTR void 
 10029 ;;		 -> gEusartTXBuffer(70), wI2CTxBuffer(20), EM1812EntryPoint@ReceptionBuffer(8), 
 10030 ;;  s1              2   14[BANK0 ] PTR const void 
 10031 ;;		 -> STR_26(14), STR_24(6), STR_22(13), Esp8266SetNetworkParameters@wCommand(70), 
 10032 ;;		 -> Esp8266OpenSocketCommand@wCommand(70), wI2CRxBuffer(20), EM1812EntryPoint@SetGetTempCommand(4), 
 10033 ;;  n               2   16[BANK0 ] unsigned int 
 10034 ;; Auto vars:     Size  Location     Type
 10035 ;;  s               2   22[BANK0 ] PTR const unsigned char 
 10036 ;;		 -> STR_26(14), STR_24(6), STR_22(13), Esp8266SetNetworkParameters@wCommand(70), 
 10037 ;;		 -> Esp8266OpenSocketCommand@wCommand(70), wI2CRxBuffer(20), EM1812EntryPoint@SetGetTempCommand(4), 
 10038 ;;  d               2   20[BANK0 ] PTR unsigned char 
 10039 ;;		 -> gEusartTXBuffer(70), wI2CTxBuffer(20), EM1812EntryPoint@ReceptionBuffer(8), 
 10040 ;;  tmp             1   19[BANK0 ] unsigned char 
 10041 ;; Return value:  Size  Location     Type
 10042 ;;                  2   12[BANK0 ] PTR void 
 10043 ;; Registers used:
 10044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10045 ;; Tracked objects:
 10046 ;;		On entry : 0/0
 10047 ;;		On exit  : 0/0
 10048 ;;		Unchanged: 0/0
 10049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10050 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 10051 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 10052 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10053 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0
 10054 ;;Total ram usage:       12 bytes
 10055 ;; Hardware stack levels used:    1
 10056 ;; Hardware stack levels required when called:    6
 10057 ;; This function calls:
 10058 ;;		Nothing
 10059 ;; This function is called by:
 10060 ;;		_I2C_SendData
 10061 ;;		_GetNewReceivedData
 10062 ;;		_Send_UART_Data
 10063 ;; This function uses a non-reentrant model
 10064 ;;
 10065                           psect	text28,local,class=CODE,delta=2,merge=1,group=2
 10066                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
 10067                           	line	4
 10068                           global __ptext28
 10069                           __ptext28:	;psect for function _memcpy
 10070  0B2B                     psect	text28
 10071                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
 10072                           	line	4
 10073                           	global	__size_of_memcpy
 10074                           	__size_of_memcpy	equ	__end_of_memcpy-_memcpy
 10075  002F                     	
 10076                           _memcpy:	
 10077  0B2B                     ;incstack = 0
 10078                           	opt	stack 7
 10079                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
 10080                           	line	11
 10081                           	
 10082                           l5471:	
 10083  0B2B                     	movlb 0	; select bank0
 10084  0B2B  0020               	movf	(memcpy@s1+1),w
 10085  0B2C  082F               	movwf	(memcpy@s+1)
 10086  0B2D  00B7               	movf	(memcpy@s1),w
 10087  0B2E  082E               	movwf	(memcpy@s)
 10088  0B2F  00B6               	line	12
 10089                           	movf	(memcpy@d1+1),w
 10090  0B30  082D               	movwf	(memcpy@d+1)
 10091  0B31  00B5               	movf	(memcpy@d1),w
 10092  0B32  082C               	movwf	(memcpy@d)
 10093  0B33  00B4               	line	13
 10094                           	goto	l5481
 10095  0B34  2B4C               	
 10096                           l1358:	
 10097  0B35                     	line	14
 10098                           	
 10099                           l5473:	
 10100  0B35                     	movf	(memcpy@s),w
 10101  0B35  0836               	movwf	fsr0l
 10102  0B36  0084               	movf	((memcpy@s+1)),w
 10103  0B37  0837               	movwf	fsr0h
 10104  0B38  0085               	movf	indf0,w ;code access
 10105  0B39  0800               	movwf	(??_memcpy+0)+0
 10106  0B3A  00B2               	movf	(??_memcpy+0)+0,w
 10107  0B3B  0832               	movwf	(memcpy@tmp)
 10108  0B3C  00B3               	
 10109                           l5475:	
 10110  0B3D                     	movlw	01h
 10111  0B3D  3001               	addwf	(memcpy@s),f
 10112  0B3E  07B6               	movlw	0
 10113  0B3F  3000               	addwfc	(memcpy@s+1),f
 10114  0B40  3DB7               	line	15
 10115                           	
 10116                           l5477:	
 10117  0B41                     	movf	(memcpy@d),w
 10118  0B41  0834               	movwf	fsr1l
 10119  0B42  0086               	movf	(memcpy@d+1),w
 10120  0B43  0835               	movwf	fsr1h
 10121  0B44  0087               	movf	(memcpy@tmp),w
 10122  0B45  0833               	movwf	indf1
 10123  0B46  0081               	
 10124                           l5479:	
 10125  0B47                     	movlw	01h
 10126  0B47  3001               	addwf	(memcpy@d),f
 10127  0B48  07B4               	movlw	0
 10128  0B49  3000               	addwfc	(memcpy@d+1),f
 10129  0B4A  3DB5               	goto	l5481
 10130  0B4B  2B4C               	line	16
 10131                           	
 10132                           l1357:	
 10133  0B4C                     	line	13
 10134                           	
 10135                           l5481:	
 10136  0B4C                     	movlw	01h
 10137  0B4C  3001               	subwf	(memcpy@n),f
 10138  0B4D  02B0               	movlw	0
 10139  0B4E  3000               	subwfb	(memcpy@n+1),f
 10140  0B4F  3BB1               		incf	(((memcpy@n))),w
 10141  0B50  0A30               	skipz
 10142  0B51  1D03               	goto	u3691
 10143  0B52  2B57               	incf	(((memcpy@n+1))),w
 10144  0B53  0A31               	btfss	status,2
 10145  0B54  1D03               	goto	u3691
 10146  0B55  2B57               	goto	u3690
 10147  0B56  2B58               u3691:
 10148  0B57                     	goto	l5473
 10149  0B57  2B35               u3690:
 10150  0B58                     	goto	l1360
 10151  0B58  2B59               	
 10152                           l1359:	
 10153  0B59                     	line	18
 10154                           ;	Return value of _memcpy is never used
 10155                           	
 10156                           l1360:	
 10157  0B59                     	return
 10158  0B59  0008               	opt stack 0
 10159                           GLOBAL	__end_of_memcpy
 10160                           	__end_of_memcpy:
 10161  0B5A                     	signat	_memcpy,12409
 10162                           	global	_GetI2CStatus
 10163                           
 10164 ;; *************** function _GetI2CStatus *****************
 10165 ;; Defined at:
 10166 ;;		line 38 in file "I2C.c"
 10167 ;; Parameters:    Size  Location     Type
 10168 ;;		None
 10169 ;; Auto vars:     Size  Location     Type
 10170 ;;		None
 10171 ;; Return value:  Size  Location     Type
 10172 ;;                  2   12[BANK0 ] int 
 10173 ;; Registers used:
 10174 ;;		wreg
 10175 ;; Tracked objects:
 10176 ;;		On entry : 0/0
 10177 ;;		On exit  : 0/0
 10178 ;;		Unchanged: 0/0
 10179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10180 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10182 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10183 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 10184 ;;Total ram usage:        4 bytes
 10185 ;; Hardware stack levels used:    1
 10186 ;; Hardware stack levels required when called:    6
 10187 ;; This function calls:
 10188 ;;		Nothing
 10189 ;; This function is called by:
 10190 ;;		_EM1812EntryPoint
 10191 ;; This function uses a non-reentrant model
 10192 ;;
 10193                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
 10194                           	file	"I2C.c"
 10195                           	line	38
 10196                           global __ptext29
 10197                           __ptext29:	;psect for function _GetI2CStatus
 10198  0953                     psect	text29
 10199                           	file	"I2C.c"
 10200                           	line	38
 10201                           	global	__size_of_GetI2CStatus
 10202                           	__size_of_GetI2CStatus	equ	__end_of_GetI2CStatus-_GetI2CStatus
 10203  000A                     	
 10204                           _GetI2CStatus:	
 10205  0953                     ;incstack = 0
 10206                           	opt	stack 8
 10207                           ; Regs used in _GetI2CStatus: [wreg]
 10208                           	line	40
 10209                           	
 10210                           l5603:	
 10211  0953                     ;I2C.c: 40:   return wI2CCommandState;
 10212                           	movlb 0	; select bank0
 10213  0953  0020               	movf	(_wI2CCommandState),w
 10214  0954  0863               	movwf	(??_GetI2CStatus+0)+0
 10215  0955  00AE               	clrf	(??_GetI2CStatus+0)+0+1
 10216  0956  01AF               	movf	0+(??_GetI2CStatus+0)+0,w
 10217  0957  082E               	movwf	(?_GetI2CStatus)
 10218  0958  00AC               	movf	1+(??_GetI2CStatus+0)+0,w
 10219  0959  082F               	movwf	(?_GetI2CStatus+1)
 10220  095A  00AD               	goto	l565
 10221  095B  295C               	
 10222                           l5605:	
 10223  095C                     	line	41
 10224                           	
 10225                           l565:	
 10226  095C                     	return
 10227  095C  0008               	opt stack 0
 10228                           GLOBAL	__end_of_GetI2CStatus
 10229                           	__end_of_GetI2CStatus:
 10230  095D                     	signat	_GetI2CStatus,90
 10231                           	global	_Debounce
 10232                           
 10233 ;; *************** function _Debounce *****************
 10234 ;; Defined at:
 10235 ;;		line 73 in file "161518_temp_main.c"
 10236 ;; Parameters:    Size  Location     Type
 10237 ;;  iSwitch         1    wreg     unsigned char 
 10238 ;;  ioTimer         1   12[BANK0 ] PTR unsigned short 
 10239 ;;		 -> main@wDebounceDown(2), main@wDebounceUp(2), main@wDebounceEnter(2), 
 10240 ;;  swPressed       1   13[BANK0 ] PTR unsigned char 
 10241 ;;		 -> main@wEnterBottonPressed(1), main@wDownBottonPressed(1), main@wUpBottonPressed(1), 
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;  iSwitch         1   16[BANK0 ] unsigned char 
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  1    wreg      void 
 10246 ;; Registers used:
 10247 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10253 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10254 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10255 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10256 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 10257 ;;Total ram usage:        5 bytes
 10258 ;; Hardware stack levels used:    1
 10259 ;; Hardware stack levels required when called:    6
 10260 ;; This function calls:
 10261 ;;		Nothing
 10262 ;; This function is called by:
 10263 ;;		_main
 10264 ;; This function uses a non-reentrant model
 10265 ;;
 10266                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
 10267                           	file	"161518_temp_main.c"
 10268                           	line	73
 10269                           global __ptext30
 10270                           __ptext30:	;psect for function _Debounce
 10271  0C96                     psect	text30
 10272                           	file	"161518_temp_main.c"
 10273                           	line	73
 10274                           	global	__size_of_Debounce
 10275                           	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 10276  004C                     	
 10277                           _Debounce:	
 10278  0C96                     ;incstack = 0
 10279                           	opt	stack 9
 10280                           ; Regs used in _Debounce: [wreg+fsr1l+fsr1h+status,2+status,0]
 10281                           ;Debounce@iSwitch stored from wreg
 10282                           	movlb 0	; select bank0
 10283  0C96  0020               	movwf	(Debounce@iSwitch)
 10284  0C97  00B0               	line	74
 10285                           	
 10286                           l5803:	
 10287  0C98                     	movf	((Debounce@iSwitch)),w
 10288  0C98  0830               	btfss	status,2
 10289  0C99  1D03               	goto	u4121
 10290  0C9A  2C9C               	goto	u4120
 10291  0C9B  2C9D               u4121:
 10292  0C9C                     	goto	l5807
 10293  0C9C  2CA7               u4120:
 10294  0C9D                     	line	76
 10295                           	
 10296                           l5805:	
 10297  0C9D                     	movf	(Debounce@ioTimer),w
 10298  0C9D  082C               	movwf	fsr1l
 10299  0C9E  0086               	movlw 2	; select bank4/5
 10300  0C9F  3002               	movwf fsr1h	
 10301  0CA0  0087               	
 10302                           	movlw	01h
 10303  0CA1  3001               	addwf	indf1,f
 10304  0CA2  0781               	addfsr	fsr1,1
 10305  0CA3  3141               	skipnc
 10306  0CA4  1803               	incf	indf1,f
 10307  0CA5  0A81               	line	77
 10308                           	goto	l5809
 10309  0CA6  2CAF               	
 10310                           l154:	
 10311  0CA7                     	line	78
 10312                           	
 10313                           l5807:	
 10314  0CA7                     	movf	(Debounce@ioTimer),w
 10315  0CA7  082C               	movwf	fsr1l
 10316  0CA8  0086               	movlw 2	; select bank4/5
 10317  0CA9  3002               	movwf fsr1h	
 10318  0CAA  0087               	
 10319                           	movlw	0
 10320  0CAB  3000               	movwi	[0]fsr1
 10321  0CAC  3FC0               	movwi	[1]fsr1
 10322  0CAD  3FC1               	goto	l5809
 10323  0CAE  2CAF               	line	79
 10324                           	
 10325                           l155:	
 10326  0CAF                     	line	80
 10327                           	
 10328                           l5809:	
 10329  0CAF                     	movf	(Debounce@ioTimer),w
 10330  0CAF  082C               	movwf	fsr1l
 10331  0CB0  0086               	movlw 2	; select bank4/5
 10332  0CB1  3002               	movwf fsr1h	
 10333  0CB2  0087               	
 10334                           	moviw	fsr1++
 10335  0CB3  0016               xorlw	208
 10336  0CB4  3AD0               movwf	(??_Debounce+0)+0
 10337  0CB5  00AE               moviw	fsr1++
 10338  0CB6  0016               xorlw	7
 10339  0CB7  3A07               iorwf	(??_Debounce+0)+0
 10340  0CB8  04AE               	btfss	status,2
 10341  0CB9  1D03               	goto	u4131
 10342  0CBA  2CBC               	goto	u4130
 10343  0CBB  2CBD               u4131:
 10344  0CBC                     	goto	l5813
 10345  0CBC  2CC4               u4130:
 10346  0CBD                     	line	81
 10347                           	
 10348                           l5811:	
 10349  0CBD                     	movf	(Debounce@swPressed),w
 10350  0CBD  082D               	movwf	fsr1l
 10351  0CBE  0086               	movlw 2	; select bank4/5
 10352  0CBF  3002               	movwf fsr1h	
 10353  0CC0  0087               	
 10354                           	clrf	indf1
 10355  0CC1  0181               	incf	indf1,f
 10356  0CC2  0A81               	goto	l5813
 10357  0CC3  2CC4               	line	82
 10358                           	
 10359                           l156:	
 10360  0CC4                     	line	83
 10361                           	
 10362                           l5813:	
 10363  0CC4                     	movf	(Debounce@ioTimer),w
 10364  0CC4  082C               	movwf	fsr1l
 10365  0CC5  0086               	movlw 2	; select bank4/5
 10366  0CC6  3002               	movwf fsr1h	
 10367  0CC7  0087               	
 10368                           	moviw	fsr1++
 10369  0CC8  0016               xorlw	64
 10370  0CC9  3A40               movwf	(??_Debounce+0)+0
 10371  0CCA  00AE               moviw	fsr1++
 10372  0CCB  0016               xorlw	31
 10373  0CCC  3A1F               iorwf	(??_Debounce+0)+0
 10374  0CCD  04AE               	btfss	status,2
 10375  0CCE  1D03               	goto	u4141
 10376  0CCF  2CD1               	goto	u4140
 10377  0CD0  2CD2               u4141:
 10378  0CD1                     	goto	l158
 10379  0CD1  2CE1               u4140:
 10380  0CD2                     	line	84
 10381                           	
 10382                           l5815:	
 10383  0CD2                     	movf	(Debounce@ioTimer),w
 10384  0CD2  082C               	movwf	fsr1l
 10385  0CD3  0086               	movlw 2	; select bank4/5
 10386  0CD4  3002               	movwf fsr1h	
 10387  0CD5  0087               	
 10388                           	movlw	0D1h
 10389  0CD6  30D1               	movwi	[0]fsr1
 10390  0CD7  3FC0               	movlw	07h
 10391  0CD8  3007               	movwi	[1]fsr1
 10392  0CD9  3FC1               	line	85
 10393                           	
 10394                           l5817:	
 10395  0CDA                     	movf	(Debounce@swPressed),w
 10396  0CDA  082D               	movwf	fsr1l
 10397  0CDB  0086               	movlw 2	; select bank4/5
 10398  0CDC  3002               	movwf fsr1h	
 10399  0CDD  0087               	
 10400                           	clrf	indf1
 10401  0CDE  0181               	incf	indf1,f
 10402  0CDF  0A81               	goto	l158
 10403  0CE0  2CE1               	line	86
 10404                           	
 10405                           l157:	
 10406  0CE1                     	line	87
 10407                           	
 10408                           l158:	
 10409  0CE1                     	return
 10410  0CE1  0008               	opt stack 0
 10411                           GLOBAL	__end_of_Debounce
 10412                           	__end_of_Debounce:
 10413  0CE2                     	signat	_Debounce,12409
 10414                           	global	_AddTrace
 10415                           
 10416 ;; *************** function _AddTrace *****************
 10417 ;; Defined at:
 10418 ;;		line 51 in file "GeneralFunction.c"
 10419 ;; Parameters:    Size  Location     Type
 10420 ;;  oText           1    wreg     PTR unsigned char 
 10421 ;;		 -> wInterruptText(75), 
 10422 ;;  iSizeOfoText    1   34[BANK0 ] unsigned char 
 10423 ;;  iText           2   35[BANK0 ] PTR unsigned char 
 10424 ;;		 -> STR_9(9), STR_8(12), main@wReadout(20), 
 10425 ;; Auto vars:     Size  Location     Type
 10426 ;;  oText           1    6[BANK1 ] PTR unsigned char 
 10427 ;;		 -> wInterruptText(75), 
 10428 ;; Return value:  Size  Location     Type
 10429 ;;                  1    wreg      void 
 10430 ;; Registers used:
 10431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10432 ;; Tracked objects:
 10433 ;;		On entry : 0/0
 10434 ;;		On exit  : 0/0
 10435 ;;		Unchanged: 0/0
 10436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10437 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 10438 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
 10439 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
       0       0
 10440 ;;      Totals:         0       3       7       0       0       0       0       0       0       0       0       0       
       0       0
 10441 ;;Total ram usage:       10 bytes
 10442 ;; Hardware stack levels used:    1
 10443 ;; Hardware stack levels required when called:    8
 10444 ;; This function calls:
 10445 ;;		_strcat
 10446 ;;		_strlen
 10447 ;; This function is called by:
 10448 ;;		_main
 10449 ;; This function uses a non-reentrant model
 10450 ;;
 10451                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
 10452                           	file	"GeneralFunction.c"
 10453                           	line	51
 10454                           global __ptext31
 10455                           __ptext31:	;psect for function _AddTrace
 10456  0C4D                     psect	text31
 10457                           	file	"GeneralFunction.c"
 10458                           	line	51
 10459                           	global	__size_of_AddTrace
 10460                           	__size_of_AddTrace	equ	__end_of_AddTrace-_AddTrace
 10461  0049                     	
 10462                           _AddTrace:	
 10463  0C4D                     ;incstack = 0
 10464                           	opt	stack 7
 10465                           ; Regs used in _AddTrace: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10466                           ;AddTrace@oText stored from wreg
 10467                           	movlb 1	; select bank1
 10468  0C4D  0021               	movwf	(AddTrace@oText)^080h
 10469  0C4E  00BD               	line	53
 10470                           	
 10471                           l5987:	
 10472  0C4F                     ;GeneralFunction.c: 51: void AddTrace(char* oText, char iSizeOfoText, char* iText);Gener
                                 alFunction.c: 52: {;GeneralFunction.c: 53:     if((iSizeOfoText - 1 - strlen(oText)) > s
                                 trlen(iText))
 10473                           	movf	(AddTrace@oText)^080h,w
 10474  0C4F  083D               	movlb 0	; select bank0
 10475  0C50  0020               	movwf	(strlen@s)
 10476  0C51  00AC               	movlw	0x1
 10477  0C52  3001               
 10478                           	movwf	(strlen@s+1)
 10479  0C53  00AD               	fcall	_strlen
 10480  0C54  318A  220B  318C   	movlb 0	; select bank0
 10481  0C57  0020               	comf	(0+(?_strlen)),w
 10482  0C58  092C               	movlb 1	; select bank1
 10483  0C59  0021               	movwf	(??_AddTrace+0)^080h+0
 10484  0C5A  00B7               	movlb 0	; select bank0
 10485  0C5B  0020               	comf	(1+(?_strlen)),w
 10486  0C5C  092D               	movlb 1	; select bank1
 10487  0C5D  0021               	movwf	((??_AddTrace+0)^080h+0+1)
 10488  0C5E  00B8               	incf	(??_AddTrace+0)^080h+0,f
 10489  0C5F  0AB7               	skipnz
 10490  0C60  1903               	incf	((??_AddTrace+0)^080h+0+1),f
 10491  0C61  0AB8               	movlb 0	; select bank0
 10492  0C62  0020               	movf	(AddTrace@iSizeOfoText),w
 10493  0C63  0842               	movlb 1	; select bank1
 10494  0C64  0021               	addwf	0+(??_AddTrace+0)^080h+0,w
 10495  0C65  0737               	movwf	(??_AddTrace+2)^080h+0
 10496  0C66  00B9               	movf	1+(??_AddTrace+0)^080h+0,w
 10497  0C67  0838               	skipnc
 10498  0C68  1803               	incf	1+(??_AddTrace+0)^080h+0,w
 10499  0C69  0A38               	movwf	((??_AddTrace+2)^080h+0)+1
 10500  0C6A  00BA               	movf	0+(??_AddTrace+2)^080h+0,w
 10501  0C6B  0839               	addlw	0FFh
 10502  0C6C  3EFF               	movwf	(??_AddTrace+4)^080h+0
 10503  0C6D  00BB               	movlw	0FFh
 10504  0C6E  30FF               	addwfc	1+(??_AddTrace+2)^080h+0,w
 10505  0C6F  3D3A               	movwf	1+(??_AddTrace+4)^080h+0
 10506  0C70  00BC               	movlb 0	; select bank0
 10507  0C71  0020               	movf	(AddTrace@iText+1),w
 10508  0C72  0844               	movwf	(strlen@s+1)
 10509  0C73  00AD               	movf	(AddTrace@iText),w
 10510  0C74  0843               	movwf	(strlen@s)
 10511  0C75  00AC               	fcall	_strlen
 10512  0C76  318A  220B  318C   	movlb 1	; select bank1
 10513  0C79  0021               	movf	1+(??_AddTrace+4)^080h+0,w
 10514  0C7A  083C               	movlb 0	; select bank0
 10515  0C7B  0020               	subwf	(1+(?_strlen)),w
 10516  0C7C  022D               	skipz
 10517  0C7D  1D03               	goto	u4305
 10518  0C7E  2C83               	movlb 1	; select bank1
 10519  0C7F  0021               	movf	0+(??_AddTrace+4)^080h+0,w
 10520  0C80  083B               	movlb 0	; select bank0
 10521  0C81  0020               	subwf	(0+(?_strlen)),w
 10522  0C82  022C               u4305:
 10523  0C83                     	skipnc
 10524  0C83  1803               	goto	u4301
 10525  0C84  2C86               	goto	u4300
 10526  0C85  2C87               u4301:
 10527  0C86                     	goto	l643
 10528  0C86  2C95               u4300:
 10529  0C87                     	line	55
 10530                           	
 10531                           l5989:	
 10532  0C87                     ;GeneralFunction.c: 54:     {;GeneralFunction.c: 55:         strcat(oText,iText);
 10533                           	movlb 1	; select bank1
 10534  0C87  0021               	movf	(AddTrace@oText)^080h,w
 10535  0C88  083D               	movlb 0	; select bank0
 10536  0C89  0020               	movwf	(strcat@dest)
 10537  0C8A  00BE               	movlw	0x1
 10538  0C8B  3001               
 10539                           	movwf	(strcat@dest+1)
 10540  0C8C  00BF               	movf	(AddTrace@iText+1),w
 10541  0C8D  0844               	movwf	(strcat@src+1)
 10542  0C8E  00C1               	movf	(AddTrace@iText),w
 10543  0C8F  0843               	movwf	(strcat@src)
 10544  0C90  00C0               	fcall	_strcat
 10545  0C91  3189  21B8  318C   	goto	l643
 10546  0C94  2C95               	line	56
 10547                           ;GeneralFunction.c: 56:     }
 10548                           	
 10549                           l642:	
 10550  0C95                     	line	57
 10551                           	
 10552                           l643:	
 10553  0C95                     	return
 10554  0C95  0008               	opt stack 0
 10555                           GLOBAL	__end_of_AddTrace
 10556                           	__end_of_AddTrace:
 10557  0C96                     	signat	_AddTrace,12409
 10558                           	global	_strcat
 10559                           
 10560 ;; *************** function _strcat *****************
 10561 ;; Defined at:
 10562 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
 10563 ;; Parameters:    Size  Location     Type
 10564 ;;  dest            2   30[BANK0 ] PTR unsigned char 
 10565 ;;		 -> Esp8266SetNetworkParameters@wCommand(70), Esp8266OpenSocketCommand@wCommand(70), wInterruptText(75), 
 10566 ;;  src             2   32[BANK0 ] PTR const unsigned char 
 10567 ;;		 -> STR_31(14), STR_30(4), STR_28(9), STR_27(7), 
 10568 ;;		 -> STR_20(5), STR_19(5), Esp8266SetNetworkParameters@wNumber(3), STR_18(3), 
 10569 ;;		 -> STR_17(4), STR_14(3), Esp8266OpenSocketCommand@wPort(7), STR_13(3), 
 10570 ;;		 -> STR_12(4), NULL(0), STR_9(9), STR_8(12), 
 10571 ;;		 -> main@wReadout(20), 
 10572 ;; Auto vars:     Size  Location     Type
 10573 ;;		None
 10574 ;; Return value:  Size  Location     Type
 10575 ;;                  2   30[BANK0 ] PTR unsigned char 
 10576 ;; Registers used:
 10577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10578 ;; Tracked objects:
 10579 ;;		On entry : 0/0
 10580 ;;		On exit  : 0/0
 10581 ;;		Unchanged: 0/0
 10582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10583 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 10584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10586 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 10587 ;;Total ram usage:        4 bytes
 10588 ;; Hardware stack levels used:    1
 10589 ;; Hardware stack levels required when called:    7
 10590 ;; This function calls:
 10591 ;;		_strcpy
 10592 ;;		_strlen
 10593 ;; This function is called by:
 10594 ;;		_AddTrace
 10595 ;;		_Esp8266OpenSocketCommand
 10596 ;;		_Esp8266SetNetworkParameters
 10597 ;; This function uses a non-reentrant model
 10598 ;;
 10599                           psect	text32,local,class=CODE,delta=2,merge=1,group=2
 10600                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
 10601                           	line	3
 10602                           global __ptext32
 10603                           __ptext32:	;psect for function _strcat
 10604  09B8                     psect	text32
 10605                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
 10606                           	line	3
 10607                           	global	__size_of_strcat
 10608                           	__size_of_strcat	equ	__end_of_strcat-_strcat
 10609  0018                     	
 10610                           _strcat:	
 10611  09B8                     ;incstack = 0
 10612                           	opt	stack 7
 10613                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10614                           	line	5
 10615                           	
 10616                           l5647:	
 10617  09B8                     	movlb 0	; select bank0
 10618  09B8  0020               	movf	(strcat@dest+1),w
 10619  09B9  083F               	movwf	(strlen@s+1)
 10620  09BA  00AD               	movf	(strcat@dest),w
 10621  09BB  083E               	movwf	(strlen@s)
 10622  09BC  00AC               	fcall	_strlen
 10623  09BD  318A  220B  3189   	movlb 0	; select bank0
 10624  09C0  0020               	movf	(0+(?_strlen)),w
 10625  09C1  082C               	addwf	(strcat@dest),w
 10626  09C2  073E               	movwf	(strcpy@dest)
 10627  09C3  00B2               	movf	(1+(?_strlen)),w
 10628  09C4  082D               	addwfc	(strcat@dest+1),w
 10629  09C5  3D3F               	movwf	1+(strcpy@dest)
 10630  09C6  00B3               	movf	(strcat@src+1),w
 10631  09C7  0841               	movwf	(strcpy@src+1)
 10632  09C8  00B5               	movf	(strcat@src),w
 10633  09C9  0840               	movwf	(strcpy@src)
 10634  09CA  00B4               	fcall	_strcpy
 10635  09CB  318A  2282  3189   	goto	l1377
 10636  09CE  29CF               	line	6
 10637                           	
 10638                           l5649:	
 10639  09CF                     	line	7
 10640                           ;	Return value of _strcat is never used
 10641                           	
 10642                           l1377:	
 10643  09CF                     	return
 10644  09CF  0008               	opt stack 0
 10645                           GLOBAL	__end_of_strcat
 10646                           	__end_of_strcat:
 10647  09D0                     	signat	_strcat,8313
 10648                           	global	_strlen
 10649                           
 10650 ;; *************** function _strlen *****************
 10651 ;; Defined at:
 10652 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 10653 ;; Parameters:    Size  Location     Type
 10654 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 10655 ;;		 -> STR_28(9), STR_27(7), Esp8266SetNetworkParameters@wCommand(70), STR_15(17), 
 10656 ;;		 -> Esp8266OpenSocketCommand@wCommand(70), STR_9(9), STR_8(12), main@wReadout(20), 
 10657 ;;		 -> wInterruptText(75), 
 10658 ;; Auto vars:     Size  Location     Type
 10659 ;;  a               2   16[BANK0 ] PTR const unsigned char 
 10660 ;;		 -> STR_28(9), STR_27(7), Esp8266SetNetworkParameters@wCommand(70), STR_15(17), 
 10661 ;;		 -> Esp8266OpenSocketCommand@wCommand(70), STR_9(9), STR_8(12), main@wReadout(20), 
 10662 ;;		 -> wInterruptText(75), 
 10663 ;; Return value:  Size  Location     Type
 10664 ;;                  2   12[BANK0 ] unsigned int 
 10665 ;; Registers used:
 10666 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10667 ;; Tracked objects:
 10668 ;;		On entry : 0/0
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10672 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10673 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10674 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10675 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 10676 ;;Total ram usage:        6 bytes
 10677 ;; Hardware stack levels used:    1
 10678 ;; Hardware stack levels required when called:    6
 10679 ;; This function calls:
 10680 ;;		Nothing
 10681 ;; This function is called by:
 10682 ;;		_PrintLog
 10683 ;;		_AddTrace
 10684 ;;		_strcat
 10685 ;;		_Esp8266OpenSocketCommand
 10686 ;;		_Esp8266SetNetworkParameters
 10687 ;; This function uses a non-reentrant model
 10688 ;;
 10689                           psect	text33,local,class=CODE,delta=2,merge=1,group=2
 10690                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 10691                           	line	12
 10692                           global __ptext33
 10693                           __ptext33:	;psect for function _strlen
 10694  0A0B                     psect	text33
 10695                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 10696                           	line	12
 10697                           	global	__size_of_strlen
 10698                           	__size_of_strlen	equ	__end_of_strlen-_strlen
 10699  0024                     	
 10700                           _strlen:	
 10701  0A0B                     ;incstack = 0
 10702                           	opt	stack 8
 10703                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 10704                           	line	14
 10705                           	
 10706                           l5397:	
 10707  0A0B                     	movlb 0	; select bank0
 10708  0A0B  0020               	movf	(strlen@s+1),w
 10709  0A0C  082D               	movwf	(strlen@a+1)
 10710  0A0D  00B1               	movf	(strlen@s),w
 10711  0A0E  082C               	movwf	(strlen@a)
 10712  0A0F  00B0               	line	16
 10713                           	goto	l5401
 10714  0A10  2A16               	
 10715                           l1387:	
 10716  0A11                     	line	17
 10717                           	
 10718                           l5399:	
 10719  0A11                     	movlw	01h
 10720  0A11  3001               	addwf	(strlen@s),f
 10721  0A12  07AC               	movlw	0
 10722  0A13  3000               	addwfc	(strlen@s+1),f
 10723  0A14  3DAD               	goto	l5401
 10724  0A15  2A16               	line	18
 10725                           	
 10726                           l1386:	
 10727  0A16                     	line	16
 10728                           	
 10729                           l5401:	
 10730  0A16                     	movf	(strlen@s),w
 10731  0A16  082C               	movwf	fsr0l
 10732  0A17  0084               	movf	((strlen@s+1)),w
 10733  0A18  082D               	movwf	fsr0h
 10734  0A19  0085               	moviw	fsr0++
 10735  0A1A  0012               	btfss	status,2
 10736  0A1B  1D03               	goto	u3621
 10737  0A1C  2A1E               	goto	u3620
 10738  0A1D  2A1F               u3621:
 10739  0A1E                     	goto	l5399
 10740  0A1E  2A11               u3620:
 10741  0A1F                     	goto	l5403
 10742  0A1F  2A20               	
 10743                           l1388:	
 10744  0A20                     	line	25
 10745                           	
 10746                           l5403:	
 10747  0A20                     	comf	(strlen@a),w
 10748  0A20  0930               	movwf	(??_strlen+0)+0
 10749  0A21  00AE               	comf	(strlen@a+1),w
 10750  0A22  0931               	movwf	((??_strlen+0)+0+1)
 10751  0A23  00AF               	incf	(??_strlen+0)+0,f
 10752  0A24  0AAE               	skipnz
 10753  0A25  1903               	incf	((??_strlen+0)+0+1),f
 10754  0A26  0AAF               	movf	(strlen@s),w
 10755  0A27  082C               	addwf	0+(??_strlen+0)+0,w
 10756  0A28  072E               	movwf	(?_strlen)
 10757  0A29  00AC               	movf	(strlen@s+1),w
 10758  0A2A  082D               	addwfc	1+(??_strlen+0)+0,w
 10759  0A2B  3D2F               	movwf	1+(?_strlen)
 10760  0A2C  00AD               	goto	l1389
 10761  0A2D  2A2E               	
 10762                           l5405:	
 10763  0A2E                     	line	26
 10764                           	
 10765                           l1389:	
 10766  0A2E                     	return
 10767  0A2E  0008               	opt stack 0
 10768                           GLOBAL	__end_of_strlen
 10769                           	__end_of_strlen:
 10770  0A2F                     	signat	_strlen,4218
 10771                           	global	_strcpy
 10772                           
 10773 ;; *************** function _strcpy *****************
 10774 ;; Defined at:
 10775 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 10776 ;; Parameters:    Size  Location     Type
 10777 ;;  dest            2   18[BANK0 ] PTR unsigned char 
 10778 ;;		 -> Esp8266SetNetworkParameters@wCommand(70), Esp8266OpenSocketCommand@wCommand(70), wInterruptText(75), 
 10779 ;;  src             2   20[BANK0 ] PTR const unsigned char 
 10780 ;;		 -> STR_31(14), STR_30(4), STR_28(9), STR_27(7), 
 10781 ;;		 -> STR_20(5), STR_19(5), Esp8266SetNetworkParameters@wNumber(3), STR_18(3), 
 10782 ;;		 -> STR_17(4), STR_16(11), STR_14(3), Esp8266OpenSocketCommand@wPort(7), 
 10783 ;;		 -> STR_13(3), STR_12(4), STR_11(14), NULL(0), 
 10784 ;;		 -> STR_9(9), STR_8(12), main@wReadout(20), 
 10785 ;; Auto vars:     Size  Location     Type
 10786 ;;  d               2   28[BANK0 ] PTR unsigned char 
 10787 ;;		 -> Esp8266SetNetworkParameters@wCommand(70), Esp8266OpenSocketCommand@wCommand(70), wInterruptText(75), 
 10788 ;;  s               2   26[BANK0 ] PTR const unsigned char 
 10789 ;;		 -> STR_31(14), STR_30(4), STR_28(9), STR_27(7), 
 10790 ;;		 -> STR_20(5), STR_19(5), Esp8266SetNetworkParameters@wNumber(3), STR_18(3), 
 10791 ;;		 -> STR_17(4), STR_16(11), STR_14(3), Esp8266OpenSocketCommand@wPort(7), 
 10792 ;;		 -> STR_13(3), STR_12(4), STR_11(14), NULL(0), 
 10793 ;;		 -> STR_9(9), STR_8(12), main@wReadout(20), 
 10794 ;; Return value:  Size  Location     Type
 10795 ;;                  2   18[BANK0 ] PTR unsigned char 
 10796 ;; Registers used:
 10797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, pclath
 10798 ;; Tracked objects:
 10799 ;;		On entry : 0/0
 10800 ;;		On exit  : 0/0
 10801 ;;		Unchanged: 0/0
 10802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10803 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 10804 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 10805 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 10806 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0
 10807 ;;Total ram usage:       12 bytes
 10808 ;; Hardware stack levels used:    1
 10809 ;; Hardware stack levels required when called:    6
 10810 ;; This function calls:
 10811 ;;		Nothing
 10812 ;; This function is called by:
 10813 ;;		_strcat
 10814 ;;		_Esp8266OpenSocketCommand
 10815 ;;		_Esp8266SetNetworkParameters
 10816 ;; This function uses a non-reentrant model
 10817 ;;
 10818                           psect	text34,local,class=CODE,delta=2,merge=1,group=2
 10819                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 10820                           	line	7
 10821                           global __ptext34
 10822                           __ptext34:	;psect for function _strcpy
 10823  0A82                     psect	text34
 10824                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 10825                           	line	7
 10826                           	global	__size_of_strcpy
 10827                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
 10828  002A                     	
 10829                           _strcpy:	
 10830  0A82                     ;incstack = 0
 10831                           	opt	stack 7
 10832                           ; Regs used in _strcpy: [wreg-fsr1h+pclath]
 10833                           	line	13
 10834                           	
 10835                           l5483:	
 10836  0A82                     	movlb 0	; select bank0
 10837  0A82  0020               	movf	(strcpy@src+1),w
 10838  0A83  0835               	movwf	(strcpy@s+1)
 10839  0A84  00BB               	movf	(strcpy@src),w
 10840  0A85  0834               	movwf	(strcpy@s)
 10841  0A86  00BA               	line	14
 10842                           	movf	(strcpy@dest+1),w
 10843  0A87  0833               	movwf	(strcpy@d+1)
 10844  0A88  00BD               	movf	(strcpy@dest),w
 10845  0A89  0832               	movwf	(strcpy@d)
 10846  0A8A  00BC               	line	15
 10847                           	goto	l5485
 10848  0A8B  2A8D               	
 10849                           l1381:	
 10850  0A8C                     	goto	l5485
 10851  0A8C  2A8D               	
 10852                           l1380:	
 10853  0A8D                     	
 10854                           l5485:	
 10855  0A8D                     	movf	(strcpy@d+1),w
 10856  0A8D  083D               	movwf	(??_strcpy+0)+0+1
 10857  0A8E  00B7               	movf	(strcpy@d),w
 10858  0A8F  083C               	movwf	(??_strcpy+0)+0
 10859  0A90  00B6               	incf	(strcpy@d),f
 10860  0A91  0ABC               	skipnz
 10861  0A92  1903               	incf	(strcpy@d+1),f
 10862  0A93  0ABD               	movf	0+(??_strcpy+0)+0,w
 10863  0A94  0836               	movwf	fsr1l
 10864  0A95  0086               	movf	1+(??_strcpy+0)+0,w
 10865  0A96  0837               	movwf	fsr1h
 10866  0A97  0087               
 10867                           	movf	(strcpy@s+1),w
 10868  0A98  083B               	movwf	(??_strcpy+2)+0+1
 10869  0A99  00B9               	movf	(strcpy@s),w
 10870  0A9A  083A               	movwf	(??_strcpy+2)+0
 10871  0A9B  00B8               	incf	(strcpy@s),f
 10872  0A9C  0ABA               	skipnz
 10873  0A9D  1903               	incf	(strcpy@s+1),f
 10874  0A9E  0ABB               	movf	0+(??_strcpy+2)+0,w
 10875  0A9F  0838               	movwf	fsr0l
 10876  0AA0  0084               	movf	(1+(??_strcpy+2)+0),w
 10877  0AA1  0839               	movwf	fsr0h
 10878  0AA2  0085               	movf	indf0,w ;code access
 10879  0AA3  0800               	movwi	[0]fsr1
 10880  0AA4  3FC0               	movf	wreg
 10881  0AA5  0889               	btfss	status,2
 10882  0AA6  1D03               	goto	u3701
 10883  0AA7  2AA9               	goto	u3700
 10884  0AA8  2AAA               u3701:
 10885  0AA9                     	goto	l5485
 10886  0AA9  2A8D               u3700:
 10887  0AAA                     	goto	l1383
 10888  0AAA  2AAB               	
 10889                           l1382:	
 10890  0AAB                     	line	18
 10891                           ;	Return value of _strcpy is never used
 10892                           	
 10893                           l1383:	
 10894  0AAB                     	return
 10895  0AAB  0008               	opt stack 0
 10896                           GLOBAL	__end_of_strcpy
 10897                           	__end_of_strcpy:
 10898  0AAC                     	signat	_strcpy,8313
 10899                           	global	_myint
 10900                           
 10901 ;; *************** function _myint *****************
 10902 ;; Defined at:
 10903 ;;		line 348 in file "161518_temp_main.c"
 10904 ;; Parameters:    Size  Location     Type
 10905 ;;		None
 10906 ;; Auto vars:     Size  Location     Type
 10907 ;;  wText           3    7[BANK0 ] unsigned char [3]
 10908 ;;  wI2CError       2   10[BANK0 ] int 
 10909 ;;  wEUSARTError    2    5[BANK0 ] int 
 10910 ;; Return value:  Size  Location     Type
 10911 ;;                  1    wreg      void 
 10912 ;; Registers used:
 10913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10914 ;; Tracked objects:
 10915 ;;		On entry : 0/0
 10916 ;;		On exit  : 0/0
 10917 ;;		Unchanged: 0/0
 10918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10920 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
 10921 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10922 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 10923 ;;Total ram usage:        8 bytes
 10924 ;; Hardware stack levels used:    1
 10925 ;; Hardware stack levels required when called:    5
 10926 ;; This function calls:
 10927 ;;		_EUSARTInterrupt
 10928 ;;		_I2C_Interrupt
 10929 ;;		_TempUpdateRequest
 10930 ;;		i1_lcdWriteText
 10931 ;; This function is called by:
 10932 ;;		Interrupt level 1
 10933 ;; This function uses a non-reentrant model
 10934 ;;
 10935                           psect	intentry,class=CODE,delta=2
 10936                           global __pintentry
 10937                           __pintentry:
 10938  0004                     psect	intentry
 10939                           	file	"161518_temp_main.c"
 10940                           	line	348
 10941                           	global	__size_of_myint
 10942                           	__size_of_myint	equ	__end_of_myint-_myint
 10943  005C                     	
 10944                           _myint:	
 10945  0004                     ;incstack = 0
 10946                           	opt	stack 4
 10947                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
 10948  0004  147E               ; Regs used in _myint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10949                           psect	intentry
 10950                           	pagesel	$
 10951  0005  3180               	line	349
 10952                           	
 10953                           i1l6393:	
 10954  0006                     	movlb 0	; select bank0
 10955  0006  0020               	clrf	(myint@wI2CError)
 10956  0007  01AA               	clrf	(myint@wI2CError+1)
 10957  0008  01AB               	clrf	(myint@wEUSARTError)
 10958  0009  01A5               	clrf	(myint@wEUSARTError+1)
 10959  000A  01A6               	line	350
 10960                           	
 10961                           i1l6395:	
 10962  000B                     	fcall	_I2C_Interrupt
 10963  000B  3185  2502  3180   	movf	(1+(?_I2C_Interrupt)),w
 10964  000E  0871               	movlb 0	; select bank0
 10965  000F  0020               	movwf	(myint@wI2CError+1)
 10966  0010  00AB               	movf	(0+(?_I2C_Interrupt)),w
 10967  0011  0870               	movwf	(myint@wI2CError)
 10968  0012  00AA               	line	351
 10969                           	
 10970                           i1l6397:	
 10971  0013                     	movf	((myint@wI2CError)),w
 10972  0013  082A               iorwf	((myint@wI2CError+1)),w
 10973  0014  042B               	btfsc	status,2
 10974  0015  1903               	goto	u452_21
 10975  0016  2818               	goto	u452_20
 10976  0017  2819               u452_21:
 10977  0018                     	goto	i1l6407
 10978  0018  282B               u452_20:
 10979  0019                     	line	353
 10980                           	
 10981                           i1l6399:	
 10982  0019                     	movlw	low(069h)
 10983  0019  3069               	movwf	(??_myint+0)+0
 10984  001A  00A4               	movf	(??_myint+0)+0,w
 10985  001B  0824               	movwf	(myint@wText)
 10986  001C  00A7               	line	354
 10987                           	
 10988                           i1l6401:	
 10989  001D                     	movf	(myint@wI2CError),w
 10990  001D  082A               	addlw	030h
 10991  001E  3E30               	movwf	(??_myint+0)+0
 10992  001F  00A4               	movf	(??_myint+0)+0,w
 10993  0020  0824               	movwf	0+(myint@wText)+01h
 10994  0021  00A8               	line	355
 10995                           	
 10996                           i1l6403:	
 10997  0022                     	clrf	0+(myint@wText)+02h
 10998  0022  01A9               	line	356
 10999                           	
 11000                           i1l6405:	
 11001  0023                     	movlw	low(myint@wText)
 11002  0023  3027               	movwf	(i1lcdWriteText@iText)
 11003  0024  00FC               	movlw	high(myint@wText)
 11004  0025  3000               	movwf	(i1lcdWriteText@iText+1)
 11005  0026  00FD               	fcall	i1_lcdWriteText
 11006  0027  318A  2258  3180   	goto	i1l6407
 11007  002A  282B               	line	357
 11008                           	
 11009                           i1l216:	
 11010  002B                     	line	359
 11011                           	
 11012                           i1l6407:	
 11013  002B                     	fcall	_EUSARTInterrupt
 11014  002B  318E  2602  3180   	movf	(1+(?_EUSARTInterrupt)),w
 11015  002E  0871               	movlb 0	; select bank0
 11016  002F  0020               	movwf	(myint@wEUSARTError+1)
 11017  0030  00A6               	movf	(0+(?_EUSARTInterrupt)),w
 11018  0031  0870               	movwf	(myint@wEUSARTError)
 11019  0032  00A5               	line	361
 11020                           	
 11021                           i1l6409:	
 11022  0033                     	btfss	(17),0	;volatile
 11023  0033  1C11               	goto	u453_21
 11024  0034  2836               	goto	u453_20
 11025  0035  2837               u453_21:
 11026  0036                     	goto	i1l6423
 11027  0036  2853               u453_20:
 11028  0037                     	line	362
 11029                           	
 11030                           i1l6411:	
 11031  0037                     	movlw	low(01h)
 11032  0037  3001               	movwf	(??_myint+0)+0
 11033  0038  00A4               	movf	(??_myint+0)+0,w
 11034  0039  0824               	addwf	(_wTimer1IntCounter),f
 11035  003A  07CB               	line	363
 11036                           	
 11037                           i1l6413:	
 11038  003B                     	bcf	(17),0	;volatile
 11039  003B  1011               	line	365
 11040                           		movlw	7
 11041  003C  3007               	xorwf	((_wTimer1IntCounter)),w
 11042  003D  064B               	btfss	status,2
 11043  003E  1D03               	goto	u454_21
 11044  003F  2841               	goto	u454_20
 11045  0040  2842               u454_21:
 11046  0041                     	goto	i1l6417
 11047  0041  2847               u454_20:
 11048  0042                     	line	366
 11049                           	
 11050                           i1l6415:	
 11051  0042                     	movlw	low(04Ch)
 11052  0042  304C               	movwf	(23)	;volatile
 11053  0043  0097               	line	367
 11054                           	movlw	low(083h)
 11055  0044  3083               	movwf	(22)	;volatile
 11056  0045  0096               	goto	i1l6417
 11057  0046  2847               	line	368
 11058                           	
 11059                           i1l218:	
 11060  0047                     	line	369
 11061                           	
 11062                           i1l6417:	
 11063  0047                     		movlw	8
 11064  0047  3008               	xorwf	((_wTimer1IntCounter)),w
 11065  0048  064B               	btfss	status,2
 11066  0049  1D03               	goto	u455_21
 11067  004A  284C               	goto	u455_20
 11068  004B  284D               u455_21:
 11069  004C                     	goto	i1l6423
 11070  004C  2853               u455_20:
 11071  004D                     	line	370
 11072                           	
 11073                           i1l6419:	
 11074  004D                     	clrf	(_wTimer1IntCounter)
 11075  004D  01CB               	line	371
 11076                           	
 11077                           i1l6421:	
 11078  004E                     	fcall	_TempUpdateRequest
 11079  004E  3189  21AB  3180   	goto	i1l6423
 11080  0051  2853               	line	372
 11081                           	
 11082                           i1l219:	
 11083  0052                     	goto	i1l6423
 11084  0052  2853               	line	373
 11085                           	
 11086                           i1l217:	
 11087  0053                     	line	374
 11088                           	
 11089                           i1l6423:	
 11090  0053                     	btfss	(11),2	;volatile
 11091  0053  1D0B               	goto	u456_21
 11092  0054  2856               	goto	u456_20
 11093  0055  2857               u456_21:
 11094  0056                     	goto	i1l221
 11095  0056  285E               u456_20:
 11096  0057                     	line	375
 11097                           	
 11098                           i1l6425:	
 11099  0057                     	bcf	(11),2	;volatile
 11100  0057  110B               	line	376
 11101                           	
 11102                           i1l6427:	
 11103  0058                     	movlw	low(01h)
 11104  0058  3001               	movlb 0	; select bank0
 11105  0059  0020               	movwf	(??_myint+0)+0
 11106  005A  00A4               	movf	(??_myint+0)+0,w
 11107  005B  0824               	addwf	(_wTimer0Counter),f
 11108  005C  07D9               	goto	i1l221
 11109  005D  285E               	line	377
 11110                           	
 11111                           i1l220:	
 11112  005E                     	line	378
 11113                           	
 11114                           i1l221:	
 11115  005E                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
 11116  005E  107E               	retfie
 11117  005F  0009               	opt stack 0
 11118                           GLOBAL	__end_of_myint
 11119                           	__end_of_myint:
 11120  0060                     	signat	_myint,89
 11121                           	global	i1_lcdWriteText
 11122                           
 11123 ;; *************** function i1_lcdWriteText *****************
 11124 ;; Defined at:
 11125 ;;		line 63 in file "LCD_hd44780u_qy_2004a.c"
 11126 ;; Parameters:    Size  Location     Type
 11127 ;;  iText           2   12[COMMON] PTR unsigned char 
 11128 ;;		 -> Esp8266Entrypoint@wText(3), Esp8266Entrypoint@wReturnNumber(4), STR_39(4), STR_36(10), 
 11129 ;;		 -> STR_34(4), STR_10(14), NULL(0), myint@wText(3), 
 11130 ;;		 -> STR_7(16), STR_6(17), STR_5(17), STR_4(17), 
 11131 ;;		 -> STR_3(16), main@wReadout(20), STR_2(17), STR_1(16), 
 11132 ;;		 -> wInterruptText(75), 
 11133 ;; Auto vars:     Size  Location     Type
 11134 ;;  lcdWriteText    1    3[BANK0 ] unsigned char 
 11135 ;; Return value:  Size  Location     Type
 11136 ;;                  1    wreg      void 
 11137 ;; Registers used:
 11138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11139 ;; Tracked objects:
 11140 ;;		On entry : 0/0
 11141 ;;		On exit  : 0/0
 11142 ;;		Unchanged: 0/0
 11143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11144 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11145 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11146 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 11147 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 11148 ;;Total ram usage:        6 bytes
 11149 ;; Hardware stack levels used:    1
 11150 ;; Hardware stack levels required when called:    4
 11151 ;; This function calls:
 11152 ;;		i1_writeTxtChk
 11153 ;; This function is called by:
 11154 ;;		_myint
 11155 ;; This function uses a non-reentrant model
 11156 ;;
 11157                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
 11158                           	file	"LCD_hd44780u_qy_2004a.c"
 11159                           	line	63
 11160                           global __ptext36
 11161                           __ptext36:	;psect for function i1_lcdWriteText
 11162  0A58                     psect	text36
 11163                           	file	"LCD_hd44780u_qy_2004a.c"
 11164                           	line	63
 11165                           	global	__size_ofi1_lcdWriteText
 11166                           	__size_ofi1_lcdWriteText	equ	__end_ofi1_lcdWriteText-i1_lcdWriteText
 11167  002A                     	
 11168                           i1_lcdWriteText:	
 11169  0A58                     ;incstack = 0
 11170                           	opt	stack 4
 11171                           ; Regs used in i1_lcdWriteText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11172                           	line	65
 11173                           	
 11174                           i1l6135:	
 11175  0A58                     ;LCD_hd44780u_qy_2004a.c: 63: void lcdWriteText(char *iText);LCD_hd44780u_qy_2004a.c: 64
                                 :  {;LCD_hd44780u_qy_2004a.c: 65:   unsigned char wCharReadingPos = 0;
 11176                           	movlb 0	; select bank0
 11177  0A58  0020               	clrf	(i1lcdWriteText@wCharReadingPos)
 11178  0A59  01A3               	line	66
 11179                           ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
 11180                           	goto	i1l6141
 11181  0A5A  2A70               	
 11182                           i1l266:	
 11183  0A5B                     	line	68
 11184                           	
 11185                           i1l6137:	
 11186  0A5B                     ;LCD_hd44780u_qy_2004a.c: 67:   {;LCD_hd44780u_qy_2004a.c: 68:     writeTxtChk(iText[wCh
                                 arReadingPos]);
 11187                           	movf	(i1lcdWriteText@iText+1),w
 11188  0A5B  087D               	movwf	(??i1_lcdWriteText+0)+0+1
 11189  0A5C  00A1               	movf	(i1lcdWriteText@iText),w
 11190  0A5D  087C               	movwf	(??i1_lcdWriteText+0)+0
 11191  0A5E  00A0               	movf	(i1lcdWriteText@wCharReadingPos),w
 11192  0A5F  0823               	addwf	(??i1_lcdWriteText+0)+0,w
 11193  0A60  0720               	movwf	fsr0l
 11194  0A61  0084               	movf	(??i1_lcdWriteText+0)+1,w
 11195  0A62  0821               	skipnc
 11196  0A63  1803               	incf	(??i1_lcdWriteText+0)+1,w
 11197  0A64  0A21               	movwf	fsr0h
 11198  0A65  0085               
 11199                           	movf	indf0,w ;code access
 11200  0A66  0800               	fcall	i1_writeTxtChk
 11201  0A67  318E  26C9  318A   	line	69
 11202                           	
 11203                           i1l6139:	
 11204  0A6A                     ;LCD_hd44780u_qy_2004a.c: 69:     wCharReadingPos++;
 11205                           	movlw	low(01h)
 11206  0A6A  3001               	movlb 0	; select bank0
 11207  0A6B  0020               	movwf	(??i1_lcdWriteText+0)+0
 11208  0A6C  00A0               	movf	(??i1_lcdWriteText+0)+0,w
 11209  0A6D  0820               	addwf	(i1lcdWriteText@wCharReadingPos),f
 11210  0A6E  07A3               	goto	i1l6141
 11211  0A6F  2A70               	line	70
 11212                           ;LCD_hd44780u_qy_2004a.c: 70:   }
 11213                           	
 11214                           i1l265:	
 11215  0A70                     	line	66
 11216                           	
 11217                           i1l6141:	
 11218  0A70                     ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
 11219                           	movf	(i1lcdWriteText@iText+1),w
 11220  0A70  087D               	movwf	(??i1_lcdWriteText+0)+0+1
 11221  0A71  00A1               	movf	(i1lcdWriteText@iText),w
 11222  0A72  087C               	movwf	(??i1_lcdWriteText+0)+0
 11223  0A73  00A0               	movf	(i1lcdWriteText@wCharReadingPos),w
 11224  0A74  0823               	addwf	(??i1_lcdWriteText+0)+0,w
 11225  0A75  0720               	movwf	fsr0l
 11226  0A76  0084               	movf	(??i1_lcdWriteText+0)+1,w
 11227  0A77  0821               	skipnc
 11228  0A78  1803               	incf	(??i1_lcdWriteText+0)+1,w
 11229  0A79  0A21               	movwf	fsr0h
 11230  0A7A  0085               
 11231                           	moviw	fsr0++
 11232  0A7B  0012               	btfss	status,2
 11233  0A7C  1D03               	goto	u442_21
 11234  0A7D  2A7F               	goto	u442_20
 11235  0A7E  2A80               u442_21:
 11236  0A7F                     	goto	i1l6137
 11237  0A7F  2A5B               u442_20:
 11238  0A80                     	goto	i1l268
 11239  0A80  2A81               	
 11240                           i1l267:	
 11241  0A81                     	line	72
 11242                           	
 11243                           i1l268:	
 11244  0A81                     	return
 11245  0A81  0008               	opt stack 0
 11246                           GLOBAL	__end_ofi1_lcdWriteText
 11247                           	__end_ofi1_lcdWriteText:
 11248  0A82                     	signat	i1_lcdWriteText,89
 11249                           	global	i1_writeTxtChk
 11250                           
 11251 ;; *************** function i1_writeTxtChk *****************
 11252 ;; Defined at:
 11253 ;;		line 154 in file "LCD_hd44780u_qy_2004a.c"
 11254 ;; Parameters:    Size  Location     Type
 11255 ;;  iOpCode         1    wreg     unsigned char 
 11256 ;; Auto vars:     Size  Location     Type
 11257 ;;  iOpCode         1   11[COMMON] unsigned char 
 11258 ;; Return value:  Size  Location     Type
 11259 ;;                  1    wreg      void 
 11260 ;; Registers used:
 11261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11262 ;; Tracked objects:
 11263 ;;		On entry : 0/0
 11264 ;;		On exit  : 0/0
 11265 ;;		Unchanged: 0/0
 11266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11269 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11270 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11271 ;;Total ram usage:        3 bytes
 11272 ;; Hardware stack levels used:    1
 11273 ;; Hardware stack levels required when called:    3
 11274 ;; This function calls:
 11275 ;;		i1_SetToSendDataToLCD
 11276 ;;		i1_setCursorPosition
 11277 ;;		i1_setData
 11278 ;;		i1_waitLCDBusy
 11279 ;; This function is called by:
 11280 ;;		i1_lcdWriteText
 11281 ;; This function uses a non-reentrant model
 11282 ;;
 11283                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
 11284                           	line	154
 11285                           global __ptext37
 11286                           __ptext37:	;psect for function i1_writeTxtChk
 11287  0EC9                     psect	text37
 11288                           	file	"LCD_hd44780u_qy_2004a.c"
 11289                           	line	154
 11290                           	global	__size_ofi1_writeTxtChk
 11291                           	__size_ofi1_writeTxtChk	equ	__end_ofi1_writeTxtChk-i1_writeTxtChk
 11292  0098                     	
 11293                           i1_writeTxtChk:	
 11294  0EC9                     ;incstack = 0
 11295                           	opt	stack 4
 11296                           ; Regs used in i1_writeTxtChk: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11297                           ;i1writeTxtChk@iOpCode stored from wreg
 11298                           	movwf	(i1writeTxtChk@iOpCode)
 11299  0EC9  00FB               	line	156
 11300                           	
 11301                           i1l5733:	
 11302  0ECA                     ;LCD_hd44780u_qy_2004a.c: 154: void writeTxtChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 55: {;LCD_hd44780u_qy_2004a.c: 156:     if(iOpCode == '\r')
 11303                           		movlw	13
 11304  0ECA  300D               	xorwf	((i1writeTxtChk@iOpCode)),w
 11305  0ECB  067B               	btfss	status,2
 11306  0ECC  1D03               	goto	u405_21
 11307  0ECD  2ECF               	goto	u405_20
 11308  0ECE  2ED0               u405_21:
 11309  0ECF                     	goto	i1l5737
 11310  0ECF  2ED2               u405_20:
 11311  0ED0                     	goto	i1l307
 11312  0ED0  2F60               	line	158
 11313                           	
 11314                           i1l5735:	
 11315  0ED1                     ;LCD_hd44780u_qy_2004a.c: 157:     {;LCD_hd44780u_qy_2004a.c: 158:       return;
 11316                           	goto	i1l307
 11317  0ED1  2F60               	line	159
 11318                           ;LCD_hd44780u_qy_2004a.c: 159:     }
 11319                           	
 11320                           i1l306:	
 11321  0ED2                     	line	160
 11322                           	
 11323                           i1l5737:	
 11324  0ED2                     ;LCD_hd44780u_qy_2004a.c: 160:   SetToSendDataToLCD();
 11325                           	fcall	i1_SetToSendDataToLCD
 11326  0ED2  3189  2118  318E   	line	161
 11327                           	
 11328                           i1l5739:	
 11329  0ED5                     ;LCD_hd44780u_qy_2004a.c: 161:   PORTCbits.RC2 = 1;
 11330                           	movlb 0	; select bank0
 11331  0ED5  0020               	bsf	(14),2	;volatile
 11332  0ED6  150E               	line	162
 11333                           	
 11334                           i1l5741:	
 11335  0ED7                     ;LCD_hd44780u_qy_2004a.c: 162:   PORTCbits.RC1 = 0;
 11336                           	bcf	(14),1	;volatile
 11337  0ED7  108E               	line	163
 11338                           	
 11339                           i1l5743:	
 11340  0ED8                     ;LCD_hd44780u_qy_2004a.c: 163:   if(iOpCode == '\n')
 11341                           		movlw	10
 11342  0ED8  300A               	xorwf	((i1writeTxtChk@iOpCode)),w
 11343  0ED9  067B               	btfss	status,2
 11344  0EDA  1D03               	goto	u406_21
 11345  0EDB  2EDD               	goto	u406_20
 11346  0EDC  2EDE               u406_21:
 11347  0EDD                     	goto	i1l5773
 11348  0EDD  2F2B               u406_20:
 11349  0EDE                     	line	165
 11350                           	
 11351                           i1l5745:	
 11352  0EDE                     ;LCD_hd44780u_qy_2004a.c: 164:   {;LCD_hd44780u_qy_2004a.c: 165:    if(mWritingPosition 
                                 < 20)
 11353                           	movlw	low(014h)
 11354  0EDE  3014               	subwf	(_mWritingPosition),w
 11355  0EDF  025B               	skipnc
 11356  0EE0  1803               	goto	u407_21
 11357  0EE1  2EE3               	goto	u407_20
 11358  0EE2  2EE4               u407_21:
 11359  0EE3                     	goto	i1l5749
 11360  0EE3  2EEA               u407_20:
 11361  0EE4                     	line	167
 11362                           	
 11363                           i1l5747:	
 11364  0EE4                     ;LCD_hd44780u_qy_2004a.c: 166:    {;LCD_hd44780u_qy_2004a.c: 167:        setCursorPositi
                                 on(1,0);
 11365                           	clrf	(i1setCursorPosition@iPosition)
 11366  0EE4  01F4               	movlw	low(01h)
 11367  0EE5  3001               	fcall	i1_setCursorPosition
 11368  0EE6  318D  25A0  318E   	line	168
 11369                           ;LCD_hd44780u_qy_2004a.c: 168:    }
 11370                           	goto	i1l307
 11371  0EE9  2F60               	line	169
 11372                           ;LCD_hd44780u_qy_2004a.c: 169:    else if(mWritingPosition < 40)
 11373                           	
 11374                           i1l309:	
 11375  0EEA                     	
 11376                           i1l5749:	
 11377  0EEA                     	movlw	low(028h)
 11378  0EEA  3028               	movlb 0	; select bank0
 11379  0EEB  0020               	subwf	(_mWritingPosition),w
 11380  0EEC  025B               	skipnc
 11381  0EED  1803               	goto	u408_21
 11382  0EEE  2EF0               	goto	u408_20
 11383  0EEF  2EF1               u408_21:
 11384  0EF0                     	goto	i1l5753
 11385  0EF0  2EF7               u408_20:
 11386  0EF1                     	line	171
 11387                           	
 11388                           i1l5751:	
 11389  0EF1                     ;LCD_hd44780u_qy_2004a.c: 170:    {;LCD_hd44780u_qy_2004a.c: 171:        setCursorPositi
                                 on(2,0);
 11390                           	clrf	(i1setCursorPosition@iPosition)
 11391  0EF1  01F4               	movlw	low(02h)
 11392  0EF2  3002               	fcall	i1_setCursorPosition
 11393  0EF3  318D  25A0  318E   	line	172
 11394                           ;LCD_hd44780u_qy_2004a.c: 172:    }
 11395                           	goto	i1l307
 11396  0EF6  2F60               	line	173
 11397                           ;LCD_hd44780u_qy_2004a.c: 173:    else if(mWritingPosition < 60)
 11398                           	
 11399                           i1l311:	
 11400  0EF7                     	
 11401                           i1l5753:	
 11402  0EF7                     	movlw	low(03Ch)
 11403  0EF7  303C               	movlb 0	; select bank0
 11404  0EF8  0020               	subwf	(_mWritingPosition),w
 11405  0EF9  025B               	skipnc
 11406  0EFA  1803               	goto	u409_21
 11407  0EFB  2EFD               	goto	u409_20
 11408  0EFC  2EFE               u409_21:
 11409  0EFD                     	goto	i1l5757
 11410  0EFD  2F04               u409_20:
 11411  0EFE                     	line	175
 11412                           	
 11413                           i1l5755:	
 11414  0EFE                     ;LCD_hd44780u_qy_2004a.c: 174:    {;LCD_hd44780u_qy_2004a.c: 175:        setCursorPositi
                                 on(3,0);
 11415                           	clrf	(i1setCursorPosition@iPosition)
 11416  0EFE  01F4               	movlw	low(03h)
 11417  0EFF  3003               	fcall	i1_setCursorPosition
 11418  0F00  318D  25A0  318E   	line	176
 11419                           ;LCD_hd44780u_qy_2004a.c: 176:    }
 11420                           	goto	i1l307
 11421  0F03  2F60               	line	177
 11422                           ;LCD_hd44780u_qy_2004a.c: 177:    else
 11423                           	
 11424                           i1l313:	
 11425  0F04                     	line	179
 11426                           	
 11427                           i1l5757:	
 11428  0F04                     ;LCD_hd44780u_qy_2004a.c: 178:    {;LCD_hd44780u_qy_2004a.c: 179:        setCursorPositi
                                 on(0,0);
 11429                           	clrf	(i1setCursorPosition@iPosition)
 11430  0F04  01F4               	movlw	low(0)
 11431  0F05  3000               	fcall	i1_setCursorPosition
 11432  0F06  318D  25A0  318E   	goto	i1l307
 11433  0F09  2F60               	line	180
 11434                           ;LCD_hd44780u_qy_2004a.c: 180:    }
 11435                           	
 11436                           i1l314:	
 11437  0F0A                     	goto	i1l307
 11438  0F0A  2F60               	
 11439                           i1l312:	
 11440  0F0B                     	goto	i1l307
 11441  0F0B  2F60               	
 11442                           i1l310:	
 11443  0F0C                     	goto	i1l307
 11444  0F0C  2F60               	line	181
 11445                           	
 11446                           i1l5759:	
 11447  0F0D                     ;LCD_hd44780u_qy_2004a.c: 181:    return;
 11448                           	goto	i1l307
 11449  0F0D  2F60               	line	182
 11450                           ;LCD_hd44780u_qy_2004a.c: 182:   }
 11451                           	
 11452                           i1l308:	
 11453  0F0E                     	line	183
 11454                           ;LCD_hd44780u_qy_2004a.c: 183:   switch(mWritingPosition)
 11455                           	goto	i1l5773
 11456  0F0E  2F2B               	line	185
 11457                           ;LCD_hd44780u_qy_2004a.c: 184:   {;LCD_hd44780u_qy_2004a.c: 185:     case 20:
 11458                           	
 11459                           i1l316:	
 11460  0F0F                     	line	186
 11461                           	
 11462                           i1l5761:	
 11463  0F0F                     ;LCD_hd44780u_qy_2004a.c: 186:       setCursorPosition(1,0);
 11464                           	clrf	(i1setCursorPosition@iPosition)
 11465  0F0F  01F4               	movlw	low(01h)
 11466  0F10  3001               	fcall	i1_setCursorPosition
 11467  0F11  318D  25A0  318E   	line	187
 11468                           ;LCD_hd44780u_qy_2004a.c: 187:       break;
 11469                           	goto	i1l5775
 11470  0F14  2F42               	line	188
 11471                           ;LCD_hd44780u_qy_2004a.c: 188:     case 40:
 11472                           	
 11473                           i1l318:	
 11474  0F15                     	line	189
 11475                           	
 11476                           i1l5763:	
 11477  0F15                     ;LCD_hd44780u_qy_2004a.c: 189:       setCursorPosition(2,0);
 11478                           	clrf	(i1setCursorPosition@iPosition)
 11479  0F15  01F4               	movlw	low(02h)
 11480  0F16  3002               	fcall	i1_setCursorPosition
 11481  0F17  318D  25A0  318E   	line	190
 11482                           ;LCD_hd44780u_qy_2004a.c: 190:       break;
 11483                           	goto	i1l5775
 11484  0F1A  2F42               	line	191
 11485                           ;LCD_hd44780u_qy_2004a.c: 191:     case 60:
 11486                           	
 11487                           i1l319:	
 11488  0F1B                     	line	192
 11489                           	
 11490                           i1l5765:	
 11491  0F1B                     ;LCD_hd44780u_qy_2004a.c: 192:       setCursorPosition(3,0);
 11492                           	clrf	(i1setCursorPosition@iPosition)
 11493  0F1B  01F4               	movlw	low(03h)
 11494  0F1C  3003               	fcall	i1_setCursorPosition
 11495  0F1D  318D  25A0  318E   	line	193
 11496                           ;LCD_hd44780u_qy_2004a.c: 193:       break;
 11497                           	goto	i1l5775
 11498  0F20  2F42               	line	194
 11499                           ;LCD_hd44780u_qy_2004a.c: 194:     case 80:
 11500                           	
 11501                           i1l320:	
 11502  0F21                     	line	195
 11503                           	
 11504                           i1l5767:	
 11505  0F21                     ;LCD_hd44780u_qy_2004a.c: 195:       setCursorPosition(0,0);
 11506                           	clrf	(i1setCursorPosition@iPosition)
 11507  0F21  01F4               	movlw	low(0)
 11508  0F22  3000               	fcall	i1_setCursorPosition
 11509  0F23  318D  25A0  318E   	line	196
 11510                           	
 11511                           i1l5769:	
 11512  0F26                     ;LCD_hd44780u_qy_2004a.c: 196:       mWritingPosition = 0;
 11513                           	movlb 0	; select bank0
 11514  0F26  0020               	clrf	(_mWritingPosition)
 11515  0F27  01DB               	line	197
 11516                           ;LCD_hd44780u_qy_2004a.c: 197:       break;
 11517                           	goto	i1l5775
 11518  0F28  2F42               	line	198
 11519                           ;LCD_hd44780u_qy_2004a.c: 198:     default:
 11520                           	
 11521                           i1l321:	
 11522  0F29                     	line	199
 11523                           ;LCD_hd44780u_qy_2004a.c: 199:       break;
 11524                           	goto	i1l5775
 11525  0F29  2F42               	line	200
 11526                           	
 11527                           i1l5771:	
 11528  0F2A                     ;LCD_hd44780u_qy_2004a.c: 200:   }
 11529                           	goto	i1l5775
 11530  0F2A  2F42               	
 11531                           i1l315:	
 11532  0F2B                     	
 11533                           i1l5773:	
 11534  0F2B                     	movlb 0	; select bank0
 11535  0F2B  0020               	movf	(_mWritingPosition),w
 11536  0F2C  085B               	movwf	(??i1_writeTxtChk+0)+0
 11537  0F2D  00F9               	clrf	(??i1_writeTxtChk+0)+0+1
 11538  0F2E  01FA               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 11539                           ; Switch size 1, requested type "space"
 11540                           ; Number of cases is 1, Range of values is 0 to 0
 11541                           ; switch strategies available:
 11542                           ; Name         Instructions Cycles
 11543                           ; simple_byte            4     3 (average)
 11544                           ; direct_byte            8     6 (fixed)
 11545                           ; jumptable            260     6 (fixed)
 11546                           ;	Chosen strategy is simple_byte
 11547                           
 11548                           	movf 1+(??i1_writeTxtChk+0)+0,w
 11549  0F2F  087A               	opt asmopt_push
 11550                           	opt asmopt_off
 11551                           	xorlw	0^0	; case 0
 11552  0F30  3A00               	skipnz
 11553  0F31  1903               	goto	i1l6947
 11554  0F32  2F34               	goto	i1l5775
 11555  0F33  2F42               	opt asmopt_pop
 11556                           	
 11557                           i1l6947:	
 11558  0F34                     ; Switch size 1, requested type "space"
 11559                           ; Number of cases is 4, Range of values is 20 to 80
 11560                           ; switch strategies available:
 11561                           ; Name         Instructions Cycles
 11562                           ; simple_byte           13     7 (average)
 11563                           ; direct_byte          131     9 (fixed)
 11564                           ; jumptable            263     9 (fixed)
 11565                           ;	Chosen strategy is simple_byte
 11566                           
 11567                           	movf 0+(??i1_writeTxtChk+0)+0,w
 11568  0F34  0879               	opt asmopt_push
 11569                           	opt asmopt_off
 11570                           	xorlw	20^0	; case 20
 11571  0F35  3A14               	skipnz
 11572  0F36  1903               	goto	i1l5761
 11573  0F37  2F0F               	xorlw	40^20	; case 40
 11574  0F38  3A3C               	skipnz
 11575  0F39  1903               	goto	i1l5763
 11576  0F3A  2F15               	xorlw	60^40	; case 60
 11577  0F3B  3A14               	skipnz
 11578  0F3C  1903               	goto	i1l5765
 11579  0F3D  2F1B               	xorlw	80^60	; case 80
 11580  0F3E  3A6C               	skipnz
 11581  0F3F  1903               	goto	i1l5767
 11582  0F40  2F21               	goto	i1l5775
 11583  0F41  2F42               	opt asmopt_pop
 11584                           
 11585                           	
 11586                           i1l317:	
 11587  0F42                     	line	201
 11588                           	
 11589                           i1l5775:	
 11590  0F42                     ;LCD_hd44780u_qy_2004a.c: 201:   waitLCDBusy();
 11591                           	fcall	i1_waitLCDBusy
 11592  0F42  318A  222F  318E   	line	202
 11593                           	
 11594                           i1l5777:	
 11595  0F45                     ;LCD_hd44780u_qy_2004a.c: 202:   SetToSendDataToLCD();
 11596                           	fcall	i1_SetToSendDataToLCD
 11597  0F45  3189  2118  318E   	line	203
 11598                           	
 11599                           i1l5779:	
 11600  0F48                     ;LCD_hd44780u_qy_2004a.c: 203:   PORTCbits.RC2 = 1;
 11601                           	movlb 0	; select bank0
 11602  0F48  0020               	bsf	(14),2	;volatile
 11603  0F49  150E               	line	204
 11604                           	
 11605                           i1l5781:	
 11606  0F4A                     ;LCD_hd44780u_qy_2004a.c: 204:   PORTCbits.RC1 = 0;
 11607                           	bcf	(14),1	;volatile
 11608  0F4A  108E               	line	205
 11609                           	
 11610                           i1l5783:	
 11611  0F4B                     ;LCD_hd44780u_qy_2004a.c: 205:   setData(iOpCode >> 4);
 11612                           	movf	(i1writeTxtChk@iOpCode),w
 11613  0F4B  087B               	movwf	(??i1_writeTxtChk+0)+0
 11614  0F4C  00F9               	movlw	04h
 11615  0F4D  3004               u410_25:
 11616  0F4E                     	lsrf	(??i1_writeTxtChk+0)+0,f
 11617  0F4E  36F9               	decfsz	wreg,f
 11618  0F4F  0B89               	goto	u410_25
 11619  0F50  2F4E               	movf	0+(??i1_writeTxtChk+0)+0,w
 11620  0F51  0879               	fcall	i1_setData
 11621  0F52  318B  2390  318E   	line	206
 11622                           	
 11623                           i1l5785:	
 11624  0F55                     ;LCD_hd44780u_qy_2004a.c: 206:   setData(iOpCode);
 11625                           	movf	(i1writeTxtChk@iOpCode),w
 11626  0F55  087B               	fcall	i1_setData
 11627  0F56  318B  2390  318E   	line	207
 11628                           	
 11629                           i1l5787:	
 11630  0F59                     ;LCD_hd44780u_qy_2004a.c: 207:   _delay((unsigned long)((1)*(16000000/4000000.0)));
 11631                           		opt asmopt_push
 11632                           	opt asmopt_off
 11633                           	nop2	;2 cycle nop
 11634  0F59  3200               	nop2	;2 cycle nop
 11635  0F5A  3200               	opt asmopt_pop
 11636                           
 11637                           	line	208
 11638                           	
 11639                           i1l5789:	
 11640  0F5B                     ;LCD_hd44780u_qy_2004a.c: 208:   mWritingPosition++;
 11641                           	movlw	low(01h)
 11642  0F5B  3001               	movwf	(??i1_writeTxtChk+0)+0
 11643  0F5C  00F9               	movf	(??i1_writeTxtChk+0)+0,w
 11644  0F5D  0879               	movlb 0	; select bank0
 11645  0F5E  0020               	addwf	(_mWritingPosition),f
 11646  0F5F  07DB               	line	209
 11647                           	
 11648                           i1l307:	
 11649  0F60                     	return
 11650  0F60  0008               	opt stack 0
 11651                           GLOBAL	__end_ofi1_writeTxtChk
 11652                           	__end_ofi1_writeTxtChk:
 11653  0F61                     	signat	i1_writeTxtChk,89
 11654                           	global	i1_setCursorPosition
 11655                           
 11656 ;; *************** function i1_setCursorPosition *****************
 11657 ;; Defined at:
 11658 ;;		line 333 in file "LCD_hd44780u_qy_2004a.c"
 11659 ;; Parameters:    Size  Location     Type
 11660 ;;  iLine           1    wreg     unsigned char 
 11661 ;;  iPosition       1    4[COMMON] unsigned char 
 11662 ;; Auto vars:     Size  Location     Type
 11663 ;;  iLine           1    7[COMMON] unsigned char 
 11664 ;;  setCursorPos    1    8[COMMON] unsigned char 
 11665 ;; Return value:  Size  Location     Type
 11666 ;;                  1    wreg      void 
 11667 ;; Registers used:
 11668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11669 ;; Tracked objects:
 11670 ;;		On entry : 0/0
 11671 ;;		On exit  : 0/0
 11672 ;;		Unchanged: 0/0
 11673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11674 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11675 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11676 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11677 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11678 ;;Total ram usage:        5 bytes
 11679 ;; Hardware stack levels used:    1
 11680 ;; Hardware stack levels required when called:    2
 11681 ;; This function calls:
 11682 ;;		i1_SetToSendDataToLCD
 11683 ;;		i1_setData
 11684 ;;		i1_waitLCDBusy
 11685 ;; This function is called by:
 11686 ;;		i1_writeTxtChk
 11687 ;; This function uses a non-reentrant model
 11688 ;;
 11689                           psect	text38,local,class=CODE,delta=2,merge=1,group=0
 11690                           	line	333
 11691                           global __ptext38
 11692                           __ptext38:	;psect for function i1_setCursorPosition
 11693  0DA0                     psect	text38
 11694                           	file	"LCD_hd44780u_qy_2004a.c"
 11695                           	line	333
 11696                           	global	__size_ofi1_setCursorPosition
 11697                           	__size_ofi1_setCursorPosition	equ	__end_ofi1_setCursorPosition-i1_setCursorPosition
 11698  0062                     	
 11699                           i1_setCursorPosition:	
 11700  0DA0                     ;incstack = 0
 11701                           	opt	stack 4
 11702                           ; Regs used in i1_setCursorPosition: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11703                           ;i1setCursorPosition@iLine stored from wreg
 11704                           	movwf	(i1setCursorPosition@iLine)
 11705  0DA0  00F7               	line	335
 11706                           	
 11707                           i1l5487:	
 11708  0DA1                     ;LCD_hd44780u_qy_2004a.c: 333: void setCursorPosition(char iLine, char iPosition);LCD_hd
                                 44780u_qy_2004a.c: 334: {;LCD_hd44780u_qy_2004a.c: 335:   char wLCDIndex=0;
 11709                           	clrf	(i1setCursorPosition@wLCDIndex)
 11710  0DA1  01F8               	line	337
 11711                           ;LCD_hd44780u_qy_2004a.c: 337:   switch(iLine)
 11712                           	goto	i1l5499
 11713  0DA2  2DD3               	line	339
 11714                           ;LCD_hd44780u_qy_2004a.c: 338:   {;LCD_hd44780u_qy_2004a.c: 339:       case 0:
 11715                           	
 11716                           i1l385:	
 11717  0DA3                     	line	340
 11718                           	
 11719                           i1l5489:	
 11720  0DA3                     ;LCD_hd44780u_qy_2004a.c: 340:           wLCDIndex = 0x00 + iPosition;
 11721                           	movf	(i1setCursorPosition@iPosition),w
 11722  0DA3  0874               	movwf	(??i1_setCursorPosition+0)+0
 11723  0DA4  00F5               	movf	(??i1_setCursorPosition+0)+0,w
 11724  0DA5  0875               	movwf	(i1setCursorPosition@wLCDIndex)
 11725  0DA6  00F8               	line	341
 11726                           ;LCD_hd44780u_qy_2004a.c: 341:           mWritingPosition = iPosition;
 11727                           	movf	(i1setCursorPosition@iPosition),w
 11728  0DA7  0874               	movwf	(??i1_setCursorPosition+0)+0
 11729  0DA8  00F5               	movf	(??i1_setCursorPosition+0)+0,w
 11730  0DA9  0875               	movlb 0	; select bank0
 11731  0DAA  0020               	movwf	(_mWritingPosition)
 11732  0DAB  00DB               	line	342
 11733                           ;LCD_hd44780u_qy_2004a.c: 342:           break;
 11734                           	goto	i1l5501
 11735  0DAC  2DE9               	line	343
 11736                           ;LCD_hd44780u_qy_2004a.c: 343:       case 1:
 11737                           	
 11738                           i1l387:	
 11739  0DAD                     	line	344
 11740                           	
 11741                           i1l5491:	
 11742  0DAD                     ;LCD_hd44780u_qy_2004a.c: 344:           wLCDIndex = 0x40 + iPosition;
 11743                           	movf	(i1setCursorPosition@iPosition),w
 11744  0DAD  0874               	addlw	040h
 11745  0DAE  3E40               	movwf	(??i1_setCursorPosition+0)+0
 11746  0DAF  00F5               	movf	(??i1_setCursorPosition+0)+0,w
 11747  0DB0  0875               	movwf	(i1setCursorPosition@wLCDIndex)
 11748  0DB1  00F8               	line	345
 11749                           ;LCD_hd44780u_qy_2004a.c: 345:           mWritingPosition = 20 + iPosition;
 11750                           	movf	(i1setCursorPosition@iPosition),w
 11751  0DB2  0874               	addlw	014h
 11752  0DB3  3E14               	movwf	(??i1_setCursorPosition+0)+0
 11753  0DB4  00F5               	movf	(??i1_setCursorPosition+0)+0,w
 11754  0DB5  0875               	movlb 0	; select bank0
 11755  0DB6  0020               	movwf	(_mWritingPosition)
 11756  0DB7  00DB               	line	346
 11757                           ;LCD_hd44780u_qy_2004a.c: 346:           break;
 11758                           	goto	i1l5501
 11759  0DB8  2DE9               	line	347
 11760                           ;LCD_hd44780u_qy_2004a.c: 347:       case 2:
 11761                           	
 11762                           i1l388:	
 11763  0DB9                     	line	348
 11764                           	
 11765                           i1l5493:	
 11766  0DB9                     ;LCD_hd44780u_qy_2004a.c: 348:           wLCDIndex = 0x14 + iPosition;
 11767                           	movf	(i1setCursorPosition@iPosition),w
 11768  0DB9  0874               	addlw	014h
 11769  0DBA  3E14               	movwf	(??i1_setCursorPosition+0)+0
 11770  0DBB  00F5               	movf	(??i1_setCursorPosition+0)+0,w
 11771  0DBC  0875               	movwf	(i1setCursorPosition@wLCDIndex)
 11772  0DBD  00F8               	line	349
 11773                           ;LCD_hd44780u_qy_2004a.c: 349:           mWritingPosition = 40 + iPosition;
 11774                           	movf	(i1setCursorPosition@iPosition),w
 11775  0DBE  0874               	addlw	028h
 11776  0DBF  3E28               	movwf	(??i1_setCursorPosition+0)+0
 11777  0DC0  00F5               	movf	(??i1_setCursorPosition+0)+0,w
 11778  0DC1  0875               	movlb 0	; select bank0
 11779  0DC2  0020               	movwf	(_mWritingPosition)
 11780  0DC3  00DB               	line	350
 11781                           ;LCD_hd44780u_qy_2004a.c: 350:           break;
 11782                           	goto	i1l5501
 11783  0DC4  2DE9               	line	351
 11784                           ;LCD_hd44780u_qy_2004a.c: 351:       case 3:
 11785                           	
 11786                           i1l389:	
 11787  0DC5                     	line	352
 11788                           	
 11789                           i1l5495:	
 11790  0DC5                     ;LCD_hd44780u_qy_2004a.c: 352:           wLCDIndex = 0x54 + iPosition;
 11791                           	movf	(i1setCursorPosition@iPosition),w
 11792  0DC5  0874               	addlw	054h
 11793  0DC6  3E54               	movwf	(??i1_setCursorPosition+0)+0
 11794  0DC7  00F5               	movf	(??i1_setCursorPosition+0)+0,w
 11795  0DC8  0875               	movwf	(i1setCursorPosition@wLCDIndex)
 11796  0DC9  00F8               	line	353
 11797                           ;LCD_hd44780u_qy_2004a.c: 353:           mWritingPosition = 60 + iPosition;
 11798                           	movf	(i1setCursorPosition@iPosition),w
 11799  0DCA  0874               	addlw	03Ch
 11800  0DCB  3E3C               	movwf	(??i1_setCursorPosition+0)+0
 11801  0DCC  00F5               	movf	(??i1_setCursorPosition+0)+0,w
 11802  0DCD  0875               	movlb 0	; select bank0
 11803  0DCE  0020               	movwf	(_mWritingPosition)
 11804  0DCF  00DB               	line	354
 11805                           ;LCD_hd44780u_qy_2004a.c: 354:           break;
 11806                           	goto	i1l5501
 11807  0DD0  2DE9               	line	355
 11808                           ;LCD_hd44780u_qy_2004a.c: 355:       default:
 11809                           	
 11810                           i1l390:	
 11811  0DD1                     	line	356
 11812                           ;LCD_hd44780u_qy_2004a.c: 356:       break;
 11813                           	goto	i1l5501
 11814  0DD1  2DE9               	line	357
 11815                           	
 11816                           i1l5497:	
 11817  0DD2                     ;LCD_hd44780u_qy_2004a.c: 357:   }
 11818                           	goto	i1l5501
 11819  0DD2  2DE9               	
 11820                           i1l384:	
 11821  0DD3                     	
 11822                           i1l5499:	
 11823  0DD3                     	movf	(i1setCursorPosition@iLine),w
 11824  0DD3  0877               	movwf	(??i1_setCursorPosition+0)+0
 11825  0DD4  00F5               	clrf	(??i1_setCursorPosition+0)+0+1
 11826  0DD5  01F6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 11827                           ; Switch size 1, requested type "space"
 11828                           ; Number of cases is 1, Range of values is 0 to 0
 11829                           ; switch strategies available:
 11830                           ; Name         Instructions Cycles
 11831                           ; simple_byte            4     3 (average)
 11832                           ; direct_byte            8     6 (fixed)
 11833                           ; jumptable            260     6 (fixed)
 11834                           ;	Chosen strategy is simple_byte
 11835                           
 11836                           	movf 1+(??i1_setCursorPosition+0)+0,w
 11837  0DD6  0876               	opt asmopt_push
 11838                           	opt asmopt_off
 11839                           	xorlw	0^0	; case 0
 11840  0DD7  3A00               	skipnz
 11841  0DD8  1903               	goto	i1l6949
 11842  0DD9  2DDB               	goto	i1l5501
 11843  0DDA  2DE9               	opt asmopt_pop
 11844                           	
 11845                           i1l6949:	
 11846  0DDB                     ; Switch size 1, requested type "space"
 11847                           ; Number of cases is 4, Range of values is 0 to 3
 11848                           ; switch strategies available:
 11849                           ; Name         Instructions Cycles
 11850                           ; simple_byte           13     7 (average)
 11851                           ; direct_byte           14     6 (fixed)
 11852                           ; jumptable            260     6 (fixed)
 11853                           ;	Chosen strategy is simple_byte
 11854                           
 11855                           	movf 0+(??i1_setCursorPosition+0)+0,w
 11856  0DDB  0875               	opt asmopt_push
 11857                           	opt asmopt_off
 11858                           	xorlw	0^0	; case 0
 11859  0DDC  3A00               	skipnz
 11860  0DDD  1903               	goto	i1l5489
 11861  0DDE  2DA3               	xorlw	1^0	; case 1
 11862  0DDF  3A01               	skipnz
 11863  0DE0  1903               	goto	i1l5491
 11864  0DE1  2DAD               	xorlw	2^1	; case 2
 11865  0DE2  3A03               	skipnz
 11866  0DE3  1903               	goto	i1l5493
 11867  0DE4  2DB9               	xorlw	3^2	; case 3
 11868  0DE5  3A01               	skipnz
 11869  0DE6  1903               	goto	i1l5495
 11870  0DE7  2DC5               	goto	i1l5501
 11871  0DE8  2DE9               	opt asmopt_pop
 11872                           
 11873                           	
 11874                           i1l386:	
 11875  0DE9                     	line	359
 11876                           	
 11877                           i1l5501:	
 11878  0DE9                     ;LCD_hd44780u_qy_2004a.c: 359:   waitLCDBusy();
 11879                           	fcall	i1_waitLCDBusy
 11880  0DE9  318A  222F  318D   	line	361
 11881                           	
 11882                           i1l5503:	
 11883  0DEC                     ;LCD_hd44780u_qy_2004a.c: 361:   SetToSendDataToLCD();
 11884                           	fcall	i1_SetToSendDataToLCD
 11885  0DEC  3189  2118  318D   	line	362
 11886                           	
 11887                           i1l5505:	
 11888  0DEF                     ;LCD_hd44780u_qy_2004a.c: 362:   PORTCbits.RC2 = 0;
 11889                           	movlb 0	; select bank0
 11890  0DEF  0020               	bcf	(14),2	;volatile
 11891  0DF0  110E               	line	363
 11892                           	
 11893                           i1l5507:	
 11894  0DF1                     ;LCD_hd44780u_qy_2004a.c: 363:   PORTCbits.RC1 = 0;
 11895                           	bcf	(14),1	;volatile
 11896  0DF1  108E               	line	364
 11897                           	
 11898                           i1l5509:	
 11899  0DF2                     ;LCD_hd44780u_qy_2004a.c: 364:   setData((wLCDIndex >> 4) | 0x8 );
 11900                           	movf	(i1setCursorPosition@wLCDIndex),w
 11901  0DF2  0878               	movwf	(??i1_setCursorPosition+0)+0
 11902  0DF3  00F5               	movlw	04h
 11903  0DF4  3004               u371_25:
 11904  0DF5                     	lsrf	(??i1_setCursorPosition+0)+0,f
 11905  0DF5  36F5               	decfsz	wreg,f
 11906  0DF6  0B89               	goto	u371_25
 11907  0DF7  2DF5               	movf	0+(??i1_setCursorPosition+0)+0,w
 11908  0DF8  0875               	iorlw	08h
 11909  0DF9  3808               	fcall	i1_setData
 11910  0DFA  318B  2390  318D   	line	365
 11911                           	
 11912                           i1l5511:	
 11913  0DFD                     ;LCD_hd44780u_qy_2004a.c: 365:   setData(wLCDIndex);
 11914                           	movf	(i1setCursorPosition@wLCDIndex),w
 11915  0DFD  0878               	fcall	i1_setData
 11916  0DFE  318B  2390  318D   	line	367
 11917                           	
 11918                           i1l391:	
 11919  0E01                     	return
 11920  0E01  0008               	opt stack 0
 11921                           GLOBAL	__end_ofi1_setCursorPosition
 11922                           	__end_ofi1_setCursorPosition:
 11923  0E02                     	signat	i1_setCursorPosition,89
 11924                           	global	i1_waitLCDBusy
 11925                           
 11926 ;; *************** function i1_waitLCDBusy *****************
 11927 ;; Defined at:
 11928 ;;		line 241 in file "LCD_hd44780u_qy_2004a.c"
 11929 ;; Parameters:    Size  Location     Type
 11930 ;;		None
 11931 ;; Auto vars:     Size  Location     Type
 11932 ;;  waitLCDBusy     2    2[COMMON] int 
 11933 ;; Return value:  Size  Location     Type
 11934 ;;                  1    wreg      void 
 11935 ;; Registers used:
 11936 ;;		wreg, status,2, status,0, pclath, cstack
 11937 ;; Tracked objects:
 11938 ;;		On entry : 0/0
 11939 ;;		On exit  : 0/0
 11940 ;;		Unchanged: 0/0
 11941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11943 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11944 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11945 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11946 ;;Total ram usage:        4 bytes
 11947 ;; Hardware stack levels used:    1
 11948 ;; Hardware stack levels required when called:    1
 11949 ;; This function calls:
 11950 ;;		i1_SetToReadDataFromLCD
 11951 ;; This function is called by:
 11952 ;;		i1_writeTxtChk
 11953 ;;		i1_setCursorPosition
 11954 ;; This function uses a non-reentrant model
 11955 ;;
 11956                           psect	text39,local,class=CODE,delta=2,merge=1,group=0
 11957                           	line	241
 11958                           global __ptext39
 11959                           __ptext39:	;psect for function i1_waitLCDBusy
 11960  0A2F                     psect	text39
 11961                           	file	"LCD_hd44780u_qy_2004a.c"
 11962                           	line	241
 11963                           	global	__size_ofi1_waitLCDBusy
 11964                           	__size_ofi1_waitLCDBusy	equ	__end_ofi1_waitLCDBusy-i1_waitLCDBusy
 11965  0029                     	
 11966                           i1_waitLCDBusy:	
 11967  0A2F                     ;incstack = 0
 11968                           	opt	stack 5
 11969                           ; Regs used in i1_waitLCDBusy: [wreg+status,2+status,0+pclath+cstack]
 11970                           	line	243
 11971                           	
 11972                           i1l5381:	
 11973  0A2F                     ;LCD_hd44780u_qy_2004a.c: 243:   PORTCbits.RC2 = 0;
 11974                           	movlb 0	; select bank0
 11975  0A2F  0020               	bcf	(14),2	;volatile
 11976  0A30  110E               	line	244
 11977                           ;LCD_hd44780u_qy_2004a.c: 244:   PORTCbits.RC1 = 1;
 11978                           	bsf	(14),1	;volatile
 11979  0A31  148E               	line	246
 11980                           	
 11981                           i1l5383:	
 11982  0A32                     ;LCD_hd44780u_qy_2004a.c: 246:   SetToReadDataFromLCD();
 11983                           	fcall	i1_SetToReadDataFromLCD
 11984  0A32  3189  211E  318A   	line	248
 11985                           	
 11986                           i1l5385:	
 11987  0A35                     ;LCD_hd44780u_qy_2004a.c: 248:   int busyFlag = 1;
 11988                           	movlw	01h
 11989  0A35  3001               	movwf	(i1waitLCDBusy@busyFlag)
 11990  0A36  00F2               	movlw	0
 11991  0A37  3000               	movwf	((i1waitLCDBusy@busyFlag))+1
 11992  0A38  00F3               	line	249
 11993                           ;LCD_hd44780u_qy_2004a.c: 249:   while(busyFlag == 1)
 11994                           	goto	i1l336
 11995  0A39  2A50               	
 11996                           i1l337:	
 11997  0A3A                     	line	252
 11998                           ;LCD_hd44780u_qy_2004a.c: 250:   {;LCD_hd44780u_qy_2004a.c: 252:     PORTCbits.RC0 = 1;

 11999                           	movlb 0	; select bank0
 12000  0A3A  0020               	bsf	(14),0	;volatile
 12001  0A3B  140E               	line	253
 12002                           ;LCD_hd44780u_qy_2004a.c: 253:     _delay((unsigned long)((1)*(16000000/4000000.0)));
 12003                           		opt asmopt_push
 12004                           	opt asmopt_off
 12005                           	nop2	;2 cycle nop
 12006  0A3C  3200               	nop2	;2 cycle nop
 12007  0A3D  3200               	opt asmopt_pop
 12008                           
 12009                           	line	254
 12010                           	
 12011                           i1l5387:	
 12012  0A3E                     ;LCD_hd44780u_qy_2004a.c: 254:     busyFlag = PORTAbits.RA0;
 12013                           	movlb 0	; select bank0
 12014  0A3E  0020               	movf	(12),w	;volatile
 12015  0A3F  080C               	andlw	(1<<1)-1
 12016  0A40  3901               	movwf	(??i1_waitLCDBusy+0)+0
 12017  0A41  00F0               	clrf	(??i1_waitLCDBusy+0)+0+1
 12018  0A42  01F1               	movf	0+(??i1_waitLCDBusy+0)+0,w
 12019  0A43  0870               	movwf	(i1waitLCDBusy@busyFlag)
 12020  0A44  00F2               	movf	1+(??i1_waitLCDBusy+0)+0,w
 12021  0A45  0871               	movwf	(i1waitLCDBusy@busyFlag+1)
 12022  0A46  00F3               	line	255
 12023                           	
 12024                           i1l5389:	
 12025  0A47                     ;LCD_hd44780u_qy_2004a.c: 255:     PORTCbits.RC0 = 0;
 12026                           	bcf	(14),0	;volatile
 12027  0A47  100E               	line	256
 12028                           	
 12029                           i1l5391:	
 12030  0A48                     ;LCD_hd44780u_qy_2004a.c: 256:     _delay((unsigned long)((2)*(16000000/4000000.0)));
 12031                           		opt asmopt_push
 12032                           	opt asmopt_off
 12033                           	nop2	;2 cycle nop
 12034  0A48  3200               	nop2	;2 cycle nop
 12035  0A49  3200               	nop2	;2 cycle nop
 12036  0A4A  3200               	nop2	;2 cycle nop
 12037  0A4B  3200               	opt asmopt_pop
 12038                           
 12039                           	line	258
 12040                           	
 12041                           i1l5393:	
 12042  0A4C                     ;LCD_hd44780u_qy_2004a.c: 258:     PORTCbits.RC0 = 1;
 12043                           	movlb 0	; select bank0
 12044  0A4C  0020               	bsf	(14),0	;volatile
 12045  0A4D  140E               	line	259
 12046                           	
 12047                           i1l5395:	
 12048  0A4E                     ;LCD_hd44780u_qy_2004a.c: 259:     _delay((unsigned long)((1)*(16000000/4000000.0)));
 12049                           		opt asmopt_push
 12050                           	opt asmopt_off
 12051                           	nop2	;2 cycle nop
 12052  0A4E  3200               	nop2	;2 cycle nop
 12053  0A4F  3200               	opt asmopt_pop
 12054                           
 12055                           	line	260
 12056                           ;LCD_hd44780u_qy_2004a.c: 260:   }
 12057                           	
 12058                           i1l336:	
 12059  0A50                     	line	249
 12060                           ;LCD_hd44780u_qy_2004a.c: 249:   while(busyFlag == 1)
 12061                           		decf	((i1waitLCDBusy@busyFlag)),w
 12062  0A50  0372               iorwf	((i1waitLCDBusy@busyFlag+1)),w
 12063  0A51  0473               	btfsc	status,2
 12064  0A52  1903               	goto	u361_21
 12065  0A53  2A55               	goto	u361_20
 12066  0A54  2A56               u361_21:
 12067  0A55                     	goto	i1l337
 12068  0A55  2A3A               u361_20:
 12069  0A56                     	goto	i1l339
 12070  0A56  2A57               	
 12071                           i1l338:	
 12072  0A57                     	line	261
 12073                           	
 12074                           i1l339:	
 12075  0A57                     	return
 12076  0A57  0008               	opt stack 0
 12077                           GLOBAL	__end_ofi1_waitLCDBusy
 12078                           	__end_ofi1_waitLCDBusy:
 12079  0A58                     	signat	i1_waitLCDBusy,89
 12080                           	global	i1_SetToReadDataFromLCD
 12081                           
 12082 ;; *************** function i1_SetToReadDataFromLCD *****************
 12083 ;; Defined at:
 12084 ;;		line 226 in file "LCD_hd44780u_qy_2004a.c"
 12085 ;; Parameters:    Size  Location     Type
 12086 ;;		None
 12087 ;; Auto vars:     Size  Location     Type
 12088 ;;		None
 12089 ;; Return value:  Size  Location     Type
 12090 ;;                  1    wreg      void 
 12091 ;; Registers used:
 12092 ;;		None
 12093 ;; Tracked objects:
 12094 ;;		On entry : 0/0
 12095 ;;		On exit  : 0/0
 12096 ;;		Unchanged: 0/0
 12097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12102 ;;Total ram usage:        0 bytes
 12103 ;; Hardware stack levels used:    1
 12104 ;; This function calls:
 12105 ;;		Nothing
 12106 ;; This function is called by:
 12107 ;;		i1_waitLCDBusy
 12108 ;; This function uses a non-reentrant model
 12109 ;;
 12110                           psect	text40,local,class=CODE,delta=2,merge=1,group=0
 12111                           	line	226
 12112                           global __ptext40
 12113                           __ptext40:	;psect for function i1_SetToReadDataFromLCD
 12114  091E                     psect	text40
 12115                           	file	"LCD_hd44780u_qy_2004a.c"
 12116                           	line	226
 12117                           	global	__size_ofi1_SetToReadDataFromLCD
 12118                           	__size_ofi1_SetToReadDataFromLCD	equ	__end_ofi1_SetToReadDataFromLCD-i1_SetToReadDataFr
                                 omLCD
 12119  0006                     	
 12120                           i1_SetToReadDataFromLCD:	
 12121  091E                     ;incstack = 0
 12122                           	opt	stack 5
 12123                           ; Regs used in i1_SetToReadDataFromLCD: []
 12124                           	line	228
 12125                           	
 12126                           i1l5327:	
 12127  091E                     ;LCD_hd44780u_qy_2004a.c: 228:   TRISAbits.TRISA0 = 1;
 12128                           	movlb 1	; select bank1
 12129  091E  0021               	bsf	(140)^080h,0	;volatile
 12130  091F  140C               	line	229
 12131                           ;LCD_hd44780u_qy_2004a.c: 229:   TRISAbits.TRISA1 = 1;
 12132                           	bsf	(140)^080h,1	;volatile
 12133  0920  148C               	line	230
 12134                           ;LCD_hd44780u_qy_2004a.c: 230:   TRISAbits.TRISA2 = 1;
 12135                           	bsf	(140)^080h,2	;volatile
 12136  0921  150C               	line	231
 12137                           ;LCD_hd44780u_qy_2004a.c: 231:   TRISAbits.TRISA3 = 1;
 12138                           	bsf	(140)^080h,3	;volatile
 12139  0922  158C               	line	232
 12140                           	
 12141                           i1l330:	
 12142  0923                     	return
 12143  0923  0008               	opt stack 0
 12144                           GLOBAL	__end_ofi1_SetToReadDataFromLCD
 12145                           	__end_ofi1_SetToReadDataFromLCD:
 12146  0924                     	signat	i1_SetToReadDataFromLCD,89
 12147                           	global	i1_setData
 12148                           
 12149 ;; *************** function i1_setData *****************
 12150 ;; Defined at:
 12151 ;;		line 142 in file "LCD_hd44780u_qy_2004a.c"
 12152 ;; Parameters:    Size  Location     Type
 12153 ;;  iValue          1    wreg     unsigned char 
 12154 ;; Auto vars:     Size  Location     Type
 12155 ;;  iValue          1    2[COMMON] unsigned char 
 12156 ;; Return value:  Size  Location     Type
 12157 ;;                  1    wreg      void 
 12158 ;; Registers used:
 12159 ;;		wreg, status,2, status,0
 12160 ;; Tracked objects:
 12161 ;;		On entry : 0/0
 12162 ;;		On exit  : 0/0
 12163 ;;		Unchanged: 0/0
 12164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12167 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12168 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12169 ;;Total ram usage:        3 bytes
 12170 ;; Hardware stack levels used:    1
 12171 ;; This function calls:
 12172 ;;		Nothing
 12173 ;; This function is called by:
 12174 ;;		i1_writeTxtChk
 12175 ;;		i1_setCursorPosition
 12176 ;; This function uses a non-reentrant model
 12177 ;;
 12178                           psect	text41,local,class=CODE,delta=2,merge=1,group=0
 12179                           	line	142
 12180                           global __ptext41
 12181                           __ptext41:	;psect for function i1_setData
 12182  0B90                     psect	text41
 12183                           	file	"LCD_hd44780u_qy_2004a.c"
 12184                           	line	142
 12185                           	global	__size_ofi1_setData
 12186                           	__size_ofi1_setData	equ	__end_ofi1_setData-i1_setData
 12187  003C                     	
 12188                           i1_setData:	
 12189  0B90                     ;incstack = 0
 12190                           	opt	stack 6
 12191                           ; Regs used in i1_setData: [wreg+status,2+status,0]
 12192                           ;i1setData@iValue stored from wreg
 12193                           	movwf	(i1setData@iValue)
 12194  0B90  00F2               	line	144
 12195                           	
 12196                           i1l5369:	
 12197  0B91                     ;LCD_hd44780u_qy_2004a.c: 142: void setData(char iValue);LCD_hd44780u_qy_2004a.c: 143: {
                                 ;LCD_hd44780u_qy_2004a.c: 144:   PORTCbits.RC0 = 1;
 12198                           	movlb 0	; select bank0
 12199  0B91  0020               	bsf	(14),0	;volatile
 12200  0B92  140E               	line	145
 12201                           	
 12202                           i1l5371:	
 12203  0B93                     ;LCD_hd44780u_qy_2004a.c: 145:   PORTAbits.RA0 = (iValue & 0x8) >> 3;
 12204                           	movf	(i1setData@iValue),w
 12205  0B93  0872               	movwf	(??i1_setData+0)+0
 12206  0B94  00F0               	movlw	03h
 12207  0B95  3003               u359_25:
 12208  0B96                     	lsrf	(??i1_setData+0)+0,f
 12209  0B96  36F0               	decfsz	wreg,f
 12210  0B97  0B89               	goto	u359_25
 12211  0B98  2B96               	movlw	low(01h)
 12212  0B99  3001               	andwf	0+(??i1_setData+0)+0,w
 12213  0B9A  0570               	movwf	(??i1_setData+1)+0
 12214  0B9B  00F1               	movf	(12),w	;volatile
 12215  0B9C  080C               	xorwf	0+(??i1_setData+1)+0,w
 12216  0B9D  0671               	andlw	not ((1<<1)-1)
 12217  0B9E  39FE               	xorwf	0+(??i1_setData+1)+0,w
 12218  0B9F  0671               	movwf	(12)	;volatile
 12219  0BA0  008C               	line	146
 12220                           ;LCD_hd44780u_qy_2004a.c: 146:   PORTAbits.RA1 = (iValue & 0x4) >> 2;
 12221                           	movf	(i1setData@iValue),w
 12222  0BA1  0872               	movwf	(??i1_setData+0)+0
 12223  0BA2  00F0               	movlw	02h
 12224  0BA3  3002               u360_25:
 12225  0BA4                     	lsrf	(??i1_setData+0)+0,f
 12226  0BA4  36F0               	decfsz	wreg,f
 12227  0BA5  0B89               	goto	u360_25
 12228  0BA6  2BA4               	movf	0+(??i1_setData+0)+0,w
 12229  0BA7  0870               	andlw	01h
 12230  0BA8  3901               	movwf	(??i1_setData+1)+0
 12231  0BA9  00F1               	rlf	(??i1_setData+1)+0,f
 12232  0BAA  0DF1               	movf	(12),w	;volatile
 12233  0BAB  080C               	xorwf	(??i1_setData+1)+0,w
 12234  0BAC  0671               	andlw	not (((1<<1)-1)<<1)
 12235  0BAD  39FD               	xorwf	(??i1_setData+1)+0,w
 12236  0BAE  0671               	movwf	(12)	;volatile
 12237  0BAF  008C               	line	147
 12238                           ;LCD_hd44780u_qy_2004a.c: 147:   PORTAbits.RA2 = (iValue & 0x2) >> 1;
 12239                           	lsrf	(i1setData@iValue),w
 12240  0BB0  3672               	andlw	01h
 12241  0BB1  3901               	movwf	(??i1_setData+0)+0
 12242  0BB2  00F0               	rlf	(??i1_setData+0)+0,f
 12243  0BB3  0DF0               	rlf	(??i1_setData+0)+0,f
 12244  0BB4  0DF0               	movf	(12),w	;volatile
 12245  0BB5  080C               	xorwf	(??i1_setData+0)+0,w
 12246  0BB6  0670               	andlw	not (((1<<1)-1)<<2)
 12247  0BB7  39FB               	xorwf	(??i1_setData+0)+0,w
 12248  0BB8  0670               	movwf	(12)	;volatile
 12249  0BB9  008C               	line	148
 12250                           ;LCD_hd44780u_qy_2004a.c: 148:   PORTAbits.RA3 = (iValue & 0x1) ;
 12251                           	movf	(i1setData@iValue),w
 12252  0BBA  0872               	andlw	01h
 12253  0BBB  3901               	movwf	(??i1_setData+0)+0
 12254  0BBC  00F0               	rlf	(??i1_setData+0)+0,f
 12255  0BBD  0DF0               	rlf	(??i1_setData+0)+0,f
 12256  0BBE  0DF0               	rlf	(??i1_setData+0)+0,f
 12257  0BBF  0DF0               	movf	(12),w	;volatile
 12258  0BC0  080C               	xorwf	(??i1_setData+0)+0,w
 12259  0BC1  0670               	andlw	not (((1<<1)-1)<<3)
 12260  0BC2  39F7               	xorwf	(??i1_setData+0)+0,w
 12261  0BC3  0670               	movwf	(12)	;volatile
 12262  0BC4  008C               	line	149
 12263                           	
 12264                           i1l5373:	
 12265  0BC5                     ;LCD_hd44780u_qy_2004a.c: 149:   _delay((unsigned long)((1)*(16000000/4000000.0)));
 12266                           		opt asmopt_push
 12267                           	opt asmopt_off
 12268                           	nop2	;2 cycle nop
 12269  0BC5  3200               	nop2	;2 cycle nop
 12270  0BC6  3200               	opt asmopt_pop
 12271                           
 12272                           	line	150
 12273                           	
 12274                           i1l5375:	
 12275  0BC7                     ;LCD_hd44780u_qy_2004a.c: 150:   PORTCbits.RC0 = 0;
 12276                           	movlb 0	; select bank0
 12277  0BC7  0020               	bcf	(14),0	;volatile
 12278  0BC8  100E               	line	151
 12279                           	
 12280                           i1l5377:	
 12281  0BC9                     ;LCD_hd44780u_qy_2004a.c: 151:   _delay((unsigned long)((1)*(16000000/4000000.0)));
 12282                           		opt asmopt_push
 12283                           	opt asmopt_off
 12284                           	nop2	;2 cycle nop
 12285  0BC9  3200               	nop2	;2 cycle nop
 12286  0BCA  3200               	opt asmopt_pop
 12287                           
 12288                           	line	152
 12289                           	
 12290                           i1l303:	
 12291  0BCB                     	return
 12292  0BCB  0008               	opt stack 0
 12293                           GLOBAL	__end_ofi1_setData
 12294                           	__end_ofi1_setData:
 12295  0BCC                     	signat	i1_setData,89
 12296                           	global	i1_SetToSendDataToLCD
 12297                           
 12298 ;; *************** function i1_SetToSendDataToLCD *****************
 12299 ;; Defined at:
 12300 ;;		line 233 in file "LCD_hd44780u_qy_2004a.c"
 12301 ;; Parameters:    Size  Location     Type
 12302 ;;		None
 12303 ;; Auto vars:     Size  Location     Type
 12304 ;;		None
 12305 ;; Return value:  Size  Location     Type
 12306 ;;                  1    wreg      void 
 12307 ;; Registers used:
 12308 ;;		None
 12309 ;; Tracked objects:
 12310 ;;		On entry : 0/0
 12311 ;;		On exit  : 0/0
 12312 ;;		Unchanged: 0/0
 12313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12318 ;;Total ram usage:        0 bytes
 12319 ;; Hardware stack levels used:    1
 12320 ;; This function calls:
 12321 ;;		Nothing
 12322 ;; This function is called by:
 12323 ;;		i1_writeTxtChk
 12324 ;;		i1_setCursorPosition
 12325 ;; This function uses a non-reentrant model
 12326 ;;
 12327                           psect	text42,local,class=CODE,delta=2,merge=1,group=0
 12328                           	line	233
 12329                           global __ptext42
 12330                           __ptext42:	;psect for function i1_SetToSendDataToLCD
 12331  0918                     psect	text42
 12332                           	file	"LCD_hd44780u_qy_2004a.c"
 12333                           	line	233
 12334                           	global	__size_ofi1_SetToSendDataToLCD
 12335                           	__size_ofi1_SetToSendDataToLCD	equ	__end_ofi1_SetToSendDataToLCD-i1_SetToSendDataToLCD

 12336  0006                     	
 12337                           i1_SetToSendDataToLCD:	
 12338  0918                     ;incstack = 0
 12339                           	opt	stack 5
 12340                           ; Regs used in i1_SetToSendDataToLCD: []
 12341                           	line	235
 12342                           	
 12343                           i1l5379:	
 12344  0918                     ;LCD_hd44780u_qy_2004a.c: 235:   TRISAbits.TRISA0 = 0;;
 12345                           	movlb 1	; select bank1
 12346  0918  0021               	bcf	(140)^080h,0	;volatile
 12347  0919  100C               	line	236
 12348                           ;LCD_hd44780u_qy_2004a.c: 236:   TRISAbits.TRISA1 = 0;;
 12349                           	bcf	(140)^080h,1	;volatile
 12350  091A  108C               	line	237
 12351                           ;LCD_hd44780u_qy_2004a.c: 237:   TRISAbits.TRISA2 = 0;;
 12352                           	bcf	(140)^080h,2	;volatile
 12353  091B  110C               	line	238
 12354                           ;LCD_hd44780u_qy_2004a.c: 238:   TRISAbits.TRISA3 = 0;;
 12355                           	bcf	(140)^080h,3	;volatile
 12356  091C  118C               	line	239
 12357                           	
 12358                           i1l333:	
 12359  091D                     	return
 12360  091D  0008               	opt stack 0
 12361                           GLOBAL	__end_ofi1_SetToSendDataToLCD
 12362                           	__end_ofi1_SetToSendDataToLCD:
 12363  091E                     	signat	i1_SetToSendDataToLCD,89
 12364                           	global	_TempUpdateRequest
 12365                           
 12366 ;; *************** function _TempUpdateRequest *****************
 12367 ;; Defined at:
 12368 ;;		line 80 in file "EM1812.c"
 12369 ;; Parameters:    Size  Location     Type
 12370 ;;		None
 12371 ;; Auto vars:     Size  Location     Type
 12372 ;;		None
 12373 ;; Return value:  Size  Location     Type
 12374 ;;                  2   74[None  ] int 
 12375 ;; Registers used:
 12376 ;;		wreg, status,2, status,0
 12377 ;; Tracked objects:
 12378 ;;		On entry : 0/0
 12379 ;;		On exit  : 0/0
 12380 ;;		Unchanged: 0/0
 12381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12386 ;;Total ram usage:        0 bytes
 12387 ;; Hardware stack levels used:    1
 12388 ;; This function calls:
 12389 ;;		Nothing
 12390 ;; This function is called by:
 12391 ;;		_myint
 12392 ;; This function uses a non-reentrant model
 12393 ;;
 12394                           psect	text43,local,class=CODE,delta=2,merge=1,group=0
 12395                           	file	"EM1812.c"
 12396                           	line	80
 12397                           global __ptext43
 12398                           __ptext43:	;psect for function _TempUpdateRequest
 12399  09AB                     psect	text43
 12400                           	file	"EM1812.c"
 12401                           	line	80
 12402                           	global	__size_of_TempUpdateRequest
 12403                           	__size_of_TempUpdateRequest	equ	__end_of_TempUpdateRequest-_TempUpdateRequest
 12404  000D                     	
 12405                           _TempUpdateRequest:	
 12406  09AB                     ;incstack = 0
 12407                           	opt	stack 8
 12408                           ; Regs used in _TempUpdateRequest: [wreg+status,2+status,0]
 12409                           	line	82
 12410                           	
 12411                           i1l4193:	
 12412  09AB                     ;EM1812.c: 82:     if(wTempState == eIdle)
 12413                           		movlw	5
 12414  09AB  3005               	movlb 0	; select bank0
 12415  09AC  0020               	xorwf	((_wTempState)),w
 12416  09AD  065A               	btfss	status,2
 12417  09AE  1D03               	goto	u281_21
 12418  09AF  29B1               	goto	u281_20
 12419  09B0  29B2               u281_21:
 12420  09B1                     	goto	i1l462
 12421  09B1  29B7               u281_20:
 12422  09B2                     	line	84
 12423                           	
 12424                           i1l4195:	
 12425  09B2                     ;EM1812.c: 83:     {;EM1812.c: 84:         wTempState = eSetGetTemp;
 12426                           	clrf	(_wTempState)
 12427  09B2  01DA               	goto	i1l462
 12428  09B3  29B7               	line	85
 12429                           	
 12430                           i1l4197:	
 12431  09B4                     ;EM1812.c: 85:         return 1;;	Return value of _TempUpdateRequest is never used
 12432                           	goto	i1l462
 12433  09B4  29B7               	line	86
 12434                           	
 12435                           i1l4199:	
 12436  09B5                     ;EM1812.c: 86:     }
 12437                           	goto	i1l462
 12438  09B5  29B7               	line	87
 12439                           ;EM1812.c: 87:     else
 12440                           	
 12441                           i1l461:	
 12442  09B6                     	line	89
 12443                           ;EM1812.c: 88:     {;EM1812.c: 89:         return 0;;	Return value of _TempUpdateRequest
                                  is never used
 12444                           	goto	i1l462
 12445  09B6  29B7               	line	90
 12446                           ;EM1812.c: 90:     }
 12447                           	
 12448                           i1l463:	
 12449  09B7                     	line	92
 12450                           	
 12451                           i1l462:	
 12452  09B7                     	return
 12453  09B7  0008               	opt stack 0
 12454                           GLOBAL	__end_of_TempUpdateRequest
 12455                           	__end_of_TempUpdateRequest:
 12456  09B8                     	signat	_TempUpdateRequest,90
 12457                           	global	_I2C_Interrupt
 12458                           
 12459 ;; *************** function _I2C_Interrupt *****************
 12460 ;; Defined at:
 12461 ;;		line 95 in file "I2C.c"
 12462 ;; Parameters:    Size  Location     Type
 12463 ;;		None
 12464 ;; Auto vars:     Size  Location     Type
 12465 ;;  oErrorCode      1    4[COMMON] unsigned char 
 12466 ;; Return value:  Size  Location     Type
 12467 ;;                  2    0[COMMON] int 
 12468 ;; Registers used:
 12469 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12470 ;; Tracked objects:
 12471 ;;		On entry : 0/0
 12472 ;;		On exit  : 0/0
 12473 ;;		Unchanged: 0/0
 12474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12477 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12478 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12479 ;;Total ram usage:        5 bytes
 12480 ;; Hardware stack levels used:    1
 12481 ;; This function calls:
 12482 ;;		Nothing
 12483 ;; This function is called by:
 12484 ;;		_myint
 12485 ;; This function uses a non-reentrant model
 12486 ;;
 12487                           psect	text44,local,class=CODE,delta=2,merge=1,group=0
 12488                           	file	"I2C.c"
 12489                           	line	95
 12490                           global __ptext44
 12491                           __ptext44:	;psect for function _I2C_Interrupt
 12492  0502                     psect	text44
 12493                           	file	"I2C.c"
 12494                           	line	95
 12495                           	global	__size_of_I2C_Interrupt
 12496                           	__size_of_I2C_Interrupt	equ	__end_of_I2C_Interrupt-_I2C_Interrupt
 12497  0126                     	
 12498                           _I2C_Interrupt:	
 12499  0502                     ;incstack = 0
 12500                           	opt	stack 8
 12501                           ; Regs used in _I2C_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 12502                           	line	97
 12503                           	
 12504                           i1l4059:	
 12505  0502                     ;I2C.c: 97:     uint8_t oErrorCode=0;
 12506                           	clrf	(I2C_Interrupt@oErrorCode)
 12507  0502  01F4               	line	99
 12508                           	
 12509                           i1l4061:	
 12510  0503                     ;I2C.c: 99:     if(PIR1bits.SSPIF == 1)
 12511                           	movlb 0	; select bank0
 12512  0503  0020               	btfss	(17),3	;volatile
 12513  0504  1D91               	goto	u252_21
 12514  0505  2D07               	goto	u252_20
 12515  0506  2D08               u252_21:
 12516  0507                     	goto	i1l4149
 12517  0507  2E15               u252_20:
 12518  0508                     	line	101
 12519                           	
 12520                           i1l4063:	
 12521  0508                     ;I2C.c: 100:     {;I2C.c: 101:         PIR1bits.SSPIF = 0;
 12522                           	bcf	(17),3	;volatile
 12523  0508  1191               	line	102
 12524                           	
 12525                           i1l4065:	
 12526  0509                     ;I2C.c: 102:         if( wI2CTxNbOfByteToSend != 0)
 12527                           	movf	((_wI2CTxNbOfByteToSend)),w
 12528  0509  0855               	btfsc	status,2
 12529  050A  1903               	goto	u253_21
 12530  050B  2D0D               	goto	u253_20
 12531  050C  2D0E               u253_21:
 12532  050D                     	goto	i1l4149
 12533  050D  2E15               u253_20:
 12534  050E                     	line	104
 12535                           	
 12536                           i1l4067:	
 12537  050E                     ;I2C.c: 103:         {;I2C.c: 104:             if((wI2CTxBuffer[0] & 0x01) == 1)
 12538                           	movlb 2	; select bank2
 12539  050E  0022               	btfss	(_wI2CTxBuffer)^0100h,(0)&7
 12540  050F  1C48               	goto	u254_21
 12541  0510  2D12               	goto	u254_20
 12542  0511  2D13               u254_21:
 12543  0512                     	goto	i1l588
 12544  0512  2D9A               u254_20:
 12545  0513                     	line	106
 12546                           	
 12547                           i1l4069:	
 12548  0513                     ;I2C.c: 105:             {;I2C.c: 106:                 if(SSPSTATbits.P)
 12549                           	movlb 4	; select bank4
 12550  0513  0024               	btfss	(532)^0200h,4	;volatile
 12551  0514  1E14               	goto	u255_21
 12552  0515  2D17               	goto	u255_20
 12553  0516  2D18               u255_21:
 12554  0517                     	goto	i1l589
 12555  0517  2D1E               u255_20:
 12556  0518                     	line	108
 12557                           	
 12558                           i1l4071:	
 12559  0518                     ;I2C.c: 107:                 {;I2C.c: 108:                   PIE1bits.SSPIE = 0;
 12560                           	movlb 1	; select bank1
 12561  0518  0021               	bcf	(145)^080h,3	;volatile
 12562  0519  1191               	line	109
 12563                           	
 12564                           i1l4073:	
 12565  051A                     ;I2C.c: 109:                   wI2CTxNbOfByteToSend=0;
 12566                           	movlb 0	; select bank0
 12567  051A  0020               	clrf	(_wI2CTxNbOfByteToSend)
 12568  051B  01D5               	line	110
 12569                           ;I2C.c: 110:                   wI2CTxSendPos=0;
 12570                           	clrf	(_wI2CTxSendPos)
 12571  051C  01D2               	line	111
 12572                           ;I2C.c: 111:                 }
 12573                           	goto	i1l4149
 12574  051D  2E15               	line	112
 12575                           ;I2C.c: 112:                 else if(SSPSTATbits.S && wI2CTxSendPos == 0)
 12576                           	
 12577                           i1l589:	
 12578  051E                     	btfss	(532)^0200h,3	;volatile
 12579  051E  1D94               	goto	u256_21
 12580  051F  2D21               	goto	u256_20
 12581  0520  2D22               u256_21:
 12582  0521                     	goto	i1l591
 12583  0521  2D38               u256_20:
 12584  0522                     	
 12585                           i1l4075:	
 12586  0522                     	movlb 0	; select bank0
 12587  0522  0020               	movf	((_wI2CTxSendPos)),w
 12588  0523  0852               	btfss	status,2
 12589  0524  1D03               	goto	u257_21
 12590  0525  2D27               	goto	u257_20
 12591  0526  2D28               u257_21:
 12592  0527                     	goto	i1l591
 12593  0527  2D38               u257_20:
 12594  0528                     	line	114
 12595                           	
 12596                           i1l4077:	
 12597  0528                     ;I2C.c: 113:                 {;I2C.c: 114:                     SSPBUF = wI2CTxBuffer[wI2
                                 CTxSendPos];
 12598                           	movf	(_wI2CTxSendPos),w
 12599  0528  0852               	addlw	low(_wI2CTxBuffer|((0x1)<<8))&0ffh
 12600  0529  3E48               	movwf	fsr1l
 12601  052A  0086               	movlw 1	; select bank2/3
 12602  052B  3001               	movwf fsr1h	
 12603  052C  0087               	
 12604                           	movf	indf1,w
 12605  052D  0801               	movlb 4	; select bank4
 12606  052E  0024               	movwf	(529)^0200h	;volatile
 12607  052F  0091               	line	115
 12608                           	
 12609                           i1l4079:	
 12610  0530                     ;I2C.c: 115:                     wI2CCommandState = ProcessingCommand;
 12611                           	movlb 0	; select bank0
 12612  0530  0020               	clrf	(_wI2CCommandState)
 12613  0531  01E3               	incf	(_wI2CCommandState),f
 12614  0532  0AE3               	line	116
 12615                           	
 12616                           i1l4081:	
 12617  0533                     ;I2C.c: 116:                     wI2CTxSendPos++;
 12618                           	movlw	low(01h)
 12619  0533  3001               	movwf	(??_I2C_Interrupt+0)+0
 12620  0534  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 12621  0535  0872               	addwf	(_wI2CTxSendPos),f
 12622  0536  07D2               	line	117
 12623                           ;I2C.c: 117:                 }
 12624                           	goto	i1l4149
 12625  0537  2E15               	line	118
 12626                           ;I2C.c: 118:                 else if(SSPSTATbits.BF == 1)
 12627                           	
 12628                           i1l591:	
 12629  0538                     	movlb 4	; select bank4
 12630  0538  0024               	btfss	(532)^0200h,0	;volatile
 12631  0539  1C14               	goto	u258_21
 12632  053A  2D3C               	goto	u258_20
 12633  053B  2D3D               u258_21:
 12634  053C                     	goto	i1l593
 12635  053C  2D64               u258_20:
 12636  053D                     	line	120
 12637                           	
 12638                           i1l4083:	
 12639  053D                     ;I2C.c: 119:                 {;I2C.c: 120:                     wI2CRxBuffer[wReceptionBu
                                 fferPosition] = SSPBUF;
 12640                           	movf	(529)^0200h,w	;volatile
 12641  053D  0811               	movwf	(??_I2C_Interrupt+0)+0
 12642  053E  00F2               	movlb 0	; select bank0
 12643  053F  0020               	movf	(_wReceptionBufferPosition),w
 12644  0540  0858               	addlw	low(_wI2CRxBuffer|((0x1)<<8))&0ffh
 12645  0541  3E34               	movwf	fsr1l
 12646  0542  0086               	movlw 1	; select bank2/3
 12647  0543  3001               	movwf fsr1h	
 12648  0544  0087               	
 12649                           	movf	(??_I2C_Interrupt+0)+0,w
 12650  0545  0872               	movwf	indf1
 12651  0546  0081               	line	121
 12652                           	
 12653                           i1l4085:	
 12654  0547                     ;I2C.c: 121:                     wReceptionBufferPosition++;
 12655                           	movlw	low(01h)
 12656  0547  3001               	movwf	(??_I2C_Interrupt+0)+0
 12657  0548  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 12658  0549  0872               	addwf	(_wReceptionBufferPosition),f
 12659  054A  07D8               	line	123
 12660                           	
 12661                           i1l4087:	
 12662  054B                     ;I2C.c: 123:                     SSPSTATbits.BF = 0 ;
 12663                           	movlb 4	; select bank4
 12664  054B  0024               	bcf	(532)^0200h,0	;volatile
 12665  054C  1014               	line	124
 12666                           	
 12667                           i1l4089:	
 12668  054D                     ;I2C.c: 124:                     if( wReceptionBufferPosition < wI2CRxNbOfByteToReceived
                                 )
 12669                           	movlb 0	; select bank0
 12670  054D  0020               	movf	(_wI2CRxNbOfByteToReceived),w
 12671  054E  0854               	subwf	(_wReceptionBufferPosition),w
 12672  054F  0258               	skipnc
 12673  0550  1803               	goto	u259_21
 12674  0551  2D53               	goto	u259_20
 12675  0552  2D54               u259_21:
 12676  0553                     	goto	i1l594
 12677  0553  2D57               u259_20:
 12678  0554                     	line	126
 12679                           	
 12680                           i1l4091:	
 12681  0554                     ;I2C.c: 125:                     {;I2C.c: 126:                         SSPCON2bits.ACKDT
                                  = 0;
 12682                           	movlb 4	; select bank4
 12683  0554  0024               	bcf	(534)^0200h,5	;volatile
 12684  0555  1296               	line	127
 12685                           ;I2C.c: 127:                     }
 12686                           	goto	i1l4097
 12687  0556  2D61               	line	128
 12688                           ;I2C.c: 128:                     else
 12689                           	
 12690                           i1l594:	
 12691  0557                     	line	130
 12692                           ;I2C.c: 129:                     {;I2C.c: 130:                         SSPCON2bits.ACKDT
                                  = 1;
 12693                           	movlb 4	; select bank4
 12694  0557  0024               	bsf	(534)^0200h,5	;volatile
 12695  0558  1696               	line	131
 12696                           	
 12697                           i1l4093:	
 12698  0559                     ;I2C.c: 131:                         wI2CCommandState = CommandCompleted;
 12699                           	movlw	low(03h)
 12700  0559  3003               	movwf	(??_I2C_Interrupt+0)+0
 12701  055A  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 12702  055B  0872               	movlb 0	; select bank0
 12703  055C  0020               	movwf	(_wI2CCommandState)
 12704  055D  00E3               	line	132
 12705                           	
 12706                           i1l4095:	
 12707  055E                     ;I2C.c: 132:                         wNewI2CReception = 1;
 12708                           	clrf	(_wNewI2CReception)
 12709  055E  01D3               	incf	(_wNewI2CReception),f
 12710  055F  0AD3               	goto	i1l4097
 12711  0560  2D61               	line	133
 12712                           ;I2C.c: 133:                     }
 12713                           	
 12714                           i1l595:	
 12715  0561                     	line	134
 12716                           	
 12717                           i1l4097:	
 12718  0561                     ;I2C.c: 134:                     SSPCON2bits.ACKEN = 1;
 12719                           	movlb 4	; select bank4
 12720  0561  0024               	bsf	(534)^0200h,4	;volatile
 12721  0562  1616               	line	135
 12722                           ;I2C.c: 135:                 }
 12723                           	goto	i1l4149
 12724  0563  2E15               	line	136
 12725                           ;I2C.c: 136:                 else
 12726                           	
 12727                           i1l593:	
 12728  0564                     	line	138
 12729                           ;I2C.c: 137:                 {;I2C.c: 138:                     if(SSPCON2bits.ACKSTAT ==
                                  0 && wI2CTxSendPos != 0)
 12730                           	btfsc	(534)^0200h,6	;volatile
 12731  0564  1B16               	goto	u260_21
 12732  0565  2D67               	goto	u260_20
 12733  0566  2D68               u260_21:
 12734  0567                     	goto	i1l597
 12735  0567  2D7B               u260_20:
 12736  0568                     	
 12737                           i1l4099:	
 12738  0568                     	movlb 0	; select bank0
 12739  0568  0020               	movf	((_wI2CTxSendPos)),w
 12740  0569  0852               	btfsc	status,2
 12741  056A  1903               	goto	u261_21
 12742  056B  2D6D               	goto	u261_20
 12743  056C  2D6E               u261_21:
 12744  056D                     	goto	i1l597
 12745  056D  2D7B               u261_20:
 12746  056E                     	line	140
 12747                           	
 12748                           i1l4101:	
 12749  056E                     ;I2C.c: 139:                     {;I2C.c: 140:                         if( wReceptionBuf
                                 ferPosition < wI2CRxNbOfByteToReceived)
 12750                           	movf	(_wI2CRxNbOfByteToReceived),w
 12751  056E  0854               	subwf	(_wReceptionBufferPosition),w
 12752  056F  0258               	skipnc
 12753  0570  1803               	goto	u262_21
 12754  0571  2D73               	goto	u262_20
 12755  0572  2D74               u262_21:
 12756  0573                     	goto	i1l598
 12757  0573  2D77               u262_20:
 12758  0574                     	line	143
 12759                           	
 12760                           i1l4103:	
 12761  0574                     ;I2C.c: 141:                         {;I2C.c: 143:                           SSPCON2bits
                                 .RCEN = 1;
 12762                           	movlb 4	; select bank4
 12763  0574  0024               	bsf	(534)^0200h,3	;volatile
 12764  0575  1596               	line	144
 12765                           ;I2C.c: 144:                         }
 12766                           	goto	i1l4149
 12767  0576  2E15               	line	145
 12768                           ;I2C.c: 145:                         else
 12769                           	
 12770                           i1l598:	
 12771  0577                     	line	147
 12772                           ;I2C.c: 146:                         {;I2C.c: 147:                           SSPCON2bits
                                 .PEN = 1;
 12773                           	movlb 4	; select bank4
 12774  0577  0024               	bsf	(534)^0200h,2	;volatile
 12775  0578  1516               	goto	i1l4149
 12776  0579  2E15               	line	148
 12777                           ;I2C.c: 148:                         }
 12778                           	
 12779                           i1l599:	
 12780  057A                     	line	149
 12781                           ;I2C.c: 149:                     }
 12782                           	goto	i1l4149
 12783  057A  2E15               	line	150
 12784                           ;I2C.c: 150:                     else if(SSPCON2bits.ACKSTAT == 1)
 12785                           	
 12786                           i1l597:	
 12787  057B                     	movlb 4	; select bank4
 12788  057B  0024               	btfss	(534)^0200h,6	;volatile
 12789  057C  1F16               	goto	u263_21
 12790  057D  2D7F               	goto	u263_20
 12791  057E  2D80               u263_21:
 12792  057F                     	goto	i1l601
 12793  057F  2D92               u263_20:
 12794  0580                     	line	152
 12795                           	
 12796                           i1l4105:	
 12797  0580                     ;I2C.c: 151:                     {;I2C.c: 152:                         SSPCON2bits.ACKST
                                 AT = 0;
 12798                           	bcf	(534)^0200h,6	;volatile
 12799  0580  1316               	line	153
 12800                           	
 12801                           i1l4107:	
 12802  0581                     ;I2C.c: 153:                         wI2CCommandState = CommandFailed;
 12803                           	movlw	low(05h)
 12804  0581  3005               	movwf	(??_I2C_Interrupt+0)+0
 12805  0582  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 12806  0583  0872               	movlb 0	; select bank0
 12807  0584  0020               	movwf	(_wI2CCommandState)
 12808  0585  00E3               	line	154
 12809                           	
 12810                           i1l4109:	
 12811  0586                     ;I2C.c: 154:                         if(wI2CTxSendPos != 0)
 12812                           	movf	((_wI2CTxSendPos)),w
 12813  0586  0852               	btfsc	status,2
 12814  0587  1903               	goto	u264_21
 12815  0588  2D8A               	goto	u264_20
 12816  0589  2D8B               u264_21:
 12817  058A                     	goto	i1l602
 12818  058A  2D8E               u264_20:
 12819  058B                     	line	156
 12820                           	
 12821                           i1l4111:	
 12822  058B                     ;I2C.c: 155:                         {;I2C.c: 156:                           SSPCON2bits
                                 .PEN = 1;
 12823                           	movlb 4	; select bank4
 12824  058B  0024               	bsf	(534)^0200h,2	;volatile
 12825  058C  1516               	line	157
 12826                           ;I2C.c: 157:                         }
 12827                           	goto	i1l4149
 12828  058D  2E15               	line	158
 12829                           ;I2C.c: 158:                         else
 12830                           	
 12831                           i1l602:	
 12832  058E                     	line	160
 12833                           ;I2C.c: 159:                         {;I2C.c: 160:                           SSPCON2bits
                                 .PEN = 1;
 12834                           	movlb 4	; select bank4
 12835  058E  0024               	bsf	(534)^0200h,2	;volatile
 12836  058F  1516               	goto	i1l4149
 12837  0590  2E15               	line	161
 12838                           ;I2C.c: 161:                         }
 12839                           	
 12840                           i1l603:	
 12841  0591                     	line	162
 12842                           ;I2C.c: 162:                     }
 12843                           	goto	i1l4149
 12844  0591  2E15               	line	163
 12845                           ;I2C.c: 163:                     else
 12846                           	
 12847                           i1l601:	
 12848  0592                     	line	165
 12849                           ;I2C.c: 164:                     {;I2C.c: 165:                         oErrorCode = 1;
 12850                           	clrf	(I2C_Interrupt@oErrorCode)
 12851  0592  01F4               	incf	(I2C_Interrupt@oErrorCode),f
 12852  0593  0AF4               	goto	i1l4149
 12853  0594  2E15               	line	166
 12854                           ;I2C.c: 166:                     }
 12855                           	
 12856                           i1l604:	
 12857  0595                     	goto	i1l4149
 12858  0595  2E15               	
 12859                           i1l600:	
 12860  0596                     	goto	i1l4149
 12861  0596  2E15               	line	167
 12862                           ;I2C.c: 167:                 }
 12863                           	
 12864                           i1l596:	
 12865  0597                     	goto	i1l4149
 12866  0597  2E15               	
 12867                           i1l592:	
 12868  0598                     	goto	i1l4149
 12869  0598  2E15               	
 12870                           i1l590:	
 12871  0599                     	line	169
 12872                           ;I2C.c: 169:             }
 12873                           	goto	i1l4149
 12874  0599  2E15               	line	170
 12875                           ;I2C.c: 170:             else
 12876                           	
 12877                           i1l588:	
 12878  059A                     	line	172
 12879                           ;I2C.c: 171:             {;I2C.c: 172:                 if(SSPSTATbits.P)
 12880                           	movlb 4	; select bank4
 12881  059A  0024               	btfss	(532)^0200h,4	;volatile
 12882  059B  1E14               	goto	u265_21
 12883  059C  2D9E               	goto	u265_20
 12884  059D  2D9F               u265_21:
 12885  059E                     	goto	i1l606
 12886  059E  2DBB               u265_20:
 12887  059F                     	line	174
 12888                           	
 12889                           i1l4113:	
 12890  059F                     ;I2C.c: 173:                 {;I2C.c: 174:                   PIE1bits.SSPIE = 0;
 12891                           	movlb 1	; select bank1
 12892  059F  0021               	bcf	(145)^080h,3	;volatile
 12893  05A0  1191               	line	175
 12894                           	
 12895                           i1l4115:	
 12896  05A1                     ;I2C.c: 175:                   wI2CTxNbOfByteToSend=0;
 12897                           	movlb 0	; select bank0
 12898  05A1  0020               	clrf	(_wI2CTxNbOfByteToSend)
 12899  05A2  01D5               	line	176
 12900                           ;I2C.c: 176:                   wI2CTxSendPos = 0;
 12901                           	clrf	(_wI2CTxSendPos)
 12902  05A3  01D2               	line	177
 12903                           	
 12904                           i1l4117:	
 12905  05A4                     ;I2C.c: 177:                   if(wI2CCommandState == CommandWillComplet)
 12906                           		movlw	2
 12907  05A4  3002               	xorwf	((_wI2CCommandState)),w
 12908  05A5  0663               	btfss	status,2
 12909  05A6  1D03               	goto	u266_21
 12910  05A7  2DA9               	goto	u266_20
 12911  05A8  2DAA               u266_21:
 12912  05A9                     	goto	i1l4121
 12913  05A9  2DAF               u266_20:
 12914  05AA                     	line	179
 12915                           	
 12916                           i1l4119:	
 12917  05AA                     ;I2C.c: 178:                   {;I2C.c: 179:                       wI2CCommandState = Co
                                 mmandCompleted;
 12918                           	movlw	low(03h)
 12919  05AA  3003               	movwf	(??_I2C_Interrupt+0)+0
 12920  05AB  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 12921  05AC  0872               	movwf	(_wI2CCommandState)
 12922  05AD  00E3               	goto	i1l4121
 12923  05AE  2DAF               	line	180
 12924                           ;I2C.c: 180:                   }
 12925                           	
 12926                           i1l607:	
 12927  05AF                     	line	181
 12928                           	
 12929                           i1l4121:	
 12930  05AF                     ;I2C.c: 181:                   if(wI2CCommandState == CommandWillFail)
 12931                           		movlw	4
 12932  05AF  3004               	xorwf	((_wI2CCommandState)),w
 12933  05B0  0663               	btfss	status,2
 12934  05B1  1D03               	goto	u267_21
 12935  05B2  2DB4               	goto	u267_20
 12936  05B3  2DB5               u267_21:
 12937  05B4                     	goto	i1l4149
 12938  05B4  2E15               u267_20:
 12939  05B5                     	line	183
 12940                           	
 12941                           i1l4123:	
 12942  05B5                     ;I2C.c: 182:                   {;I2C.c: 183:                       wI2CCommandState = Co
                                 mmandFailed;
 12943                           	movlw	low(05h)
 12944  05B5  3005               	movwf	(??_I2C_Interrupt+0)+0
 12945  05B6  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 12946  05B7  0872               	movwf	(_wI2CCommandState)
 12947  05B8  00E3               	goto	i1l4149
 12948  05B9  2E15               	line	184
 12949                           ;I2C.c: 184:                   }
 12950                           	
 12951                           i1l608:	
 12952  05BA                     	line	185
 12953                           ;I2C.c: 185:                 }
 12954                           	goto	i1l4149
 12955  05BA  2E15               	line	186
 12956                           ;I2C.c: 186:                 else if(SSPSTATbits.S && wI2CTxSendPos == 0)
 12957                           	
 12958                           i1l606:	
 12959  05BB                     	btfss	(532)^0200h,3	;volatile
 12960  05BB  1D94               	goto	u268_21
 12961  05BC  2DBE               	goto	u268_20
 12962  05BD  2DBF               u268_21:
 12963  05BE                     	goto	i1l610
 12964  05BE  2DD5               u268_20:
 12965  05BF                     	
 12966                           i1l4125:	
 12967  05BF                     	movlb 0	; select bank0
 12968  05BF  0020               	movf	((_wI2CTxSendPos)),w
 12969  05C0  0852               	btfss	status,2
 12970  05C1  1D03               	goto	u269_21
 12971  05C2  2DC4               	goto	u269_20
 12972  05C3  2DC5               u269_21:
 12973  05C4                     	goto	i1l610
 12974  05C4  2DD5               u269_20:
 12975  05C5                     	line	188
 12976                           	
 12977                           i1l4127:	
 12978  05C5                     ;I2C.c: 187:                 {;I2C.c: 188:                     wI2CCommandState = Proces
                                 singCommand;
 12979                           	clrf	(_wI2CCommandState)
 12980  05C5  01E3               	incf	(_wI2CCommandState),f
 12981  05C6  0AE3               	line	189
 12982                           	
 12983                           i1l4129:	
 12984  05C7                     ;I2C.c: 189:                     SSPBUF = wI2CTxBuffer[wI2CTxSendPos];
 12985                           	movf	(_wI2CTxSendPos),w
 12986  05C7  0852               	addlw	low(_wI2CTxBuffer|((0x1)<<8))&0ffh
 12987  05C8  3E48               	movwf	fsr1l
 12988  05C9  0086               	movlw 1	; select bank2/3
 12989  05CA  3001               	movwf fsr1h	
 12990  05CB  0087               	
 12991                           	movf	indf1,w
 12992  05CC  0801               	movlb 4	; select bank4
 12993  05CD  0024               	movwf	(529)^0200h	;volatile
 12994  05CE  0091               	line	190
 12995                           	
 12996                           i1l4131:	
 12997  05CF                     ;I2C.c: 190:                     wI2CTxSendPos++;
 12998                           	movlw	low(01h)
 12999  05CF  3001               	movwf	(??_I2C_Interrupt+0)+0
 13000  05D0  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 13001  05D1  0872               	movlb 0	; select bank0
 13002  05D2  0020               	addwf	(_wI2CTxSendPos),f
 13003  05D3  07D2               	line	191
 13004                           ;I2C.c: 191:                 }
 13005                           	goto	i1l4149
 13006  05D4  2E15               	line	192
 13007                           ;I2C.c: 192:                 else
 13008                           	
 13009                           i1l610:	
 13010  05D5                     	line	194
 13011                           ;I2C.c: 193:                 {;I2C.c: 194:                     if(SSPCON2bits.ACKSTAT ==
                                  0 && wI2CTxSendPos != 0)
 13012                           	movlb 4	; select bank4
 13013  05D5  0024               	btfsc	(534)^0200h,6	;volatile
 13014  05D6  1B16               	goto	u270_21
 13015  05D7  2DD9               	goto	u270_20
 13016  05D8  2DDA               u270_21:
 13017  05D9                     	goto	i1l612
 13018  05D9  2DFD               u270_20:
 13019  05DA                     	
 13020                           i1l4133:	
 13021  05DA                     	movlb 0	; select bank0
 13022  05DA  0020               	movf	((_wI2CTxSendPos)),w
 13023  05DB  0852               	btfsc	status,2
 13024  05DC  1903               	goto	u271_21
 13025  05DD  2DDF               	goto	u271_20
 13026  05DE  2DE0               u271_21:
 13027  05DF                     	goto	i1l612
 13028  05DF  2DFD               u271_20:
 13029  05E0                     	line	196
 13030                           	
 13031                           i1l4135:	
 13032  05E0                     ;I2C.c: 195:                     {;I2C.c: 196:                       if(wI2CTxSendPos < 
                                 wI2CTxNbOfByteToSend)
 13033                           	movf	(_wI2CTxNbOfByteToSend),w
 13034  05E0  0855               	subwf	(_wI2CTxSendPos),w
 13035  05E1  0252               	skipnc
 13036  05E2  1803               	goto	u272_21
 13037  05E3  2DE5               	goto	u272_20
 13038  05E4  2DE6               u272_21:
 13039  05E5                     	goto	i1l613
 13040  05E5  2DF4               u272_20:
 13041  05E6                     	line	198
 13042                           	
 13043                           i1l4137:	
 13044  05E6                     ;I2C.c: 197:                       {;I2C.c: 198:                         SSPBUF = wI2CTx
                                 Buffer[wI2CTxSendPos];
 13045                           	movf	(_wI2CTxSendPos),w
 13046  05E6  0852               	addlw	low(_wI2CTxBuffer|((0x1)<<8))&0ffh
 13047  05E7  3E48               	movwf	fsr1l
 13048  05E8  0086               	movlw 1	; select bank2/3
 13049  05E9  3001               	movwf fsr1h	
 13050  05EA  0087               	
 13051                           	movf	indf1,w
 13052  05EB  0801               	movlb 4	; select bank4
 13053  05EC  0024               	movwf	(529)^0200h	;volatile
 13054  05ED  0091               	line	199
 13055                           	
 13056                           i1l4139:	
 13057  05EE                     ;I2C.c: 199:                         wI2CTxSendPos++;
 13058                           	movlw	low(01h)
 13059  05EE  3001               	movwf	(??_I2C_Interrupt+0)+0
 13060  05EF  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 13061  05F0  0872               	movlb 0	; select bank0
 13062  05F1  0020               	addwf	(_wI2CTxSendPos),f
 13063  05F2  07D2               	line	200
 13064                           ;I2C.c: 200:                       }
 13065                           	goto	i1l4149
 13066  05F3  2E15               	line	201
 13067                           ;I2C.c: 201:                       else
 13068                           	
 13069                           i1l613:	
 13070  05F4                     	line	203
 13071                           ;I2C.c: 202:                       {;I2C.c: 203:                             SSPCON2bits
                                 .PEN = 1;
 13072                           	movlb 4	; select bank4
 13073  05F4  0024               	bsf	(534)^0200h,2	;volatile
 13074  05F5  1516               	line	204
 13075                           	
 13076                           i1l4141:	
 13077  05F6                     ;I2C.c: 204:                             wI2CCommandState = CommandWillComplet;
 13078                           	movlw	low(02h)
 13079  05F6  3002               	movwf	(??_I2C_Interrupt+0)+0
 13080  05F7  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 13081  05F8  0872               	movlb 0	; select bank0
 13082  05F9  0020               	movwf	(_wI2CCommandState)
 13083  05FA  00E3               	goto	i1l4149
 13084  05FB  2E15               	line	205
 13085                           ;I2C.c: 205:                       }
 13086                           	
 13087                           i1l614:	
 13088  05FC                     	line	206
 13089                           ;I2C.c: 206:                     }
 13090                           	goto	i1l4149
 13091  05FC  2E15               	line	207
 13092                           ;I2C.c: 207:                     else if(SSPCON2bits.ACKSTAT == 1)
 13093                           	
 13094                           i1l612:	
 13095  05FD                     	movlb 4	; select bank4
 13096  05FD  0024               	btfss	(534)^0200h,6	;volatile
 13097  05FE  1F16               	goto	u273_21
 13098  05FF  2E01               	goto	u273_20
 13099  0600  2E02               u273_21:
 13100  0601                     	goto	i1l4147
 13101  0601  2E0A               u273_20:
 13102  0602                     	line	209
 13103                           	
 13104                           i1l4143:	
 13105  0602                     ;I2C.c: 208:                     {;I2C.c: 209:                         SSPCON2bits.ACKST
                                 AT = 0;
 13106                           	bcf	(534)^0200h,6	;volatile
 13107  0602  1316               	line	210
 13108                           ;I2C.c: 210:                         SSPCON2bits.PEN = 1;
 13109                           	bsf	(534)^0200h,2	;volatile
 13110  0603  1516               	line	211
 13111                           	
 13112                           i1l4145:	
 13113  0604                     ;I2C.c: 211:                         wI2CCommandState = CommandWillFail;
 13114                           	movlw	low(04h)
 13115  0604  3004               	movwf	(??_I2C_Interrupt+0)+0
 13116  0605  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 13117  0606  0872               	movlb 0	; select bank0
 13118  0607  0020               	movwf	(_wI2CCommandState)
 13119  0608  00E3               	line	212
 13120                           ;I2C.c: 212:                     }
 13121                           	goto	i1l4149
 13122  0609  2E15               	line	213
 13123                           ;I2C.c: 213:                     else
 13124                           	
 13125                           i1l616:	
 13126  060A                     	line	215
 13127                           	
 13128                           i1l4147:	
 13129  060A                     ;I2C.c: 214:                     {;I2C.c: 215:                        oErrorCode = 3;
 13130                           	movlw	low(03h)
 13131  060A  3003               	movwf	(??_I2C_Interrupt+0)+0
 13132  060B  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 13133  060C  0872               	movwf	(I2C_Interrupt@oErrorCode)
 13134  060D  00F4               	goto	i1l4149
 13135  060E  2E15               	line	216
 13136                           ;I2C.c: 216:                     }
 13137                           	
 13138                           i1l617:	
 13139  060F                     	goto	i1l4149
 13140  060F  2E15               	
 13141                           i1l615:	
 13142  0610                     	goto	i1l4149
 13143  0610  2E15               	line	217
 13144                           ;I2C.c: 217:                 }
 13145                           	
 13146                           i1l611:	
 13147  0611                     	goto	i1l4149
 13148  0611  2E15               	
 13149                           i1l609:	
 13150  0612                     	goto	i1l4149
 13151  0612  2E15               	line	218
 13152                           ;I2C.c: 218:             }
 13153                           	
 13154                           i1l605:	
 13155  0613                     	goto	i1l4149
 13156  0613  2E15               	line	219
 13157                           ;I2C.c: 219:         }
 13158                           	
 13159                           i1l587:	
 13160  0614                     	goto	i1l4149
 13161  0614  2E15               	line	220
 13162                           ;I2C.c: 220:     }
 13163                           	
 13164                           i1l586:	
 13165  0615                     	line	221
 13166                           	
 13167                           i1l4149:	
 13168  0615                     ;I2C.c: 221:     if(PIR2bits.BCLIF == 1)
 13169                           	movlb 0	; select bank0
 13170  0615  0020               	btfss	(18),3	;volatile
 13171  0616  1D92               	goto	u274_21
 13172  0617  2E19               	goto	u274_20
 13173  0618  2E1A               u274_21:
 13174  0619                     	goto	i1l618
 13175  0619  2E1F               u274_20:
 13176  061A                     	line	223
 13177                           	
 13178                           i1l4151:	
 13179  061A                     ;I2C.c: 222:     {;I2C.c: 223:         PIR2bits.BCLIF = 0;
 13180                           	bcf	(18),3	;volatile
 13181  061A  1192               	line	224
 13182                           	
 13183                           i1l4153:	
 13184  061B                     ;I2C.c: 224:         oErrorCode = 2;
 13185                           	movlw	low(02h)
 13186  061B  3002               	movwf	(??_I2C_Interrupt+0)+0
 13187  061C  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 13188  061D  0872               	movwf	(I2C_Interrupt@oErrorCode)
 13189  061E  00F4               	line	225
 13190                           ;I2C.c: 225:     }
 13191                           	
 13192                           i1l618:	
 13193  061F                     	line	227
 13194                           ;I2C.c: 227:     return oErrorCode;
 13195                           	movf	(I2C_Interrupt@oErrorCode),w
 13196  061F  0874               	movwf	(??_I2C_Interrupt+0)+0
 13197  0620  00F2               	clrf	(??_I2C_Interrupt+0)+0+1
 13198  0621  01F3               	movf	0+(??_I2C_Interrupt+0)+0,w
 13199  0622  0872               	movwf	(?_I2C_Interrupt)
 13200  0623  00F0               	movf	1+(??_I2C_Interrupt+0)+0,w
 13201  0624  0873               	movwf	(?_I2C_Interrupt+1)
 13202  0625  00F1               	goto	i1l619
 13203  0626  2E27               	
 13204                           i1l4155:	
 13205  0627                     	line	228
 13206                           	
 13207                           i1l619:	
 13208  0627                     	return
 13209  0627  0008               	opt stack 0
 13210                           GLOBAL	__end_of_I2C_Interrupt
 13211                           	__end_of_I2C_Interrupt:
 13212  0628                     	signat	_I2C_Interrupt,90
 13213                           	global	_EUSARTInterrupt
 13214                           
 13215 ;; *************** function _EUSARTInterrupt *****************
 13216 ;; Defined at:
 13217 ;;		line 48 in file "EUSART.c"
 13218 ;; Parameters:    Size  Location     Type
 13219 ;;		None
 13220 ;; Auto vars:     Size  Location     Type
 13221 ;;		None
 13222 ;; Return value:  Size  Location     Type
 13223 ;;                  2    0[COMMON] int 
 13224 ;; Registers used:
 13225 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13226 ;; Tracked objects:
 13227 ;;		On entry : 0/0
 13228 ;;		On exit  : 0/0
 13229 ;;		Unchanged: 0/0
 13230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13234 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13235 ;;Total ram usage:        4 bytes
 13236 ;; Hardware stack levels used:    1
 13237 ;; This function calls:
 13238 ;;		Nothing
 13239 ;; This function is called by:
 13240 ;;		_myint
 13241 ;; This function uses a non-reentrant model
 13242 ;;
 13243                           psect	text45,local,class=CODE,delta=2,merge=1,group=0
 13244                           	file	"EUSART.c"
 13245                           	line	48
 13246                           global __ptext45
 13247                           __ptext45:	;psect for function _EUSARTInterrupt
 13248  0E02                     psect	text45
 13249                           	file	"EUSART.c"
 13250                           	line	48
 13251                           	global	__size_of_EUSARTInterrupt
 13252                           	__size_of_EUSARTInterrupt	equ	__end_of_EUSARTInterrupt-_EUSARTInterrupt
 13253  0063                     	
 13254                           _EUSARTInterrupt:	
 13255  0E02                     ;incstack = 0
 13256                           	opt	stack 8
 13257                           ; Regs used in _EUSARTInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 13258                           	line	50
 13259                           	
 13260                           i1l4157:	
 13261  0E02                     ;EUSART.c: 50:     if( PIR1bits.TXIF == 1 )
 13262                           	movlb 0	; select bank0
 13263  0E02  0020               	btfss	(17),4	;volatile
 13264  0E03  1E11               	goto	u275_21
 13265  0E04  2E06               	goto	u275_20
 13266  0E05  2E07               u275_21:
 13267  0E06                     	goto	i1l4169
 13268  0E06  2E21               u275_20:
 13269  0E07                     	line	52
 13270                           	
 13271                           i1l4159:	
 13272  0E07                     ;EUSART.c: 51:     {;EUSART.c: 52:       if(gTxReadingPosition < gTxTransmitSize)
 13273                           	movf	(_gTxTransmitSize),w
 13274  0E07  084E               	subwf	(_gTxReadingPosition),w
 13275  0E08  0250               	skipnc
 13276  0E09  1803               	goto	u276_21
 13277  0E0A  2E0C               	goto	u276_20
 13278  0E0B  2E0D               u276_21:
 13279  0E0C                     	goto	i1l4165
 13280  0E0C  2E1B               u276_20:
 13281  0E0D                     	line	54
 13282                           	
 13283                           i1l4161:	
 13284  0E0D                     ;EUSART.c: 53:       {;EUSART.c: 54:           TXREG = gEusartTXBuffer[gTxReadingPositio
                                 n];
 13285                           	movf	(_gTxReadingPosition),w
 13286  0E0D  0850               	addlw	low(_gEusartTXBuffer|((0x2)<<8))&0ffh
 13287  0E0E  3E20               	movwf	fsr1l
 13288  0E0F  0086               	movlw 2	; select bank4/5
 13289  0E10  3002               	movwf fsr1h	
 13290  0E11  0087               	
 13291                           	movf	indf1,w
 13292  0E12  0801               	movlb 3	; select bank3
 13293  0E13  0023               	movwf	(410)^0180h	;volatile
 13294  0E14  009A               	line	55
 13295                           	
 13296                           i1l4163:	
 13297  0E15                     ;EUSART.c: 55:           gTxReadingPosition++;
 13298                           	movlw	low(01h)
 13299  0E15  3001               	movwf	(??_EUSARTInterrupt+0)+0
 13300  0E16  00F2               	movf	(??_EUSARTInterrupt+0)+0,w
 13301  0E17  0872               	movlb 0	; select bank0
 13302  0E18  0020               	addwf	(_gTxReadingPosition),f
 13303  0E19  07D0               	line	56
 13304                           ;EUSART.c: 56:       }
 13305                           	goto	i1l4169
 13306  0E1A  2E21               	line	57
 13307                           ;EUSART.c: 57:       else
 13308                           	
 13309                           i1l902:	
 13310  0E1B                     	line	59
 13311                           	
 13312                           i1l4165:	
 13313  0E1B                     ;EUSART.c: 58:       {;EUSART.c: 59:            gTxReadingPosition = 0;
 13314                           	clrf	(_gTxReadingPosition)
 13315  0E1B  01D0               	line	60
 13316                           ;EUSART.c: 60:            gTxTransmitSize = 0;
 13317                           	clrf	(_gTxTransmitSize)
 13318  0E1C  01CE               	line	61
 13319                           	
 13320                           i1l4167:	
 13321  0E1D                     ;EUSART.c: 61:            PIE1bits.TXIE =0;
 13322                           	movlb 1	; select bank1
 13323  0E1D  0021               	bcf	(145)^080h,4	;volatile
 13324  0E1E  1211               	goto	i1l4169
 13325  0E1F  2E21               	line	62
 13326                           ;EUSART.c: 62:       }
 13327                           	
 13328                           i1l903:	
 13329  0E20                     	goto	i1l4169
 13330  0E20  2E21               	line	63
 13331                           ;EUSART.c: 63:     }
 13332                           	
 13333                           i1l901:	
 13334  0E21                     	line	64
 13335                           	
 13336                           i1l4169:	
 13337  0E21                     ;EUSART.c: 64:     if( PIR1bits.RCIF == 1)
 13338                           	movlb 0	; select bank0
 13339  0E21  0020               	btfss	(17),5	;volatile
 13340  0E22  1E91               	goto	u277_21
 13341  0E23  2E25               	goto	u277_20
 13342  0E24  2E26               u277_21:
 13343  0E25                     	goto	i1l4189
 13344  0E25  2E5C               u277_20:
 13345  0E26                     	line	66
 13346                           	
 13347                           i1l4171:	
 13348  0E26                     ;EUSART.c: 65:     {;EUSART.c: 66:         if(RCSTAbits.OERR == 1)
 13349                           	movlb 3	; select bank3
 13350  0E26  0023               	btfss	(413)^0180h,1	;volatile
 13351  0E27  1C9D               	goto	u278_21
 13352  0E28  2E2A               	goto	u278_20
 13353  0E29  2E2B               u278_21:
 13354  0E2A                     	goto	i1l4177
 13355  0E2A  2E34               u278_20:
 13356  0E2B                     	line	68
 13357                           	
 13358                           i1l4173:	
 13359  0E2B                     ;EUSART.c: 67:         {;EUSART.c: 68:           RCSTAbits.CREN = 0;
 13360                           	bcf	(413)^0180h,4	;volatile
 13361  0E2B  121D               	line	69
 13362                           ;EUSART.c: 69:           RCSTAbits.CREN = 1;
 13363                           	bsf	(413)^0180h,4	;volatile
 13364  0E2C  161D               	line	70
 13365                           	
 13366                           i1l4175:	
 13367  0E2D                     ;EUSART.c: 70:           gEUSARTError = gEUSARTError | 0x01;
 13368                           	movlb 0	; select bank0
 13369  0E2D  0020               	movf	(_gEUSARTError),w
 13370  0E2E  084F               	iorlw	01h
 13371  0E2F  3801               	movwf	(??_EUSARTInterrupt+0)+0
 13372  0E30  00F2               	movf	(??_EUSARTInterrupt+0)+0,w
 13373  0E31  0872               	movwf	(_gEUSARTError)
 13374  0E32  00CF               	goto	i1l4177
 13375  0E33  2E34               	line	71
 13376                           ;EUSART.c: 71:         }
 13377                           	
 13378                           i1l905:	
 13379  0E34                     	line	72
 13380                           	
 13381                           i1l4177:	
 13382  0E34                     ;EUSART.c: 72:         if(RCSTAbits.FERR == 1)
 13383                           	movlb 3	; select bank3
 13384  0E34  0023               	btfss	(413)^0180h,2	;volatile
 13385  0E35  1D1D               	goto	u279_21
 13386  0E36  2E38               	goto	u279_20
 13387  0E37  2E39               u279_21:
 13388  0E38                     	goto	i1l4181
 13389  0E38  2E40               u279_20:
 13390  0E39                     	line	74
 13391                           	
 13392                           i1l4179:	
 13393  0E39                     ;EUSART.c: 73:         {;EUSART.c: 74:             gEUSARTError = gEUSARTError | 0x02;
 13394                           	movlb 0	; select bank0
 13395  0E39  0020               	movf	(_gEUSARTError),w
 13396  0E3A  084F               	iorlw	02h
 13397  0E3B  3802               	movwf	(??_EUSARTInterrupt+0)+0
 13398  0E3C  00F2               	movf	(??_EUSARTInterrupt+0)+0,w
 13399  0E3D  0872               	movwf	(_gEUSARTError)
 13400  0E3E  00CF               	goto	i1l4181
 13401  0E3F  2E40               	line	75
 13402                           ;EUSART.c: 75:         }
 13403                           	
 13404                           i1l906:	
 13405  0E40                     	line	76
 13406                           	
 13407                           i1l4181:	
 13408  0E40                     ;EUSART.c: 76:         gEusartRXBuffer[gEusartRXBufferWritePtr] = RCREG;
 13409                           	movlb 0	; select bank0
 13410  0E40  0020               	movf	(_gEusartRXBufferWritePtr),w
 13411  0E41  0851               	addlw	low 9000
 13412  0E42  3E28               	movwf	(??_EUSARTInterrupt+0)+0
 13413  0E43  00F2               	clrf	((??_EUSARTInterrupt+0)+0)+1
 13414  0E44  01F3               	movlw	high 9000
 13415  0E45  3023               	addwfc	((??_EUSARTInterrupt+0)+0)+1,f
 13416  0E46  3DF3               	movf	0+(??_EUSARTInterrupt+0)+0,w
 13417  0E47  0872               	movwf	fsr1l
 13418  0E48  0086               	movf	1+(??_EUSARTInterrupt+0)+0,w
 13419  0E49  0873               	movwf	fsr1h
 13420  0E4A  0087               	movlb 3	; select bank3
 13421  0E4B  0023               	movf	(409)^0180h,w	;volatile
 13422  0E4C  0819               	movwf	indf1
 13423  0E4D  0081               	line	77
 13424                           	
 13425                           i1l4183:	
 13426  0E4E                     ;EUSART.c: 77:         gEusartRXBufferWritePtr++;
 13427                           	movlw	low(01h)
 13428  0E4E  3001               	movwf	(??_EUSARTInterrupt+0)+0
 13429  0E4F  00F2               	movf	(??_EUSARTInterrupt+0)+0,w
 13430  0E50  0872               	movlb 0	; select bank0
 13431  0E51  0020               	addwf	(_gEusartRXBufferWritePtr),f
 13432  0E52  07D1               	line	79
 13433                           	
 13434                           i1l4185:	
 13435  0E53                     ;EUSART.c: 79:         if(gEusartRXBufferWritePtr > sizeof(gEusartRXBuffer))
 13436                           	movlw	low(0C9h)
 13437  0E53  30C9               	subwf	(_gEusartRXBufferWritePtr),w
 13438  0E54  0251               	skipc
 13439  0E55  1C03               	goto	u280_21
 13440  0E56  2E58               	goto	u280_20
 13441  0E57  2E59               u280_21:
 13442  0E58                     	goto	i1l4189
 13443  0E58  2E5C               u280_20:
 13444  0E59                     	line	81
 13445                           	
 13446                           i1l4187:	
 13447  0E59                     ;EUSART.c: 80:         {;EUSART.c: 81:           gEusartRXBufferWritePtr = 0;
 13448                           	clrf	(_gEusartRXBufferWritePtr)
 13449  0E59  01D1               	goto	i1l4189
 13450  0E5A  2E5C               	line	82
 13451                           ;EUSART.c: 82:         }
 13452                           	
 13453                           i1l907:	
 13454  0E5B                     	goto	i1l4189
 13455  0E5B  2E5C               	line	84
 13456                           ;EUSART.c: 84:     }
 13457                           	
 13458                           i1l904:	
 13459  0E5C                     	line	85
 13460                           	
 13461                           i1l4189:	
 13462  0E5C                     ;EUSART.c: 85:     return gEUSARTError;
 13463                           	movf	(_gEUSARTError),w
 13464  0E5C  084F               	movwf	(??_EUSARTInterrupt+0)+0
 13465  0E5D  00F2               	clrf	(??_EUSARTInterrupt+0)+0+1
 13466  0E5E  01F3               	movf	0+(??_EUSARTInterrupt+0)+0,w
 13467  0E5F  0872               	movwf	(?_EUSARTInterrupt)
 13468  0E60  00F0               	movf	1+(??_EUSARTInterrupt+0)+0,w
 13469  0E61  0873               	movwf	(?_EUSARTInterrupt+1)
 13470  0E62  00F1               	goto	i1l908
 13471  0E63  2E64               	
 13472                           i1l4191:	
 13473  0E64                     	line	86
 13474                           	
 13475                           i1l908:	
 13476  0E64                     	return
 13477  0E64  0008               	opt stack 0
 13478                           GLOBAL	__end_of_EUSARTInterrupt
 13479                           	__end_of_EUSARTInterrupt:
 13480  0E65                     	signat	_EUSARTInterrupt,90
 13481                           global	___latbits
 13482                           ___latbits	equ	3
 13483  0003                     	global	btemp
 13484                           	btemp set 07Eh
 13485  007E                     
 13486                           	DABS	1,126,2	;btemp
 13487                           	global	int$flags
 13488                           	int$flags	set btemp
 13489  007E                     	global	wtemp0
 13490                           	wtemp0 set btemp+0
 13491  007E                     global __pbssBIGRAM
 13492                           __pbssBIGRAM	equ	9000
 13493  2328                     	end


Data Sizes:
    Strings     354
    Constant    0
    Data        16
    BSS         253
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     37      68
    BANK1            80     15      48
    BANK2            80      0      60
    BANK3            80      0      75
    BANK4            80      0      70
    BANK5            80     46      46
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10            8      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_28(CODE[9]), STR_27(CODE[7]), Esp8266SetNetworkParameters@wCommand(BANK0[70]), STR_15(CODE[17]), 
		 -> Esp8266OpenSocketCommand@wCommand(BANK0[70]), STR_9(CODE[9]), STR_8(CODE[12]), main@wReadout(BANK5[20]), 
		 -> wInterruptText(BANK3[75]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_28(CODE[9]), STR_27(CODE[7]), Esp8266SetNetworkParameters@wCommand(BANK0[70]), STR_15(CODE[17]), 
		 -> Esp8266OpenSocketCommand@wCommand(BANK0[70]), STR_9(CODE[9]), STR_8(CODE[12]), main@wReadout(BANK5[20]), 
		 -> wInterruptText(BANK3[75]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 75
		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wCommand(BANK0[70]), wInterruptText(BANK3[75]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 75
		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wCommand(BANK0[70]), wInterruptText(BANK3[75]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_31(CODE[14]), STR_30(CODE[4]), STR_28(CODE[9]), STR_27(CODE[7]), 
		 -> STR_20(CODE[5]), STR_19(CODE[5]), Esp8266SetNetworkParameters@wNumber(COMMON[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[4]), STR_16(CODE[11]), STR_14(CODE[3]), Esp8266OpenSocketCommand@wPort(COMMON[7]), 
		 -> STR_13(CODE[3]), STR_12(CODE[4]), STR_11(CODE[14]), NULL(NULL[0]), 
		 -> STR_9(CODE[9]), STR_8(CODE[12]), main@wReadout(BANK5[20]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_31(CODE[14]), STR_30(CODE[4]), STR_28(CODE[9]), STR_27(CODE[7]), 
		 -> STR_20(CODE[5]), STR_19(CODE[5]), Esp8266SetNetworkParameters@wNumber(COMMON[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[4]), STR_16(CODE[11]), STR_14(CODE[3]), Esp8266OpenSocketCommand@wPort(COMMON[7]), 
		 -> STR_13(CODE[3]), STR_12(CODE[4]), STR_11(CODE[14]), NULL(NULL[0]), 
		 -> STR_9(CODE[9]), STR_8(CODE[12]), main@wReadout(BANK5[20]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_31(CODE[14]), STR_30(CODE[4]), STR_28(CODE[9]), STR_27(CODE[7]), 
		 -> STR_20(CODE[5]), STR_19(CODE[5]), Esp8266SetNetworkParameters@wNumber(COMMON[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[4]), STR_14(CODE[3]), Esp8266OpenSocketCommand@wPort(COMMON[7]), STR_13(CODE[3]), 
		 -> STR_12(CODE[4]), NULL(NULL[0]), STR_9(CODE[9]), STR_8(CODE[12]), 
		 -> main@wReadout(BANK5[20]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 75
		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wCommand(BANK0[70]), wInterruptText(BANK3[75]), 

    memset@dest	PTR void  size(1) Largest target is 75
		 -> wI2CRxBuffer(BANK2[20]), wI2CTxBuffer(BANK2[20]), wInterruptText(BANK3[75]), 

    memset@s	PTR unsigned char  size(1) Largest target is 75
		 -> wI2CRxBuffer(BANK2[20]), wI2CTxBuffer(BANK2[20]), wInterruptText(BANK3[75]), 

    memcpy@d1	PTR void  size(2) Largest target is 70
		 -> gEusartTXBuffer(BANK4[70]), wI2CTxBuffer(BANK2[20]), EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 70
		 -> gEusartTXBuffer(BANK4[70]), wI2CTxBuffer(BANK2[20]), EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 70
		 -> STR_26(CODE[14]), STR_24(CODE[6]), STR_22(CODE[13]), Esp8266SetNetworkParameters@wCommand(BANK0[70]), 
		 -> Esp8266OpenSocketCommand@wCommand(BANK0[70]), wI2CRxBuffer(BANK2[20]), EM1812EntryPoint@SetGetTempCommand(BANK1[4]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_26(CODE[14]), STR_24(CODE[6]), STR_22(CODE[13]), Esp8266SetNetworkParameters@wCommand(BANK0[70]), 
		 -> Esp8266OpenSocketCommand@wCommand(BANK0[70]), wI2CRxBuffer(BANK2[20]), EM1812EntryPoint@SetGetTempCommand(BANK1[4]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 75
		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wCommand(BANK0[70]), wInterruptText(BANK3[75]), 

    sp__EusartGetRxBuffer	PTR unsigned char  size(2) Largest target is 200
		 -> gEusartRXBuffer(BIGRAM[200]), 

    gEspRxBufferPtr	PTR unsigned char  size(2) Largest target is 200
		 -> gEusartRXBuffer(BIGRAM[200]), NULL(NULL[0]), 

    sp__uint16_tToa	PTR unsigned char  size(1) Largest target is 7
		 -> Esp8266OpenSocketCommand@wPort(COMMON[7]), NULL(NULL[0]), 

    sp__uint8_tToa	PTR unsigned char  size(1) Largest target is 4
		 -> Esp8266Entrypoint@wReturnNumber(COMMON[4]), NULL(NULL[0]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 75
		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wCommand(BANK0[70]), wInterruptText(BANK3[75]), 

    AddTrace@iText	PTR unsigned char  size(2) Largest target is 20
		 -> STR_9(CODE[9]), STR_8(CODE[12]), main@wReadout(BANK5[20]), 

    AddTrace@oText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    GetNewReceivedData@oData	PTR unsigned char  size(1) Largest target is 8
		 -> EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 

    sp__memcpy	PTR void  size(2) Largest target is 70
		 -> gEusartTXBuffer(BANK4[70]), wI2CTxBuffer(BANK2[20]), EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 

    I2C_SendData@iData	PTR unsigned char  size(1) Largest target is 4
		 -> EM1812EntryPoint@SetGetTempCommand(BANK1[4]), 

    EM1812EntryPoint@oTemperature	PTR short  size(1) Largest target is 2
		 -> wTemperature(BANK1[2]), 

    EM1812EntryPoint@oHumidity	PTR short  size(1) Largest target is 2
		 -> wHumidity(BANK1[2]), 

    printEM1812@oTextOut	PTR unsigned char  size(1) Largest target is 20
		 -> main@wReadout(BANK5[20]), 

    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
		 -> Esp8266Entrypoint@wText(COMMON[3]), Esp8266Entrypoint@wReturnNumber(COMMON[4]), STR_39(CODE[4]), STR_36(CODE[10]), 
		 -> STR_34(CODE[4]), STR_10(CODE[14]), NULL(NULL[0]), myint@wText(BANK0[3]), 
		 -> STR_7(CODE[16]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[16]), main@wReadout(BANK5[20]), STR_2(CODE[17]), STR_1(CODE[16]), 
		 -> wInterruptText(BANK3[75]), 

    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
		 -> main@wEnterBottonPressed(BANK5[1]), main@wDownBottonPressed(BANK5[1]), main@wUpBottonPressed(BANK5[1]), 

    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
		 -> main@wDebounceDown(BANK5[2]), main@wDebounceUp(BANK5[2]), main@wDebounceEnter(BANK5[2]), 

    sp__memset	PTR void  size(1) Largest target is 75
		 -> wI2CRxBuffer(BANK2[20]), wI2CTxBuffer(BANK2[20]), wInterruptText(BANK3[75]), 

    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myint in COMMON

    _myint->i1_lcdWriteText
    i1_lcdWriteText->i1_writeTxtChk
    i1_writeTxtChk->i1_setCursorPosition
    i1_setCursorPosition->i1_waitLCDBusy

Critical Paths under _main in BANK0

    _main->_AddTrace
    _setNotBlinkingCursor->_writeInsChk
    _setCursorOff->_writeInsChk
    _printEM1812->___awdiv
    _powerOnLcd->_writeInsChk
    _moveCursorToHome->_writeInsChk
    _initLCD->_writeInsChk
    _clearDisplay->_writeInsChk
    _writeInsChk->_writeInsNoChk
    _writeInsNoChk->_setData
    _PrintLog->_lcdWriteText
    _lcdWriteText->_writeTxtChk
    _writeTxtChk->_setCursorPosition
    _setCursorPosition->_waitLCDBusy
    _EM1812EntryPoint->_I2C_SendData
    _I2C_SendData->_memcpy
    _GetNewReceivedData->_memcpy
    _AddTrace->_strcat
    _strcat->_strcpy
    _strcpy->_strlen

Critical Paths under _myint in BANK0

    _myint->i1_lcdWriteText

Critical Paths under _main in BANK1

    _main->_EM1812EntryPoint

Critical Paths under _myint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myint in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myint in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myint in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myint in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myint in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myint in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0   30994
                                             13 BANK1      2     2      0
                                              0 BANK5     46    46      0
                           _AddTrace
                           _Debounce
                   _EM1812EntryPoint
                  _Esp8266OpenSocket
          _Esp8266SetAccessPointMode
                   _Esp8266SetupWifi
                           _PrintLog
                       _clearDisplay
                            _initLCD
                       _lcdWriteText
                             _memset
                   _moveCursorToHome
                         _powerOnLcd
                        _printEM1812
                       _setCursorOff
                  _setCursorPosition
               _setNotBlinkingCursor
 ---------------------------------------------------------------------------------
 (1) _setNotBlinkingCursor                                 1     1      0     254
                                             18 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _setCursorOff                                         1     1      0     254
                                             18 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _printEM1812                                         10     7      3    4184
                                             21 BANK0     10     7      3
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1333
                                             12 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1345
                                             12 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _powerOnLcd                                           1     1      0     254
                                             18 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _moveCursorToHome                                     0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     632
                                             18 BANK0      1     1      0
                       _clearDisplay
                            _setData
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _clearDisplay                                         0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _writeInsChk                                          1     1      0     254
                                             17 BANK0      1     1      0
                        _waitLCDBusy
                      _writeInsNoChk
 ---------------------------------------------------------------------------------
 (3) _writeInsNoChk                                        2     2      0     186
                                             15 BANK0      2     2      0
                 _SetToSendDataToLCD
                            _setData
 ---------------------------------------------------------------------------------
 (1) _PrintLog                                             4     4      0    6882
                                             30 BANK0      4     4      0
                       _lcdWriteText
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _memset                                              10     6      4    1881
                                             12 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _lcdWriteText                                         6     4      2    3867
                                             24 BANK0      6     4      2
                        _writeTxtChk
 ---------------------------------------------------------------------------------
 (2) _writeTxtChk                                          3     3      0    2242
                                             21 BANK0      3     3      0
                 _SetToSendDataToLCD
                  _setCursorPosition
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (1) _setCursorPosition                                    5     4      1    1957
                                             16 BANK0      5     4      1
                 _SetToSendDataToLCD
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (3) _waitLCDBusy                                          4     4      0      37
                                             12 BANK0      4     4      0
               _SetToReadDataFromLCD
 ---------------------------------------------------------------------------------
 (4) _SetToReadDataFromLCD                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setData                                              3     3      0     124
                                             12 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _SetToSendDataToLCD                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Esp8266SetupWifi                                     1     1      0       0
                                             12 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Esp8266SetAccessPointMode                            1     1      0       0
                                             12 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Esp8266OpenSocket                                    1     1      0       0
                                             12 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EM1812EntryPoint                                    20    18      2    3024
                                             29 BANK0      7     5      2
                                              0 BANK1     13    13      0
                       _GetI2CStatus
                 _GetNewReceivedData
                        _I2C_GetData
                       _I2C_SendData
 ---------------------------------------------------------------------------------
 (2) _I2C_SendData                                         5     3      2    1118
                                             24 BANK0      5     3      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _I2C_GetData                                          4     2      2     183
                                             12 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _GetNewReceivedData                                   4     3      1    1056
                                             24 BANK0      4     3      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              12     6      6     868
                                             12 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) _GetI2CStatus                                         4     2      2       0
                                             12 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Debounce                                             5     3      2     788
                                             12 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _AddTrace                                            10     7      3    5346
                                             34 BANK0      3     0      3
                                              0 BANK1      7     7      0
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     0      4    3387
                                             30 BANK0      4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     940
                                             12 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                              12     8      4     527
                                             18 BANK0     12     8      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _myint                                                8     8      0    1467
                                              4 BANK0      8     8      0
                    _EUSARTInterrupt
                      _I2C_Interrupt
                  _TempUpdateRequest
                     i1_lcdWriteText
 ---------------------------------------------------------------------------------
 (8) i1_lcdWriteText                                       6     4      2    1247
                                             12 COMMON     2     0      2
                                              0 BANK0      4     4      0
                      i1_writeTxtChk
 ---------------------------------------------------------------------------------
 (9) i1_writeTxtChk                                        3     3      0    1082
                                              9 COMMON     3     3      0
               i1_SetToSendDataToLCD
                i1_setCursorPosition
                          i1_setData
                      i1_waitLCDBusy
 ---------------------------------------------------------------------------------
 (10) i1_setCursorPosition                                 5     4      1     797
                                              4 COMMON     5     4      1
               i1_SetToSendDataToLCD
                          i1_setData
                      i1_waitLCDBusy
 ---------------------------------------------------------------------------------
 (10) i1_waitLCDBusy                                       4     4      0      37
                                              0 COMMON     4     4      0
             i1_SetToReadDataFromLCD
 ---------------------------------------------------------------------------------
 (11) i1_SetToReadDataFromLCD                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_setData                                           3     3      0     124
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (11) i1_SetToSendDataToLCD                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TempUpdateRequest                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_Interrupt                                        5     3      2      26
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (8) _EUSARTInterrupt                                      4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AddTrace
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _Debounce
   _EM1812EntryPoint
     _GetI2CStatus
     _GetNewReceivedData
       _memcpy
     _I2C_GetData
     _I2C_SendData
       _memcpy
   _Esp8266OpenSocket
   _Esp8266SetAccessPointMode
   _Esp8266SetupWifi
   _PrintLog
     _lcdWriteText
       _writeTxtChk
         _SetToSendDataToLCD
         _setCursorPosition
           _SetToSendDataToLCD
           _setData
           _waitLCDBusy
             _SetToReadDataFromLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
     _memset
     _strlen
   _clearDisplay
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _initLCD
     _clearDisplay
       _writeInsChk
         _waitLCDBusy
           _SetToReadDataFromLCD
         _writeInsNoChk
           _SetToSendDataToLCD
           _setData
     _setData
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _lcdWriteText
     _writeTxtChk
       _SetToSendDataToLCD
       _setCursorPosition
         _SetToSendDataToLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
       _setData
       _waitLCDBusy
         _SetToReadDataFromLCD
   _memset
   _moveCursorToHome
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _powerOnLcd
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _printEM1812
     ___awdiv
     ___awmod
   _setCursorOff
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _setCursorPosition
     _SetToSendDataToLCD
     _setData
     _waitLCDBusy
       _SetToReadDataFromLCD
   _setNotBlinkingCursor
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData

 _myint (ROOT)
   _EUSARTInterrupt
   _I2C_Interrupt
   _TempUpdateRequest
   i1_lcdWriteText
     i1_writeTxtChk
       i1_SetToSendDataToLCD
       i1_setCursorPosition
         i1_SetToSendDataToLCD
         i1_setData
         i1_waitLCDBusy
           i1_SetToReadDataFromLCD
       i1_setData
       i1_waitLCDBusy
         i1_SetToReadDataFromLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     25      44       5       85.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      F      30       7       60.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3C       9       75.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4B      11       93.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      46      13       87.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50     2E      2E      15       57.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     17D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10               8      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     17D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Apr 15 21:55:44 2019

                                        pc 0002                                __CFG_CP$OFF 0000  
                              _SSPSTATbits 0214                               ___awdiv@sign 0032  
                       _SetToSendDataToLCD 0924                       __size_of_I2C_GetData 0036  
                                      l200 0377                                        l201 0378  
                                      l202 03B5                                        l203 03AE  
                                      l204 03B4                                        l205 03C4  
                                      l310 0FA6                                        l150 0B2A  
                                      l206 03CE                                        l303 0C07  
                                      l311 0F90                                        l151 0B2A  
                                      l207 03CF                                        l320 0FBE  
                                      l312 0FA5                                        l208 03D0  
                                      l321 0FC7                                        l313 0F9D  
                                      l209 03D0                                        l154 0CA7  
                                      l330 092F                                        l314 0FA4  
                                      l306 0F6B                                        l155 0CAF  
                                      l315 0FC9                                        l307 0FFF  
                                      l156 0CC4                                        l316 0FA9  
                                      l308 0FA8                                        l324 0971  
                                      l180 01DD                                        l157 0CE1  
                                      l333 0929                                        l317 0FE0  
                                      l309 0F83                                        l181 01EC  
                                      l173 018F                                        l158 0CE1  
                                      l318 0FB0                                        l262 0EC8  
                                      l190 0338                                        l174 0252  
                                      l182 0214                                        l319 0FB7  
                                      l327 09E7                                        l351 0992  
                                      l191 035D                                        l175 0233  
                                      l183 0223                                        l336 0ACD  
                                      l192 0339                                        l184 02F1  
                                      l176 0197                                        l337 0AB8  
                                      l265 0AEE                                        l345 097C  
                                      l193 0341                                        l185 02F0  
                                      l177 0251                                        l338 0AD5  
                                      l266 0AD9                                        l354 0987  
                                      l194 0342                                        l178 01A6  
                                      l339 0AD5                                        l267 0AFF  
                                      l195 0393                                        l187 027B  
                                      l179 01CE                                        l268 0AFF  
                                      l196 037D                                        l188 035E  
                                      l381 0952                                        l197 036E  
                                      l189 0349                                        l390 0D6E  
                                      l446 0637                                        l198 0392  
                                      l391 0D9F                                        l447 0690  
                                      l199 036F                                        l472 04EC  
                                      l480 042B                                        l384 0D70  
                                      l448 06A6                                        l481 0451  
                                      l473 03EC                                        l385 0D44  
                                      l449 06DD                                        l642 0C95  
                                      l570 0C17                                        l490 04A4  
                                      l482 0450                                        l474 0402  
                                      l386 0D86                                        l378 0917  
                                      l643 0C95                                        l571 0C35  
                                      l475 04FE                                        l491 04AD  
                                      l483 044F                                        l387 0D4D  
                                      l572 0C39                                        l492 04D0  
                                      l484 0452                                        l476 0403  
                                      l388 0D58                                        l565 095C  
                                      l573 0C4C                                        l493 04DA  
                                      l485 045E                                        l477 040F  
                                      l389 0D63                                        l582 0A0A  
                                      l494 0501                                        l486 045F  
                                      l478 0410                                        l583 0A0A  
                                      l495 04E7                                        l487 046C  
                                      l479 042C                                        l576 0B8C  
                                      l568 0C49                                        l496 04E9  
                                      l488 04E6                                        l497 04EA  
                                      l489 04E5                                        l578 0B69  
                                      l579 0B8F                                        l772 094A  
                                      l775 093C                                        l769 0943  
                    _wReceptionCounterPrev 0056                               ___awmod@sign 0032  
                             __CFG_BORV$LO 0000                                        wreg 0009  
                      ?_SetToSendDataToLCD 0070         I2C_GetData@iRxNumberOfByteExpected 002C  
                                     S6945 0800                  EM1812EntryPoint@oHumidity 00C3  
                             __CFG_LVP$OFF 0000                             ??_lcdWriteText 003A  
                           myint@wI2CError 002A                                       l1070 07B9  
                                     l1071 07C8                                       l1072 07C9  
                                     l1080 0CFA                                       l1073 07DE  
                                     l1081 0D2F                                       l1074 07EA  
                                     l1066 07A0                                       l1082 0D0D  
                                     l1075 07F6                                       l1067 07AE  
                                     l1083 0D03                                       l1076 07FB  
                                     l1068 07EB                                       l1084 0D12  
                                     l1069 07C3                                       l1085 0D13  
                                     l1086 0D22                                       l1087 0D2E  
                                     l1079 0CF0                                       l1360 0B59  
                                     l1088 0D3A                                       l1089 0D3F  
                                     l1370 0791                                       l1363 06EC  
                                     l1380 0A8D                                       l1364 0791  
                                     l1381 0A8C                                       l1357 0B4C  
                                     l1365 070B                                       l1382 0AAB  
                                     l1358 0B35                                       l1366 073F  
                                     l1383 0AAB                                       l1359 0B59  
                                     l1367 075F                                       l1368 078A  
                                     l1377 09CF                                       l1369 0779  
                                     l1386 0A16                                       l1387 0A11  
                                     l1388 0A20                                       l1389 0A2E  
                                     l6001 0946                                       l5301 0BCF  
                                     l5303 0C01                                       l5311 0AAC  
                                     l5401 0A16                                       l5305 0C03  
                                     l5321 0AC5                                       l5313 0AAF  
                                     l6201 0106                                       l5403 0A20  
                                     l5307 0C05                                       l5323 0AC9  
                                     l5315 0AB2                                       l5331 0D44  
                                     l5411 0F6A                                       l6211 0110  
                                     l6203 0109                                       l5405 0A2E  
                                     l5309 0924                                       l5325 0ACB  
                                     l5317 0ABB                                       l5333 0D4D  
                                     l5341 0D70                                       l5421 0F77  
                                     l5413 0F6B                                       l6301 02EB  
                                     l6221 0131                                       l6213 0113  
                                     l6205 010B                                       l5319 0AC4  
                                     l5351 0D8F                                       l5335 0D58  
                                     l5343 0D86                                       l5431 0F97  
                                     l5423 0F7D                                       l5415 0F6E  
                                     l5407 0969                                       l6311 032A  
                                     l6303 02F1                                       l6231 0152  
                                     l6223 0134                                       l6215 0116  
                                     l6207 010C                                       l6151 00DC  
                                     l6143 00C4                                       l5601 0C4C  
                                     l5353 0D9A                                       l5345 0D89  
                                     l5337 0D63                                       l5329 0D42  
                                     l5441 0FB7                                       l5433 0F9D  
                                     l5425 0F83                                       l5417 0F70  
                                     l5409 0F63                                       l5521 0AE8  
                                     l5361 09D5                                       l6321 0342  
                                     l6313 0330                                       l6305 02F6  
                                     l6241 0176                                       l6233 015E  
                                     l6225 0140                                       l6217 0122  
                                     l6209 010E                                       l6161 00E2  
                                     l6153 00DD                                       l6145 00CB  
                                     l5603 0953                                       l5611 0B69  
                                     l5347 0D8C                                       l5339 0D6F  
                                     l5443 0FBE                                       l5451 0FE0  
                                     l5435 0FA7                                       l5427 0F8A  
                                     l5419 0F71                                       l5523 0AEE  
                                     l5531 06EC                                       l5363 09D7  
                                     l6331 0366                                       l6323 0348  
                                     l6315 0333                                       l6307 0307  
                                     l6251 0197                                       l6243 0179  
                                     l6235 0161                                       l6227 0143  
                                     l6219 0125                                       l6171 00EB  
                                     l6163 00E3                                       l6155 00DF  
                                     l6147 00D7                                       l5605 095C  
                                     l5621 0B7D                                       l5613 0B6F  
                                     l5349 0D8E                                       l5461 0FF3  
                                     l5453 0FE3                                       l5445 0FC4  
                                     l5437 0FA9                                       l5429 0F90  
                                     l5517 0AD6                                       l5541 0713  
                                     l5533 06F4                                       l5525 06E0  
                                     l5365 09D8                                       l5701 0CED  
                                     l6341 037C                                       l6333 0367  
                                     l6325 0349                                       l6317 0336  
                                     l6309 0318                                       l6261 01DD  
                                     l6253 01A6                                       l6245 0181  
                                     l6237 0171                                       l6229 014F  
                                     l6181 00F4                                       l6173 00ED  
                                     l6165 00E5                                       l6157 00E0  
                                     l6149 00DA                                       l5471 0B2B  
                                     l5631 0B8B                                       l5623 0B7F  
                                     l5615 0B74                                       l5607 0B5C  
                                     l5463 0FF8                                       l5455 0FE6  
                                     l5447 0FC8                                       l5439 0FB0  
                                     l5519 0AD9                                       l5551 073F  
                                     l5543 071C                                       l5535 0700  
                                     l5527 06E4                                       l5367 09E2  
                                     l5359 09D2                                       l5711 0D03  
                                     l5703 0CF0                                       l6351 039C  
                                     l6343 037D                                       l6335 036A  
                                     l6319 0339                                       l6327 035E  
                                     l6271 0223                                       l6263 01EC  
                                     l6255 01B4                                       l6247 018F  
                                     l6239 0173                                       l6191 00FD  
                                     l6183 00F5                                       l6175 00EF  
                                     l6167 00E7                                       l6159 00E1  
                                     l5473 0B35                                       l5481 0B4C  
                                     l5641 09F5                                       l5625 0B81  
                                     l5617 0B7B                                       l5633 0B8C  
                                     l5609 0B62                                       l5297 092A  
                                     l5465 0FFA                                       l5457 0FE8  
                                     l5449 0FC9                                       l5561 0774  
                                     l5553 0754                                       l5545 0728  
                                     l5537 070A                                       l5529 06EB  
                                     l5801 0B1A                                       l5721 0D22  
                                     l5713 0D08                                       l5705 0CF4  
                                     l6361 03B1                                       l6353 03A1  
                                     l6337 036F                                       l6329 0364  
                                     l6345 0393                                       l6281 025E  
                                     l6273 0232                                       l6265 01FA  
                                     l6257 01C5                                       l6249 0195  
                                     l6193 00FE                                       l6185 00F6  
                                     l6177 00F1                                       l6169 00E9  
                                     l5483 0A82                                       l5811 0CBD  
                                     l5803 0C98                                       l5475 0B3D  
                                     l5643 09F6                                       l5635 0B8F  
                                     l5627 0B83                                       l5619 0B7C  
                                     l5299 0BCE                                       l5459 0FE9  
                                     l5563 0779                                       l5555 075E  
                                     l5547 0734                                       l5539 070B  
                                     l5571 0913                                       l5651 0792  
                                     l5731 0D3F                                       l5723 0D27  
                                     l5715 0D0D                                       l5707 0CFA  
                                     l6371 03CA                                       l6355 03A3  
                                     l6347 0399                                       l6363 03B5  
                                     l6339 0378                                       l6291 02A2  
                                     l6283 026C                                       l6267 020B  
                                     l6259 01CE                                       l6275 0233  
                                     l6195 00FF                                       l6187 00F8  
                                     l6179 00F2                                       l5485 0A8D  
                                     l5397 0A0B                                       l5813 0CC4  
                                     l5805 0C9D                                       l5477 0B41  
                                     l5645 0A09                                       l5637 09EA  
                                     l5629 0B85                                       l5581 0C2F  
                                     l5573 0C0A                                       l5901 03FB  
                                     l5565 0781                                       l5557 075F  
                                     l5549 073E                                       l5821 0E81  
                                     l5661 07A4                                       l5653 0794  
                                     l5717 0D13                                       l5709 0D00  
                                     l5725 0D2F                                       l6373 03CC  
                                     l6365 03BB                                       l6357 03AA  
                                     l6349 039B                                       l6293 02B0  
                                     l6285 027B                                       l6269 0214  
                                     l6277 0252                                       l6197 0101  
                                     l6189 00FC                                       l5399 0A11  
                                     l5647 09B8                                       l5815 0CD2  
                                     l5807 0CA7                                       l5479 0B47  
                                     l5639 09EF                                       l5591 0C3C  
                                     l5583 0C35                                       l5575 0C10  
                                     l5911 040D                                       l5903 03FE  
                                     l5567 0785                                       l5559 0770  
                                     l5831 0EA5                                       l5823 0E89  
                                     l5671 07B9                                       l5663 07A9  
                                     l5655 0798                                       l5727 0D34  
                                     l5719 0D1D                                       l6367 03BD  
                                     l6359 03AE                                       l6295 02BE  
                                     l6287 028B                                       l6279 025D  
                                     l6199 0103                                       l5649 09CF  
                                     l5817 0CDA                                       l5809 0CAF  
                                     l5593 0C40                                       l5585 0C38  
                                     l5577 0C17                                       l5921 0426  
                                     l5913 0410                                       l5905 0400  
                                     l5569 078A                                       l5833 0EA9  
                                     l5825 0E8D                                       l5841 0972  
                                     l5681 07DC                                       l5673 07BE  
                                     l5665 07AE                                       l5657 079D  
                                     l5729 0D3A                                       l6369 03C4  
                                     l6297 02CF                                       l6289 0291  
                                     l5595 0C42                                       l5587 0C39  
                                     l5579 0C1D                                       l5931 044B  
                                     l5915 041B                                       l5923 042C  
                                     l5907 0403                                       l5835 0EB1  
                                     l5827 0E9A                                       l5819 0E65  
                                     l5851 094F                                       l5843 0978  
                                     l5691 07F6                                       l5683 07DE  
                                     l5675 07C3                                       l5667 07B0  
                                     l5659 07A0                                       l6299 02DD  
                                     l5597 0C48                                       l5589 0C3A  
                                     l5941 045C                                       l5933 044C  
                                     l5925 0437                                       l5917 041C  
                                     l5909 0409                                       l5837 0EB6  
                                     l5829 0E9D                                       l5693 07FB  
                                     l5685 07E3                                       l5677 07C9  
                                     l5669 07B6                                       l5861 062F  
                                     l5845 097D                                       l5853 0988  
                                     l5599 0C49                                       l5951 047F  
                                     l5943 045F                                       l5935 044D  
                                     l5927 0446                                       l5919 0420  
                                     l5839 0EC5                                       l5679 07D8  
                                     l5687 07EB                                       l5695 0CE2  
                                     l5871 0667                                       l5863 0631  
                                     l5847 0983                                       l5855 098E  
                                     l5961 04D0                                       l5953 0484  
                                     l5945 046A                                       l5937 0452  
                                     l5929 044A                                       l5849 094B  
                                     l5689 07F0                                       l5697 0CE4  
                                     l5881 0695                                       l5873 0677  
                                     l5865 0637                                       l5857 0628  
                                     l5971 04EB                                       l5963 04DA  
                                     l5955 04A4                                       l5947 046C  
                                     l5939 0458                                       l5795 0B02  
                                     l5699 0CE8                                       l5891 06D1  
                                     l5883 06A1                                       l5875 0680  
                                     l5867 0647                                       l5859 062B  
                                     l5965 04DF                                       l5957 04AD  
                                     l5949 0477                                       l5973 04EC  
                                     l6941 0D78                                       l5797 0B0E  
                                     l5893 06D5                                       l5885 06A6  
                                     l5877 068B                                       l5869 0657  
                                     l6933 023D                                       l6943 04F4  
                                     l5967 04E4                                       l5959 04B2  
                                     l5975 04FE                                       l5895 03D4  
                                     l5991 0936                                       l5799 0B13  
                                     l5887 06B6                                       l5879 0690  
                                     l6935 0352                                       l5977 0501  
                                     l5969 04E7                                       l5897 03DC  
                                     l5993 0938                                       l5889 06C1  
                                     l6937 0387                                       l5987 0C4F  
                                     l5899 03EC                                       l5995 093D  
                                     l6939 0FD2                                       l5989 0C87  
                                     l5997 093F                                       l5999 0944  
                                     STR_1 1077                                       STR_2 1056  
                                     STR_3 1087                                       STR_4 1034  
                                     STR_5 1045                                       STR_6 1023  
                                     STR_7 1067                                       STR_8 10DC  
                                     STR_9 1118                                       u4000 0D11  
                                     u4001 0D10                                       u4010 0D1D  
                                     u4011 0D1C                                       u4110 0B13  
                                     u4030 0D2D                                       u4111 0B12  
                                     u4031 0D2C                                       u4015 0D19  
                                     u4120 0C9D                                       u4200 0409  
                                     u4040 0D34                                       u4121 0C9C  
                                     u4201 0408                                       u4041 0D33  
                                     u4025 0D23                                       u4130 0CBD  
                                     u4210 041B                                       u4131 0CBC  
                                     u4211 041A                                       u4300 0C87  
                                     u4140 0CD2                                       u4220 0426  
                                     u4301 0C86                                       u4141 0CD1  
                                     u4221 0425                                       u4230 0437  
                                     u4150 062F                                       u4231 0436  
                                     u4151 062E                                       u4240 0446  
                                     u4160 0680                                       u4305 0C83  
                                     u4241 0445                                       u4161 067F  
                                     u4250 0458                                       u4170 0695  
                                     u4251 0457                                       u4171 0694  
                                     u3700 0AAA                                       u3620 0A1F  
                                     u4260 046A                                       u4180 03E7  
                                     u4500 03BB                                       u3701 0AA9  
                                     u3621 0A1E                                       u4261 0469  
                                     u4501 03BA                                       u4270 0477  
                                     u4190 03FB                                       u3630 0F69  
                                     u4510 03CA                                       u4430 0195  
                                     u4271 0476                                       u4191 03FA  
                                     u3631 0F68                                       u4511 03C9  
                                     u4431 0194                                       u3800 0C1D  
                                     u4280 0484                                       u3560 0AD4  
                                     u3640 0F77                                       u3720 0AFE  
                                     u4440 026C                                       u3801 0C1C  
                                     u4281 0483                                       u3545 0BD2  
                                     u3561 0AD3                                       u3641 0F76  
                                     u3721 0AFD                                       u4441 026B  
                                     u3810 0B62                                       u4290 04B2  
                                     u3650 0F7D                                       u3730 06EA  
                                     u4450 027A                                       u3811 0B61  
                                     u4291 04B1                                       u3555 0BE0  
                                     u3651 0F7C                                       u3731 06E9  
                                     u4451 0279                                       u3820 0B68  
                                     u3660 0F8A                                       u3740 0709  
                                     u3900 07C7                                       u4460 0330  
                                     u3821 0B67                                       u3661 0F89  
                                     u3741 0708                                       u3901 07C6  
                                     u4461 032F                                       u4445 0268  
                                     u3830 0B6F                                       u3670 0F97  
                                     u3750 073D                                       u4470 0364  
                                     u3831 0B6E                                       u3575 0D92  
                                     u3671 0F96                                       u3751 073C  
                                     u4471 0363                                       u4455 0276  
                                     u3840 09EF                                       u3760 075D  
                                     u3920 07D8                                       u4480 0399  
                                     u3841 09EE                                       u3761 075C  
                                     u3585 09DB                                       u3921 07D7  
                                     u4481 0398                                       u3690 0B58  
                                     u3850 09F5                                       u3770 0790  
                                     u4490 03A1                                       u3691 0B57  
                                     u3851 09F4                                       u3771 078F  
                                     u3915 07CA                                       u4491 03A0  
                                     u3780 0C10                                       u3940 07E9  
                                     u3860 0798                                       u3781 0C0F  
                                     u3685 0FEC                                       u3941 07E8  
                                     u3925 07D4                                       u3861 0797  
                                     u3790 0C16                                       u3950 07F0  
                                     u3870 07A4                                       u3791 0C15  
                                     u3951 07EF                                       u3935 07DF  
                                     u3871 07A3                                       u4807 012B  
                                     u3880 07B6                                       u3960 0CE8  
                                     u3881 07B5                                       u3961 0CE7  
                                     u4817 013A                                       u3970 0CF4  
                                     u4907 0EAA                                       u3971 0CF3  
                                     u4827 0149                                       u3980 0D00  
                                     u3981 0CFF                                       u4837 0158  
                                     u3895 07BA                                       u4847 017D  
                                     u4857 0187                                       u4867 0E85  
                                     u3995 0D04                                       u4877 0E91  
                                     u4797 011C                                       u4887 0E9B  
                                     u4897 0EA2                                       _TMR0 0015  
                                     _WPUB 020D                               __CFG_WRT$OFF 0000  
                     printEM1812@wVariable 0035                                       _main 00C4  
                                     _test 00AE                                       fsr0h 0005  
                                     fsr1h 0007                                       indf0 0000  
                                     fsr0l 0004                                       indf1 0001  
                                     fsr1l 0006                                       btemp 007E  
                            __CFG_BOREN$ON 0000                                       start 0060  
                    __size_of_I2C_SendData 0045                              __CFG_IESO$OFF 0000  
                     ??_SetToSendDataToLCD 002C                      __size_of_GetI2CStatus 000A  
                     __end_of_clearDisplay 0918                  __size_of_Esp8266SetupWifi 0007  
                  I2C_Interrupt@oErrorCode 0074                               main@wCounter 02A4  
                                    ?_main 0070                                _writeInsChk 0967  
                          __end_of___awdiv 07FC                                      STR_10 10A5  
                                    STR_11 10B3                                      STR_12 1154  
                                    STR_20 113C                                      STR_13 115C  
                                    STR_21 110F                                      STR_30 1158  
                                    STR_22 10CF                                      STR_23 1146  
                                    STR_31 10C1                                      STR_15 1012  
                                    STR_24 1130                                      STR_32 1121  
                                    STR_16 10E8                                      STR_33 115F  
                                    STR_25 1106                              __CFG_WDTE$OFF 0000  
                                    STR_34 1150                                      STR_26 1097  
                                    STR_35 114B                                      STR_19 1141  
                                    STR_27 1129                                      STR_28 10FD  
                                    STR_36 10F3                            __end_of___awmod 0D40  
                                    STR_29 1136                                      STR_38 1000  
                          ___awdiv@divisor 002C                               main@wReadout 02A8  
                                    i1l220 005E                                      i1l221 005E  
                                    i1l310 0F0C                                      i1l303 0BCB  
                                    i1l311 0EF7                                      i1l320 0F21  
                                    i1l312 0F0B                                      i1l216 002B  
                                    i1l321 0F29                                      i1l313 0F04  
                                    i1l217 0053                                      i1l330 0923  
                                    i1l314 0F0A                                      i1l306 0ED2  
                                    i1l218 0047                                      i1l315 0F2B  
                                    i1l307 0F60                                      i1l219 0052  
                                    i1l316 0F0F                                      i1l308 0F0E  
                                    i1l333 091D                                      i1l317 0F42  
                                    i1l309 0EEA                                      i1l318 0F15  
                                    i1l319 0F1B                                      i1l600 0596  
                                    i1l336 0A50                                      i1l601 0592  
                                    i1l337 0A3A                                      i1l265 0A70  
                                    i1l610 05D5                                      i1l602 058E  
                                    i1l338 0A57                                      i1l266 0A5B  
                                    i1l611 0611                                      i1l603 0591  
                                    i1l339 0A57                                      i1l267 0A81  
                                    i1l612 05FD                                      i1l604 0595  
                                    i1l268 0A81                                      i1l605 0613  
                                    i1l613 05F4                                      i1l461 09B6  
                                    i1l614 05FC                                      i1l606 05BB  
                                    i1l462 09B7                                      i1l390 0DD1  
                                    i1l615 0610                                      i1l607 05AF  
                                    i1l463 09B7                                      i1l391 0E01  
                                    i1l616 060A                                      i1l608 05BA  
                                    i1l384 0DD3                                      i1l609 0612  
                                    i1l617 060F                                      i1l385 0DA3  
                                    i1l618 061F                                      i1l386 0DE9  
                                    i1l619 0627                                      i1l387 0DAD  
                                    i1l388 0DB9                                      i1l901 0E21  
                                    i1l389 0DC5                                      i1l902 0E1B  
                                    i1l590 0599                                      i1l903 0E20  
                                    i1l591 0538                                      i1l904 0E5C  
                                    i1l592 0598                                      i1l905 0E34  
                                    i1l593 0564                                      i1l906 0E40  
                                    i1l586 0615                                      i1l594 0557  
                                    i1l907 0E5B                                      i1l587 0614  
                                    i1l595 0561                                      i1l908 0E64  
                                    i1l596 0597                                      i1l588 059A  
                                    i1l597 057B                                      i1l589 051E  
                                    i1l598 0577                                      i1l599 057A  
                          ___awdiv@counter 0031                                      _RCREG 0199  
                                    _TMR1H 0017                                      _TMR1L 0016  
                                    _PORTA 000C                                      _PORTB 000D  
                   printEM1812@wIsNegative 003C                                      _TRISB 008D  
                                    _TXREG 019A                                _writeTxtChk 0F61  
                            __CFG_PWRTE$ON 0000                             __CFG_FCMEN$OFF 0000  
                  ?i1_SetToReadDataFromLCD 0070                            __end_of_initLCD 0EC9  
                   ??_SetToReadDataFromLCD 002C                           __end_of_AddTrace 0C96  
                             _I2C_SendData 0C08                                      _myint 0004  
                          __end_of_setData 0C08                          ??_EUSARTInterrupt 0072  
                             _GetI2CStatus 0953                          ?_EM1812EntryPoint 003D  
                 _wI2CRxNbOfByteToReceived 0054                     __size_of_I2C_Interrupt 0126  
            Esp8266Entrypoint@wCommandsize 0047                                      status 0003  
                                    wtemp0 007E                           __end_of_Debounce 0CE2  
                   ??_setNotBlinkingCursor 0032                         ??_EM1812EntryPoint 003F  
                           __CFG_MCLRE$OFF 0000                            __initialization 0062  
            i1lcdWriteText@wCharReadingPos 0023                               __end_of_main 03D2  
                      i1lcdWriteText@iText 007C                         __size_ofi1_setData 003C  
                           __CFG_LPBOR$OFF 0000                                     ??_main 00C4  
                  _gEusartRXBufferWritePtr 0051                         I2C_GetData@iAdress 002F  
                            AddTrace@iText 0043             __end_ofi1_SetToReadDataFromLCD 0924  
                            AddTrace@oText 00BD                      __end_ofi1_writeTxtChk 0F61  
                         __end_of_PrintLog 0B2B                               ?_waitLCDBusy 0070  
                     EM1812EntryPoint@wTry 004A                           ___awdiv@dividend 002E  
                                   ?_myint 0070                                     _ANSELB 018D  
                                   i1l4101 056E                                     i1l4111 058B  
                                   i1l4103 0574                                     i1l4121 05AF  
                                   i1l4113 059F                                     i1l4105 0580  
                                   i1l4131 05CF                                     i1l4123 05B5  
                                   i1l4115 05A1                                     i1l4107 0581  
                                   i1l4141 05F6                                     i1l4133 05DA  
                                   i1l4125 05BF                                     i1l4117 05A4  
                                   i1l4109 0586                                     i1l4061 0503  
                                   i1l4151 061A                                     i1l4143 0602  
                                   i1l4135 05E0                                     i1l4127 05C5  
                                   i1l4119 05AA                                     i1l4071 0518  
                                   i1l4063 0508                                     i1l4161 0E0D  
                                   i1l4153 061B                                     i1l4145 0604  
                                   i1l4137 05E6                                     i1l4129 05C7  
                                   i1l4081 0533                                     i1l4073 051A  
                                   i1l4065 0509                                     i1l4171 0E26  
                                   i1l4163 0E15                                     i1l4155 0627  
                                   i1l4147 060A                                     i1l4139 05EE  
                                   i1l4091 0554                                     i1l4083 053D  
                                   i1l4075 0522                                     i1l4067 050E  
                                   i1l4059 0502                                     i1l4181 0E40  
                                   i1l4173 0E2B                                     i1l4165 0E1B  
                                   i1l4157 0E02                                     i1l4093 0559  
                                   i1l4085 0547                                     i1l4077 0528  
                                   i1l4069 0513                                     i1l4149 0615  
                                   i1l4191 0E64                                     i1l4183 0E4E  
                                   i1l4175 0E2D                                     i1l4167 0E1D  
                                   i1l4159 0E07                                     i1l4095 055E  
                                   i1l4087 054B                                     i1l4079 0530  
                                   i1l4185 0E53                                     i1l4177 0E34  
                                   i1l4169 0E21                                     i1l4097 0561  
                                   i1l4089 054D                                     i1l4193 09AB  
                                   i1l4187 0E59                                     i1l4179 0E39  
                                   i1l4099 0568                                     i1l4195 09B2  
                                   i1l4189 0E5C                                     i1l4197 09B4  
                                   i1l5501 0DE9                                     i1l6141 0A70  
                                   i1l4199 09B5                                     i1l5327 091E  
                                   i1l5511 0DFD                                     i1l5503 0DEC  
                                   i1l6135 0A58                                     i1l5505 0DEF  
                                   i1l6137 0A5B                                     i1l6401 001D  
                                   i1l5371 0B93                                     i1l5507 0DF1  
                                   i1l6139 0A6A                                     i1l6411 0037  
                                   i1l6403 0022                                     i1l5373 0BC5  
                                   i1l5381 0A2F                                     i1l5509 0DF2  
                                   i1l6421 004E                                     i1l6413 003B  
                                   i1l6405 0023                                     i1l5375 0BC7  
                                   i1l5391 0A48                                     i1l5383 0A32  
                                   i1l6415 0042                                     i1l6423 0053  
                                   i1l6407 002B                                     i1l5377 0BC9  
                                   i1l5369 0B91                                     i1l5393 0A4C  
                                   i1l5385 0A35                                     i1l6425 0057  
                                   i1l6417 0047                                     i1l6409 0033  
                                   i1l5379 0918                                     i1l5395 0A4E  
                                   i1l5387 0A3E                                     i1l5491 0DAD  
                                   i1l6427 0058                                     i1l6419 004D  
                                   i1l5389 0A47                                     i1l5493 0DB9  
                                   i1l5741 0ED7                                     i1l5733 0ECA  
                                   i1l5495 0DC5                                     i1l5487 0DA1  
                                   i1l5751 0EF1                                     i1l5743 0ED8  
                                   i1l5735 0ED1                                     i1l5497 0DD2  
                                   i1l5489 0DA3                                     i1l5761 0F0F  
                                   i1l5753 0EF7                                     i1l5745 0EDE  
                                   i1l5737 0ED2                                     i1l6393 0006  
                                   i1l5499 0DD3                                     i1l5771 0F2A  
                                   i1l5763 0F15                                     i1l5755 0EFE  
                                   i1l5747 0EE4                                     i1l5739 0ED5  
                                   i1l6395 000B                                     i1l5781 0F4A  
                                   i1l5765 0F1B                                     i1l5757 0F04  
                                   i1l5749 0EEA                                     i1l5773 0F2B  
                                   i1l6397 0013                                     i1l5783 0F4B  
                                   i1l5767 0F21                                     i1l5775 0F42  
                                   i1l5759 0F0D                                     i1l6399 0019  
                                   i1l5785 0F55                                     i1l5777 0F45  
                                   i1l5769 0F26                                     i1l5787 0F59  
                                   i1l5779 0F48                                     i1l5789 0F5B  
                            setData@iValue 002E                                     i1l6947 0F34  
                                   i1l6949 0DDB                                     u410_25 0F4E  
                                   u260_20 0568                                     u252_20 0508  
                                   u260_21 0567                                     u252_21 0507  
                                   u261_20 056E                                     u253_20 050E  
                                   u405_20 0ED0                                     u261_21 056D  
                                   u253_21 050D                                     u405_21 0ECF  
                                   u270_20 05DA                                     u262_20 0574  
                                   u254_20 0513                                     u406_20 0EDE  
                                   u270_21 05D9                                     u262_21 0573  
                                   u254_21 0512                                     u406_21 0EDD  
                                   u271_20 05E0                                     u263_20 0580  
                                   u255_20 0518                                     u407_20 0EE4  
                                   u271_21 05DF                                     u263_21 057F  
                                   u255_21 0517                                     u407_21 0EE3  
                                   u280_20 0E59                                     u272_20 05E6  
                                   u264_20 058B                                     u256_20 0522  
                                   u408_20 0EF1                                     u280_21 0E58  
                                   u272_21 05E5                                     u264_21 058A  
                                   u256_21 0521                                     u408_21 0EF0  
                                   u360_25 0BA4                                     u273_20 0602  
                                   u265_20 059F                                     u257_20 0528  
                                   u281_20 09B2                                     u361_20 0A56  
                                   u409_20 0EFE                                     u273_21 0601  
                                   u265_21 059E                                     u257_21 0527  
                                   u281_21 09B1                                     u361_21 0A55  
                                   u409_21 0EFD                          _setCursorPosition 0D40  
                                   u274_20 061A                                     u266_20 05AA  
                                   u258_20 053D                                     u442_20 0A80  
                                   u274_21 0619                                     u266_21 05A9  
                                   u258_21 053C                                     u442_21 0A7F  
                                   u275_20 0E07                                     u267_20 05B5  
                                   u259_20 0554                                     u275_21 0E06  
                                   u267_21 05B4                                     u259_21 0553  
                                   u371_25 0DF5                                     u276_20 0E0D  
                                   u268_20 05BF                                     u452_20 0019  
                                   u276_21 0E0C                                     u268_21 05BE  
                                   u452_21 0018                                     u277_20 0E26  
                                   u269_20 05C5                                     u453_20 0037  
                                   u277_21 0E25                                     u269_21 05C4  
                                   u453_21 0036                                     u278_20 0E2B  
                                   u454_20 0042                                     u278_21 0E2A  
                                   u454_21 0041                                     u279_20 0E39  
                                   u455_20 004D                                     u279_21 0E38  
                                   u455_21 004C                                     u359_25 0B96  
                                   u456_20 0057                                     u456_21 0056  
                                   _SPBRGH 019C                                     _SPBRGL 019B  
                                   _SSPADD 0212                                     _SSPBUF 0211  
                       ?_setCursorPosition 0030                          _TempUpdateRequest 09AB  
                      ??_setCursorPosition 0031                                  ??___awdiv 0030  
                                ??___awmod 0030                       __end_of_lcdWriteText 0B00  
                  main@wEnterBottonPressed 02CC                                     _memcpy 0B2B  
                             ?_printEM1812 0035                                     _memset 06DE  
                       ?_TempUpdateRequest 0070                                     _wTrial 00B2  
                         ___awdiv@quotient 0033                            ___awmod@divisor 002C  
              __size_of_GetNewReceivedData 0023                              _I2C_Interrupt 0502  
                          ___awmod@counter 0031                                     _strcat 09B8  
                                   _strcpy 0A82                                     _strlen 0A0B  
                                ??_initLCD 0032                                  ??_setData 002C  
                      ??_TempUpdateRequest 0070                   __end_of_moveCursorToHome 0953  
                __end_of_setCursorPosition 0DA0                         _gTxReadingPosition 0050  
                               _gErrorCode 00B1                          __end_ofi1_setData 0BCC  
                   __size_of_writeInsNoChk 0018                                _gESPCommand 005F  
                  __end_of__initialization 00C0                           main@wEditingMode 02BE  
                    __size_of_clearDisplay 0005                 setCursorPosition@wLCDIndex 0034  
                __end_of_TempUpdateRequest 09B8                             __pcstackCOMMON 0070  
                         _Esp8266SetupWifi 0944                               __pidataBANK0 0930  
                             __pidataBANK1 095D                          I2C_SendData@iData 003C  
                            __end_of_myint 0060                             ?_I2C_Interrupt 0070  
            __size_ofi1_SetToSendDataToLCD 0006                                  ?_AddTrace 0042  
                     writeInsNoChk@iOpCode 0030                 setCursorPosition@iPosition 0030  
                           _wInterruptText 01A0                             _OPTION_REGbits 0095  
                                ?_Debounce 002C                               _clearDisplay 0913  
                                  ??_myint 0024                                 __pbssBANK0 0045  
                               __pbssBANK1 00A0                                 __pbssBANK2 0120  
                               __pbssBANK3 01A0                                 __pbssBANK4 0220  
                        _wReceptionCounter 0057               __size_ofi1_setCursorPosition 0062  
                            ?_setCursorOff 0070                      EM1812EntryPoint@F1960 00C6  
                    EM1812EntryPoint@F1962 00A0                            __CFG_VCAPEN$OFF 0000  
                  __size_ofi1_lcdWriteText 002A                            i1setData@iValue 0072  
                               __pmaintext 00C4                                  ?_PrintLog 0070  
                   __size_ofi1_waitLCDBusy 0029                              ??_I2C_GetData 002E  
                               __pintentry 0004                                    ?_memcpy 002C  
                            _writeInsNoChk 09D0                                    ?_memset 002C  
                               ??_AddTrace 00B7                               ?_writeInsChk 0070  
                                  ?_strcat 003E                                    ?_strcpy 0032  
                                  ?_strlen 002C                            _EUSARTInterrupt 0E02  
              GetNewReceivedData@oDataSize 0038                               ?_writeTxtChk 0070  
                               ??_Debounce 002E                 __size_of_setCursorPosition 0060  
                     __size_of_waitLCDBusy 002A                             ??_setCursorOff 0032  
                     AddTrace@iSizeOfoText 0042               EM1812EntryPoint@oTemperature 003D  
                          _gTxTransmitSize 004E                      __size_of_lcdWriteText 002A  
                     main@wTemperaturePrev 02C1                 __size_of_TempUpdateRequest 000D  
              __size_of_SetToSendDataToLCD 0006                 ?_Esp8266SetAccessPointMode 0070  
                               ??_PrintLog 003E          EM1812EntryPoint@SetGetTempCommand 00B7  
                          ??_I2C_Interrupt 0072                                    ___awdiv 0792  
                                  ___awmod 0CE2                            printEM1812@wTen 003D  
                           ?_writeInsNoChk 0070                                 _wTempState 005A  
                          __CFG_STVREN$OFF 0000                  __size_of_EM1812EntryPoint 0130  
                          Debounce@iSwitch 0030                           _wI2CCommandState 0063  
                          __size_of_memcpy 002F                            __size_of_memset 00B4  
                                  __ptext1 0988                                    __ptext2 097D  
                                  __ptext3 0628                                    __ptext4 0CE2  
                                  __ptext5 0792                                    __ptext6 0972  
                                  __ptext7 094B                                    __ptext8 0E65  
                                  __ptext9 0913                            Debounce@ioTimer 002C  
                          __size_of_strcat 0018                       __size_of_printEM1812 00B6  
                          __size_of_strcpy 002A                            __size_of_strlen 0024  
                                  _initLCD 0E65                        __end_of_I2C_GetData 0B90  
                                _T1CONbits 0018                            _gEspRxBufferPtr 0045  
                         ___awmod@dividend 002E                                    _setData 0BCC  
                        main@wDebounceDown 02C8                              i1_waitLCDBusy 0A2F  
                                  clrloop0 0994                       end_of_initialization 00C0  
                             _lcdWriteText 0AD6              __size_of_SetToReadDataFromLCD 0006  
                                  memcpy@d 0034                                    memcpy@n 0030  
                                  memcpy@s 0036                                    init_ram 099F  
                                  memset@c 002C                                    memset@k 0032  
                                  memset@n 002E                                    memset@s 0035  
                                  initloop 09A0               i1setCursorPosition@wLCDIndex 0078  
                         __CFG_CLKOUTEN$ON 0000              __size_of_setNotBlinkingCursor 000B  
                     _wI2CTxNbOfByteToSend 0055                                  _RCSTAbits 019D  
        __end_of_Esp8266SetAccessPointMode 0944                    __end_of_EUSARTInterrupt 0E65  
                             _gEUSARTError 004F                                    strcpy@d 003C  
                                  strlen@a 0030                                    strcpy@s 003A  
                                  strlen@s 002C                                  _PORTAbits 000C  
                                _PORTBbits 000D                                  _PORTCbits 000E  
             i1setCursorPosition@iPosition 0074                                 _powerOnLcd 0972  
                     main@wUpBottonPressed 02CA                           __CFG_FOSC$INTOSC 0000  
                                _TRISAbits 008C                             ?i1_waitLCDBusy 0070  
                                _TRISCbits 008E                          ?_moveCursorToHome 0070  
                        _Esp8266OpenSocket 0936                   __end_of_Esp8266SetupWifi 094B  
                      printEM1812@wDecimal 003B                          _wTimer1IntCounter 004B  
                       ??_moveCursorToHome 0032                        printEM1812@oTextOut 0037  
                       ?_Esp8266OpenSocket 0070                             i1_lcdWriteText 0A58  
                                _TXSTAbits 019E                                  i1_setData 0B90  
                      waitLCDBusy@busyFlag 002E                        ??_Esp8266OpenSocket 002C  
                   __size_ofi1_writeTxtChk 0098                            ??_writeInsNoChk 002F  
               __end_of_GetNewReceivedData 0A0B                                _I2C_GetData 0B5A  
                      i1_setCursorPosition 0DA0                              _gEsp8266State 0060  
                         _mWritingPosition 005B                       __end_of_setCursorOff 0988  
                           __end_of_memcpy 0B5A                             __end_of_memset 0792  
              printEM1812@wWritingPosition 003E                          myint@wEUSARTError 0025  
                        __size_of_AddTrace 0049                             __end_of_strcat 09D0  
                           _wTimer0Counter 0059                             __end_of_strcpy 0AAC  
                           __end_of_strlen 0A2F                       __size_of_writeInsChk 000B  
                __end_of_Esp8266OpenSocket 093D                        start_initialization 0062  
                     __size_of_writeTxtChk 009F                          __size_of_Debounce 004C  
                   __end_ofi1_lcdWriteText 0A82               __end_ofi1_SetToSendDataToLCD 091E  
                     ?i1_setCursorPosition 0074                                 ?i1_setData 0070  
                     i1writeTxtChk@iOpCode 007B                            main@wDebounceUp 02C6  
                         ?_EUSARTInterrupt 0070                   ??i1_SetToReadDataFromLCD 0070  
                              __pdataBANK0 005E                                __pdataBANK1 00C6  
                         _EM1812EntryPoint 03D2                              _wI2CTxSendPos 0052  
                                 ??_memcpy 0032                          __size_of_PrintLog 002B  
                                 ??_memset 0030                                 memset@dest 0034  
                                 ??_strcat 0042                                   ??_strcpy 0036  
                                 ??_strlen 002E                   i1setCursorPosition@iLine 0077  
                              ?_powerOnLcd 0070                            ??i1_waitLCDBusy 0070  
                              __pbssBIGRAM 2328                           uint16_tToa@F1884 00A8  
                                ___latbits 0003                              i1_writeTxtChk 0EC9  
                            __pcstackBANK0 0020                              __pcstackBANK1 00B7  
                            __pcstackBANK5 02A0                          printEM1812@wUnity 003A  
                Esp8266Entrypoint@wCounter 0048                              ?_I2C_SendData 0038  
                    ??i1_setCursorPosition 0075                            ?i1_lcdWriteText 007C  
                            ?_GetI2CStatus 002C                               _wTemperature 00B3  
                       writeInsChk@iOpCode 0031                ??_Esp8266SetAccessPointMode 002C  
                                 ?___awdiv 002C                                   ?___awmod 002C  
                                __pswtext1 0800                                  _wCounter2 00B0  
                                 ?_initLCD 0070                             ?i1_writeTxtChk 0070  
               __size_of_Esp8266OpenSocket 0007                                   ?_setData 0070  
                            ??_waitLCDBusy 002C                                  _wHumidity 00B5  
                           ??_I2C_SendData 003A                              PrintLog@iText 0041  
                           ??_GetI2CStatus 002E                             __size_of_myint 005C  
                         _mDisplayOnOffReg 005D                 __end_of_SetToSendDataToLCD 092A  
                                clear_ram0 0993                                ??i1_setData 0070  
                                 _PIE1bits 0091                                   _PIE2bits 0092  
                      __size_of_powerOnLcd 000B                                   _PIR1bits 0011  
                                 _PIR2bits 0012                      __size_of_setCursorOff 000B  
                                main@F2379 00CA                   _wReceptionBufferPosition 0058  
                        Debounce@swPressed 002D               __end_of_SetToReadDataFromLCD 0930  
                            ??_printEM1812 0038                      __end_of_I2C_Interrupt 0628  
          __size_ofi1_SetToReadDataFromLCD 0006                lcdWriteText@wCharReadingPos 003D  
                                 _AddTrace 0C4D                       i1_SetToSendDataToLCD 0918  
                         _wI2CRxBufferSize 0061                                 myint@wText 0027  
                                main@wConv 02A0                                  main@wMenu 02CD  
             __end_of_setNotBlinkingCursor 0993                                  main@wTemp 02A6  
                                 _Debounce 0C96                  _Esp8266SetAccessPointMode 093D  
                             _gEsp8266Echo 005E                          ?_Esp8266SetupWifi 0070  
                        lcdWriteText@iText 0038                        __end_of_waitLCDBusy 0AD6  
                       ??_Esp8266SetupWifi 002C                            main@wUpdateMenu 02C3  
                             _setCursorOff 097D                               _wI2CRxBuffer 0134  
                __size_of_moveCursorToHome 0008                                  memcpy@tmp 0033  
                             _wI2CTxBuffer 0148                                   _PrintLog 0B00  
                             ?_I2C_GetData 002C                           __size_of___awdiv 006A  
                         __size_of___awmod 005E                      ?i1_SetToSendDataToLCD 0070  
                         _wI2CTxBufferSize 0062                            ??i1_writeTxtChk 0079  
                               _ANSELAbits 018C                                 _ANSELCbits 018E  
                         __size_of_initLCD 0064                                 strcat@dest 003E  
                      __end_of_printEM1812 06DE                         _GetNewReceivedData 09E8  
                PrintLog@wInterruptTextLen 0040                           __size_of_setData 003C  
                            ?_clearDisplay 0070                                   __ptext10 0967  
                                 __ptext11 09D0                                   __ptext20 0924  
                                 __ptext12 0B00                                   __ptext21 0944  
                                 __ptext13 06DE                                   __ptext30 0C96  
                                 __ptext22 093D                                   __ptext14 0AD6  
                                 __ptext31 0C4D                                   __ptext23 0936  
                                 __ptext15 0F61                                   __ptext40 091E  
                                 __ptext32 09B8                                   __ptext24 03D2  
                                 __ptext16 0D40                                   __ptext41 0B90  
                                 __ptext33 0A0B                                   __ptext25 0C08  
                                 __ptext17 0AAC                                   __ptext42 0918  
                                 __ptext34 0A82                                   __ptext26 0B5A  
                                 __ptext18 092A                                   __ptext43 09AB  
                                 __ptext27 09E8                                   __ptext19 0BCC  
                                 __ptext44 0502                                   __ptext36 0A58  
                                 __ptext28 0B2B                                   __ptext45 0E02  
                                 __ptext37 0EC9                                   __ptext29 0953  
                                 __ptext38 0DA0                                   __ptext39 0A2F  
                  GetNewReceivedData@oData 003B                                   _wHexTemp 0120  
                    main@wIterationCounter 02BC                     i1_SetToReadDataFromLCD 091E  
                 __end_of_EM1812EntryPoint 0502                                 strcpy@dest 0032  
                      ?_GetNewReceivedData 0038                           _gEspRxBufferSize 004D  
                                 _wTempSet 00CE                              __size_of_main 030E  
                       main@wDebounceEnter 02C4                  I2C_SendData@iNumberofByte 0038  
                       writeTxtChk@iOpCode 0037                                   int$flags 007E  
                     __end_of_I2C_SendData 0C4D                      __end_of_writeInsNoChk 09E8  
                        main@wHumidityPrev 02BF                       __end_of_GetI2CStatus 095D  
                     ??_GetNewReceivedData 0039                              ??_writeInsChk 0031  
                             ??_powerOnLcd 0032                              ??_writeTxtChk 0035  
                               _INTCONbits 000B                _gEspRxBufferReadingPosition 004C  
                         ??i1_lcdWriteText 0020                                   memcpy@d1 002C  
                                 memcpy@s1 002E                                _waitLCDBusy 0AAC  
                           ??_clearDisplay 0032                             __pstringtext10 1097  
                           __pstringtext11 10A5                             __pstringtext20 110F  
                           __pstringtext12 10B3                             __pstringtext21 1118  
                           __pstringtext13 10C1                             __pstringtext30 1150  
                           __pstringtext22 1121                             __pstringtext14 10CF  
                           __pstringtext31 1154                             __pstringtext23 1129  
                           __pstringtext15 10DC                             __pstringtext32 1158  
                           __pstringtext24 1130                             __pstringtext16 10E8  
                           __pstringtext33 115C                             __pstringtext25 1136  
                           __pstringtext17 10F3                             __pstringtext34 115F  
                           __pstringtext26 113C                             __pstringtext18 10FD  
                           __pstringtext35 0000                             __pstringtext27 1141  
                           __pstringtext19 1106                             __pstringtext28 1146  
                           __pstringtext29 114B                           _wNewI2CReception 0053  
                   setCursorPosition@iLine 0033                                   intlevel1 0000  
                   main@wDownBottonPressed 02CB                       _SetToReadDataFromLCD 092A  
                                strcat@src 0040                                  strcpy@src 0034  
                               _OSCCONbits 0099                       _setNotBlinkingCursor 0988  
                       __end_of_powerOnLcd 097D                     ??i1_SetToSendDataToLCD 0070  
                              _printEM1812 0628                              __pstringtext1 1000  
                            __pstringtext2 1012                              __pstringtext3 1023  
                            __pstringtext4 1034                              __pstringtext5 1045  
                            __pstringtext6 1056                              __pstringtext7 1067  
                            __pstringtext8 1077                              __pstringtext9 1087  
                 __size_of_EUSARTInterrupt 0063                __end_ofi1_setCursorPosition 0E02  
                    __end_ofi1_waitLCDBusy 0A58  Esp8266Entrypoint@prevEusartNbByteReceived 0049  
                      __end_of_writeInsChk 0972                                _SSPCON1bits 0215  
                              _SSPCON2bits 0216                                _SSPCON3bits 0217  
                          _gEusartRXBuffer 2328                              ?_lcdWriteText 0038  
                      __end_of_writeTxtChk 1000                            _gEusartTXBuffer 0220  
                    ?_SetToReadDataFromLCD 0070            EM1812EntryPoint@ReceptionBuffer 00BB  
       __size_of_Esp8266SetAccessPointMode 0007                      i1waitLCDBusy@busyFlag 0072  
                    ?_setNotBlinkingCursor 0070                           _moveCursorToHome 094B  
                   _mCursorDisplayShiftReg 005C  
