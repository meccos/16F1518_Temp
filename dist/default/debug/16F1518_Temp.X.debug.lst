

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Dec 23 01:46:13 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F1518 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   120                           PORTB equ 0Dh ;# 
   121  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   122                           PORTC equ 0Eh ;# 
   123  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   124                           PORTE equ 010h ;# 
   125  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   126                           PIR1 equ 011h ;# 
   127  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   128                           PIR2 equ 012h ;# 
   129  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   130                           TMR0 equ 015h ;# 
   131  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   132                           TMR1 equ 016h ;# 
   133  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   134                           TMR1L equ 016h ;# 
   135  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   136                           TMR1H equ 017h ;# 
   137  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   138                           T1CON equ 018h ;# 
   139  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   140                           T1GCON equ 019h ;# 
   141  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   142                           TMR2 equ 01Ah ;# 
   143  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   144                           PR2 equ 01Bh ;# 
   145  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   146                           T2CON equ 01Ch ;# 
   147  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   148                           TRISA equ 08Ch ;# 
   149  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   150                           TRISB equ 08Dh ;# 
   151  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   152                           TRISC equ 08Eh ;# 
   153  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   154                           TRISE equ 090h ;# 
   155  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   156                           PIE1 equ 091h ;# 
   157  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   158                           PIE2 equ 092h ;# 
   159  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   160                           OPTION_REG equ 095h ;# 
   161  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   162                           PCON equ 096h ;# 
   163  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   164                           WDTCON equ 097h ;# 
   165  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   166                           OSCCON equ 099h ;# 
   167  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   168                           OSCSTAT equ 09Ah ;# 
   169  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   170                           ADRES equ 09Bh ;# 
   171  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   172                           ADRESL equ 09Bh ;# 
   173  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   174                           ADRESH equ 09Ch ;# 
   175  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   176                           ADCON0 equ 09Dh ;# 
   177  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   178                           ADCON1 equ 09Eh ;# 
   179  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   180                           LATA equ 010Ch ;# 
   181  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   182                           LATB equ 010Dh ;# 
   183  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   184                           LATC equ 010Eh ;# 
   185  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   186                           BORCON equ 0116h ;# 
   187  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   188                           FVRCON equ 0117h ;# 
   189  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   190                           APFCON equ 011Dh ;# 
   191  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   192                           ANSELA equ 018Ch ;# 
   193  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   194                           ANSELB equ 018Dh ;# 
   195  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   196                           ANSELC equ 018Eh ;# 
   197  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   198                           PMADR equ 0191h ;# 
   199  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   200                           PMADRL equ 0191h ;# 
   201  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   202                           PMADRH equ 0192h ;# 
   203  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   204                           PMDAT equ 0193h ;# 
   205  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   206                           PMDATL equ 0193h ;# 
   207  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   208                           PMDATH equ 0194h ;# 
   209  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   210                           PMCON1 equ 0195h ;# 
   211  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   212                           PMCON2 equ 0196h ;# 
   213  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   214                           VREGCON equ 0197h ;# 
   215  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   216                           RCREG equ 0199h ;# 
   217  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   218                           TXREG equ 019Ah ;# 
   219  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   220                           SP1BRG equ 019Bh ;# 
   221  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   222                           SP1BRGL equ 019Bh ;# 
   223  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   224                           SPBRG equ 019Bh ;# 
   225  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   226                           SPBRGL equ 019Bh ;# 
   227  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   228                           SP1BRGH equ 019Ch ;# 
   229  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   230                           SPBRGH equ 019Ch ;# 
   231  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   232                           RCSTA equ 019Dh ;# 
   233  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   234                           TXSTA equ 019Eh ;# 
   235  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   236                           BAUDCON equ 019Fh ;# 
   237  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   238                           WPUB equ 020Dh ;# 
   239  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   240                           WPUE equ 0210h ;# 
   241  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   242                           SSPBUF equ 0211h ;# 
   243  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   244                           SSP1BUF equ 0211h ;# 
   245  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   246                           SSPADD equ 0212h ;# 
   247  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   248                           SSP1ADD equ 0212h ;# 
   249  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   250                           SSPMSK equ 0213h ;# 
   251  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   252                           SSP1MSK equ 0213h ;# 
   253  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   254                           SSPSTAT equ 0214h ;# 
   255  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   256                           SSP1STAT equ 0214h ;# 
   257  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   258                           SSPCON1 equ 0215h ;# 
   259  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   260                           SSPCON equ 0215h ;# 
   261  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   262                           SSP1CON1 equ 0215h ;# 
   263  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   264                           SSPCON2 equ 0216h ;# 
   265  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   266                           SSP1CON2 equ 0216h ;# 
   267  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   268                           SSPCON3 equ 0217h ;# 
   269  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   270                           SSP1CON3 equ 0217h ;# 
   271  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   272                           CCPR1 equ 0291h ;# 
   273  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   274                           CCPR1L equ 0291h ;# 
   275  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   276                           CCPR1H equ 0292h ;# 
   277  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   278                           CCP1CON equ 0293h ;# 
   279  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   280                           CCPR2 equ 0298h ;# 
   281  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   282                           CCPR2L equ 0298h ;# 
   283  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   284                           CCPR2H equ 0299h ;# 
   285  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   286                           CCP2CON equ 029Ah ;# 
   287  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   288                           IOCBP equ 0394h ;# 
   289  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   290                           IOCBN equ 0395h ;# 
   291  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   292                           IOCBF equ 0396h ;# 
   293  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   294                           STATUS_SHAD equ 0FE4h ;# 
   295  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   296                           WREG_SHAD equ 0FE5h ;# 
   297  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   298                           BSR_SHAD equ 0FE6h ;# 
   299  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   300                           PCLATH_SHAD equ 0FE7h ;# 
   301  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   302                           FSR0L_SHAD equ 0FE8h ;# 
   303  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   304                           FSR0H_SHAD equ 0FE9h ;# 
   305  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   306                           FSR1L_SHAD equ 0FEAh ;# 
   307  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   308                           FSR1H_SHAD equ 0FEBh ;# 
   309  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   310                           STKPTR equ 0FEDh ;# 
   311  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   312                           TOSL equ 0FEEh ;# 
   313  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   314                           TOSH equ 0FEFh ;# 
   315  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   316                           INDF0 equ 00h ;# 
   317  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   318                           INDF1 equ 01h ;# 
   319  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   320                           PCL equ 02h ;# 
   321  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   322                           STATUS equ 03h ;# 
   323  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   324                           FSR0L equ 04h ;# 
   325  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   326                           FSR0H equ 05h ;# 
   327  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   328                           FSR1L equ 06h ;# 
   329  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   330                           FSR1H equ 07h ;# 
   331  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   332                           BSR equ 08h ;# 
   333  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   334                           WREG equ 09h ;# 
   335  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   336                           PCLATH equ 0Ah ;# 
   337  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   338                           INTCON equ 0Bh ;# 
   339  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   340                           PORTA equ 0Ch ;# 
   341  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   342                           PORTB equ 0Dh ;# 
   343  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   344                           PORTC equ 0Eh ;# 
   345  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   346                           PORTE equ 010h ;# 
   347  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   348                           PIR1 equ 011h ;# 
   349  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   350                           PIR2 equ 012h ;# 
   351  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   352                           TMR0 equ 015h ;# 
   353  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   354                           TMR1 equ 016h ;# 
   355  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   356                           TMR1L equ 016h ;# 
   357  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   358                           TMR1H equ 017h ;# 
   359  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   360                           T1CON equ 018h ;# 
   361  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   362                           T1GCON equ 019h ;# 
   363  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   364                           TMR2 equ 01Ah ;# 
   365  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   366                           PR2 equ 01Bh ;# 
   367  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   368                           T2CON equ 01Ch ;# 
   369  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   370                           TRISA equ 08Ch ;# 
   371  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   372                           TRISB equ 08Dh ;# 
   373  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   374                           TRISC equ 08Eh ;# 
   375  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   376                           TRISE equ 090h ;# 
   377  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   378                           PIE1 equ 091h ;# 
   379  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   380                           PIE2 equ 092h ;# 
   381  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   382                           OPTION_REG equ 095h ;# 
   383  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   384                           PCON equ 096h ;# 
   385  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   386                           WDTCON equ 097h ;# 
   387  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   388                           OSCCON equ 099h ;# 
   389  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   390                           OSCSTAT equ 09Ah ;# 
   391  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   392                           ADRES equ 09Bh ;# 
   393  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   394                           ADRESL equ 09Bh ;# 
   395  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   396                           ADRESH equ 09Ch ;# 
   397  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   398                           ADCON0 equ 09Dh ;# 
   399  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   400                           ADCON1 equ 09Eh ;# 
   401  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   402                           LATA equ 010Ch ;# 
   403  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   404                           LATB equ 010Dh ;# 
   405  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   406                           LATC equ 010Eh ;# 
   407  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   408                           BORCON equ 0116h ;# 
   409  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   410                           FVRCON equ 0117h ;# 
   411  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   412                           APFCON equ 011Dh ;# 
   413  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   414                           ANSELA equ 018Ch ;# 
   415  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   416                           ANSELB equ 018Dh ;# 
   417  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   418                           ANSELC equ 018Eh ;# 
   419  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   420                           PMADR equ 0191h ;# 
   421  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   422                           PMADRL equ 0191h ;# 
   423  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   424                           PMADRH equ 0192h ;# 
   425  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   426                           PMDAT equ 0193h ;# 
   427  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   428                           PMDATL equ 0193h ;# 
   429  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   430                           PMDATH equ 0194h ;# 
   431  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   432                           PMCON1 equ 0195h ;# 
   433  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   434                           PMCON2 equ 0196h ;# 
   435  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   436                           VREGCON equ 0197h ;# 
   437  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   438                           RCREG equ 0199h ;# 
   439  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   440                           TXREG equ 019Ah ;# 
   441  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   442                           SP1BRG equ 019Bh ;# 
   443  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   444                           SP1BRGL equ 019Bh ;# 
   445  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   446                           SPBRG equ 019Bh ;# 
   447  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   448                           SPBRGL equ 019Bh ;# 
   449  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   450                           SP1BRGH equ 019Ch ;# 
   451  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   452                           SPBRGH equ 019Ch ;# 
   453  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   454                           RCSTA equ 019Dh ;# 
   455  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   456                           TXSTA equ 019Eh ;# 
   457  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   458                           BAUDCON equ 019Fh ;# 
   459  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   460                           WPUB equ 020Dh ;# 
   461  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   462                           WPUE equ 0210h ;# 
   463  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   464                           SSPBUF equ 0211h ;# 
   465  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   466                           SSP1BUF equ 0211h ;# 
   467  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   468                           SSPADD equ 0212h ;# 
   469  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   470                           SSP1ADD equ 0212h ;# 
   471  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   472                           SSPMSK equ 0213h ;# 
   473  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   474                           SSP1MSK equ 0213h ;# 
   475  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   476                           SSPSTAT equ 0214h ;# 
   477  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   478                           SSP1STAT equ 0214h ;# 
   479  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   480                           SSPCON1 equ 0215h ;# 
   481  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   482                           SSPCON equ 0215h ;# 
   483  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   484                           SSP1CON1 equ 0215h ;# 
   485  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   486                           SSPCON2 equ 0216h ;# 
   487  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   488                           SSP1CON2 equ 0216h ;# 
   489  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   490                           SSPCON3 equ 0217h ;# 
   491  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   492                           SSP1CON3 equ 0217h ;# 
   493  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   494                           CCPR1 equ 0291h ;# 
   495  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   496                           CCPR1L equ 0291h ;# 
   497  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   498                           CCPR1H equ 0292h ;# 
   499  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   500                           CCP1CON equ 0293h ;# 
   501  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   502                           CCPR2 equ 0298h ;# 
   503  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   504                           CCPR2L equ 0298h ;# 
   505  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   506                           CCPR2H equ 0299h ;# 
   507  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   508                           CCP2CON equ 029Ah ;# 
   509  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   510                           IOCBP equ 0394h ;# 
   511  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   512                           IOCBN equ 0395h ;# 
   513  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   514                           IOCBF equ 0396h ;# 
   515  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   516                           STATUS_SHAD equ 0FE4h ;# 
   517  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   518                           WREG_SHAD equ 0FE5h ;# 
   519  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   520                           BSR_SHAD equ 0FE6h ;# 
   521  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   522                           PCLATH_SHAD equ 0FE7h ;# 
   523  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   524                           FSR0L_SHAD equ 0FE8h ;# 
   525  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   526                           FSR0H_SHAD equ 0FE9h ;# 
   527  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   528                           FSR1L_SHAD equ 0FEAh ;# 
   529  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   530                           FSR1H_SHAD equ 0FEBh ;# 
   531  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   532                           STKPTR equ 0FEDh ;# 
   533  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   534                           TOSL equ 0FEEh ;# 
   535  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   536                           TOSH equ 0FEFh ;# 
   537  0FEF                     DABS 1,1568,48	;_wInterruptText
   538                           DABS 1,1440,80	;_wInterruptText
   539                           DABS 1,1320,72	;_wInterruptText
   540                           	FNCALL	_main,_WakeTemp
   541                           	FNCALL	_main,_clearDisplay
   542                           	FNCALL	_main,_initLCD
   543                           	FNCALL	_main,_lcdWriteText
   544                           	FNCALL	_main,_memset
   545                           	FNCALL	_main,_moveCursorToHome
   546                           	FNCALL	_main,_powerOnLcd
   547                           	FNCALL	_main,_setCursorOff
   548                           	FNCALL	_main,_setCursorPosition
   549                           	FNCALL	_main,_setNotBlinkingCursor
   550                           	FNCALL	_setNotBlinkingCursor,_writeInsChk
   551                           	FNCALL	_setCursorOff,_writeInsChk
   552                           	FNCALL	_powerOnLcd,_writeInsChk
   553                           	FNCALL	_moveCursorToHome,_writeInsChk
   554                           	FNCALL	_lcdWriteText,_writeTxtChk
   555                           	FNCALL	_writeTxtChk,_SetToSendDataToLCD
   556                           	FNCALL	_writeTxtChk,_setCursorPosition
   557                           	FNCALL	_writeTxtChk,_setData
   558                           	FNCALL	_writeTxtChk,_waitLCDBusy
   559                           	FNCALL	_setCursorPosition,_SetToSendDataToLCD
   560                           	FNCALL	_setCursorPosition,_setData
   561                           	FNCALL	_setCursorPosition,_waitLCDBusy
   562                           	FNCALL	_initLCD,_clearDisplay
   563                           	FNCALL	_initLCD,_setData
   564                           	FNCALL	_initLCD,_writeInsChk
   565                           	FNCALL	_clearDisplay,_writeInsChk
   566                           	FNCALL	_writeInsChk,_waitLCDBusy
   567                           	FNCALL	_writeInsChk,_writeInsNoChk
   568                           	FNCALL	_writeInsNoChk,_SetToSendDataToLCD
   569                           	FNCALL	_writeInsNoChk,_setData
   570                           	FNCALL	_waitLCDBusy,_SetToReadDataFromLCD
   571                           	FNROOT	_main
   572                           	FNCALL	_myint,_strcat
   573                           	FNCALL	_strcat,_strcpy
   574                           	FNCALL	_strcat,_strlen
   575                           	FNCALL	intlevel1,_myint
   576                           	global	intlevel1
   577                           	FNROOT	intlevel1
   578                           	global	main@F2177
   579                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   580                           global __pidataBANK0
   581                           __pidataBANK0:
   582  04BB                     	file	"161518_temp_main.c"
   583                           	line	137
   584                           
   585                           ;initializer for main@F2177
   586                           	retlw	02Fh
   587  04BB  342F               	retlw	low(0)
   588  04BC  3400               	retlw	02Dh
   589  04BD  342D               	retlw	low(0)
   590  04BE  3400               	retlw	06Ch
   591  04BF  346C               	retlw	low(0)
   592  04C0  3400               	retlw	07Ch
   593  04C1  347C               	retlw	low(0)
   594  04C2  3400               	global	_wI2CTxSendPos
   595                           	global	_wI2CTxBufferSize
   596                           	global	_mWritingPosition
   597                           	global	_mCursorDisplayShiftReg
   598                           	global	_mDisplayOnOffReg
   599                           	global	_wI2CTxBuffer
   600                           	global	_wInterruptText
   601                           	global	_PORTAbits
   602                           _PORTAbits	set	0xC
   603  000C                     	global	_PIR2bits
   604                           _PIR2bits	set	0x12
   605  0012                     	global	_PIR1bits
   606                           _PIR1bits	set	0x11
   607  0011                     	global	_PORTA
   608                           _PORTA	set	0xC
   609  000C                     	global	_INTCONbits
   610                           _INTCONbits	set	0xB
   611  000B                     	global	_TRISAbits
   612                           _TRISAbits	set	0x8C
   613  008C                     	global	_PIE2bits
   614                           _PIE2bits	set	0x92
   615  0092                     	global	_PIE1bits
   616                           _PIE1bits	set	0x91
   617  0091                     	global	_TRISC
   618                           _TRISC	set	0x8E
   619  008E                     	global	_TRISA
   620                           _TRISA	set	0x8C
   621  008C                     	global	_OSCCONbits
   622                           _OSCCONbits	set	0x99
   623  0099                     	global	_ANSELCbits
   624                           _ANSELCbits	set	0x18E
   625  018E                     	global	_ANSELA
   626                           _ANSELA	set	0x18C
   627  018C                     	global	_SSPBUF
   628                           _SSPBUF	set	0x211
   629  0211                     	global	_SSPSTATbits
   630                           _SSPSTATbits	set	0x214
   631  0214                     	global	_SSPADD
   632                           _SSPADD	set	0x212
   633  0212                     	global	_SSPCON1bits
   634                           _SSPCON1bits	set	0x215
   635  0215                     	global	_SSPCON2bits
   636                           _SSPCON2bits	set	0x216
   637  0216                     	global	_SSPCON3bits
   638                           _SSPCON3bits	set	0x217
   639  0217                     psect	stringtext1,class=STRCODE,delta=2,noexec
   640                           global __pstringtext1
   641                           __pstringtext1:
   642  0439                     	
   643                           STR_1:	
   644  0439                     	retlw	84	;'T'
   645  0439  3454               	retlw	101	;'e'
   646  043A  3465               	retlw	109	;'m'
   647  043B  346D               	retlw	112	;'p'
   648  043C  3470               	retlw	32	;' '
   649  043D  3420               	retlw	67	;'C'
   650  043E  3443               	retlw	111	;'o'
   651  043F  346F               	retlw	109	;'m'
   652  0440  346D               	retlw	109	;'m'
   653  0441  346D               	retlw	117	;'u'
   654  0442  3475               	retlw	110	;'n'
   655  0443  346E               	retlw	105	;'i'
   656  0444  3469               	retlw	99	;'c'
   657  0445  3463               	retlw	97	;'a'
   658  0446  3461               	retlw	116	;'t'
   659  0447  3474               	retlw	105	;'i'
   660  0448  3469               	retlw	111	;'o'
   661  0449  346F               	retlw	110	;'n'
   662  044A  346E               	retlw	32	;' '
   663  044B  3420               	retlw	116	;'t'
   664  044C  3474               	retlw	101	;'e'
   665  044D  3465               	retlw	115	;'s'
   666  044E  3473               	retlw	116	;'t'
   667  044F  3474               	retlw	32	;' '
   668  0450  3420               	retlw	58	;':'
   669  0451  343A               	retlw	0
   670  0452  3400               psect	stringtext2,class=STRCODE,delta=2,noexec
   671                           global __pstringtext2
   672                           __pstringtext2:
   673  04CB                     	
   674                           STR_2:	
   675  04CB                     	retlw	44	;','
   676  04CB  342C               	retlw	66	;'B'
   677  04CC  3442               	retlw	67	;'C'
   678  04CD  3443               	retlw	76	;'L'
   679  04CE  344C               	retlw	73	;'I'
   680  04CF  3449               	retlw	70	;'F'
   681  04D0  3446               	retlw	0
   682  04D1  3400               psect	stringtext3,class=STRCODE,delta=2,noexec
   683                           global __pstringtext3
   684                           __pstringtext3:
   685  0000                     ; #config settings
   686                           global __CFG_FOSC$INTOSC
   687                           __CFG_FOSC$INTOSC equ 0x0
   688  0000                     global __CFG_WDTE$OFF
   689                           __CFG_WDTE$OFF equ 0x0
   690  0000                     global __CFG_PWRTE$ON
   691                           __CFG_PWRTE$ON equ 0x0
   692  0000                     global __CFG_MCLRE$OFF
   693                           __CFG_MCLRE$OFF equ 0x0
   694  0000                     global __CFG_CP$OFF
   695                           __CFG_CP$OFF equ 0x0
   696  0000                     global __CFG_BOREN$ON
   697                           __CFG_BOREN$ON equ 0x0
   698  0000                     global __CFG_CLKOUTEN$ON
   699                           __CFG_CLKOUTEN$ON equ 0x0
   700  0000                     global __CFG_IESO$OFF
   701                           __CFG_IESO$OFF equ 0x0
   702  0000                     global __CFG_FCMEN$OFF
   703                           __CFG_FCMEN$OFF equ 0x0
   704  0000                     global __CFG_WRT$OFF
   705                           __CFG_WRT$OFF equ 0x0
   706  0000                     global __CFG_VCAPEN$OFF
   707                           __CFG_VCAPEN$OFF equ 0x0
   708  0000                     global __CFG_STVREN$OFF
   709                           __CFG_STVREN$OFF equ 0x0
   710  0000                     global __CFG_BORV$LO
   711                           __CFG_BORV$LO equ 0x0
   712  0000                     global __CFG_LPBOR$OFF
   713                           __CFG_LPBOR$OFF equ 0x0
   714  0000                     global __CFG_LVP$OFF
   715                           __CFG_LVP$OFF equ 0x0
   716  0000                     	file	"C:\Users\dell\AppData\Local\Temp\sfeg."
   717                           	line	#
   718                           psect cinit,class=CODE,delta=2
   719                           global start_initialization
   720                           start_initialization:
   721  007B                     
   722                           global __initialization
   723                           __initialization:
   724  007B                     DABS 1,9000,0,_wInterruptText	;BIGRAM
   725                           psect	bssBANK0,class=BANK0,space=1,noexec
   726                           global __pbssBANK0
   727                           __pbssBANK0:
   728  0020                     _wHexTemp:
   729  0020                            ds      5
   730  0020                     
   731                           _wI2CTxSendPos:
   732  0025                            ds      1
   733  0025                     
   734                           _wI2CTxBufferSize:
   735  0026                            ds      1
   736  0026                     
   737                           _mWritingPosition:
   738  0027                            ds      1
   739  0027                     
   740                           _mCursorDisplayShiftReg:
   741  0028                            ds      1
   742  0028                     
   743                           _mDisplayOnOffReg:
   744  0029                            ds      1
   745  0029                     
   746                           _wI2CTxBuffer:
   747  002A                            ds      20
   748  002A                     
   749                           psect	dataBANK0,class=BANK0,space=1,noexec
   750                           global __pdataBANK0
   751                           __pdataBANK0:
   752  0059                     	file	"161518_temp_main.c"
   753                           	line	137
   754                           main@F2177:
   755  0059                            ds      8
   756  0059                     
   757                           	file	"C:\Users\dell\AppData\Local\Temp\sfeg."
   758                           	line	#
   759                           ; Initialize objects allocated to BANK0
   760                           	global __pidataBANK0,__pdataBANK0
   761                           psect cinit,class=CODE,delta=2,merge=1
   762                           	movlw low(__pidataBANK0)
   763  007B  30BB               	movwf fsr0l
   764  007C  0084               	movlw high(__pidataBANK0)|80h
   765  007D  3084               	movwf fsr0h
   766  007E  0085               	moviw fsr0++
   767  007F  0012               	movwf (__pdataBANK0+0)&07Fh
   768  0080  00D9               	moviw fsr0++
   769  0081  0012               	movwf (__pdataBANK0+1)&07Fh
   770  0082  00DA               	moviw fsr0++
   771  0083  0012               	movwf (__pdataBANK0+2)&07Fh
   772  0084  00DB               	moviw fsr0++
   773  0085  0012               	movwf (__pdataBANK0+3)&07Fh
   774  0086  00DC               	moviw fsr0++
   775  0087  0012               	movwf (__pdataBANK0+4)&07Fh
   776  0088  00DD               	moviw fsr0++
   777  0089  0012               	movwf (__pdataBANK0+5)&07Fh
   778  008A  00DE               	moviw fsr0++
   779  008B  0012               	movwf (__pdataBANK0+6)&07Fh
   780  008C  00DF               	moviw fsr0++
   781  008D  0012               	movwf (__pdataBANK0+7)&07Fh
   782  008E  00E0               	line	#
   783                           psect clrtext,class=CODE,delta=2
   784                           global clear_ram0
   785                           ;	Called with FSR0 containing the base address, and
   786                           ;	btemp/btemp+1 has the size to clear
   787                           clear_ram0:
   788  0483                     	clrwdt			;clear the watchdog before getting into this loop
   789  0483  0064               clrloop0:
   790  0484                     	clrf	indf0		;clear RAM location pointed to by FSR
   791  0484  0180               	addfsr	0,1
   792  0485  3101               	movlw	1
   793  0486  3001               	subwf	btemp,f
   794  0487  02FE               	movlw	0
   795  0488  3000               	subwfb btemp+1,f
   796  0489  3BFF               	movf btemp+1,w
   797  048A  087F               	iorwf btemp,w
   798  048B  047E               	skipz
   799  048C  1D03               	goto clrloop0	;have we reached the end yet?
   800  048D  2C84               	retlw	0		;all done for this memory range, return
   801  048E  3400               ; Clear objects allocated to BIGRAM
   802                           psect cinit,class=CODE,delta=2,merge=1
   803                           	global __pbssBIGRAM
   804                           	movlw	low(__pbssBIGRAM)
   805  008F  3028               	movwf	fsr0l
   806  0090  0084               	movlw	high(__pbssBIGRAM)
   807  0091  3023               	movwf	fsr0h
   808  0092  0085               	movlw	low(0C8h)
   809  0093  30C8               	movwf	btemp
   810  0094  00FE               	movlw	high(0C8h)
   811  0095  3000               	movwf	btemp+1
   812  0096  00FF               	fcall	clear_ram0
   813  0097  3184  2483  3180   ; Clear objects allocated to BANK0
   814                           psect cinit,class=CODE,delta=2,merge=1
   815                           	global __pbssBANK0
   816                           	movlw	low(__pbssBANK0)
   817  009A  3020               	movwf	fsr0l
   818  009B  0084               	movlw	high(__pbssBANK0)
   819  009C  3000               	movwf	fsr0h
   820  009D  0085               	movlw	low(01Eh)
   821  009E  301E               	movwf	btemp
   822  009F  00FE               	movlw	high(01Eh)
   823  00A0  3000               	movwf	btemp+1
   824  00A1  00FF               	fcall	clear_ram0
   825  00A2  3184  2483  3180   psect cinit,class=CODE,delta=2,merge=1
   826                           global end_of_initialization,__end_of__initialization
   827                           
   828                           ;End of C runtime variable initialization code
   829                           
   830                           end_of_initialization:
   831  00A5                     __end_of__initialization:
   832  00A5                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
   833  00A5  107E               movlb 0
   834  00A6  0020               ljmp _main	;jump to C main() function
   835  00A7  3180  28A9         psect	cstackBANK1,class=BANK1,space=1,noexec
   836                           global __pcstackBANK1
   837                           __pcstackBANK1:
   838  00A0                     	global	main@wConv
   839                           main@wConv:	; 8 bytes @ 0x0
   840  00A0                     	ds	8
   841  00A0                     	global	main@wTemp
   842                           main@wTemp:	; 2 bytes @ 0x8
   843  00A8                     	ds	2
   844  00A8                     	global	main@wCounter
   845                           main@wCounter:	; 2 bytes @ 0xA
   846  00AA                     	ds	2
   847  00AA                     psect	cstackCOMMON,class=COMMON,space=1,noexec
   848                           global __pcstackCOMMON
   849                           __pcstackCOMMON:
   850  0070                     ?_initLCD:	; 1 bytes @ 0x0
   851  0070                     ?_clearDisplay:	; 1 bytes @ 0x0
   852  0070                     ?_powerOnLcd:	; 1 bytes @ 0x0
   853  0070                     ?_setCursorOff:	; 1 bytes @ 0x0
   854  0070                     ?_moveCursorToHome:	; 1 bytes @ 0x0
   855  0070                     ?_setNotBlinkingCursor:	; 1 bytes @ 0x0
   856  0070                     ?_setCursorPosition:	; 1 bytes @ 0x0
   857  0070                     ?_setData:	; 1 bytes @ 0x0
   858  0070                     ?_writeInsChk:	; 1 bytes @ 0x0
   859  0070                     ?_writeTxtChk:	; 1 bytes @ 0x0
   860  0070                     ?_SetToSendDataToLCD:	; 1 bytes @ 0x0
   861  0070                     ?_waitLCDBusy:	; 1 bytes @ 0x0
   862  0070                     ?_writeInsNoChk:	; 1 bytes @ 0x0
   863  0070                     ?_WakeTemp:	; 1 bytes @ 0x0
   864  0070                     ?_main:	; 1 bytes @ 0x0
   865  0070                     ?_myint:	; 1 bytes @ 0x0
   866  0070                     ?_SetToReadDataFromLCD:	; 1 bytes @ 0x0
   867  0070                     	global	?_strlen
   868                           ?_strlen:	; 2 bytes @ 0x0
   869  0070                     	global	strlen@s
   870                           strlen@s:	; 2 bytes @ 0x0
   871  0070                     	ds	2
   872  0070                     ??_strlen:	; 1 bytes @ 0x2
   873  0072                     	ds	2
   874  0072                     	global	strlen@a
   875                           strlen@a:	; 2 bytes @ 0x4
   876  0074                     	ds	2
   877  0074                     ?_strcpy:	; 2 bytes @ 0x6
   878  0076                     	global	strcpy@dest
   879                           strcpy@dest:	; 2 bytes @ 0x6
   880  0076                     	ds	2
   881  0076                     	global	strcpy@src
   882                           strcpy@src:	; 2 bytes @ 0x8
   883  0078                     	ds	2
   884  0078                     ??_strcpy:	; 1 bytes @ 0xA
   885  007A                     	ds	4
   886  007A                     ??_strcat:	; 1 bytes @ 0xE
   887  007E                     psect	cstackBANK0,class=BANK0,space=1,noexec
   888                           global __pcstackBANK0
   889                           __pcstackBANK0:
   890  003E                     	global	strcpy@s
   891                           strcpy@s:	; 2 bytes @ 0x0
   892  003E                     	ds	2
   893  003E                     	global	strcpy@d
   894                           strcpy@d:	; 2 bytes @ 0x2
   895  0040                     	ds	2
   896  0040                     ?_strcat:	; 2 bytes @ 0x4
   897  0042                     	global	strcat@dest
   898                           strcat@dest:	; 2 bytes @ 0x4
   899  0042                     	ds	2
   900  0042                     	global	strcat@src
   901                           strcat@src:	; 2 bytes @ 0x6
   902  0044                     	ds	2
   903  0044                     ??_myint:	; 1 bytes @ 0x8
   904  0046                     	ds	1
   905  0046                     ??_setData:	; 1 bytes @ 0x9
   906  0047                     ??_SetToSendDataToLCD:	; 1 bytes @ 0x9
   907  0047                     ??_waitLCDBusy:	; 1 bytes @ 0x9
   908  0047                     ??_WakeTemp:	; 1 bytes @ 0x9
   909  0047                     ??_SetToReadDataFromLCD:	; 1 bytes @ 0x9
   910  0047                     ?_memset:	; 2 bytes @ 0x9
   911  0047                     	global	memset@dest
   912                           memset@dest:	; 2 bytes @ 0x9
   913  0047                     	ds	2
   914  0047                     	global	setData@iValue
   915                           setData@iValue:	; 1 bytes @ 0xB
   916  0049                     	global	memset@c
   917                           memset@c:	; 2 bytes @ 0xB
   918  0049                     	ds	1
   919  0049                     ??_writeInsNoChk:	; 1 bytes @ 0xC
   920  004A                     	global	waitLCDBusy@busyFlag
   921                           waitLCDBusy@busyFlag:	; 2 bytes @ 0xC
   922  004A                     	ds	1
   923  004A                     	global	writeInsNoChk@iOpCode
   924                           writeInsNoChk@iOpCode:	; 1 bytes @ 0xD
   925  004B                     	global	memset@n
   926                           memset@n:	; 2 bytes @ 0xD
   927  004B                     	ds	1
   928  004B                     ??_setCursorPosition:	; 1 bytes @ 0xE
   929  004C                     ??_writeInsChk:	; 1 bytes @ 0xE
   930  004C                     	global	writeInsChk@iOpCode
   931                           writeInsChk@iOpCode:	; 1 bytes @ 0xE
   932  004C                     	ds	1
   933  004C                     ??_memset:	; 1 bytes @ 0xF
   934  004D                     ??_initLCD:	; 1 bytes @ 0xF
   935  004D                     ??_clearDisplay:	; 1 bytes @ 0xF
   936  004D                     ??_powerOnLcd:	; 1 bytes @ 0xF
   937  004D                     ??_setCursorOff:	; 1 bytes @ 0xF
   938  004D                     ??_moveCursorToHome:	; 1 bytes @ 0xF
   939  004D                     ??_setNotBlinkingCursor:	; 1 bytes @ 0xF
   940  004D                     	global	setCursorPosition@iPosition
   941                           setCursorPosition@iPosition:	; 1 bytes @ 0xF
   942  004D                     	ds	1
   943  004D                     ??_writeTxtChk:	; 1 bytes @ 0x10
   944  004E                     	ds	2
   945  004E                     	global	writeTxtChk@iOpCode
   946                           writeTxtChk@iOpCode:	; 1 bytes @ 0x12
   947  0050                     	ds	1
   948  0050                     ?_lcdWriteText:	; 1 bytes @ 0x13
   949  0051                     	global	lcdWriteText@iText
   950                           lcdWriteText@iText:	; 2 bytes @ 0x13
   951  0051                     	global	memset@k
   952                           memset@k:	; 2 bytes @ 0x13
   953  0051                     	ds	2
   954  0051                     ??_lcdWriteText:	; 1 bytes @ 0x15
   955  0053                     	global	memset@s
   956                           memset@s:	; 2 bytes @ 0x15
   957  0053                     	ds	3
   958  0053                     	global	lcdWriteText@wCharReadingPos
   959                           lcdWriteText@wCharReadingPos:	; 1 bytes @ 0x18
   960  0056                     	ds	1
   961  0056                     ??_main:	; 1 bytes @ 0x19
   962  0057                     	ds	2
   963  0057                     ;!
   964                           ;!Data Sizes:
   965                           ;!    Strings     33
   966                           ;!    Constant    0
   967                           ;!    Data        8
   968                           ;!    BSS         30
   969                           ;!    Persistent  0
   970                           ;!    Stack       0
   971                           ;!
   972                           ;!Auto Spaces:
   973                           ;!    Space          Size  Autos    Used
   974                           ;!    COMMON           14     14      14
   975                           ;!    BANK0            80     27      65
   976                           ;!    BANK1            80     12      12
   977                           ;!    BANK2            80      0       0
   978                           ;!    BANK3            80      0       0
   979                           ;!    BANK4            80      0       0
   980                           ;!    BANK5            80      0       0
   981                           ;!    BANK6            80      0       0
   982                           ;!    BANK7            80      0       0
   983                           ;!    BANK8            80      0       0
   984                           ;!    BANK9            80      0       0
   985                           ;!    BANK10            8      0       0
   986                           ;!    BANK11            0      0       0
   987                           ;!    BANK12            0      0       0
   988                           
   989                           ;!
   990                           ;!Pointer List with Targets:
   991                           ;!
   992                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 200
   993                           ;!		 -> wInterruptText(BIGRAM[200]), 
   994                           ;!
   995                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 200
   996                           ;!		 -> wInterruptText(BIGRAM[200]), 
   997                           ;!
   998                           ;!    strcpy@dest	PTR unsigned char  size(2) Largest target is 200
   999                           ;!		 -> wInterruptText(BIGRAM[200]), 
  1000                           ;!
  1001                           ;!    strcpy@d	PTR unsigned char  size(2) Largest target is 200
  1002                           ;!		 -> wInterruptText(BIGRAM[200]), 
  1003                           ;!
  1004                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 7
  1005                           ;!		 -> STR_2(CODE[7]), 
  1006                           ;!
  1007                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 7
  1008                           ;!		 -> STR_2(CODE[7]), 
  1009                           ;!
  1010                           ;!    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
  1011                           ;!		 -> wInterruptText(BIGRAM[200]), 
  1012                           ;!
  1013                           ;!    strcat@src	PTR const unsigned char  size(2) Largest target is 7
  1014                           ;!		 -> STR_2(CODE[7]), 
  1015                           ;!
  1016                           ;!    strcat@dest	PTR unsigned char  size(2) Largest target is 200
  1017                           ;!		 -> wInterruptText(BIGRAM[200]), 
  1018                           ;!
  1019                           ;!    memset@dest	PTR void  size(2) Largest target is 200
  1020                           ;!		 -> wInterruptText(BIGRAM[200]), wI2CTxBuffer(BANK0[20]), 
  1021                           ;!
  1022                           ;!    memset@s	PTR unsigned char  size(2) Largest target is 200
  1023                           ;!		 -> wInterruptText(BIGRAM[200]), wI2CTxBuffer(BANK0[20]), 
  1024                           ;!
  1025                           ;!    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 26
  1026                           ;!		 -> main@wConv(BANK1[8]), STR_1(CODE[26]), 
  1027                           ;!
  1028                           ;!    sp__strcat	PTR unsigned char  size(2) Largest target is 200
  1029                           ;!		 -> wInterruptText(BIGRAM[200]), 
  1030                           ;!
  1031                           ;!    sp__memset	PTR void  size(2) Largest target is 200
  1032                           ;!		 -> wInterruptText(BIGRAM[200]), wI2CTxBuffer(BANK0[20]), 
  1033                           ;!
  1034                           
  1035                           
  1036                           ;!
  1037                           ;!Critical Paths under _main in COMMON
  1038                           ;!
  1039                           ;!    None.
  1040                           ;!
  1041                           ;!Critical Paths under _myint in COMMON
  1042                           ;!
  1043                           ;!    _strcat->_strcpy
  1044                           ;!    _strcpy->_strlen
  1045                           ;!
  1046                           ;!Critical Paths under _main in BANK0
  1047                           ;!
  1048                           ;!    _main->_lcdWriteText
  1049                           ;!    _setNotBlinkingCursor->_writeInsChk
  1050                           ;!    _setCursorOff->_writeInsChk
  1051                           ;!    _powerOnLcd->_writeInsChk
  1052                           ;!    _moveCursorToHome->_writeInsChk
  1053                           ;!    _lcdWriteText->_writeTxtChk
  1054                           ;!    _writeTxtChk->_setCursorPosition
  1055                           ;!    _setCursorPosition->_waitLCDBusy
  1056                           ;!    _initLCD->_writeInsChk
  1057                           ;!    _clearDisplay->_writeInsChk
  1058                           ;!    _writeInsChk->_waitLCDBusy
  1059                           ;!    _writeInsChk->_writeInsNoChk
  1060                           ;!    _writeInsNoChk->_setData
  1061                           ;!
  1062                           ;!Critical Paths under _myint in BANK0
  1063                           ;!
  1064                           ;!    _myint->_strcat
  1065                           ;!    _strcat->_strcpy
  1066                           ;!
  1067                           ;!Critical Paths under _main in BANK1
  1068                           ;!
  1069                           ;!    None.
  1070                           ;!
  1071                           ;!Critical Paths under _myint in BANK1
  1072                           ;!
  1073                           ;!    None.
  1074                           ;!
  1075                           ;!Critical Paths under _main in BANK2
  1076                           ;!
  1077                           ;!    None.
  1078                           ;!
  1079                           ;!Critical Paths under _myint in BANK2
  1080                           ;!
  1081                           ;!    None.
  1082                           ;!
  1083                           ;!Critical Paths under _main in BANK3
  1084                           ;!
  1085                           ;!    None.
  1086                           ;!
  1087                           ;!Critical Paths under _myint in BANK3
  1088                           ;!
  1089                           ;!    None.
  1090                           ;!
  1091                           ;!Critical Paths under _main in BANK4
  1092                           ;!
  1093                           ;!    None.
  1094                           ;!
  1095                           ;!Critical Paths under _myint in BANK4
  1096                           ;!
  1097                           ;!    None.
  1098                           ;!
  1099                           ;!Critical Paths under _main in BANK5
  1100                           ;!
  1101                           ;!    None.
  1102                           ;!
  1103                           ;!Critical Paths under _myint in BANK5
  1104                           ;!
  1105                           ;!    None.
  1106                           ;!
  1107                           ;!Critical Paths under _main in BANK6
  1108                           ;!
  1109                           ;!    None.
  1110                           ;!
  1111                           ;!Critical Paths under _myint in BANK6
  1112                           ;!
  1113                           ;!    None.
  1114                           ;!
  1115                           ;!Critical Paths under _main in BANK7
  1116                           ;!
  1117                           ;!    None.
  1118                           ;!
  1119                           ;!Critical Paths under _myint in BANK7
  1120                           ;!
  1121                           ;!    None.
  1122                           ;!
  1123                           ;!Critical Paths under _main in BANK8
  1124                           ;!
  1125                           ;!    None.
  1126                           ;!
  1127                           ;!Critical Paths under _myint in BANK8
  1128                           ;!
  1129                           ;!    None.
  1130                           ;!
  1131                           ;!Critical Paths under _main in BANK9
  1132                           ;!
  1133                           ;!    None.
  1134                           ;!
  1135                           ;!Critical Paths under _myint in BANK9
  1136                           ;!
  1137                           ;!    None.
  1138                           ;!
  1139                           ;!Critical Paths under _main in BANK10
  1140                           ;!
  1141                           ;!    None.
  1142                           ;!
  1143                           ;!Critical Paths under _myint in BANK10
  1144                           ;!
  1145                           ;!    None.
  1146                           ;!
  1147                           ;!Critical Paths under _main in BANK11
  1148                           ;!
  1149                           ;!    None.
  1150                           ;!
  1151                           ;!Critical Paths under _myint in BANK11
  1152                           ;!
  1153                           ;!    None.
  1154                           ;!
  1155                           ;!Critical Paths under _main in BANK12
  1156                           ;!
  1157                           ;!    None.
  1158                           ;!
  1159                           ;!Critical Paths under _myint in BANK12
  1160                           ;!
  1161                           ;!    None.
  1162                           
  1163 ;;
  1164 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1165 ;;
  1166                           
  1167                           ;!
  1168                           ;!Call Graph Tables:
  1169                           ;!
  1170                           ;! ---------------------------------------------------------------------------------
  1171                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1172                           ;! ---------------------------------------------------------------------------------
  1173                           ;! (0) _main                                                14    14      0    4645
  1174                           ;!                                             25 BANK0      2     2      0
  1175                           ;!                                              0 BANK1     12    12      0
  1176                           ;!                           _WakeTemp
  1177                           ;!                       _clearDisplay
  1178                           ;!                            _initLCD
  1179                           ;!                       _lcdWriteText
  1180                           ;!                             _memset
  1181                           ;!                   _moveCursorToHome
  1182                           ;!                         _powerOnLcd
  1183                           ;!                       _setCursorOff
  1184                           ;!                  _setCursorPosition
  1185                           ;!               _setNotBlinkingCursor
  1186                           ;! ---------------------------------------------------------------------------------
  1187                           ;! (1) _setNotBlinkingCursor                                 1     1      0     254
  1188                           ;!                                             15 BANK0      1     1      0
  1189                           ;!                        _writeInsChk
  1190                           ;! ---------------------------------------------------------------------------------
  1191                           ;! (1) _setCursorOff                                         1     1      0     254
  1192                           ;!                                             15 BANK0      1     1      0
  1193                           ;!                        _writeInsChk
  1194                           ;! ---------------------------------------------------------------------------------
  1195                           ;! (1) _powerOnLcd                                           1     1      0     254
  1196                           ;!                                             15 BANK0      1     1      0
  1197                           ;!                        _writeInsChk
  1198                           ;! ---------------------------------------------------------------------------------
  1199                           ;! (1) _moveCursorToHome                                     0     0      0     254
  1200                           ;!                        _writeInsChk
  1201                           ;! ---------------------------------------------------------------------------------
  1202                           ;! (1) _memset                                              14     8      6    1557
  1203                           ;!                                              9 BANK0     14     8      6
  1204                           ;! ---------------------------------------------------------------------------------
  1205                           ;! (1) _lcdWriteText                                         6     4      2     787
  1206                           ;!                                             19 BANK0      6     4      2
  1207                           ;!                        _writeTxtChk
  1208                           ;! ---------------------------------------------------------------------------------
  1209                           ;! (2) _writeTxtChk                                          3     3      0     477
  1210                           ;!                                             16 BANK0      3     3      0
  1211                           ;!                 _SetToSendDataToLCD
  1212                           ;!                  _setCursorPosition
  1213                           ;!                            _setData
  1214                           ;!                        _waitLCDBusy
  1215                           ;! ---------------------------------------------------------------------------------
  1216                           ;! (1) _setCursorPosition                                    2     2      0     254
  1217                           ;!                                             14 BANK0      2     2      0
  1218                           ;!                 _SetToSendDataToLCD
  1219                           ;!                            _setData
  1220                           ;!                        _waitLCDBusy
  1221                           ;! ---------------------------------------------------------------------------------
  1222                           ;! (1) _initLCD                                              1     1      0     632
  1223                           ;!                                             15 BANK0      1     1      0
  1224                           ;!                       _clearDisplay
  1225                           ;!                            _setData
  1226                           ;!                        _writeInsChk
  1227                           ;! ---------------------------------------------------------------------------------
  1228                           ;! (2) _clearDisplay                                         0     0      0     254
  1229                           ;!                        _writeInsChk
  1230                           ;! ---------------------------------------------------------------------------------
  1231                           ;! (2) _writeInsChk                                          1     1      0     254
  1232                           ;!                                             14 BANK0      1     1      0
  1233                           ;!                        _waitLCDBusy
  1234                           ;!                      _writeInsNoChk
  1235                           ;! ---------------------------------------------------------------------------------
  1236                           ;! (3) _writeInsNoChk                                        2     2      0     186
  1237                           ;!                                             12 BANK0      2     2      0
  1238                           ;!                 _SetToSendDataToLCD
  1239                           ;!                            _setData
  1240                           ;! ---------------------------------------------------------------------------------
  1241                           ;! (4) _setData                                              3     3      0     124
  1242                           ;!                                              9 BANK0      3     3      0
  1243                           ;! ---------------------------------------------------------------------------------
  1244                           ;! (4) _SetToSendDataToLCD                                   0     0      0       0
  1245                           ;! ---------------------------------------------------------------------------------
  1246                           ;! (3) _waitLCDBusy                                          5     5      0      37
  1247                           ;!                                              9 BANK0      5     5      0
  1248                           ;!               _SetToReadDataFromLCD
  1249                           ;! ---------------------------------------------------------------------------------
  1250                           ;! (4) _SetToReadDataFromLCD                                 0     0      0       0
  1251                           ;! ---------------------------------------------------------------------------------
  1252                           ;! (1) _WakeTemp                                             1     1      0       0
  1253                           ;!                                              9 BANK0      1     1      0
  1254                           ;! ---------------------------------------------------------------------------------
  1255                           ;! Estimated maximum stack depth 4
  1256                           ;! ---------------------------------------------------------------------------------
  1257                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1258                           ;! ---------------------------------------------------------------------------------
  1259                           ;! (6) _myint                                                1     1      0     638
  1260                           ;!                                              8 BANK0      1     1      0
  1261                           ;!                             _strcat
  1262                           ;! ---------------------------------------------------------------------------------
  1263                           ;! (7) _strcat                                               4     0      4     638
  1264                           ;!                                              4 BANK0      4     0      4
  1265                           ;!                             _strcpy
  1266                           ;!                             _strlen
  1267                           ;! ---------------------------------------------------------------------------------
  1268                           ;! (8) _strlen                                               6     4      2     166
  1269                           ;!                                              0 COMMON     6     4      2
  1270                           ;! ---------------------------------------------------------------------------------
  1271                           ;! (8) _strcpy                                              12     8      4     248
  1272                           ;!                                              6 COMMON     8     4      4
  1273                           ;!                                              0 BANK0      4     4      0
  1274                           ;!                             _strlen (ARG)
  1275                           ;! ---------------------------------------------------------------------------------
  1276                           ;! Estimated maximum stack depth 8
  1277                           ;! ---------------------------------------------------------------------------------
  1278                           ;!
  1279                           ;! Call Graph Graphs:
  1280                           ;!
  1281                           ;! _main (ROOT)
  1282                           ;!   _WakeTemp
  1283                           ;!   _clearDisplay
  1284                           ;!     _writeInsChk
  1285                           ;!       _waitLCDBusy
  1286                           ;!         _SetToReadDataFromLCD
  1287                           ;!       _writeInsNoChk
  1288                           ;!         _SetToSendDataToLCD
  1289                           ;!         _setData
  1290                           ;!   _initLCD
  1291                           ;!     _clearDisplay
  1292                           ;!       _writeInsChk
  1293                           ;!         _waitLCDBusy
  1294                           ;!           _SetToReadDataFromLCD
  1295                           ;!         _writeInsNoChk
  1296                           ;!           _SetToSendDataToLCD
  1297                           ;!           _setData
  1298                           ;!     _setData
  1299                           ;!     _writeInsChk
  1300                           ;!       _waitLCDBusy
  1301                           ;!         _SetToReadDataFromLCD
  1302                           ;!       _writeInsNoChk
  1303                           ;!         _SetToSendDataToLCD
  1304                           ;!         _setData
  1305                           ;!   _lcdWriteText
  1306                           ;!     _writeTxtChk
  1307                           ;!       _SetToSendDataToLCD
  1308                           ;!       _setCursorPosition
  1309                           ;!         _SetToSendDataToLCD
  1310                           ;!         _setData
  1311                           ;!         _waitLCDBusy
  1312                           ;!           _SetToReadDataFromLCD
  1313                           ;!       _setData
  1314                           ;!       _waitLCDBusy
  1315                           ;!         _SetToReadDataFromLCD
  1316                           ;!   _memset
  1317                           ;!   _moveCursorToHome
  1318                           ;!     _writeInsChk
  1319                           ;!       _waitLCDBusy
  1320                           ;!         _SetToReadDataFromLCD
  1321                           ;!       _writeInsNoChk
  1322                           ;!         _SetToSendDataToLCD
  1323                           ;!         _setData
  1324                           ;!   _powerOnLcd
  1325                           ;!     _writeInsChk
  1326                           ;!       _waitLCDBusy
  1327                           ;!         _SetToReadDataFromLCD
  1328                           ;!       _writeInsNoChk
  1329                           ;!         _SetToSendDataToLCD
  1330                           ;!         _setData
  1331                           ;!   _setCursorOff
  1332                           ;!     _writeInsChk
  1333                           ;!       _waitLCDBusy
  1334                           ;!         _SetToReadDataFromLCD
  1335                           ;!       _writeInsNoChk
  1336                           ;!         _SetToSendDataToLCD
  1337                           ;!         _setData
  1338                           ;!   _setCursorPosition
  1339                           ;!     _SetToSendDataToLCD
  1340                           ;!     _setData
  1341                           ;!     _waitLCDBusy
  1342                           ;!       _SetToReadDataFromLCD
  1343                           ;!   _setNotBlinkingCursor
  1344                           ;!     _writeInsChk
  1345                           ;!       _waitLCDBusy
  1346                           ;!         _SetToReadDataFromLCD
  1347                           ;!       _writeInsNoChk
  1348                           ;!         _SetToSendDataToLCD
  1349                           ;!         _setData
  1350                           ;!
  1351                           ;! _myint (ROOT)
  1352                           ;!   _strcat
  1353                           ;!     _strcpy
  1354                           ;!       _strlen (ARG)
  1355                           ;!     _strlen
  1356                           ;!
  1357                           
  1358                           ;! Address spaces:
  1359                           
  1360                           ;!Name               Size   Autos  Total    Cost      Usage
  1361                           ;!BIGRAM             3F0      0       0       0        0.0%
  1362                           ;!NULL                 0      0       0       0        0.0%
  1363                           ;!CODE                 0      0       0       0        0.0%
  1364                           ;!BITCOMMON            E      0       0       1        0.0%
  1365                           ;!BITSFR0              0      0       0       1        0.0%
  1366                           ;!SFR0                 0      0       0       1        0.0%
  1367                           ;!COMMON               E      E       E       2      100.0%
  1368                           ;!BITSFR1              0      0       0       2        0.0%
  1369                           ;!SFR1                 0      0       0       2        0.0%
  1370                           ;!BITSFR2              0      0       0       3        0.0%
  1371                           ;!SFR2                 0      0       0       3        0.0%
  1372                           ;!STACK                0      0       0       3        0.0%
  1373                           ;!BITBANK0            50      0       0       4        0.0%
  1374                           ;!BITSFR3              0      0       0       4        0.0%
  1375                           ;!SFR3                 0      0       0       4        0.0%
  1376                           ;!BANK0               50     1B      41       5       81.3%
  1377                           ;!BITSFR4              0      0       0       5        0.0%
  1378                           ;!SFR4                 0      0       0       5        0.0%
  1379                           ;!BITBANK1            50      0       0       6        0.0%
  1380                           ;!BITSFR5              0      0       0       6        0.0%
  1381                           ;!SFR5                 0      0       0       6        0.0%
  1382                           ;!BANK1               50      C       C       7       15.0%
  1383                           ;!BITSFR6              0      0       0       7        0.0%
  1384                           ;!SFR6                 0      0       0       7        0.0%
  1385                           ;!BITBANK2            50      0       0       8        0.0%
  1386                           ;!BITSFR7              0      0       0       8        0.0%
  1387                           ;!SFR7                 0      0       0       8        0.0%
  1388                           ;!BANK2               50      0       0       9        0.0%
  1389                           ;!BITSFR8              0      0       0       9        0.0%
  1390                           ;!SFR8                 0      0       0       9        0.0%
  1391                           ;!BITBANK3            50      0       0      10        0.0%
  1392                           ;!BITSFR9              0      0       0      10        0.0%
  1393                           ;!SFR9                 0      0       0      10        0.0%
  1394                           ;!BANK3               50      0       0      11        0.0%
  1395                           ;!BITSFR10             0      0       0      11        0.0%
  1396                           ;!SFR10                0      0       0      11        0.0%
  1397                           ;!BITBANK4            50      0       0      12        0.0%
  1398                           ;!BITSFR11             0      0       0      12        0.0%
  1399                           ;!SFR11                0      0       0      12        0.0%
  1400                           ;!BANK4               50      0       0      13        0.0%
  1401                           ;!BITSFR12             0      0       0      13        0.0%
  1402                           ;!SFR12                0      0       0      13        0.0%
  1403                           ;!BITBANK5            50      0       0      14        0.0%
  1404                           ;!BITSFR13             0      0       0      14        0.0%
  1405                           ;!SFR13                0      0       0      14        0.0%
  1406                           ;!BANK5               50      0       0      15        0.0%
  1407                           ;!BITSFR14             0      0       0      15        0.0%
  1408                           ;!SFR14                0      0       0      15        0.0%
  1409                           ;!BITBANK6            50      0       0      16        0.0%
  1410                           ;!BITSFR15             0      0       0      16        0.0%
  1411                           ;!SFR15                0      0       0      16        0.0%
  1412                           ;!BANK6               50      0       0      17        0.0%
  1413                           ;!BITSFR16             0      0       0      17        0.0%
  1414                           ;!SFR16                0      0       0      17        0.0%
  1415                           ;!BITBANK7            50      0       0      18        0.0%
  1416                           ;!BITSFR17             0      0       0      18        0.0%
  1417                           ;!SFR17                0      0       0      18        0.0%
  1418                           ;!BANK7               50      0       0      19        0.0%
  1419                           ;!BITSFR18             0      0       0      19        0.0%
  1420                           ;!SFR18                0      0       0      19        0.0%
  1421                           ;!BITSFR19             0      0       0      20        0.0%
  1422                           ;!SFR19                0      0       0      20        0.0%
  1423                           ;!ABS                  0      0      5B      20        0.0%
  1424                           ;!BITBANK8            50      0       0      21        0.0%
  1425                           ;!BITSFR20             0      0       0      21        0.0%
  1426                           ;!SFR20                0      0       0      21        0.0%
  1427                           ;!BANK8               50      0       0      22        0.0%
  1428                           ;!BITSFR21             0      0       0      22        0.0%
  1429                           ;!SFR21                0      0       0      22        0.0%
  1430                           ;!BITBANK9            50      0       0      23        0.0%
  1431                           ;!BITSFR22             0      0       0      23        0.0%
  1432                           ;!SFR22                0      0       0      23        0.0%
  1433                           ;!BANK9               50      0       0      24        0.0%
  1434                           ;!BITSFR23             0      0       0      24        0.0%
  1435                           ;!SFR23                0      0       0      24        0.0%
  1436                           ;!BITBANK10           50      0       0      25        0.0%
  1437                           ;!BITSFR24             0      0       0      25        0.0%
  1438                           ;!SFR24                0      0       0      25        0.0%
  1439                           ;!BANK10               8      0       0      26        0.0%
  1440                           ;!BITSFR25             0      0       0      26        0.0%
  1441                           ;!SFR25                0      0       0      26        0.0%
  1442                           ;!BITBANK11           50      0       0      27        0.0%
  1443                           ;!BITSFR26             0      0       0      27        0.0%
  1444                           ;!SFR26                0      0       0      27        0.0%
  1445                           ;!BITSFR27             0      0       0      28        0.0%
  1446                           ;!SFR27                0      0       0      28        0.0%
  1447                           ;!BANK11               0      0       0      28        0.0%
  1448                           ;!BITBANK12           30      0       0      29        0.0%
  1449                           ;!BITSFR28             0      0       0      29        0.0%
  1450                           ;!SFR28                0      0       0      29        0.0%
  1451                           ;!BITSFR29             0      0       0      30        0.0%
  1452                           ;!SFR29                0      0       0      30        0.0%
  1453                           ;!BANK12               0      0       0      30        0.0%
  1454                           ;!BITSFR30             0      0       0      31        0.0%
  1455                           ;!SFR30                0      0       0      31        0.0%
  1456                           ;!DATA                 0      0      5B      31        0.0%
  1457                           ;!BITSFR31             0      0       0      32        0.0%
  1458                           ;!SFR31                0      0       0      32        0.0%
  1459                           
  1460                           	global	_main
  1461                           
  1462 ;; *************** function _main *****************
  1463 ;; Defined at:
  1464 ;;		line 79 in file "161518_temp_main.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;		None
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  wConv           8    0[BANK1 ] unsigned char [8]
  1469 ;;  wCounter        2   10[BANK1 ] int 
  1470 ;;  wTemp           2    8[BANK1 ] int 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : B1F/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  1480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1481 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
       0       0
  1482 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  1483 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
       0       0
  1484 ;;Total ram usage:       14 bytes
  1485 ;; Hardware stack levels required when called:    8
  1486 ;; This function calls:
  1487 ;;		_WakeTemp
  1488 ;;		_clearDisplay
  1489 ;;		_initLCD
  1490 ;;		_lcdWriteText
  1491 ;;		_memset
  1492 ;;		_moveCursorToHome
  1493 ;;		_powerOnLcd
  1494 ;;		_setCursorOff
  1495 ;;		_setCursorPosition
  1496 ;;		_setNotBlinkingCursor
  1497 ;; This function is called by:
  1498 ;;		Startup code after reset
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  1502                           	file	"161518_temp_main.c"
  1503                           	line	79
  1504                           global __pmaintext
  1505                           __pmaintext:	;psect for function _main
  1506  00A9                     psect	maintext
  1507                           	file	"161518_temp_main.c"
  1508                           	line	79
  1509                           	global	__size_of_main
  1510                           	__size_of_main	equ	__end_of_main-_main
  1511  00FC                     	
  1512                           _main:	
  1513  00A9                     ;incstack = 0
  1514                           	opt	stack 8
  1515                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1516                           	line	81
  1517                           	
  1518                           l1744:	
  1519  00A9                     	movlw	low(9000)
  1520  00A9  3028               	movlb 0	; select bank0
  1521  00AA  0020               	movwf	(memset@dest)
  1522  00AB  00C7               	movlw	high(9000)
  1523  00AC  3023               	movwf	((memset@dest))+1
  1524  00AD  00C8               	movlw	0
  1525  00AE  3000               	movwf	(memset@c)
  1526  00AF  00C9               	movwf	(memset@c+1)
  1527  00B0  00CA               	movlw	0C8h
  1528  00B1  30C8               	movwf	(memset@n)
  1529  00B2  00CB               	movlw	0
  1530  00B3  3000               	movwf	((memset@n))+1
  1531  00B4  00CC               	fcall	_memset
  1532  00B5  3181  21A5  3180   	line	83
  1533                           	
  1534                           l1746:	
  1535  00B8                     	movlw	(0Fh & ((1<<4)-1))<<3
  1536  00B8  3078               	movlb 1	; select bank1
  1537  00B9  0021               	iorwf	(153)^080h,f	;volatile
  1538  00BA  0499               	line	84
  1539                           	
  1540                           l1748:	
  1541  00BB                     	movlw	(03h & ((1<<2)-1))<<0
  1542  00BB  3003               	iorwf	(153)^080h,f	;volatile
  1543  00BC  0499               	line	85
  1544                           	
  1545                           l1750:	
  1546  00BD                     	bcf	(11),7	;volatile
  1547  00BD  138B               	line	86
  1548                           	
  1549                           l1752:	
  1550  00BE                     	movlb 0	; select bank0
  1551  00BE  0020               	clrf	(12)	;volatile
  1552  00BF  018C               	line	88
  1553                           	
  1554                           l1754:	
  1555  00C0                     	movlw	low(_wI2CTxBuffer)
  1556  00C0  302A               	movwf	(memset@dest)
  1557  00C1  00C7               	movlw	high(_wI2CTxBuffer)
  1558  00C2  3000               	movwf	(memset@dest+1)
  1559  00C3  00C8               	movlw	0
  1560  00C4  3000               	movwf	(memset@c)
  1561  00C5  00C9               	movwf	(memset@c+1)
  1562  00C6  00CA               	movlw	014h
  1563  00C7  3014               	movwf	(memset@n)
  1564  00C8  00CB               	movlw	0
  1565  00C9  3000               	movwf	((memset@n))+1
  1566  00CA  00CC               	fcall	_memset
  1567  00CB  3181  21A5  3180   	line	89
  1568                           	movlb 0	; select bank0
  1569  00CE  0020               	clrf	(_wI2CTxBufferSize)
  1570  00CF  01A6               	line	90
  1571                           	clrf	(_wI2CTxSendPos)
  1572  00D0  01A5               	line	92
  1573                           	movlb 3	; select bank3
  1574  00D1  0023               	clrf	(396)^0180h	;volatile
  1575  00D2  018C               	line	93
  1576                           	movlb 1	; select bank1
  1577  00D3  0021               	clrf	(140)^080h	;volatile
  1578  00D4  018C               	line	95
  1579                           	clrf	(142)^080h	;volatile
  1580  00D5  018E               	line	96
  1581                           	
  1582                           l1756:	
  1583  00D6                     	movlw	low(0FFh)
  1584  00D6  30FF               	movwf	(142)^080h	;volatile
  1585  00D7  008E               	line	97
  1586                           	
  1587                           l1758:	
  1588  00D8                     	movlb 3	; select bank3
  1589  00D8  0023               	bcf	(398)^0180h,3	;volatile
  1590  00D9  118E               	line	98
  1591                           	
  1592                           l1760:	
  1593  00DA                     	bcf	(398)^0180h,4	;volatile
  1594  00DA  120E               	line	103
  1595                           	
  1596                           l1762:	
  1597  00DB                     	movlb 4	; select bank4
  1598  00DB  0024               	movf	(533)^0200h,w	;volatile
  1599  00DC  0815               	andlw	not (((1<<4)-1)<<0)
  1600  00DD  39F0               	iorlw	(08h & ((1<<4)-1))<<0
  1601  00DE  3808               	movwf	(533)^0200h	;volatile
  1602  00DF  0095               	line	104
  1603                           	
  1604                           l1764:	
  1605  00E0                     	movlw	low(01Fh)
  1606  00E0  301F               	movwf	(530)^0200h	;volatile
  1607  00E1  0092               	line	105
  1608                           	
  1609                           l1766:	
  1610  00E2                     	bsf	(533)^0200h,5	;volatile
  1611  00E2  1695               	line	106
  1612                           	
  1613                           l1768:	
  1614  00E3                     	bcf	(534)^0200h,7	;volatile
  1615  00E3  1396               	line	107
  1616                           	
  1617                           l1770:	
  1618  00E4                     	bsf	(534)^0200h,4	;volatile
  1619  00E4  1616               	line	108
  1620                           	
  1621                           l1772:	
  1622  00E5                     	bsf	(535)^0200h,6	;volatile
  1623  00E5  1717               	line	109
  1624                           	
  1625                           l1774:	
  1626  00E6                     	bsf	(535)^0200h,5	;volatile
  1627  00E6  1697               	line	110
  1628                           	
  1629                           l1776:	
  1630  00E7                     	bsf	(535)^0200h,3	;volatile
  1631  00E7  1597               	line	111
  1632                           	
  1633                           l1778:	
  1634  00E8                     	bcf	(535)^0200h,1	;volatile
  1635  00E8  1097               	line	112
  1636                           	
  1637                           l1780:	
  1638  00E9                     	bcf	(535)^0200h,0	;volatile
  1639  00E9  1017               	line	113
  1640                           	
  1641                           l1782:	
  1642  00EA                     	bcf	(532)^0200h,6	;volatile
  1643  00EA  1314               	line	115
  1644                           	
  1645                           l1784:	
  1646  00EB                     	bsf	(11),6	;volatile
  1647  00EB  170B               	line	116
  1648                           	
  1649                           l1786:	
  1650  00EC                     	movlb 1	; select bank1
  1651  00EC  0021               	bsf	(145)^080h,3	;volatile
  1652  00ED  1591               	line	117
  1653                           	
  1654                           l1788:	
  1655  00EE                     	bsf	(146)^080h,3	;volatile
  1656  00EE  1592               	line	119
  1657                           	
  1658                           l1790:	
  1659  00EF                     	bsf	(11),7	;volatile
  1660  00EF  178B               	line	121
  1661                           	
  1662                           l1792:	
  1663  00F0                     	fcall	_initLCD
  1664  00F0  3182  22CC  3180   	line	122
  1665                           	
  1666                           l1794:	
  1667  00F3                     	fcall	_clearDisplay
  1668  00F3  3184  24DE  3180   	line	123
  1669                           	
  1670                           l1796:	
  1671  00F6                     	opt asmopt_push
  1672                           opt asmopt_off
  1673                           movlw  3
  1674  00F6  3003               	movlb 0	; select bank0
  1675  00F7  0020               movwf	((??_main+0)+0+1),f
  1676  00F8  00D8               movlw	8
  1677  00F9  3008               movwf	((??_main+0)+0),f
  1678  00FA  00D7               	movlw	119
  1679  00FB  3077               u897:
  1680  00FC                     decfsz	wreg
  1681  00FC  0B89               	goto	u897
  1682  00FD  28FC               	decfsz	((??_main+0)+0),f
  1683  00FE  0BD7               	goto	u897
  1684  00FF  28FC               	decfsz	((??_main+0)+0+1),f
  1685  0100  0BD8               	goto	u897
  1686  0101  28FC               opt asmopt_pop
  1687                           
  1688                           	line	124
  1689                           	
  1690                           l1798:	
  1691  0102                     	fcall	_powerOnLcd
  1692  0102  3184  24A5  3180   	line	125
  1693                           	
  1694                           l1800:	
  1695  0105                     	opt asmopt_push
  1696                           opt asmopt_off
  1697                           movlw  3
  1698  0105  3003               	movlb 0	; select bank0
  1699  0106  0020               movwf	((??_main+0)+0+1),f
  1700  0107  00D8               movlw	8
  1701  0108  3008               movwf	((??_main+0)+0),f
  1702  0109  00D7               	movlw	119
  1703  010A  3077               u907:
  1704  010B                     decfsz	wreg
  1705  010B  0B89               	goto	u907
  1706  010C  290B               	decfsz	((??_main+0)+0),f
  1707  010D  0BD7               	goto	u907
  1708  010E  290B               	decfsz	((??_main+0)+0+1),f
  1709  010F  0BD8               	goto	u907
  1710  0110  290B               opt asmopt_pop
  1711                           
  1712                           	line	126
  1713                           	
  1714                           l1802:	
  1715  0111                     	fcall	_setCursorOff
  1716  0111  3184  249A  3180   	line	127
  1717                           	
  1718                           l1804:	
  1719  0114                     	opt asmopt_push
  1720                           opt asmopt_off
  1721                           movlw  3
  1722  0114  3003               	movlb 0	; select bank0
  1723  0115  0020               movwf	((??_main+0)+0+1),f
  1724  0116  00D8               movlw	8
  1725  0117  3008               movwf	((??_main+0)+0),f
  1726  0118  00D7               	movlw	119
  1727  0119  3077               u917:
  1728  011A                     decfsz	wreg
  1729  011A  0B89               	goto	u917
  1730  011B  291A               	decfsz	((??_main+0)+0),f
  1731  011C  0BD7               	goto	u917
  1732  011D  291A               	decfsz	((??_main+0)+0+1),f
  1733  011E  0BD8               	goto	u917
  1734  011F  291A               opt asmopt_pop
  1735                           
  1736                           	line	128
  1737                           	
  1738                           l1806:	
  1739  0120                     	fcall	_moveCursorToHome
  1740  0120  3184  24C3  3180   	line	129
  1741                           	
  1742                           l1808:	
  1743  0123                     	opt asmopt_push
  1744                           opt asmopt_off
  1745                           movlw  3
  1746  0123  3003               	movlb 0	; select bank0
  1747  0124  0020               movwf	((??_main+0)+0+1),f
  1748  0125  00D8               movlw	8
  1749  0126  3008               movwf	((??_main+0)+0),f
  1750  0127  00D7               	movlw	119
  1751  0128  3077               u927:
  1752  0129                     decfsz	wreg
  1753  0129  0B89               	goto	u927
  1754  012A  2929               	decfsz	((??_main+0)+0),f
  1755  012B  0BD7               	goto	u927
  1756  012C  2929               	decfsz	((??_main+0)+0+1),f
  1757  012D  0BD8               	goto	u927
  1758  012E  2929               opt asmopt_pop
  1759                           
  1760                           	line	130
  1761                           	
  1762                           l1810:	
  1763  012F                     	fcall	_setNotBlinkingCursor
  1764  012F  3184  248F  3180   	line	131
  1765                           	
  1766                           l1812:	
  1767  0132                     	opt asmopt_push
  1768                           opt asmopt_off
  1769                           movlw  3
  1770  0132  3003               	movlb 0	; select bank0
  1771  0133  0020               movwf	((??_main+0)+0+1),f
  1772  0134  00D8               movlw	8
  1773  0135  3008               movwf	((??_main+0)+0),f
  1774  0136  00D7               	movlw	119
  1775  0137  3077               u937:
  1776  0138                     decfsz	wreg
  1777  0138  0B89               	goto	u937
  1778  0139  2938               	decfsz	((??_main+0)+0),f
  1779  013A  0BD7               	goto	u937
  1780  013B  2938               	decfsz	((??_main+0)+0+1),f
  1781  013C  0BD8               	goto	u937
  1782  013D  2938               opt asmopt_pop
  1783                           
  1784                           	line	133
  1785                           	
  1786                           l1814:	
  1787  013E                     	movlw	low(((STR_1)|8000h))
  1788  013E  3039               	movlb 0	; select bank0
  1789  013F  0020               	movwf	(lcdWriteText@iText)
  1790  0140  00D1               	movlw	high(((STR_1)|8000h))
  1791  0141  3084               	movwf	((lcdWriteText@iText))+1
  1792  0142  00D2               	fcall	_lcdWriteText
  1793  0143  3183  2385  3180   	line	135
  1794                           	
  1795                           l1816:	
  1796  0146                     	opt asmopt_push
  1797                           opt asmopt_off
  1798                           movlw  21
  1799  0146  3015               	movlb 0	; select bank0
  1800  0147  0020               movwf	((??_main+0)+0+1),f
  1801  0148  00D8               movlw	75
  1802  0149  304B               movwf	((??_main+0)+0),f
  1803  014A  00D7               	movlw	190
  1804  014B  30BE               u947:
  1805  014C                     decfsz	wreg
  1806  014C  0B89               	goto	u947
  1807  014D  294C               	decfsz	((??_main+0)+0),f
  1808  014E  0BD7               	goto	u947
  1809  014F  294C               	decfsz	((??_main+0)+0+1),f
  1810  0150  0BD8               	goto	u947
  1811  0151  294C               	nop
  1812  0152  0000               opt asmopt_pop
  1813                           
  1814                           	line	137
  1815                           	
  1816                           l1818:	
  1817  0153                     	movlb 1	; select bank1
  1818  0153  0021               	clrf	(main@wCounter)^080h
  1819  0154  01AA               	clrf	(main@wCounter+1)^080h
  1820  0155  01AB               	line	138
  1821                           	
  1822                           l1820:	
  1823  0156                     	movlw	low(main@F2177)
  1824  0156  3059               	movwf	fsr1l
  1825  0157  0086               	movlw	high(main@F2177)
  1826  0158  3000               	movwf	fsr1h
  1827  0159  0087               	movlw	low(main@wConv)
  1828  015A  30A0               	movwf	fsr0l
  1829  015B  0084               	movlw	high(main@wConv)
  1830  015C  3000               	movwf	fsr0h
  1831  015D  0085               	movlw	8
  1832  015E  3008               	movlb 0	; select bank0
  1833  015F  0020               	movwf	(??_main+0)+0
  1834  0160  00D7               u830:
  1835  0161                     	moviw	fsr1++
  1836  0161  0016               	movwi	fsr0++
  1837  0162  001A               	decfsz	(??_main+0)+0,f
  1838  0163  0BD7               	goto	u830
  1839  0164  2961               	line	139
  1840                           	
  1841                           l1822:	
  1842  0165                     	movlb 1	; select bank1
  1843  0165  0021               	clrf	(main@wTemp)^080h
  1844  0166  01A8               	clrf	(main@wTemp+1)^080h
  1845  0167  01A9               	goto	l1824
  1846  0168  2969               	line	140
  1847                           	
  1848                           l89:	
  1849  0169                     	line	142
  1850                           	
  1851                           l1824:	
  1852  0169                     	movlw	low(067h)
  1853  0169  3067               	fcall	_setCursorPosition
  1854  016A  3183  23FC  3180   	line	143
  1855                           	
  1856                           l1826:	
  1857  016D                     	opt asmopt_push
  1858                           opt asmopt_off
  1859                           movlw	52
  1860  016D  3034               	movlb 0	; select bank0
  1861  016E  0020               movwf	((??_main+0)+0),f
  1862  016F  00D7               	movlw	241
  1863  0170  30F1               u957:
  1864  0171                     decfsz	wreg
  1865  0171  0B89               	goto	u957
  1866  0172  2971               	decfsz	((??_main+0)+0),f
  1867  0173  0BD7               	goto	u957
  1868  0174  2971               	nop2
  1869  0175  3200               opt asmopt_pop
  1870                           
  1871                           	line	144
  1872                           	
  1873                           l1828:	
  1874  0176                     	movlb 1	; select bank1
  1875  0176  0021               	movf	(main@wCounter)^080h,w
  1876  0177  082A               	addlw	low(main@wConv|((0x0)<<8))&0ffh
  1877  0178  3EA0               	movlb 0	; select bank0
  1878  0179  0020               	movwf	(lcdWriteText@iText)
  1879  017A  00D1               	movlw	0x0
  1880  017B  3000               
  1881                           	movwf	(lcdWriteText@iText+1)
  1882  017C  00D2               	fcall	_lcdWriteText
  1883  017D  3183  2385  3180   	line	147
  1884                           	
  1885                           l1830:	
  1886  0180                     	fcall	_WakeTemp
  1887  0180  3184  241D  3180   	line	152
  1888                           	
  1889                           l1832:	
  1890  0183                     	movlb 1	; select bank1
  1891  0183  0021               	movf	(main@wCounter)^080h,w
  1892  0184  082A               	addlw	02h
  1893  0185  3E02               	movwf	(main@wCounter)^080h
  1894  0186  00AA               	movlw	0
  1895  0187  3000               	addwfc	(main@wCounter+1)^080h,w
  1896  0188  3D2B               	movwf	1+(main@wCounter)^080h
  1897  0189  00AB               	line	153
  1898                           	
  1899                           l1834:	
  1900  018A                     		movlw	8
  1901  018A  3008               	xorwf	((main@wCounter)^080h),w
  1902  018B  062A               iorwf	((main@wCounter+1)^080h),w
  1903  018C  042B               	btfss	status,2
  1904  018D  1D03               	goto	u841
  1905  018E  2990               	goto	u840
  1906  018F  2991               u841:
  1907  0190                     	goto	l1838
  1908  0190  2994               u840:
  1909  0191                     	line	155
  1910                           	
  1911                           l1836:	
  1912  0191                     	clrf	(main@wCounter)^080h
  1913  0191  01AA               	clrf	(main@wCounter+1)^080h
  1914  0192  01AB               	goto	l1838
  1915  0193  2994               	line	156
  1916                           	
  1917                           l90:	
  1918  0194                     	line	169
  1919                           	
  1920                           l1838:	
  1921  0194                     	opt asmopt_push
  1922                           opt asmopt_off
  1923                           movlw  21
  1924  0194  3015               	movlb 0	; select bank0
  1925  0195  0020               movwf	((??_main+0)+0+1),f
  1926  0196  00D8               movlw	75
  1927  0197  304B               movwf	((??_main+0)+0),f
  1928  0198  00D7               	movlw	190
  1929  0199  30BE               u967:
  1930  019A                     decfsz	wreg
  1931  019A  0B89               	goto	u967
  1932  019B  299A               	decfsz	((??_main+0)+0),f
  1933  019C  0BD7               	goto	u967
  1934  019D  299A               	decfsz	((??_main+0)+0+1),f
  1935  019E  0BD8               	goto	u967
  1936  019F  299A               	nop
  1937  01A0  0000               opt asmopt_pop
  1938                           
  1939                           	goto	l1824
  1940  01A1  2969               	line	170
  1941                           	
  1942                           l91:	
  1943  01A2                     	goto	l1824
  1944  01A2  2969               	
  1945                           l92:	
  1946  01A3                     	line	172
  1947                           	
  1948                           l93:	
  1949  01A3                     	global	start
  1950                           	ljmp	start
  1951  01A3  3180  2879         	opt stack 0
  1952                           GLOBAL	__end_of_main
  1953                           	__end_of_main:
  1954  01A5                     	signat	_main,89
  1955                           	global	_setNotBlinkingCursor
  1956                           
  1957 ;; *************** function _setNotBlinkingCursor *****************
  1958 ;; Defined at:
  1959 ;;		line 173 in file "LCD_hd44780u_qy_2004a.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;		None
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg, status,2, status,0, pclath, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  1973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1975 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  1976 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  1977 ;;Total ram usage:        1 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:    6
  1980 ;; This function calls:
  1981 ;;		_writeInsChk
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1987                           	file	"LCD_hd44780u_qy_2004a.c"
  1988                           	line	173
  1989                           global __ptext1
  1990                           __ptext1:	;psect for function _setNotBlinkingCursor
  1991  048F                     psect	text1
  1992                           	file	"LCD_hd44780u_qy_2004a.c"
  1993                           	line	173
  1994                           	global	__size_of_setNotBlinkingCursor
  1995                           	__size_of_setNotBlinkingCursor	equ	__end_of_setNotBlinkingCursor-_setNotBlinkingCursor

  1996  000B                     	
  1997                           _setNotBlinkingCursor:	
  1998  048F                     ;incstack = 0
  1999                           	opt	stack 9
  2000                           ; Regs used in _setNotBlinkingCursor: [wreg+status,2+status,0+pclath+cstack]
  2001                           	line	175
  2002                           	
  2003                           l1732:	
  2004  048F                     ;LCD_hd44780u_qy_2004a.c: 175:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFE;
  2005                           	movlb 0	; select bank0
  2006  048F  0020               	movf	(_mDisplayOnOffReg),w
  2007  0490  0829               	andlw	0FEh
  2008  0491  39FE               	movwf	(??_setNotBlinkingCursor+0)+0
  2009  0492  00CD               	movf	(??_setNotBlinkingCursor+0)+0,w
  2010  0493  084D               	movwf	(_mDisplayOnOffReg)
  2011  0494  00A9               	line	176
  2012                           	
  2013                           l1734:	
  2014  0495                     ;LCD_hd44780u_qy_2004a.c: 176:   writeInsChk(mDisplayOnOffReg);
  2015                           	movf	(_mDisplayOnOffReg),w
  2016  0495  0829               	fcall	_writeInsChk
  2017  0496  3184  24B0  3184   	line	177
  2018                           	
  2019                           l199:	
  2020  0499                     	return
  2021  0499  0008               	opt stack 0
  2022                           GLOBAL	__end_of_setNotBlinkingCursor
  2023                           	__end_of_setNotBlinkingCursor:
  2024  049A                     	signat	_setNotBlinkingCursor,89
  2025                           	global	_setCursorOff
  2026                           
  2027 ;; *************** function _setCursorOff *****************
  2028 ;; Defined at:
  2029 ;;		line 178 in file "LCD_hd44780u_qy_2004a.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, status,0, pclath, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2045 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  2046 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  2047 ;;Total ram usage:        1 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    6
  2050 ;; This function calls:
  2051 ;;		_writeInsChk
  2052 ;; This function is called by:
  2053 ;;		_main
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2057                           	line	178
  2058                           global __ptext2
  2059                           __ptext2:	;psect for function _setCursorOff
  2060  049A                     psect	text2
  2061                           	file	"LCD_hd44780u_qy_2004a.c"
  2062                           	line	178
  2063                           	global	__size_of_setCursorOff
  2064                           	__size_of_setCursorOff	equ	__end_of_setCursorOff-_setCursorOff
  2065  000B                     	
  2066                           _setCursorOff:	
  2067  049A                     ;incstack = 0
  2068                           	opt	stack 9
  2069                           ; Regs used in _setCursorOff: [wreg+status,2+status,0+pclath+cstack]
  2070                           	line	180
  2071                           	
  2072                           l1724:	
  2073  049A                     ;LCD_hd44780u_qy_2004a.c: 180:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFD;
  2074                           	movlb 0	; select bank0
  2075  049A  0020               	movf	(_mDisplayOnOffReg),w
  2076  049B  0829               	andlw	0FDh
  2077  049C  39FD               	movwf	(??_setCursorOff+0)+0
  2078  049D  00CD               	movf	(??_setCursorOff+0)+0,w
  2079  049E  084D               	movwf	(_mDisplayOnOffReg)
  2080  049F  00A9               	line	181
  2081                           	
  2082                           l1726:	
  2083  04A0                     ;LCD_hd44780u_qy_2004a.c: 181:   writeInsChk(mDisplayOnOffReg);
  2084                           	movf	(_mDisplayOnOffReg),w
  2085  04A0  0829               	fcall	_writeInsChk
  2086  04A1  3184  24B0  3184   	line	182
  2087                           	
  2088                           l202:	
  2089  04A4                     	return
  2090  04A4  0008               	opt stack 0
  2091                           GLOBAL	__end_of_setCursorOff
  2092                           	__end_of_setCursorOff:
  2093  04A5                     	signat	_setCursorOff,89
  2094                           	global	_powerOnLcd
  2095                           
  2096 ;; *************** function _powerOnLcd *****************
  2097 ;; Defined at:
  2098 ;;		line 163 in file "LCD_hd44780u_qy_2004a.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0, pclath, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2114 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  2115 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  2116 ;;Total ram usage:        1 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    6
  2119 ;; This function calls:
  2120 ;;		_writeInsChk
  2121 ;; This function is called by:
  2122 ;;		_main
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2126                           	line	163
  2127                           global __ptext3
  2128                           __ptext3:	;psect for function _powerOnLcd
  2129  04A5                     psect	text3
  2130                           	file	"LCD_hd44780u_qy_2004a.c"
  2131                           	line	163
  2132                           	global	__size_of_powerOnLcd
  2133                           	__size_of_powerOnLcd	equ	__end_of_powerOnLcd-_powerOnLcd
  2134  000B                     	
  2135                           _powerOnLcd:	
  2136  04A5                     ;incstack = 0
  2137                           	opt	stack 9
  2138                           ; Regs used in _powerOnLcd: [wreg+status,2+status,0+pclath+cstack]
  2139                           	line	165
  2140                           	
  2141                           l1720:	
  2142  04A5                     ;LCD_hd44780u_qy_2004a.c: 165:   mDisplayOnOffReg = mDisplayOnOffReg | 0x04;
  2143                           	movlb 0	; select bank0
  2144  04A5  0020               	movf	(_mDisplayOnOffReg),w
  2145  04A6  0829               	iorlw	04h
  2146  04A7  3804               	movwf	(??_powerOnLcd+0)+0
  2147  04A8  00CD               	movf	(??_powerOnLcd+0)+0,w
  2148  04A9  084D               	movwf	(_mDisplayOnOffReg)
  2149  04AA  00A9               	line	166
  2150                           	
  2151                           l1722:	
  2152  04AB                     ;LCD_hd44780u_qy_2004a.c: 166:   writeInsChk(mDisplayOnOffReg);
  2153                           	movf	(_mDisplayOnOffReg),w
  2154  04AB  0829               	fcall	_writeInsChk
  2155  04AC  3184  24B0  3184   	line	167
  2156                           	
  2157                           l193:	
  2158  04AF                     	return
  2159  04AF  0008               	opt stack 0
  2160                           GLOBAL	__end_of_powerOnLcd
  2161                           	__end_of_powerOnLcd:
  2162  04B0                     	signat	_powerOnLcd,89
  2163                           	global	_moveCursorToHome
  2164                           
  2165 ;; *************** function _moveCursorToHome *****************
  2166 ;; Defined at:
  2167 ;;		line 224 in file "LCD_hd44780u_qy_2004a.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;		None
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg, status,2, status,0, pclath, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2185 ;;Total ram usage:        0 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    6
  2188 ;; This function calls:
  2189 ;;		_writeInsChk
  2190 ;; This function is called by:
  2191 ;;		_main
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2195                           	line	224
  2196                           global __ptext4
  2197                           __ptext4:	;psect for function _moveCursorToHome
  2198  04C3                     psect	text4
  2199                           	file	"LCD_hd44780u_qy_2004a.c"
  2200                           	line	224
  2201                           	global	__size_of_moveCursorToHome
  2202                           	__size_of_moveCursorToHome	equ	__end_of_moveCursorToHome-_moveCursorToHome
  2203  0008                     	
  2204                           _moveCursorToHome:	
  2205  04C3                     ;incstack = 0
  2206                           	opt	stack 9
  2207                           ; Regs used in _moveCursorToHome: [wreg+status,2+status,0+pclath+cstack]
  2208                           	line	226
  2209                           	
  2210                           l1728:	
  2211  04C3                     ;LCD_hd44780u_qy_2004a.c: 226:   writeInsChk(0x02);
  2212                           	movlw	low(02h)
  2213  04C3  3002               	fcall	_writeInsChk
  2214  04C4  3184  24B0  3184   	line	227
  2215                           	
  2216                           l1730:	
  2217  04C7                     ;LCD_hd44780u_qy_2004a.c: 227:   mWritingPosition=1;
  2218                           	movlb 0	; select bank0
  2219  04C7  0020               	clrf	(_mWritingPosition)
  2220  04C8  01A7               	incf	(_mWritingPosition),f
  2221  04C9  0AA7               	line	228
  2222                           	
  2223                           l229:	
  2224  04CA                     	return
  2225  04CA  0008               	opt stack 0
  2226                           GLOBAL	__end_of_moveCursorToHome
  2227                           	__end_of_moveCursorToHome:
  2228  04CB                     	signat	_moveCursorToHome,89
  2229                           	global	_memset
  2230                           
  2231 ;; *************** function _memset *****************
  2232 ;; Defined at:
  2233 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  dest            2    9[BANK0 ] PTR void 
  2236 ;;		 -> wInterruptText(200), wI2CTxBuffer(20), 
  2237 ;;  c               2   11[BANK0 ] int 
  2238 ;;  n               2   13[BANK0 ] unsigned int 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  s               2   21[BANK0 ] PTR unsigned char 
  2241 ;;		 -> wInterruptText(200), wI2CTxBuffer(20), 
  2242 ;;  k               2   19[BANK0 ] unsigned int 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  2    9[BANK0 ] PTR void 
  2245 ;; Registers used:
  2246 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2252 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  2253 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  2254 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  2255 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
  2256 ;;Total ram usage:       14 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; Hardware stack levels required when called:    3
  2259 ;; This function calls:
  2260 ;;		Nothing
  2261 ;; This function is called by:
  2262 ;;		_main
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           psect	text5,local,class=CODE,delta=2,merge=1,group=2
  2266                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  2267                           	line	4
  2268                           global __ptext5
  2269                           __ptext5:	;psect for function _memset
  2270  01A5                     psect	text5
  2271                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  2272                           	line	4
  2273                           	global	__size_of_memset
  2274                           	__size_of_memset	equ	__end_of_memset-_memset
  2275  00D1                     	
  2276                           _memset:	
  2277  01A5                     ;incstack = 0
  2278                           	opt	stack 12
  2279                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  2280                           	line	6
  2281                           	
  2282                           l1656:	
  2283  01A5                     	movlb 0	; select bank0
  2284  01A5  0020               	movf	(memset@dest+1),w
  2285  01A6  0848               	movwf	(memset@s+1)
  2286  01A7  00D4               	movf	(memset@dest),w
  2287  01A8  0847               	movwf	(memset@s)
  2288  01A9  00D3               	line	13
  2289                           	
  2290                           l1658:	
  2291  01AA                     	movf	((memset@n)),w
  2292  01AA  084B               iorwf	((memset@n+1)),w
  2293  01AB  044C               	btfss	status,2
  2294  01AC  1D03               	goto	u771
  2295  01AD  29AF               	goto	u770
  2296  01AE  29B0               u771:
  2297  01AF                     	goto	l1662
  2298  01AF  29B2               u770:
  2299  01B0                     	goto	l671
  2300  01B0  2A75               	
  2301                           l1660:	
  2302  01B1                     ;	Return value of _memset is never used
  2303                           	goto	l671
  2304  01B1  2A75               	
  2305                           l670:	
  2306  01B2                     	line	14
  2307                           	
  2308                           l1662:	
  2309  01B2                     	movf	(memset@s),w
  2310  01B2  0853               	movwf	fsr1l
  2311  01B3  0086               	movf	(memset@s+1),w
  2312  01B4  0854               	movwf	fsr1h
  2313  01B5  0087               	movf	(memset@c),w
  2314  01B6  0849               	movwf	indf1
  2315  01B7  0081               	line	15
  2316                           	
  2317                           l1664:	
  2318  01B8                     	movf	(memset@n),w
  2319  01B8  084B               	addlw	0FFh
  2320  01B9  3EFF               	movwf	(??_memset+0)+0
  2321  01BA  00CD               	movlw	0FFh
  2322  01BB  30FF               	addwfc	(memset@n+1),w
  2323  01BC  3D4C               	movwf	1+(??_memset+0)+0
  2324  01BD  00CE               	movf	0+(??_memset+0)+0,w
  2325  01BE  084D               	addwf	(memset@s),w
  2326  01BF  0753               	movwf	(??_memset+2)+0
  2327  01C0  00CF               	movf	1+(??_memset+0)+0,w
  2328  01C1  084E               	addwfc	(memset@s+1),w
  2329  01C2  3D54               	movwf	1+(??_memset+2)+0
  2330  01C3  00D0               	movf	0+(??_memset+2)+0,w
  2331  01C4  084F               	movwf	fsr1l
  2332  01C5  0086               	movf	1+(??_memset+2)+0,w
  2333  01C6  0850               	movwf	fsr1h
  2334  01C7  0087               	movf	(memset@c),w
  2335  01C8  0849               	movwf	indf1
  2336  01C9  0081               	line	16
  2337                           	
  2338                           l1666:	
  2339  01CA                     	movlw	0
  2340  01CA  3000               	subwf	(memset@n+1),w
  2341  01CB  024C               	movlw	03h
  2342  01CC  3003               	skipnz
  2343  01CD  1903               	subwf	(memset@n),w
  2344  01CE  024B               	skipnc
  2345  01CF  1803               	goto	u781
  2346  01D0  29D2               	goto	u780
  2347  01D1  29D3               u781:
  2348  01D2                     	goto	l1670
  2349  01D2  29D5               u780:
  2350  01D3                     	goto	l671
  2351  01D3  2A75               	
  2352                           l1668:	
  2353  01D4                     ;	Return value of _memset is never used
  2354                           	goto	l671
  2355  01D4  2A75               	
  2356                           l672:	
  2357  01D5                     	line	17
  2358                           	
  2359                           l1670:	
  2360  01D5                     	movf	(memset@s),w
  2361  01D5  0853               	addlw	01h
  2362  01D6  3E01               	movwf	(??_memset+0)+0
  2363  01D7  00CD               	movlw	0
  2364  01D8  3000               	addwfc	(memset@s+1),w
  2365  01D9  3D54               	movwf	1+(??_memset+0)+0
  2366  01DA  00CE               	movf	0+(??_memset+0)+0,w
  2367  01DB  084D               	movwf	fsr1l
  2368  01DC  0086               	movf	1+(??_memset+0)+0,w
  2369  01DD  084E               	movwf	fsr1h
  2370  01DE  0087               	movf	(memset@c),w
  2371  01DF  0849               	movwf	indf1
  2372  01E0  0081               	line	18
  2373                           	movf	(memset@s),w
  2374  01E1  0853               	addlw	02h
  2375  01E2  3E02               	movwf	(??_memset+0)+0
  2376  01E3  00CD               	movlw	0
  2377  01E4  3000               	addwfc	(memset@s+1),w
  2378  01E5  3D54               	movwf	1+(??_memset+0)+0
  2379  01E6  00CE               	movf	0+(??_memset+0)+0,w
  2380  01E7  084D               	movwf	fsr1l
  2381  01E8  0086               	movf	1+(??_memset+0)+0,w
  2382  01E9  084E               	movwf	fsr1h
  2383  01EA  0087               	movf	(memset@c),w
  2384  01EB  0849               	movwf	indf1
  2385  01EC  0081               	line	19
  2386                           	movf	(memset@n),w
  2387  01ED  084B               	addlw	0FEh
  2388  01EE  3EFE               	movwf	(??_memset+0)+0
  2389  01EF  00CD               	movlw	0FFh
  2390  01F0  30FF               	addwfc	(memset@n+1),w
  2391  01F1  3D4C               	movwf	1+(??_memset+0)+0
  2392  01F2  00CE               	movf	0+(??_memset+0)+0,w
  2393  01F3  084D               	addwf	(memset@s),w
  2394  01F4  0753               	movwf	(??_memset+2)+0
  2395  01F5  00CF               	movf	1+(??_memset+0)+0,w
  2396  01F6  084E               	addwfc	(memset@s+1),w
  2397  01F7  3D54               	movwf	1+(??_memset+2)+0
  2398  01F8  00D0               	movf	0+(??_memset+2)+0,w
  2399  01F9  084F               	movwf	fsr1l
  2400  01FA  0086               	movf	1+(??_memset+2)+0,w
  2401  01FB  0850               	movwf	fsr1h
  2402  01FC  0087               	movf	(memset@c),w
  2403  01FD  0849               	movwf	indf1
  2404  01FE  0081               	line	20
  2405                           	movf	(memset@n),w
  2406  01FF  084B               	addlw	0FDh
  2407  0200  3EFD               	movwf	(??_memset+0)+0
  2408  0201  00CD               	movlw	0FFh
  2409  0202  30FF               	addwfc	(memset@n+1),w
  2410  0203  3D4C               	movwf	1+(??_memset+0)+0
  2411  0204  00CE               	movf	0+(??_memset+0)+0,w
  2412  0205  084D               	addwf	(memset@s),w
  2413  0206  0753               	movwf	(??_memset+2)+0
  2414  0207  00CF               	movf	1+(??_memset+0)+0,w
  2415  0208  084E               	addwfc	(memset@s+1),w
  2416  0209  3D54               	movwf	1+(??_memset+2)+0
  2417  020A  00D0               	movf	0+(??_memset+2)+0,w
  2418  020B  084F               	movwf	fsr1l
  2419  020C  0086               	movf	1+(??_memset+2)+0,w
  2420  020D  0850               	movwf	fsr1h
  2421  020E  0087               	movf	(memset@c),w
  2422  020F  0849               	movwf	indf1
  2423  0210  0081               	line	21
  2424                           	
  2425                           l1672:	
  2426  0211                     	movlw	0
  2427  0211  3000               	subwf	(memset@n+1),w
  2428  0212  024C               	movlw	07h
  2429  0213  3007               	skipnz
  2430  0214  1903               	subwf	(memset@n),w
  2431  0215  024B               	skipnc
  2432  0216  1803               	goto	u791
  2433  0217  2A19               	goto	u790
  2434  0218  2A1A               u791:
  2435  0219                     	goto	l1676
  2436  0219  2A1C               u790:
  2437  021A                     	goto	l671
  2438  021A  2A75               	
  2439                           l1674:	
  2440  021B                     ;	Return value of _memset is never used
  2441                           	goto	l671
  2442  021B  2A75               	
  2443                           l673:	
  2444  021C                     	line	22
  2445                           	
  2446                           l1676:	
  2447  021C                     	movf	(memset@s),w
  2448  021C  0853               	addlw	03h
  2449  021D  3E03               	movwf	(??_memset+0)+0
  2450  021E  00CD               	movlw	0
  2451  021F  3000               	addwfc	(memset@s+1),w
  2452  0220  3D54               	movwf	1+(??_memset+0)+0
  2453  0221  00CE               	movf	0+(??_memset+0)+0,w
  2454  0222  084D               	movwf	fsr1l
  2455  0223  0086               	movf	1+(??_memset+0)+0,w
  2456  0224  084E               	movwf	fsr1h
  2457  0225  0087               	movf	(memset@c),w
  2458  0226  0849               	movwf	indf1
  2459  0227  0081               	line	23
  2460                           	movf	(memset@n),w
  2461  0228  084B               	addlw	0FCh
  2462  0229  3EFC               	movwf	(??_memset+0)+0
  2463  022A  00CD               	movlw	0FFh
  2464  022B  30FF               	addwfc	(memset@n+1),w
  2465  022C  3D4C               	movwf	1+(??_memset+0)+0
  2466  022D  00CE               	movf	0+(??_memset+0)+0,w
  2467  022E  084D               	addwf	(memset@s),w
  2468  022F  0753               	movwf	(??_memset+2)+0
  2469  0230  00CF               	movf	1+(??_memset+0)+0,w
  2470  0231  084E               	addwfc	(memset@s+1),w
  2471  0232  3D54               	movwf	1+(??_memset+2)+0
  2472  0233  00D0               	movf	0+(??_memset+2)+0,w
  2473  0234  084F               	movwf	fsr1l
  2474  0235  0086               	movf	1+(??_memset+2)+0,w
  2475  0236  0850               	movwf	fsr1h
  2476  0237  0087               	movf	(memset@c),w
  2477  0238  0849               	movwf	indf1
  2478  0239  0081               	line	24
  2479                           	
  2480                           l1678:	
  2481  023A                     	movlw	0
  2482  023A  3000               	subwf	(memset@n+1),w
  2483  023B  024C               	movlw	09h
  2484  023C  3009               	skipnz
  2485  023D  1903               	subwf	(memset@n),w
  2486  023E  024B               	skipnc
  2487  023F  1803               	goto	u801
  2488  0240  2A42               	goto	u800
  2489  0241  2A43               u801:
  2490  0242                     	goto	l1682
  2491  0242  2A45               u800:
  2492  0243                     	goto	l671
  2493  0243  2A75               	
  2494                           l1680:	
  2495  0244                     ;	Return value of _memset is never used
  2496                           	goto	l671
  2497  0244  2A75               	
  2498                           l674:	
  2499  0245                     	line	31
  2500                           	
  2501                           l1682:	
  2502  0245                     	comf	(memset@s),w
  2503  0245  0953               	movwf	(??_memset+0)+0
  2504  0246  00CD               	comf	(memset@s+1),w
  2505  0247  0954               	movwf	((??_memset+0)+0+1)
  2506  0248  00CE               	incf	(??_memset+0)+0,f
  2507  0249  0ACD               	skipnz
  2508  024A  1903               	incf	((??_memset+0)+0+1),f
  2509  024B  0ACE               	movlw	03h
  2510  024C  3003               	andwf	0+(??_memset+0)+0,w
  2511  024D  054D               	movwf	(memset@k)
  2512  024E  00D1               	movlw	0
  2513  024F  3000               	andwf	1+(??_memset+0)+0,w
  2514  0250  054E               	movwf	1+(memset@k)
  2515  0251  00D2               	line	32
  2516                           	
  2517                           l1684:	
  2518  0252                     	movf	(memset@k),w
  2519  0252  0851               	addwf	(memset@s),f
  2520  0253  07D3               	movf	(memset@k+1),w
  2521  0254  0852               	addwfc	(memset@s+1),f
  2522  0255  3DD4               	line	33
  2523                           	
  2524                           l1686:	
  2525  0256                     	movf	(memset@k),w
  2526  0256  0851               	subwf	(memset@n),f
  2527  0257  02CB               	movf	(memset@k+1),w
  2528  0258  0852               	subwfb	(memset@n+1),f
  2529  0259  3BCC               	line	34
  2530                           	
  2531                           l1688:	
  2532  025A                     	movlw	0FCh
  2533  025A  30FC               	andwf	(memset@n),f
  2534  025B  05CB               	movlw	0FFh
  2535  025C  30FF               	andwf	(memset@n+1),f
  2536  025D  05CC               	line	86
  2537                           	goto	l1696
  2538  025E  2A6E               	
  2539                           l676:	
  2540  025F                     	
  2541                           l1690:	
  2542  025F                     	movf	(memset@s),w
  2543  025F  0853               	movwf	fsr1l
  2544  0260  0086               	movf	(memset@s+1),w
  2545  0261  0854               	movwf	fsr1h
  2546  0262  0087               	movf	(memset@c),w
  2547  0263  0849               	movwf	indf1
  2548  0264  0081               	
  2549                           l1692:	
  2550  0265                     	movlw	01h
  2551  0265  3001               	subwf	(memset@n),f
  2552  0266  02CB               	movlw	0
  2553  0267  3000               	subwfb	(memset@n+1),f
  2554  0268  3BCC               	
  2555                           l1694:	
  2556  0269                     	movlw	01h
  2557  0269  3001               	addwf	(memset@s),f
  2558  026A  07D3               	movlw	0
  2559  026B  3000               	addwfc	(memset@s+1),f
  2560  026C  3DD4               	goto	l1696
  2561  026D  2A6E               	
  2562                           l675:	
  2563  026E                     	
  2564                           l1696:	
  2565  026E                     	movf	((memset@n)),w
  2566  026E  084B               iorwf	((memset@n+1)),w
  2567  026F  044C               	btfss	status,2
  2568  0270  1D03               	goto	u811
  2569  0271  2A73               	goto	u810
  2570  0272  2A74               u811:
  2571  0273                     	goto	l1690
  2572  0273  2A5F               u810:
  2573  0274                     	goto	l671
  2574  0274  2A75               	
  2575                           l677:	
  2576  0275                     	line	90
  2577                           ;	Return value of _memset is never used
  2578                           	
  2579                           l671:	
  2580  0275                     	return
  2581  0275  0008               	opt stack 0
  2582                           GLOBAL	__end_of_memset
  2583                           	__end_of_memset:
  2584  0276                     	signat	_memset,12409
  2585                           	global	_lcdWriteText
  2586                           
  2587 ;; *************** function _lcdWriteText *****************
  2588 ;; Defined at:
  2589 ;;		line 38 in file "LCD_hd44780u_qy_2004a.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  iText           2   19[BANK0 ] PTR unsigned char 
  2592 ;;		 -> main@wConv(8), STR_1(26), 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  wCharReading    1   24[BANK0 ] unsigned char 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2604 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  2605 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  2606 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  2607 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  2608 ;;Total ram usage:        6 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    7
  2611 ;; This function calls:
  2612 ;;		_writeTxtChk
  2613 ;; This function is called by:
  2614 ;;		_main
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2618                           	file	"LCD_hd44780u_qy_2004a.c"
  2619                           	line	38
  2620                           global __ptext6
  2621                           __ptext6:	;psect for function _lcdWriteText
  2622  0385                     psect	text6
  2623                           	file	"LCD_hd44780u_qy_2004a.c"
  2624                           	line	38
  2625                           	global	__size_of_lcdWriteText
  2626                           	__size_of_lcdWriteText	equ	__end_of_lcdWriteText-_lcdWriteText
  2627  002A                     	
  2628                           _lcdWriteText:	
  2629  0385                     ;incstack = 0
  2630                           	opt	stack 8
  2631                           ; Regs used in _lcdWriteText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2632                           	line	40
  2633                           	
  2634                           l1736:	
  2635  0385                     ;LCD_hd44780u_qy_2004a.c: 38: void lcdWriteText(char *iText);LCD_hd44780u_qy_2004a.c: 39
                                 :  {;LCD_hd44780u_qy_2004a.c: 40:   unsigned char wCharReadingPos = 0;
  2636                           	movlb 0	; select bank0
  2637  0385  0020               	clrf	(lcdWriteText@wCharReadingPos)
  2638  0386  01D6               	line	41
  2639                           ;LCD_hd44780u_qy_2004a.c: 41:   while( iText[wCharReadingPos] != 0)
  2640                           	goto	l1742
  2641  0387  2B9D               	
  2642                           l145:	
  2643  0388                     	line	43
  2644                           	
  2645                           l1738:	
  2646  0388                     ;LCD_hd44780u_qy_2004a.c: 42:   {;LCD_hd44780u_qy_2004a.c: 43:     writeTxtChk(iText[wCh
                                 arReadingPos]);
  2647                           	movf	(lcdWriteText@iText+1),w
  2648  0388  0852               	movwf	(??_lcdWriteText+0)+0+1
  2649  0389  00D4               	movf	(lcdWriteText@iText),w
  2650  038A  0851               	movwf	(??_lcdWriteText+0)+0
  2651  038B  00D3               	movf	(lcdWriteText@wCharReadingPos),w
  2652  038C  0856               	addwf	(??_lcdWriteText+0)+0,w
  2653  038D  0753               	movwf	fsr0l
  2654  038E  0084               	movf	(??_lcdWriteText+0)+1,w
  2655  038F  0854               	skipnc
  2656  0390  1803               	incf	(??_lcdWriteText+0)+1,w
  2657  0391  0A54               	movwf	fsr0h
  2658  0392  0085               
  2659                           	movf	indf0,w ;code access
  2660  0393  0800               	fcall	_writeTxtChk
  2661  0394  3182  2276  3183   	line	44
  2662                           	
  2663                           l1740:	
  2664  0397                     ;LCD_hd44780u_qy_2004a.c: 44:     wCharReadingPos++;
  2665                           	movlw	low(01h)
  2666  0397  3001               	movlb 0	; select bank0
  2667  0398  0020               	movwf	(??_lcdWriteText+0)+0
  2668  0399  00D3               	movf	(??_lcdWriteText+0)+0,w
  2669  039A  0853               	addwf	(lcdWriteText@wCharReadingPos),f
  2670  039B  07D6               	goto	l1742
  2671  039C  2B9D               	line	45
  2672                           ;LCD_hd44780u_qy_2004a.c: 45:   }
  2673                           	
  2674                           l144:	
  2675  039D                     	line	41
  2676                           	
  2677                           l1742:	
  2678  039D                     ;LCD_hd44780u_qy_2004a.c: 41:   while( iText[wCharReadingPos] != 0)
  2679                           	movf	(lcdWriteText@iText+1),w
  2680  039D  0852               	movwf	(??_lcdWriteText+0)+0+1
  2681  039E  00D4               	movf	(lcdWriteText@iText),w
  2682  039F  0851               	movwf	(??_lcdWriteText+0)+0
  2683  03A0  00D3               	movf	(lcdWriteText@wCharReadingPos),w
  2684  03A1  0856               	addwf	(??_lcdWriteText+0)+0,w
  2685  03A2  0753               	movwf	fsr0l
  2686  03A3  0084               	movf	(??_lcdWriteText+0)+1,w
  2687  03A4  0854               	skipnc
  2688  03A5  1803               	incf	(??_lcdWriteText+0)+1,w
  2689  03A6  0A54               	movwf	fsr0h
  2690  03A7  0085               
  2691                           	moviw	fsr0++
  2692  03A8  0012               	btfss	status,2
  2693  03A9  1D03               	goto	u821
  2694  03AA  2BAC               	goto	u820
  2695  03AB  2BAD               u821:
  2696  03AC                     	goto	l1738
  2697  03AC  2B88               u820:
  2698  03AD                     	goto	l147
  2699  03AD  2BAE               	
  2700                           l146:	
  2701  03AE                     	line	46
  2702                           	
  2703                           l147:	
  2704  03AE                     	return
  2705  03AE  0008               	opt stack 0
  2706                           GLOBAL	__end_of_lcdWriteText
  2707                           	__end_of_lcdWriteText:
  2708  03AF                     	signat	_lcdWriteText,4217
  2709                           	global	_writeTxtChk
  2710                           
  2711 ;; *************** function _writeTxtChk *****************
  2712 ;; Defined at:
  2713 ;;		line 75 in file "LCD_hd44780u_qy_2004a.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  iOpCode         1    wreg     unsigned char 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  iOpCode         1   18[BANK0 ] unsigned char 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      void 
  2720 ;; Registers used:
  2721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2728 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  2729 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  2730 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  2731 ;;Total ram usage:        3 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:    6
  2734 ;; This function calls:
  2735 ;;		_SetToSendDataToLCD
  2736 ;;		_setCursorPosition
  2737 ;;		_setData
  2738 ;;		_waitLCDBusy
  2739 ;; This function is called by:
  2740 ;;		_lcdWriteText
  2741 ;;		_lcdWriteRotText
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2745                           	line	75
  2746                           global __ptext7
  2747                           __ptext7:	;psect for function _writeTxtChk
  2748  0276                     psect	text7
  2749                           	file	"LCD_hd44780u_qy_2004a.c"
  2750                           	line	75
  2751                           	global	__size_of_writeTxtChk
  2752                           	__size_of_writeTxtChk	equ	__end_of_writeTxtChk-_writeTxtChk
  2753  0056                     	
  2754                           _writeTxtChk:	
  2755  0276                     ;incstack = 0
  2756                           	opt	stack 8
  2757                           ; Regs used in _writeTxtChk: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2758                           ;writeTxtChk@iOpCode stored from wreg
  2759                           	movlb 0	; select bank0
  2760  0276  0020               	movwf	(writeTxtChk@iOpCode)
  2761  0277  00D0               	line	77
  2762                           	
  2763                           l1608:	
  2764  0278                     ;LCD_hd44780u_qy_2004a.c: 75: void writeTxtChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 76
                                 : {;LCD_hd44780u_qy_2004a.c: 77:   SetToSendDataToLCD();
  2765                           	fcall	_SetToSendDataToLCD
  2766  0278  3184  24D2  3182   	line	78
  2767                           	
  2768                           l1610:	
  2769  027B                     ;LCD_hd44780u_qy_2004a.c: 78:   PORTAbits.RA4 = 1;
  2770                           	movlb 0	; select bank0
  2771  027B  0020               	bsf	(12),4	;volatile
  2772  027C  160C               	line	79
  2773                           	
  2774                           l1612:	
  2775  027D                     ;LCD_hd44780u_qy_2004a.c: 79:   PORTAbits.RA7 = 0;
  2776                           	bcf	(12),7	;volatile
  2777  027D  138C               	line	80
  2778                           ;LCD_hd44780u_qy_2004a.c: 80:   switch(mWritingPosition)
  2779                           	goto	l1624
  2780  027E  2A95               	line	82
  2781                           ;LCD_hd44780u_qy_2004a.c: 81:   {;LCD_hd44780u_qy_2004a.c: 82:     case 21:
  2782                           	
  2783                           l163:	
  2784  027F                     	line	83
  2785                           	
  2786                           l1614:	
  2787  027F                     ;LCD_hd44780u_qy_2004a.c: 83:       setCursorPosition(0x40);
  2788                           	movlw	low(040h)
  2789  027F  3040               	fcall	_setCursorPosition
  2790  0280  3183  23FC  3182   	line	84
  2791                           ;LCD_hd44780u_qy_2004a.c: 84:       break;
  2792                           	goto	l1626
  2793  0283  2AAC               	line	85
  2794                           ;LCD_hd44780u_qy_2004a.c: 85:     case 41:
  2795                           	
  2796                           l165:	
  2797  0284                     	line	86
  2798                           	
  2799                           l1616:	
  2800  0284                     ;LCD_hd44780u_qy_2004a.c: 86:       setCursorPosition(0x14);
  2801                           	movlw	low(014h)
  2802  0284  3014               	fcall	_setCursorPosition
  2803  0285  3183  23FC  3182   	line	87
  2804                           ;LCD_hd44780u_qy_2004a.c: 87:       break;
  2805                           	goto	l1626
  2806  0288  2AAC               	line	88
  2807                           ;LCD_hd44780u_qy_2004a.c: 88:     case 61:
  2808                           	
  2809                           l166:	
  2810  0289                     	line	89
  2811                           	
  2812                           l1618:	
  2813  0289                     ;LCD_hd44780u_qy_2004a.c: 89:       setCursorPosition(0x54);
  2814                           	movlw	low(054h)
  2815  0289  3054               	fcall	_setCursorPosition
  2816  028A  3183  23FC  3182   	line	90
  2817                           ;LCD_hd44780u_qy_2004a.c: 90:       break;
  2818                           	goto	l1626
  2819  028D  2AAC               	line	91
  2820                           ;LCD_hd44780u_qy_2004a.c: 91:     case 81:
  2821                           	
  2822                           l167:	
  2823  028E                     	line	92
  2824                           	
  2825                           l1620:	
  2826  028E                     ;LCD_hd44780u_qy_2004a.c: 92:       setCursorPosition(0x00);
  2827                           	movlw	low(0)
  2828  028E  3000               	fcall	_setCursorPosition
  2829  028F  3183  23FC  3182   	line	93
  2830                           ;LCD_hd44780u_qy_2004a.c: 93:       break;
  2831                           	goto	l1626
  2832  0292  2AAC               	line	94
  2833                           ;LCD_hd44780u_qy_2004a.c: 94:     default:
  2834                           	
  2835                           l168:	
  2836  0293                     	line	95
  2837                           ;LCD_hd44780u_qy_2004a.c: 95:       break;
  2838                           	goto	l1626
  2839  0293  2AAC               	line	96
  2840                           	
  2841                           l1622:	
  2842  0294                     ;LCD_hd44780u_qy_2004a.c: 96:   }
  2843                           	goto	l1626
  2844  0294  2AAC               	
  2845                           l162:	
  2846  0295                     	
  2847                           l1624:	
  2848  0295                     	movlb 0	; select bank0
  2849  0295  0020               	movf	(_mWritingPosition),w
  2850  0296  0827               	movwf	(??_writeTxtChk+0)+0
  2851  0297  00CE               	clrf	(??_writeTxtChk+0)+0+1
  2852  0298  01CF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2853                           ; Switch size 1, requested type "space"
  2854                           ; Number of cases is 1, Range of values is 0 to 0
  2855                           ; switch strategies available:
  2856                           ; Name         Instructions Cycles
  2857                           ; simple_byte            4     3 (average)
  2858                           ; direct_byte            8     6 (fixed)
  2859                           ; jumptable            260     6 (fixed)
  2860                           ;	Chosen strategy is simple_byte
  2861                           
  2862                           	movf 1+(??_writeTxtChk+0)+0,w
  2863  0299  084F               	opt asmopt_push
  2864                           	opt asmopt_off
  2865                           	xorlw	0^0	; case 0
  2866  029A  3A00               	skipnz
  2867  029B  1903               	goto	l1912
  2868  029C  2A9E               	goto	l1626
  2869  029D  2AAC               	opt asmopt_pop
  2870                           	
  2871                           l1912:	
  2872  029E                     ; Switch size 1, requested type "space"
  2873                           ; Number of cases is 4, Range of values is 21 to 81
  2874                           ; switch strategies available:
  2875                           ; Name         Instructions Cycles
  2876                           ; simple_byte           13     7 (average)
  2877                           ; direct_byte          131     9 (fixed)
  2878                           ; jumptable            263     9 (fixed)
  2879                           ;	Chosen strategy is simple_byte
  2880                           
  2881                           	movf 0+(??_writeTxtChk+0)+0,w
  2882  029E  084E               	opt asmopt_push
  2883                           	opt asmopt_off
  2884                           	xorlw	21^0	; case 21
  2885  029F  3A15               	skipnz
  2886  02A0  1903               	goto	l1614
  2887  02A1  2A7F               	xorlw	41^21	; case 41
  2888  02A2  3A3C               	skipnz
  2889  02A3  1903               	goto	l1616
  2890  02A4  2A84               	xorlw	61^41	; case 61
  2891  02A5  3A14               	skipnz
  2892  02A6  1903               	goto	l1618
  2893  02A7  2A89               	xorlw	81^61	; case 81
  2894  02A8  3A6C               	skipnz
  2895  02A9  1903               	goto	l1620
  2896  02AA  2A8E               	goto	l1626
  2897  02AB  2AAC               	opt asmopt_pop
  2898                           
  2899                           	
  2900                           l164:	
  2901  02AC                     	line	97
  2902                           	
  2903                           l1626:	
  2904  02AC                     ;LCD_hd44780u_qy_2004a.c: 97:   waitLCDBusy();
  2905                           	fcall	_waitLCDBusy
  2906  02AC  3183  2358  3182   	line	98
  2907                           	
  2908                           l1628:	
  2909  02AF                     ;LCD_hd44780u_qy_2004a.c: 98:   SetToSendDataToLCD();
  2910                           	fcall	_SetToSendDataToLCD
  2911  02AF  3184  24D2  3182   	line	99
  2912                           	
  2913                           l1630:	
  2914  02B2                     ;LCD_hd44780u_qy_2004a.c: 99:   PORTAbits.RA4 = 1;
  2915                           	movlb 0	; select bank0
  2916  02B2  0020               	bsf	(12),4	;volatile
  2917  02B3  160C               	line	100
  2918                           	
  2919                           l1632:	
  2920  02B4                     ;LCD_hd44780u_qy_2004a.c: 100:   PORTAbits.RA7 = 0;
  2921                           	bcf	(12),7	;volatile
  2922  02B4  138C               	line	101
  2923                           	
  2924                           l1634:	
  2925  02B5                     ;LCD_hd44780u_qy_2004a.c: 101:   setData(iOpCode >> 4);
  2926                           	movf	(writeTxtChk@iOpCode),w
  2927  02B5  0850               	movwf	(??_writeTxtChk+0)+0
  2928  02B6  00CE               	movlw	04h
  2929  02B7  3004               u745:
  2930  02B8                     	lsrf	(??_writeTxtChk+0)+0,f
  2931  02B8  36CE               	decfsz	wreg,f
  2932  02B9  0B89               	goto	u745
  2933  02BA  2AB8               	movf	0+(??_writeTxtChk+0)+0,w
  2934  02BB  084E               	fcall	_setData
  2935  02BC  3183  231C  3182   	line	102
  2936                           	
  2937                           l1636:	
  2938  02BF                     ;LCD_hd44780u_qy_2004a.c: 102:   setData(iOpCode);
  2939                           	movlb 0	; select bank0
  2940  02BF  0020               	movf	(writeTxtChk@iOpCode),w
  2941  02C0  0850               	fcall	_setData
  2942  02C1  3183  231C  3182   	line	103
  2943                           	
  2944                           l1638:	
  2945  02C4                     ;LCD_hd44780u_qy_2004a.c: 103:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  2946                           		opt asmopt_push
  2947                           	opt asmopt_off
  2948                           	nop2	;2 cycle nop
  2949  02C4  3200               	nop2	;2 cycle nop
  2950  02C5  3200               	opt asmopt_pop
  2951                           
  2952                           	line	104
  2953                           	
  2954                           l1640:	
  2955  02C6                     ;LCD_hd44780u_qy_2004a.c: 104:   mWritingPosition++;
  2956                           	movlw	low(01h)
  2957  02C6  3001               	movlb 0	; select bank0
  2958  02C7  0020               	movwf	(??_writeTxtChk+0)+0
  2959  02C8  00CE               	movf	(??_writeTxtChk+0)+0,w
  2960  02C9  084E               	addwf	(_mWritingPosition),f
  2961  02CA  07A7               	line	105
  2962                           	
  2963                           l169:	
  2964  02CB                     	return
  2965  02CB  0008               	opt stack 0
  2966                           GLOBAL	__end_of_writeTxtChk
  2967                           	__end_of_writeTxtChk:
  2968  02CC                     	signat	_writeTxtChk,4217
  2969                           	global	_setCursorPosition
  2970                           
  2971 ;; *************** function _setCursorPosition *****************
  2972 ;; Defined at:
  2973 ;;		line 229 in file "LCD_hd44780u_qy_2004a.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  iPosition       1    wreg     unsigned char 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  iPosition       1   15[BANK0 ] unsigned char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      void 
  2980 ;; Registers used:
  2981 ;;		wreg, status,2, status,0, pclath, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2988 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  2989 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  2990 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  2991 ;;Total ram usage:        2 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    5
  2994 ;; This function calls:
  2995 ;;		_SetToSendDataToLCD
  2996 ;;		_setData
  2997 ;;		_waitLCDBusy
  2998 ;; This function is called by:
  2999 ;;		_main
  3000 ;;		_writeTxtChk
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3004                           	line	229
  3005                           global __ptext8
  3006                           __ptext8:	;psect for function _setCursorPosition
  3007  03FC                     psect	text8
  3008                           	file	"LCD_hd44780u_qy_2004a.c"
  3009                           	line	229
  3010                           	global	__size_of_setCursorPosition
  3011                           	__size_of_setCursorPosition	equ	__end_of_setCursorPosition-_setCursorPosition
  3012  0021                     	
  3013                           _setCursorPosition:	
  3014  03FC                     ;incstack = 0
  3015                           	opt	stack 10
  3016                           ; Regs used in _setCursorPosition: [wreg+status,2+status,0+pclath+cstack]
  3017                           ;setCursorPosition@iPosition stored from wreg
  3018                           	movlb 0	; select bank0
  3019  03FC  0020               	movwf	(setCursorPosition@iPosition)
  3020  03FD  00CD               	line	231
  3021                           	
  3022                           l1592:	
  3023  03FE                     ;LCD_hd44780u_qy_2004a.c: 229: void setCursorPosition(char iPosition);LCD_hd44780u_qy_20
                                 04a.c: 230: {;LCD_hd44780u_qy_2004a.c: 231:   waitLCDBusy();
  3024                           	fcall	_waitLCDBusy
  3025  03FE  3183  2358  3183   	line	233
  3026                           	
  3027                           l1594:	
  3028  0401                     ;LCD_hd44780u_qy_2004a.c: 233:   SetToSendDataToLCD();
  3029                           	fcall	_SetToSendDataToLCD
  3030  0401  3184  24D2  3183   	line	234
  3031                           	
  3032                           l1596:	
  3033  0404                     ;LCD_hd44780u_qy_2004a.c: 234:   PORTAbits.RA4 = 0;
  3034                           	movlb 0	; select bank0
  3035  0404  0020               	bcf	(12),4	;volatile
  3036  0405  120C               	line	235
  3037                           	
  3038                           l1598:	
  3039  0406                     ;LCD_hd44780u_qy_2004a.c: 235:   PORTAbits.RA7 = 0;
  3040                           	bcf	(12),7	;volatile
  3041  0406  138C               	line	236
  3042                           	
  3043                           l1600:	
  3044  0407                     ;LCD_hd44780u_qy_2004a.c: 236:   setData((iPosition >> 4) | 0x8 );
  3045                           	movf	(setCursorPosition@iPosition),w
  3046  0407  084D               	movwf	(??_setCursorPosition+0)+0
  3047  0408  00CC               	movlw	04h
  3048  0409  3004               u735:
  3049  040A                     	lsrf	(??_setCursorPosition+0)+0,f
  3050  040A  36CC               	decfsz	wreg,f
  3051  040B  0B89               	goto	u735
  3052  040C  2C0A               	movf	0+(??_setCursorPosition+0)+0,w
  3053  040D  084C               	iorlw	08h
  3054  040E  3808               	fcall	_setData
  3055  040F  3183  231C  3183   	line	237
  3056                           	
  3057                           l1602:	
  3058  0412                     ;LCD_hd44780u_qy_2004a.c: 237:   setData(iPosition);
  3059                           	movlb 0	; select bank0
  3060  0412  0020               	movf	(setCursorPosition@iPosition),w
  3061  0413  084D               	fcall	_setData
  3062  0414  3183  231C  3183   	line	238
  3063                           ;LCD_hd44780u_qy_2004a.c: 238:   mWritingPosition = iPosition;
  3064                           	movlb 0	; select bank0
  3065  0417  0020               	movf	(setCursorPosition@iPosition),w
  3066  0418  084D               	movwf	(??_setCursorPosition+0)+0
  3067  0419  00CC               	movf	(??_setCursorPosition+0)+0,w
  3068  041A  084C               	movwf	(_mWritingPosition)
  3069  041B  00A7               	line	239
  3070                           	
  3071                           l232:	
  3072  041C                     	return
  3073  041C  0008               	opt stack 0
  3074                           GLOBAL	__end_of_setCursorPosition
  3075                           	__end_of_setCursorPosition:
  3076  041D                     	signat	_setCursorPosition,4217
  3077                           	global	_initLCD
  3078                           
  3079 ;; *************** function _initLCD *****************
  3080 ;; Defined at:
  3081 ;;		line 7 in file "LCD_hd44780u_qy_2004a.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;		None
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;		None
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      void 
  3088 ;; Registers used:
  3089 ;;		wreg, status,2, status,0, pclath, cstack
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3097 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3098 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3099 ;;Total ram usage:        1 bytes
  3100 ;; Hardware stack levels used:    1
  3101 ;; Hardware stack levels required when called:    7
  3102 ;; This function calls:
  3103 ;;		_clearDisplay
  3104 ;;		_setData
  3105 ;;		_writeInsChk
  3106 ;; This function is called by:
  3107 ;;		_main
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3111                           	line	7
  3112                           global __ptext9
  3113                           __ptext9:	;psect for function _initLCD
  3114  02CC                     psect	text9
  3115                           	file	"LCD_hd44780u_qy_2004a.c"
  3116                           	line	7
  3117                           	global	__size_of_initLCD
  3118                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  3119  0050                     	
  3120                           _initLCD:	
  3121  02CC                     ;incstack = 0
  3122                           	opt	stack 8
  3123                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  3124                           	line	10
  3125                           	
  3126                           l1698:	
  3127  02CC                     ;LCD_hd44780u_qy_2004a.c: 10:   TRISAbits.TRISA4 = 0;
  3128                           	movlb 1	; select bank1
  3129  02CC  0021               	bcf	(140)^080h,4	;volatile
  3130  02CD  120C               	line	11
  3131                           ;LCD_hd44780u_qy_2004a.c: 11:   TRISAbits.TRISA7 = 0;
  3132                           	bcf	(140)^080h,7	;volatile
  3133  02CE  138C               	line	12
  3134                           ;LCD_hd44780u_qy_2004a.c: 12:   TRISAbits.TRISA5 = 0;
  3135                           	bcf	(140)^080h,5	;volatile
  3136  02CF  128C               	line	13
  3137                           ;LCD_hd44780u_qy_2004a.c: 13:   PORTAbits.RA4 = 0;
  3138                           	movlb 0	; select bank0
  3139  02D0  0020               	bcf	(12),4	;volatile
  3140  02D1  120C               	line	14
  3141                           ;LCD_hd44780u_qy_2004a.c: 14:   PORTAbits.RA7 = 0;
  3142                           	bcf	(12),7	;volatile
  3143  02D2  138C               	line	15
  3144                           ;LCD_hd44780u_qy_2004a.c: 15:   PORTAbits.RA5 = 0;
  3145                           	bcf	(12),5	;volatile
  3146  02D3  128C               	line	18
  3147                           	
  3148                           l1700:	
  3149  02D4                     ;LCD_hd44780u_qy_2004a.c: 18:   _delay((unsigned long)((15)*(16000000/4000.0)));
  3150                           	opt asmopt_push
  3151                           opt asmopt_off
  3152                           movlw	78
  3153  02D4  304E               	movlb 0	; select bank0
  3154  02D5  0020               movwf	((??_initLCD+0)+0),f
  3155  02D6  00CD               	movlw	235
  3156  02D7  30EB               u977:
  3157  02D8                     decfsz	wreg
  3158  02D8  0B89               	goto	u977
  3159  02D9  2AD8               	decfsz	((??_initLCD+0)+0),f
  3160  02DA  0BCD               	goto	u977
  3161  02DB  2AD8               opt asmopt_pop
  3162                           
  3163                           	line	19
  3164                           	
  3165                           l1702:	
  3166  02DC                     ;LCD_hd44780u_qy_2004a.c: 19:   setData(0x3);
  3167                           	movlw	low(03h)
  3168  02DC  3003               	fcall	_setData
  3169  02DD  3183  231C  3182   	line	20
  3170                           	
  3171                           l1704:	
  3172  02E0                     ;LCD_hd44780u_qy_2004a.c: 20:   _delay((unsigned long)((5)*(16000000/4000.0)));
  3173                           	opt asmopt_push
  3174                           opt asmopt_off
  3175                           movlw	26
  3176  02E0  301A               	movlb 0	; select bank0
  3177  02E1  0020               movwf	((??_initLCD+0)+0),f
  3178  02E2  00CD               	movlw	248
  3179  02E3  30F8               u987:
  3180  02E4                     decfsz	wreg
  3181  02E4  0B89               	goto	u987
  3182  02E5  2AE4               	decfsz	((??_initLCD+0)+0),f
  3183  02E6  0BCD               	goto	u987
  3184  02E7  2AE4               	nop
  3185  02E8  0000               opt asmopt_pop
  3186                           
  3187                           	line	21
  3188                           ;LCD_hd44780u_qy_2004a.c: 21:   setData(0x3);
  3189                           	movlw	low(03h)
  3190  02E9  3003               	fcall	_setData
  3191  02EA  3183  231C  3182   	line	22
  3192                           	
  3193                           l1706:	
  3194  02ED                     ;LCD_hd44780u_qy_2004a.c: 22:   _delay((unsigned long)((150)*(16000000/4000000.0)));
  3195                           	opt asmopt_push
  3196                           opt asmopt_off
  3197                           	movlw	200
  3198  02ED  30C8               u997:
  3199  02EE                     decfsz	wreg
  3200  02EE  0B89               	goto	u997
  3201  02EF  2AEE               opt asmopt_pop
  3202                           
  3203                           	line	23
  3204                           	
  3205                           l1708:	
  3206  02F0                     ;LCD_hd44780u_qy_2004a.c: 23:   setData(0x3);
  3207                           	movlw	low(03h)
  3208  02F0  3003               	fcall	_setData
  3209  02F1  3183  231C  3182   	line	24
  3210                           ;LCD_hd44780u_qy_2004a.c: 24:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  3211                           	opt asmopt_push
  3212                           opt asmopt_off
  3213                           	movlw	13
  3214  02F4  300D               u1007:
  3215  02F5                     decfsz	wreg
  3216  02F5  0B89               	goto	u1007
  3217  02F6  2AF5               	nop
  3218  02F7  0000               opt asmopt_pop
  3219                           
  3220                           	line	25
  3221                           	
  3222                           l1710:	
  3223  02F8                     ;LCD_hd44780u_qy_2004a.c: 25:   setData(0x2);
  3224                           	movlw	low(02h)
  3225  02F8  3002               	fcall	_setData
  3226  02F9  3183  231C  3182   	line	26
  3227                           	
  3228                           l1712:	
  3229  02FC                     ;LCD_hd44780u_qy_2004a.c: 26:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  3230                           	opt asmopt_push
  3231                           opt asmopt_off
  3232                           	movlw	13
  3233  02FC  300D               u1017:
  3234  02FD                     decfsz	wreg
  3235  02FD  0B89               	goto	u1017
  3236  02FE  2AFD               	nop
  3237  02FF  0000               opt asmopt_pop
  3238                           
  3239                           	line	27
  3240                           ;LCD_hd44780u_qy_2004a.c: 27:   writeInsChk(0x28);
  3241                           	movlw	low(028h)
  3242  0300  3028               	fcall	_writeInsChk
  3243  0301  3184  24B0  3182   	line	28
  3244                           	
  3245                           l1714:	
  3246  0304                     ;LCD_hd44780u_qy_2004a.c: 28:   mDisplayOnOffReg = 0x0F;
  3247                           	movlw	low(0Fh)
  3248  0304  300F               	movlb 0	; select bank0
  3249  0305  0020               	movwf	(??_initLCD+0)+0
  3250  0306  00CD               	movf	(??_initLCD+0)+0,w
  3251  0307  084D               	movwf	(_mDisplayOnOffReg)
  3252  0308  00A9               	line	29
  3253                           	
  3254                           l1716:	
  3255  0309                     ;LCD_hd44780u_qy_2004a.c: 29:   mCursorDisplayShiftReg= 0x06;
  3256                           	movlw	low(06h)
  3257  0309  3006               	movwf	(??_initLCD+0)+0
  3258  030A  00CD               	movf	(??_initLCD+0)+0,w
  3259  030B  084D               	movwf	(_mCursorDisplayShiftReg)
  3260  030C  00A8               	line	30
  3261                           ;LCD_hd44780u_qy_2004a.c: 30:   writeInsChk(mDisplayOnOffReg);
  3262                           	movf	(_mDisplayOnOffReg),w
  3263  030D  0829               	fcall	_writeInsChk
  3264  030E  3184  24B0  3182   	line	32
  3265                           ;LCD_hd44780u_qy_2004a.c: 32:   clearDisplay();
  3266                           	fcall	_clearDisplay
  3267  0311  3184  24DE  3182   	line	33
  3268                           ;LCD_hd44780u_qy_2004a.c: 33:   writeInsChk(0x06);
  3269                           	movlw	low(06h)
  3270  0314  3006               	fcall	_writeInsChk
  3271  0315  3184  24B0  3182   	line	34
  3272                           	
  3273                           l1718:	
  3274  0318                     ;LCD_hd44780u_qy_2004a.c: 34:   mWritingPosition=1;
  3275                           	movlb 0	; select bank0
  3276  0318  0020               	clrf	(_mWritingPosition)
  3277  0319  01A7               	incf	(_mWritingPosition),f
  3278  031A  0AA7               	line	36
  3279                           	
  3280                           l141:	
  3281  031B                     	return
  3282  031B  0008               	opt stack 0
  3283                           GLOBAL	__end_of_initLCD
  3284                           	__end_of_initLCD:
  3285  031C                     	signat	_initLCD,89
  3286                           	global	_clearDisplay
  3287                           
  3288 ;; *************** function _clearDisplay *****************
  3289 ;; Defined at:
  3290 ;;		line 220 in file "LCD_hd44780u_qy_2004a.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;		None
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;		None
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, status,0, pclath, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3308 ;;Total ram usage:        0 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:    6
  3311 ;; This function calls:
  3312 ;;		_writeInsChk
  3313 ;; This function is called by:
  3314 ;;		_main
  3315 ;;		_initLCD
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3319                           	line	220
  3320                           global __ptext10
  3321                           __ptext10:	;psect for function _clearDisplay
  3322  04DE                     psect	text10
  3323                           	file	"LCD_hd44780u_qy_2004a.c"
  3324                           	line	220
  3325                           	global	__size_of_clearDisplay
  3326                           	__size_of_clearDisplay	equ	__end_of_clearDisplay-_clearDisplay
  3327  0005                     	
  3328                           _clearDisplay:	
  3329  04DE                     ;incstack = 0
  3330                           	opt	stack 8
  3331                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  3332                           	line	222
  3333                           	
  3334                           l1606:	
  3335  04DE                     ;LCD_hd44780u_qy_2004a.c: 222:   writeInsChk(0x01);
  3336                           	movlw	low(01h)
  3337  04DE  3001               	fcall	_writeInsChk
  3338  04DF  3184  24B0  3184   	line	223
  3339                           	
  3340                           l226:	
  3341  04E2                     	return
  3342  04E2  0008               	opt stack 0
  3343                           GLOBAL	__end_of_clearDisplay
  3344                           	__end_of_clearDisplay:
  3345  04E3                     	signat	_clearDisplay,89
  3346                           	global	_writeInsChk
  3347                           
  3348 ;; *************** function _writeInsChk *****************
  3349 ;; Defined at:
  3350 ;;		line 107 in file "LCD_hd44780u_qy_2004a.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  iOpCode         1    wreg     unsigned char 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  iOpCode         1   14[BANK0 ] unsigned char 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, status,2, status,0, pclath, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3365 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3367 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3368 ;;Total ram usage:        1 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    5
  3371 ;; This function calls:
  3372 ;;		_waitLCDBusy
  3373 ;;		_writeInsNoChk
  3374 ;; This function is called by:
  3375 ;;		_initLCD
  3376 ;;		_powerOnLcd
  3377 ;;		_setNotBlinkingCursor
  3378 ;;		_setCursorOff
  3379 ;;		_clearDisplay
  3380 ;;		_moveCursorToHome
  3381 ;;		_powerOffLcd
  3382 ;;		_setBlinkingCursor
  3383 ;;		_setCursorOn
  3384 ;;		_setCursorMovingLeft
  3385 ;;		_setCursorMovingRight
  3386 ;;		_setDisplayMovingRight
  3387 ;;		_setDisplayMovingLeft
  3388 ;;		_moveCursorRight
  3389 ;;		_moveCursorLeft
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3393                           	line	107
  3394                           global __ptext11
  3395                           __ptext11:	;psect for function _writeInsChk
  3396  04B0                     psect	text11
  3397                           	file	"LCD_hd44780u_qy_2004a.c"
  3398                           	line	107
  3399                           	global	__size_of_writeInsChk
  3400                           	__size_of_writeInsChk	equ	__end_of_writeInsChk-_writeInsChk
  3401  000B                     	
  3402                           _writeInsChk:	
  3403  04B0                     ;incstack = 0
  3404                           	opt	stack 9
  3405                           ; Regs used in _writeInsChk: [wreg+status,2+status,0+pclath+cstack]
  3406                           ;writeInsChk@iOpCode stored from wreg
  3407                           	movlb 0	; select bank0
  3408  04B0  0020               	movwf	(writeInsChk@iOpCode)
  3409  04B1  00CC               	line	109
  3410                           	
  3411                           l1604:	
  3412  04B2                     ;LCD_hd44780u_qy_2004a.c: 107: void writeInsChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 08: {;LCD_hd44780u_qy_2004a.c: 109:   waitLCDBusy();
  3413                           	fcall	_waitLCDBusy
  3414  04B2  3183  2358  3184   	line	110
  3415                           ;LCD_hd44780u_qy_2004a.c: 110:   writeInsNoChk(iOpCode);
  3416                           	movlb 0	; select bank0
  3417  04B5  0020               	movf	(writeInsChk@iOpCode),w
  3418  04B6  084C               	fcall	_writeInsNoChk
  3419  04B7  3184  2453  3184   	line	111
  3420                           	
  3421                           l172:	
  3422  04BA                     	return
  3423  04BA  0008               	opt stack 0
  3424                           GLOBAL	__end_of_writeInsChk
  3425                           	__end_of_writeInsChk:
  3426  04BB                     	signat	_writeInsChk,4217
  3427                           	global	_writeInsNoChk
  3428                           
  3429 ;; *************** function _writeInsNoChk *****************
  3430 ;; Defined at:
  3431 ;;		line 113 in file "LCD_hd44780u_qy_2004a.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  iOpCode         1    wreg     unsigned char 
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;  iOpCode         1   13[BANK0 ] unsigned char 
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  1    wreg      void 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0, pclath, cstack
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3446 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3447 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3448 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  3449 ;;Total ram usage:        2 bytes
  3450 ;; Hardware stack levels used:    1
  3451 ;; Hardware stack levels required when called:    4
  3452 ;; This function calls:
  3453 ;;		_SetToSendDataToLCD
  3454 ;;		_setData
  3455 ;; This function is called by:
  3456 ;;		_writeInsChk
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3460                           	line	113
  3461                           global __ptext12
  3462                           __ptext12:	;psect for function _writeInsNoChk
  3463  0453                     psect	text12
  3464                           	file	"LCD_hd44780u_qy_2004a.c"
  3465                           	line	113
  3466                           	global	__size_of_writeInsNoChk
  3467                           	__size_of_writeInsNoChk	equ	__end_of_writeInsNoChk-_writeInsNoChk
  3468  0018                     	
  3469                           _writeInsNoChk:	
  3470  0453                     ;incstack = 0
  3471                           	opt	stack 9
  3472                           ; Regs used in _writeInsNoChk: [wreg+status,2+status,0+pclath+cstack]
  3473                           ;writeInsNoChk@iOpCode stored from wreg
  3474                           	movlb 0	; select bank0
  3475  0453  0020               	movwf	(writeInsNoChk@iOpCode)
  3476  0454  00CB               	line	115
  3477                           	
  3478                           l1582:	
  3479  0455                     ;LCD_hd44780u_qy_2004a.c: 113: void writeInsNoChk(char iOpCode);LCD_hd44780u_qy_2004a.c:
                                  114: {;LCD_hd44780u_qy_2004a.c: 115:   SetToSendDataToLCD();
  3480                           	fcall	_SetToSendDataToLCD
  3481  0455  3184  24D2  3184   	line	116
  3482                           	
  3483                           l1584:	
  3484  0458                     ;LCD_hd44780u_qy_2004a.c: 116:   PORTAbits.RA4 = 0;
  3485                           	movlb 0	; select bank0
  3486  0458  0020               	bcf	(12),4	;volatile
  3487  0459  120C               	line	117
  3488                           	
  3489                           l1586:	
  3490  045A                     ;LCD_hd44780u_qy_2004a.c: 117:   PORTAbits.RA7 = 0;
  3491                           	bcf	(12),7	;volatile
  3492  045A  138C               	line	118
  3493                           	
  3494                           l1588:	
  3495  045B                     ;LCD_hd44780u_qy_2004a.c: 118:   setData(iOpCode >> 4);
  3496                           	movf	(writeInsNoChk@iOpCode),w
  3497  045B  084B               	movwf	(??_writeInsNoChk+0)+0
  3498  045C  00CA               	movlw	04h
  3499  045D  3004               u725:
  3500  045E                     	lsrf	(??_writeInsNoChk+0)+0,f
  3501  045E  36CA               	decfsz	wreg,f
  3502  045F  0B89               	goto	u725
  3503  0460  2C5E               	movf	0+(??_writeInsNoChk+0)+0,w
  3504  0461  084A               	fcall	_setData
  3505  0462  3183  231C  3184   	line	119
  3506                           	
  3507                           l1590:	
  3508  0465                     ;LCD_hd44780u_qy_2004a.c: 119:   setData(iOpCode);
  3509                           	movlb 0	; select bank0
  3510  0465  0020               	movf	(writeInsNoChk@iOpCode),w
  3511  0466  084B               	fcall	_setData
  3512  0467  3183  231C  3184   	line	120
  3513                           	
  3514                           l175:	
  3515  046A                     	return
  3516  046A  0008               	opt stack 0
  3517                           GLOBAL	__end_of_writeInsNoChk
  3518                           	__end_of_writeInsNoChk:
  3519  046B                     	signat	_writeInsNoChk,4217
  3520                           	global	_setData
  3521                           
  3522 ;; *************** function _setData *****************
  3523 ;; Defined at:
  3524 ;;		line 63 in file "LCD_hd44780u_qy_2004a.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;  iValue          1    wreg     unsigned char 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  iValue          1   11[BANK0 ] unsigned char 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      void 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, status,0
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3539 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3540 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  3541 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  3542 ;;Total ram usage:        3 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    3
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		_initLCD
  3549 ;;		_writeTxtChk
  3550 ;;		_writeInsNoChk
  3551 ;;		_setCursorPosition
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  3555                           	line	63
  3556                           global __ptext13
  3557                           __ptext13:	;psect for function _setData
  3558  031C                     psect	text13
  3559                           	file	"LCD_hd44780u_qy_2004a.c"
  3560                           	line	63
  3561                           	global	__size_of_setData
  3562                           	__size_of_setData	equ	__end_of_setData-_setData
  3563  003C                     	
  3564                           _setData:	
  3565  031C                     ;incstack = 0
  3566                           	opt	stack 9
  3567                           ; Regs used in _setData: [wreg+status,2+status,0]
  3568                           ;setData@iValue stored from wreg
  3569                           	movlb 0	; select bank0
  3570  031C  0020               	movwf	(setData@iValue)
  3571  031D  00C9               	line	65
  3572                           	
  3573                           l1552:	
  3574  031E                     ;LCD_hd44780u_qy_2004a.c: 63: void setData(char iValue);LCD_hd44780u_qy_2004a.c: 64: {;L
                                 CD_hd44780u_qy_2004a.c: 65:   PORTAbits.RA5 = 1;
  3575                           	bsf	(12),5	;volatile
  3576  031E  168C               	line	66
  3577                           	
  3578                           l1554:	
  3579  031F                     ;LCD_hd44780u_qy_2004a.c: 66:   PORTAbits.RA3 = (iValue & 0x8) >> 3;
  3580                           	movf	(setData@iValue),w
  3581  031F  0849               	movwf	(??_setData+0)+0
  3582  0320  00C7               	movlw	03h
  3583  0321  3003               u695:
  3584  0322                     	lsrf	(??_setData+0)+0,f
  3585  0322  36C7               	decfsz	wreg,f
  3586  0323  0B89               	goto	u695
  3587  0324  2B22               	movf	0+(??_setData+0)+0,w
  3588  0325  0847               	andlw	01h
  3589  0326  3901               	movwf	(??_setData+1)+0
  3590  0327  00C8               	rlf	(??_setData+1)+0,f
  3591  0328  0DC8               	rlf	(??_setData+1)+0,f
  3592  0329  0DC8               	rlf	(??_setData+1)+0,f
  3593  032A  0DC8               	movf	(12),w	;volatile
  3594  032B  080C               	xorwf	(??_setData+1)+0,w
  3595  032C  0648               	andlw	not (((1<<1)-1)<<3)
  3596  032D  39F7               	xorwf	(??_setData+1)+0,w
  3597  032E  0648               	movwf	(12)	;volatile
  3598  032F  008C               	line	67
  3599                           ;LCD_hd44780u_qy_2004a.c: 67:   PORTAbits.RA2 = (iValue & 0x4) >> 2;
  3600                           	movf	(setData@iValue),w
  3601  0330  0849               	movwf	(??_setData+0)+0
  3602  0331  00C7               	movlw	02h
  3603  0332  3002               u705:
  3604  0333                     	lsrf	(??_setData+0)+0,f
  3605  0333  36C7               	decfsz	wreg,f
  3606  0334  0B89               	goto	u705
  3607  0335  2B33               	movf	0+(??_setData+0)+0,w
  3608  0336  0847               	andlw	01h
  3609  0337  3901               	movwf	(??_setData+1)+0
  3610  0338  00C8               	rlf	(??_setData+1)+0,f
  3611  0339  0DC8               	rlf	(??_setData+1)+0,f
  3612  033A  0DC8               	movf	(12),w	;volatile
  3613  033B  080C               	xorwf	(??_setData+1)+0,w
  3614  033C  0648               	andlw	not (((1<<1)-1)<<2)
  3615  033D  39FB               	xorwf	(??_setData+1)+0,w
  3616  033E  0648               	movwf	(12)	;volatile
  3617  033F  008C               	line	68
  3618                           ;LCD_hd44780u_qy_2004a.c: 68:   PORTAbits.RA1 = (iValue & 0x2) >> 1;
  3619                           	lsrf	(setData@iValue),w
  3620  0340  3649               	andlw	01h
  3621  0341  3901               	movwf	(??_setData+0)+0
  3622  0342  00C7               	rlf	(??_setData+0)+0,f
  3623  0343  0DC7               	movf	(12),w	;volatile
  3624  0344  080C               	xorwf	(??_setData+0)+0,w
  3625  0345  0647               	andlw	not (((1<<1)-1)<<1)
  3626  0346  39FD               	xorwf	(??_setData+0)+0,w
  3627  0347  0647               	movwf	(12)	;volatile
  3628  0348  008C               	line	69
  3629                           ;LCD_hd44780u_qy_2004a.c: 69:   PORTAbits.RA0 = (iValue & 0x1) ;
  3630                           	movlw	low(01h)
  3631  0349  3001               	andwf	(setData@iValue),w
  3632  034A  0549               	movwf	(??_setData+0)+0
  3633  034B  00C7               	movf	(12),w	;volatile
  3634  034C  080C               	xorwf	0+(??_setData+0)+0,w
  3635  034D  0647               	andlw	not ((1<<1)-1)
  3636  034E  39FE               	xorwf	0+(??_setData+0)+0,w
  3637  034F  0647               	movwf	(12)	;volatile
  3638  0350  008C               	line	70
  3639                           	
  3640                           l1556:	
  3641  0351                     ;LCD_hd44780u_qy_2004a.c: 70:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  3642                           		opt asmopt_push
  3643                           	opt asmopt_off
  3644                           	nop2	;2 cycle nop
  3645  0351  3200               	nop2	;2 cycle nop
  3646  0352  3200               	opt asmopt_pop
  3647                           
  3648                           	line	71
  3649                           	
  3650                           l1558:	
  3651  0353                     ;LCD_hd44780u_qy_2004a.c: 71:   PORTAbits.RA5 = 0;
  3652                           	movlb 0	; select bank0
  3653  0353  0020               	bcf	(12),5	;volatile
  3654  0354  128C               	line	72
  3655                           	
  3656                           l1560:	
  3657  0355                     ;LCD_hd44780u_qy_2004a.c: 72:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  3658                           		opt asmopt_push
  3659                           	opt asmopt_off
  3660                           	nop2	;2 cycle nop
  3661  0355  3200               	nop2	;2 cycle nop
  3662  0356  3200               	opt asmopt_pop
  3663                           
  3664                           	line	73
  3665                           	
  3666                           l159:	
  3667  0357                     	return
  3668  0357  0008               	opt stack 0
  3669                           GLOBAL	__end_of_setData
  3670                           	__end_of_setData:
  3671  0358                     	signat	_setData,4217
  3672                           	global	_SetToSendDataToLCD
  3673                           
  3674 ;; *************** function _SetToSendDataToLCD *****************
  3675 ;; Defined at:
  3676 ;;		line 129 in file "LCD_hd44780u_qy_2004a.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;		None
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;		None
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      void 
  3683 ;; Registers used:
  3684 ;;		None
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3694 ;;Total ram usage:        0 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; Hardware stack levels required when called:    3
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		_writeTxtChk
  3701 ;;		_writeInsNoChk
  3702 ;;		_setCursorPosition
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  3706                           	line	129
  3707                           global __ptext14
  3708                           __ptext14:	;psect for function _SetToSendDataToLCD
  3709  04D2                     psect	text14
  3710                           	file	"LCD_hd44780u_qy_2004a.c"
  3711                           	line	129
  3712                           	global	__size_of_SetToSendDataToLCD
  3713                           	__size_of_SetToSendDataToLCD	equ	__end_of_SetToSendDataToLCD-_SetToSendDataToLCD
  3714  0006                     	
  3715                           _SetToSendDataToLCD:	
  3716  04D2                     ;incstack = 0
  3717                           	opt	stack 9
  3718                           ; Regs used in _SetToSendDataToLCD: []
  3719                           	line	131
  3720                           	
  3721                           l1562:	
  3722  04D2                     ;LCD_hd44780u_qy_2004a.c: 131:   TRISAbits.TRISA3 = 0;;
  3723                           	movlb 1	; select bank1
  3724  04D2  0021               	bcf	(140)^080h,3	;volatile
  3725  04D3  118C               	line	132
  3726                           ;LCD_hd44780u_qy_2004a.c: 132:   TRISAbits.TRISA2 = 0;;
  3727                           	bcf	(140)^080h,2	;volatile
  3728  04D4  110C               	line	133
  3729                           ;LCD_hd44780u_qy_2004a.c: 133:   TRISAbits.TRISA1 = 0;;
  3730                           	bcf	(140)^080h,1	;volatile
  3731  04D5  108C               	line	134
  3732                           ;LCD_hd44780u_qy_2004a.c: 134:   TRISAbits.TRISA0 = 0;;
  3733                           	bcf	(140)^080h,0	;volatile
  3734  04D6  100C               	line	135
  3735                           	
  3736                           l181:	
  3737  04D7                     	return
  3738  04D7  0008               	opt stack 0
  3739                           GLOBAL	__end_of_SetToSendDataToLCD
  3740                           	__end_of_SetToSendDataToLCD:
  3741  04D8                     	signat	_SetToSendDataToLCD,89
  3742                           	global	_waitLCDBusy
  3743                           
  3744 ;; *************** function _waitLCDBusy *****************
  3745 ;; Defined at:
  3746 ;;		line 137 in file "LCD_hd44780u_qy_2004a.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;  busyFlag        2   12[BANK0 ] int 
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, status,2, status,0, pclath, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3761 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  3762 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  3763 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  3764 ;;Total ram usage:        5 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; Hardware stack levels required when called:    4
  3767 ;; This function calls:
  3768 ;;		_SetToReadDataFromLCD
  3769 ;; This function is called by:
  3770 ;;		_writeTxtChk
  3771 ;;		_writeInsChk
  3772 ;;		_setCursorPosition
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  3776                           	line	137
  3777                           global __ptext15
  3778                           __ptext15:	;psect for function _waitLCDBusy
  3779  0358                     psect	text15
  3780                           	file	"LCD_hd44780u_qy_2004a.c"
  3781                           	line	137
  3782                           	global	__size_of_waitLCDBusy
  3783                           	__size_of_waitLCDBusy	equ	__end_of_waitLCDBusy-_waitLCDBusy
  3784  002D                     	
  3785                           _waitLCDBusy:	
  3786  0358                     ;incstack = 0
  3787                           	opt	stack 9
  3788                           ; Regs used in _waitLCDBusy: [wreg+status,2+status,0+pclath+cstack]
  3789                           	line	139
  3790                           	
  3791                           l1566:	
  3792  0358                     ;LCD_hd44780u_qy_2004a.c: 139:   PORTAbits.RA4 = 0;
  3793                           	movlb 0	; select bank0
  3794  0358  0020               	bcf	(12),4	;volatile
  3795  0359  120C               	line	140
  3796                           ;LCD_hd44780u_qy_2004a.c: 140:   PORTAbits.RA7 = 1;
  3797                           	bsf	(12),7	;volatile
  3798  035A  178C               	line	142
  3799                           	
  3800                           l1568:	
  3801  035B                     ;LCD_hd44780u_qy_2004a.c: 142:   SetToReadDataFromLCD();
  3802                           	fcall	_SetToReadDataFromLCD
  3803  035B  3184  24D8  3183   	line	144
  3804                           	
  3805                           l1570:	
  3806  035E                     ;LCD_hd44780u_qy_2004a.c: 144:   int busyFlag = 1;
  3807                           	movlw	01h
  3808  035E  3001               	movlb 0	; select bank0
  3809  035F  0020               	movwf	(waitLCDBusy@busyFlag)
  3810  0360  00CA               	movlw	0
  3811  0361  3000               	movwf	((waitLCDBusy@busyFlag))+1
  3812  0362  00CB               	line	145
  3813                           ;LCD_hd44780u_qy_2004a.c: 145:   while(busyFlag == 1)
  3814                           	goto	l184
  3815  0363  2B7C               	
  3816                           l185:	
  3817  0364                     	line	148
  3818                           ;LCD_hd44780u_qy_2004a.c: 146:   {;LCD_hd44780u_qy_2004a.c: 148:     PORTAbits.RA5 = 1;

  3819                           	bsf	(12),5	;volatile
  3820  0364  168C               	line	149
  3821                           ;LCD_hd44780u_qy_2004a.c: 149:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  3822                           		opt asmopt_push
  3823                           	opt asmopt_off
  3824                           	nop2	;2 cycle nop
  3825  0365  3200               	nop2	;2 cycle nop
  3826  0366  3200               	opt asmopt_pop
  3827                           
  3828                           	line	150
  3829                           	
  3830                           l1572:	
  3831  0367                     ;LCD_hd44780u_qy_2004a.c: 150:     busyFlag = PORTAbits.RA3;
  3832                           	movlb 0	; select bank0
  3833  0367  0020               	rrf	(12),w	;volatile
  3834  0368  0C0C               	movwf	(??_waitLCDBusy+0)+0
  3835  0369  00C7               	rrf	(??_waitLCDBusy+0)+0,f
  3836  036A  0CC7               	rrf	(??_waitLCDBusy+0)+0,w
  3837  036B  0C47               	andlw	(1<<1)-1
  3838  036C  3901               	movwf	(??_waitLCDBusy+1)+0
  3839  036D  00C8               	clrf	(??_waitLCDBusy+1)+0+1
  3840  036E  01C9               	movf	0+(??_waitLCDBusy+1)+0,w
  3841  036F  0848               	movwf	(waitLCDBusy@busyFlag)
  3842  0370  00CA               	movf	1+(??_waitLCDBusy+1)+0,w
  3843  0371  0849               	movwf	(waitLCDBusy@busyFlag+1)
  3844  0372  00CB               	line	151
  3845                           	
  3846                           l1574:	
  3847  0373                     ;LCD_hd44780u_qy_2004a.c: 151:     PORTAbits.RA5 = 0;
  3848                           	bcf	(12),5	;volatile
  3849  0373  128C               	line	152
  3850                           	
  3851                           l1576:	
  3852  0374                     ;LCD_hd44780u_qy_2004a.c: 152:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  3853                           		opt asmopt_push
  3854                           	opt asmopt_off
  3855                           	nop2	;2 cycle nop
  3856  0374  3200               	nop2	;2 cycle nop
  3857  0375  3200               	nop2	;2 cycle nop
  3858  0376  3200               	nop2	;2 cycle nop
  3859  0377  3200               	opt asmopt_pop
  3860                           
  3861                           	line	154
  3862                           	
  3863                           l1578:	
  3864  0378                     ;LCD_hd44780u_qy_2004a.c: 154:     PORTAbits.RA5 = 1;
  3865                           	movlb 0	; select bank0
  3866  0378  0020               	bsf	(12),5	;volatile
  3867  0379  168C               	line	155
  3868                           	
  3869                           l1580:	
  3870  037A                     ;LCD_hd44780u_qy_2004a.c: 155:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  3871                           		opt asmopt_push
  3872                           	opt asmopt_off
  3873                           	nop2	;2 cycle nop
  3874  037A  3200               	nop2	;2 cycle nop
  3875  037B  3200               	opt asmopt_pop
  3876                           
  3877                           	line	156
  3878                           ;LCD_hd44780u_qy_2004a.c: 156:   }
  3879                           	
  3880                           l184:	
  3881  037C                     	line	145
  3882                           ;LCD_hd44780u_qy_2004a.c: 145:   while(busyFlag == 1)
  3883                           	movlb 0	; select bank0
  3884  037C  0020               		decf	((waitLCDBusy@busyFlag)),w
  3885  037D  034A               iorwf	((waitLCDBusy@busyFlag+1)),w
  3886  037E  044B               	btfsc	status,2
  3887  037F  1903               	goto	u711
  3888  0380  2B82               	goto	u710
  3889  0381  2B83               u711:
  3890  0382                     	goto	l185
  3891  0382  2B64               u710:
  3892  0383                     	goto	l187
  3893  0383  2B84               	
  3894                           l186:	
  3895  0384                     	line	157
  3896                           	
  3897                           l187:	
  3898  0384                     	return
  3899  0384  0008               	opt stack 0
  3900                           GLOBAL	__end_of_waitLCDBusy
  3901                           	__end_of_waitLCDBusy:
  3902  0385                     	signat	_waitLCDBusy,89
  3903                           	global	_SetToReadDataFromLCD
  3904                           
  3905 ;; *************** function _SetToReadDataFromLCD *****************
  3906 ;; Defined at:
  3907 ;;		line 122 in file "LCD_hd44780u_qy_2004a.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		None
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3925 ;;Total ram usage:        0 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    3
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_waitLCDBusy
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  3935                           	line	122
  3936                           global __ptext16
  3937                           __ptext16:	;psect for function _SetToReadDataFromLCD
  3938  04D8                     psect	text16
  3939                           	file	"LCD_hd44780u_qy_2004a.c"
  3940                           	line	122
  3941                           	global	__size_of_SetToReadDataFromLCD
  3942                           	__size_of_SetToReadDataFromLCD	equ	__end_of_SetToReadDataFromLCD-_SetToReadDataFromLCD

  3943  0006                     	
  3944                           _SetToReadDataFromLCD:	
  3945  04D8                     ;incstack = 0
  3946                           	opt	stack 9
  3947                           ; Regs used in _SetToReadDataFromLCD: []
  3948                           	line	124
  3949                           	
  3950                           l1564:	
  3951  04D8                     ;LCD_hd44780u_qy_2004a.c: 124:   TRISAbits.TRISA3 = 1;
  3952                           	movlb 1	; select bank1
  3953  04D8  0021               	bsf	(140)^080h,3	;volatile
  3954  04D9  158C               	line	125
  3955                           ;LCD_hd44780u_qy_2004a.c: 125:   TRISAbits.TRISA2 = 1;
  3956                           	bsf	(140)^080h,2	;volatile
  3957  04DA  150C               	line	126
  3958                           ;LCD_hd44780u_qy_2004a.c: 126:   TRISAbits.TRISA1 = 1;
  3959                           	bsf	(140)^080h,1	;volatile
  3960  04DB  148C               	line	127
  3961                           ;LCD_hd44780u_qy_2004a.c: 127:   TRISAbits.TRISA0 = 1;
  3962                           	bsf	(140)^080h,0	;volatile
  3963  04DC  140C               	line	128
  3964                           	
  3965                           l178:	
  3966  04DD                     	return
  3967  04DD  0008               	opt stack 0
  3968                           GLOBAL	__end_of_SetToReadDataFromLCD
  3969                           	__end_of_SetToReadDataFromLCD:
  3970  04DE                     	signat	_SetToReadDataFromLCD,89
  3971                           	global	_WakeTemp
  3972                           
  3973 ;; *************** function _WakeTemp *****************
  3974 ;; Defined at:
  3975 ;;		line 61 in file "161518_temp_main.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;		None
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      void 
  3982 ;; Registers used:
  3983 ;;		wreg, status,2, status,0
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3991 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3992 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3993 ;;Total ram usage:        1 bytes
  3994 ;; Hardware stack levels used:    1
  3995 ;; Hardware stack levels required when called:    3
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_main
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  4003                           	file	"161518_temp_main.c"
  4004                           	line	61
  4005                           global __ptext17
  4006                           __ptext17:	;psect for function _WakeTemp
  4007  041D                     psect	text17
  4008                           	file	"161518_temp_main.c"
  4009                           	line	61
  4010                           	global	__size_of_WakeTemp
  4011                           	__size_of_WakeTemp	equ	__end_of_WakeTemp-_WakeTemp
  4012  001C                     	
  4013                           _WakeTemp:	
  4014  041D                     ;incstack = 0
  4015                           	opt	stack 12
  4016                           ; Regs used in _WakeTemp: [wreg+status,2+status,0]
  4017                           	line	63
  4018                           	
  4019                           l1646:	
  4020  041D                     		movlw	185
  4021  041D  30B9               	movlb 0	; select bank0
  4022  041E  0020               	xorwf	((_wI2CTxBuffer)),w
  4023  041F  062A               	btfsc	status,2
  4024  0420  1903               	goto	u751
  4025  0421  2C23               	goto	u750
  4026  0422  2C24               u751:
  4027  0423                     	goto	l1650
  4028  0423  2C29               u750:
  4029  0424                     	line	65
  4030                           	
  4031                           l1648:	
  4032  0424                     	movlw	low(0B9h)
  4033  0424  30B9               	movwf	(??_WakeTemp+0)+0
  4034  0425  00C7               	movf	(??_WakeTemp+0)+0,w
  4035  0426  0847               	movwf	(_wI2CTxBuffer)
  4036  0427  00AA               	line	66
  4037                           	goto	l1652
  4038  0428  2C2E               	line	67
  4039                           	
  4040                           l79:	
  4041  0429                     	line	69
  4042                           	
  4043                           l1650:	
  4044  0429                     	movlw	low(0B8h)
  4045  0429  30B8               	movwf	(??_WakeTemp+0)+0
  4046  042A  00C7               	movf	(??_WakeTemp+0)+0,w
  4047  042B  0847               	movwf	(_wI2CTxBuffer)
  4048  042C  00AA               	goto	l1652
  4049  042D  2C2E               	line	70
  4050                           	
  4051                           l80:	
  4052  042E                     	line	71
  4053                           	
  4054                           l1652:	
  4055  042E                     	movf	((_wI2CTxBufferSize)),w
  4056  042E  0826               	btfss	status,2
  4057  042F  1D03               	goto	u761
  4058  0430  2C32               	goto	u760
  4059  0431  2C33               u761:
  4060  0432                     	goto	l82
  4061  0432  2C38               u760:
  4062  0433                     	line	74
  4063                           	
  4064                           l1654:	
  4065  0433                     	clrf	(_wI2CTxBufferSize)
  4066  0433  01A6               	incf	(_wI2CTxBufferSize),f
  4067  0434  0AA6               	line	75
  4068                           	movlb 4	; select bank4
  4069  0435  0024               	bsf	(534)^0200h,0	;volatile
  4070  0436  1416               	goto	l82
  4071  0437  2C38               	line	76
  4072                           	
  4073                           l81:	
  4074  0438                     	line	77
  4075                           	
  4076                           l82:	
  4077  0438                     	return
  4078  0438  0008               	opt stack 0
  4079                           GLOBAL	__end_of_WakeTemp
  4080                           	__end_of_WakeTemp:
  4081  0439                     	signat	_WakeTemp,89
  4082                           	global	_myint
  4083                           
  4084 ;; *************** function _myint *****************
  4085 ;; Defined at:
  4086 ;;		line 175 in file "161518_temp_main.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;		None
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      void 
  4093 ;; Registers used:
  4094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4102 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4103 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4104 ;;Total ram usage:        1 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    2
  4107 ;; This function calls:
  4108 ;;		_strcat
  4109 ;; This function is called by:
  4110 ;;		Interrupt level 1
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           psect	intentry,class=CODE,delta=2
  4114                           global __pintentry
  4115                           __pintentry:
  4116  0004                     psect	intentry
  4117                           	file	"161518_temp_main.c"
  4118                           	line	175
  4119                           	global	__size_of_myint
  4120                           	__size_of_myint	equ	__end_of_myint-_myint
  4121  0075                     	
  4122                           _myint:	
  4123  0004                     ;incstack = 0
  4124                           	opt	stack 8
  4125                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
  4126  0004  147E               ; Regs used in _myint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4127                           psect	intentry
  4128                           	pagesel	$
  4129  0005  3180               	line	177
  4130                           	
  4131                           i1l1448:	
  4132  0006                     	movlb 0	; select bank0
  4133  0006  0020               	btfss	(17),3	;volatile
  4134  0007  1D91               	goto	u54_21
  4135  0008  280A               	goto	u54_20
  4136  0009  280B               u54_21:
  4137  000A                     	goto	i1l98
  4138  000A  2866               u54_20:
  4139  000B                     	line	184
  4140                           	
  4141                           i1l1450:	
  4142  000B                     	bcf	(17),3	;volatile
  4143  000B  1191               	line	185
  4144                           	movlb 4	; select bank4
  4145  000C  0024               	btfss	(532)^0200h,4	;volatile
  4146  000D  1E14               	goto	u55_21
  4147  000E  2810               	goto	u55_20
  4148  000F  2811               u55_21:
  4149  0010                     	goto	i1l1454
  4150  0010  2815               u55_20:
  4151  0011                     	line	188
  4152                           	
  4153                           i1l1452:	
  4154  0011                     	movlb 0	; select bank0
  4155  0011  0020               	clrf	(_wI2CTxBufferSize)
  4156  0012  01A6               	line	189
  4157                           	clrf	(_wI2CTxSendPos)
  4158  0013  01A5               	goto	i1l1454
  4159  0014  2815               	line	190
  4160                           	
  4161                           i1l99:	
  4162  0015                     	line	191
  4163                           	
  4164                           i1l1454:	
  4165  0015                     	movlb 4	; select bank4
  4166  0015  0024               	btfss	(532)^0200h,3	;volatile
  4167  0016  1D94               	goto	u56_21
  4168  0017  2819               	goto	u56_20
  4169  0018  281A               u56_21:
  4170  0019                     	goto	i1l100
  4171  0019  2834               u56_20:
  4172  001A                     	
  4173                           i1l1456:	
  4174  001A                     	movlb 0	; select bank0
  4175  001A  0020               	movf	((_wI2CTxSendPos)),w
  4176  001B  0825               	btfss	status,2
  4177  001C  1D03               	goto	u57_21
  4178  001D  281F               	goto	u57_20
  4179  001E  2820               u57_21:
  4180  001F                     	goto	i1l100
  4181  001F  2834               u57_20:
  4182  0020                     	line	194
  4183                           	
  4184                           i1l1458:	
  4185  0020                     	movf	((_wI2CTxBufferSize)),w
  4186  0020  0826               	btfsc	status,2
  4187  0021  1903               	goto	u58_21
  4188  0022  2824               	goto	u58_20
  4189  0023  2825               u58_21:
  4190  0024                     	goto	i1l98
  4191  0024  2866               u58_20:
  4192  0025                     	line	196
  4193                           	
  4194                           i1l1460:	
  4195  0025                     	movf	(_wI2CTxSendPos),w
  4196  0025  0825               	addlw	low(_wI2CTxBuffer|((0x0)<<8))&0ffh
  4197  0026  3E2A               	movwf	fsr1l
  4198  0027  0086               	clrf fsr1h	
  4199  0028  0187               	
  4200                           	movf	indf1,w
  4201  0029  0801               	movlb 4	; select bank4
  4202  002A  0024               	movwf	(529)^0200h	;volatile
  4203  002B  0091               	line	197
  4204                           	
  4205                           i1l1462:	
  4206  002C                     	movlw	low(01h)
  4207  002C  3001               	movlb 0	; select bank0
  4208  002D  0020               	movwf	(??_myint+0)+0
  4209  002E  00C6               	movf	(??_myint+0)+0,w
  4210  002F  0846               	addwf	(_wI2CTxSendPos),f
  4211  0030  07A5               	line	198
  4212                           	goto	i1l98
  4213  0031  2866               	line	199
  4214                           	
  4215                           i1l101:	
  4216  0032                     	goto	i1l98
  4217  0032  2866               	line	202
  4218                           	
  4219                           i1l102:	
  4220  0033                     	line	203
  4221                           	goto	i1l98
  4222  0033  2866               	line	204
  4223                           	
  4224                           i1l100:	
  4225  0034                     	line	206
  4226                           	movlb 4	; select bank4
  4227  0034  0024               	btfsc	(534)^0200h,6	;volatile
  4228  0035  1B16               	goto	u59_21
  4229  0036  2838               	goto	u59_20
  4230  0037  2839               u59_21:
  4231  0038                     	goto	i1l104
  4232  0038  2855               u59_20:
  4233  0039                     	
  4234                           i1l1464:	
  4235  0039                     	movlb 0	; select bank0
  4236  0039  0020               	movf	((_wI2CTxSendPos)),w
  4237  003A  0825               	btfsc	status,2
  4238  003B  1903               	goto	u60_21
  4239  003C  283E               	goto	u60_20
  4240  003D  283F               u60_21:
  4241  003E                     	goto	i1l104
  4242  003E  2855               u60_20:
  4243  003F                     	line	209
  4244                           	
  4245                           i1l1466:	
  4246  003F                     	movf	(_wI2CTxBufferSize),w
  4247  003F  0826               	subwf	(_wI2CTxSendPos),w
  4248  0040  0225               	skipnc
  4249  0041  1803               	goto	u61_21
  4250  0042  2844               	goto	u61_20
  4251  0043  2845               u61_21:
  4252  0044                     	goto	i1l105
  4253  0044  2852               u61_20:
  4254  0045                     	line	211
  4255                           	
  4256                           i1l1468:	
  4257  0045                     	movf	(_wI2CTxSendPos),w
  4258  0045  0825               	addlw	low(_wI2CTxBuffer|((0x0)<<8))&0ffh
  4259  0046  3E2A               	movwf	fsr1l
  4260  0047  0086               	clrf fsr1h	
  4261  0048  0187               	
  4262                           	movf	indf1,w
  4263  0049  0801               	movlb 4	; select bank4
  4264  004A  0024               	movwf	(529)^0200h	;volatile
  4265  004B  0091               	line	212
  4266                           	
  4267                           i1l1470:	
  4268  004C                     	movlw	low(01h)
  4269  004C  3001               	movlb 0	; select bank0
  4270  004D  0020               	movwf	(??_myint+0)+0
  4271  004E  00C6               	movf	(??_myint+0)+0,w
  4272  004F  0846               	addwf	(_wI2CTxSendPos),f
  4273  0050  07A5               	line	213
  4274                           	goto	i1l104
  4275  0051  2855               	line	214
  4276                           	
  4277                           i1l105:	
  4278  0052                     	line	216
  4279                           	movlb 4	; select bank4
  4280  0052  0024               	bsf	(534)^0200h,2	;volatile
  4281  0053  1516               	goto	i1l104
  4282  0054  2855               	line	217
  4283                           	
  4284                           i1l106:	
  4285  0055                     	line	218
  4286                           	
  4287                           i1l104:	
  4288  0055                     	line	219
  4289                           	movlb 4	; select bank4
  4290  0055  0024               	btfss	(534)^0200h,6	;volatile
  4291  0056  1F16               	goto	u62_21
  4292  0057  2859               	goto	u62_20
  4293  0058  285A               u62_21:
  4294  0059                     	goto	i1l98
  4295  0059  2866               u62_20:
  4296  005A                     	line	222
  4297                           	
  4298                           i1l1472:	
  4299  005A                     	bcf	(534)^0200h,6	;volatile
  4300  005A  1316               	line	223
  4301                           	
  4302                           i1l1474:	
  4303  005B                     	movlb 0	; select bank0
  4304  005B  0020               	movf	((_wI2CTxSendPos)),w
  4305  005C  0825               	btfsc	status,2
  4306  005D  1903               	goto	u63_21
  4307  005E  2860               	goto	u63_20
  4308  005F  2861               u63_21:
  4309  0060                     	goto	i1l98
  4310  0060  2866               u63_20:
  4311  0061                     	line	225
  4312                           	
  4313                           i1l1476:	
  4314  0061                     	movlb 4	; select bank4
  4315  0061  0024               	bsf	(534)^0200h,2	;volatile
  4316  0062  1516               	goto	i1l98
  4317  0063  2866               	line	226
  4318                           	
  4319                           i1l108:	
  4320  0064                     	goto	i1l98
  4321  0064  2866               	line	227
  4322                           	
  4323                           i1l107:	
  4324  0065                     	goto	i1l98
  4325  0065  2866               	line	228
  4326                           	
  4327                           i1l103:	
  4328  0066                     	line	230
  4329                           	
  4330                           i1l98:	
  4331  0066                     	line	231
  4332                           	movlb 0	; select bank0
  4333  0066  0020               	btfss	(18),3	;volatile
  4334  0067  1D92               	goto	u64_21
  4335  0068  286A               	goto	u64_20
  4336  0069  286B               u64_21:
  4337  006A                     	goto	i1l110
  4338  006A  2877               u64_20:
  4339  006B                     	line	233
  4340                           	
  4341                           i1l1478:	
  4342  006B                     	movlw	low(9000)
  4343  006B  3028               	movwf	(strcat@dest)
  4344  006C  00C2               	movlw	high(9000)
  4345  006D  3023               	movwf	((strcat@dest))+1
  4346  006E  00C3               	movlw	low(((STR_2)|8000h))
  4347  006F  30CB               	movwf	(strcat@src)
  4348  0070  00C4               	movlw	high(((STR_2)|8000h))
  4349  0071  3084               	movwf	((strcat@src))+1
  4350  0072  00C5               	fcall	_strcat
  4351  0073  3184  246B  3180   	goto	i1l110
  4352  0076  2877               	line	234
  4353                           	
  4354                           i1l109:	
  4355  0077                     	line	235
  4356                           	
  4357                           i1l110:	
  4358  0077                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  4359  0077  107E               	retfie
  4360  0078  0009               	opt stack 0
  4361                           GLOBAL	__end_of_myint
  4362                           	__end_of_myint:
  4363  0079                     	signat	_myint,89
  4364                           	global	_strcat
  4365                           
  4366 ;; *************** function _strcat *****************
  4367 ;; Defined at:
  4368 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  dest            2    4[BANK0 ] PTR unsigned char 
  4371 ;;		 -> wInterruptText(200), 
  4372 ;;  src             2    6[BANK0 ] PTR const unsigned char 
  4373 ;;		 -> STR_2(7), 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;		None
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  2    4[BANK0 ] PTR unsigned char 
  4378 ;; Registers used:
  4379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4385 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4388 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4389 ;;Total ram usage:        4 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; Hardware stack levels required when called:    1
  4392 ;; This function calls:
  4393 ;;		_strcpy
  4394 ;;		_strlen
  4395 ;; This function is called by:
  4396 ;;		_myint
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           psect	text19,local,class=CODE,delta=2,merge=1,group=2
  4400                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  4401                           	line	3
  4402                           global __ptext19
  4403                           __ptext19:	;psect for function _strcat
  4404  046B                     psect	text19
  4405                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  4406                           	line	3
  4407                           	global	__size_of_strcat
  4408                           	__size_of_strcat	equ	__end_of_strcat-_strcat
  4409  0018                     	
  4410                           _strcat:	
  4411  046B                     ;incstack = 0
  4412                           	opt	stack 8
  4413                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4414                           	line	5
  4415                           	
  4416                           i1l1334:	
  4417  046B                     	movlb 0	; select bank0
  4418  046B  0020               	movf	(strcat@dest+1),w
  4419  046C  0843               	movwf	(strlen@s+1)
  4420  046D  00F1               	movf	(strcat@dest),w
  4421  046E  0842               	movwf	(strlen@s)
  4422  046F  00F0               	fcall	_strlen
  4423  0470  3183  23D9  3184   	movf	(0+(?_strlen)),w
  4424  0473  0870               	movlb 0	; select bank0
  4425  0474  0020               	addwf	(strcat@dest),w
  4426  0475  0742               	movwf	(strcpy@dest)
  4427  0476  00F6               	movf	(1+(?_strlen)),w
  4428  0477  0871               	addwfc	(strcat@dest+1),w
  4429  0478  3D43               	movwf	1+(strcpy@dest)
  4430  0479  00F7               	movf	(strcat@src+1),w
  4431  047A  0845               	movwf	(strcpy@src+1)
  4432  047B  00F9               	movf	(strcat@src),w
  4433  047C  0844               	movwf	(strcpy@src)
  4434  047D  00F8               	fcall	_strcpy
  4435  047E  3183  23AF  3184   	goto	i1l684
  4436  0481  2C82               	line	6
  4437                           	
  4438                           i1l1336:	
  4439  0482                     	line	7
  4440                           ;	Return value of _strcat is never used
  4441                           	
  4442                           i1l684:	
  4443  0482                     	return
  4444  0482  0008               	opt stack 0
  4445                           GLOBAL	__end_of_strcat
  4446                           	__end_of_strcat:
  4447  0483                     	signat	_strcat,8313
  4448                           	global	_strlen
  4449                           
  4450 ;; *************** function _strlen *****************
  4451 ;; Defined at:
  4452 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  s               2    0[COMMON] PTR const unsigned char 
  4455 ;;		 -> wInterruptText(200), 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;  a               2    4[COMMON] PTR const unsigned char 
  4458 ;;		 -> wInterruptText(200), 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  2    0[COMMON] unsigned int 
  4461 ;; Registers used:
  4462 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4469 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4470 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4471 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4472 ;;Total ram usage:        6 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; This function calls:
  4475 ;;		Nothing
  4476 ;; This function is called by:
  4477 ;;		_strcat
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           psect	text20,local,class=CODE,delta=2,merge=1,group=2
  4481                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  4482                           	line	12
  4483                           global __ptext20
  4484                           __ptext20:	;psect for function _strlen
  4485  03D9                     psect	text20
  4486                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  4487                           	line	12
  4488                           	global	__size_of_strlen
  4489                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  4490  0023                     	
  4491                           _strlen:	
  4492  03D9                     ;incstack = 0
  4493                           	opt	stack 8
  4494                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  4495                           	line	14
  4496                           	
  4497                           i1l1222:	
  4498  03D9                     	movf	(strlen@s+1),w
  4499  03D9  0871               	movwf	(strlen@a+1)
  4500  03DA  00F5               	movf	(strlen@s),w
  4501  03DB  0870               	movwf	(strlen@a)
  4502  03DC  00F4               	line	16
  4503                           	goto	i1l1226
  4504  03DD  2BE3               	
  4505                           i1l694:	
  4506  03DE                     	line	17
  4507                           	
  4508                           i1l1224:	
  4509  03DE                     	movlw	01h
  4510  03DE  3001               	addwf	(strlen@s),f
  4511  03DF  07F0               	movlw	0
  4512  03E0  3000               	addwfc	(strlen@s+1),f
  4513  03E1  3DF1               	goto	i1l1226
  4514  03E2  2BE3               	line	18
  4515                           	
  4516                           i1l693:	
  4517  03E3                     	line	16
  4518                           	
  4519                           i1l1226:	
  4520  03E3                     	movf	(strlen@s),w
  4521  03E3  0870               	movwf	fsr1l
  4522  03E4  0086               	movf	(strlen@s+1),w
  4523  03E5  0871               	movwf	fsr1h
  4524  03E6  0087               
  4525                           	movf	(indf1),w
  4526  03E7  0801               	btfss	status,2
  4527  03E8  1D03               	goto	u41_21
  4528  03E9  2BEB               	goto	u41_20
  4529  03EA  2BEC               u41_21:
  4530  03EB                     	goto	i1l1224
  4531  03EB  2BDE               u41_20:
  4532  03EC                     	goto	i1l1228
  4533  03EC  2BED               	
  4534                           i1l695:	
  4535  03ED                     	line	25
  4536                           	
  4537                           i1l1228:	
  4538  03ED                     	comf	(strlen@a),w
  4539  03ED  0974               	movwf	(??_strlen+0)+0
  4540  03EE  00F2               	comf	(strlen@a+1),w
  4541  03EF  0975               	movwf	((??_strlen+0)+0+1)
  4542  03F0  00F3               	incf	(??_strlen+0)+0,f
  4543  03F1  0AF2               	skipnz
  4544  03F2  1903               	incf	((??_strlen+0)+0+1),f
  4545  03F3  0AF3               	movf	(strlen@s),w
  4546  03F4  0870               	addwf	0+(??_strlen+0)+0,w
  4547  03F5  0772               	movwf	(?_strlen)
  4548  03F6  00F0               	movf	(strlen@s+1),w
  4549  03F7  0871               	addwfc	1+(??_strlen+0)+0,w
  4550  03F8  3D73               	movwf	1+(?_strlen)
  4551  03F9  00F1               	goto	i1l696
  4552  03FA  2BFB               	
  4553                           i1l1230:	
  4554  03FB                     	line	26
  4555                           	
  4556                           i1l696:	
  4557  03FB                     	return
  4558  03FB  0008               	opt stack 0
  4559                           GLOBAL	__end_of_strlen
  4560                           	__end_of_strlen:
  4561  03FC                     	signat	_strlen,4218
  4562                           	global	_strcpy
  4563                           
  4564 ;; *************** function _strcpy *****************
  4565 ;; Defined at:
  4566 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  dest            2    6[COMMON] PTR unsigned char 
  4569 ;;		 -> wInterruptText(200), 
  4570 ;;  src             2    8[COMMON] PTR const unsigned char 
  4571 ;;		 -> STR_2(7), 
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;  d               2    2[BANK0 ] PTR unsigned char 
  4574 ;;		 -> wInterruptText(200), 
  4575 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  4576 ;;		 -> STR_2(7), 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  2    6[COMMON] PTR unsigned char 
  4579 ;; Registers used:
  4580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, pclath
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4586 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4587 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4588 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4589 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4590 ;;Total ram usage:       12 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; This function calls:
  4593 ;;		Nothing
  4594 ;; This function is called by:
  4595 ;;		_strcat
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           psect	text21,local,class=CODE,delta=2,merge=1,group=2
  4599                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  4600                           	line	7
  4601                           global __ptext21
  4602                           __ptext21:	;psect for function _strcpy
  4603  03AF                     psect	text21
  4604                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  4605                           	line	7
  4606                           	global	__size_of_strcpy
  4607                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  4608  002A                     	
  4609                           _strcpy:	
  4610  03AF                     ;incstack = 0
  4611                           	opt	stack 8
  4612                           ; Regs used in _strcpy: [wreg-fsr1h+pclath]
  4613                           	line	13
  4614                           	
  4615                           i1l1232:	
  4616  03AF                     	movf	(strcpy@src+1),w
  4617  03AF  0879               	movlb 0	; select bank0
  4618  03B0  0020               	movwf	(strcpy@s+1)
  4619  03B1  00BF               	movf	(strcpy@src),w
  4620  03B2  0878               	movwf	(strcpy@s)
  4621  03B3  00BE               	line	14
  4622                           	movf	(strcpy@dest+1),w
  4623  03B4  0877               	movwf	(strcpy@d+1)
  4624  03B5  00C1               	movf	(strcpy@dest),w
  4625  03B6  0876               	movwf	(strcpy@d)
  4626  03B7  00C0               	line	15
  4627                           	goto	i1l1234
  4628  03B8  2BBA               	
  4629                           i1l688:	
  4630  03B9                     	goto	i1l1234
  4631  03B9  2BBA               	
  4632                           i1l687:	
  4633  03BA                     	
  4634                           i1l1234:	
  4635  03BA                     	movf	(strcpy@d+1),w
  4636  03BA  0841               	movwf	(??_strcpy+0)+0+1
  4637  03BB  00FB               	movf	(strcpy@d),w
  4638  03BC  0840               	movwf	(??_strcpy+0)+0
  4639  03BD  00FA               	incf	(strcpy@d),f
  4640  03BE  0AC0               	skipnz
  4641  03BF  1903               	incf	(strcpy@d+1),f
  4642  03C0  0AC1               	movf	0+(??_strcpy+0)+0,w
  4643  03C1  087A               	movwf	fsr1l
  4644  03C2  0086               	movf	1+(??_strcpy+0)+0,w
  4645  03C3  087B               	movwf	fsr1h
  4646  03C4  0087               
  4647                           	movf	(strcpy@s+1),w
  4648  03C5  083F               	movwf	(??_strcpy+2)+0+1
  4649  03C6  00FD               	movf	(strcpy@s),w
  4650  03C7  083E               	movwf	(??_strcpy+2)+0
  4651  03C8  00FC               	incf	(strcpy@s),f
  4652  03C9  0ABE               	skipnz
  4653  03CA  1903               	incf	(strcpy@s+1),f
  4654  03CB  0ABF               	movf	0+(??_strcpy+2)+0,w
  4655  03CC  087C               	movwf	fsr0l
  4656  03CD  0084               	movf	(1+(??_strcpy+2)+0),w
  4657  03CE  087D               	movwf	fsr0h
  4658  03CF  0085               	movf	indf0,w ;code access
  4659  03D0  0800               	movwi	[0]fsr1
  4660  03D1  3FC0               	movf	wreg
  4661  03D2  0889               	btfss	status,2
  4662  03D3  1D03               	goto	u42_21
  4663  03D4  2BD6               	goto	u42_20
  4664  03D5  2BD7               u42_21:
  4665  03D6                     	goto	i1l1234
  4666  03D6  2BBA               u42_20:
  4667  03D7                     	goto	i1l690
  4668  03D7  2BD8               	
  4669                           i1l689:	
  4670  03D8                     	line	18
  4671                           ;	Return value of _strcpy is never used
  4672                           	
  4673                           i1l690:	
  4674  03D8                     	return
  4675  03D8  0008               	opt stack 0
  4676                           GLOBAL	__end_of_strcpy
  4677                           	__end_of_strcpy:
  4678  03D9                     	signat	_strcpy,8313
  4679                           global	___latbits
  4680                           ___latbits	equ	3
  4681  0003                     	global	btemp
  4682                           	btemp set 07Eh
  4683  007E                     
  4684                           	DABS	1,126,2	;btemp
  4685                           	global	int$flags
  4686                           	int$flags	set btemp
  4687  007E                     	global	wtemp0
  4688                           	wtemp0 set btemp+0
  4689  007E                     global __pbssBIGRAM
  4690                           __pbssBIGRAM	equ	9000
  4691  2328                     	end


Data Sizes:
    Strings     33
    Constant    0
    Data        8
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     27      65
    BANK1            80     12      12
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10            8      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), 

    memset@dest	PTR void  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), wI2CTxBuffer(BANK0[20]), 

    memset@s	PTR unsigned char  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), wI2CTxBuffer(BANK0[20]), 

    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 26
		 -> main@wConv(BANK1[8]), STR_1(CODE[26]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), 

    sp__memset	PTR void  size(2) Largest target is 200
		 -> wInterruptText(BIGRAM[200]), wI2CTxBuffer(BANK0[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myint in COMMON

    _strcat->_strcpy
    _strcpy->_strlen

Critical Paths under _main in BANK0

    _main->_lcdWriteText
    _setNotBlinkingCursor->_writeInsChk
    _setCursorOff->_writeInsChk
    _powerOnLcd->_writeInsChk
    _moveCursorToHome->_writeInsChk
    _lcdWriteText->_writeTxtChk
    _writeTxtChk->_setCursorPosition
    _setCursorPosition->_waitLCDBusy
    _initLCD->_writeInsChk
    _clearDisplay->_writeInsChk
    _writeInsChk->_waitLCDBusy
    _writeInsChk->_writeInsNoChk
    _writeInsNoChk->_setData

Critical Paths under _myint in BANK0

    _myint->_strcat
    _strcat->_strcpy

Critical Paths under _main in BANK1

    None.

Critical Paths under _myint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myint in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myint in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myint in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myint in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myint in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myint in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    4645
                                             25 BANK0      2     2      0
                                              0 BANK1     12    12      0
                           _WakeTemp
                       _clearDisplay
                            _initLCD
                       _lcdWriteText
                             _memset
                   _moveCursorToHome
                         _powerOnLcd
                       _setCursorOff
                  _setCursorPosition
               _setNotBlinkingCursor
 ---------------------------------------------------------------------------------
 (1) _setNotBlinkingCursor                                 1     1      0     254
                                             15 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _setCursorOff                                         1     1      0     254
                                             15 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _powerOnLcd                                           1     1      0     254
                                             15 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _moveCursorToHome                                     0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _memset                                              14     8      6    1557
                                              9 BANK0     14     8      6
 ---------------------------------------------------------------------------------
 (1) _lcdWriteText                                         6     4      2     787
                                             19 BANK0      6     4      2
                        _writeTxtChk
 ---------------------------------------------------------------------------------
 (2) _writeTxtChk                                          3     3      0     477
                                             16 BANK0      3     3      0
                 _SetToSendDataToLCD
                  _setCursorPosition
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (1) _setCursorPosition                                    2     2      0     254
                                             14 BANK0      2     2      0
                 _SetToSendDataToLCD
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     632
                                             15 BANK0      1     1      0
                       _clearDisplay
                            _setData
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _clearDisplay                                         0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _writeInsChk                                          1     1      0     254
                                             14 BANK0      1     1      0
                        _waitLCDBusy
                      _writeInsNoChk
 ---------------------------------------------------------------------------------
 (3) _writeInsNoChk                                        2     2      0     186
                                             12 BANK0      2     2      0
                 _SetToSendDataToLCD
                            _setData
 ---------------------------------------------------------------------------------
 (4) _setData                                              3     3      0     124
                                              9 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _SetToSendDataToLCD                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _waitLCDBusy                                          5     5      0      37
                                              9 BANK0      5     5      0
               _SetToReadDataFromLCD
 ---------------------------------------------------------------------------------
 (4) _SetToReadDataFromLCD                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WakeTemp                                             1     1      0       0
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _myint                                                1     1      0     638
                                              8 BANK0      1     1      0
                             _strcat
 ---------------------------------------------------------------------------------
 (7) _strcat                                               4     0      4     638
                                              4 BANK0      4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               6     4      2     166
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strcpy                                              12     8      4     248
                                              6 COMMON     8     4      4
                                              0 BANK0      4     4      0
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _WakeTemp
   _clearDisplay
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _initLCD
     _clearDisplay
       _writeInsChk
         _waitLCDBusy
           _SetToReadDataFromLCD
         _writeInsNoChk
           _SetToSendDataToLCD
           _setData
     _setData
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _lcdWriteText
     _writeTxtChk
       _SetToSendDataToLCD
       _setCursorPosition
         _SetToSendDataToLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
       _setData
       _waitLCDBusy
         _SetToReadDataFromLCD
   _memset
   _moveCursorToHome
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _powerOnLcd
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _setCursorOff
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _setCursorPosition
     _SetToSendDataToLCD
     _setData
     _waitLCDBusy
       _SetToReadDataFromLCD
   _setNotBlinkingCursor
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData

 _myint (ROOT)
   _strcat
     _strcpy
       _strlen (ARG)
     _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1B      41       5       81.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      C       C       7       15.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      5B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10               8      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      5B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Dec 23 01:46:13 2018

                  __CFG_CP$OFF 0000                    _SSPSTATbits 0214                             l80 042E  
                           l81 0438                             l82 0438                             l90 0194  
                           l91 01A2                             l92 01A3                             l93 01A3  
                           l79 0429                             l89 0169             _SetToSendDataToLCD 04D2  
                          l202 04A4                            l141 031B                            l232 041C  
                          l144 039D                            l145 0388                            l226 04E2  
                          l162 0295                            l146 03AE                            l163 027F  
                          l147 03AE                            l172 04BA                            l164 02AC  
                          l181 04D7                            l165 0284                            l229 04CA  
                          l166 0289                            l159 0357                            l175 046A  
                          l167 028E                            l184 037C                            l168 0293  
                          l185 0364                            l169 02CB                            l193 04AF  
                          l178 04DD                            l186 0384                            l187 0384  
                          l199 0499                            l670 01B2                            l671 0275  
                          l672 01D5                            l673 021C                            l674 0245  
                          l675 026E                            l676 025F                            l677 0275  
                          u710 0383                            u711 0382                            u800 0243  
                          u705 0333                            u801 0242                            u810 0274  
                          u811 0273                            u820 03AD                            u725 045E  
                          u821 03AC                            u750 0424                            u830 0161  
                          u751 0423                            u735 040A                            u760 0433  
                          u840 0191                            u761 0432                            u745 02B8  
                          u841 0190                            u770 01B0                            u771 01AF  
                          u907 010B                            u780 01D3                            u781 01D2  
                          u917 011A                            u790 021A                            u695 0322  
                          u791 0219                            u927 0129                            u937 0138  
                          u947 014C                            u957 0171                            u967 019A  
                          u977 02D8                            u897 00FC                            u987 02E4  
                          u997 02EE                   __CFG_BORV$LO 0000                            wreg 0009  
          ?_SetToSendDataToLCD 0070                   __CFG_LVP$OFF 0000                 ??_lcdWriteText 0053  
                         l1600 0407                           l1602 0412                           l1610 027B  
                         l1604 04B2                           l1700 02D4                           l1620 028E  
                         l1612 027D                           l1606 04DE                           l1710 02F8  
                         l1702 02DC                           l1630 02B2                           l1622 0294  
                         l1614 027F                           l1560 0355                           l1552 031E  
                         l1712 02FC                           l1704 02E0                           l1640 02C6  
                         l1632 02B4                           l1616 0284                           l1624 0295  
                         l1608 0278                           l1720 04A5                           l1800 0105  
                         l1650 0429                           l1570 035E                           l1562 04D2  
                         l1554 031F                           l1714 0304                           l1706 02ED  
                         l1634 02B5                           l1618 0289                           l1626 02AC  
                         l1730 04C7                           l1722 04AB                           l1810 012F  
                         l1802 0111                           l1652 042E                           l1564 04D8  
                         l1580 037A                           l1572 0367                           l1556 0351  
                         l1716 0309                           l1708 02F0                           l1636 02BF  
                         l1628 02AF                           l1740 0397                           l1660 01B1  
                         l1724 049A                           l1732 048F                           l1820 0156  
                         l1812 0132                           l1804 0114                           l1654 0433  
                         l1646 041D                           l1574 0373                           l1566 0358  
                         l1558 0353                           l1590 0465                           l1582 0455  
                         l1718 0318                           l1638 02C4                           l1742 039D  
                         l1670 01D5                           l1662 01B2                           l1726 04A0  
                         l1734 0495                           l1830 0180                           l1822 0165  
                         l1814 013E                           l1806 0120                           l1750 00BD  
                         l1648 0424                           l1576 0374                           l1568 035B  
                         l1584 0458                           l1592 03FE                           l1912 029E  
                         l1736 0385                           l1680 0244                           l1672 0211  
                         l1664 01B8                           l1656 01A5                           l1728 04C3  
                         l1832 0183                           l1824 0169                           l1816 0146  
                         l1808 0123                           l1760 00DA                           l1752 00BE  
                         l1744 00A9                           l1578 0378                           l1586 045A  
                         l1594 0401                           l1738 0388                           l1690 025F  
                         l1682 0245                           l1674 021B                           l1666 01CA  
                         l1658 01AA                           l1834 018A                           l1826 016D  
                         l1818 0153                           l1770 00E4                           l1762 00DB  
                         l1754 00C0                           l1746 00B8                           l1588 045B  
                         l1596 0404                           l1692 0265                           l1684 0252  
                         l1676 021C                           l1668 01D4                           l1836 0191  
                         l1828 0176                           l1780 00E9                           l1772 00E5  
                         l1764 00E0                           l1756 00D6                           l1748 00BB  
                         l1598 0406                           l1694 0269                           l1686 0256  
                         l1678 023A                           l1838 0194                           l1790 00EF  
                         l1782 00EA                           l1774 00E6                           l1766 00E2  
                         l1758 00D8                           l1696 026E                           l1688 025A  
                         l1792 00F0                           l1784 00EB                           l1776 00E7  
                         l1768 00E3                           l1698 02CC                           l1794 00F3  
                         l1786 00EC                           l1778 00E8                           l1796 00F6  
                         l1788 00EE                           l1798 0102                           STR_1 0439  
                         STR_2 04CB                           u1007 02F5                           u1017 02FD  
                         i1l98 0066                           i1l99 0015                   __CFG_WRT$OFF 0000  
                         _main 00A9                           fsr0h 0005                           fsr1h 0007  
                         indf0 0000                           fsr0l 0004                           indf1 0001  
                         fsr1l 0006                           btemp 007E                  __CFG_BOREN$ON 0000  
                         start 0079                  __CFG_IESO$OFF 0000           ??_SetToSendDataToLCD 0047  
         __end_of_clearDisplay 04E3                   main@wCounter 00AA                          ?_main 0070  
                  _writeInsChk 04B0                  __CFG_WDTE$OFF 0000                          i1l100 0034  
                        i1l101 0032                          i1l110 0077                          i1l102 0033  
                        i1l103 0066                          i1l104 0055                          i1l105 0052  
                        i1l106 0055                          i1l107 0065                          i1l108 0064  
                        i1l109 0077                          i1l690 03D8                          i1l684 0482  
                        i1l693 03E3                          i1l694 03DE                          i1l687 03BA  
                        i1l695 03ED                          i1l688 03B9                          i1l696 03FB  
                        i1l689 03D8                          u41_20 03EC                          u41_21 03EB  
                        u42_20 03D7                          u42_21 03D6                          _PORTA 000C  
                        u60_20 003F                          u60_21 003E                          u61_20 0045  
                        u61_21 0044                          u62_20 005A                          u54_20 000B  
                        u62_21 0059                          u54_21 000A                          u63_20 0061  
                        u55_20 0011                          u63_21 0060                          u55_21 0010  
                        u64_20 006B                          u56_20 001A                          u64_21 006A  
                        u56_21 0019                          u57_20 0020                          u57_21 001F  
                        _TRISA 008C                          _TRISC 008E                          u58_20 0025  
                        u58_21 0024                          u59_20 0039                          u59_21 0038  
                  _writeTxtChk 0276                  __CFG_PWRTE$ON 0000                 __CFG_FCMEN$OFF 0000  
              __end_of_initLCD 031C         ??_SetToReadDataFromLCD 0047                          _myint 0004  
              __end_of_setData 0358                          status 0003                          wtemp0 007E  
       ??_setNotBlinkingCursor 004D                 __CFG_MCLRE$OFF 0000                __initialization 007B  
                 __end_of_main 01A5                 __CFG_LPBOR$OFF 0000                         ??_main 0057  
             __end_of_WakeTemp 0439                   ?_waitLCDBusy 0070                         ?_myint 0070  
                       _ANSELA 018C                         i1l1230 03FB                         i1l1222 03D9  
                       i1l1232 03AF                         i1l1224 03DE                         i1l1234 03BA  
                       i1l1226 03E3                         i1l1228 03ED                         i1l1334 046B  
                       i1l1336 0482                         i1l1450 000B                         i1l1460 0025  
                       i1l1452 0011                         i1l1470 004C                         i1l1462 002C  
                       i1l1454 0015                         i1l1472 005A                         i1l1464 0039  
                       i1l1456 001A                         i1l1448 0006                         i1l1474 005B  
                       i1l1466 003F                         i1l1458 0020                         i1l1476 0061  
                       i1l1468 0045                         i1l1478 006B                  setData@iValue 0049  
            _setCursorPosition 03FC                         _SSPADD 0212                         _SSPBUF 0211  
           ?_setCursorPosition 0070            ??_setCursorPosition 004C           __end_of_lcdWriteText 03AF  
                       _memset 01A5                         _strcat 046B                         _strcpy 03AF  
                       _strlen 03D9                      ??_initLCD 004D                      ??_setData 0047  
     __end_of_moveCursorToHome 04CB      __end_of_setCursorPosition 041D         __size_of_writeInsNoChk 0018  
      __end_of__initialization 00A5          __size_of_clearDisplay 0005                 __pcstackCOMMON 0070  
                 __pidataBANK0 04BB                  __end_of_myint 0079           writeInsNoChk@iOpCode 004B  
   setCursorPosition@iPosition 004D                 _wInterruptText 2328                   _clearDisplay 04DE  
                      ??_myint 0046                     __pbssBANK0 0020                  ?_setCursorOff 0070  
              __CFG_VCAPEN$OFF 0000                      ?_WakeTemp 0070                     __pmaintext 00A9  
                   __pintentry 0004                  _writeInsNoChk 0453                        ?_memset 0047  
                 ?_writeInsChk 0070                        ?_strcat 0042                        ?_strcpy 0076  
                      ?_strlen 0070                   ?_writeTxtChk 0070     __size_of_setCursorPosition 0021  
         __size_of_waitLCDBusy 002D                 ??_setCursorOff 004D          __size_of_lcdWriteText 002A  
                   ??_WakeTemp 0047    __size_of_SetToSendDataToLCD 0006                 ?_writeInsNoChk 0070  
              __CFG_STVREN$OFF 0000                __size_of_memset 00D1                        __ptext1 048F  
                      __ptext2 049A                        __ptext3 04A5                        __ptext4 04C3  
                      __ptext5 01A5                        __ptext6 0385                        __ptext7 0276  
                      __ptext8 03FC                        __ptext9 02CC                __size_of_strcat 0018  
              __size_of_strcpy 002A                __size_of_strlen 0023                        _initLCD 02CC  
                      _setData 031C                        clrloop0 0484           end_of_initialization 00A5  
                 _lcdWriteText 0385  __size_of_SetToReadDataFromLCD 0006                        memset@c 0049  
                      memset@k 0051                        memset@n 004B                        memset@s 0053  
             __CFG_CLKOUTEN$ON 0000  __size_of_setNotBlinkingCursor 000B                        strcpy@d 0040  
                      strlen@a 0074                        strcpy@s 003E                        strlen@s 0070  
                    _PORTAbits 000C                     _powerOnLcd 04A5               __CFG_FOSC$INTOSC 0000  
                    _TRISAbits 008C              ?_moveCursorToHome 0070             ??_moveCursorToHome 004D  
          waitLCDBusy@busyFlag 004A                ??_writeInsNoChk 004A               _mWritingPosition 0027  
         __end_of_setCursorOff 04A5                 __end_of_memset 0276                 __end_of_strcat 0483  
               __end_of_strcpy 03D9                 __end_of_strlen 03FC           __size_of_writeInsChk 000B  
          start_initialization 007B           __size_of_writeTxtChk 0056              __size_of_WakeTemp 001C  
                  __pdataBANK0 0059                  _wI2CTxSendPos 0025                       ??_memset 004D  
                   memset@dest 0047                       ??_strcat 007E                       ??_strcpy 007A  
                     ??_strlen 0072                    ?_powerOnLcd 0070                    __pbssBIGRAM 2328  
                    ___latbits 0003                  __pcstackBANK0 003E                  __pcstackBANK1 00A0  
           writeInsChk@iOpCode 004C                       ?_initLCD 0070                       ?_setData 0070  
                ??_waitLCDBusy 0047                 __size_of_myint 0075               _mDisplayOnOffReg 0029  
   __end_of_SetToSendDataToLCD 04D8                      clear_ram0 0483                       _PIE1bits 0091  
                     _PIE2bits 0092            __size_of_powerOnLcd 000B                       _PIR1bits 0011  
                     _PIR2bits 0012          __size_of_setCursorOff 000B                      main@F2177 0059  
 __end_of_SetToReadDataFromLCD 04DE    lcdWriteText@wCharReadingPos 0056                      main@wConv 00A0  
 __end_of_setNotBlinkingCursor 049A                      main@wTemp 00A8              lcdWriteText@iText 0051  
          __end_of_waitLCDBusy 0385                   _setCursorOff 049A                       _WakeTemp 041D  
    __size_of_moveCursorToHome 0008                   _wI2CTxBuffer 002A               _wI2CTxBufferSize 0026  
                   _ANSELCbits 018E               __size_of_initLCD 0050                     strcat@dest 0042  
             __size_of_setData 003C                  ?_clearDisplay 0070                       __ptext10 04DE  
                     __ptext11 04B0                       __ptext20 03D9                       __ptext12 0453  
                     __ptext21 03AF                       __ptext13 031C                       __ptext14 04D2  
                     __ptext15 0358                       __ptext16 04D8                       __ptext17 041D  
                     __ptext19 046B                       _wHexTemp 0020                     strcpy@dest 0076  
                __size_of_main 00FC             writeTxtChk@iOpCode 0050                       int$flags 007E  
        __end_of_writeInsNoChk 046B                  ??_writeInsChk 004C                   ??_powerOnLcd 004D  
                ??_writeTxtChk 004E                     _INTCONbits 000B                    _waitLCDBusy 0358  
               ??_clearDisplay 004D                       intlevel1 0000           _SetToReadDataFromLCD 04D8  
                    strcat@src 0044                      strcpy@src 0078                     _OSCCONbits 0099  
         _setNotBlinkingCursor 048F             __end_of_powerOnLcd 04B0                  __pstringtext1 0439  
                __pstringtext2 04CB                  __pstringtext3 0000            __end_of_writeInsChk 04BB  
                  _SSPCON1bits 0215                    _SSPCON2bits 0216                    _SSPCON3bits 0217  
                ?_lcdWriteText 0051            __end_of_writeTxtChk 02CC          ?_SetToReadDataFromLCD 0070  
        ?_setNotBlinkingCursor 0070               _moveCursorToHome 04C3         _mCursorDisplayShiftReg 0028  
