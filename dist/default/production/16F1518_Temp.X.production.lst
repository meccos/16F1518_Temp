

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Jan 20 23:22:58 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F1518 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   120                           PORTB equ 0Dh ;# 
   121  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   122                           PORTC equ 0Eh ;# 
   123  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   124                           PORTE equ 010h ;# 
   125  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   126                           PIR1 equ 011h ;# 
   127  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   128                           PIR2 equ 012h ;# 
   129  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   130                           TMR0 equ 015h ;# 
   131  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   132                           TMR1 equ 016h ;# 
   133  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   134                           TMR1L equ 016h ;# 
   135  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   136                           TMR1H equ 017h ;# 
   137  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   138                           T1CON equ 018h ;# 
   139  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   140                           T1GCON equ 019h ;# 
   141  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   142                           TMR2 equ 01Ah ;# 
   143  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   144                           PR2 equ 01Bh ;# 
   145  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   146                           T2CON equ 01Ch ;# 
   147  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   148                           TRISA equ 08Ch ;# 
   149  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   150                           TRISB equ 08Dh ;# 
   151  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   152                           TRISC equ 08Eh ;# 
   153  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   154                           TRISE equ 090h ;# 
   155  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   156                           PIE1 equ 091h ;# 
   157  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   158                           PIE2 equ 092h ;# 
   159  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   160                           OPTION_REG equ 095h ;# 
   161  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   162                           PCON equ 096h ;# 
   163  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   164                           WDTCON equ 097h ;# 
   165  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   166                           OSCCON equ 099h ;# 
   167  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   168                           OSCSTAT equ 09Ah ;# 
   169  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   170                           ADRES equ 09Bh ;# 
   171  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   172                           ADRESL equ 09Bh ;# 
   173  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   174                           ADRESH equ 09Ch ;# 
   175  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   176                           ADCON0 equ 09Dh ;# 
   177  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   178                           ADCON1 equ 09Eh ;# 
   179  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   180                           LATA equ 010Ch ;# 
   181  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   182                           LATB equ 010Dh ;# 
   183  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   184                           LATC equ 010Eh ;# 
   185  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   186                           BORCON equ 0116h ;# 
   187  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   188                           FVRCON equ 0117h ;# 
   189  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   190                           APFCON equ 011Dh ;# 
   191  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   192                           ANSELA equ 018Ch ;# 
   193  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   194                           ANSELB equ 018Dh ;# 
   195  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   196                           ANSELC equ 018Eh ;# 
   197  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   198                           PMADR equ 0191h ;# 
   199  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   200                           PMADRL equ 0191h ;# 
   201  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   202                           PMADRH equ 0192h ;# 
   203  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   204                           PMDAT equ 0193h ;# 
   205  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   206                           PMDATL equ 0193h ;# 
   207  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   208                           PMDATH equ 0194h ;# 
   209  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   210                           PMCON1 equ 0195h ;# 
   211  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   212                           PMCON2 equ 0196h ;# 
   213  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   214                           VREGCON equ 0197h ;# 
   215  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   216                           RCREG equ 0199h ;# 
   217  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   218                           TXREG equ 019Ah ;# 
   219  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   220                           SP1BRG equ 019Bh ;# 
   221  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   222                           SP1BRGL equ 019Bh ;# 
   223  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   224                           SPBRG equ 019Bh ;# 
   225  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   226                           SPBRGL equ 019Bh ;# 
   227  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   228                           SP1BRGH equ 019Ch ;# 
   229  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   230                           SPBRGH equ 019Ch ;# 
   231  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   232                           RCSTA equ 019Dh ;# 
   233  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   234                           TXSTA equ 019Eh ;# 
   235  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   236                           BAUDCON equ 019Fh ;# 
   237  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   238                           WPUB equ 020Dh ;# 
   239  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   240                           WPUE equ 0210h ;# 
   241  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   242                           SSPBUF equ 0211h ;# 
   243  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   244                           SSP1BUF equ 0211h ;# 
   245  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   246                           SSPADD equ 0212h ;# 
   247  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   248                           SSP1ADD equ 0212h ;# 
   249  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   250                           SSPMSK equ 0213h ;# 
   251  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   252                           SSP1MSK equ 0213h ;# 
   253  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   254                           SSPSTAT equ 0214h ;# 
   255  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   256                           SSP1STAT equ 0214h ;# 
   257  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   258                           SSPCON1 equ 0215h ;# 
   259  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   260                           SSPCON equ 0215h ;# 
   261  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   262                           SSP1CON1 equ 0215h ;# 
   263  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   264                           SSPCON2 equ 0216h ;# 
   265  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   266                           SSP1CON2 equ 0216h ;# 
   267  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   268                           SSPCON3 equ 0217h ;# 
   269  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   270                           SSP1CON3 equ 0217h ;# 
   271  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   272                           CCPR1 equ 0291h ;# 
   273  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   274                           CCPR1L equ 0291h ;# 
   275  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   276                           CCPR1H equ 0292h ;# 
   277  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   278                           CCP1CON equ 0293h ;# 
   279  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   280                           CCPR2 equ 0298h ;# 
   281  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   282                           CCPR2L equ 0298h ;# 
   283  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   284                           CCPR2H equ 0299h ;# 
   285  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   286                           CCP2CON equ 029Ah ;# 
   287  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   288                           IOCBP equ 0394h ;# 
   289  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   290                           IOCBN equ 0395h ;# 
   291  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   292                           IOCBF equ 0396h ;# 
   293  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   294                           STATUS_SHAD equ 0FE4h ;# 
   295  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   296                           WREG_SHAD equ 0FE5h ;# 
   297  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   298                           BSR_SHAD equ 0FE6h ;# 
   299  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   300                           PCLATH_SHAD equ 0FE7h ;# 
   301  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   302                           FSR0L_SHAD equ 0FE8h ;# 
   303  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   304                           FSR0H_SHAD equ 0FE9h ;# 
   305  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   306                           FSR1L_SHAD equ 0FEAh ;# 
   307  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   308                           FSR1H_SHAD equ 0FEBh ;# 
   309  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   310                           STKPTR equ 0FEDh ;# 
   311  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   312                           TOSL equ 0FEEh ;# 
   313  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   314                           TOSH equ 0FEFh ;# 
   315  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   316                           INDF0 equ 00h ;# 
   317  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   318                           INDF1 equ 01h ;# 
   319  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   320                           PCL equ 02h ;# 
   321  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   322                           STATUS equ 03h ;# 
   323  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   324                           FSR0L equ 04h ;# 
   325  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   326                           FSR0H equ 05h ;# 
   327  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   328                           FSR1L equ 06h ;# 
   329  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   330                           FSR1H equ 07h ;# 
   331  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   332                           BSR equ 08h ;# 
   333  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   334                           WREG equ 09h ;# 
   335  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   336                           PCLATH equ 0Ah ;# 
   337  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   338                           INTCON equ 0Bh ;# 
   339  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   340                           PORTA equ 0Ch ;# 
   341  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   342                           PORTB equ 0Dh ;# 
   343  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   344                           PORTC equ 0Eh ;# 
   345  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   346                           PORTE equ 010h ;# 
   347  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   348                           PIR1 equ 011h ;# 
   349  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   350                           PIR2 equ 012h ;# 
   351  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   352                           TMR0 equ 015h ;# 
   353  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   354                           TMR1 equ 016h ;# 
   355  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   356                           TMR1L equ 016h ;# 
   357  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   358                           TMR1H equ 017h ;# 
   359  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   360                           T1CON equ 018h ;# 
   361  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   362                           T1GCON equ 019h ;# 
   363  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   364                           TMR2 equ 01Ah ;# 
   365  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   366                           PR2 equ 01Bh ;# 
   367  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   368                           T2CON equ 01Ch ;# 
   369  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   370                           TRISA equ 08Ch ;# 
   371  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   372                           TRISB equ 08Dh ;# 
   373  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   374                           TRISC equ 08Eh ;# 
   375  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   376                           TRISE equ 090h ;# 
   377  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   378                           PIE1 equ 091h ;# 
   379  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   380                           PIE2 equ 092h ;# 
   381  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   382                           OPTION_REG equ 095h ;# 
   383  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   384                           PCON equ 096h ;# 
   385  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   386                           WDTCON equ 097h ;# 
   387  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   388                           OSCCON equ 099h ;# 
   389  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   390                           OSCSTAT equ 09Ah ;# 
   391  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   392                           ADRES equ 09Bh ;# 
   393  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   394                           ADRESL equ 09Bh ;# 
   395  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   396                           ADRESH equ 09Ch ;# 
   397  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   398                           ADCON0 equ 09Dh ;# 
   399  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   400                           ADCON1 equ 09Eh ;# 
   401  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   402                           LATA equ 010Ch ;# 
   403  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   404                           LATB equ 010Dh ;# 
   405  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   406                           LATC equ 010Eh ;# 
   407  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   408                           BORCON equ 0116h ;# 
   409  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   410                           FVRCON equ 0117h ;# 
   411  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   412                           APFCON equ 011Dh ;# 
   413  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   414                           ANSELA equ 018Ch ;# 
   415  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   416                           ANSELB equ 018Dh ;# 
   417  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   418                           ANSELC equ 018Eh ;# 
   419  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   420                           PMADR equ 0191h ;# 
   421  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   422                           PMADRL equ 0191h ;# 
   423  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   424                           PMADRH equ 0192h ;# 
   425  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   426                           PMDAT equ 0193h ;# 
   427  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   428                           PMDATL equ 0193h ;# 
   429  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   430                           PMDATH equ 0194h ;# 
   431  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   432                           PMCON1 equ 0195h ;# 
   433  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   434                           PMCON2 equ 0196h ;# 
   435  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   436                           VREGCON equ 0197h ;# 
   437  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   438                           RCREG equ 0199h ;# 
   439  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   440                           TXREG equ 019Ah ;# 
   441  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   442                           SP1BRG equ 019Bh ;# 
   443  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   444                           SP1BRGL equ 019Bh ;# 
   445  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   446                           SPBRG equ 019Bh ;# 
   447  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   448                           SPBRGL equ 019Bh ;# 
   449  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   450                           SP1BRGH equ 019Ch ;# 
   451  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   452                           SPBRGH equ 019Ch ;# 
   453  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   454                           RCSTA equ 019Dh ;# 
   455  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   456                           TXSTA equ 019Eh ;# 
   457  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   458                           BAUDCON equ 019Fh ;# 
   459  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   460                           WPUB equ 020Dh ;# 
   461  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   462                           WPUE equ 0210h ;# 
   463  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   464                           SSPBUF equ 0211h ;# 
   465  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   466                           SSP1BUF equ 0211h ;# 
   467  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   468                           SSPADD equ 0212h ;# 
   469  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   470                           SSP1ADD equ 0212h ;# 
   471  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   472                           SSPMSK equ 0213h ;# 
   473  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   474                           SSP1MSK equ 0213h ;# 
   475  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   476                           SSPSTAT equ 0214h ;# 
   477  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   478                           SSP1STAT equ 0214h ;# 
   479  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   480                           SSPCON1 equ 0215h ;# 
   481  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   482                           SSPCON equ 0215h ;# 
   483  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   484                           SSP1CON1 equ 0215h ;# 
   485  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   486                           SSPCON2 equ 0216h ;# 
   487  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   488                           SSP1CON2 equ 0216h ;# 
   489  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   490                           SSPCON3 equ 0217h ;# 
   491  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   492                           SSP1CON3 equ 0217h ;# 
   493  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   494                           CCPR1 equ 0291h ;# 
   495  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   496                           CCPR1L equ 0291h ;# 
   497  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   498                           CCPR1H equ 0292h ;# 
   499  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   500                           CCP1CON equ 0293h ;# 
   501  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   502                           CCPR2 equ 0298h ;# 
   503  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   504                           CCPR2L equ 0298h ;# 
   505  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   506                           CCPR2H equ 0299h ;# 
   507  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   508                           CCP2CON equ 029Ah ;# 
   509  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   510                           IOCBP equ 0394h ;# 
   511  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   512                           IOCBN equ 0395h ;# 
   513  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   514                           IOCBF equ 0396h ;# 
   515  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   516                           STATUS_SHAD equ 0FE4h ;# 
   517  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   518                           WREG_SHAD equ 0FE5h ;# 
   519  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   520                           BSR_SHAD equ 0FE6h ;# 
   521  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   522                           PCLATH_SHAD equ 0FE7h ;# 
   523  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   524                           FSR0L_SHAD equ 0FE8h ;# 
   525  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   526                           FSR0H_SHAD equ 0FE9h ;# 
   527  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   528                           FSR1L_SHAD equ 0FEAh ;# 
   529  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   530                           FSR1H_SHAD equ 0FEBh ;# 
   531  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   532                           STKPTR equ 0FEDh ;# 
   533  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   534                           TOSL equ 0FEEh ;# 
   535  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   536                           TOSH equ 0FEFh ;# 
   537  0FEF                     	FNCALL	_main,_Add_Trace
   538                           	FNCALL	_main,_Debounce
   539                           	FNCALL	_main,_GetTemp
   540                           	FNCALL	_main,_PrintLog
   541                           	FNCALL	_main,_SetToGetTemp
   542                           	FNCALL	_main,_WakeTemp
   543                           	FNCALL	_main,_clearDisplay
   544                           	FNCALL	_main,_initLCD
   545                           	FNCALL	_main,_lcdWriteText
   546                           	FNCALL	_main,_memset
   547                           	FNCALL	_main,_moveCursorToHome
   548                           	FNCALL	_main,_powerOnLcd
   549                           	FNCALL	_main,_printEM1812
   550                           	FNCALL	_main,_setCursorOff
   551                           	FNCALL	_main,_setCursorPosition
   552                           	FNCALL	_main,_setNotBlinkingCursor
   553                           	FNCALL	_setNotBlinkingCursor,_writeInsChk
   554                           	FNCALL	_setCursorOff,_writeInsChk
   555                           	FNCALL	_printEM1812,___lwdiv
   556                           	FNCALL	_printEM1812,___lwmod
   557                           	FNCALL	_powerOnLcd,_writeInsChk
   558                           	FNCALL	_moveCursorToHome,_writeInsChk
   559                           	FNCALL	_initLCD,_clearDisplay
   560                           	FNCALL	_initLCD,_setData
   561                           	FNCALL	_initLCD,_writeInsChk
   562                           	FNCALL	_clearDisplay,_writeInsChk
   563                           	FNCALL	_writeInsChk,_waitLCDBusy
   564                           	FNCALL	_writeInsChk,_writeInsNoChk
   565                           	FNCALL	_writeInsNoChk,_SetToSendDataToLCD
   566                           	FNCALL	_writeInsNoChk,_setData
   567                           	FNCALL	_PrintLog,_lcdWriteText
   568                           	FNCALL	_PrintLog,_memset
   569                           	FNCALL	_PrintLog,_strlen
   570                           	FNCALL	_lcdWriteText,_writeTxtChk
   571                           	FNCALL	_writeTxtChk,_SetToSendDataToLCD
   572                           	FNCALL	_writeTxtChk,_setCursorPosition
   573                           	FNCALL	_writeTxtChk,_setData
   574                           	FNCALL	_writeTxtChk,_waitLCDBusy
   575                           	FNCALL	_setCursorPosition,_SetToSendDataToLCD
   576                           	FNCALL	_setCursorPosition,_setData
   577                           	FNCALL	_setCursorPosition,_waitLCDBusy
   578                           	FNCALL	_waitLCDBusy,_SetToReadDataFromLCD
   579                           	FNCALL	_GetTemp,_memset
   580                           	FNCALL	_Add_Trace,_strcat
   581                           	FNCALL	_Add_Trace,_strlen
   582                           	FNCALL	_strcat,_strcpy
   583                           	FNCALL	_strcat,_strlen
   584                           	FNROOT	_main
   585                           	FNCALL	_myint,_ToggleBitRB5
   586                           	FNCALL	_myint,i1_Add_Trace
   587                           	FNCALL	i1_Add_Trace,i1_strcat
   588                           	FNCALL	i1_Add_Trace,i1_strlen
   589                           	FNCALL	i1_strcat,i1_strcpy
   590                           	FNCALL	i1_strcat,i1_strlen
   591                           	FNCALL	intlevel1,_myint
   592                           	global	intlevel1
   593                           	FNROOT	intlevel1
   594                           	global	main@F2241
   595                           psect	idataBANK1,class=CODE,space=0,delta=2,noexec
   596                           global __pidataBANK1
   597                           __pidataBANK1:
   598  0E13                     	file	"161518_temp_main.c"
   599                           	line	289
   600                           
   601                           ;initializer for main@F2241
   602                           	retlw	02Bh
   603  0E13  342B               	retlw	low(0)
   604  0E14  3400               	retlw	078h
   605  0E15  3478               	retlw	low(0)
   606  0E16  3400               	global	_wTimer1IntCounter
   607                           	global	_wI2CTxSendPos
   608                           	global	_wI2CRxBufferSize
   609                           	global	_wI2CTxBufferSize
   610                           	global	_wReceptionBufferPosition
   611                           	global	_mWritingPosition
   612                           	global	_mCursorDisplayShiftReg
   613                           	global	_mDisplayOnOffReg
   614                           	global	_wTempUpdate
   615                           	global	_wReceptionCounterPrev
   616                           	global	_wReceptionCounter
   617                           	global	_wI2CTxBuffer
   618                           	global	_wReceptionBuffer
   619                           	global	_wInterruptText
   620                           	global	_PORTAbits
   621                           _PORTAbits	set	0xC
   622  000C                     	global	_TMR1L
   623                           _TMR1L	set	0x16
   624  0016                     	global	_TMR1H
   625                           _TMR1H	set	0x17
   626  0017                     	global	_PIR2bits
   627                           _PIR2bits	set	0x12
   628  0012                     	global	_PIR1bits
   629                           _PIR1bits	set	0x11
   630  0011                     	global	_PORTB
   631                           _PORTB	set	0xD
   632  000D                     	global	_T1CONbits
   633                           _T1CONbits	set	0x18
   634  0018                     	global	_PORTA
   635                           _PORTA	set	0xC
   636  000C                     	global	_INTCONbits
   637                           _INTCONbits	set	0xB
   638  000B                     	global	_PORTBbits
   639                           _PORTBbits	set	0xD
   640  000D                     	global	_TRISAbits
   641                           _TRISAbits	set	0x8C
   642  008C                     	global	_PIE2bits
   643                           _PIE2bits	set	0x92
   644  0092                     	global	_TRISC
   645                           _TRISC	set	0x8E
   646  008E                     	global	_TRISA
   647                           _TRISA	set	0x8C
   648  008C                     	global	_OPTION_REGbits
   649                           _OPTION_REGbits	set	0x95
   650  0095                     	global	_TRISB
   651                           _TRISB	set	0x8D
   652  008D                     	global	_OSCCONbits
   653                           _OSCCONbits	set	0x99
   654  0099                     	global	_PIE1bits
   655                           _PIE1bits	set	0x91
   656  0091                     	global	_ANSELCbits
   657                           _ANSELCbits	set	0x18E
   658  018E                     	global	_ANSELA
   659                           _ANSELA	set	0x18C
   660  018C                     	global	_ANSELB
   661                           _ANSELB	set	0x18D
   662  018D                     	global	_SSPBUF
   663                           _SSPBUF	set	0x211
   664  0211                     	global	_SSPSTATbits
   665                           _SSPSTATbits	set	0x214
   666  0214                     	global	_SSPADD
   667                           _SSPADD	set	0x212
   668  0212                     	global	_SSPCON1bits
   669                           _SSPCON1bits	set	0x215
   670  0215                     	global	_WPUB
   671                           _WPUB	set	0x20D
   672  020D                     	global	_SSPCON2bits
   673                           _SSPCON2bits	set	0x216
   674  0216                     	global	_SSPCON3bits
   675                           _SSPCON3bits	set	0x217
   676  0217                     psect	stringtext1,class=STRCODE,delta=2,noexec
   677                           global __pstringtext1
   678                           __pstringtext1:
   679  1000                     	
   680                           STR_6:	
   681  1000                     	retlw	87	;'W'
   682  1000  3457               	retlw	84	;'T'
   683  1001  3454               	retlw	70	;'F'
   684  1002  3446               	retlw	32	;' '
   685  1003  3420               	retlw	32	;' '
   686  1004  3420               	retlw	32	;' '
   687  1005  3420               	retlw	32	;' '
   688  1006  3420               	retlw	32	;' '
   689  1007  3420               	retlw	32	;' '
   690  1008  3420               	retlw	32	;' '
   691  1009  3420               	retlw	32	;' '
   692  100A  3420               	retlw	32	;' '
   693  100B  3420               	retlw	32	;' '
   694  100C  3420               	retlw	32	;' '
   695  100D  3420               	retlw	32	;' '
   696  100E  3420               	retlw	0
   697  100F  3400               psect	stringtext2,class=STRCODE,delta=2,noexec
   698                           global __pstringtext2
   699                           __pstringtext2:
   700  1010                     	
   701                           STR_3:	
   702  1010                     	retlw	72	;'H'
   703  1010  3448               	retlw	111	;'o'
   704  1011  346F               	retlw	109	;'m'
   705  1012  346D               	retlw	101	;'e'
   706  1013  3465               	retlw	32	;' '
   707  1014  3420               	retlw	32	;' '
   708  1015  3420               	retlw	32	;' '
   709  1016  3420               	retlw	32	;' '
   710  1017  3420               	retlw	32	;' '
   711  1018  3420               	retlw	32	;' '
   712  1019  3420               	retlw	32	;' '
   713  101A  3420               	retlw	32	;' '
   714  101B  3420               	retlw	32	;' '
   715  101C  3420               	retlw	32	;' '
   716  101D  3420               	retlw	32	;' '
   717  101E  3420               	retlw	0
   718  101F  3400               psect	stringtext3,class=STRCODE,delta=2,noexec
   719                           global __pstringtext3
   720                           __pstringtext3:
   721  1020                     	
   722                           STR_5:	
   723  1020                     	retlw	83	;'S'
   724  1020  3453               	retlw	101	;'e'
   725  1021  3465               	retlw	116	;'t'
   726  1022  3474               	retlw	32	;' '
   727  1023  3420               	retlw	77	;'M'
   728  1024  344D               	retlw	111	;'o'
   729  1025  346F               	retlw	100	;'d'
   730  1026  3464               	retlw	101	;'e'
   731  1027  3465               	retlw	58	;':'
   732  1028  343A               	retlw	32	;' '
   733  1029  3420               	retlw	32	;' '
   734  102A  3420               	retlw	32	;' '
   735  102B  3420               	retlw	32	;' '
   736  102C  3420               	retlw	32	;' '
   737  102D  3420               	retlw	32	;' '
   738  102E  3420               	retlw	0
   739  102F  3400               psect	stringtext4,class=STRCODE,delta=2,noexec
   740                           global __pstringtext4
   741                           __pstringtext4:
   742  1030                     	
   743                           STR_4:	
   744  1030                     	retlw	83	;'S'
   745  1030  3453               	retlw	101	;'e'
   746  1031  3465               	retlw	116	;'t'
   747  1032  3474               	retlw	32	;' '
   748  1033  3420               	retlw	84	;'T'
   749  1034  3454               	retlw	101	;'e'
   750  1035  3465               	retlw	109	;'m'
   751  1036  346D               	retlw	112	;'p'
   752  1037  3470               	retlw	58	;':'
   753  1038  343A               	retlw	32	;' '
   754  1039  3420               	retlw	32	;' '
   755  103A  3420               	retlw	32	;' '
   756  103B  3420               	retlw	32	;' '
   757  103C  3420               	retlw	32	;' '
   758  103D  3420               	retlw	32	;' '
   759  103E  3420               	retlw	0
   760  103F  3400               psect	stringtext5,class=STRCODE,delta=2,noexec
   761                           global __pstringtext5
   762                           __pstringtext5:
   763  1040                     	
   764                           STR_1:	
   765  1040                     	retlw	72	;'H'
   766  1040  3448               	retlw	117	;'u'
   767  1041  3475               	retlw	109	;'m'
   768  1042  346D               	retlw	105	;'i'
   769  1043  3469               	retlw	100	;'d'
   770  1044  3464               	retlw	105	;'i'
   771  1045  3469               	retlw	116	;'t'
   772  1046  3474               	retlw	121	;'y'
   773  1047  3479               	retlw	32	;' '
   774  1048  3420               	retlw	58	;':'
   775  1049  343A               	retlw	32	;' '
   776  104A  3420               	retlw	0
   777  104B  3400               psect	stringtext6,class=STRCODE,delta=2,noexec
   778                           global __pstringtext6
   779                           __pstringtext6:
   780  104C                     	
   781                           STR_2:	
   782  104C                     	retlw	10
   783  104C  340A               	retlw	84	;'T'
   784  104D  3454               	retlw	101	;'e'
   785  104E  3465               	retlw	109	;'m'
   786  104F  346D               	retlw	112	;'p'
   787  1050  3470               	retlw	32	;' '
   788  1051  3420               	retlw	58	;':'
   789  1052  343A               	retlw	32	;' '
   790  1053  3420               	retlw	0
   791  1054  3400               psect	stringtext7,class=STRCODE,delta=2,noexec
   792                           global __pstringtext7
   793                           __pstringtext7:
   794  1055                     	
   795                           STR_8:	
   796  1055                     	retlw	44	;','
   797  1055  342C               	retlw	66	;'B'
   798  1056  3442               	retlw	67	;'C'
   799  1057  3443               	retlw	76	;'L'
   800  1058  344C               	retlw	73	;'I'
   801  1059  3449               	retlw	70	;'F'
   802  105A  3446               	retlw	0
   803  105B  3400               psect	stringtext8,class=STRCODE,delta=2,noexec
   804                           global __pstringtext8
   805                           __pstringtext8:
   806  105C                     	
   807                           STR_7:	
   808  105C                     	retlw	44	;','
   809  105C  342C               	retlw	78	;'N'
   810  105D  344E               	retlw	56	;'8'
   811  105E  3438               	retlw	0
   812  105F  3400               psect	stringtext9,class=STRCODE,delta=2,noexec
   813                           global __pstringtext9
   814                           __pstringtext9:
   815  0000                     ; #config settings
   816                           global __CFG_FOSC$INTOSC
   817                           __CFG_FOSC$INTOSC equ 0x0
   818  0000                     global __CFG_WDTE$OFF
   819                           __CFG_WDTE$OFF equ 0x0
   820  0000                     global __CFG_PWRTE$ON
   821                           __CFG_PWRTE$ON equ 0x0
   822  0000                     global __CFG_MCLRE$OFF
   823                           __CFG_MCLRE$OFF equ 0x0
   824  0000                     global __CFG_CP$OFF
   825                           __CFG_CP$OFF equ 0x0
   826  0000                     global __CFG_BOREN$ON
   827                           __CFG_BOREN$ON equ 0x0
   828  0000                     global __CFG_CLKOUTEN$ON
   829                           __CFG_CLKOUTEN$ON equ 0x0
   830  0000                     global __CFG_IESO$OFF
   831                           __CFG_IESO$OFF equ 0x0
   832  0000                     global __CFG_FCMEN$OFF
   833                           __CFG_FCMEN$OFF equ 0x0
   834  0000                     global __CFG_WRT$OFF
   835                           __CFG_WRT$OFF equ 0x0
   836  0000                     global __CFG_VCAPEN$OFF
   837                           __CFG_VCAPEN$OFF equ 0x0
   838  0000                     global __CFG_STVREN$OFF
   839                           __CFG_STVREN$OFF equ 0x0
   840  0000                     global __CFG_BORV$LO
   841                           __CFG_BORV$LO equ 0x0
   842  0000                     global __CFG_LPBOR$OFF
   843                           __CFG_LPBOR$OFF equ 0x0
   844  0000                     global __CFG_LVP$OFF
   845                           __CFG_LVP$OFF equ 0x0
   846  0000                     	file	"C:\Users\dell\AppData\Local\Temp\s9b8."
   847                           	line	#
   848                           psect cinit,class=CODE,delta=2
   849                           global start_initialization
   850                           start_initialization:
   851  0108                     
   852                           global __initialization
   853                           __initialization:
   854  0108                     psect	bssBANK0,class=BANK0,space=1,noexec
   855                           global __pbssBANK0
   856                           __pbssBANK0:
   857  0052                     _test:
   858  0052                            ds      2
   859  0052                     
   860                           _wCounter2:
   861  0054                            ds      1
   862  0054                     
   863                           _wTimer1IntCounter:
   864  0055                            ds      1
   865  0055                     
   866                           _wI2CTxSendPos:
   867  0056                            ds      1
   868  0056                     
   869                           _wI2CRxBufferSize:
   870  0057                            ds      1
   871  0057                     
   872                           _wI2CTxBufferSize:
   873  0058                            ds      1
   874  0058                     
   875                           _wReceptionBufferPosition:
   876  0059                            ds      1
   877  0059                     
   878                           _mWritingPosition:
   879  005A                            ds      1
   880  005A                     
   881                           _mCursorDisplayShiftReg:
   882  005B                            ds      1
   883  005B                     
   884                           _mDisplayOnOffReg:
   885  005C                            ds      1
   886  005C                     
   887                           psect	bssBANK1,class=BANK1,space=1,noexec
   888                           global __pbssBANK1
   889                           __pbssBANK1:
   890  00D1                     _wTempUpdate:
   891  00D1                            ds      1
   892  00D1                     
   893                           _wReceptionCounterPrev:
   894  00D2                            ds      1
   895  00D2                     
   896                           _wReceptionCounter:
   897  00D3                            ds      1
   898  00D3                     
   899                           _wI2CTxBuffer:
   900  00D4                            ds      20
   901  00D4                     
   902                           psect	dataBANK1,class=BANK1,space=1,noexec
   903                           global __pdataBANK1
   904                           __pdataBANK1:
   905  00E8                     	file	"161518_temp_main.c"
   906                           	line	289
   907                           main@F2241:
   908  00E8                            ds      4
   909  00E8                     
   910                           psect	bssBANK2,class=BANK2,space=1,noexec
   911                           global __pbssBANK2
   912                           __pbssBANK2:
   913  0120                     _wHexTemp:
   914  0120                            ds      20
   915  0120                     
   916                           _wReceptionBuffer:
   917  0134                            ds      30
   918  0134                     
   919                           psect	bssBANK3,class=BANK3,space=1,noexec
   920                           global __pbssBANK3
   921                           __pbssBANK3:
   922  01A0                     _wInterruptText:
   923  01A0                            ds      75
   924  01A0                     
   925                           	file	"C:\Users\dell\AppData\Local\Temp\s9b8."
   926                           	line	#
   927                           ; Initialize objects allocated to BANK1
   928                           	global __pidataBANK1,__pdataBANK1
   929                           psect cinit,class=CODE,delta=2,merge=1
   930                           	movlb 1	; select bank1
   931  0108  0021               	fcall	__pidataBANK1+0		;fetch initializer
   932  0109  318E  2613  3181   	movwf	__pdataBANK1+0&07fh		
   933  010C  00E8               	fcall	__pidataBANK1+1		;fetch initializer
   934  010D  318E  2614  3181   	movwf	__pdataBANK1+1&07fh		
   935  0110  00E9               	fcall	__pidataBANK1+2		;fetch initializer
   936  0111  318E  2615  3181   	movwf	__pdataBANK1+2&07fh		
   937  0114  00EA               	fcall	__pidataBANK1+3		;fetch initializer
   938  0115  318E  2616  3181   	movwf	__pdataBANK1+3&07fh		
   939  0118  00EB               	line	#
   940                           psect clrtext,class=CODE,delta=2
   941                           global clear_ram0
   942                           ;	Called with FSR0 containing the base address, and
   943                           ;	WREG with the size to clear
   944                           clear_ram0:
   945  0E28                     	clrwdt			;clear the watchdog before getting into this loop
   946  0E28  0064               clrloop0:
   947  0E29                     	clrf	indf0		;clear RAM location pointed to by FSR
   948  0E29  0180               	addfsr	0,1
   949  0E2A  3101               	decfsz wreg		;Have we reached the end of clearing yet?
   950  0E2B  0B89               	goto clrloop0	;have we reached the end yet?
   951  0E2C  2E29               	retlw	0		;all done for this memory range, return
   952  0E2D  3400               ; Clear objects allocated to BANK0
   953                           psect cinit,class=CODE,delta=2,merge=1
   954                           	global __pbssBANK0
   955                           	movlw	low(__pbssBANK0)
   956  0119  3052               	movwf	fsr0l
   957  011A  0084               	movlw	high(__pbssBANK0)
   958  011B  3000               	movwf	fsr0h
   959  011C  0085               	movlw	0Bh
   960  011D  300B               	fcall	clear_ram0
   961  011E  318E  2628  3181   ; Clear objects allocated to BANK1
   962                           psect cinit,class=CODE,delta=2,merge=1
   963                           	global __pbssBANK1
   964                           	movlw	low(__pbssBANK1)
   965  0121  30D1               	movwf	fsr0l
   966  0122  0084               	movlw	high(__pbssBANK1)
   967  0123  3000               	movwf	fsr0h
   968  0124  0085               	movlw	017h
   969  0125  3017               	fcall	clear_ram0
   970  0126  318E  2628  3181   ; Clear objects allocated to BANK2
   971                           psect cinit,class=CODE,delta=2,merge=1
   972                           	global __pbssBANK2
   973                           	movlw	low(__pbssBANK2)
   974  0129  3020               	movwf	fsr0l
   975  012A  0084               	movlw	high(__pbssBANK2)
   976  012B  3001               	movwf	fsr0h
   977  012C  0085               	movlw	032h
   978  012D  3032               	fcall	clear_ram0
   979  012E  318E  2628  3181   ; Clear objects allocated to BANK3
   980                           psect cinit,class=CODE,delta=2,merge=1
   981                           	global __pbssBANK3
   982                           	movlw	low(__pbssBANK3)
   983  0131  30A0               	movwf	fsr0l
   984  0132  0084               	movlw	high(__pbssBANK3)
   985  0133  3001               	movwf	fsr0h
   986  0134  0085               	movlw	04Bh
   987  0135  304B               	fcall	clear_ram0
   988  0136  318E  2628  3181   psect cinit,class=CODE,delta=2,merge=1
   989                           global end_of_initialization,__end_of__initialization
   990                           
   991                           ;End of C runtime variable initialization code
   992                           
   993                           end_of_initialization:
   994  0139                     __end_of__initialization:
   995  0139                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
   996  0139  107E               movlb 0
   997  013A  0020               ljmp _main	;jump to C main() function
   998  013B  3181  293D         psect	cstackBANK1,class=BANK1,space=1,noexec
   999                           global __pcstackBANK1
  1000                           __pcstackBANK1:
  1001  00A0                     	global	main@wReadout
  1002                           main@wReadout:	; 20 bytes @ 0x0
  1003  00A0                     	ds	20
  1004  00A0                     	global	main@wConv
  1005                           main@wConv:	; 4 bytes @ 0x14
  1006  00B4                     	ds	4
  1007  00B4                     	global	main@wTemp
  1008                           main@wTemp:	; 2 bytes @ 0x18
  1009  00B8                     	ds	2
  1010  00B8                     	global	main@wIterationCounter
  1011                           main@wIterationCounter:	; 2 bytes @ 0x1A
  1012  00BA                     	ds	2
  1013  00BA                     	global	main@wHumidityPrev
  1014                           main@wHumidityPrev:	; 2 bytes @ 0x1C
  1015  00BC                     	ds	2
  1016  00BC                     	global	main@wTemperaturePrev
  1017                           main@wTemperaturePrev:	; 2 bytes @ 0x1E
  1018  00BE                     	ds	2
  1019  00BE                     	global	main@wMenuPrev
  1020                           main@wMenuPrev:	; 1 bytes @ 0x20
  1021  00C0                     	ds	1
  1022  00C0                     	global	main@wEnterBottonPressed
  1023                           main@wEnterBottonPressed:	; 1 bytes @ 0x21
  1024  00C1                     	ds	1
  1025  00C1                     	global	main@wDebounceEnter
  1026                           main@wDebounceEnter:	; 2 bytes @ 0x22
  1027  00C2                     	ds	2
  1028  00C2                     	global	main@wDebounceUp
  1029                           main@wDebounceUp:	; 2 bytes @ 0x24
  1030  00C4                     	ds	2
  1031  00C4                     	global	main@wDebounceDown
  1032                           main@wDebounceDown:	; 2 bytes @ 0x26
  1033  00C6                     	ds	2
  1034  00C6                     	global	main@wHumidity
  1035                           main@wHumidity:	; 2 bytes @ 0x28
  1036  00C8                     	ds	2
  1037  00C8                     	global	main@wTemperature
  1038                           main@wTemperature:	; 2 bytes @ 0x2A
  1039  00CA                     	ds	2
  1040  00CA                     	global	main@wUpBottonPressed
  1041                           main@wUpBottonPressed:	; 1 bytes @ 0x2C
  1042  00CC                     	ds	1
  1043  00CC                     	global	main@wDownBottonPressed
  1044                           main@wDownBottonPressed:	; 1 bytes @ 0x2D
  1045  00CD                     	ds	1
  1046  00CD                     	global	main@wCounter
  1047                           main@wCounter:	; 2 bytes @ 0x2E
  1048  00CE                     	ds	2
  1049  00CE                     	global	main@wMenu
  1050                           main@wMenu:	; 1 bytes @ 0x30
  1051  00D0                     	ds	1
  1052  00D0                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  1053                           global __pcstackCOMMON
  1054                           __pcstackCOMMON:
  1055  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1056  0070                     ?_clearDisplay:	; 1 bytes @ 0x0
  1057  0070                     ?_powerOnLcd:	; 1 bytes @ 0x0
  1058  0070                     ?_setCursorOff:	; 1 bytes @ 0x0
  1059  0070                     ?_moveCursorToHome:	; 1 bytes @ 0x0
  1060  0070                     ?_setNotBlinkingCursor:	; 1 bytes @ 0x0
  1061  0070                     ?_setData:	; 1 bytes @ 0x0
  1062  0070                     ?_writeInsChk:	; 1 bytes @ 0x0
  1063  0070                     ?_writeTxtChk:	; 1 bytes @ 0x0
  1064  0070                     ?_SetToSendDataToLCD:	; 1 bytes @ 0x0
  1065  0070                     ?_waitLCDBusy:	; 1 bytes @ 0x0
  1066  0070                     ?_writeInsNoChk:	; 1 bytes @ 0x0
  1067  0070                     ?_ToggleBitRB5:	; 1 bytes @ 0x0
  1068  0070                     ??_ToggleBitRB5:	; 1 bytes @ 0x0
  1069  0070                     ?_SetToGetTemp:	; 1 bytes @ 0x0
  1070  0070                     ?_GetTemp:	; 1 bytes @ 0x0
  1071  0070                     ?_WakeTemp:	; 1 bytes @ 0x0
  1072  0070                     ?_PrintLog:	; 1 bytes @ 0x0
  1073  0070                     ?_main:	; 1 bytes @ 0x0
  1074  0070                     ?_myint:	; 1 bytes @ 0x0
  1075  0070                     ?_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  1076  0070                     	global	?i1_strlen
  1077                           ?i1_strlen:	; 2 bytes @ 0x0
  1078  0070                     	global	i1strlen@s
  1079                           i1strlen@s:	; 2 bytes @ 0x0
  1080  0070                     	ds	2
  1081  0070                     ??i1_strlen:	; 1 bytes @ 0x2
  1082  0072                     	ds	2
  1083  0072                     	global	i1strlen@a
  1084                           i1strlen@a:	; 2 bytes @ 0x4
  1085  0074                     	ds	2
  1086  0074                     ?i1_strcpy:	; 1 bytes @ 0x6
  1087  0076                     	global	i1strcpy@src
  1088                           i1strcpy@src:	; 2 bytes @ 0x6
  1089  0076                     	ds	2
  1090  0076                     ??i1_strcpy:	; 1 bytes @ 0x8
  1091  0078                     	ds	2
  1092  0078                     	global	i1strcpy@s
  1093                           i1strcpy@s:	; 2 bytes @ 0xA
  1094  007A                     	ds	2
  1095  007A                     	global	i1strcpy@dest
  1096                           i1strcpy@dest:	; 1 bytes @ 0xC
  1097  007C                     	ds	1
  1098  007C                     	global	i1strcpy@d
  1099                           i1strcpy@d:	; 1 bytes @ 0xD
  1100  007D                     	ds	1
  1101  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1102                           global __pcstackBANK0
  1103                           __pcstackBANK0:
  1104  0020                     ?i1_strcat:	; 1 bytes @ 0x0
  1105  0020                     	global	i1strcat@src
  1106                           i1strcat@src:	; 2 bytes @ 0x0
  1107  0020                     	ds	2
  1108  0020                     ??i1_strcat:	; 1 bytes @ 0x2
  1109  0022                     	ds	2
  1110  0022                     	global	i1strcat@dest
  1111                           i1strcat@dest:	; 1 bytes @ 0x4
  1112  0024                     	ds	1
  1113  0024                     ?i1_Add_Trace:	; 1 bytes @ 0x5
  1114  0025                     	global	i1Add_Trace@iSizeOfoText
  1115                           i1Add_Trace@iSizeOfoText:	; 1 bytes @ 0x5
  1116  0025                     	ds	1
  1117  0025                     	global	i1Add_Trace@iText
  1118                           i1Add_Trace@iText:	; 2 bytes @ 0x6
  1119  0026                     	ds	2
  1120  0026                     ??i1_Add_Trace:	; 1 bytes @ 0x8
  1121  0028                     	ds	6
  1122  0028                     	global	i1Add_Trace@oText
  1123                           i1Add_Trace@oText:	; 1 bytes @ 0xE
  1124  002E                     	ds	1
  1125  002E                     ??_myint:	; 1 bytes @ 0xF
  1126  002F                     	ds	1
  1127  002F                     ??_setData:	; 1 bytes @ 0x10
  1128  0030                     ??_SetToSendDataToLCD:	; 1 bytes @ 0x10
  1129  0030                     ??_waitLCDBusy:	; 1 bytes @ 0x10
  1130  0030                     ??_SetToGetTemp:	; 1 bytes @ 0x10
  1131  0030                     ??_WakeTemp:	; 1 bytes @ 0x10
  1132  0030                     ?_Debounce:	; 1 bytes @ 0x10
  1133  0030                     ??_SetToReadDataFromLCD:	; 1 bytes @ 0x10
  1134  0030                     	global	?_strlen
  1135                           ?_strlen:	; 2 bytes @ 0x10
  1136  0030                     ?_memset:	; 2 bytes @ 0x10
  1137  0030                     	global	?___lwdiv
  1138                           ?___lwdiv:	; 2 bytes @ 0x10
  1139  0030                     	global	?___lwmod
  1140                           ?___lwmod:	; 2 bytes @ 0x10
  1141  0030                     	global	Debounce@ioTimer
  1142                           Debounce@ioTimer:	; 1 bytes @ 0x10
  1143  0030                     	global	___lwdiv@divisor
  1144                           ___lwdiv@divisor:	; 2 bytes @ 0x10
  1145  0030                     	global	___lwmod@divisor
  1146                           ___lwmod@divisor:	; 2 bytes @ 0x10
  1147  0030                     	global	memset@dest
  1148                           memset@dest:	; 2 bytes @ 0x10
  1149  0030                     	global	strlen@s
  1150                           strlen@s:	; 2 bytes @ 0x10
  1151  0030                     	ds	1
  1152  0030                     	global	Debounce@swPressed
  1153                           Debounce@swPressed:	; 1 bytes @ 0x11
  1154  0031                     	ds	1
  1155  0031                     ??_strlen:	; 1 bytes @ 0x12
  1156  0032                     ??_Debounce:	; 1 bytes @ 0x12
  1157  0032                     	global	setData@iValue
  1158                           setData@iValue:	; 1 bytes @ 0x12
  1159  0032                     	global	___lwdiv@dividend
  1160                           ___lwdiv@dividend:	; 2 bytes @ 0x12
  1161  0032                     	global	___lwmod@dividend
  1162                           ___lwmod@dividend:	; 2 bytes @ 0x12
  1163  0032                     	global	memset@c
  1164                           memset@c:	; 2 bytes @ 0x12
  1165  0032                     	ds	1
  1166  0032                     ??_writeInsNoChk:	; 1 bytes @ 0x13
  1167  0033                     	global	waitLCDBusy@busyFlag
  1168                           waitLCDBusy@busyFlag:	; 2 bytes @ 0x13
  1169  0033                     	ds	1
  1170  0033                     ??___lwdiv:	; 1 bytes @ 0x14
  1171  0034                     ??___lwmod:	; 1 bytes @ 0x14
  1172  0034                     	global	Debounce@iSwitch
  1173                           Debounce@iSwitch:	; 1 bytes @ 0x14
  1174  0034                     	global	writeInsNoChk@iOpCode
  1175                           writeInsNoChk@iOpCode:	; 1 bytes @ 0x14
  1176  0034                     	global	memset@n
  1177                           memset@n:	; 2 bytes @ 0x14
  1178  0034                     	global	strlen@a
  1179                           strlen@a:	; 2 bytes @ 0x14
  1180  0034                     	ds	1
  1181  0034                     ?_setCursorPosition:	; 1 bytes @ 0x15
  1182  0035                     ??_writeInsChk:	; 1 bytes @ 0x15
  1183  0035                     	global	writeInsChk@iOpCode
  1184                           writeInsChk@iOpCode:	; 1 bytes @ 0x15
  1185  0035                     	global	setCursorPosition@iPosition
  1186                           setCursorPosition@iPosition:	; 1 bytes @ 0x15
  1187  0035                     	global	___lwmod@counter
  1188                           ___lwmod@counter:	; 1 bytes @ 0x15
  1189  0035                     	global	___lwdiv@quotient
  1190                           ___lwdiv@quotient:	; 2 bytes @ 0x15
  1191  0035                     	ds	1
  1192  0035                     ??_memset:	; 1 bytes @ 0x16
  1193  0036                     ??_initLCD:	; 1 bytes @ 0x16
  1194  0036                     ??_clearDisplay:	; 1 bytes @ 0x16
  1195  0036                     ??_powerOnLcd:	; 1 bytes @ 0x16
  1196  0036                     ??_setCursorOff:	; 1 bytes @ 0x16
  1197  0036                     ??_moveCursorToHome:	; 1 bytes @ 0x16
  1198  0036                     ??_setNotBlinkingCursor:	; 1 bytes @ 0x16
  1199  0036                     ??_setCursorPosition:	; 1 bytes @ 0x16
  1200  0036                     ?_strcpy:	; 1 bytes @ 0x16
  1201  0036                     	global	strcpy@src
  1202                           strcpy@src:	; 2 bytes @ 0x16
  1203  0036                     	ds	1
  1204  0036                     	global	___lwdiv@counter
  1205                           ___lwdiv@counter:	; 1 bytes @ 0x17
  1206  0037                     	ds	1
  1207  0037                     ??_strcpy:	; 1 bytes @ 0x18
  1208  0038                     ?_printEM1812:	; 1 bytes @ 0x18
  1209  0038                     	global	setCursorPosition@iLine
  1210                           setCursorPosition@iLine:	; 1 bytes @ 0x18
  1211  0038                     	global	printEM1812@wVariable
  1212                           printEM1812@wVariable:	; 2 bytes @ 0x18
  1213  0038                     	ds	1
  1214  0038                     	global	setCursorPosition@wLCDIndex
  1215                           setCursorPosition@wLCDIndex:	; 1 bytes @ 0x19
  1216  0039                     	ds	1
  1217  0039                     ??_writeTxtChk:	; 1 bytes @ 0x1A
  1218  003A                     	global	printEM1812@oTextOut
  1219                           printEM1812@oTextOut:	; 1 bytes @ 0x1A
  1220  003A                     	global	memset@k
  1221                           memset@k:	; 2 bytes @ 0x1A
  1222  003A                     	global	strcpy@s
  1223                           strcpy@s:	; 2 bytes @ 0x1A
  1224  003A                     	ds	1
  1225  003A                     ??_printEM1812:	; 1 bytes @ 0x1B
  1226  003B                     	ds	1
  1227  003B                     	global	printEM1812@wTen
  1228                           printEM1812@wTen:	; 1 bytes @ 0x1C
  1229  003C                     	global	writeTxtChk@iOpCode
  1230                           writeTxtChk@iOpCode:	; 1 bytes @ 0x1C
  1231  003C                     	global	strcpy@d
  1232                           strcpy@d:	; 1 bytes @ 0x1C
  1233  003C                     	global	memset@s
  1234                           memset@s:	; 2 bytes @ 0x1C
  1235  003C                     	ds	1
  1236  003C                     ?_lcdWriteText:	; 1 bytes @ 0x1D
  1237  003D                     	global	printEM1812@wUnity
  1238                           printEM1812@wUnity:	; 1 bytes @ 0x1D
  1239  003D                     	global	strcpy@dest
  1240                           strcpy@dest:	; 1 bytes @ 0x1D
  1241  003D                     	global	lcdWriteText@iText
  1242                           lcdWriteText@iText:	; 2 bytes @ 0x1D
  1243  003D                     	ds	1
  1244  003D                     ?_strcat:	; 1 bytes @ 0x1E
  1245  003E                     ??_GetTemp:	; 1 bytes @ 0x1E
  1246  003E                     	global	printEM1812@wDecimal
  1247                           printEM1812@wDecimal:	; 1 bytes @ 0x1E
  1248  003E                     	global	strcat@src
  1249                           strcat@src:	; 2 bytes @ 0x1E
  1250  003E                     	ds	1
  1251  003E                     ??_lcdWriteText:	; 1 bytes @ 0x1F
  1252  003F                     	ds	1
  1253  003F                     ??_strcat:	; 1 bytes @ 0x20
  1254  0040                     	ds	2
  1255  0040                     	global	lcdWriteText@wCharReadingPos
  1256                           lcdWriteText@wCharReadingPos:	; 1 bytes @ 0x22
  1257  0042                     	global	strcat@dest
  1258                           strcat@dest:	; 1 bytes @ 0x22
  1259  0042                     	ds	1
  1260  0042                     ?_Add_Trace:	; 1 bytes @ 0x23
  1261  0043                     ??_PrintLog:	; 1 bytes @ 0x23
  1262  0043                     	global	Add_Trace@iSizeOfoText
  1263                           Add_Trace@iSizeOfoText:	; 1 bytes @ 0x23
  1264  0043                     	ds	1
  1265  0043                     	global	Add_Trace@iText
  1266                           Add_Trace@iText:	; 2 bytes @ 0x24
  1267  0044                     	ds	1
  1268  0044                     	global	PrintLog@wInterruptTextLen
  1269                           PrintLog@wInterruptTextLen:	; 1 bytes @ 0x25
  1270  0045                     	ds	1
  1271  0045                     ??_Add_Trace:	; 1 bytes @ 0x26
  1272  0046                     	global	PrintLog@iText
  1273                           PrintLog@iText:	; 1 bytes @ 0x26
  1274  0046                     	ds	6
  1275  0046                     	global	Add_Trace@oText
  1276                           Add_Trace@oText:	; 1 bytes @ 0x2C
  1277  004C                     	ds	1
  1278  004C                     ??_main:	; 1 bytes @ 0x2D
  1279  004D                     	ds	5
  1280  004D                     ;!
  1281                           ;!Data Sizes:
  1282                           ;!    Strings     96
  1283                           ;!    Constant    0
  1284                           ;!    Data        4
  1285                           ;!    BSS         159
  1286                           ;!    Persistent  0
  1287                           ;!    Stack       0
  1288                           ;!
  1289                           ;!Auto Spaces:
  1290                           ;!    Space          Size  Autos    Used
  1291                           ;!    COMMON           14     14      14
  1292                           ;!    BANK0            80     50      61
  1293                           ;!    BANK1            80     49      76
  1294                           ;!    BANK2            80      0      50
  1295                           ;!    BANK3            80      0      75
  1296                           ;!    BANK4            80      0       0
  1297                           ;!    BANK5            80      0       0
  1298                           ;!    BANK6            80      0       0
  1299                           ;!    BANK7            80      0       0
  1300                           ;!    BANK8            80      0       0
  1301                           ;!    BANK9            80      0       0
  1302                           ;!    BANK10           80      0       0
  1303                           ;!    BANK11           80      0       0
  1304                           ;!    BANK12           48      0       0
  1305                           
  1306                           ;!
  1307                           ;!Pointer List with Targets:
  1308                           ;!
  1309                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 75
  1310                           ;!		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1311                           ;!		 -> main@wReadout(BANK1[20]), wInterruptText(BANK3[75]), 
  1312                           ;!
  1313                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 75
  1314                           ;!		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1315                           ;!		 -> main@wReadout(BANK1[20]), wInterruptText(BANK3[75]), 
  1316                           ;!
  1317                           ;!    strcpy@dest	PTR unsigned char  size(1) Largest target is 75
  1318                           ;!		 -> wInterruptText(BANK3[75]), 
  1319                           ;!
  1320                           ;!    strcpy@d	PTR unsigned char  size(1) Largest target is 75
  1321                           ;!		 -> wInterruptText(BANK3[75]), 
  1322                           ;!
  1323                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
  1324                           ;!		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1325                           ;!		 -> main@wReadout(BANK1[20]), 
  1326                           ;!
  1327                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
  1328                           ;!		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1329                           ;!		 -> main@wReadout(BANK1[20]), 
  1330                           ;!
  1331                           ;!    sp__strcpy	PTR unsigned char  size(1) Largest target is 75
  1332                           ;!		 -> wInterruptText(BANK3[75]), 
  1333                           ;!
  1334                           ;!    strcat@src	PTR const unsigned char  size(2) Largest target is 20
  1335                           ;!		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1336                           ;!		 -> main@wReadout(BANK1[20]), 
  1337                           ;!
  1338                           ;!    strcat@dest	PTR unsigned char  size(1) Largest target is 75
  1339                           ;!		 -> wInterruptText(BANK3[75]), 
  1340                           ;!
  1341                           ;!    memset@dest	PTR void  size(2) Largest target is 75
  1342                           ;!		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]),
                                  
  1343                           ;!
  1344                           ;!    memset@s	PTR unsigned char  size(2) Largest target is 75
  1345                           ;!		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]),
                                  
  1346                           ;!
  1347                           ;!    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
  1348                           ;!		 -> STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[16]), STR_3(CODE[16]), 
  1349                           ;!		 -> main@wConv(BANK1[4]), wInterruptText(BANK3[75]), 
  1350                           ;!
  1351                           ;!    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
  1352                           ;!		 -> main@wEnterBottonPressed(BANK1[1]), main@wDownBottonPressed(BANK1[1]), main@wUpB
                                 ottonPressed(BANK1[1]), 
  1353                           ;!
  1354                           ;!    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
  1355                           ;!		 -> main@wDebounceDown(BANK1[2]), main@wDebounceUp(BANK1[2]), main@wDebounceEnter(BA
                                 NK1[2]), 
  1356                           ;!
  1357                           ;!    printEM1812@oTextOut	PTR unsigned char  size(1) Largest target is 20
  1358                           ;!		 -> main@wReadout(BANK1[20]), 
  1359                           ;!
  1360                           ;!    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
  1361                           ;!		 -> wInterruptText(BANK3[75]), 
  1362                           ;!
  1363                           ;!    sp__memset	PTR void  size(2) Largest target is 75
  1364                           ;!		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]),
                                  
  1365                           ;!
  1366                           ;!    sp__strcat	PTR unsigned char  size(1) Largest target is 75
  1367                           ;!		 -> wInterruptText(BANK3[75]), 
  1368                           ;!
  1369                           ;!    Add_Trace@iText	PTR unsigned char  size(2) Largest target is 20
  1370                           ;!		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1371                           ;!		 -> main@wReadout(BANK1[20]), 
  1372                           ;!
  1373                           ;!    Add_Trace@oText	PTR unsigned char  size(1) Largest target is 75
  1374                           ;!		 -> wInterruptText(BANK3[75]), 
  1375                           ;!
  1376                           
  1377                           
  1378                           ;!
  1379                           ;!Critical Paths under _main in COMMON
  1380                           ;!
  1381                           ;!    None.
  1382                           ;!
  1383                           ;!Critical Paths under _myint in COMMON
  1384                           ;!
  1385                           ;!    i1_strcat->i1_strcpy
  1386                           ;!    i1_strcpy->i1_strlen
  1387                           ;!
  1388                           ;!Critical Paths under _main in BANK0
  1389                           ;!
  1390                           ;!    _main->_Add_Trace
  1391                           ;!    _setNotBlinkingCursor->_writeInsChk
  1392                           ;!    _setCursorOff->_writeInsChk
  1393                           ;!    _printEM1812->___lwdiv
  1394                           ;!    _powerOnLcd->_writeInsChk
  1395                           ;!    _moveCursorToHome->_writeInsChk
  1396                           ;!    _initLCD->_writeInsChk
  1397                           ;!    _clearDisplay->_writeInsChk
  1398                           ;!    _writeInsChk->_waitLCDBusy
  1399                           ;!    _writeInsChk->_writeInsNoChk
  1400                           ;!    _writeInsNoChk->_setData
  1401                           ;!    _PrintLog->_lcdWriteText
  1402                           ;!    _lcdWriteText->_writeTxtChk
  1403                           ;!    _writeTxtChk->_setCursorPosition
  1404                           ;!    _setCursorPosition->_waitLCDBusy
  1405                           ;!    _GetTemp->_memset
  1406                           ;!    _Add_Trace->_strcat
  1407                           ;!    _strcat->_strcpy
  1408                           ;!    _strcpy->_strlen
  1409                           ;!
  1410                           ;!Critical Paths under _myint in BANK0
  1411                           ;!
  1412                           ;!    _myint->i1_Add_Trace
  1413                           ;!    i1_Add_Trace->i1_strcat
  1414                           ;!
  1415                           ;!Critical Paths under _main in BANK1
  1416                           ;!
  1417                           ;!    None.
  1418                           ;!
  1419                           ;!Critical Paths under _myint in BANK1
  1420                           ;!
  1421                           ;!    None.
  1422                           ;!
  1423                           ;!Critical Paths under _main in BANK2
  1424                           ;!
  1425                           ;!    None.
  1426                           ;!
  1427                           ;!Critical Paths under _myint in BANK2
  1428                           ;!
  1429                           ;!    None.
  1430                           ;!
  1431                           ;!Critical Paths under _main in BANK3
  1432                           ;!
  1433                           ;!    None.
  1434                           ;!
  1435                           ;!Critical Paths under _myint in BANK3
  1436                           ;!
  1437                           ;!    None.
  1438                           ;!
  1439                           ;!Critical Paths under _main in BANK4
  1440                           ;!
  1441                           ;!    None.
  1442                           ;!
  1443                           ;!Critical Paths under _myint in BANK4
  1444                           ;!
  1445                           ;!    None.
  1446                           ;!
  1447                           ;!Critical Paths under _main in BANK5
  1448                           ;!
  1449                           ;!    None.
  1450                           ;!
  1451                           ;!Critical Paths under _myint in BANK5
  1452                           ;!
  1453                           ;!    None.
  1454                           ;!
  1455                           ;!Critical Paths under _main in BANK6
  1456                           ;!
  1457                           ;!    None.
  1458                           ;!
  1459                           ;!Critical Paths under _myint in BANK6
  1460                           ;!
  1461                           ;!    None.
  1462                           ;!
  1463                           ;!Critical Paths under _main in BANK7
  1464                           ;!
  1465                           ;!    None.
  1466                           ;!
  1467                           ;!Critical Paths under _myint in BANK7
  1468                           ;!
  1469                           ;!    None.
  1470                           ;!
  1471                           ;!Critical Paths under _main in BANK8
  1472                           ;!
  1473                           ;!    None.
  1474                           ;!
  1475                           ;!Critical Paths under _myint in BANK8
  1476                           ;!
  1477                           ;!    None.
  1478                           ;!
  1479                           ;!Critical Paths under _main in BANK9
  1480                           ;!
  1481                           ;!    None.
  1482                           ;!
  1483                           ;!Critical Paths under _myint in BANK9
  1484                           ;!
  1485                           ;!    None.
  1486                           ;!
  1487                           ;!Critical Paths under _main in BANK10
  1488                           ;!
  1489                           ;!    None.
  1490                           ;!
  1491                           ;!Critical Paths under _myint in BANK10
  1492                           ;!
  1493                           ;!    None.
  1494                           ;!
  1495                           ;!Critical Paths under _main in BANK11
  1496                           ;!
  1497                           ;!    None.
  1498                           ;!
  1499                           ;!Critical Paths under _myint in BANK11
  1500                           ;!
  1501                           ;!    None.
  1502                           ;!
  1503                           ;!Critical Paths under _main in BANK12
  1504                           ;!
  1505                           ;!    None.
  1506                           ;!
  1507                           ;!Critical Paths under _myint in BANK12
  1508                           ;!
  1509                           ;!    None.
  1510                           
  1511 ;;
  1512 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1513 ;;
  1514                           
  1515                           ;!
  1516                           ;!Call Graph Tables:
  1517                           ;!
  1518                           ;! ---------------------------------------------------------------------------------
  1519                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1520                           ;! ---------------------------------------------------------------------------------
  1521                           ;! (0) _main                                                54    54      0   18952
  1522                           ;!                                             45 BANK0      5     5      0
  1523                           ;!                                              0 BANK1     49    49      0
  1524                           ;!                          _Add_Trace
  1525                           ;!                           _Debounce
  1526                           ;!                            _GetTemp
  1527                           ;!                           _PrintLog
  1528                           ;!                       _SetToGetTemp
  1529                           ;!                           _WakeTemp
  1530                           ;!                       _clearDisplay
  1531                           ;!                            _initLCD
  1532                           ;!                       _lcdWriteText
  1533                           ;!                             _memset
  1534                           ;!                   _moveCursorToHome
  1535                           ;!                         _powerOnLcd
  1536                           ;!                        _printEM1812
  1537                           ;!                       _setCursorOff
  1538                           ;!                  _setCursorPosition
  1539                           ;!               _setNotBlinkingCursor
  1540                           ;! ---------------------------------------------------------------------------------
  1541                           ;! (1) _setNotBlinkingCursor                                 1     1      0     178
  1542                           ;!                                             22 BANK0      1     1      0
  1543                           ;!                        _writeInsChk
  1544                           ;! ---------------------------------------------------------------------------------
  1545                           ;! (1) _setCursorOff                                         1     1      0     178
  1546                           ;!                                             22 BANK0      1     1      0
  1547                           ;!                        _writeInsChk
  1548                           ;! ---------------------------------------------------------------------------------
  1549                           ;! (1) _printEM1812                                         27    24      3    1524
  1550                           ;!                                             24 BANK0      7     4      3
  1551                           ;!                            ___lwdiv
  1552                           ;!                            ___lwmod
  1553                           ;! ---------------------------------------------------------------------------------
  1554                           ;! (2) ___lwmod                                              6     2      4     463
  1555                           ;!                                             16 BANK0      6     2      4
  1556                           ;! ---------------------------------------------------------------------------------
  1557                           ;! (2) ___lwdiv                                              8     4      4     466
  1558                           ;!                                             16 BANK0      8     4      4
  1559                           ;! ---------------------------------------------------------------------------------
  1560                           ;! (1) _powerOnLcd                                           1     1      0     178
  1561                           ;!                                             22 BANK0      1     1      0
  1562                           ;!                        _writeInsChk
  1563                           ;! ---------------------------------------------------------------------------------
  1564                           ;! (1) _moveCursorToHome                                     0     0      0     178
  1565                           ;!                        _writeInsChk
  1566                           ;! ---------------------------------------------------------------------------------
  1567                           ;! (1) _initLCD                                              1     1      0     444
  1568                           ;!                                             22 BANK0      1     1      0
  1569                           ;!                       _clearDisplay
  1570                           ;!                            _setData
  1571                           ;!                        _writeInsChk
  1572                           ;! ---------------------------------------------------------------------------------
  1573                           ;! (2) _clearDisplay                                         0     0      0     178
  1574                           ;!                        _writeInsChk
  1575                           ;! ---------------------------------------------------------------------------------
  1576                           ;! (2) _writeInsChk                                          1     1      0     178
  1577                           ;!                                             21 BANK0      1     1      0
  1578                           ;!                        _waitLCDBusy
  1579                           ;!                      _writeInsNoChk
  1580                           ;! ---------------------------------------------------------------------------------
  1581                           ;! (3) _writeInsNoChk                                        2     2      0     132
  1582                           ;!                                             19 BANK0      2     2      0
  1583                           ;!                 _SetToSendDataToLCD
  1584                           ;!                            _setData
  1585                           ;! ---------------------------------------------------------------------------------
  1586                           ;! (1) _WakeTemp                                             1     1      0       0
  1587                           ;!                                             16 BANK0      1     1      0
  1588                           ;! ---------------------------------------------------------------------------------
  1589                           ;! (1) _SetToGetTemp                                         1     1      0       0
  1590                           ;!                                             16 BANK0      1     1      0
  1591                           ;! ---------------------------------------------------------------------------------
  1592                           ;! (1) _PrintLog                                             4     4      0    4632
  1593                           ;!                                             35 BANK0      4     4      0
  1594                           ;!                       _lcdWriteText
  1595                           ;!                             _memset
  1596                           ;!                             _strlen
  1597                           ;! ---------------------------------------------------------------------------------
  1598                           ;! (1) _lcdWriteText                                         6     4      2    2147
  1599                           ;!                                             29 BANK0      6     4      2
  1600                           ;!                        _writeTxtChk
  1601                           ;! ---------------------------------------------------------------------------------
  1602                           ;! (2) _writeTxtChk                                          3     3      0    1601
  1603                           ;!                                             26 BANK0      3     3      0
  1604                           ;!                 _SetToSendDataToLCD
  1605                           ;!                  _setCursorPosition
  1606                           ;!                            _setData
  1607                           ;!                        _waitLCDBusy
  1608                           ;! ---------------------------------------------------------------------------------
  1609                           ;! (1) _setCursorPosition                                    5     4      1    1423
  1610                           ;!                                             21 BANK0      5     4      1
  1611                           ;!                 _SetToSendDataToLCD
  1612                           ;!                            _setData
  1613                           ;!                        _waitLCDBusy
  1614                           ;! ---------------------------------------------------------------------------------
  1615                           ;! (3) _waitLCDBusy                                          5     5      0      24
  1616                           ;!                                             16 BANK0      5     5      0
  1617                           ;!               _SetToReadDataFromLCD
  1618                           ;! ---------------------------------------------------------------------------------
  1619                           ;! (4) _SetToReadDataFromLCD                                 0     0      0       0
  1620                           ;! ---------------------------------------------------------------------------------
  1621                           ;! (4) _setData                                              3     3      0      88
  1622                           ;!                                             16 BANK0      3     3      0
  1623                           ;! ---------------------------------------------------------------------------------
  1624                           ;! (4) _SetToSendDataToLCD                                   0     0      0       0
  1625                           ;! ---------------------------------------------------------------------------------
  1626                           ;! (1) _GetTemp                                              1     1      0    1897
  1627                           ;!                                             30 BANK0      1     1      0
  1628                           ;!                             _memset
  1629                           ;! ---------------------------------------------------------------------------------
  1630                           ;! (1) _memset                                              14     8      6    1897
  1631                           ;!                                             16 BANK0     14     8      6
  1632                           ;! ---------------------------------------------------------------------------------
  1633                           ;! (1) _Debounce                                             5     3      2     632
  1634                           ;!                                             16 BANK0      5     3      2
  1635                           ;! ---------------------------------------------------------------------------------
  1636                           ;! (1) _Add_Trace                                           10     7      3    2290
  1637                           ;!                                             35 BANK0     10     7      3
  1638                           ;!                             _strcat
  1639                           ;!                             _strlen
  1640                           ;! ---------------------------------------------------------------------------------
  1641                           ;! (2) _strcat                                               5     3      2     780
  1642                           ;!                                             30 BANK0      5     3      2
  1643                           ;!                             _strcpy
  1644                           ;!                             _strlen
  1645                           ;! ---------------------------------------------------------------------------------
  1646                           ;! (2) _strlen                                               6     4      2     394
  1647                           ;!                                             16 BANK0      6     4      2
  1648                           ;! ---------------------------------------------------------------------------------
  1649                           ;! (3) _strcpy                                               8     6      2     205
  1650                           ;!                                             22 BANK0      8     6      2
  1651                           ;!                             _strlen (ARG)
  1652                           ;! ---------------------------------------------------------------------------------
  1653                           ;! Estimated maximum stack depth 4
  1654                           ;! ---------------------------------------------------------------------------------
  1655                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1656                           ;! ---------------------------------------------------------------------------------
  1657                           ;! (7) _myint                                                1     1      0     770
  1658                           ;!                                             15 BANK0      1     1      0
  1659                           ;!                       _ToggleBitRB5
  1660                           ;!                        i1_Add_Trace
  1661                           ;! ---------------------------------------------------------------------------------
  1662                           ;! (8) i1_Add_Trace                                         10     7      3     770
  1663                           ;!                                              5 BANK0     10     7      3
  1664                           ;!                           i1_strcat
  1665                           ;!                           i1_strlen
  1666                           ;! ---------------------------------------------------------------------------------
  1667                           ;! (9) i1_strcat                                             5     3      2     388
  1668                           ;!                                              0 BANK0      5     3      2
  1669                           ;!                           i1_strcpy
  1670                           ;!                           i1_strlen
  1671                           ;! ---------------------------------------------------------------------------------
  1672                           ;! (9) i1_strlen                                             6     4      2     168
  1673                           ;!                                              0 COMMON     6     4      2
  1674                           ;! ---------------------------------------------------------------------------------
  1675                           ;! (10) i1_strcpy                                            8     6      2     122
  1676                           ;!                                              6 COMMON     8     6      2
  1677                           ;!                           i1_strlen (ARG)
  1678                           ;! ---------------------------------------------------------------------------------
  1679                           ;! (8) _ToggleBitRB5                                         0     0      0       0
  1680                           ;! ---------------------------------------------------------------------------------
  1681                           ;! Estimated maximum stack depth 10
  1682                           ;! ---------------------------------------------------------------------------------
  1683                           ;!
  1684                           ;! Call Graph Graphs:
  1685                           ;!
  1686                           ;! _main (ROOT)
  1687                           ;!   _Add_Trace
  1688                           ;!     _strcat
  1689                           ;!       _strcpy
  1690                           ;!         _strlen (ARG)
  1691                           ;!       _strlen
  1692                           ;!     _strlen
  1693                           ;!   _Debounce
  1694                           ;!   _GetTemp
  1695                           ;!     _memset
  1696                           ;!   _PrintLog
  1697                           ;!     _lcdWriteText
  1698                           ;!       _writeTxtChk
  1699                           ;!         _SetToSendDataToLCD
  1700                           ;!         _setCursorPosition
  1701                           ;!           _SetToSendDataToLCD
  1702                           ;!           _setData
  1703                           ;!           _waitLCDBusy
  1704                           ;!             _SetToReadDataFromLCD
  1705                           ;!         _setData
  1706                           ;!         _waitLCDBusy
  1707                           ;!           _SetToReadDataFromLCD
  1708                           ;!     _memset
  1709                           ;!     _strlen
  1710                           ;!   _SetToGetTemp
  1711                           ;!   _WakeTemp
  1712                           ;!   _clearDisplay
  1713                           ;!     _writeInsChk
  1714                           ;!       _waitLCDBusy
  1715                           ;!         _SetToReadDataFromLCD
  1716                           ;!       _writeInsNoChk
  1717                           ;!         _SetToSendDataToLCD
  1718                           ;!         _setData
  1719                           ;!   _initLCD
  1720                           ;!     _clearDisplay
  1721                           ;!       _writeInsChk
  1722                           ;!         _waitLCDBusy
  1723                           ;!           _SetToReadDataFromLCD
  1724                           ;!         _writeInsNoChk
  1725                           ;!           _SetToSendDataToLCD
  1726                           ;!           _setData
  1727                           ;!     _setData
  1728                           ;!     _writeInsChk
  1729                           ;!       _waitLCDBusy
  1730                           ;!         _SetToReadDataFromLCD
  1731                           ;!       _writeInsNoChk
  1732                           ;!         _SetToSendDataToLCD
  1733                           ;!         _setData
  1734                           ;!   _lcdWriteText
  1735                           ;!     _writeTxtChk
  1736                           ;!       _SetToSendDataToLCD
  1737                           ;!       _setCursorPosition
  1738                           ;!         _SetToSendDataToLCD
  1739                           ;!         _setData
  1740                           ;!         _waitLCDBusy
  1741                           ;!           _SetToReadDataFromLCD
  1742                           ;!       _setData
  1743                           ;!       _waitLCDBusy
  1744                           ;!         _SetToReadDataFromLCD
  1745                           ;!   _memset
  1746                           ;!   _moveCursorToHome
  1747                           ;!     _writeInsChk
  1748                           ;!       _waitLCDBusy
  1749                           ;!         _SetToReadDataFromLCD
  1750                           ;!       _writeInsNoChk
  1751                           ;!         _SetToSendDataToLCD
  1752                           ;!         _setData
  1753                           ;!   _powerOnLcd
  1754                           ;!     _writeInsChk
  1755                           ;!       _waitLCDBusy
  1756                           ;!         _SetToReadDataFromLCD
  1757                           ;!       _writeInsNoChk
  1758                           ;!         _SetToSendDataToLCD
  1759                           ;!         _setData
  1760                           ;!   _printEM1812
  1761                           ;!     ___lwdiv
  1762                           ;!     ___lwmod
  1763                           ;!   _setCursorOff
  1764                           ;!     _writeInsChk
  1765                           ;!       _waitLCDBusy
  1766                           ;!         _SetToReadDataFromLCD
  1767                           ;!       _writeInsNoChk
  1768                           ;!         _SetToSendDataToLCD
  1769                           ;!         _setData
  1770                           ;!   _setCursorPosition
  1771                           ;!     _SetToSendDataToLCD
  1772                           ;!     _setData
  1773                           ;!     _waitLCDBusy
  1774                           ;!       _SetToReadDataFromLCD
  1775                           ;!   _setNotBlinkingCursor
  1776                           ;!     _writeInsChk
  1777                           ;!       _waitLCDBusy
  1778                           ;!         _SetToReadDataFromLCD
  1779                           ;!       _writeInsNoChk
  1780                           ;!         _SetToSendDataToLCD
  1781                           ;!         _setData
  1782                           ;!
  1783                           ;! _myint (ROOT)
  1784                           ;!   _ToggleBitRB5
  1785                           ;!   i1_Add_Trace
  1786                           ;!     i1_strcat
  1787                           ;!       i1_strcpy
  1788                           ;!         i1_strlen (ARG)
  1789                           ;!       i1_strlen
  1790                           ;!     i1_strlen
  1791                           ;!
  1792                           
  1793                           ;! Address spaces:
  1794                           
  1795                           ;!Name               Size   Autos  Total    Cost      Usage
  1796                           ;!BIGRAM             3F0      0       0       0        0.0%
  1797                           ;!NULL                 0      0       0       0        0.0%
  1798                           ;!CODE                 0      0       0       0        0.0%
  1799                           ;!BITCOMMON            E      0       0       1        0.0%
  1800                           ;!BITSFR0              0      0       0       1        0.0%
  1801                           ;!SFR0                 0      0       0       1        0.0%
  1802                           ;!COMMON               E      E       E       2      100.0%
  1803                           ;!BITSFR1              0      0       0       2        0.0%
  1804                           ;!SFR1                 0      0       0       2        0.0%
  1805                           ;!BITSFR2              0      0       0       3        0.0%
  1806                           ;!SFR2                 0      0       0       3        0.0%
  1807                           ;!STACK                0      0       0       3        0.0%
  1808                           ;!BITBANK0            50      0       0       4        0.0%
  1809                           ;!BITSFR3              0      0       0       4        0.0%
  1810                           ;!SFR3                 0      0       0       4        0.0%
  1811                           ;!BANK0               50     32      3D       5       76.3%
  1812                           ;!BITSFR4              0      0       0       5        0.0%
  1813                           ;!SFR4                 0      0       0       5        0.0%
  1814                           ;!BITBANK1            50      0       0       6        0.0%
  1815                           ;!BITSFR5              0      0       0       6        0.0%
  1816                           ;!SFR5                 0      0       0       6        0.0%
  1817                           ;!BANK1               50     31      4C       7       95.0%
  1818                           ;!BITSFR6              0      0       0       7        0.0%
  1819                           ;!SFR6                 0      0       0       7        0.0%
  1820                           ;!BITBANK2            50      0       0       8        0.0%
  1821                           ;!BITSFR7              0      0       0       8        0.0%
  1822                           ;!SFR7                 0      0       0       8        0.0%
  1823                           ;!BANK2               50      0      32       9       62.5%
  1824                           ;!BITSFR8              0      0       0       9        0.0%
  1825                           ;!SFR8                 0      0       0       9        0.0%
  1826                           ;!BITBANK3            50      0       0      10        0.0%
  1827                           ;!BITSFR9              0      0       0      10        0.0%
  1828                           ;!SFR9                 0      0       0      10        0.0%
  1829                           ;!BANK3               50      0      4B      11       93.8%
  1830                           ;!BITSFR10             0      0       0      11        0.0%
  1831                           ;!SFR10                0      0       0      11        0.0%
  1832                           ;!BITBANK4            50      0       0      12        0.0%
  1833                           ;!BITSFR11             0      0       0      12        0.0%
  1834                           ;!SFR11                0      0       0      12        0.0%
  1835                           ;!BANK4               50      0       0      13        0.0%
  1836                           ;!BITSFR12             0      0       0      13        0.0%
  1837                           ;!SFR12                0      0       0      13        0.0%
  1838                           ;!BITBANK5            50      0       0      14        0.0%
  1839                           ;!BITSFR13             0      0       0      14        0.0%
  1840                           ;!SFR13                0      0       0      14        0.0%
  1841                           ;!BANK5               50      0       0      15        0.0%
  1842                           ;!BITSFR14             0      0       0      15        0.0%
  1843                           ;!SFR14                0      0       0      15        0.0%
  1844                           ;!BITBANK6            50      0       0      16        0.0%
  1845                           ;!BITSFR15             0      0       0      16        0.0%
  1846                           ;!SFR15                0      0       0      16        0.0%
  1847                           ;!BANK6               50      0       0      17        0.0%
  1848                           ;!BITSFR16             0      0       0      17        0.0%
  1849                           ;!SFR16                0      0       0      17        0.0%
  1850                           ;!BITBANK7            50      0       0      18        0.0%
  1851                           ;!BITSFR17             0      0       0      18        0.0%
  1852                           ;!SFR17                0      0       0      18        0.0%
  1853                           ;!BANK7               50      0       0      19        0.0%
  1854                           ;!BITSFR18             0      0       0      19        0.0%
  1855                           ;!SFR18                0      0       0      19        0.0%
  1856                           ;!BITSFR19             0      0       0      20        0.0%
  1857                           ;!SFR19                0      0       0      20        0.0%
  1858                           ;!ABS                  0      0     114      20        0.0%
  1859                           ;!BITBANK8            50      0       0      21        0.0%
  1860                           ;!BITSFR20             0      0       0      21        0.0%
  1861                           ;!SFR20                0      0       0      21        0.0%
  1862                           ;!BANK8               50      0       0      22        0.0%
  1863                           ;!BITSFR21             0      0       0      22        0.0%
  1864                           ;!SFR21                0      0       0      22        0.0%
  1865                           ;!BITBANK9            50      0       0      23        0.0%
  1866                           ;!BITSFR22             0      0       0      23        0.0%
  1867                           ;!SFR22                0      0       0      23        0.0%
  1868                           ;!BANK9               50      0       0      24        0.0%
  1869                           ;!BITSFR23             0      0       0      24        0.0%
  1870                           ;!SFR23                0      0       0      24        0.0%
  1871                           ;!BITBANK10           50      0       0      25        0.0%
  1872                           ;!BITSFR24             0      0       0      25        0.0%
  1873                           ;!SFR24                0      0       0      25        0.0%
  1874                           ;!BANK10              50      0       0      26        0.0%
  1875                           ;!BITSFR25             0      0       0      26        0.0%
  1876                           ;!SFR25                0      0       0      26        0.0%
  1877                           ;!BITBANK11           50      0       0      27        0.0%
  1878                           ;!BITSFR26             0      0       0      27        0.0%
  1879                           ;!SFR26                0      0       0      27        0.0%
  1880                           ;!BANK11              50      0       0      28        0.0%
  1881                           ;!BITSFR27             0      0       0      28        0.0%
  1882                           ;!SFR27                0      0       0      28        0.0%
  1883                           ;!BITBANK12           30      0       0      29        0.0%
  1884                           ;!BITSFR28             0      0       0      29        0.0%
  1885                           ;!SFR28                0      0       0      29        0.0%
  1886                           ;!BANK12              30      0       0      30        0.0%
  1887                           ;!BITSFR29             0      0       0      30        0.0%
  1888                           ;!SFR29                0      0       0      30        0.0%
  1889                           ;!BITSFR30             0      0       0      31        0.0%
  1890                           ;!SFR30                0      0       0      31        0.0%
  1891                           ;!DATA                 0      0     114      31        0.0%
  1892                           ;!BITSFR31             0      0       0      32        0.0%
  1893                           ;!SFR31                0      0       0      32        0.0%
  1894                           
  1895                           	global	_main
  1896                           
  1897 ;; *************** function _main *****************
  1898 ;; Defined at:
  1899 ;;		line 172 in file "161518_temp_main.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  wReadout       20    0[BANK1 ] unsigned char [20]
  1904 ;;  wConv           4   20[BANK1 ] unsigned char [4]
  1905 ;;  wCounter        2   46[BANK1 ] int 
  1906 ;;  wTemperature    2   42[BANK1 ] short 
  1907 ;;  wHumidity       2   40[BANK1 ] short 
  1908 ;;  wDebounceDow    2   38[BANK1 ] unsigned short 
  1909 ;;  wDebounceUp     2   36[BANK1 ] unsigned short 
  1910 ;;  wDebounceEnt    2   34[BANK1 ] unsigned short 
  1911 ;;  wTemperature    2   30[BANK1 ] short 
  1912 ;;  wHumidityPre    2   28[BANK1 ] short 
  1913 ;;  wIterationCo    2   26[BANK1 ] unsigned short 
  1914 ;;  wTemp           2   24[BANK1 ] int 
  1915 ;;  wMenu           1   48[BANK1 ] unsigned char 
  1916 ;;  wDownBottonP    1   45[BANK1 ] unsigned char 
  1917 ;;  wUpBottonPre    1   44[BANK1 ] unsigned char 
  1918 ;;  wEnterBotton    1   33[BANK1 ] unsigned char 
  1919 ;;  wMenuPrev       1   32[BANK1 ] unsigned char 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : B1F/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  1929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1930 ;;      Locals:         0       0      49       0       0       0       0       0       0       0       0       0       
       0       0
  1931 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  1932 ;;      Totals:         0       5      49       0       0       0       0       0       0       0       0       0       
       0       0
  1933 ;;Total ram usage:       54 bytes
  1934 ;; Hardware stack levels required when called:   10
  1935 ;; This function calls:
  1936 ;;		_Add_Trace
  1937 ;;		_Debounce
  1938 ;;		_GetTemp
  1939 ;;		_PrintLog
  1940 ;;		_SetToGetTemp
  1941 ;;		_WakeTemp
  1942 ;;		_clearDisplay
  1943 ;;		_initLCD
  1944 ;;		_lcdWriteText
  1945 ;;		_memset
  1946 ;;		_moveCursorToHome
  1947 ;;		_powerOnLcd
  1948 ;;		_printEM1812
  1949 ;;		_setCursorOff
  1950 ;;		_setCursorPosition
  1951 ;;		_setNotBlinkingCursor
  1952 ;; This function is called by:
  1953 ;;		Startup code after reset
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  1957                           	file	"161518_temp_main.c"
  1958                           	line	172
  1959                           global __pmaintext
  1960                           __pmaintext:	;psect for function _main
  1961  013D                     psect	maintext
  1962                           	file	"161518_temp_main.c"
  1963                           	line	172
  1964                           	global	__size_of_main
  1965                           	__size_of_main	equ	__end_of_main-_main
  1966  0299                     	
  1967                           _main:	
  1968  013D                     ;incstack = 0
  1969                           	opt	stack 6
  1970                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1971                           	line	175
  1972                           	
  1973                           l2549:	
  1974  013D                     	movlb 1	; select bank1
  1975  013D  0021               	clrf	(main@wHumidity)^080h
  1976  013E  01C8               	clrf	(main@wHumidity+1)^080h
  1977  013F  01C9               	clrf	(main@wHumidityPrev)^080h
  1978  0140  01BC               	clrf	(main@wHumidityPrev+1)^080h
  1979  0141  01BD               	line	176
  1980                           	clrf	(main@wTemperature)^080h
  1981  0142  01CA               	clrf	(main@wTemperature+1)^080h
  1982  0143  01CB               	clrf	(main@wTemperaturePrev)^080h
  1983  0144  01BE               	clrf	(main@wTemperaturePrev+1)^080h
  1984  0145  01BF               	line	177
  1985                           	
  1986                           l2551:	
  1987  0146                     	movlw	low(_wInterruptText)
  1988  0146  30A0               	movlb 0	; select bank0
  1989  0147  0020               	movwf	(memset@dest)
  1990  0148  00B0               	movlw	high(_wInterruptText)
  1991  0149  3001               	movwf	(memset@dest+1)
  1992  014A  00B1               	movlw	0
  1993  014B  3000               	movwf	(memset@c)
  1994  014C  00B2               	movwf	(memset@c+1)
  1995  014D  00B3               	movlw	04Bh
  1996  014E  304B               	movwf	(memset@n)
  1997  014F  00B4               	movlw	0
  1998  0150  3000               	movwf	((memset@n))+1
  1999  0151  00B5               	fcall	_memset
  2000  0152  3183  23D6  3181   	line	179
  2001                           	
  2002                           l2553:	
  2003  0155                     	movlw	(0Fh & ((1<<4)-1))<<3
  2004  0155  3078               	movlb 1	; select bank1
  2005  0156  0021               	iorwf	(153)^080h,f	;volatile
  2006  0157  0499               	line	180
  2007                           	
  2008                           l2555:	
  2009  0158                     	movlw	(03h & ((1<<2)-1))<<0
  2010  0158  3003               	iorwf	(153)^080h,f	;volatile
  2011  0159  0499               	line	181
  2012                           	
  2013                           l2557:	
  2014  015A                     	bcf	(11),7	;volatile
  2015  015A  138B               	line	183
  2016                           	
  2017                           l2559:	
  2018  015B                     	clrf	(main@wUpBottonPressed)^080h
  2019  015B  01CC               	line	184
  2020                           	
  2021                           l2561:	
  2022  015C                     	clrf	(main@wDownBottonPressed)^080h
  2023  015C  01CD               	line	185
  2024                           	
  2025                           l2563:	
  2026  015D                     	clrf	(main@wEnterBottonPressed)^080h
  2027  015D  01C1               	line	187
  2028                           	
  2029                           l2565:	
  2030  015E                     	clrf	(main@wMenu)^080h
  2031  015E  01D0               	line	188
  2032                           	
  2033                           l2567:	
  2034  015F                     	clrf	(main@wMenuPrev)^080h
  2035  015F  01C0               	incf	(main@wMenuPrev)^080h,f
  2036  0160  0AC0               	line	190
  2037                           	
  2038                           l2569:	
  2039  0161                     	clrf	(main@wIterationCounter)^080h
  2040  0161  01BA               	clrf	(main@wIterationCounter+1)^080h
  2041  0162  01BB               	line	191
  2042                           	
  2043                           l2571:	
  2044  0163                     	clrf	(main@wDebounceEnter)^080h
  2045  0163  01C2               	clrf	(main@wDebounceEnter+1)^080h
  2046  0164  01C3               	line	192
  2047                           	
  2048                           l2573:	
  2049  0165                     	clrf	(main@wDebounceUp)^080h
  2050  0165  01C4               	clrf	(main@wDebounceUp+1)^080h
  2051  0166  01C5               	line	193
  2052                           	
  2053                           l2575:	
  2054  0167                     	clrf	(main@wDebounceDown)^080h
  2055  0167  01C6               	clrf	(main@wDebounceDown+1)^080h
  2056  0168  01C7               	line	195
  2057                           	
  2058                           l2577:	
  2059  0169                     	movlb 0	; select bank0
  2060  0169  0020               	clrf	(12)	;volatile
  2061  016A  018C               	line	199
  2062                           	
  2063                           l2579:	
  2064  016B                     	movlw	((0 & ((1<<2)-1))<<6)|not (((1<<2)-1)<<6)
  2065  016B  303F               	andwf	(24),f	;volatile
  2066  016C  0598               	line	200
  2067                           	
  2068                           l2581:	
  2069  016D                     	bcf	(24),3	;volatile
  2070  016D  1198               	line	201
  2071                           	
  2072                           l2583:	
  2073  016E                     	movlw	(03h & ((1<<2)-1))<<4
  2074  016E  3030               	iorwf	(24),f	;volatile
  2075  016F  0498               	line	202
  2076                           	
  2077                           l2585:	
  2078  0170                     	bcf	(24),2	;volatile
  2079  0170  1118               	line	203
  2080                           	
  2081                           l2587:	
  2082  0171                     	bsf	(24),0	;volatile
  2083  0171  1418               	line	204
  2084                           	
  2085                           l2589:	
  2086  0172                     	movlb 1	; select bank1
  2087  0172  0021               	bsf	(145)^080h,0	;volatile
  2088  0173  1411               	line	212
  2089                           	
  2090                           l2591:	
  2091  0174                     	movlb 0	; select bank0
  2092  0174  0020               	clrf	(13)	;volatile
  2093  0175  018D               	line	213
  2094                           	
  2095                           l2593:	
  2096  0176                     	movlb 3	; select bank3
  2097  0176  0023               	clrf	(397)^0180h	;volatile
  2098  0177  018D               	line	214
  2099                           	
  2100                           l2595:	
  2101  0178                     	movlw	low(0Fh)
  2102  0178  300F               	movlb 1	; select bank1
  2103  0179  0021               	movwf	(141)^080h	;volatile
  2104  017A  008D               	line	215
  2105                           	
  2106                           l2597:	
  2107  017B                     	movlw	low(0Fh)
  2108  017B  300F               	movlb 4	; select bank4
  2109  017C  0024               	movwf	(525)^0200h	;volatile
  2110  017D  008D               	line	216
  2111                           	
  2112                           l2599:	
  2113  017E                     	movlb 1	; select bank1
  2114  017E  0021               	bcf	(149)^080h,7	;volatile
  2115  017F  1395               	line	219
  2116                           	movlw	low(_wI2CTxBuffer)
  2117  0180  30D4               	movlb 0	; select bank0
  2118  0181  0020               	movwf	(memset@dest)
  2119  0182  00B0               	movlw	high(_wI2CTxBuffer)
  2120  0183  3000               	movwf	(memset@dest+1)
  2121  0184  00B1               	movlw	0
  2122  0185  3000               	movwf	(memset@c)
  2123  0186  00B2               	movwf	(memset@c+1)
  2124  0187  00B3               	movlw	014h
  2125  0188  3014               	movwf	(memset@n)
  2126  0189  00B4               	movlw	0
  2127  018A  3000               	movwf	((memset@n))+1
  2128  018B  00B5               	fcall	_memset
  2129  018C  3183  23D6  3181   	line	220
  2130                           	
  2131                           l2601:	
  2132  018F                     	movlb 0	; select bank0
  2133  018F  0020               	clrf	(_wI2CTxBufferSize)
  2134  0190  01D8               	line	221
  2135                           	
  2136                           l2603:	
  2137  0191                     	clrf	(_wI2CTxSendPos)
  2138  0191  01D6               	line	223
  2139                           	
  2140                           l2605:	
  2141  0192                     	movlb 3	; select bank3
  2142  0192  0023               	clrf	(396)^0180h	;volatile
  2143  0193  018C               	line	224
  2144                           	
  2145                           l2607:	
  2146  0194                     	movlb 1	; select bank1
  2147  0194  0021               	clrf	(140)^080h	;volatile
  2148  0195  018C               	line	226
  2149                           	
  2150                           l2609:	
  2151  0196                     	clrf	(142)^080h	;volatile
  2152  0196  018E               	line	227
  2153                           	
  2154                           l2611:	
  2155  0197                     	movlw	low(0FFh)
  2156  0197  30FF               	movwf	(142)^080h	;volatile
  2157  0198  008E               	line	228
  2158                           	
  2159                           l2613:	
  2160  0199                     	movlb 3	; select bank3
  2161  0199  0023               	bcf	(398)^0180h,3	;volatile
  2162  019A  118E               	line	229
  2163                           	
  2164                           l2615:	
  2165  019B                     	bcf	(398)^0180h,4	;volatile
  2166  019B  120E               	line	234
  2167                           	
  2168                           l2617:	
  2169  019C                     	movlb 4	; select bank4
  2170  019C  0024               	movf	(533)^0200h,w	;volatile
  2171  019D  0815               	andlw	not (((1<<4)-1)<<0)
  2172  019E  39F0               	iorlw	(08h & ((1<<4)-1))<<0
  2173  019F  3808               	movwf	(533)^0200h	;volatile
  2174  01A0  0095               	line	235
  2175                           	
  2176                           l2619:	
  2177  01A1                     	movlw	low(01Fh)
  2178  01A1  301F               	movwf	(530)^0200h	;volatile
  2179  01A2  0092               	line	236
  2180                           	
  2181                           l2621:	
  2182  01A3                     	bsf	(533)^0200h,5	;volatile
  2183  01A3  1695               	line	237
  2184                           	
  2185                           l2623:	
  2186  01A4                     	bcf	(534)^0200h,7	;volatile
  2187  01A4  1396               	line	238
  2188                           	
  2189                           l2625:	
  2190  01A5                     	bsf	(534)^0200h,4	;volatile
  2191  01A5  1616               	line	239
  2192                           	
  2193                           l2627:	
  2194  01A6                     	bsf	(535)^0200h,6	;volatile
  2195  01A6  1717               	line	240
  2196                           	
  2197                           l2629:	
  2198  01A7                     	bsf	(535)^0200h,5	;volatile
  2199  01A7  1697               	line	241
  2200                           	
  2201                           l2631:	
  2202  01A8                     	bsf	(535)^0200h,3	;volatile
  2203  01A8  1597               	line	242
  2204                           	
  2205                           l2633:	
  2206  01A9                     	bcf	(535)^0200h,1	;volatile
  2207  01A9  1097               	line	243
  2208                           	
  2209                           l2635:	
  2210  01AA                     	bcf	(535)^0200h,0	;volatile
  2211  01AA  1017               	line	244
  2212                           	
  2213                           l2637:	
  2214  01AB                     	bcf	(532)^0200h,6	;volatile
  2215  01AB  1314               	line	246
  2216                           	
  2217                           l2639:	
  2218  01AC                     	bsf	(11),6	;volatile
  2219  01AC  170B               	line	247
  2220                           	
  2221                           l2641:	
  2222  01AD                     	movlb 1	; select bank1
  2223  01AD  0021               	bsf	(145)^080h,3	;volatile
  2224  01AE  1591               	line	248
  2225                           	
  2226                           l2643:	
  2227  01AF                     	bsf	(146)^080h,3	;volatile
  2228  01AF  1592               	line	250
  2229                           	
  2230                           l2645:	
  2231  01B0                     	bsf	(11),7	;volatile
  2232  01B0  178B               	line	253
  2233                           	
  2234                           l2647:	
  2235  01B1                     	fcall	_initLCD
  2236  01B1  3186  260A  3181   	line	254
  2237                           	
  2238                           l2649:	
  2239  01B4                     	fcall	_clearDisplay
  2240  01B4  318E  2617  3181   	line	255
  2241                           	
  2242                           l2651:	
  2243  01B7                     	opt asmopt_push
  2244                           opt asmopt_off
  2245                           movlw  3
  2246  01B7  3003               	movlb 0	; select bank0
  2247  01B8  0020               movwf	((??_main+0)+0+1),f
  2248  01B9  00CE               movlw	8
  2249  01BA  3008               movwf	((??_main+0)+0),f
  2250  01BB  00CD               	movlw	119
  2251  01BC  3077               u1727:
  2252  01BD                     decfsz	wreg
  2253  01BD  0B89               	goto	u1727
  2254  01BE  29BD               	decfsz	((??_main+0)+0),f
  2255  01BF  0BCD               	goto	u1727
  2256  01C0  29BD               	decfsz	((??_main+0)+0+1),f
  2257  01C1  0BCE               	goto	u1727
  2258  01C2  29BD               opt asmopt_pop
  2259                           
  2260                           	line	256
  2261                           	
  2262                           l2653:	
  2263  01C3                     	fcall	_powerOnLcd
  2264  01C3  318E  264B  3181   	line	257
  2265                           	
  2266                           l2655:	
  2267  01C6                     	opt asmopt_push
  2268                           opt asmopt_off
  2269                           movlw  3
  2270  01C6  3003               	movlb 0	; select bank0
  2271  01C7  0020               movwf	((??_main+0)+0+1),f
  2272  01C8  00CE               movlw	8
  2273  01C9  3008               movwf	((??_main+0)+0),f
  2274  01CA  00CD               	movlw	119
  2275  01CB  3077               u1737:
  2276  01CC                     decfsz	wreg
  2277  01CC  0B89               	goto	u1737
  2278  01CD  29CC               	decfsz	((??_main+0)+0),f
  2279  01CE  0BCD               	goto	u1737
  2280  01CF  29CC               	decfsz	((??_main+0)+0+1),f
  2281  01D0  0BCE               	goto	u1737
  2282  01D1  29CC               opt asmopt_pop
  2283                           
  2284                           	line	258
  2285                           	
  2286                           l2657:	
  2287  01D2                     	fcall	_setCursorOff
  2288  01D2  318E  2656  3181   	line	259
  2289                           	
  2290                           l2659:	
  2291  01D5                     	opt asmopt_push
  2292                           opt asmopt_off
  2293                           movlw  3
  2294  01D5  3003               	movlb 0	; select bank0
  2295  01D6  0020               movwf	((??_main+0)+0+1),f
  2296  01D7  00CE               movlw	8
  2297  01D8  3008               movwf	((??_main+0)+0),f
  2298  01D9  00CD               	movlw	119
  2299  01DA  3077               u1747:
  2300  01DB                     decfsz	wreg
  2301  01DB  0B89               	goto	u1747
  2302  01DC  29DB               	decfsz	((??_main+0)+0),f
  2303  01DD  0BCD               	goto	u1747
  2304  01DE  29DB               	decfsz	((??_main+0)+0+1),f
  2305  01DF  0BCE               	goto	u1747
  2306  01E0  29DB               opt asmopt_pop
  2307                           
  2308                           	line	260
  2309                           	
  2310                           l2661:	
  2311  01E1                     	fcall	_moveCursorToHome
  2312  01E1  318E  262E  3181   	line	261
  2313                           	
  2314                           l2663:	
  2315  01E4                     	opt asmopt_push
  2316                           opt asmopt_off
  2317                           movlw  3
  2318  01E4  3003               	movlb 0	; select bank0
  2319  01E5  0020               movwf	((??_main+0)+0+1),f
  2320  01E6  00CE               movlw	8
  2321  01E7  3008               movwf	((??_main+0)+0),f
  2322  01E8  00CD               	movlw	119
  2323  01E9  3077               u1757:
  2324  01EA                     decfsz	wreg
  2325  01EA  0B89               	goto	u1757
  2326  01EB  29EA               	decfsz	((??_main+0)+0),f
  2327  01EC  0BCD               	goto	u1757
  2328  01ED  29EA               	decfsz	((??_main+0)+0+1),f
  2329  01EE  0BCE               	goto	u1757
  2330  01EF  29EA               opt asmopt_pop
  2331                           
  2332                           	line	262
  2333                           	
  2334                           l2665:	
  2335  01F0                     	fcall	_setNotBlinkingCursor
  2336  01F0  318E  2661  3181   	line	263
  2337                           	
  2338                           l2667:	
  2339  01F3                     	opt asmopt_push
  2340                           opt asmopt_off
  2341                           movlw  3
  2342  01F3  3003               	movlb 0	; select bank0
  2343  01F4  0020               movwf	((??_main+0)+0+1),f
  2344  01F5  00CE               movlw	8
  2345  01F6  3008               movwf	((??_main+0)+0),f
  2346  01F7  00CD               	movlw	119
  2347  01F8  3077               u1767:
  2348  01F9                     decfsz	wreg
  2349  01F9  0B89               	goto	u1767
  2350  01FA  29F9               	decfsz	((??_main+0)+0),f
  2351  01FB  0BCD               	goto	u1767
  2352  01FC  29F9               	decfsz	((??_main+0)+0+1),f
  2353  01FD  0BCE               	goto	u1767
  2354  01FE  29F9               opt asmopt_pop
  2355                           
  2356                           	line	289
  2357                           	
  2358                           l2669:	
  2359  01FF                     	movlb 1	; select bank1
  2360  01FF  0021               	clrf	(main@wCounter)^080h
  2361  0200  01CE               	clrf	(main@wCounter+1)^080h
  2362  0201  01CF               	line	290
  2363                           	
  2364                           l2671:	
  2365  0202                     	movf	(main@F2241+3)^080h,w
  2366  0202  086B               	movwf	(main@wConv+3)^080h
  2367  0203  00B7               	movf	(main@F2241+2)^080h,w
  2368  0204  086A               	movwf	(main@wConv+2)^080h
  2369  0205  00B6               	movf	(main@F2241+1)^080h,w
  2370  0206  0869               	movwf	(main@wConv+1)^080h
  2371  0207  00B5               	movf	(main@F2241)^080h,w
  2372  0208  0868               	movwf	(main@wConv)^080h
  2373  0209  00B4               
  2374                           	line	291
  2375                           	
  2376                           l2673:	
  2377  020A                     	clrf	(main@wTemp)^080h
  2378  020A  01B8               	clrf	(main@wTemp+1)^080h
  2379  020B  01B9               	line	293
  2380                           	
  2381                           l2675:	
  2382  020C                     	fcall	_clearDisplay
  2383  020C  318E  2617  3181   	line	294
  2384                           	
  2385                           l2677:	
  2386  020F                     	fcall	_moveCursorToHome
  2387  020F  318E  262E  3181   	line	295
  2388                           	
  2389                           l2679:	
  2390  0212                     	opt asmopt_push
  2391                           opt asmopt_off
  2392                           movlw	156
  2393  0212  309C               	movlb 0	; select bank0
  2394  0213  0020               movwf	((??_main+0)+0),f
  2395  0214  00CD               	movlw	215
  2396  0215  30D7               u1777:
  2397  0216                     decfsz	wreg
  2398  0216  0B89               	goto	u1777
  2399  0217  2A16               	decfsz	((??_main+0)+0),f
  2400  0218  0BCD               	goto	u1777
  2401  0219  2A16               opt asmopt_pop
  2402                           
  2403                           	goto	l2681
  2404  021A  2A1B               	line	296
  2405                           	
  2406                           l150:	
  2407  021B                     	line	299
  2408                           	
  2409                           l2681:	
  2410  021B                     	movlb 1	; select bank1
  2411  021B  0021               	movf	(_wReceptionCounter)^080h,w
  2412  021C  0853               	xorwf	(_wReceptionCounterPrev)^080h,w
  2413  021D  0652               	skipnz
  2414  021E  1903               	goto	u1621
  2415  021F  2A21               	goto	u1620
  2416  0220  2A22               u1621:
  2417  0221                     	goto	l2689
  2418  0221  2A5D               u1620:
  2419  0222                     	line	301
  2420                           	
  2421                           l2683:	
  2422  0222                     	movf	(_wReceptionCounter)^080h,w
  2423  0222  0853               	movlb 0	; select bank0
  2424  0223  0020               	movwf	(??_main+0)+0
  2425  0224  00CD               	movf	(??_main+0)+0,w
  2426  0225  084D               	movlb 1	; select bank1
  2427  0226  0021               	movwf	(_wReceptionCounterPrev)^080h
  2428  0227  00D2               	line	302
  2429                           	movf	(main@wHumidity+1)^080h,w
  2430  0228  0849               	movwf	(main@wHumidityPrev+1)^080h
  2431  0229  00BD               	movf	(main@wHumidity)^080h,w
  2432  022A  0848               	movwf	(main@wHumidityPrev)^080h
  2433  022B  00BC               	line	303
  2434                           	
  2435                           l2685:	
  2436  022C                     	movlb 2	; select bank2
  2437  022C  0022               	movf	0+(_wReceptionBuffer)^0100h+03h,w
  2438  022D  0837               	movlb 0	; select bank0
  2439  022E  0020               	movwf	(??_main+0)+0
  2440  022F  00CD               	clrf	(??_main+0)+0+1
  2441  0230  01CE               	movlb 2	; select bank2
  2442  0231  0022               	movf	0+(_wReceptionBuffer)^0100h+02h,w
  2443  0232  0836               	movlb 0	; select bank0
  2444  0233  0020               	movwf	(??_main+2)+0
  2445  0234  00CF               	clrf	(??_main+2)+0+1
  2446  0235  01D0               	movf	(??_main+2)+0,w
  2447  0236  084F               	movwf	(??_main+2)+1
  2448  0237  00D0               	clrf	(??_main+2)+0
  2449  0238  01CF               	movf	0+(??_main+0)+0,w
  2450  0239  084D               	addwf	0+(??_main+2)+0,w
  2451  023A  074F               	movlb 1	; select bank1
  2452  023B  0021               	movwf	(main@wHumidity)^080h
  2453  023C  00C8               	movlb 0	; select bank0
  2454  023D  0020               	movf	1+(??_main+0)+0,w
  2455  023E  084E               	addwfc	1+(??_main+2)+0,w
  2456  023F  3D50               	movlb 1	; select bank1
  2457  0240  0021               	movwf	1+(main@wHumidity)^080h
  2458  0241  00C9               	line	304
  2459                           	
  2460                           l2687:	
  2461  0242                     	movf	(main@wTemperature+1)^080h,w
  2462  0242  084B               	movwf	(main@wTemperaturePrev+1)^080h
  2463  0243  00BF               	movf	(main@wTemperature)^080h,w
  2464  0244  084A               	movwf	(main@wTemperaturePrev)^080h
  2465  0245  00BE               	line	305
  2466                           	movlb 2	; select bank2
  2467  0246  0022               	movf	0+(_wReceptionBuffer)^0100h+05h,w
  2468  0247  0839               	movlb 0	; select bank0
  2469  0248  0020               	movwf	(??_main+0)+0
  2470  0249  00CD               	clrf	(??_main+0)+0+1
  2471  024A  01CE               	movlb 2	; select bank2
  2472  024B  0022               	movf	0+(_wReceptionBuffer)^0100h+04h,w
  2473  024C  0838               	movlb 0	; select bank0
  2474  024D  0020               	movwf	(??_main+2)+0
  2475  024E  00CF               	clrf	(??_main+2)+0+1
  2476  024F  01D0               	movf	(??_main+2)+0,w
  2477  0250  084F               	movwf	(??_main+2)+1
  2478  0251  00D0               	clrf	(??_main+2)+0
  2479  0252  01CF               	movf	0+(??_main+0)+0,w
  2480  0253  084D               	addwf	0+(??_main+2)+0,w
  2481  0254  074F               	movlb 1	; select bank1
  2482  0255  0021               	movwf	(main@wTemperature)^080h
  2483  0256  00CA               	movlb 0	; select bank0
  2484  0257  0020               	movf	1+(??_main+0)+0,w
  2485  0258  084E               	addwfc	1+(??_main+2)+0,w
  2486  0259  3D50               	movlb 1	; select bank1
  2487  025A  0021               	movwf	1+(main@wTemperature)^080h
  2488  025B  00CB               	goto	l2689
  2489  025C  2A5D               	line	306
  2490                           	
  2491                           l151:	
  2492  025D                     	line	309
  2493                           	
  2494                           l2689:	
  2495  025D                     	movf	(main@wHumidity+1)^080h,w
  2496  025D  0849               	xorwf	(main@wHumidityPrev+1)^080h,w
  2497  025E  063D               	skipz
  2498  025F  1D03               	goto	u1635
  2499  0260  2A63               	movf	(main@wHumidity)^080h,w
  2500  0261  0848               	xorwf	(main@wHumidityPrev)^080h,w
  2501  0262  063C               u1635:
  2502  0263                     
  2503                           	skipz
  2504  0263  1D03               	goto	u1631
  2505  0264  2A66               	goto	u1630
  2506  0265  2A67               u1631:
  2507  0266                     	goto	l2693
  2508  0266  2A72               u1630:
  2509  0267                     	
  2510                           l2691:	
  2511  0267                     	movf	(main@wTemperature+1)^080h,w
  2512  0267  084B               	xorwf	(main@wTemperaturePrev+1)^080h,w
  2513  0268  063F               	skipz
  2514  0269  1D03               	goto	u1645
  2515  026A  2A6D               	movf	(main@wTemperature)^080h,w
  2516  026B  084A               	xorwf	(main@wTemperaturePrev)^080h,w
  2517  026C  063E               u1645:
  2518  026D                     
  2519                           	skipnz
  2520  026D  1903               	goto	u1641
  2521  026E  2A70               	goto	u1640
  2522  026F  2A71               u1641:
  2523  0270                     	goto	l2709
  2524  0270  2ACF               u1640:
  2525  0271                     	goto	l2693
  2526  0271  2A72               	
  2527                           l154:	
  2528  0272                     	line	311
  2529                           	
  2530                           l2693:	
  2531  0272                     	movlb 0	; select bank0
  2532  0272  0020               	clrf	(setCursorPosition@iPosition)
  2533  0273  01B5               	movlw	low(02h)
  2534  0274  3002               	fcall	_setCursorPosition
  2535  0275  3185  25AA  3181   	line	312
  2536                           	
  2537                           l2695:	
  2538  0278                     	movlb 1	; select bank1
  2539  0278  0021               	movf	(main@wHumidity+1)^080h,w
  2540  0279  0849               	movlb 0	; select bank0
  2541  027A  0020               	movwf	(printEM1812@wVariable+1)
  2542  027B  00B9               	movlb 1	; select bank1
  2543  027C  0021               	movf	(main@wHumidity)^080h,w
  2544  027D  0848               	movlb 0	; select bank0
  2545  027E  0020               	movwf	(printEM1812@wVariable)
  2546  027F  00B8               	movlw	(low(main@wReadout|((0x0)<<8)))&0ffh
  2547  0280  30A0               	movwf	(??_main+0)+0
  2548  0281  00CD               	movf	(??_main+0)+0,w
  2549  0282  084D               	movwf	(printEM1812@oTextOut)
  2550  0283  00BA               	fcall	_printEM1812
  2551  0284  3185  253E  3181   	line	313
  2552                           	
  2553                           l2697:	
  2554  0287                     	movlw	low(04Bh)
  2555  0287  304B               	movlb 0	; select bank0
  2556  0288  0020               	movwf	(??_main+0)+0
  2557  0289  00CD               	movf	(??_main+0)+0,w
  2558  028A  084D               	movwf	(Add_Trace@iSizeOfoText)
  2559  028B  00C3               	movlw	low(((STR_1)|8000h))
  2560  028C  3040               	movwf	(Add_Trace@iText)
  2561  028D  00C4               	movlw	high(((STR_1)|8000h))
  2562  028E  3090               	movwf	((Add_Trace@iText))+1
  2563  028F  00C5               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2564  0290  30A0               	fcall	_Add_Trace
  2565  0291  3187  275B  3181   	line	314
  2566                           	
  2567                           l2699:	
  2568  0294                     	movlw	low(04Bh)
  2569  0294  304B               	movlb 0	; select bank0
  2570  0295  0020               	movwf	(??_main+0)+0
  2571  0296  00CD               	movf	(??_main+0)+0,w
  2572  0297  084D               	movwf	(Add_Trace@iSizeOfoText)
  2573  0298  00C3               	movlw	low(main@wReadout)
  2574  0299  30A0               	movwf	(Add_Trace@iText)
  2575  029A  00C4               	movlw	high(main@wReadout)
  2576  029B  3000               	movwf	(Add_Trace@iText+1)
  2577  029C  00C5               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2578  029D  30A0               	fcall	_Add_Trace
  2579  029E  3187  275B  3181   	line	315
  2580                           	
  2581                           l2701:	
  2582  02A1                     	movlb 1	; select bank1
  2583  02A1  0021               	movf	(main@wTemperature+1)^080h,w
  2584  02A2  084B               	movlb 0	; select bank0
  2585  02A3  0020               	movwf	(printEM1812@wVariable+1)
  2586  02A4  00B9               	movlb 1	; select bank1
  2587  02A5  0021               	movf	(main@wTemperature)^080h,w
  2588  02A6  084A               	movlb 0	; select bank0
  2589  02A7  0020               	movwf	(printEM1812@wVariable)
  2590  02A8  00B8               	movlw	(low(main@wReadout|((0x0)<<8)))&0ffh
  2591  02A9  30A0               	movwf	(??_main+0)+0
  2592  02AA  00CD               	movf	(??_main+0)+0,w
  2593  02AB  084D               	movwf	(printEM1812@oTextOut)
  2594  02AC  00BA               	fcall	_printEM1812
  2595  02AD  3185  253E  3181   	line	316
  2596                           	
  2597                           l2703:	
  2598  02B0                     	movlw	low(04Bh)
  2599  02B0  304B               	movlb 0	; select bank0
  2600  02B1  0020               	movwf	(??_main+0)+0
  2601  02B2  00CD               	movf	(??_main+0)+0,w
  2602  02B3  084D               	movwf	(Add_Trace@iSizeOfoText)
  2603  02B4  00C3               	movlw	low(((STR_2)|8000h))
  2604  02B5  304C               	movwf	(Add_Trace@iText)
  2605  02B6  00C4               	movlw	high(((STR_2)|8000h))
  2606  02B7  3090               	movwf	((Add_Trace@iText))+1
  2607  02B8  00C5               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2608  02B9  30A0               	fcall	_Add_Trace
  2609  02BA  3187  275B  3181   	line	317
  2610                           	
  2611                           l2705:	
  2612  02BD                     	movlw	low(04Bh)
  2613  02BD  304B               	movlb 0	; select bank0
  2614  02BE  0020               	movwf	(??_main+0)+0
  2615  02BF  00CD               	movf	(??_main+0)+0,w
  2616  02C0  084D               	movwf	(Add_Trace@iSizeOfoText)
  2617  02C1  00C3               	movlw	low(main@wReadout)
  2618  02C2  30A0               	movwf	(Add_Trace@iText)
  2619  02C3  00C4               	movlw	high(main@wReadout)
  2620  02C4  3000               	movwf	(Add_Trace@iText+1)
  2621  02C5  00C5               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2622  02C6  30A0               	fcall	_Add_Trace
  2623  02C7  3187  275B  3181   	line	318
  2624                           	
  2625                           l2707:	
  2626  02CA                     	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2627  02CA  30A0               	fcall	_PrintLog
  2628  02CB  3187  27CF  3181   	goto	l2709
  2629  02CE  2ACF               	line	319
  2630                           	
  2631                           l152:	
  2632  02CF                     	line	321
  2633                           	
  2634                           l2709:	
  2635  02CF                     	movlb 1	; select bank1
  2636  02CF  0021               	movf	(main@wMenu)^080h,w
  2637  02D0  0850               	xorwf	(main@wMenuPrev)^080h,w
  2638  02D1  0640               	skipnz
  2639  02D2  1903               	goto	u1651
  2640  02D3  2AD5               	goto	u1650
  2641  02D4  2AD6               u1651:
  2642  02D5                     	goto	l2725
  2643  02D5  2B30               u1650:
  2644  02D6                     	line	323
  2645                           	
  2646                           l2711:	
  2647  02D6                     	movf	(main@wMenu)^080h,w
  2648  02D6  0850               	movlb 0	; select bank0
  2649  02D7  0020               	movwf	(??_main+0)+0
  2650  02D8  00CD               	movf	(??_main+0)+0,w
  2651  02D9  084D               	movlb 1	; select bank1
  2652  02DA  0021               	movwf	(main@wMenuPrev)^080h
  2653  02DB  00C0               	line	324
  2654                           	goto	l2723
  2655  02DC  2B1A               	line	326
  2656                           	
  2657                           l157:	
  2658  02DD                     	line	327
  2659                           	
  2660                           l2713:	
  2661  02DD                     	movlb 0	; select bank0
  2662  02DD  0020               	clrf	(setCursorPosition@iPosition)
  2663  02DE  01B5               	movlw	low(0)
  2664  02DF  3000               	fcall	_setCursorPosition
  2665  02E0  3185  25AA  3181   	line	328
  2666                           	movlw	low(((STR_3)|8000h))
  2667  02E3  3010               	movlb 0	; select bank0
  2668  02E4  0020               	movwf	(lcdWriteText@iText)
  2669  02E5  00BD               	movlw	high(((STR_3)|8000h))
  2670  02E6  3090               	movwf	((lcdWriteText@iText))+1
  2671  02E7  00BE               	fcall	_lcdWriteText
  2672  02E8  318F  27A9  3181   	line	329
  2673                           	goto	l2725
  2674  02EB  2B30               	line	330
  2675                           	
  2676                           l159:	
  2677  02EC                     	line	331
  2678                           	
  2679                           l2715:	
  2680  02EC                     	movlb 0	; select bank0
  2681  02EC  0020               	clrf	(setCursorPosition@iPosition)
  2682  02ED  01B5               	movlw	low(0)
  2683  02EE  3000               	fcall	_setCursorPosition
  2684  02EF  3185  25AA  3181   	line	332
  2685                           	movlw	low(((STR_4)|8000h))
  2686  02F2  3030               	movlb 0	; select bank0
  2687  02F3  0020               	movwf	(lcdWriteText@iText)
  2688  02F4  00BD               	movlw	high(((STR_4)|8000h))
  2689  02F5  3090               	movwf	((lcdWriteText@iText))+1
  2690  02F6  00BE               	fcall	_lcdWriteText
  2691  02F7  318F  27A9  3181   	line	333
  2692                           	goto	l2725
  2693  02FA  2B30               	line	334
  2694                           	
  2695                           l160:	
  2696  02FB                     	line	335
  2697                           	
  2698                           l2717:	
  2699  02FB                     	movlb 0	; select bank0
  2700  02FB  0020               	clrf	(setCursorPosition@iPosition)
  2701  02FC  01B5               	movlw	low(0)
  2702  02FD  3000               	fcall	_setCursorPosition
  2703  02FE  3185  25AA  3181   	line	336
  2704                           	movlw	low(((STR_5)|8000h))
  2705  0301  3020               	movlb 0	; select bank0
  2706  0302  0020               	movwf	(lcdWriteText@iText)
  2707  0303  00BD               	movlw	high(((STR_5)|8000h))
  2708  0304  3090               	movwf	((lcdWriteText@iText))+1
  2709  0305  00BE               	fcall	_lcdWriteText
  2710  0306  318F  27A9  3181   	line	337
  2711                           	goto	l2725
  2712  0309  2B30               	line	338
  2713                           	
  2714                           l161:	
  2715  030A                     	line	339
  2716                           	
  2717                           l2719:	
  2718  030A                     	movlb 0	; select bank0
  2719  030A  0020               	clrf	(setCursorPosition@iPosition)
  2720  030B  01B5               	movlw	low(0)
  2721  030C  3000               	fcall	_setCursorPosition
  2722  030D  3185  25AA  3181   	line	340
  2723                           	movlw	low(((STR_6)|8000h))
  2724  0310  3000               	movlb 0	; select bank0
  2725  0311  0020               	movwf	(lcdWriteText@iText)
  2726  0312  00BD               	movlw	high(((STR_6)|8000h))
  2727  0313  3090               	movwf	((lcdWriteText@iText))+1
  2728  0314  00BE               	fcall	_lcdWriteText
  2729  0315  318F  27A9  3181   	line	341
  2730                           	goto	l2725
  2731  0318  2B30               	line	342
  2732                           	
  2733                           l2721:	
  2734  0319                     	goto	l2725
  2735  0319  2B30               	
  2736                           l156:	
  2737  031A                     	
  2738                           l2723:	
  2739  031A                     	movlb 1	; select bank1
  2740  031A  0021               	movf	(main@wMenu)^080h,w
  2741  031B  0850               	movlb 0	; select bank0
  2742  031C  0020               	movwf	(??_main+0)+0
  2743  031D  00CD               	clrf	(??_main+0)+0+1
  2744  031E  01CE               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2745                           ; Switch size 1, requested type "space"
  2746                           ; Number of cases is 1, Range of values is 0 to 0
  2747                           ; switch strategies available:
  2748                           ; Name         Instructions Cycles
  2749                           ; simple_byte            4     3 (average)
  2750                           ; direct_byte            8     6 (fixed)
  2751                           ; jumptable            260     6 (fixed)
  2752                           ;	Chosen strategy is simple_byte
  2753                           
  2754                           	movf 1+(??_main+0)+0,w
  2755  031F  084E               	opt asmopt_push
  2756                           	opt asmopt_off
  2757                           	xorlw	0^0	; case 0
  2758  0320  3A00               	skipnz
  2759  0321  1903               	goto	l2853
  2760  0322  2B24               	goto	l2719
  2761  0323  2B0A               	opt asmopt_pop
  2762                           	
  2763                           l2853:	
  2764  0324                     ; Switch size 1, requested type "space"
  2765                           ; Number of cases is 3, Range of values is 0 to 2
  2766                           ; switch strategies available:
  2767                           ; Name         Instructions Cycles
  2768                           ; simple_byte           10     6 (average)
  2769                           ; direct_byte           12     6 (fixed)
  2770                           ; jumptable            260     6 (fixed)
  2771                           ;	Chosen strategy is simple_byte
  2772                           
  2773                           	movf 0+(??_main+0)+0,w
  2774  0324  084D               	opt asmopt_push
  2775                           	opt asmopt_off
  2776                           	xorlw	0^0	; case 0
  2777  0325  3A00               	skipnz
  2778  0326  1903               	goto	l2713
  2779  0327  2ADD               	xorlw	1^0	; case 1
  2780  0328  3A01               	skipnz
  2781  0329  1903               	goto	l2715
  2782  032A  2AEC               	xorlw	2^1	; case 2
  2783  032B  3A03               	skipnz
  2784  032C  1903               	goto	l2717
  2785  032D  2AFB               	goto	l2719
  2786  032E  2B0A               	opt asmopt_pop
  2787                           
  2788                           	
  2789                           l158:	
  2790  032F                     	goto	l2725
  2791  032F  2B30               	line	343
  2792                           	
  2793                           l155:	
  2794  0330                     	line	346
  2795                           	
  2796                           l2725:	
  2797  0330                     	movlb 1	; select bank1
  2798  0330  0021               		decf	((_wTempUpdate)^080h),w
  2799  0331  0351               	btfss	status,2
  2800  0332  1D03               	goto	u1661
  2801  0333  2B35               	goto	u1660
  2802  0334  2B36               u1661:
  2803  0335                     	goto	l2749
  2804  0335  2B77               u1660:
  2805  0336                     	line	348
  2806                           	
  2807                           l2727:	
  2808  0336                     	clrf	(_wTempUpdate)^080h
  2809  0336  01D1               	line	349
  2810                           	
  2811                           l2729:	
  2812  0337                     	fcall	_WakeTemp
  2813  0337  318E  266C  3181   	line	350
  2814                           	
  2815                           l2731:	
  2816  033A                     	opt asmopt_push
  2817                           opt asmopt_off
  2818                           movlw	6
  2819  033A  3006               	movlb 0	; select bank0
  2820  033B  0020               movwf	((??_main+0)+0),f
  2821  033C  00CD               	movlw	48
  2822  033D  3030               u1787:
  2823  033E                     decfsz	wreg
  2824  033E  0B89               	goto	u1787
  2825  033F  2B3E               	decfsz	((??_main+0)+0),f
  2826  0340  0BCD               	goto	u1787
  2827  0341  2B3E               	nop
  2828  0342  0000               opt asmopt_pop
  2829                           
  2830                           	line	352
  2831                           	
  2832                           l2733:	
  2833  0343                     	fcall	_SetToGetTemp
  2834  0343  318F  275A  3181   	line	353
  2835                           	
  2836                           l2735:	
  2837  0346                     	opt asmopt_push
  2838                           opt asmopt_off
  2839                           movlw	8
  2840  0346  3008               	movlb 0	; select bank0
  2841  0347  0020               movwf	((??_main+0)+0),f
  2842  0348  00CD               	movlw	201
  2843  0349  30C9               u1797:
  2844  034A                     decfsz	wreg
  2845  034A  0B89               	goto	u1797
  2846  034B  2B4A               	decfsz	((??_main+0)+0),f
  2847  034C  0BCD               	goto	u1797
  2848  034D  2B4A               	nop2
  2849  034E  3200               opt asmopt_pop
  2850                           
  2851                           	line	355
  2852                           	
  2853                           l2737:	
  2854  034F                     	fcall	_GetTemp
  2855  034F  318F  2780  3181   	line	357
  2856                           	
  2857                           l2739:	
  2858  0352                     	movlb 1	; select bank1
  2859  0352  0021               	movf	(main@wCounter)^080h,w
  2860  0353  084E               	addlw	02h
  2861  0354  3E02               	movwf	(main@wCounter)^080h
  2862  0355  00CE               	movlw	0
  2863  0356  3000               	addwfc	(main@wCounter+1)^080h,w
  2864  0357  3D4F               	movwf	1+(main@wCounter)^080h
  2865  0358  00CF               	line	359
  2866                           	
  2867                           l2741:	
  2868  0359                     		movlw	4
  2869  0359  3004               	xorwf	((main@wCounter)^080h),w
  2870  035A  064E               iorwf	((main@wCounter+1)^080h),w
  2871  035B  044F               	btfss	status,2
  2872  035C  1D03               	goto	u1671
  2873  035D  2B5F               	goto	u1670
  2874  035E  2B60               u1671:
  2875  035F                     	goto	l2745
  2876  035F  2B63               u1670:
  2877  0360                     	line	361
  2878                           	
  2879                           l2743:	
  2880  0360                     	clrf	(main@wCounter)^080h
  2881  0360  01CE               	clrf	(main@wCounter+1)^080h
  2882  0361  01CF               	goto	l2745
  2883  0362  2B63               	line	362
  2884                           	
  2885                           l163:	
  2886  0363                     	line	363
  2887                           	
  2888                           l2745:	
  2889  0363                     	movlw	low(013h)
  2890  0363  3013               	movlb 0	; select bank0
  2891  0364  0020               	movwf	(??_main+0)+0
  2892  0365  00CD               	movf	(??_main+0)+0,w
  2893  0366  084D               	movwf	(setCursorPosition@iPosition)
  2894  0367  00B5               	movlw	low(03h)
  2895  0368  3003               	fcall	_setCursorPosition
  2896  0369  3185  25AA  3181   	line	364
  2897                           	
  2898                           l2747:	
  2899  036C                     	movlb 1	; select bank1
  2900  036C  0021               	movf	(main@wCounter)^080h,w
  2901  036D  084E               	addlw	low(main@wConv|((0x0)<<8))&0ffh
  2902  036E  3EB4               	movlb 0	; select bank0
  2903  036F  0020               	movwf	(lcdWriteText@iText)
  2904  0370  00BD               	movlw	0x0
  2905  0371  3000               
  2906                           	movwf	(lcdWriteText@iText+1)
  2907  0372  00BE               	fcall	_lcdWriteText
  2908  0373  318F  27A9  3181   	goto	l2749
  2909  0376  2B77               	line	365
  2910                           	
  2911                           l162:	
  2912  0377                     	line	366
  2913                           	
  2914                           l2749:	
  2915  0377                     	movlw	01h
  2916  0377  3001               	movlb 1	; select bank1
  2917  0378  0021               	addwf	(main@wIterationCounter)^080h,f
  2918  0379  07BA               	movlw	0
  2919  037A  3000               	addwfc	(main@wIterationCounter+1)^080h,f
  2920  037B  3DBB               	line	373
  2921                           	
  2922                           l2751:	
  2923  037C                     	movlw	(low(main@wDebounceEnter|((0x0)<<8)))&0ffh
  2924  037C  30C2               	movlb 0	; select bank0
  2925  037D  0020               	movwf	(??_main+0)+0
  2926  037E  00CD               	movf	(??_main+0)+0,w
  2927  037F  084D               	movwf	(Debounce@ioTimer)
  2928  0380  00B0               	movlw	(low(main@wEnterBottonPressed|((0x0)<<8)))&0ffh
  2929  0381  30C1               	movwf	(??_main+1)+0
  2930  0382  00CE               	movf	(??_main+1)+0,w
  2931  0383  084E               	movwf	(Debounce@swPressed)
  2932  0384  00B1               	movf	(13),w	;volatile
  2933  0385  080D               	andlw	(1<<1)-1
  2934  0386  3901               	fcall	_Debounce
  2935  0387  3186  265A  3181   	line	374
  2936                           	
  2937                           l2753:	
  2938  038A                     	movlw	(low(main@wDebounceUp|((0x0)<<8)))&0ffh
  2939  038A  30C4               	movlb 0	; select bank0
  2940  038B  0020               	movwf	(??_main+0)+0
  2941  038C  00CD               	movf	(??_main+0)+0,w
  2942  038D  084D               	movwf	(Debounce@ioTimer)
  2943  038E  00B0               	movlw	(low(main@wUpBottonPressed|((0x0)<<8)))&0ffh
  2944  038F  30CC               	movwf	(??_main+1)+0
  2945  0390  00CE               	movf	(??_main+1)+0,w
  2946  0391  084E               	movwf	(Debounce@swPressed)
  2947  0392  00B1               	rrf	(13),w	;volatile
  2948  0393  0C0D               	andlw	(1<<1)-1
  2949  0394  3901               	fcall	_Debounce
  2950  0395  3186  265A  3181   	line	375
  2951                           	
  2952                           l2755:	
  2953  0398                     	movlw	(low(main@wDebounceDown|((0x0)<<8)))&0ffh
  2954  0398  30C6               	movlb 0	; select bank0
  2955  0399  0020               	movwf	(??_main+0)+0
  2956  039A  00CD               	movf	(??_main+0)+0,w
  2957  039B  084D               	movwf	(Debounce@ioTimer)
  2958  039C  00B0               	movlw	(low(main@wDownBottonPressed|((0x0)<<8)))&0ffh
  2959  039D  30CD               	movwf	(??_main+1)+0
  2960  039E  00CE               	movf	(??_main+1)+0,w
  2961  039F  084E               	movwf	(Debounce@swPressed)
  2962  03A0  00B1               	rrf	(13),w	;volatile
  2963  03A1  0C0D               	rrf	wreg,f
  2964  03A2  0C89               	andlw	(1<<1)-1
  2965  03A3  3901               	fcall	_Debounce
  2966  03A4  3186  265A  3181   	line	378
  2967                           	
  2968                           l2757:	
  2969  03A7                     	movlb 1	; select bank1
  2970  03A7  0021               		decf	((main@wUpBottonPressed)^080h),w
  2971  03A8  034C               	btfss	status,2
  2972  03A9  1D03               	goto	u1681
  2973  03AA  2BAC               	goto	u1680
  2974  03AB  2BAD               u1681:
  2975  03AC                     	goto	l2763
  2976  03AC  2BB5               u1680:
  2977  03AD                     	line	380
  2978                           	
  2979                           l2759:	
  2980  03AD                     	clrf	(main@wUpBottonPressed)^080h
  2981  03AD  01CC               	line	381
  2982                           	
  2983                           l2761:	
  2984  03AE                     	movlw	low(01h)
  2985  03AE  3001               	movlb 0	; select bank0
  2986  03AF  0020               	movwf	(??_main+0)+0
  2987  03B0  00CD               	movf	(??_main+0)+0,w
  2988  03B1  084D               	movlb 1	; select bank1
  2989  03B2  0021               	addwf	(main@wMenu)^080h,f
  2990  03B3  07D0               	goto	l2763
  2991  03B4  2BB5               	line	382
  2992                           	
  2993                           l164:	
  2994  03B5                     	line	383
  2995                           	
  2996                           l2763:	
  2997  03B5                     		decf	((main@wDownBottonPressed)^080h),w
  2998  03B5  034D               	btfss	status,2
  2999  03B6  1D03               	goto	u1691
  3000  03B7  2BB9               	goto	u1690
  3001  03B8  2BBA               u1691:
  3002  03B9                     	goto	l2769
  3003  03B9  2BBE               u1690:
  3004  03BA                     	line	385
  3005                           	
  3006                           l2765:	
  3007  03BA                     	clrf	(main@wDownBottonPressed)^080h
  3008  03BA  01CD               	line	386
  3009                           	
  3010                           l2767:	
  3011  03BB                     	movlw	01h
  3012  03BB  3001               	subwf	(main@wMenu)^080h,f
  3013  03BC  02D0               	goto	l2769
  3014  03BD  2BBE               	line	387
  3015                           	
  3016                           l165:	
  3017  03BE                     	line	389
  3018                           	
  3019                           l2769:	
  3020  03BE                     		incf	((main@wMenu)^080h),w
  3021  03BE  0A50               	btfss	status,2
  3022  03BF  1D03               	goto	u1701
  3023  03C0  2BC2               	goto	u1700
  3024  03C1  2BC3               u1701:
  3025  03C2                     	goto	l2773
  3026  03C2  2BCA               u1700:
  3027  03C3                     	line	391
  3028                           	
  3029                           l2771:	
  3030  03C3                     	movlw	low(02h)
  3031  03C3  3002               	movlb 0	; select bank0
  3032  03C4  0020               	movwf	(??_main+0)+0
  3033  03C5  00CD               	movf	(??_main+0)+0,w
  3034  03C6  084D               	movlb 1	; select bank1
  3035  03C7  0021               	movwf	(main@wMenu)^080h
  3036  03C8  00D0               	goto	l2773
  3037  03C9  2BCA               	line	392
  3038                           	
  3039                           l166:	
  3040  03CA                     	line	393
  3041                           	
  3042                           l2773:	
  3043  03CA                     		movlw	3
  3044  03CA  3003               	xorwf	((main@wMenu)^080h),w
  3045  03CB  0650               	btfss	status,2
  3046  03CC  1D03               	goto	u1711
  3047  03CD  2BCF               	goto	u1710
  3048  03CE  2BD0               u1711:
  3049  03CF                     	goto	l2681
  3050  03CF  2A1B               u1710:
  3051  03D0                     	line	395
  3052                           	
  3053                           l2775:	
  3054  03D0                     	clrf	(main@wMenu)^080h
  3055  03D0  01D0               	goto	l2681
  3056  03D1  2A1B               	line	396
  3057                           	
  3058                           l167:	
  3059  03D2                     	goto	l2681
  3060  03D2  2A1B               	line	399
  3061                           	
  3062                           l168:	
  3063  03D3                     	goto	l2681
  3064  03D3  2A1B               	
  3065                           l169:	
  3066  03D4                     	line	401
  3067                           	
  3068                           l170:	
  3069  03D4                     	global	start
  3070                           	ljmp	start
  3071  03D4  3181  2906         	opt stack 0
  3072                           GLOBAL	__end_of_main
  3073                           	__end_of_main:
  3074  03D6                     	signat	_main,89
  3075                           	global	_setNotBlinkingCursor
  3076                           
  3077 ;; *************** function _setNotBlinkingCursor *****************
  3078 ;; Defined at:
  3079 ;;		line 198 in file "LCD_hd44780u_qy_2004a.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3095 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3096 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3097 ;;Total ram usage:        1 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    7
  3100 ;; This function calls:
  3101 ;;		_writeInsChk
  3102 ;; This function is called by:
  3103 ;;		_main
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  3107                           	file	"LCD_hd44780u_qy_2004a.c"
  3108                           	line	198
  3109                           global __ptext1
  3110                           __ptext1:	;psect for function _setNotBlinkingCursor
  3111  0E61                     psect	text1
  3112                           	file	"LCD_hd44780u_qy_2004a.c"
  3113                           	line	198
  3114                           	global	__size_of_setNotBlinkingCursor
  3115                           	__size_of_setNotBlinkingCursor	equ	__end_of_setNotBlinkingCursor-_setNotBlinkingCursor

  3116  000B                     	
  3117                           _setNotBlinkingCursor:	
  3118  0E61                     ;incstack = 0
  3119                           	opt	stack 8
  3120                           ; Regs used in _setNotBlinkingCursor: [wreg+status,2+status,0+pclath+cstack]
  3121                           	line	200
  3122                           	
  3123                           l2037:	
  3124  0E61                     ;LCD_hd44780u_qy_2004a.c: 200:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFE;
  3125                           	movlb 0	; select bank0
  3126  0E61  0020               	movf	(_mDisplayOnOffReg),w
  3127  0E62  085C               	andlw	0FEh
  3128  0E63  39FE               	movwf	(??_setNotBlinkingCursor+0)+0
  3129  0E64  00B6               	movf	(??_setNotBlinkingCursor+0)+0,w
  3130  0E65  0836               	movwf	(_mDisplayOnOffReg)
  3131  0E66  00DC               	line	201
  3132                           	
  3133                           l2039:	
  3134  0E67                     ;LCD_hd44780u_qy_2004a.c: 201:   writeInsChk(mDisplayOnOffReg);
  3135                           	movf	(_mDisplayOnOffReg),w
  3136  0E67  085C               	fcall	_writeInsChk
  3137  0E68  318E  2640  318E   	line	202
  3138                           	
  3139                           l303:	
  3140  0E6B                     	return
  3141  0E6B  0008               	opt stack 0
  3142                           GLOBAL	__end_of_setNotBlinkingCursor
  3143                           	__end_of_setNotBlinkingCursor:
  3144  0E6C                     	signat	_setNotBlinkingCursor,89
  3145                           	global	_setCursorOff
  3146                           
  3147 ;; *************** function _setCursorOff *****************
  3148 ;; Defined at:
  3149 ;;		line 203 in file "LCD_hd44780u_qy_2004a.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;		None
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;		None
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      void 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0, pclath, cstack
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3165 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3166 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3167 ;;Total ram usage:        1 bytes
  3168 ;; Hardware stack levels used:    1
  3169 ;; Hardware stack levels required when called:    7
  3170 ;; This function calls:
  3171 ;;		_writeInsChk
  3172 ;; This function is called by:
  3173 ;;		_main
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  3177                           	line	203
  3178                           global __ptext2
  3179                           __ptext2:	;psect for function _setCursorOff
  3180  0E56                     psect	text2
  3181                           	file	"LCD_hd44780u_qy_2004a.c"
  3182                           	line	203
  3183                           	global	__size_of_setCursorOff
  3184                           	__size_of_setCursorOff	equ	__end_of_setCursorOff-_setCursorOff
  3185  000B                     	
  3186                           _setCursorOff:	
  3187  0E56                     ;incstack = 0
  3188                           	opt	stack 8
  3189                           ; Regs used in _setCursorOff: [wreg+status,2+status,0+pclath+cstack]
  3190                           	line	205
  3191                           	
  3192                           l2029:	
  3193  0E56                     ;LCD_hd44780u_qy_2004a.c: 205:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFD;
  3194                           	movlb 0	; select bank0
  3195  0E56  0020               	movf	(_mDisplayOnOffReg),w
  3196  0E57  085C               	andlw	0FDh
  3197  0E58  39FD               	movwf	(??_setCursorOff+0)+0
  3198  0E59  00B6               	movf	(??_setCursorOff+0)+0,w
  3199  0E5A  0836               	movwf	(_mDisplayOnOffReg)
  3200  0E5B  00DC               	line	206
  3201                           	
  3202                           l2031:	
  3203  0E5C                     ;LCD_hd44780u_qy_2004a.c: 206:   writeInsChk(mDisplayOnOffReg);
  3204                           	movf	(_mDisplayOnOffReg),w
  3205  0E5C  085C               	fcall	_writeInsChk
  3206  0E5D  318E  2640  318E   	line	207
  3207                           	
  3208                           l306:	
  3209  0E60                     	return
  3210  0E60  0008               	opt stack 0
  3211                           GLOBAL	__end_of_setCursorOff
  3212                           	__end_of_setCursorOff:
  3213  0E61                     	signat	_setCursorOff,89
  3214                           	global	_printEM1812
  3215                           
  3216 ;; *************** function _printEM1812 *****************
  3217 ;; Defined at:
  3218 ;;		line 121 in file "161518_temp_main.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  wVariable       2   24[BANK0 ] unsigned short 
  3221 ;;  oTextOut        1   26[BANK0 ] PTR unsigned char 
  3222 ;;		 -> main@wReadout(20), 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  QWE            20    0        unsigned char [20]
  3225 ;;  wDecimal        1   30[BANK0 ] unsigned char 
  3226 ;;  wUnity          1   29[BANK0 ] unsigned char 
  3227 ;;  wTen            1   28[BANK0 ] unsigned char 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1    wreg      void 
  3230 ;; Registers used:
  3231 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3237 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  3238 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  3239 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3240 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
  3241 ;;Total ram usage:        7 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:    5
  3244 ;; This function calls:
  3245 ;;		___lwdiv
  3246 ;;		___lwmod
  3247 ;; This function is called by:
  3248 ;;		_main
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3252                           	file	"161518_temp_main.c"
  3253                           	line	121
  3254                           global __ptext3
  3255                           __ptext3:	;psect for function _printEM1812
  3256  053E                     psect	text3
  3257                           	file	"161518_temp_main.c"
  3258                           	line	121
  3259                           	global	__size_of_printEM1812
  3260                           	__size_of_printEM1812	equ	__end_of_printEM1812-_printEM1812
  3261  006C                     	
  3262                           _printEM1812:	
  3263  053E                     ;incstack = 0
  3264                           	opt	stack 10
  3265                           ; Regs used in _printEM1812: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3266                           	line	127
  3267                           	
  3268                           l1973:	
  3269  053E                     	movlw	064h
  3270  053E  3064               	movlb 0	; select bank0
  3271  053F  0020               	movwf	(___lwdiv@divisor)
  3272  0540  00B0               	movlw	0
  3273  0541  3000               	movwf	((___lwdiv@divisor))+1
  3274  0542  00B1               	movf	(printEM1812@wVariable+1),w
  3275  0543  0839               	movwf	(___lwdiv@dividend+1)
  3276  0544  00B3               	movf	(printEM1812@wVariable),w
  3277  0545  0838               	movwf	(___lwdiv@dividend)
  3278  0546  00B2               	fcall	___lwdiv
  3279  0547  3186  269F  3185   	movlb 0	; select bank0
  3280  054A  0020               	movf	(0+(?___lwdiv)),w
  3281  054B  0830               	movwf	(??_printEM1812+0)+0
  3282  054C  00BB               	movf	(??_printEM1812+0)+0,w
  3283  054D  083B               	movwf	(printEM1812@wTen)
  3284  054E  00BC               	line	128
  3285                           	movlw	064h
  3286  054F  3064               	movwf	(___lwmod@divisor)
  3287  0550  00B0               	movlw	0
  3288  0551  3000               	movwf	((___lwmod@divisor))+1
  3289  0552  00B1               	movf	(printEM1812@wVariable+1),w
  3290  0553  0839               	movwf	(___lwmod@dividend+1)
  3291  0554  00B3               	movf	(printEM1812@wVariable),w
  3292  0555  0838               	movwf	(___lwmod@dividend)
  3293  0556  00B2               	fcall	___lwmod
  3294  0557  3186  26E3  3185   	movlb 0	; select bank0
  3295  055A  0020               	movf	(1+(?___lwmod)),w
  3296  055B  0831               	movwf	(printEM1812@wVariable+1)
  3297  055C  00B9               	movf	(0+(?___lwmod)),w
  3298  055D  0830               	movwf	(printEM1812@wVariable)
  3299  055E  00B8               	line	129
  3300                           	movlw	0Ah
  3301  055F  300A               	movwf	(___lwdiv@divisor)
  3302  0560  00B0               	movlw	0
  3303  0561  3000               	movwf	((___lwdiv@divisor))+1
  3304  0562  00B1               	movf	(printEM1812@wVariable+1),w
  3305  0563  0839               	movwf	(___lwdiv@dividend+1)
  3306  0564  00B3               	movf	(printEM1812@wVariable),w
  3307  0565  0838               	movwf	(___lwdiv@dividend)
  3308  0566  00B2               	fcall	___lwdiv
  3309  0567  3186  269F  3185   	movlb 0	; select bank0
  3310  056A  0020               	movf	(0+(?___lwdiv)),w
  3311  056B  0830               	movwf	(??_printEM1812+0)+0
  3312  056C  00BB               	movf	(??_printEM1812+0)+0,w
  3313  056D  083B               	movwf	(printEM1812@wUnity)
  3314  056E  00BD               	line	130
  3315                           	movlw	0Ah
  3316  056F  300A               	movwf	(___lwmod@divisor)
  3317  0570  00B0               	movlw	0
  3318  0571  3000               	movwf	((___lwmod@divisor))+1
  3319  0572  00B1               	movf	(printEM1812@wVariable+1),w
  3320  0573  0839               	movwf	(___lwmod@dividend+1)
  3321  0574  00B3               	movf	(printEM1812@wVariable),w
  3322  0575  0838               	movwf	(___lwmod@dividend)
  3323  0576  00B2               	fcall	___lwmod
  3324  0577  3186  26E3  3185   	movlb 0	; select bank0
  3325  057A  0020               	movf	(1+(?___lwmod)),w
  3326  057B  0831               	movwf	(printEM1812@wVariable+1)
  3327  057C  00B9               	movf	(0+(?___lwmod)),w
  3328  057D  0830               	movwf	(printEM1812@wVariable)
  3329  057E  00B8               	line	131
  3330                           	
  3331                           l1975:	
  3332  057F                     	movf	(printEM1812@wVariable),w
  3333  057F  0838               	movwf	(??_printEM1812+0)+0
  3334  0580  00BB               	movf	(??_printEM1812+0)+0,w
  3335  0581  083B               	movwf	(printEM1812@wDecimal)
  3336  0582  00BE               	line	133
  3337                           	
  3338                           l1977:	
  3339  0583                     	movf	(printEM1812@wTen),w
  3340  0583  083C               	addlw	030h
  3341  0584  3E30               	movwf	(??_printEM1812+0)+0
  3342  0585  00BB               	movf	(printEM1812@oTextOut),w
  3343  0586  083A               	movwf	fsr1l
  3344  0587  0086               	clrf fsr1h	
  3345  0588  0187               	
  3346                           	movf	(??_printEM1812+0)+0,w
  3347  0589  083B               	movwf	indf1
  3348  058A  0081               	line	134
  3349                           	
  3350                           l1979:	
  3351  058B                     	movf	(printEM1812@wUnity),w
  3352  058B  083D               	addlw	030h
  3353  058C  3E30               	movwf	(??_printEM1812+0)+0
  3354  058D  00BB               	incf	(printEM1812@oTextOut),w
  3355  058E  0A3A               	movwf	fsr1l
  3356  058F  0086               	clrf fsr1h	
  3357  0590  0187               	
  3358                           	movf	(??_printEM1812+0)+0,w
  3359  0591  083B               	movwf	indf1
  3360  0592  0081               	line	135
  3361                           	
  3362                           l1981:	
  3363  0593                     	movlw	low(02Ch)
  3364  0593  302C               	movwf	(??_printEM1812+0)+0
  3365  0594  00BB               	movf	(printEM1812@oTextOut),w
  3366  0595  083A               	addlw	02h
  3367  0596  3E02               	movwf	fsr1l
  3368  0597  0086               	clrf fsr1h	
  3369  0598  0187               	
  3370                           	movf	(??_printEM1812+0)+0,w
  3371  0599  083B               	movwf	indf1
  3372  059A  0081               	line	136
  3373                           	
  3374                           l1983:	
  3375  059B                     	movf	(printEM1812@wDecimal),w
  3376  059B  083E               	addlw	030h
  3377  059C  3E30               	movwf	(??_printEM1812+0)+0
  3378  059D  00BB               	movf	(printEM1812@oTextOut),w
  3379  059E  083A               	addlw	03h
  3380  059F  3E03               	movwf	fsr1l
  3381  05A0  0086               	clrf fsr1h	
  3382  05A1  0187               	
  3383                           	movf	(??_printEM1812+0)+0,w
  3384  05A2  083B               	movwf	indf1
  3385  05A3  0081               	line	137
  3386                           	
  3387                           l1985:	
  3388  05A4                     	movf	(printEM1812@oTextOut),w
  3389  05A4  083A               	addlw	04h
  3390  05A5  3E04               	movwf	fsr1l
  3391  05A6  0086               	clrf fsr1h	
  3392  05A7  0187               	
  3393                           	clrf	indf1
  3394  05A8  0181               	line	139
  3395                           	
  3396                           l132:	
  3397  05A9                     	return
  3398  05A9  0008               	opt stack 0
  3399                           GLOBAL	__end_of_printEM1812
  3400                           	__end_of_printEM1812:
  3401  05AA                     	signat	_printEM1812,8313
  3402                           	global	___lwmod
  3403                           
  3404 ;; *************** function ___lwmod *****************
  3405 ;; Defined at:
  3406 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  divisor         2   16[BANK0 ] unsigned int 
  3409 ;;  dividend        2   18[BANK0 ] unsigned int 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  counter         1   21[BANK0 ] unsigned char 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  2   16[BANK0 ] unsigned int 
  3414 ;; Registers used:
  3415 ;;		wreg, status,2, status,0
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3421 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  3422 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3423 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3424 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  3425 ;;Total ram usage:        6 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    4
  3428 ;; This function calls:
  3429 ;;		Nothing
  3430 ;; This function is called by:
  3431 ;;		_printEM1812
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  3435                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  3436                           	line	5
  3437                           global __ptext4
  3438                           __ptext4:	;psect for function ___lwmod
  3439  06E3                     psect	text4
  3440                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  3441                           	line	5
  3442                           	global	__size_of___lwmod
  3443                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  3444  003C                     	
  3445                           ___lwmod:	
  3446  06E3                     ;incstack = 0
  3447                           	opt	stack 10
  3448                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3449                           	line	12
  3450                           	
  3451                           l1891:	
  3452  06E3                     	movlb 0	; select bank0
  3453  06E3  0020               	movf	((___lwmod@divisor)),w
  3454  06E4  0830               iorwf	((___lwmod@divisor+1)),w
  3455  06E5  0431               	btfsc	status,2
  3456  06E6  1903               	goto	u1051
  3457  06E7  2EE9               	goto	u1050
  3458  06E8  2EEA               u1051:
  3459  06E9                     	goto	l1909
  3460  06E9  2F19               u1050:
  3461  06EA                     	line	13
  3462                           	
  3463                           l1893:	
  3464  06EA                     	clrf	(___lwmod@counter)
  3465  06EA  01B5               	incf	(___lwmod@counter),f
  3466  06EB  0AB5               	line	14
  3467                           	goto	l1899
  3468  06EC  2EF7               	
  3469                           l632:	
  3470  06ED                     	line	15
  3471                           	
  3472                           l1895:	
  3473  06ED                     	movlw	01h
  3474  06ED  3001               	
  3475                           u1065:
  3476  06EE                     	lslf	(___lwmod@divisor),f
  3477  06EE  35B0               	rlf	(___lwmod@divisor+1),f
  3478  06EF  0DB1               	decfsz	wreg,f
  3479  06F0  0B89               	goto	u1065
  3480  06F1  2EEE               	line	16
  3481                           	
  3482                           l1897:	
  3483  06F2                     	movlw	low(01h)
  3484  06F2  3001               	movwf	(??___lwmod+0)+0
  3485  06F3  00B4               	movf	(??___lwmod+0)+0,w
  3486  06F4  0834               	addwf	(___lwmod@counter),f
  3487  06F5  07B5               	goto	l1899
  3488  06F6  2EF7               	line	17
  3489                           	
  3490                           l631:	
  3491  06F7                     	line	14
  3492                           	
  3493                           l1899:	
  3494  06F7                     	btfss	(___lwmod@divisor+1),(15)&7
  3495  06F7  1FB1               	goto	u1071
  3496  06F8  2EFA               	goto	u1070
  3497  06F9  2EFB               u1071:
  3498  06FA                     	goto	l1895
  3499  06FA  2EED               u1070:
  3500  06FB                     	goto	l1901
  3501  06FB  2EFD               	
  3502                           l633:	
  3503  06FC                     	goto	l1901
  3504  06FC  2EFD               	line	18
  3505                           	
  3506                           l634:	
  3507  06FD                     	line	19
  3508                           	
  3509                           l1901:	
  3510  06FD                     	movf	(___lwmod@divisor+1),w
  3511  06FD  0831               	subwf	(___lwmod@dividend+1),w
  3512  06FE  0233               	skipz
  3513  06FF  1D03               	goto	u1085
  3514  0700  2F03               	movf	(___lwmod@divisor),w
  3515  0701  0830               	subwf	(___lwmod@dividend),w
  3516  0702  0232               u1085:
  3517  0703                     	skipc
  3518  0703  1C03               	goto	u1081
  3519  0704  2F06               	goto	u1080
  3520  0705  2F07               u1081:
  3521  0706                     	goto	l1905
  3522  0706  2F0C               u1080:
  3523  0707                     	line	20
  3524                           	
  3525                           l1903:	
  3526  0707                     	movf	(___lwmod@divisor),w
  3527  0707  0830               	subwf	(___lwmod@dividend),f
  3528  0708  02B2               	movf	(___lwmod@divisor+1),w
  3529  0709  0831               	subwfb	(___lwmod@dividend+1),f
  3530  070A  3BB3               	goto	l1905
  3531  070B  2F0C               	
  3532                           l635:	
  3533  070C                     	line	21
  3534                           	
  3535                           l1905:	
  3536  070C                     	movlw	01h
  3537  070C  3001               	
  3538                           u1095:
  3539  070D                     	lsrf	(___lwmod@divisor+1),f
  3540  070D  36B1               	rrf	(___lwmod@divisor),f
  3541  070E  0CB0               	decfsz	wreg,f
  3542  070F  0B89               	goto	u1095
  3543  0710  2F0D               	line	22
  3544                           	
  3545                           l1907:	
  3546  0711                     	movlw	01h
  3547  0711  3001               	subwf	(___lwmod@counter),f
  3548  0712  02B5               	btfss	status,2
  3549  0713  1D03               	goto	u1101
  3550  0714  2F16               	goto	u1100
  3551  0715  2F17               u1101:
  3552  0716                     	goto	l1901
  3553  0716  2EFD               u1100:
  3554  0717                     	goto	l1909
  3555  0717  2F19               	
  3556                           l636:	
  3557  0718                     	goto	l1909
  3558  0718  2F19               	line	23
  3559                           	
  3560                           l630:	
  3561  0719                     	line	24
  3562                           	
  3563                           l1909:	
  3564  0719                     	movf	(___lwmod@dividend+1),w
  3565  0719  0833               	movwf	(?___lwmod+1)
  3566  071A  00B1               	movf	(___lwmod@dividend),w
  3567  071B  0832               	movwf	(?___lwmod)
  3568  071C  00B0               	goto	l637
  3569  071D  2F1E               	
  3570                           l1911:	
  3571  071E                     	line	25
  3572                           	
  3573                           l637:	
  3574  071E                     	return
  3575  071E  0008               	opt stack 0
  3576                           GLOBAL	__end_of___lwmod
  3577                           	__end_of___lwmod:
  3578  071F                     	signat	___lwmod,8314
  3579                           	global	___lwdiv
  3580                           
  3581 ;; *************** function ___lwdiv *****************
  3582 ;; Defined at:
  3583 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  divisor         2   16[BANK0 ] unsigned int 
  3586 ;;  dividend        2   18[BANK0 ] unsigned int 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;  quotient        2   21[BANK0 ] unsigned int 
  3589 ;;  counter         1   23[BANK0 ] unsigned char 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  2   16[BANK0 ] unsigned int 
  3592 ;; Registers used:
  3593 ;;		wreg, status,2, status,0
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3599 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  3600 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  3601 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3602 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
  3603 ;;Total ram usage:        8 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    4
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_printEM1812
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  3613                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  3614                           	line	5
  3615                           global __ptext5
  3616                           __ptext5:	;psect for function ___lwdiv
  3617  069F                     psect	text5
  3618                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  3619                           	line	5
  3620                           	global	__size_of___lwdiv
  3621                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3622  0044                     	
  3623                           ___lwdiv:	
  3624  069F                     ;incstack = 0
  3625                           	opt	stack 10
  3626                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3627                           	line	13
  3628                           	
  3629                           l1865:	
  3630  069F                     	movlb 0	; select bank0
  3631  069F  0020               	clrf	(___lwdiv@quotient)
  3632  06A0  01B5               	clrf	(___lwdiv@quotient+1)
  3633  06A1  01B6               	line	14
  3634                           	
  3635                           l1867:	
  3636  06A2                     	movf	((___lwdiv@divisor)),w
  3637  06A2  0830               iorwf	((___lwdiv@divisor+1)),w
  3638  06A3  0431               	btfsc	status,2
  3639  06A4  1903               	goto	u981
  3640  06A5  2EA7               	goto	u980
  3641  06A6  2EA8               u981:
  3642  06A7                     	goto	l1887
  3643  06A7  2EDD               u980:
  3644  06A8                     	line	15
  3645                           	
  3646                           l1869:	
  3647  06A8                     	clrf	(___lwdiv@counter)
  3648  06A8  01B7               	incf	(___lwdiv@counter),f
  3649  06A9  0AB7               	line	16
  3650                           	goto	l1875
  3651  06AA  2EB5               	
  3652                           l622:	
  3653  06AB                     	line	17
  3654                           	
  3655                           l1871:	
  3656  06AB                     	movlw	01h
  3657  06AB  3001               	
  3658                           u995:
  3659  06AC                     	lslf	(___lwdiv@divisor),f
  3660  06AC  35B0               	rlf	(___lwdiv@divisor+1),f
  3661  06AD  0DB1               	decfsz	wreg,f
  3662  06AE  0B89               	goto	u995
  3663  06AF  2EAC               	line	18
  3664                           	
  3665                           l1873:	
  3666  06B0                     	movlw	low(01h)
  3667  06B0  3001               	movwf	(??___lwdiv+0)+0
  3668  06B1  00B4               	movf	(??___lwdiv+0)+0,w
  3669  06B2  0834               	addwf	(___lwdiv@counter),f
  3670  06B3  07B7               	goto	l1875
  3671  06B4  2EB5               	line	19
  3672                           	
  3673                           l621:	
  3674  06B5                     	line	16
  3675                           	
  3676                           l1875:	
  3677  06B5                     	btfss	(___lwdiv@divisor+1),(15)&7
  3678  06B5  1FB1               	goto	u1001
  3679  06B6  2EB8               	goto	u1000
  3680  06B7  2EB9               u1001:
  3681  06B8                     	goto	l1871
  3682  06B8  2EAB               u1000:
  3683  06B9                     	goto	l1877
  3684  06B9  2EBB               	
  3685                           l623:	
  3686  06BA                     	goto	l1877
  3687  06BA  2EBB               	line	20
  3688                           	
  3689                           l624:	
  3690  06BB                     	line	21
  3691                           	
  3692                           l1877:	
  3693  06BB                     	movlw	01h
  3694  06BB  3001               	
  3695                           u1015:
  3696  06BC                     	lslf	(___lwdiv@quotient),f
  3697  06BC  35B5               	rlf	(___lwdiv@quotient+1),f
  3698  06BD  0DB6               	decfsz	wreg,f
  3699  06BE  0B89               	goto	u1015
  3700  06BF  2EBC               	line	22
  3701                           	movf	(___lwdiv@divisor+1),w
  3702  06C0  0831               	subwf	(___lwdiv@dividend+1),w
  3703  06C1  0233               	skipz
  3704  06C2  1D03               	goto	u1025
  3705  06C3  2EC6               	movf	(___lwdiv@divisor),w
  3706  06C4  0830               	subwf	(___lwdiv@dividend),w
  3707  06C5  0232               u1025:
  3708  06C6                     	skipc
  3709  06C6  1C03               	goto	u1021
  3710  06C7  2EC9               	goto	u1020
  3711  06C8  2ECA               u1021:
  3712  06C9                     	goto	l1883
  3713  06C9  2ED0               u1020:
  3714  06CA                     	line	23
  3715                           	
  3716                           l1879:	
  3717  06CA                     	movf	(___lwdiv@divisor),w
  3718  06CA  0830               	subwf	(___lwdiv@dividend),f
  3719  06CB  02B2               	movf	(___lwdiv@divisor+1),w
  3720  06CC  0831               	subwfb	(___lwdiv@dividend+1),f
  3721  06CD  3BB3               	line	24
  3722                           	
  3723                           l1881:	
  3724  06CE                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3725  06CE  1435               	goto	l1883
  3726  06CF  2ED0               	line	25
  3727                           	
  3728                           l625:	
  3729  06D0                     	line	26
  3730                           	
  3731                           l1883:	
  3732  06D0                     	movlw	01h
  3733  06D0  3001               	
  3734                           u1035:
  3735  06D1                     	lsrf	(___lwdiv@divisor+1),f
  3736  06D1  36B1               	rrf	(___lwdiv@divisor),f
  3737  06D2  0CB0               	decfsz	wreg,f
  3738  06D3  0B89               	goto	u1035
  3739  06D4  2ED1               	line	27
  3740                           	
  3741                           l1885:	
  3742  06D5                     	movlw	01h
  3743  06D5  3001               	subwf	(___lwdiv@counter),f
  3744  06D6  02B7               	btfss	status,2
  3745  06D7  1D03               	goto	u1041
  3746  06D8  2EDA               	goto	u1040
  3747  06D9  2EDB               u1041:
  3748  06DA                     	goto	l1877
  3749  06DA  2EBB               u1040:
  3750  06DB                     	goto	l1887
  3751  06DB  2EDD               	
  3752                           l626:	
  3753  06DC                     	goto	l1887
  3754  06DC  2EDD               	line	28
  3755                           	
  3756                           l620:	
  3757  06DD                     	line	29
  3758                           	
  3759                           l1887:	
  3760  06DD                     	movf	(___lwdiv@quotient+1),w
  3761  06DD  0836               	movwf	(?___lwdiv+1)
  3762  06DE  00B1               	movf	(___lwdiv@quotient),w
  3763  06DF  0835               	movwf	(?___lwdiv)
  3764  06E0  00B0               	goto	l627
  3765  06E1  2EE2               	
  3766                           l1889:	
  3767  06E2                     	line	30
  3768                           	
  3769                           l627:	
  3770  06E2                     	return
  3771  06E2  0008               	opt stack 0
  3772                           GLOBAL	__end_of___lwdiv
  3773                           	__end_of___lwdiv:
  3774  06E3                     	signat	___lwdiv,8314
  3775                           	global	_powerOnLcd
  3776                           
  3777 ;; *************** function _powerOnLcd *****************
  3778 ;; Defined at:
  3779 ;;		line 188 in file "LCD_hd44780u_qy_2004a.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0, pclath, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3795 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3796 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3797 ;;Total ram usage:        1 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; Hardware stack levels required when called:    7
  3800 ;; This function calls:
  3801 ;;		_writeInsChk
  3802 ;; This function is called by:
  3803 ;;		_main
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3807                           	file	"LCD_hd44780u_qy_2004a.c"
  3808                           	line	188
  3809                           global __ptext6
  3810                           __ptext6:	;psect for function _powerOnLcd
  3811  0E4B                     psect	text6
  3812                           	file	"LCD_hd44780u_qy_2004a.c"
  3813                           	line	188
  3814                           	global	__size_of_powerOnLcd
  3815                           	__size_of_powerOnLcd	equ	__end_of_powerOnLcd-_powerOnLcd
  3816  000B                     	
  3817                           _powerOnLcd:	
  3818  0E4B                     ;incstack = 0
  3819                           	opt	stack 8
  3820                           ; Regs used in _powerOnLcd: [wreg+status,2+status,0+pclath+cstack]
  3821                           	line	190
  3822                           	
  3823                           l2025:	
  3824  0E4B                     ;LCD_hd44780u_qy_2004a.c: 190:   mDisplayOnOffReg = mDisplayOnOffReg | 0x04;
  3825                           	movlb 0	; select bank0
  3826  0E4B  0020               	movf	(_mDisplayOnOffReg),w
  3827  0E4C  085C               	iorlw	04h
  3828  0E4D  3804               	movwf	(??_powerOnLcd+0)+0
  3829  0E4E  00B6               	movf	(??_powerOnLcd+0)+0,w
  3830  0E4F  0836               	movwf	(_mDisplayOnOffReg)
  3831  0E50  00DC               	line	191
  3832                           	
  3833                           l2027:	
  3834  0E51                     ;LCD_hd44780u_qy_2004a.c: 191:   writeInsChk(mDisplayOnOffReg);
  3835                           	movf	(_mDisplayOnOffReg),w
  3836  0E51  085C               	fcall	_writeInsChk
  3837  0E52  318E  2640  318E   	line	192
  3838                           	
  3839                           l297:	
  3840  0E55                     	return
  3841  0E55  0008               	opt stack 0
  3842                           GLOBAL	__end_of_powerOnLcd
  3843                           	__end_of_powerOnLcd:
  3844  0E56                     	signat	_powerOnLcd,89
  3845                           	global	_moveCursorToHome
  3846                           
  3847 ;; *************** function _moveCursorToHome *****************
  3848 ;; Defined at:
  3849 ;;		line 249 in file "LCD_hd44780u_qy_2004a.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;		None
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;		None
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      void 
  3856 ;; Registers used:
  3857 ;;		wreg, status,2, status,0, pclath, cstack
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3867 ;;Total ram usage:        0 bytes
  3868 ;; Hardware stack levels used:    1
  3869 ;; Hardware stack levels required when called:    7
  3870 ;; This function calls:
  3871 ;;		_writeInsChk
  3872 ;; This function is called by:
  3873 ;;		_main
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3877                           	line	249
  3878                           global __ptext7
  3879                           __ptext7:	;psect for function _moveCursorToHome
  3880  0E2E                     psect	text7
  3881                           	file	"LCD_hd44780u_qy_2004a.c"
  3882                           	line	249
  3883                           	global	__size_of_moveCursorToHome
  3884                           	__size_of_moveCursorToHome	equ	__end_of_moveCursorToHome-_moveCursorToHome
  3885  0008                     	
  3886                           _moveCursorToHome:	
  3887  0E2E                     ;incstack = 0
  3888                           	opt	stack 8
  3889                           ; Regs used in _moveCursorToHome: [wreg+status,2+status,0+pclath+cstack]
  3890                           	line	251
  3891                           	
  3892                           l2033:	
  3893  0E2E                     ;LCD_hd44780u_qy_2004a.c: 251:   writeInsChk(0x02);
  3894                           	movlw	low(02h)
  3895  0E2E  3002               	fcall	_writeInsChk
  3896  0E2F  318E  2640  318E   	line	252
  3897                           	
  3898                           l2035:	
  3899  0E32                     ;LCD_hd44780u_qy_2004a.c: 252:   mWritingPosition=1;
  3900                           	movlb 0	; select bank0
  3901  0E32  0020               	clrf	(_mWritingPosition)
  3902  0E33  01DA               	incf	(_mWritingPosition),f
  3903  0E34  0ADA               	line	253
  3904                           	
  3905                           l333:	
  3906  0E35                     	return
  3907  0E35  0008               	opt stack 0
  3908                           GLOBAL	__end_of_moveCursorToHome
  3909                           	__end_of_moveCursorToHome:
  3910  0E36                     	signat	_moveCursorToHome,89
  3911                           	global	_initLCD
  3912                           
  3913 ;; *************** function _initLCD *****************
  3914 ;; Defined at:
  3915 ;;		line 10 in file "LCD_hd44780u_qy_2004a.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;		None
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2, status,0, pclath, cstack
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3931 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3932 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3933 ;;Total ram usage:        1 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:    8
  3936 ;; This function calls:
  3937 ;;		_clearDisplay
  3938 ;;		_setData
  3939 ;;		_writeInsChk
  3940 ;; This function is called by:
  3941 ;;		_main
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3945                           	line	10
  3946                           global __ptext8
  3947                           __ptext8:	;psect for function _initLCD
  3948  060A                     psect	text8
  3949                           	file	"LCD_hd44780u_qy_2004a.c"
  3950                           	line	10
  3951                           	global	__size_of_initLCD
  3952                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  3953  0050                     	
  3954                           _initLCD:	
  3955  060A                     ;incstack = 0
  3956                           	opt	stack 7
  3957                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  3958                           	line	13
  3959                           	
  3960                           l2003:	
  3961  060A                     ;LCD_hd44780u_qy_2004a.c: 13:   TRISAbits.TRISA4 = 0;
  3962                           	movlb 1	; select bank1
  3963  060A  0021               	bcf	(140)^080h,4	;volatile
  3964  060B  120C               	line	14
  3965                           ;LCD_hd44780u_qy_2004a.c: 14:   TRISAbits.TRISA7 = 0;
  3966                           	bcf	(140)^080h,7	;volatile
  3967  060C  138C               	line	15
  3968                           ;LCD_hd44780u_qy_2004a.c: 15:   TRISAbits.TRISA5 = 0;
  3969                           	bcf	(140)^080h,5	;volatile
  3970  060D  128C               	line	16
  3971                           ;LCD_hd44780u_qy_2004a.c: 16:   PORTAbits.RA4 = 0;
  3972                           	movlb 0	; select bank0
  3973  060E  0020               	bcf	(12),4	;volatile
  3974  060F  120C               	line	17
  3975                           ;LCD_hd44780u_qy_2004a.c: 17:   PORTAbits.RA7 = 0;
  3976                           	bcf	(12),7	;volatile
  3977  0610  138C               	line	18
  3978                           ;LCD_hd44780u_qy_2004a.c: 18:   PORTAbits.RA5 = 0;
  3979                           	bcf	(12),5	;volatile
  3980  0611  128C               	line	21
  3981                           	
  3982                           l2005:	
  3983  0612                     ;LCD_hd44780u_qy_2004a.c: 21:   _delay((unsigned long)((15)*(16000000/4000.0)));
  3984                           	opt asmopt_push
  3985                           opt asmopt_off
  3986                           movlw	78
  3987  0612  304E               	movlb 0	; select bank0
  3988  0613  0020               movwf	((??_initLCD+0)+0),f
  3989  0614  00B6               	movlw	235
  3990  0615  30EB               u1807:
  3991  0616                     decfsz	wreg
  3992  0616  0B89               	goto	u1807
  3993  0617  2E16               	decfsz	((??_initLCD+0)+0),f
  3994  0618  0BB6               	goto	u1807
  3995  0619  2E16               opt asmopt_pop
  3996                           
  3997                           	line	22
  3998                           	
  3999                           l2007:	
  4000  061A                     ;LCD_hd44780u_qy_2004a.c: 22:   setData(0x3);
  4001                           	movlw	low(03h)
  4002  061A  3003               	fcall	_setData
  4003  061B  3187  271F  3186   	line	23
  4004                           	
  4005                           l2009:	
  4006  061E                     ;LCD_hd44780u_qy_2004a.c: 23:   _delay((unsigned long)((5)*(16000000/4000.0)));
  4007                           	opt asmopt_push
  4008                           opt asmopt_off
  4009                           movlw	26
  4010  061E  301A               	movlb 0	; select bank0
  4011  061F  0020               movwf	((??_initLCD+0)+0),f
  4012  0620  00B6               	movlw	248
  4013  0621  30F8               u1817:
  4014  0622                     decfsz	wreg
  4015  0622  0B89               	goto	u1817
  4016  0623  2E22               	decfsz	((??_initLCD+0)+0),f
  4017  0624  0BB6               	goto	u1817
  4018  0625  2E22               	nop
  4019  0626  0000               opt asmopt_pop
  4020                           
  4021                           	line	24
  4022                           ;LCD_hd44780u_qy_2004a.c: 24:   setData(0x3);
  4023                           	movlw	low(03h)
  4024  0627  3003               	fcall	_setData
  4025  0628  3187  271F  3186   	line	25
  4026                           	
  4027                           l2011:	
  4028  062B                     ;LCD_hd44780u_qy_2004a.c: 25:   _delay((unsigned long)((150)*(16000000/4000000.0)));
  4029                           	opt asmopt_push
  4030                           opt asmopt_off
  4031                           	movlw	200
  4032  062B  30C8               u1827:
  4033  062C                     decfsz	wreg
  4034  062C  0B89               	goto	u1827
  4035  062D  2E2C               opt asmopt_pop
  4036                           
  4037                           	line	26
  4038                           	
  4039                           l2013:	
  4040  062E                     ;LCD_hd44780u_qy_2004a.c: 26:   setData(0x3);
  4041                           	movlw	low(03h)
  4042  062E  3003               	fcall	_setData
  4043  062F  3187  271F  3186   	line	27
  4044                           ;LCD_hd44780u_qy_2004a.c: 27:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  4045                           	opt asmopt_push
  4046                           opt asmopt_off
  4047                           	movlw	13
  4048  0632  300D               u1837:
  4049  0633                     decfsz	wreg
  4050  0633  0B89               	goto	u1837
  4051  0634  2E33               	nop
  4052  0635  0000               opt asmopt_pop
  4053                           
  4054                           	line	28
  4055                           	
  4056                           l2015:	
  4057  0636                     ;LCD_hd44780u_qy_2004a.c: 28:   setData(0x2);
  4058                           	movlw	low(02h)
  4059  0636  3002               	fcall	_setData
  4060  0637  3187  271F  3186   	line	29
  4061                           	
  4062                           l2017:	
  4063  063A                     ;LCD_hd44780u_qy_2004a.c: 29:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  4064                           	opt asmopt_push
  4065                           opt asmopt_off
  4066                           	movlw	13
  4067  063A  300D               u1847:
  4068  063B                     decfsz	wreg
  4069  063B  0B89               	goto	u1847
  4070  063C  2E3B               	nop
  4071  063D  0000               opt asmopt_pop
  4072                           
  4073                           	line	30
  4074                           ;LCD_hd44780u_qy_2004a.c: 30:   writeInsChk(0x28);
  4075                           	movlw	low(028h)
  4076  063E  3028               	fcall	_writeInsChk
  4077  063F  318E  2640  3186   	line	31
  4078                           	
  4079                           l2019:	
  4080  0642                     ;LCD_hd44780u_qy_2004a.c: 31:   mDisplayOnOffReg = 0x0F;
  4081                           	movlw	low(0Fh)
  4082  0642  300F               	movlb 0	; select bank0
  4083  0643  0020               	movwf	(??_initLCD+0)+0
  4084  0644  00B6               	movf	(??_initLCD+0)+0,w
  4085  0645  0836               	movwf	(_mDisplayOnOffReg)
  4086  0646  00DC               	line	32
  4087                           	
  4088                           l2021:	
  4089  0647                     ;LCD_hd44780u_qy_2004a.c: 32:   mCursorDisplayShiftReg= 0x06;
  4090                           	movlw	low(06h)
  4091  0647  3006               	movwf	(??_initLCD+0)+0
  4092  0648  00B6               	movf	(??_initLCD+0)+0,w
  4093  0649  0836               	movwf	(_mCursorDisplayShiftReg)
  4094  064A  00DB               	line	33
  4095                           ;LCD_hd44780u_qy_2004a.c: 33:   writeInsChk(mDisplayOnOffReg);
  4096                           	movf	(_mDisplayOnOffReg),w
  4097  064B  085C               	fcall	_writeInsChk
  4098  064C  318E  2640  3186   	line	35
  4099                           ;LCD_hd44780u_qy_2004a.c: 35:   clearDisplay();
  4100                           	fcall	_clearDisplay
  4101  064F  318E  2617  3186   	line	36
  4102                           ;LCD_hd44780u_qy_2004a.c: 36:   writeInsChk(0x06);
  4103                           	movlw	low(06h)
  4104  0652  3006               	fcall	_writeInsChk
  4105  0653  318E  2640  3186   	line	37
  4106                           	
  4107                           l2023:	
  4108  0656                     ;LCD_hd44780u_qy_2004a.c: 37:   mWritingPosition=1;
  4109                           	movlb 0	; select bank0
  4110  0656  0020               	clrf	(_mWritingPosition)
  4111  0657  01DA               	incf	(_mWritingPosition),f
  4112  0658  0ADA               	line	39
  4113                           	
  4114                           l238:	
  4115  0659                     	return
  4116  0659  0008               	opt stack 0
  4117                           GLOBAL	__end_of_initLCD
  4118                           	__end_of_initLCD:
  4119  065A                     	signat	_initLCD,89
  4120                           	global	_clearDisplay
  4121                           
  4122 ;; *************** function _clearDisplay *****************
  4123 ;; Defined at:
  4124 ;;		line 245 in file "LCD_hd44780u_qy_2004a.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;		None
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;		None
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      void 
  4131 ;; Registers used:
  4132 ;;		wreg, status,2, status,0, pclath, cstack
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4142 ;;Total ram usage:        0 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    7
  4145 ;; This function calls:
  4146 ;;		_writeInsChk
  4147 ;; This function is called by:
  4148 ;;		_main
  4149 ;;		_initLCD
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4153                           	line	245
  4154                           global __ptext9
  4155                           __ptext9:	;psect for function _clearDisplay
  4156  0E17                     psect	text9
  4157                           	file	"LCD_hd44780u_qy_2004a.c"
  4158                           	line	245
  4159                           	global	__size_of_clearDisplay
  4160                           	__size_of_clearDisplay	equ	__end_of_clearDisplay-_clearDisplay
  4161  0005                     	
  4162                           _clearDisplay:	
  4163  0E17                     ;incstack = 0
  4164                           	opt	stack 7
  4165                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  4166                           	line	247
  4167                           	
  4168                           l1863:	
  4169  0E17                     ;LCD_hd44780u_qy_2004a.c: 247:   writeInsChk(0x01);
  4170                           	movlw	low(01h)
  4171  0E17  3001               	fcall	_writeInsChk
  4172  0E18  318E  2640  318E   	line	248
  4173                           	
  4174                           l330:	
  4175  0E1B                     	return
  4176  0E1B  0008               	opt stack 0
  4177                           GLOBAL	__end_of_clearDisplay
  4178                           	__end_of_clearDisplay:
  4179  0E1C                     	signat	_clearDisplay,89
  4180                           	global	_writeInsChk
  4181                           
  4182 ;; *************** function _writeInsChk *****************
  4183 ;; Defined at:
  4184 ;;		line 132 in file "LCD_hd44780u_qy_2004a.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  iOpCode         1    wreg     unsigned char 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  iOpCode         1   21[BANK0 ] unsigned char 
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      void 
  4191 ;; Registers used:
  4192 ;;		wreg, status,2, status,0, pclath, cstack
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4199 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4201 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4202 ;;Total ram usage:        1 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; Hardware stack levels required when called:    6
  4205 ;; This function calls:
  4206 ;;		_waitLCDBusy
  4207 ;;		_writeInsNoChk
  4208 ;; This function is called by:
  4209 ;;		_initLCD
  4210 ;;		_powerOnLcd
  4211 ;;		_setNotBlinkingCursor
  4212 ;;		_setCursorOff
  4213 ;;		_clearDisplay
  4214 ;;		_moveCursorToHome
  4215 ;;		_powerOffLcd
  4216 ;;		_setBlinkingCursor
  4217 ;;		_setCursorOn
  4218 ;;		_setCursorMovingLeft
  4219 ;;		_setCursorMovingRight
  4220 ;;		_setDisplayMovingRight
  4221 ;;		_setDisplayMovingLeft
  4222 ;;		_moveCursorRight
  4223 ;;		_moveCursorLeft
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  4227                           	line	132
  4228                           global __ptext10
  4229                           __ptext10:	;psect for function _writeInsChk
  4230  0E40                     psect	text10
  4231                           	file	"LCD_hd44780u_qy_2004a.c"
  4232                           	line	132
  4233                           	global	__size_of_writeInsChk
  4234                           	__size_of_writeInsChk	equ	__end_of_writeInsChk-_writeInsChk
  4235  000B                     	
  4236                           _writeInsChk:	
  4237  0E40                     ;incstack = 0
  4238                           	opt	stack 8
  4239                           ; Regs used in _writeInsChk: [wreg+status,2+status,0+pclath+cstack]
  4240                           ;writeInsChk@iOpCode stored from wreg
  4241                           	movlb 0	; select bank0
  4242  0E40  0020               	movwf	(writeInsChk@iOpCode)
  4243  0E41  00B5               	line	134
  4244                           	
  4245                           l1731:	
  4246  0E42                     ;LCD_hd44780u_qy_2004a.c: 132: void writeInsChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 33: {;LCD_hd44780u_qy_2004a.c: 134:   waitLCDBusy();
  4247                           	fcall	_waitLCDBusy
  4248  0E42  318F  27D3  318E   	line	135
  4249                           ;LCD_hd44780u_qy_2004a.c: 135:   writeInsNoChk(iOpCode);
  4250                           	movlb 0	; select bank0
  4251  0E45  0020               	movf	(writeInsChk@iOpCode),w
  4252  0E46  0835               	fcall	_writeInsNoChk
  4253  0E47  318E  2680  318E   	line	136
  4254                           	
  4255                           l276:	
  4256  0E4A                     	return
  4257  0E4A  0008               	opt stack 0
  4258                           GLOBAL	__end_of_writeInsChk
  4259                           	__end_of_writeInsChk:
  4260  0E4B                     	signat	_writeInsChk,4217
  4261                           	global	_writeInsNoChk
  4262                           
  4263 ;; *************** function _writeInsNoChk *****************
  4264 ;; Defined at:
  4265 ;;		line 138 in file "LCD_hd44780u_qy_2004a.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;  iOpCode         1    wreg     unsigned char 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  iOpCode         1   20[BANK0 ] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      void 
  4272 ;; Registers used:
  4273 ;;		wreg, status,2, status,0, pclath, cstack
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4280 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4281 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4282 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  4283 ;;Total ram usage:        2 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:    5
  4286 ;; This function calls:
  4287 ;;		_SetToSendDataToLCD
  4288 ;;		_setData
  4289 ;; This function is called by:
  4290 ;;		_writeInsChk
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4294                           	line	138
  4295                           global __ptext11
  4296                           __ptext11:	;psect for function _writeInsNoChk
  4297  0E80                     psect	text11
  4298                           	file	"LCD_hd44780u_qy_2004a.c"
  4299                           	line	138
  4300                           	global	__size_of_writeInsNoChk
  4301                           	__size_of_writeInsNoChk	equ	__end_of_writeInsNoChk-_writeInsNoChk
  4302  0018                     	
  4303                           _writeInsNoChk:	
  4304  0E80                     ;incstack = 0
  4305                           	opt	stack 8
  4306                           ; Regs used in _writeInsNoChk: [wreg+status,2+status,0+pclath+cstack]
  4307                           ;writeInsNoChk@iOpCode stored from wreg
  4308                           	movlb 0	; select bank0
  4309  0E80  0020               	movwf	(writeInsNoChk@iOpCode)
  4310  0E81  00B4               	line	140
  4311                           	
  4312                           l1711:	
  4313  0E82                     ;LCD_hd44780u_qy_2004a.c: 138: void writeInsNoChk(char iOpCode);LCD_hd44780u_qy_2004a.c:
                                  139: {;LCD_hd44780u_qy_2004a.c: 140:   SetToSendDataToLCD();
  4314                           	fcall	_SetToSendDataToLCD
  4315  0E82  318E  261C  318E   	line	141
  4316                           	
  4317                           l1713:	
  4318  0E85                     ;LCD_hd44780u_qy_2004a.c: 141:   PORTAbits.RA4 = 0;
  4319                           	movlb 0	; select bank0
  4320  0E85  0020               	bcf	(12),4	;volatile
  4321  0E86  120C               	line	142
  4322                           	
  4323                           l1715:	
  4324  0E87                     ;LCD_hd44780u_qy_2004a.c: 142:   PORTAbits.RA7 = 0;
  4325                           	bcf	(12),7	;volatile
  4326  0E87  138C               	line	143
  4327                           	
  4328                           l1717:	
  4329  0E88                     ;LCD_hd44780u_qy_2004a.c: 143:   setData(iOpCode >> 4);
  4330                           	movf	(writeInsNoChk@iOpCode),w
  4331  0E88  0834               	movwf	(??_writeInsNoChk+0)+0
  4332  0E89  00B3               	movlw	04h
  4333  0E8A  3004               u825:
  4334  0E8B                     	lsrf	(??_writeInsNoChk+0)+0,f
  4335  0E8B  36B3               	decfsz	wreg,f
  4336  0E8C  0B89               	goto	u825
  4337  0E8D  2E8B               	movf	0+(??_writeInsNoChk+0)+0,w
  4338  0E8E  0833               	fcall	_setData
  4339  0E8F  3187  271F  318E   	line	144
  4340                           	
  4341                           l1719:	
  4342  0E92                     ;LCD_hd44780u_qy_2004a.c: 144:   setData(iOpCode);
  4343                           	movlb 0	; select bank0
  4344  0E92  0020               	movf	(writeInsNoChk@iOpCode),w
  4345  0E93  0834               	fcall	_setData
  4346  0E94  3187  271F  318E   	line	145
  4347                           	
  4348                           l279:	
  4349  0E97                     	return
  4350  0E97  0008               	opt stack 0
  4351                           GLOBAL	__end_of_writeInsNoChk
  4352                           	__end_of_writeInsNoChk:
  4353  0E98                     	signat	_writeInsNoChk,4217
  4354                           	global	_WakeTemp
  4355                           
  4356 ;; *************** function _WakeTemp *****************
  4357 ;; Defined at:
  4358 ;;		line 101 in file "161518_temp_main.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;		None
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;		None
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  1    wreg      void 
  4365 ;; Registers used:
  4366 ;;		wreg, status,2, status,0
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4374 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4375 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4376 ;;Total ram usage:        1 bytes
  4377 ;; Hardware stack levels used:    1
  4378 ;; Hardware stack levels required when called:    4
  4379 ;; This function calls:
  4380 ;;		Nothing
  4381 ;; This function is called by:
  4382 ;;		_main
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  4386                           	file	"161518_temp_main.c"
  4387                           	line	101
  4388                           global __ptext12
  4389                           __ptext12:	;psect for function _WakeTemp
  4390  0E6C                     psect	text12
  4391                           	file	"161518_temp_main.c"
  4392                           	line	101
  4393                           	global	__size_of_WakeTemp
  4394                           	__size_of_WakeTemp	equ	__end_of_WakeTemp-_WakeTemp
  4395  0014                     	
  4396                           _WakeTemp:	
  4397  0E6C                     ;incstack = 0
  4398                           	opt	stack 11
  4399                           ; Regs used in _WakeTemp: [wreg+status,2+status,0]
  4400                           	line	103
  4401                           	
  4402                           l1955:	
  4403  0E6C                     	movlb 1	; select bank1
  4404  0E6C  0021               	bsf	(145)^080h,3	;volatile
  4405  0E6D  1591               	line	104
  4406                           	
  4407                           l1957:	
  4408  0E6E                     	movlb 0	; select bank0
  4409  0E6E  0020               	movf	((_wI2CTxBufferSize)),w
  4410  0E6F  0858               	btfss	status,2
  4411  0E70  1D03               	goto	u1151
  4412  0E71  2E73               	goto	u1150
  4413  0E72  2E74               u1151:
  4414  0E73                     	goto	l125
  4415  0E73  2E7F               u1150:
  4416  0E74                     	line	106
  4417                           	
  4418                           l1959:	
  4419  0E74                     	movlw	low(0B8h)
  4420  0E74  30B8               	movwf	(??_WakeTemp+0)+0
  4421  0E75  00B0               	movf	(??_WakeTemp+0)+0,w
  4422  0E76  0830               	movlb 1	; select bank1
  4423  0E77  0021               	movwf	(_wI2CTxBuffer)^080h
  4424  0E78  00D4               	line	107
  4425                           	
  4426                           l1961:	
  4427  0E79                     	movlb 0	; select bank0
  4428  0E79  0020               	clrf	(_wI2CTxBufferSize)
  4429  0E7A  01D8               	incf	(_wI2CTxBufferSize),f
  4430  0E7B  0AD8               	line	108
  4431                           	
  4432                           l1963:	
  4433  0E7C                     	movlb 4	; select bank4
  4434  0E7C  0024               	bsf	(534)^0200h,0	;volatile
  4435  0E7D  1416               	goto	l125
  4436  0E7E  2E7F               	line	109
  4437                           	
  4438                           l124:	
  4439  0E7F                     	line	110
  4440                           	
  4441                           l125:	
  4442  0E7F                     	return
  4443  0E7F  0008               	opt stack 0
  4444                           GLOBAL	__end_of_WakeTemp
  4445                           	__end_of_WakeTemp:
  4446  0E80                     	signat	_WakeTemp,89
  4447                           	global	_SetToGetTemp
  4448                           
  4449 ;; *************** function _SetToGetTemp *****************
  4450 ;; Defined at:
  4451 ;;		line 65 in file "161518_temp_main.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;		None
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;		None
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  1    wreg      void 
  4458 ;; Registers used:
  4459 ;;		wreg, status,2, status,0
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4467 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4468 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4469 ;;Total ram usage:        1 bytes
  4470 ;; Hardware stack levels used:    1
  4471 ;; Hardware stack levels required when called:    4
  4472 ;; This function calls:
  4473 ;;		Nothing
  4474 ;; This function is called by:
  4475 ;;		_main
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4479                           	line	65
  4480                           global __ptext13
  4481                           __ptext13:	;psect for function _SetToGetTemp
  4482  0F5A                     psect	text13
  4483                           	file	"161518_temp_main.c"
  4484                           	line	65
  4485                           	global	__size_of_SetToGetTemp
  4486                           	__size_of_SetToGetTemp	equ	__end_of_SetToGetTemp-_SetToGetTemp
  4487  0026                     	
  4488                           _SetToGetTemp:	
  4489  0F5A                     ;incstack = 0
  4490                           	opt	stack 11
  4491                           ; Regs used in _SetToGetTemp: [wreg+status,2+status,0]
  4492                           	line	67
  4493                           	
  4494                           l1921:	
  4495  0F5A                     	movlb 0	; select bank0
  4496  0F5A  0020               	movf	((_wI2CTxBufferSize)),w
  4497  0F5B  0858               	btfss	status,2
  4498  0F5C  1D03               	goto	u1121
  4499  0F5D  2F5F               	goto	u1120
  4500  0F5E  2F60               u1121:
  4501  0F5F                     	goto	l113
  4502  0F5F  2F7F               u1120:
  4503  0F60                     	line	69
  4504                           	
  4505                           l1923:	
  4506  0F60                     	movlb 1	; select bank1
  4507  0F60  0021               	bsf	(145)^080h,3	;volatile
  4508  0F61  1591               	line	70
  4509                           	movlb 4	; select bank4
  4510  0F62  0024               	bsf	(535)^0200h,7	;volatile
  4511  0F63  1797               	line	71
  4512                           	
  4513                           l1925:	
  4514  0F64                     	movlw	low(0B8h)
  4515  0F64  30B8               	movlb 0	; select bank0
  4516  0F65  0020               	movwf	(??_SetToGetTemp+0)+0
  4517  0F66  00B0               	movf	(??_SetToGetTemp+0)+0,w
  4518  0F67  0830               	movlb 1	; select bank1
  4519  0F68  0021               	movwf	(_wI2CTxBuffer)^080h
  4520  0F69  00D4               	line	72
  4521                           	movlw	low(03h)
  4522  0F6A  3003               	movlb 0	; select bank0
  4523  0F6B  0020               	movwf	(??_SetToGetTemp+0)+0
  4524  0F6C  00B0               	movf	(??_SetToGetTemp+0)+0,w
  4525  0F6D  0830               	movlb 1	; select bank1
  4526  0F6E  0021               	movwf	0+(_wI2CTxBuffer)^080h+01h
  4527  0F6F  00D5               	line	73
  4528                           	
  4529                           l1927:	
  4530  0F70                     	clrf	0+(_wI2CTxBuffer)^080h+02h
  4531  0F70  01D6               	line	74
  4532                           	
  4533                           l1929:	
  4534  0F71                     	movlw	low(04h)
  4535  0F71  3004               	movlb 0	; select bank0
  4536  0F72  0020               	movwf	(??_SetToGetTemp+0)+0
  4537  0F73  00B0               	movf	(??_SetToGetTemp+0)+0,w
  4538  0F74  0830               	movlb 1	; select bank1
  4539  0F75  0021               	movwf	0+(_wI2CTxBuffer)^080h+03h
  4540  0F76  00D7               	line	75
  4541                           	
  4542                           l1931:	
  4543  0F77                     	movlw	low(04h)
  4544  0F77  3004               	movlb 0	; select bank0
  4545  0F78  0020               	movwf	(??_SetToGetTemp+0)+0
  4546  0F79  00B0               	movf	(??_SetToGetTemp+0)+0,w
  4547  0F7A  0830               	movwf	(_wI2CTxBufferSize)
  4548  0F7B  00D8               	line	76
  4549                           	
  4550                           l1933:	
  4551  0F7C                     	movlb 4	; select bank4
  4552  0F7C  0024               	bsf	(534)^0200h,0	;volatile
  4553  0F7D  1416               	goto	l113
  4554  0F7E  2F7F               	line	77
  4555                           	
  4556                           l112:	
  4557  0F7F                     	line	78
  4558                           	
  4559                           l113:	
  4560  0F7F                     	return
  4561  0F7F  0008               	opt stack 0
  4562                           GLOBAL	__end_of_SetToGetTemp
  4563                           	__end_of_SetToGetTemp:
  4564  0F80                     	signat	_SetToGetTemp,89
  4565                           	global	_PrintLog
  4566                           
  4567 ;; *************** function _PrintLog *****************
  4568 ;; Defined at:
  4569 ;;		line 111 in file "161518_temp_main.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  iText           1    wreg     PTR unsigned char 
  4572 ;;		 -> wInterruptText(75), 
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;  iText           1   38[BANK0 ] PTR unsigned char 
  4575 ;;		 -> wInterruptText(75), 
  4576 ;;  wInterruptTe    1   37[BANK0 ] unsigned char 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      void 
  4579 ;; Registers used:
  4580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4587 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  4588 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  4589 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4590 ;;Total ram usage:        4 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:    9
  4593 ;; This function calls:
  4594 ;;		_lcdWriteText
  4595 ;;		_memset
  4596 ;;		_strlen
  4597 ;; This function is called by:
  4598 ;;		_main
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4602                           	line	111
  4603                           global __ptext14
  4604                           __ptext14:	;psect for function _PrintLog
  4605  07CF                     psect	text14
  4606                           	file	"161518_temp_main.c"
  4607                           	line	111
  4608                           	global	__size_of_PrintLog
  4609                           	__size_of_PrintLog	equ	__end_of_PrintLog-_PrintLog
  4610  002E                     	
  4611                           _PrintLog:	
  4612  07CF                     ;incstack = 0
  4613                           	opt	stack 6
  4614                           ; Regs used in _PrintLog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4615                           ;PrintLog@iText stored from wreg
  4616                           	movlb 0	; select bank0
  4617  07CF  0020               	movwf	(PrintLog@iText)
  4618  07D0  00C6               	line	113
  4619                           	
  4620                           l2541:	
  4621  07D1                     	movf	(PrintLog@iText),w
  4622  07D1  0846               	movwf	(strlen@s)
  4623  07D2  00B0               	movlw	0x1
  4624  07D3  3001               
  4625                           	movwf	(strlen@s+1)
  4626  07D4  00B1               	fcall	_strlen
  4627  07D5  318F  2711  3187   	movlb 0	; select bank0
  4628  07D8  0020               	movf	(0+(?_strlen)),w
  4629  07D9  0830               	movwf	(??_PrintLog+0)+0
  4630  07DA  00C3               	movf	(??_PrintLog+0)+0,w
  4631  07DB  0843               	movwf	(PrintLog@wInterruptTextLen)
  4632  07DC  00C5               	line	115
  4633                           	
  4634                           l2543:	
  4635  07DD                     	movf	((PrintLog@wInterruptTextLen)),w
  4636  07DD  0845               	btfsc	status,2
  4637  07DE  1903               	goto	u1611
  4638  07DF  2FE1               	goto	u1610
  4639  07E0  2FE2               u1611:
  4640  07E1                     	goto	l129
  4641  07E1  2FFC               u1610:
  4642  07E2                     	line	117
  4643                           	
  4644                           l2545:	
  4645  07E2                     	movf	(PrintLog@iText),w
  4646  07E2  0846               	movwf	(lcdWriteText@iText)
  4647  07E3  00BD               	movlw	0x1
  4648  07E4  3001               
  4649                           	movwf	(lcdWriteText@iText+1)
  4650  07E5  00BE               	fcall	_lcdWriteText
  4651  07E6  318F  27A9  3187   	line	118
  4652                           	
  4653                           l2547:	
  4654  07E9                     	movlb 0	; select bank0
  4655  07E9  0020               	movf	(PrintLog@iText),w
  4656  07EA  0846               	movwf	(memset@dest)
  4657  07EB  00B0               	movlw	0x1
  4658  07EC  3001               
  4659                           	movwf	(memset@dest+1)
  4660  07ED  00B1               	movlw	0
  4661  07EE  3000               	movwf	(memset@c)
  4662  07EF  00B2               	movwf	(memset@c+1)
  4663  07F0  00B3               	movf	(PrintLog@wInterruptTextLen),w
  4664  07F1  0845               	movwf	(??_PrintLog+0)+0
  4665  07F2  00C3               	clrf	(??_PrintLog+0)+0+1
  4666  07F3  01C4               	movf	0+(??_PrintLog+0)+0,w
  4667  07F4  0843               	movwf	(memset@n)
  4668  07F5  00B4               	movf	1+(??_PrintLog+0)+0,w
  4669  07F6  0844               	movwf	(memset@n+1)
  4670  07F7  00B5               	fcall	_memset
  4671  07F8  3183  23D6  3187   	goto	l129
  4672  07FB  2FFC               	line	119
  4673                           	
  4674                           l128:	
  4675  07FC                     	line	120
  4676                           	
  4677                           l129:	
  4678  07FC                     	return
  4679  07FC  0008               	opt stack 0
  4680                           GLOBAL	__end_of_PrintLog
  4681                           	__end_of_PrintLog:
  4682  07FD                     	signat	_PrintLog,4217
  4683                           	global	_lcdWriteText
  4684                           
  4685 ;; *************** function _lcdWriteText *****************
  4686 ;; Defined at:
  4687 ;;		line 41 in file "LCD_hd44780u_qy_2004a.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;  iText           2   29[BANK0 ] PTR unsigned char 
  4690 ;;		 -> STR_6(16), STR_5(16), STR_4(16), STR_3(16), 
  4691 ;;		 -> main@wConv(4), wInterruptText(75), 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  wCharReading    1   34[BANK0 ] unsigned char 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  1    wreg      void 
  4696 ;; Registers used:
  4697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4703 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  4704 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4705 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  4706 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  4707 ;;Total ram usage:        6 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; Hardware stack levels required when called:    8
  4710 ;; This function calls:
  4711 ;;		_writeTxtChk
  4712 ;; This function is called by:
  4713 ;;		_PrintLog
  4714 ;;		_main
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  4718                           	file	"LCD_hd44780u_qy_2004a.c"
  4719                           	line	41
  4720                           global __ptext15
  4721                           __ptext15:	;psect for function _lcdWriteText
  4722  0FA9                     psect	text15
  4723                           	file	"LCD_hd44780u_qy_2004a.c"
  4724                           	line	41
  4725                           	global	__size_of_lcdWriteText
  4726                           	__size_of_lcdWriteText	equ	__end_of_lcdWriteText-_lcdWriteText
  4727  002A                     	
  4728                           _lcdWriteText:	
  4729  0FA9                     ;incstack = 0
  4730                           	opt	stack 7
  4731                           ; Regs used in _lcdWriteText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4732                           	line	43
  4733                           	
  4734                           l1855:	
  4735  0FA9                     ;LCD_hd44780u_qy_2004a.c: 41: void lcdWriteText(char *iText);LCD_hd44780u_qy_2004a.c: 42
                                 :  {;LCD_hd44780u_qy_2004a.c: 43:   unsigned char wCharReadingPos = 0;
  4736                           	movlb 0	; select bank0
  4737  0FA9  0020               	clrf	(lcdWriteText@wCharReadingPos)
  4738  0FAA  01C2               	line	44
  4739                           ;LCD_hd44780u_qy_2004a.c: 44:   while( iText[wCharReadingPos] != 0)
  4740                           	goto	l1861
  4741  0FAB  2FC1               	
  4742                           l242:	
  4743  0FAC                     	line	46
  4744                           	
  4745                           l1857:	
  4746  0FAC                     ;LCD_hd44780u_qy_2004a.c: 45:   {;LCD_hd44780u_qy_2004a.c: 46:     writeTxtChk(iText[wCh
                                 arReadingPos]);
  4747                           	movf	(lcdWriteText@iText+1),w
  4748  0FAC  083E               	movwf	(??_lcdWriteText+0)+0+1
  4749  0FAD  00C0               	movf	(lcdWriteText@iText),w
  4750  0FAE  083D               	movwf	(??_lcdWriteText+0)+0
  4751  0FAF  00BF               	movf	(lcdWriteText@wCharReadingPos),w
  4752  0FB0  0842               	addwf	(??_lcdWriteText+0)+0,w
  4753  0FB1  073F               	movwf	fsr0l
  4754  0FB2  0084               	movf	(??_lcdWriteText+0)+1,w
  4755  0FB3  0840               	skipnc
  4756  0FB4  1803               	incf	(??_lcdWriteText+0)+1,w
  4757  0FB5  0A40               	movwf	fsr0h
  4758  0FB6  0085               
  4759                           	movf	indf0,w ;code access
  4760  0FB7  0800               	fcall	_writeTxtChk
  4761  0FB8  3184  24A7  318F   	line	47
  4762                           	
  4763                           l1859:	
  4764  0FBB                     ;LCD_hd44780u_qy_2004a.c: 47:     wCharReadingPos++;
  4765                           	movlw	low(01h)
  4766  0FBB  3001               	movlb 0	; select bank0
  4767  0FBC  0020               	movwf	(??_lcdWriteText+0)+0
  4768  0FBD  00BF               	movf	(??_lcdWriteText+0)+0,w
  4769  0FBE  083F               	addwf	(lcdWriteText@wCharReadingPos),f
  4770  0FBF  07C2               	goto	l1861
  4771  0FC0  2FC1               	line	48
  4772                           ;LCD_hd44780u_qy_2004a.c: 48:   }
  4773                           	
  4774                           l241:	
  4775  0FC1                     	line	44
  4776                           	
  4777                           l1861:	
  4778  0FC1                     ;LCD_hd44780u_qy_2004a.c: 44:   while( iText[wCharReadingPos] != 0)
  4779                           	movf	(lcdWriteText@iText+1),w
  4780  0FC1  083E               	movwf	(??_lcdWriteText+0)+0+1
  4781  0FC2  00C0               	movf	(lcdWriteText@iText),w
  4782  0FC3  083D               	movwf	(??_lcdWriteText+0)+0
  4783  0FC4  00BF               	movf	(lcdWriteText@wCharReadingPos),w
  4784  0FC5  0842               	addwf	(??_lcdWriteText+0)+0,w
  4785  0FC6  073F               	movwf	fsr0l
  4786  0FC7  0084               	movf	(??_lcdWriteText+0)+1,w
  4787  0FC8  0840               	skipnc
  4788  0FC9  1803               	incf	(??_lcdWriteText+0)+1,w
  4789  0FCA  0A40               	movwf	fsr0h
  4790  0FCB  0085               
  4791                           	moviw	fsr0++
  4792  0FCC  0012               	btfss	status,2
  4793  0FCD  1D03               	goto	u971
  4794  0FCE  2FD0               	goto	u970
  4795  0FCF  2FD1               u971:
  4796  0FD0                     	goto	l1857
  4797  0FD0  2FAC               u970:
  4798  0FD1                     	goto	l244
  4799  0FD1  2FD2               	
  4800                           l243:	
  4801  0FD2                     	line	50
  4802                           	
  4803                           l244:	
  4804  0FD2                     	return
  4805  0FD2  0008               	opt stack 0
  4806                           GLOBAL	__end_of_lcdWriteText
  4807                           	__end_of_lcdWriteText:
  4808  0FD3                     	signat	_lcdWriteText,4217
  4809                           	global	_writeTxtChk
  4810                           
  4811 ;; *************** function _writeTxtChk *****************
  4812 ;; Defined at:
  4813 ;;		line 79 in file "LCD_hd44780u_qy_2004a.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  iOpCode         1    wreg     unsigned char 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  iOpCode         1   28[BANK0 ] unsigned char 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4828 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4829 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  4830 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  4831 ;;Total ram usage:        3 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; Hardware stack levels required when called:    7
  4834 ;; This function calls:
  4835 ;;		_SetToSendDataToLCD
  4836 ;;		_setCursorPosition
  4837 ;;		_setData
  4838 ;;		_waitLCDBusy
  4839 ;; This function is called by:
  4840 ;;		_lcdWriteText
  4841 ;;		_lcdWriteRotText
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  4845                           	line	79
  4846                           global __ptext16
  4847                           __ptext16:	;psect for function _writeTxtChk
  4848  04A7                     psect	text16
  4849                           	file	"LCD_hd44780u_qy_2004a.c"
  4850                           	line	79
  4851                           	global	__size_of_writeTxtChk
  4852                           	__size_of_writeTxtChk	equ	__end_of_writeTxtChk-_writeTxtChk
  4853  0097                     	
  4854                           _writeTxtChk:	
  4855  04A7                     ;incstack = 0
  4856                           	opt	stack 7
  4857                           ; Regs used in _writeTxtChk: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4858                           ;writeTxtChk@iOpCode stored from wreg
  4859                           	movlb 0	; select bank0
  4860  04A7  0020               	movwf	(writeTxtChk@iOpCode)
  4861  04A8  00BC               	line	81
  4862                           	
  4863                           l1733:	
  4864  04A9                     ;LCD_hd44780u_qy_2004a.c: 79: void writeTxtChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 80
                                 : {;LCD_hd44780u_qy_2004a.c: 81:   SetToSendDataToLCD();
  4865                           	fcall	_SetToSendDataToLCD
  4866  04A9  318E  261C  3184   	line	82
  4867                           	
  4868                           l1735:	
  4869  04AC                     ;LCD_hd44780u_qy_2004a.c: 82:   PORTAbits.RA4 = 1;
  4870                           	movlb 0	; select bank0
  4871  04AC  0020               	bsf	(12),4	;volatile
  4872  04AD  160C               	line	83
  4873                           	
  4874                           l1737:	
  4875  04AE                     ;LCD_hd44780u_qy_2004a.c: 83:   PORTAbits.RA7 = 0;
  4876                           	bcf	(12),7	;volatile
  4877  04AE  138C               	line	84
  4878                           	
  4879                           l1739:	
  4880  04AF                     ;LCD_hd44780u_qy_2004a.c: 84:   if(iOpCode == '\n')
  4881                           		movlw	10
  4882  04AF  300A               	xorwf	((writeTxtChk@iOpCode)),w
  4883  04B0  063C               	btfss	status,2
  4884  04B1  1D03               	goto	u841
  4885  04B2  2CB4               	goto	u840
  4886  04B3  2CB5               u841:
  4887  04B4                     	goto	l1769
  4888  04B4  2D07               u840:
  4889  04B5                     	line	86
  4890                           	
  4891                           l1741:	
  4892  04B5                     ;LCD_hd44780u_qy_2004a.c: 85:   {;LCD_hd44780u_qy_2004a.c: 86:    if(mWritingPosition < 
                                 20)
  4893                           	movlw	low(014h)
  4894  04B5  3014               	subwf	(_mWritingPosition),w
  4895  04B6  025A               	skipnc
  4896  04B7  1803               	goto	u851
  4897  04B8  2CBA               	goto	u850
  4898  04B9  2CBB               u851:
  4899  04BA                     	goto	l1745
  4900  04BA  2CC1               u850:
  4901  04BB                     	line	88
  4902                           	
  4903                           l1743:	
  4904  04BB                     ;LCD_hd44780u_qy_2004a.c: 87:    {;LCD_hd44780u_qy_2004a.c: 88:        setCursorPosition
                                 (1,0);
  4905                           	clrf	(setCursorPosition@iPosition)
  4906  04BB  01B5               	movlw	low(01h)
  4907  04BC  3001               	fcall	_setCursorPosition
  4908  04BD  3185  25AA  3184   	line	89
  4909                           ;LCD_hd44780u_qy_2004a.c: 89:    }
  4910                           	goto	l266
  4911  04C0  2D3D               	line	90
  4912                           ;LCD_hd44780u_qy_2004a.c: 90:    else if(mWritingPosition < 40)
  4913                           	
  4914                           l260:	
  4915  04C1                     	
  4916                           l1745:	
  4917  04C1                     	movlw	low(028h)
  4918  04C1  3028               	movlb 0	; select bank0
  4919  04C2  0020               	subwf	(_mWritingPosition),w
  4920  04C3  025A               	skipnc
  4921  04C4  1803               	goto	u861
  4922  04C5  2CC7               	goto	u860
  4923  04C6  2CC8               u861:
  4924  04C7                     	goto	l1749
  4925  04C7  2CCE               u860:
  4926  04C8                     	line	92
  4927                           	
  4928                           l1747:	
  4929  04C8                     ;LCD_hd44780u_qy_2004a.c: 91:    {;LCD_hd44780u_qy_2004a.c: 92:        setCursorPosition
                                 (2,0);
  4930                           	clrf	(setCursorPosition@iPosition)
  4931  04C8  01B5               	movlw	low(02h)
  4932  04C9  3002               	fcall	_setCursorPosition
  4933  04CA  3185  25AA  3184   	line	93
  4934                           ;LCD_hd44780u_qy_2004a.c: 93:    }
  4935                           	goto	l266
  4936  04CD  2D3D               	line	94
  4937                           ;LCD_hd44780u_qy_2004a.c: 94:    else if(mWritingPosition < 60)
  4938                           	
  4939                           l262:	
  4940  04CE                     	
  4941                           l1749:	
  4942  04CE                     	movlw	low(03Ch)
  4943  04CE  303C               	movlb 0	; select bank0
  4944  04CF  0020               	subwf	(_mWritingPosition),w
  4945  04D0  025A               	skipnc
  4946  04D1  1803               	goto	u871
  4947  04D2  2CD4               	goto	u870
  4948  04D3  2CD5               u871:
  4949  04D4                     	goto	l1753
  4950  04D4  2CDB               u870:
  4951  04D5                     	line	96
  4952                           	
  4953                           l1751:	
  4954  04D5                     ;LCD_hd44780u_qy_2004a.c: 95:    {;LCD_hd44780u_qy_2004a.c: 96:        setCursorPosition
                                 (3,0);
  4955                           	clrf	(setCursorPosition@iPosition)
  4956  04D5  01B5               	movlw	low(03h)
  4957  04D6  3003               	fcall	_setCursorPosition
  4958  04D7  3185  25AA  3184   	line	97
  4959                           ;LCD_hd44780u_qy_2004a.c: 97:    }
  4960                           	goto	l266
  4961  04DA  2D3D               	line	98
  4962                           ;LCD_hd44780u_qy_2004a.c: 98:    else
  4963                           	
  4964                           l264:	
  4965  04DB                     	line	100
  4966                           	
  4967                           l1753:	
  4968  04DB                     ;LCD_hd44780u_qy_2004a.c: 99:    {;LCD_hd44780u_qy_2004a.c: 100:        setCursorPositio
                                 n(0,0);
  4969                           	movlb 0	; select bank0
  4970  04DB  0020               	clrf	(setCursorPosition@iPosition)
  4971  04DC  01B5               	movlw	low(0)
  4972  04DD  3000               	fcall	_setCursorPosition
  4973  04DE  3185  25AA  3184   	goto	l266
  4974  04E1  2D3D               	line	101
  4975                           ;LCD_hd44780u_qy_2004a.c: 101:    }
  4976                           	
  4977                           l265:	
  4978  04E2                     	goto	l266
  4979  04E2  2D3D               	
  4980                           l263:	
  4981  04E3                     	goto	l266
  4982  04E3  2D3D               	
  4983                           l261:	
  4984  04E4                     	goto	l266
  4985  04E4  2D3D               	line	102
  4986                           	
  4987                           l1755:	
  4988  04E5                     ;LCD_hd44780u_qy_2004a.c: 102:    return;
  4989                           	goto	l266
  4990  04E5  2D3D               	line	103
  4991                           ;LCD_hd44780u_qy_2004a.c: 103:   }
  4992                           	
  4993                           l259:	
  4994  04E6                     	line	104
  4995                           ;LCD_hd44780u_qy_2004a.c: 104:   switch(mWritingPosition)
  4996                           	goto	l1769
  4997  04E6  2D07               	line	106
  4998                           ;LCD_hd44780u_qy_2004a.c: 105:   {;LCD_hd44780u_qy_2004a.c: 106:     case 20:
  4999                           	
  5000                           l268:	
  5001  04E7                     	line	107
  5002                           	
  5003                           l1757:	
  5004  04E7                     ;LCD_hd44780u_qy_2004a.c: 107:       setCursorPosition(1,0);
  5005                           	movlb 0	; select bank0
  5006  04E7  0020               	clrf	(setCursorPosition@iPosition)
  5007  04E8  01B5               	movlw	low(01h)
  5008  04E9  3001               	fcall	_setCursorPosition
  5009  04EA  3185  25AA  3184   	line	108
  5010                           ;LCD_hd44780u_qy_2004a.c: 108:       break;
  5011                           	goto	l1771
  5012  04ED  2D1E               	line	109
  5013                           ;LCD_hd44780u_qy_2004a.c: 109:     case 40:
  5014                           	
  5015                           l270:	
  5016  04EE                     	line	110
  5017                           	
  5018                           l1759:	
  5019  04EE                     ;LCD_hd44780u_qy_2004a.c: 110:       setCursorPosition(2,0);
  5020                           	movlb 0	; select bank0
  5021  04EE  0020               	clrf	(setCursorPosition@iPosition)
  5022  04EF  01B5               	movlw	low(02h)
  5023  04F0  3002               	fcall	_setCursorPosition
  5024  04F1  3185  25AA  3184   	line	111
  5025                           ;LCD_hd44780u_qy_2004a.c: 111:       break;
  5026                           	goto	l1771
  5027  04F4  2D1E               	line	112
  5028                           ;LCD_hd44780u_qy_2004a.c: 112:     case 60:
  5029                           	
  5030                           l271:	
  5031  04F5                     	line	113
  5032                           	
  5033                           l1761:	
  5034  04F5                     ;LCD_hd44780u_qy_2004a.c: 113:       setCursorPosition(3,0);
  5035                           	movlb 0	; select bank0
  5036  04F5  0020               	clrf	(setCursorPosition@iPosition)
  5037  04F6  01B5               	movlw	low(03h)
  5038  04F7  3003               	fcall	_setCursorPosition
  5039  04F8  3185  25AA  3184   	line	114
  5040                           ;LCD_hd44780u_qy_2004a.c: 114:       break;
  5041                           	goto	l1771
  5042  04FB  2D1E               	line	115
  5043                           ;LCD_hd44780u_qy_2004a.c: 115:     case 80:
  5044                           	
  5045                           l272:	
  5046  04FC                     	line	116
  5047                           	
  5048                           l1763:	
  5049  04FC                     ;LCD_hd44780u_qy_2004a.c: 116:       setCursorPosition(0,0);
  5050                           	movlb 0	; select bank0
  5051  04FC  0020               	clrf	(setCursorPosition@iPosition)
  5052  04FD  01B5               	movlw	low(0)
  5053  04FE  3000               	fcall	_setCursorPosition
  5054  04FF  3185  25AA  3184   	line	117
  5055                           	
  5056                           l1765:	
  5057  0502                     ;LCD_hd44780u_qy_2004a.c: 117:       mWritingPosition = 0;
  5058                           	movlb 0	; select bank0
  5059  0502  0020               	clrf	(_mWritingPosition)
  5060  0503  01DA               	line	118
  5061                           ;LCD_hd44780u_qy_2004a.c: 118:       break;
  5062                           	goto	l1771
  5063  0504  2D1E               	line	119
  5064                           ;LCD_hd44780u_qy_2004a.c: 119:     default:
  5065                           	
  5066                           l273:	
  5067  0505                     	line	120
  5068                           ;LCD_hd44780u_qy_2004a.c: 120:       break;
  5069                           	goto	l1771
  5070  0505  2D1E               	line	121
  5071                           	
  5072                           l1767:	
  5073  0506                     ;LCD_hd44780u_qy_2004a.c: 121:   }
  5074                           	goto	l1771
  5075  0506  2D1E               	
  5076                           l267:	
  5077  0507                     	
  5078                           l1769:	
  5079  0507                     	movlb 0	; select bank0
  5080  0507  0020               	movf	(_mWritingPosition),w
  5081  0508  085A               	movwf	(??_writeTxtChk+0)+0
  5082  0509  00BA               	clrf	(??_writeTxtChk+0)+0+1
  5083  050A  01BB               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5084                           ; Switch size 1, requested type "space"
  5085                           ; Number of cases is 1, Range of values is 0 to 0
  5086                           ; switch strategies available:
  5087                           ; Name         Instructions Cycles
  5088                           ; simple_byte            4     3 (average)
  5089                           ; direct_byte            8     6 (fixed)
  5090                           ; jumptable            260     6 (fixed)
  5091                           ;	Chosen strategy is simple_byte
  5092                           
  5093                           	movf 1+(??_writeTxtChk+0)+0,w
  5094  050B  083B               	opt asmopt_push
  5095                           	opt asmopt_off
  5096                           	xorlw	0^0	; case 0
  5097  050C  3A00               	skipnz
  5098  050D  1903               	goto	l2855
  5099  050E  2D10               	goto	l1771
  5100  050F  2D1E               	opt asmopt_pop
  5101                           	
  5102                           l2855:	
  5103  0510                     ; Switch size 1, requested type "space"
  5104                           ; Number of cases is 4, Range of values is 20 to 80
  5105                           ; switch strategies available:
  5106                           ; Name         Instructions Cycles
  5107                           ; simple_byte           13     7 (average)
  5108                           ; direct_byte          131     9 (fixed)
  5109                           ; jumptable            263     9 (fixed)
  5110                           ;	Chosen strategy is simple_byte
  5111                           
  5112                           	movf 0+(??_writeTxtChk+0)+0,w
  5113  0510  083A               	opt asmopt_push
  5114                           	opt asmopt_off
  5115                           	xorlw	20^0	; case 20
  5116  0511  3A14               	skipnz
  5117  0512  1903               	goto	l1757
  5118  0513  2CE7               	xorlw	40^20	; case 40
  5119  0514  3A3C               	skipnz
  5120  0515  1903               	goto	l1759
  5121  0516  2CEE               	xorlw	60^40	; case 60
  5122  0517  3A14               	skipnz
  5123  0518  1903               	goto	l1761
  5124  0519  2CF5               	xorlw	80^60	; case 80
  5125  051A  3A6C               	skipnz
  5126  051B  1903               	goto	l1763
  5127  051C  2CFC               	goto	l1771
  5128  051D  2D1E               	opt asmopt_pop
  5129                           
  5130                           	
  5131                           l269:	
  5132  051E                     	line	122
  5133                           	
  5134                           l1771:	
  5135  051E                     ;LCD_hd44780u_qy_2004a.c: 122:   waitLCDBusy();
  5136                           	fcall	_waitLCDBusy
  5137  051E  318F  27D3  3184   	line	123
  5138                           	
  5139                           l1773:	
  5140  0521                     ;LCD_hd44780u_qy_2004a.c: 123:   SetToSendDataToLCD();
  5141                           	fcall	_SetToSendDataToLCD
  5142  0521  318E  261C  3184   	line	124
  5143                           	
  5144                           l1775:	
  5145  0524                     ;LCD_hd44780u_qy_2004a.c: 124:   PORTAbits.RA4 = 1;
  5146                           	movlb 0	; select bank0
  5147  0524  0020               	bsf	(12),4	;volatile
  5148  0525  160C               	line	125
  5149                           	
  5150                           l1777:	
  5151  0526                     ;LCD_hd44780u_qy_2004a.c: 125:   PORTAbits.RA7 = 0;
  5152                           	bcf	(12),7	;volatile
  5153  0526  138C               	line	126
  5154                           	
  5155                           l1779:	
  5156  0527                     ;LCD_hd44780u_qy_2004a.c: 126:   setData(iOpCode >> 4);
  5157                           	movf	(writeTxtChk@iOpCode),w
  5158  0527  083C               	movwf	(??_writeTxtChk+0)+0
  5159  0528  00BA               	movlw	04h
  5160  0529  3004               u885:
  5161  052A                     	lsrf	(??_writeTxtChk+0)+0,f
  5162  052A  36BA               	decfsz	wreg,f
  5163  052B  0B89               	goto	u885
  5164  052C  2D2A               	movf	0+(??_writeTxtChk+0)+0,w
  5165  052D  083A               	fcall	_setData
  5166  052E  3187  271F  3184   	line	127
  5167                           	
  5168                           l1781:	
  5169  0531                     ;LCD_hd44780u_qy_2004a.c: 127:   setData(iOpCode);
  5170                           	movlb 0	; select bank0
  5171  0531  0020               	movf	(writeTxtChk@iOpCode),w
  5172  0532  083C               	fcall	_setData
  5173  0533  3187  271F  3184   	line	128
  5174                           	
  5175                           l1783:	
  5176  0536                     ;LCD_hd44780u_qy_2004a.c: 128:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  5177                           		opt asmopt_push
  5178                           	opt asmopt_off
  5179                           	nop2	;2 cycle nop
  5180  0536  3200               	nop2	;2 cycle nop
  5181  0537  3200               	opt asmopt_pop
  5182                           
  5183                           	line	129
  5184                           	
  5185                           l1785:	
  5186  0538                     ;LCD_hd44780u_qy_2004a.c: 129:   mWritingPosition++;
  5187                           	movlw	low(01h)
  5188  0538  3001               	movlb 0	; select bank0
  5189  0539  0020               	movwf	(??_writeTxtChk+0)+0
  5190  053A  00BA               	movf	(??_writeTxtChk+0)+0,w
  5191  053B  083A               	addwf	(_mWritingPosition),f
  5192  053C  07DA               	line	130
  5193                           	
  5194                           l266:	
  5195  053D                     	return
  5196  053D  0008               	opt stack 0
  5197                           GLOBAL	__end_of_writeTxtChk
  5198                           	__end_of_writeTxtChk:
  5199  053E                     	signat	_writeTxtChk,4217
  5200                           	global	_setCursorPosition
  5201                           
  5202 ;; *************** function _setCursorPosition *****************
  5203 ;; Defined at:
  5204 ;;		line 254 in file "LCD_hd44780u_qy_2004a.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;  iLine           1    wreg     unsigned char 
  5207 ;;  iPosition       1   21[BANK0 ] unsigned char 
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;  iLine           1   24[BANK0 ] unsigned char 
  5210 ;;  wLCDIndex       1   25[BANK0 ] unsigned char 
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      void 
  5213 ;; Registers used:
  5214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5220 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5221 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5222 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5223 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  5224 ;;Total ram usage:        5 bytes
  5225 ;; Hardware stack levels used:    1
  5226 ;; Hardware stack levels required when called:    6
  5227 ;; This function calls:
  5228 ;;		_SetToSendDataToLCD
  5229 ;;		_setData
  5230 ;;		_waitLCDBusy
  5231 ;; This function is called by:
  5232 ;;		_main
  5233 ;;		_writeTxtChk
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5237                           	line	254
  5238                           global __ptext17
  5239                           __ptext17:	;psect for function _setCursorPosition
  5240  05AA                     psect	text17
  5241                           	file	"LCD_hd44780u_qy_2004a.c"
  5242                           	line	254
  5243                           	global	__size_of_setCursorPosition
  5244                           	__size_of_setCursorPosition	equ	__end_of_setCursorPosition-_setCursorPosition
  5245  0060                     	
  5246                           _setCursorPosition:	
  5247  05AA                     ;incstack = 0
  5248                           	opt	stack 9
  5249                           ; Regs used in _setCursorPosition: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5250                           ;setCursorPosition@iLine stored from wreg
  5251                           	movlb 0	; select bank0
  5252  05AA  0020               	movwf	(setCursorPosition@iLine)
  5253  05AB  00B8               	line	256
  5254                           	
  5255                           l1681:	
  5256  05AC                     ;LCD_hd44780u_qy_2004a.c: 254: void setCursorPosition(char iLine, char iPosition);LCD_hd
                                 44780u_qy_2004a.c: 255: {;LCD_hd44780u_qy_2004a.c: 256:   char wLCDIndex=0;
  5257                           	clrf	(setCursorPosition@wLCDIndex)
  5258  05AC  01B9               	line	258
  5259                           ;LCD_hd44780u_qy_2004a.c: 258:   switch(iLine)
  5260                           	goto	l1693
  5261  05AD  2DDA               	line	260
  5262                           ;LCD_hd44780u_qy_2004a.c: 259:   {;LCD_hd44780u_qy_2004a.c: 260:       case 0:
  5263                           	
  5264                           l337:	
  5265  05AE                     	line	261
  5266                           	
  5267                           l1683:	
  5268  05AE                     ;LCD_hd44780u_qy_2004a.c: 261:           wLCDIndex = 0x00 + iPosition;
  5269                           	movf	(setCursorPosition@iPosition),w
  5270  05AE  0835               	movwf	(??_setCursorPosition+0)+0
  5271  05AF  00B6               	movf	(??_setCursorPosition+0)+0,w
  5272  05B0  0836               	movwf	(setCursorPosition@wLCDIndex)
  5273  05B1  00B9               	line	262
  5274                           ;LCD_hd44780u_qy_2004a.c: 262:           mWritingPosition = iPosition;
  5275                           	movf	(setCursorPosition@iPosition),w
  5276  05B2  0835               	movwf	(??_setCursorPosition+0)+0
  5277  05B3  00B6               	movf	(??_setCursorPosition+0)+0,w
  5278  05B4  0836               	movwf	(_mWritingPosition)
  5279  05B5  00DA               	line	263
  5280                           ;LCD_hd44780u_qy_2004a.c: 263:           break;
  5281                           	goto	l1695
  5282  05B6  2DF0               	line	264
  5283                           ;LCD_hd44780u_qy_2004a.c: 264:       case 1:
  5284                           	
  5285                           l339:	
  5286  05B7                     	line	265
  5287                           	
  5288                           l1685:	
  5289  05B7                     ;LCD_hd44780u_qy_2004a.c: 265:           wLCDIndex = 0x40 + iPosition;
  5290                           	movf	(setCursorPosition@iPosition),w
  5291  05B7  0835               	addlw	040h
  5292  05B8  3E40               	movwf	(??_setCursorPosition+0)+0
  5293  05B9  00B6               	movf	(??_setCursorPosition+0)+0,w
  5294  05BA  0836               	movwf	(setCursorPosition@wLCDIndex)
  5295  05BB  00B9               	line	266
  5296                           ;LCD_hd44780u_qy_2004a.c: 266:           mWritingPosition = 20 + iPosition;
  5297                           	movf	(setCursorPosition@iPosition),w
  5298  05BC  0835               	addlw	014h
  5299  05BD  3E14               	movwf	(??_setCursorPosition+0)+0
  5300  05BE  00B6               	movf	(??_setCursorPosition+0)+0,w
  5301  05BF  0836               	movwf	(_mWritingPosition)
  5302  05C0  00DA               	line	267
  5303                           ;LCD_hd44780u_qy_2004a.c: 267:           break;
  5304                           	goto	l1695
  5305  05C1  2DF0               	line	268
  5306                           ;LCD_hd44780u_qy_2004a.c: 268:       case 2:
  5307                           	
  5308                           l340:	
  5309  05C2                     	line	269
  5310                           	
  5311                           l1687:	
  5312  05C2                     ;LCD_hd44780u_qy_2004a.c: 269:           wLCDIndex = 0x14 + iPosition;
  5313                           	movf	(setCursorPosition@iPosition),w
  5314  05C2  0835               	addlw	014h
  5315  05C3  3E14               	movwf	(??_setCursorPosition+0)+0
  5316  05C4  00B6               	movf	(??_setCursorPosition+0)+0,w
  5317  05C5  0836               	movwf	(setCursorPosition@wLCDIndex)
  5318  05C6  00B9               	line	270
  5319                           ;LCD_hd44780u_qy_2004a.c: 270:           mWritingPosition = 40 + iPosition;
  5320                           	movf	(setCursorPosition@iPosition),w
  5321  05C7  0835               	addlw	028h
  5322  05C8  3E28               	movwf	(??_setCursorPosition+0)+0
  5323  05C9  00B6               	movf	(??_setCursorPosition+0)+0,w
  5324  05CA  0836               	movwf	(_mWritingPosition)
  5325  05CB  00DA               	line	271
  5326                           ;LCD_hd44780u_qy_2004a.c: 271:           break;
  5327                           	goto	l1695
  5328  05CC  2DF0               	line	272
  5329                           ;LCD_hd44780u_qy_2004a.c: 272:       case 3:
  5330                           	
  5331                           l341:	
  5332  05CD                     	line	273
  5333                           	
  5334                           l1689:	
  5335  05CD                     ;LCD_hd44780u_qy_2004a.c: 273:           wLCDIndex = 0x54 + iPosition;
  5336                           	movf	(setCursorPosition@iPosition),w
  5337  05CD  0835               	addlw	054h
  5338  05CE  3E54               	movwf	(??_setCursorPosition+0)+0
  5339  05CF  00B6               	movf	(??_setCursorPosition+0)+0,w
  5340  05D0  0836               	movwf	(setCursorPosition@wLCDIndex)
  5341  05D1  00B9               	line	274
  5342                           ;LCD_hd44780u_qy_2004a.c: 274:           mWritingPosition = 60 + iPosition;
  5343                           	movf	(setCursorPosition@iPosition),w
  5344  05D2  0835               	addlw	03Ch
  5345  05D3  3E3C               	movwf	(??_setCursorPosition+0)+0
  5346  05D4  00B6               	movf	(??_setCursorPosition+0)+0,w
  5347  05D5  0836               	movwf	(_mWritingPosition)
  5348  05D6  00DA               	line	275
  5349                           ;LCD_hd44780u_qy_2004a.c: 275:           break;
  5350                           	goto	l1695
  5351  05D7  2DF0               	line	276
  5352                           ;LCD_hd44780u_qy_2004a.c: 276:       default:
  5353                           	
  5354                           l342:	
  5355  05D8                     	line	277
  5356                           ;LCD_hd44780u_qy_2004a.c: 277:       break;
  5357                           	goto	l1695
  5358  05D8  2DF0               	line	278
  5359                           	
  5360                           l1691:	
  5361  05D9                     ;LCD_hd44780u_qy_2004a.c: 278:   }
  5362                           	goto	l1695
  5363  05D9  2DF0               	
  5364                           l336:	
  5365  05DA                     	
  5366                           l1693:	
  5367  05DA                     	movf	(setCursorPosition@iLine),w
  5368  05DA  0838               	movwf	(??_setCursorPosition+0)+0
  5369  05DB  00B6               	clrf	(??_setCursorPosition+0)+0+1
  5370  05DC  01B7               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5371                           ; Switch size 1, requested type "space"
  5372                           ; Number of cases is 1, Range of values is 0 to 0
  5373                           ; switch strategies available:
  5374                           ; Name         Instructions Cycles
  5375                           ; simple_byte            4     3 (average)
  5376                           ; direct_byte            8     6 (fixed)
  5377                           ; jumptable            260     6 (fixed)
  5378                           ;	Chosen strategy is simple_byte
  5379                           
  5380                           	movf 1+(??_setCursorPosition+0)+0,w
  5381  05DD  0837               	opt asmopt_push
  5382                           	opt asmopt_off
  5383                           	xorlw	0^0	; case 0
  5384  05DE  3A00               	skipnz
  5385  05DF  1903               	goto	l2857
  5386  05E0  2DE2               	goto	l1695
  5387  05E1  2DF0               	opt asmopt_pop
  5388                           	
  5389                           l2857:	
  5390  05E2                     ; Switch size 1, requested type "space"
  5391                           ; Number of cases is 4, Range of values is 0 to 3
  5392                           ; switch strategies available:
  5393                           ; Name         Instructions Cycles
  5394                           ; simple_byte           13     7 (average)
  5395                           ; direct_byte           14     6 (fixed)
  5396                           ; jumptable            260     6 (fixed)
  5397                           ;	Chosen strategy is simple_byte
  5398                           
  5399                           	movf 0+(??_setCursorPosition+0)+0,w
  5400  05E2  0836               	opt asmopt_push
  5401                           	opt asmopt_off
  5402                           	xorlw	0^0	; case 0
  5403  05E3  3A00               	skipnz
  5404  05E4  1903               	goto	l1683
  5405  05E5  2DAE               	xorlw	1^0	; case 1
  5406  05E6  3A01               	skipnz
  5407  05E7  1903               	goto	l1685
  5408  05E8  2DB7               	xorlw	2^1	; case 2
  5409  05E9  3A03               	skipnz
  5410  05EA  1903               	goto	l1687
  5411  05EB  2DC2               	xorlw	3^2	; case 3
  5412  05EC  3A01               	skipnz
  5413  05ED  1903               	goto	l1689
  5414  05EE  2DCD               	goto	l1695
  5415  05EF  2DF0               	opt asmopt_pop
  5416                           
  5417                           	
  5418                           l338:	
  5419  05F0                     	line	280
  5420                           	
  5421                           l1695:	
  5422  05F0                     ;LCD_hd44780u_qy_2004a.c: 280:   waitLCDBusy();
  5423                           	fcall	_waitLCDBusy
  5424  05F0  318F  27D3  3185   	line	282
  5425                           	
  5426                           l1697:	
  5427  05F3                     ;LCD_hd44780u_qy_2004a.c: 282:   SetToSendDataToLCD();
  5428                           	fcall	_SetToSendDataToLCD
  5429  05F3  318E  261C  3185   	line	283
  5430                           	
  5431                           l1699:	
  5432  05F6                     ;LCD_hd44780u_qy_2004a.c: 283:   PORTAbits.RA4 = 0;
  5433                           	movlb 0	; select bank0
  5434  05F6  0020               	bcf	(12),4	;volatile
  5435  05F7  120C               	line	284
  5436                           	
  5437                           l1701:	
  5438  05F8                     ;LCD_hd44780u_qy_2004a.c: 284:   PORTAbits.RA7 = 0;
  5439                           	bcf	(12),7	;volatile
  5440  05F8  138C               	line	285
  5441                           	
  5442                           l1703:	
  5443  05F9                     ;LCD_hd44780u_qy_2004a.c: 285:   setData((wLCDIndex >> 4) | 0x8 );
  5444                           	movf	(setCursorPosition@wLCDIndex),w
  5445  05F9  0839               	movwf	(??_setCursorPosition+0)+0
  5446  05FA  00B6               	movlw	04h
  5447  05FB  3004               u815:
  5448  05FC                     	lsrf	(??_setCursorPosition+0)+0,f
  5449  05FC  36B6               	decfsz	wreg,f
  5450  05FD  0B89               	goto	u815
  5451  05FE  2DFC               	movf	0+(??_setCursorPosition+0)+0,w
  5452  05FF  0836               	iorlw	08h
  5453  0600  3808               	fcall	_setData
  5454  0601  3187  271F  3185   	line	286
  5455                           	
  5456                           l1705:	
  5457  0604                     ;LCD_hd44780u_qy_2004a.c: 286:   setData(wLCDIndex);
  5458                           	movlb 0	; select bank0
  5459  0604  0020               	movf	(setCursorPosition@wLCDIndex),w
  5460  0605  0839               	fcall	_setData
  5461  0606  3187  271F  3185   	line	288
  5462                           	
  5463                           l343:	
  5464  0609                     	return
  5465  0609  0008               	opt stack 0
  5466                           GLOBAL	__end_of_setCursorPosition
  5467                           	__end_of_setCursorPosition:
  5468  060A                     	signat	_setCursorPosition,8313
  5469                           	global	_waitLCDBusy
  5470                           
  5471 ;; *************** function _waitLCDBusy *****************
  5472 ;; Defined at:
  5473 ;;		line 162 in file "LCD_hd44780u_qy_2004a.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;		None
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  busyFlag        2   19[BANK0 ] int 
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      void 
  5480 ;; Registers used:
  5481 ;;		wreg, status,2, status,0, pclath, cstack
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5488 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5489 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  5490 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  5491 ;;Total ram usage:        5 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:    5
  5494 ;; This function calls:
  5495 ;;		_SetToReadDataFromLCD
  5496 ;; This function is called by:
  5497 ;;		_writeTxtChk
  5498 ;;		_writeInsChk
  5499 ;;		_setCursorPosition
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5503                           	line	162
  5504                           global __ptext18
  5505                           __ptext18:	;psect for function _waitLCDBusy
  5506  0FD3                     psect	text18
  5507                           	file	"LCD_hd44780u_qy_2004a.c"
  5508                           	line	162
  5509                           	global	__size_of_waitLCDBusy
  5510                           	__size_of_waitLCDBusy	equ	__end_of_waitLCDBusy-_waitLCDBusy
  5511  002D                     	
  5512                           _waitLCDBusy:	
  5513  0FD3                     ;incstack = 0
  5514                           	opt	stack 8
  5515                           ; Regs used in _waitLCDBusy: [wreg+status,2+status,0+pclath+cstack]
  5516                           	line	164
  5517                           	
  5518                           l1665:	
  5519  0FD3                     ;LCD_hd44780u_qy_2004a.c: 164:   PORTAbits.RA4 = 0;
  5520                           	movlb 0	; select bank0
  5521  0FD3  0020               	bcf	(12),4	;volatile
  5522  0FD4  120C               	line	165
  5523                           ;LCD_hd44780u_qy_2004a.c: 165:   PORTAbits.RA7 = 1;
  5524                           	bsf	(12),7	;volatile
  5525  0FD5  178C               	line	167
  5526                           	
  5527                           l1667:	
  5528  0FD6                     ;LCD_hd44780u_qy_2004a.c: 167:   SetToReadDataFromLCD();
  5529                           	fcall	_SetToReadDataFromLCD
  5530  0FD6  318E  2622  318F   	line	169
  5531                           	
  5532                           l1669:	
  5533  0FD9                     ;LCD_hd44780u_qy_2004a.c: 169:   int busyFlag = 1;
  5534                           	movlw	01h
  5535  0FD9  3001               	movlb 0	; select bank0
  5536  0FDA  0020               	movwf	(waitLCDBusy@busyFlag)
  5537  0FDB  00B3               	movlw	0
  5538  0FDC  3000               	movwf	((waitLCDBusy@busyFlag))+1
  5539  0FDD  00B4               	line	170
  5540                           ;LCD_hd44780u_qy_2004a.c: 170:   while(busyFlag == 1)
  5541                           	goto	l288
  5542  0FDE  2FF7               	
  5543                           l289:	
  5544  0FDF                     	line	173
  5545                           ;LCD_hd44780u_qy_2004a.c: 171:   {;LCD_hd44780u_qy_2004a.c: 173:     PORTAbits.RA5 = 1;

  5546                           	bsf	(12),5	;volatile
  5547  0FDF  168C               	line	174
  5548                           ;LCD_hd44780u_qy_2004a.c: 174:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  5549                           		opt asmopt_push
  5550                           	opt asmopt_off
  5551                           	nop2	;2 cycle nop
  5552  0FE0  3200               	nop2	;2 cycle nop
  5553  0FE1  3200               	opt asmopt_pop
  5554                           
  5555                           	line	175
  5556                           	
  5557                           l1671:	
  5558  0FE2                     ;LCD_hd44780u_qy_2004a.c: 175:     busyFlag = PORTAbits.RA3;
  5559                           	movlb 0	; select bank0
  5560  0FE2  0020               	rrf	(12),w	;volatile
  5561  0FE3  0C0C               	movwf	(??_waitLCDBusy+0)+0
  5562  0FE4  00B0               	rrf	(??_waitLCDBusy+0)+0,f
  5563  0FE5  0CB0               	rrf	(??_waitLCDBusy+0)+0,w
  5564  0FE6  0C30               	andlw	(1<<1)-1
  5565  0FE7  3901               	movwf	(??_waitLCDBusy+1)+0
  5566  0FE8  00B1               	clrf	(??_waitLCDBusy+1)+0+1
  5567  0FE9  01B2               	movf	0+(??_waitLCDBusy+1)+0,w
  5568  0FEA  0831               	movwf	(waitLCDBusy@busyFlag)
  5569  0FEB  00B3               	movf	1+(??_waitLCDBusy+1)+0,w
  5570  0FEC  0832               	movwf	(waitLCDBusy@busyFlag+1)
  5571  0FED  00B4               	line	176
  5572                           	
  5573                           l1673:	
  5574  0FEE                     ;LCD_hd44780u_qy_2004a.c: 176:     PORTAbits.RA5 = 0;
  5575                           	bcf	(12),5	;volatile
  5576  0FEE  128C               	line	177
  5577                           	
  5578                           l1675:	
  5579  0FEF                     ;LCD_hd44780u_qy_2004a.c: 177:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  5580                           		opt asmopt_push
  5581                           	opt asmopt_off
  5582                           	nop2	;2 cycle nop
  5583  0FEF  3200               	nop2	;2 cycle nop
  5584  0FF0  3200               	nop2	;2 cycle nop
  5585  0FF1  3200               	nop2	;2 cycle nop
  5586  0FF2  3200               	opt asmopt_pop
  5587                           
  5588                           	line	179
  5589                           	
  5590                           l1677:	
  5591  0FF3                     ;LCD_hd44780u_qy_2004a.c: 179:     PORTAbits.RA5 = 1;
  5592                           	movlb 0	; select bank0
  5593  0FF3  0020               	bsf	(12),5	;volatile
  5594  0FF4  168C               	line	180
  5595                           	
  5596                           l1679:	
  5597  0FF5                     ;LCD_hd44780u_qy_2004a.c: 180:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  5598                           		opt asmopt_push
  5599                           	opt asmopt_off
  5600                           	nop2	;2 cycle nop
  5601  0FF5  3200               	nop2	;2 cycle nop
  5602  0FF6  3200               	opt asmopt_pop
  5603                           
  5604                           	line	181
  5605                           ;LCD_hd44780u_qy_2004a.c: 181:   }
  5606                           	
  5607                           l288:	
  5608  0FF7                     	line	170
  5609                           ;LCD_hd44780u_qy_2004a.c: 170:   while(busyFlag == 1)
  5610                           	movlb 0	; select bank0
  5611  0FF7  0020               		decf	((waitLCDBusy@busyFlag)),w
  5612  0FF8  0333               iorwf	((waitLCDBusy@busyFlag+1)),w
  5613  0FF9  0434               	btfsc	status,2
  5614  0FFA  1903               	goto	u801
  5615  0FFB  2FFD               	goto	u800
  5616  0FFC  2FFE               u801:
  5617  0FFD                     	goto	l289
  5618  0FFD  2FDF               u800:
  5619  0FFE                     	goto	l291
  5620  0FFE  2FFF               	
  5621                           l290:	
  5622  0FFF                     	line	182
  5623                           	
  5624                           l291:	
  5625  0FFF                     	return
  5626  0FFF  0008               	opt stack 0
  5627                           GLOBAL	__end_of_waitLCDBusy
  5628                           	__end_of_waitLCDBusy:
  5629  1000                     	signat	_waitLCDBusy,89
  5630                           	global	_SetToReadDataFromLCD
  5631                           
  5632 ;; *************** function _SetToReadDataFromLCD *****************
  5633 ;; Defined at:
  5634 ;;		line 147 in file "LCD_hd44780u_qy_2004a.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;		None
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;		None
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		None
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5652 ;;Total ram usage:        0 bytes
  5653 ;; Hardware stack levels used:    1
  5654 ;; Hardware stack levels required when called:    4
  5655 ;; This function calls:
  5656 ;;		Nothing
  5657 ;; This function is called by:
  5658 ;;		_waitLCDBusy
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  5662                           	line	147
  5663                           global __ptext19
  5664                           __ptext19:	;psect for function _SetToReadDataFromLCD
  5665  0E22                     psect	text19
  5666                           	file	"LCD_hd44780u_qy_2004a.c"
  5667                           	line	147
  5668                           	global	__size_of_SetToReadDataFromLCD
  5669                           	__size_of_SetToReadDataFromLCD	equ	__end_of_SetToReadDataFromLCD-_SetToReadDataFromLCD

  5670  0006                     	
  5671                           _SetToReadDataFromLCD:	
  5672  0E22                     ;incstack = 0
  5673                           	opt	stack 8
  5674                           ; Regs used in _SetToReadDataFromLCD: []
  5675                           	line	149
  5676                           	
  5677                           l1651:	
  5678  0E22                     ;LCD_hd44780u_qy_2004a.c: 149:   TRISAbits.TRISA3 = 1;
  5679                           	movlb 1	; select bank1
  5680  0E22  0021               	bsf	(140)^080h,3	;volatile
  5681  0E23  158C               	line	150
  5682                           ;LCD_hd44780u_qy_2004a.c: 150:   TRISAbits.TRISA2 = 1;
  5683                           	bsf	(140)^080h,2	;volatile
  5684  0E24  150C               	line	151
  5685                           ;LCD_hd44780u_qy_2004a.c: 151:   TRISAbits.TRISA1 = 1;
  5686                           	bsf	(140)^080h,1	;volatile
  5687  0E25  148C               	line	152
  5688                           ;LCD_hd44780u_qy_2004a.c: 152:   TRISAbits.TRISA0 = 1;
  5689                           	bsf	(140)^080h,0	;volatile
  5690  0E26  140C               	line	153
  5691                           	
  5692                           l282:	
  5693  0E27                     	return
  5694  0E27  0008               	opt stack 0
  5695                           GLOBAL	__end_of_SetToReadDataFromLCD
  5696                           	__end_of_SetToReadDataFromLCD:
  5697  0E28                     	signat	_SetToReadDataFromLCD,89
  5698                           	global	_setData
  5699                           
  5700 ;; *************** function _setData *****************
  5701 ;; Defined at:
  5702 ;;		line 67 in file "LCD_hd44780u_qy_2004a.c"
  5703 ;; Parameters:    Size  Location     Type
  5704 ;;  iValue          1    wreg     unsigned char 
  5705 ;; Auto vars:     Size  Location     Type
  5706 ;;  iValue          1   18[BANK0 ] unsigned char 
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  1    wreg      void 
  5709 ;; Registers used:
  5710 ;;		wreg, status,2, status,0
  5711 ;; Tracked objects:
  5712 ;;		On entry : 0/0
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5717 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5718 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5719 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  5720 ;;Total ram usage:        3 bytes
  5721 ;; Hardware stack levels used:    1
  5722 ;; Hardware stack levels required when called:    4
  5723 ;; This function calls:
  5724 ;;		Nothing
  5725 ;; This function is called by:
  5726 ;;		_initLCD
  5727 ;;		_writeTxtChk
  5728 ;;		_writeInsNoChk
  5729 ;;		_setCursorPosition
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  5733                           	line	67
  5734                           global __ptext20
  5735                           __ptext20:	;psect for function _setData
  5736  071F                     psect	text20
  5737                           	file	"LCD_hd44780u_qy_2004a.c"
  5738                           	line	67
  5739                           	global	__size_of_setData
  5740                           	__size_of_setData	equ	__end_of_setData-_setData
  5741  003C                     	
  5742                           _setData:	
  5743  071F                     ;incstack = 0
  5744                           	opt	stack 8
  5745                           ; Regs used in _setData: [wreg+status,2+status,0]
  5746                           ;setData@iValue stored from wreg
  5747                           	movlb 0	; select bank0
  5748  071F  0020               	movwf	(setData@iValue)
  5749  0720  00B2               	line	69
  5750                           	
  5751                           l1653:	
  5752  0721                     ;LCD_hd44780u_qy_2004a.c: 67: void setData(char iValue);LCD_hd44780u_qy_2004a.c: 68: {;L
                                 CD_hd44780u_qy_2004a.c: 69:   PORTAbits.RA5 = 1;
  5753                           	bsf	(12),5	;volatile
  5754  0721  168C               	line	70
  5755                           	
  5756                           l1655:	
  5757  0722                     ;LCD_hd44780u_qy_2004a.c: 70:   PORTAbits.RA3 = (iValue & 0x8) >> 3;
  5758                           	movf	(setData@iValue),w
  5759  0722  0832               	movwf	(??_setData+0)+0
  5760  0723  00B0               	movlw	03h
  5761  0724  3003               u785:
  5762  0725                     	lsrf	(??_setData+0)+0,f
  5763  0725  36B0               	decfsz	wreg,f
  5764  0726  0B89               	goto	u785
  5765  0727  2F25               	movf	0+(??_setData+0)+0,w
  5766  0728  0830               	andlw	01h
  5767  0729  3901               	movwf	(??_setData+1)+0
  5768  072A  00B1               	rlf	(??_setData+1)+0,f
  5769  072B  0DB1               	rlf	(??_setData+1)+0,f
  5770  072C  0DB1               	rlf	(??_setData+1)+0,f
  5771  072D  0DB1               	movf	(12),w	;volatile
  5772  072E  080C               	xorwf	(??_setData+1)+0,w
  5773  072F  0631               	andlw	not (((1<<1)-1)<<3)
  5774  0730  39F7               	xorwf	(??_setData+1)+0,w
  5775  0731  0631               	movwf	(12)	;volatile
  5776  0732  008C               	line	71
  5777                           ;LCD_hd44780u_qy_2004a.c: 71:   PORTAbits.RA2 = (iValue & 0x4) >> 2;
  5778                           	movf	(setData@iValue),w
  5779  0733  0832               	movwf	(??_setData+0)+0
  5780  0734  00B0               	movlw	02h
  5781  0735  3002               u795:
  5782  0736                     	lsrf	(??_setData+0)+0,f
  5783  0736  36B0               	decfsz	wreg,f
  5784  0737  0B89               	goto	u795
  5785  0738  2F36               	movf	0+(??_setData+0)+0,w
  5786  0739  0830               	andlw	01h
  5787  073A  3901               	movwf	(??_setData+1)+0
  5788  073B  00B1               	rlf	(??_setData+1)+0,f
  5789  073C  0DB1               	rlf	(??_setData+1)+0,f
  5790  073D  0DB1               	movf	(12),w	;volatile
  5791  073E  080C               	xorwf	(??_setData+1)+0,w
  5792  073F  0631               	andlw	not (((1<<1)-1)<<2)
  5793  0740  39FB               	xorwf	(??_setData+1)+0,w
  5794  0741  0631               	movwf	(12)	;volatile
  5795  0742  008C               	line	72
  5796                           ;LCD_hd44780u_qy_2004a.c: 72:   PORTAbits.RA1 = (iValue & 0x2) >> 1;
  5797                           	lsrf	(setData@iValue),w
  5798  0743  3632               	andlw	01h
  5799  0744  3901               	movwf	(??_setData+0)+0
  5800  0745  00B0               	rlf	(??_setData+0)+0,f
  5801  0746  0DB0               	movf	(12),w	;volatile
  5802  0747  080C               	xorwf	(??_setData+0)+0,w
  5803  0748  0630               	andlw	not (((1<<1)-1)<<1)
  5804  0749  39FD               	xorwf	(??_setData+0)+0,w
  5805  074A  0630               	movwf	(12)	;volatile
  5806  074B  008C               	line	73
  5807                           ;LCD_hd44780u_qy_2004a.c: 73:   PORTAbits.RA0 = (iValue & 0x1) ;
  5808                           	movlw	low(01h)
  5809  074C  3001               	andwf	(setData@iValue),w
  5810  074D  0532               	movwf	(??_setData+0)+0
  5811  074E  00B0               	movf	(12),w	;volatile
  5812  074F  080C               	xorwf	0+(??_setData+0)+0,w
  5813  0750  0630               	andlw	not ((1<<1)-1)
  5814  0751  39FE               	xorwf	0+(??_setData+0)+0,w
  5815  0752  0630               	movwf	(12)	;volatile
  5816  0753  008C               	line	74
  5817                           	
  5818                           l1657:	
  5819  0754                     ;LCD_hd44780u_qy_2004a.c: 74:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  5820                           		opt asmopt_push
  5821                           	opt asmopt_off
  5822                           	nop2	;2 cycle nop
  5823  0754  3200               	nop2	;2 cycle nop
  5824  0755  3200               	opt asmopt_pop
  5825                           
  5826                           	line	75
  5827                           	
  5828                           l1659:	
  5829  0756                     ;LCD_hd44780u_qy_2004a.c: 75:   PORTAbits.RA5 = 0;
  5830                           	movlb 0	; select bank0
  5831  0756  0020               	bcf	(12),5	;volatile
  5832  0757  128C               	line	76
  5833                           	
  5834                           l1661:	
  5835  0758                     ;LCD_hd44780u_qy_2004a.c: 76:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  5836                           		opt asmopt_push
  5837                           	opt asmopt_off
  5838                           	nop2	;2 cycle nop
  5839  0758  3200               	nop2	;2 cycle nop
  5840  0759  3200               	opt asmopt_pop
  5841                           
  5842                           	line	77
  5843                           	
  5844                           l256:	
  5845  075A                     	return
  5846  075A  0008               	opt stack 0
  5847                           GLOBAL	__end_of_setData
  5848                           	__end_of_setData:
  5849  075B                     	signat	_setData,4217
  5850                           	global	_SetToSendDataToLCD
  5851                           
  5852 ;; *************** function _SetToSendDataToLCD *****************
  5853 ;; Defined at:
  5854 ;;		line 154 in file "LCD_hd44780u_qy_2004a.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;		None
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;		None
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  1    wreg      void 
  5861 ;; Registers used:
  5862 ;;		None
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5872 ;;Total ram usage:        0 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; Hardware stack levels required when called:    4
  5875 ;; This function calls:
  5876 ;;		Nothing
  5877 ;; This function is called by:
  5878 ;;		_writeTxtChk
  5879 ;;		_writeInsNoChk
  5880 ;;		_setCursorPosition
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  5884                           	line	154
  5885                           global __ptext21
  5886                           __ptext21:	;psect for function _SetToSendDataToLCD
  5887  0E1C                     psect	text21
  5888                           	file	"LCD_hd44780u_qy_2004a.c"
  5889                           	line	154
  5890                           	global	__size_of_SetToSendDataToLCD
  5891                           	__size_of_SetToSendDataToLCD	equ	__end_of_SetToSendDataToLCD-_SetToSendDataToLCD
  5892  0006                     	
  5893                           _SetToSendDataToLCD:	
  5894  0E1C                     ;incstack = 0
  5895                           	opt	stack 8
  5896                           ; Regs used in _SetToSendDataToLCD: []
  5897                           	line	156
  5898                           	
  5899                           l1663:	
  5900  0E1C                     ;LCD_hd44780u_qy_2004a.c: 156:   TRISAbits.TRISA3 = 0;;
  5901                           	movlb 1	; select bank1
  5902  0E1C  0021               	bcf	(140)^080h,3	;volatile
  5903  0E1D  118C               	line	157
  5904                           ;LCD_hd44780u_qy_2004a.c: 157:   TRISAbits.TRISA2 = 0;;
  5905                           	bcf	(140)^080h,2	;volatile
  5906  0E1E  110C               	line	158
  5907                           ;LCD_hd44780u_qy_2004a.c: 158:   TRISAbits.TRISA1 = 0;;
  5908                           	bcf	(140)^080h,1	;volatile
  5909  0E1F  108C               	line	159
  5910                           ;LCD_hd44780u_qy_2004a.c: 159:   TRISAbits.TRISA0 = 0;;
  5911                           	bcf	(140)^080h,0	;volatile
  5912  0E20  100C               	line	160
  5913                           	
  5914                           l285:	
  5915  0E21                     	return
  5916  0E21  0008               	opt stack 0
  5917                           GLOBAL	__end_of_SetToSendDataToLCD
  5918                           	__end_of_SetToSendDataToLCD:
  5919  0E22                     	signat	_SetToSendDataToLCD,89
  5920                           	global	_GetTemp
  5921                           
  5922 ;; *************** function _GetTemp *****************
  5923 ;; Defined at:
  5924 ;;		line 88 in file "161518_temp_main.c"
  5925 ;; Parameters:    Size  Location     Type
  5926 ;;		None
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;		None
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  1    wreg      void 
  5931 ;; Registers used:
  5932 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5940 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5941 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5942 ;;Total ram usage:        1 bytes
  5943 ;; Hardware stack levels used:    1
  5944 ;; Hardware stack levels required when called:    5
  5945 ;; This function calls:
  5946 ;;		_memset
  5947 ;; This function is called by:
  5948 ;;		_main
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  5952                           	file	"161518_temp_main.c"
  5953                           	line	88
  5954                           global __ptext22
  5955                           __ptext22:	;psect for function _GetTemp
  5956  0F80                     psect	text22
  5957                           	file	"161518_temp_main.c"
  5958                           	line	88
  5959                           	global	__size_of_GetTemp
  5960                           	__size_of_GetTemp	equ	__end_of_GetTemp-_GetTemp
  5961  0029                     	
  5962                           _GetTemp:	
  5963  0F80                     ;incstack = 0
  5964                           	opt	stack 10
  5965                           ; Regs used in _GetTemp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5966                           	line	90
  5967                           	
  5968                           l2525:	
  5969  0F80                     	movlb 0	; select bank0
  5970  0F80  0020               	movf	((_wI2CTxBufferSize)),w
  5971  0F81  0858               	btfss	status,2
  5972  0F82  1D03               	goto	u1601
  5973  0F83  2F85               	goto	u1600
  5974  0F84  2F86               u1601:
  5975  0F85                     	goto	l121
  5976  0F85  2FA8               u1600:
  5977  0F86                     	line	92
  5978                           	
  5979                           l2527:	
  5980  0F86                     	movlb 1	; select bank1
  5981  0F86  0021               	bsf	(145)^080h,3	;volatile
  5982  0F87  1591               	line	93
  5983                           	
  5984                           l2529:	
  5985  0F88                     	movlw	low(_wReceptionBuffer)
  5986  0F88  3034               	movlb 0	; select bank0
  5987  0F89  0020               	movwf	(memset@dest)
  5988  0F8A  00B0               	movlw	high(_wReceptionBuffer)
  5989  0F8B  3001               	movwf	(memset@dest+1)
  5990  0F8C  00B1               	movlw	0
  5991  0F8D  3000               	movwf	(memset@c)
  5992  0F8E  00B2               	movwf	(memset@c+1)
  5993  0F8F  00B3               	movlw	01Eh
  5994  0F90  301E               	movwf	(memset@n)
  5995  0F91  00B4               	movlw	0
  5996  0F92  3000               	movwf	((memset@n))+1
  5997  0F93  00B5               	fcall	_memset
  5998  0F94  3183  23D6  318F   	line	94
  5999                           	
  6000                           l2531:	
  6001  0F97                     	movlb 0	; select bank0
  6002  0F97  0020               	clrf	(_wReceptionBufferPosition)
  6003  0F98  01D9               	line	95
  6004                           	
  6005                           l2533:	
  6006  0F99                     	movlw	low(0B9h)
  6007  0F99  30B9               	movwf	(??_GetTemp+0)+0
  6008  0F9A  00BE               	movf	(??_GetTemp+0)+0,w
  6009  0F9B  083E               	movlb 1	; select bank1
  6010  0F9C  0021               	movwf	(_wI2CTxBuffer)^080h
  6011  0F9D  00D4               	line	96
  6012                           	
  6013                           l2535:	
  6014  0F9E                     	movlw	low(08h)
  6015  0F9E  3008               	movlb 0	; select bank0
  6016  0F9F  0020               	movwf	(??_GetTemp+0)+0
  6017  0FA0  00BE               	movf	(??_GetTemp+0)+0,w
  6018  0FA1  083E               	movwf	(_wI2CRxBufferSize)
  6019  0FA2  00D7               	line	97
  6020                           	
  6021                           l2537:	
  6022  0FA3                     	clrf	(_wI2CTxBufferSize)
  6023  0FA3  01D8               	incf	(_wI2CTxBufferSize),f
  6024  0FA4  0AD8               	line	98
  6025                           	
  6026                           l2539:	
  6027  0FA5                     	movlb 4	; select bank4
  6028  0FA5  0024               	bsf	(534)^0200h,0	;volatile
  6029  0FA6  1416               	goto	l121
  6030  0FA7  2FA8               	line	99
  6031                           	
  6032                           l120:	
  6033  0FA8                     	line	100
  6034                           	
  6035                           l121:	
  6036  0FA8                     	return
  6037  0FA8  0008               	opt stack 0
  6038                           GLOBAL	__end_of_GetTemp
  6039                           	__end_of_GetTemp:
  6040  0FA9                     	signat	_GetTemp,89
  6041                           	global	_memset
  6042                           
  6043 ;; *************** function _memset *****************
  6044 ;; Defined at:
  6045 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;  dest            2   16[BANK0 ] PTR void 
  6048 ;;		 -> wInterruptText(75), wReceptionBuffer(30), wI2CTxBuffer(20), 
  6049 ;;  c               2   18[BANK0 ] int 
  6050 ;;  n               2   20[BANK0 ] unsigned int 
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;  s               2   28[BANK0 ] PTR unsigned char 
  6053 ;;		 -> wInterruptText(75), wReceptionBuffer(30), wI2CTxBuffer(20), 
  6054 ;;  k               2   26[BANK0 ] unsigned int 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  2   16[BANK0 ] PTR void 
  6057 ;; Registers used:
  6058 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6064 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  6065 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6066 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6067 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
  6068 ;;Total ram usage:       14 bytes
  6069 ;; Hardware stack levels used:    1
  6070 ;; Hardware stack levels required when called:    4
  6071 ;; This function calls:
  6072 ;;		Nothing
  6073 ;; This function is called by:
  6074 ;;		_GetTemp
  6075 ;;		_PrintLog
  6076 ;;		_main
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           psect	text23,local,class=CODE,delta=2,merge=1,group=2
  6080                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  6081                           	line	4
  6082                           global __ptext23
  6083                           __ptext23:	;psect for function _memset
  6084  03D6                     psect	text23
  6085                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  6086                           	line	4
  6087                           	global	__size_of_memset
  6088                           	__size_of_memset	equ	__end_of_memset-_memset
  6089  00D1                     	
  6090                           _memset:	
  6091  03D6                     ;incstack = 0
  6092                           	opt	stack 11
  6093                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6094                           	line	6
  6095                           	
  6096                           l2483:	
  6097  03D6                     	movlb 0	; select bank0
  6098  03D6  0020               	movf	(memset@dest+1),w
  6099  03D7  0831               	movwf	(memset@s+1)
  6100  03D8  00BD               	movf	(memset@dest),w
  6101  03D9  0830               	movwf	(memset@s)
  6102  03DA  00BC               	line	13
  6103                           	
  6104                           l2485:	
  6105  03DB                     	movf	((memset@n)),w
  6106  03DB  0834               iorwf	((memset@n+1)),w
  6107  03DC  0435               	btfss	status,2
  6108  03DD  1D03               	goto	u1551
  6109  03DE  2BE0               	goto	u1550
  6110  03DF  2BE1               u1551:
  6111  03E0                     	goto	l2489
  6112  03E0  2BE3               u1550:
  6113  03E1                     	goto	l782
  6114  03E1  2CA6               	
  6115                           l2487:	
  6116  03E2                     ;	Return value of _memset is never used
  6117                           	goto	l782
  6118  03E2  2CA6               	
  6119                           l781:	
  6120  03E3                     	line	14
  6121                           	
  6122                           l2489:	
  6123  03E3                     	movf	(memset@s),w
  6124  03E3  083C               	movwf	fsr1l
  6125  03E4  0086               	movf	(memset@s+1),w
  6126  03E5  083D               	movwf	fsr1h
  6127  03E6  0087               	movf	(memset@c),w
  6128  03E7  0832               	movwf	indf1
  6129  03E8  0081               	line	15
  6130                           	
  6131                           l2491:	
  6132  03E9                     	movf	(memset@n),w
  6133  03E9  0834               	addlw	0FFh
  6134  03EA  3EFF               	movwf	(??_memset+0)+0
  6135  03EB  00B6               	movlw	0FFh
  6136  03EC  30FF               	addwfc	(memset@n+1),w
  6137  03ED  3D35               	movwf	1+(??_memset+0)+0
  6138  03EE  00B7               	movf	0+(??_memset+0)+0,w
  6139  03EF  0836               	addwf	(memset@s),w
  6140  03F0  073C               	movwf	(??_memset+2)+0
  6141  03F1  00B8               	movf	1+(??_memset+0)+0,w
  6142  03F2  0837               	addwfc	(memset@s+1),w
  6143  03F3  3D3D               	movwf	1+(??_memset+2)+0
  6144  03F4  00B9               	movf	0+(??_memset+2)+0,w
  6145  03F5  0838               	movwf	fsr1l
  6146  03F6  0086               	movf	1+(??_memset+2)+0,w
  6147  03F7  0839               	movwf	fsr1h
  6148  03F8  0087               	movf	(memset@c),w
  6149  03F9  0832               	movwf	indf1
  6150  03FA  0081               	line	16
  6151                           	
  6152                           l2493:	
  6153  03FB                     	movlw	0
  6154  03FB  3000               	subwf	(memset@n+1),w
  6155  03FC  0235               	movlw	03h
  6156  03FD  3003               	skipnz
  6157  03FE  1903               	subwf	(memset@n),w
  6158  03FF  0234               	skipnc
  6159  0400  1803               	goto	u1561
  6160  0401  2C03               	goto	u1560
  6161  0402  2C04               u1561:
  6162  0403                     	goto	l2497
  6163  0403  2C06               u1560:
  6164  0404                     	goto	l782
  6165  0404  2CA6               	
  6166                           l2495:	
  6167  0405                     ;	Return value of _memset is never used
  6168                           	goto	l782
  6169  0405  2CA6               	
  6170                           l783:	
  6171  0406                     	line	17
  6172                           	
  6173                           l2497:	
  6174  0406                     	movf	(memset@s),w
  6175  0406  083C               	addlw	01h
  6176  0407  3E01               	movwf	(??_memset+0)+0
  6177  0408  00B6               	movlw	0
  6178  0409  3000               	addwfc	(memset@s+1),w
  6179  040A  3D3D               	movwf	1+(??_memset+0)+0
  6180  040B  00B7               	movf	0+(??_memset+0)+0,w
  6181  040C  0836               	movwf	fsr1l
  6182  040D  0086               	movf	1+(??_memset+0)+0,w
  6183  040E  0837               	movwf	fsr1h
  6184  040F  0087               	movf	(memset@c),w
  6185  0410  0832               	movwf	indf1
  6186  0411  0081               	line	18
  6187                           	movf	(memset@s),w
  6188  0412  083C               	addlw	02h
  6189  0413  3E02               	movwf	(??_memset+0)+0
  6190  0414  00B6               	movlw	0
  6191  0415  3000               	addwfc	(memset@s+1),w
  6192  0416  3D3D               	movwf	1+(??_memset+0)+0
  6193  0417  00B7               	movf	0+(??_memset+0)+0,w
  6194  0418  0836               	movwf	fsr1l
  6195  0419  0086               	movf	1+(??_memset+0)+0,w
  6196  041A  0837               	movwf	fsr1h
  6197  041B  0087               	movf	(memset@c),w
  6198  041C  0832               	movwf	indf1
  6199  041D  0081               	line	19
  6200                           	movf	(memset@n),w
  6201  041E  0834               	addlw	0FEh
  6202  041F  3EFE               	movwf	(??_memset+0)+0
  6203  0420  00B6               	movlw	0FFh
  6204  0421  30FF               	addwfc	(memset@n+1),w
  6205  0422  3D35               	movwf	1+(??_memset+0)+0
  6206  0423  00B7               	movf	0+(??_memset+0)+0,w
  6207  0424  0836               	addwf	(memset@s),w
  6208  0425  073C               	movwf	(??_memset+2)+0
  6209  0426  00B8               	movf	1+(??_memset+0)+0,w
  6210  0427  0837               	addwfc	(memset@s+1),w
  6211  0428  3D3D               	movwf	1+(??_memset+2)+0
  6212  0429  00B9               	movf	0+(??_memset+2)+0,w
  6213  042A  0838               	movwf	fsr1l
  6214  042B  0086               	movf	1+(??_memset+2)+0,w
  6215  042C  0839               	movwf	fsr1h
  6216  042D  0087               	movf	(memset@c),w
  6217  042E  0832               	movwf	indf1
  6218  042F  0081               	line	20
  6219                           	movf	(memset@n),w
  6220  0430  0834               	addlw	0FDh
  6221  0431  3EFD               	movwf	(??_memset+0)+0
  6222  0432  00B6               	movlw	0FFh
  6223  0433  30FF               	addwfc	(memset@n+1),w
  6224  0434  3D35               	movwf	1+(??_memset+0)+0
  6225  0435  00B7               	movf	0+(??_memset+0)+0,w
  6226  0436  0836               	addwf	(memset@s),w
  6227  0437  073C               	movwf	(??_memset+2)+0
  6228  0438  00B8               	movf	1+(??_memset+0)+0,w
  6229  0439  0837               	addwfc	(memset@s+1),w
  6230  043A  3D3D               	movwf	1+(??_memset+2)+0
  6231  043B  00B9               	movf	0+(??_memset+2)+0,w
  6232  043C  0838               	movwf	fsr1l
  6233  043D  0086               	movf	1+(??_memset+2)+0,w
  6234  043E  0839               	movwf	fsr1h
  6235  043F  0087               	movf	(memset@c),w
  6236  0440  0832               	movwf	indf1
  6237  0441  0081               	line	21
  6238                           	
  6239                           l2499:	
  6240  0442                     	movlw	0
  6241  0442  3000               	subwf	(memset@n+1),w
  6242  0443  0235               	movlw	07h
  6243  0444  3007               	skipnz
  6244  0445  1903               	subwf	(memset@n),w
  6245  0446  0234               	skipnc
  6246  0447  1803               	goto	u1571
  6247  0448  2C4A               	goto	u1570
  6248  0449  2C4B               u1571:
  6249  044A                     	goto	l2503
  6250  044A  2C4D               u1570:
  6251  044B                     	goto	l782
  6252  044B  2CA6               	
  6253                           l2501:	
  6254  044C                     ;	Return value of _memset is never used
  6255                           	goto	l782
  6256  044C  2CA6               	
  6257                           l784:	
  6258  044D                     	line	22
  6259                           	
  6260                           l2503:	
  6261  044D                     	movf	(memset@s),w
  6262  044D  083C               	addlw	03h
  6263  044E  3E03               	movwf	(??_memset+0)+0
  6264  044F  00B6               	movlw	0
  6265  0450  3000               	addwfc	(memset@s+1),w
  6266  0451  3D3D               	movwf	1+(??_memset+0)+0
  6267  0452  00B7               	movf	0+(??_memset+0)+0,w
  6268  0453  0836               	movwf	fsr1l
  6269  0454  0086               	movf	1+(??_memset+0)+0,w
  6270  0455  0837               	movwf	fsr1h
  6271  0456  0087               	movf	(memset@c),w
  6272  0457  0832               	movwf	indf1
  6273  0458  0081               	line	23
  6274                           	movf	(memset@n),w
  6275  0459  0834               	addlw	0FCh
  6276  045A  3EFC               	movwf	(??_memset+0)+0
  6277  045B  00B6               	movlw	0FFh
  6278  045C  30FF               	addwfc	(memset@n+1),w
  6279  045D  3D35               	movwf	1+(??_memset+0)+0
  6280  045E  00B7               	movf	0+(??_memset+0)+0,w
  6281  045F  0836               	addwf	(memset@s),w
  6282  0460  073C               	movwf	(??_memset+2)+0
  6283  0461  00B8               	movf	1+(??_memset+0)+0,w
  6284  0462  0837               	addwfc	(memset@s+1),w
  6285  0463  3D3D               	movwf	1+(??_memset+2)+0
  6286  0464  00B9               	movf	0+(??_memset+2)+0,w
  6287  0465  0838               	movwf	fsr1l
  6288  0466  0086               	movf	1+(??_memset+2)+0,w
  6289  0467  0839               	movwf	fsr1h
  6290  0468  0087               	movf	(memset@c),w
  6291  0469  0832               	movwf	indf1
  6292  046A  0081               	line	24
  6293                           	
  6294                           l2505:	
  6295  046B                     	movlw	0
  6296  046B  3000               	subwf	(memset@n+1),w
  6297  046C  0235               	movlw	09h
  6298  046D  3009               	skipnz
  6299  046E  1903               	subwf	(memset@n),w
  6300  046F  0234               	skipnc
  6301  0470  1803               	goto	u1581
  6302  0471  2C73               	goto	u1580
  6303  0472  2C74               u1581:
  6304  0473                     	goto	l2509
  6305  0473  2C76               u1580:
  6306  0474                     	goto	l782
  6307  0474  2CA6               	
  6308                           l2507:	
  6309  0475                     ;	Return value of _memset is never used
  6310                           	goto	l782
  6311  0475  2CA6               	
  6312                           l785:	
  6313  0476                     	line	31
  6314                           	
  6315                           l2509:	
  6316  0476                     	comf	(memset@s),w
  6317  0476  093C               	movwf	(??_memset+0)+0
  6318  0477  00B6               	comf	(memset@s+1),w
  6319  0478  093D               	movwf	((??_memset+0)+0+1)
  6320  0479  00B7               	incf	(??_memset+0)+0,f
  6321  047A  0AB6               	skipnz
  6322  047B  1903               	incf	((??_memset+0)+0+1),f
  6323  047C  0AB7               	movlw	03h
  6324  047D  3003               	andwf	0+(??_memset+0)+0,w
  6325  047E  0536               	movwf	(memset@k)
  6326  047F  00BA               	movlw	0
  6327  0480  3000               	andwf	1+(??_memset+0)+0,w
  6328  0481  0537               	movwf	1+(memset@k)
  6329  0482  00BB               	line	32
  6330                           	
  6331                           l2511:	
  6332  0483                     	movf	(memset@k),w
  6333  0483  083A               	addwf	(memset@s),f
  6334  0484  07BC               	movf	(memset@k+1),w
  6335  0485  083B               	addwfc	(memset@s+1),f
  6336  0486  3DBD               	line	33
  6337                           	
  6338                           l2513:	
  6339  0487                     	movf	(memset@k),w
  6340  0487  083A               	subwf	(memset@n),f
  6341  0488  02B4               	movf	(memset@k+1),w
  6342  0489  083B               	subwfb	(memset@n+1),f
  6343  048A  3BB5               	line	34
  6344                           	
  6345                           l2515:	
  6346  048B                     	movlw	0FCh
  6347  048B  30FC               	andwf	(memset@n),f
  6348  048C  05B4               	movlw	0FFh
  6349  048D  30FF               	andwf	(memset@n+1),f
  6350  048E  05B5               	line	86
  6351                           	goto	l2523
  6352  048F  2C9F               	
  6353                           l787:	
  6354  0490                     	
  6355                           l2517:	
  6356  0490                     	movf	(memset@s),w
  6357  0490  083C               	movwf	fsr1l
  6358  0491  0086               	movf	(memset@s+1),w
  6359  0492  083D               	movwf	fsr1h
  6360  0493  0087               	movf	(memset@c),w
  6361  0494  0832               	movwf	indf1
  6362  0495  0081               	
  6363                           l2519:	
  6364  0496                     	movlw	01h
  6365  0496  3001               	subwf	(memset@n),f
  6366  0497  02B4               	movlw	0
  6367  0498  3000               	subwfb	(memset@n+1),f
  6368  0499  3BB5               	
  6369                           l2521:	
  6370  049A                     	movlw	01h
  6371  049A  3001               	addwf	(memset@s),f
  6372  049B  07BC               	movlw	0
  6373  049C  3000               	addwfc	(memset@s+1),f
  6374  049D  3DBD               	goto	l2523
  6375  049E  2C9F               	
  6376                           l786:	
  6377  049F                     	
  6378                           l2523:	
  6379  049F                     	movf	((memset@n)),w
  6380  049F  0834               iorwf	((memset@n+1)),w
  6381  04A0  0435               	btfss	status,2
  6382  04A1  1D03               	goto	u1591
  6383  04A2  2CA4               	goto	u1590
  6384  04A3  2CA5               u1591:
  6385  04A4                     	goto	l2517
  6386  04A4  2C90               u1590:
  6387  04A5                     	goto	l782
  6388  04A5  2CA6               	
  6389                           l788:	
  6390  04A6                     	line	90
  6391                           ;	Return value of _memset is never used
  6392                           	
  6393                           l782:	
  6394  04A6                     	return
  6395  04A6  0008               	opt stack 0
  6396                           GLOBAL	__end_of_memset
  6397                           	__end_of_memset:
  6398  04A7                     	signat	_memset,12409
  6399                           	global	_Debounce
  6400                           
  6401 ;; *************** function _Debounce *****************
  6402 ;; Defined at:
  6403 ;;		line 141 in file "161518_temp_main.c"
  6404 ;; Parameters:    Size  Location     Type
  6405 ;;  iSwitch         1    wreg     unsigned char 
  6406 ;;  ioTimer         1   16[BANK0 ] PTR unsigned short 
  6407 ;;		 -> main@wDebounceDown(2), main@wDebounceUp(2), main@wDebounceEnter(2), 
  6408 ;;  swPressed       1   17[BANK0 ] PTR unsigned char 
  6409 ;;		 -> main@wEnterBottonPressed(1), main@wDownBottonPressed(1), main@wUpBottonPressed(1), 
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;  iSwitch         1   20[BANK0 ] unsigned char 
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  1    wreg      void 
  6414 ;; Registers used:
  6415 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6421 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6422 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6423 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6424 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  6425 ;;Total ram usage:        5 bytes
  6426 ;; Hardware stack levels used:    1
  6427 ;; Hardware stack levels required when called:    4
  6428 ;; This function calls:
  6429 ;;		Nothing
  6430 ;; This function is called by:
  6431 ;;		_main
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  6435                           	file	"161518_temp_main.c"
  6436                           	line	141
  6437                           global __ptext24
  6438                           __ptext24:	;psect for function _Debounce
  6439  065A                     psect	text24
  6440                           	file	"161518_temp_main.c"
  6441                           	line	141
  6442                           	global	__size_of_Debounce
  6443                           	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
  6444  0045                     	
  6445                           _Debounce:	
  6446  065A                     ;incstack = 0
  6447                           	opt	stack 11
  6448                           ; Regs used in _Debounce: [wreg+fsr1l+fsr1h+status,2+status,0]
  6449                           ;Debounce@iSwitch stored from wreg
  6450                           	movlb 0	; select bank0
  6451  065A  0020               	movwf	(Debounce@iSwitch)
  6452  065B  00B4               	line	143
  6453                           	
  6454                           l1987:	
  6455  065C                     	movf	((Debounce@iSwitch)),w
  6456  065C  0834               	btfss	status,2
  6457  065D  1D03               	goto	u1171
  6458  065E  2E60               	goto	u1170
  6459  065F  2E61               u1171:
  6460  0660                     	goto	l1991
  6461  0660  2E6A               u1170:
  6462  0661                     	line	145
  6463                           	
  6464                           l1989:	
  6465  0661                     	movf	(Debounce@ioTimer),w
  6466  0661  0830               	movwf	fsr1l
  6467  0662  0086               	clrf fsr1h	
  6468  0663  0187               	
  6469                           	movlw	01h
  6470  0664  3001               	addwf	indf1,f
  6471  0665  0781               	addfsr	fsr1,1
  6472  0666  3141               	skipnc
  6473  0667  1803               	incf	indf1,f
  6474  0668  0A81               	line	146
  6475                           	goto	l1993
  6476  0669  2E71               	line	147
  6477                           	
  6478                           l135:	
  6479  066A                     	line	149
  6480                           	
  6481                           l1991:	
  6482  066A                     	movf	(Debounce@ioTimer),w
  6483  066A  0830               	movwf	fsr1l
  6484  066B  0086               	clrf fsr1h	
  6485  066C  0187               	
  6486                           	movlw	0
  6487  066D  3000               	movwi	[0]fsr1
  6488  066E  3FC0               	movwi	[1]fsr1
  6489  066F  3FC1               	goto	l1993
  6490  0670  2E71               	line	150
  6491                           	
  6492                           l136:	
  6493  0671                     	line	151
  6494                           	
  6495                           l1993:	
  6496  0671                     	movf	(Debounce@ioTimer),w
  6497  0671  0830               	movwf	fsr1l
  6498  0672  0086               	clrf fsr1h	
  6499  0673  0187               	
  6500                           	moviw	fsr1++
  6501  0674  0016               xorlw	208
  6502  0675  3AD0               movwf	(??_Debounce+0)+0
  6503  0676  00B2               moviw	fsr1++
  6504  0677  0016               xorlw	7
  6505  0678  3A07               iorwf	(??_Debounce+0)+0
  6506  0679  04B2               	btfss	status,2
  6507  067A  1D03               	goto	u1181
  6508  067B  2E7D               	goto	u1180
  6509  067C  2E7E               u1181:
  6510  067D                     	goto	l1997
  6511  067D  2E84               u1180:
  6512  067E                     	line	153
  6513                           	
  6514                           l1995:	
  6515  067E                     	movf	(Debounce@swPressed),w
  6516  067E  0831               	movwf	fsr1l
  6517  067F  0086               	clrf fsr1h	
  6518  0680  0187               	
  6519                           	clrf	indf1
  6520  0681  0181               	incf	indf1,f
  6521  0682  0A81               	goto	l1997
  6522  0683  2E84               	line	154
  6523                           	
  6524                           l137:	
  6525  0684                     	line	155
  6526                           	
  6527                           l1997:	
  6528  0684                     	movf	(Debounce@ioTimer),w
  6529  0684  0830               	movwf	fsr1l
  6530  0685  0086               	clrf fsr1h	
  6531  0686  0187               	
  6532                           	moviw	fsr1++
  6533  0687  0016               xorlw	64
  6534  0688  3A40               movwf	(??_Debounce+0)+0
  6535  0689  00B2               moviw	fsr1++
  6536  068A  0016               xorlw	31
  6537  068B  3A1F               iorwf	(??_Debounce+0)+0
  6538  068C  04B2               	btfss	status,2
  6539  068D  1D03               	goto	u1191
  6540  068E  2E90               	goto	u1190
  6541  068F  2E91               u1191:
  6542  0690                     	goto	l139
  6543  0690  2E9E               u1190:
  6544  0691                     	line	157
  6545                           	
  6546                           l1999:	
  6547  0691                     	movf	(Debounce@ioTimer),w
  6548  0691  0830               	movwf	fsr1l
  6549  0692  0086               	clrf fsr1h	
  6550  0693  0187               	
  6551                           	movlw	0D1h
  6552  0694  30D1               	movwi	[0]fsr1
  6553  0695  3FC0               	movlw	07h
  6554  0696  3007               	movwi	[1]fsr1
  6555  0697  3FC1               	line	158
  6556                           	
  6557                           l2001:	
  6558  0698                     	movf	(Debounce@swPressed),w
  6559  0698  0831               	movwf	fsr1l
  6560  0699  0086               	clrf fsr1h	
  6561  069A  0187               	
  6562                           	clrf	indf1
  6563  069B  0181               	incf	indf1,f
  6564  069C  0A81               	goto	l139
  6565  069D  2E9E               	line	159
  6566                           	
  6567                           l138:	
  6568  069E                     	line	160
  6569                           	
  6570                           l139:	
  6571  069E                     	return
  6572  069E  0008               	opt stack 0
  6573                           GLOBAL	__end_of_Debounce
  6574                           	__end_of_Debounce:
  6575  069F                     	signat	_Debounce,12409
  6576                           	global	_Add_Trace
  6577                           
  6578 ;; *************** function _Add_Trace *****************
  6579 ;; Defined at:
  6580 ;;		line 80 in file "161518_temp_main.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;  oText           1    wreg     PTR unsigned char 
  6583 ;;		 -> wInterruptText(75), 
  6584 ;;  iSizeOfoText    1   35[BANK0 ] unsigned char 
  6585 ;;  iText           2   36[BANK0 ] PTR unsigned char 
  6586 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  6587 ;;		 -> main@wReadout(20), 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;  oText           1   44[BANK0 ] PTR unsigned char 
  6590 ;;		 -> wInterruptText(75), 
  6591 ;; Return value:  Size  Location     Type
  6592 ;;                  1    wreg      void 
  6593 ;; Registers used:
  6594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6600 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  6601 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6602 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  6603 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  6604 ;;Total ram usage:       10 bytes
  6605 ;; Hardware stack levels used:    1
  6606 ;; Hardware stack levels required when called:    6
  6607 ;; This function calls:
  6608 ;;		_strcat
  6609 ;;		_strlen
  6610 ;; This function is called by:
  6611 ;;		_main
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  6615                           	line	80
  6616                           global __ptext25
  6617                           __ptext25:	;psect for function _Add_Trace
  6618  075B                     psect	text25
  6619                           	file	"161518_temp_main.c"
  6620                           	line	80
  6621                           	global	__size_of_Add_Trace
  6622                           	__size_of_Add_Trace	equ	__end_of_Add_Trace-_Add_Trace
  6623  003A                     	
  6624                           _Add_Trace:	
  6625  075B                     ;incstack = 0
  6626                           	opt	stack 9
  6627                           ; Regs used in _Add_Trace: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6628                           ;Add_Trace@oText stored from wreg
  6629                           	movlb 0	; select bank0
  6630  075B  0020               	movwf	(Add_Trace@oText)
  6631  075C  00CC               	line	82
  6632                           	
  6633                           l1935:	
  6634  075D                     	movf	(Add_Trace@oText),w
  6635  075D  084C               	movwf	(strlen@s)
  6636  075E  00B0               	movlw	0x1
  6637  075F  3001               
  6638                           	movwf	(strlen@s+1)
  6639  0760  00B1               	fcall	_strlen
  6640  0761  318F  2711  3187   	movlb 0	; select bank0
  6641  0764  0020               	comf	(0+(?_strlen)),w
  6642  0765  0930               	movwf	(??_Add_Trace+0)+0
  6643  0766  00C6               	comf	(1+(?_strlen)),w
  6644  0767  0931               	movwf	((??_Add_Trace+0)+0+1)
  6645  0768  00C7               	incf	(??_Add_Trace+0)+0,f
  6646  0769  0AC6               	skipnz
  6647  076A  1903               	incf	((??_Add_Trace+0)+0+1),f
  6648  076B  0AC7               	movf	(Add_Trace@iSizeOfoText),w
  6649  076C  0843               	addwf	0+(??_Add_Trace+0)+0,w
  6650  076D  0746               	movwf	(??_Add_Trace+2)+0
  6651  076E  00C8               	movf	1+(??_Add_Trace+0)+0,w
  6652  076F  0847               	skipnc
  6653  0770  1803               	incf	1+(??_Add_Trace+0)+0,w
  6654  0771  0A47               	movwf	((??_Add_Trace+2)+0)+1
  6655  0772  00C9               	movf	0+(??_Add_Trace+2)+0,w
  6656  0773  0848               	addlw	0FFh
  6657  0774  3EFF               	movwf	(??_Add_Trace+4)+0
  6658  0775  00CA               	movlw	0FFh
  6659  0776  30FF               	addwfc	1+(??_Add_Trace+2)+0,w
  6660  0777  3D49               	movwf	1+(??_Add_Trace+4)+0
  6661  0778  00CB               	movf	(Add_Trace@iText+1),w
  6662  0779  0845               	movwf	(strlen@s+1)
  6663  077A  00B1               	movf	(Add_Trace@iText),w
  6664  077B  0844               	movwf	(strlen@s)
  6665  077C  00B0               	fcall	_strlen
  6666  077D  318F  2711  3187   	movlb 0	; select bank0
  6667  0780  0020               	movf	1+(??_Add_Trace+4)+0,w
  6668  0781  084B               	subwf	(1+(?_strlen)),w
  6669  0782  0231               	skipz
  6670  0783  1D03               	goto	u1135
  6671  0784  2F87               	movf	0+(??_Add_Trace+4)+0,w
  6672  0785  084A               	subwf	(0+(?_strlen)),w
  6673  0786  0230               u1135:
  6674  0787                     	skipnc
  6675  0787  1803               	goto	u1131
  6676  0788  2F8A               	goto	u1130
  6677  0789  2F8B               u1131:
  6678  078A                     	goto	l117
  6679  078A  2F94               u1130:
  6680  078B                     	line	84
  6681                           	
  6682                           l1937:	
  6683  078B                     	movf	(Add_Trace@iText+1),w
  6684  078B  0845               	movwf	(strcat@src+1)
  6685  078C  00BF               	movf	(Add_Trace@iText),w
  6686  078D  0844               	movwf	(strcat@src)
  6687  078E  00BE               	movf	(Add_Trace@oText),w
  6688  078F  084C               	fcall	_strcat
  6689  0790  318E  26B1  3187   	goto	l117
  6690  0793  2F94               	line	85
  6691                           	
  6692                           l116:	
  6693  0794                     	line	86
  6694                           	
  6695                           l117:	
  6696  0794                     	return
  6697  0794  0008               	opt stack 0
  6698                           GLOBAL	__end_of_Add_Trace
  6699                           	__end_of_Add_Trace:
  6700  0795                     	signat	_Add_Trace,12409
  6701                           	global	_strcat
  6702                           
  6703 ;; *************** function _strcat *****************
  6704 ;; Defined at:
  6705 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;  dest            1    wreg     PTR unsigned char 
  6708 ;;		 -> wInterruptText(75), 
  6709 ;;  src             2   30[BANK0 ] PTR const unsigned char 
  6710 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  6711 ;;		 -> main@wReadout(20), 
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;  dest            1   34[BANK0 ] PTR unsigned char 
  6714 ;;		 -> wInterruptText(75), 
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  1    wreg      PTR unsigned char 
  6717 ;; Registers used:
  6718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6724 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6725 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6726 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6727 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  6728 ;;Total ram usage:        5 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; Hardware stack levels required when called:    5
  6731 ;; This function calls:
  6732 ;;		_strcpy
  6733 ;;		_strlen
  6734 ;; This function is called by:
  6735 ;;		_Add_Trace
  6736 ;; This function uses a non-reentrant model
  6737 ;;
  6738                           psect	text26,local,class=CODE,delta=2,merge=1,group=2
  6739                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  6740                           	line	3
  6741                           global __ptext26
  6742                           __ptext26:	;psect for function _strcat
  6743  0EB1                     psect	text26
  6744                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  6745                           	line	3
  6746                           	global	__size_of_strcat
  6747                           	__size_of_strcat	equ	__end_of_strcat-_strcat
  6748  0019                     	
  6749                           _strcat:	
  6750  0EB1                     ;incstack = 0
  6751                           	opt	stack 9
  6752                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6753                           ;strcat@dest stored from wreg
  6754                           	movlb 0	; select bank0
  6755  0EB1  0020               	movwf	(strcat@dest)
  6756  0EB2  00C2               	line	5
  6757                           	
  6758                           l1809:	
  6759  0EB3                     	movf	(strcat@src+1),w
  6760  0EB3  083F               	movwf	(strcpy@src+1)
  6761  0EB4  00B7               	movf	(strcat@src),w
  6762  0EB5  083E               	movwf	(strcpy@src)
  6763  0EB6  00B6               	movf	(strcat@dest),w
  6764  0EB7  0842               	movwf	(strlen@s)
  6765  0EB8  00B0               	movlw	0x1
  6766  0EB9  3001               
  6767                           	movwf	(strlen@s+1)
  6768  0EBA  00B1               	fcall	_strlen
  6769  0EBB  318F  2711  318E   	movlb 0	; select bank0
  6770  0EBE  0020               	movf	(0+?_strlen),w
  6771  0EBF  0830               	movwf	(??_strcat+0)+0
  6772  0EC0  00C0               	movf	(1+?_strlen),w
  6773  0EC1  0831               	movwf	((??_strcat+0)+0+1)
  6774  0EC2  00C1               	movf	(strcat@dest),w
  6775  0EC3  0842               	addwf	0+(??_strcat+0)+0,w
  6776  0EC4  0740               	fcall	_strcpy
  6777  0EC5  318F  2735  318E   	goto	l795
  6778  0EC8  2EC9               	line	6
  6779                           	
  6780                           l1811:	
  6781  0EC9                     	line	7
  6782                           ;	Return value of _strcat is never used
  6783                           	
  6784                           l795:	
  6785  0EC9                     	return
  6786  0EC9  0008               	opt stack 0
  6787                           GLOBAL	__end_of_strcat
  6788                           	__end_of_strcat:
  6789  0ECA                     	signat	_strcat,8313
  6790                           	global	_strlen
  6791                           
  6792 ;; *************** function _strlen *****************
  6793 ;; Defined at:
  6794 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  6795 ;; Parameters:    Size  Location     Type
  6796 ;;  s               2   16[BANK0 ] PTR const unsigned char 
  6797 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  6798 ;;		 -> main@wReadout(20), wInterruptText(75), 
  6799 ;; Auto vars:     Size  Location     Type
  6800 ;;  a               2   20[BANK0 ] PTR const unsigned char 
  6801 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  6802 ;;		 -> main@wReadout(20), wInterruptText(75), 
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  2   16[BANK0 ] unsigned int 
  6805 ;; Registers used:
  6806 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6812 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6813 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6814 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6815 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  6816 ;;Total ram usage:        6 bytes
  6817 ;; Hardware stack levels used:    1
  6818 ;; Hardware stack levels required when called:    4
  6819 ;; This function calls:
  6820 ;;		Nothing
  6821 ;; This function is called by:
  6822 ;;		_Add_Trace
  6823 ;;		_PrintLog
  6824 ;;		_strcat
  6825 ;; This function uses a non-reentrant model
  6826 ;;
  6827                           psect	text27,local,class=CODE,delta=2,merge=1,group=2
  6828                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  6829                           	line	12
  6830                           global __ptext27
  6831                           __ptext27:	;psect for function _strlen
  6832  0F11                     psect	text27
  6833                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  6834                           	line	12
  6835                           	global	__size_of_strlen
  6836                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  6837  0024                     	
  6838                           _strlen:	
  6839  0F11                     ;incstack = 0
  6840                           	opt	stack 10
  6841                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  6842                           	line	14
  6843                           	
  6844                           l1721:	
  6845  0F11                     	movlb 0	; select bank0
  6846  0F11  0020               	movf	(strlen@s+1),w
  6847  0F12  0831               	movwf	(strlen@a+1)
  6848  0F13  00B5               	movf	(strlen@s),w
  6849  0F14  0830               	movwf	(strlen@a)
  6850  0F15  00B4               	line	16
  6851                           	goto	l1725
  6852  0F16  2F1C               	
  6853                           l805:	
  6854  0F17                     	line	17
  6855                           	
  6856                           l1723:	
  6857  0F17                     	movlw	01h
  6858  0F17  3001               	addwf	(strlen@s),f
  6859  0F18  07B0               	movlw	0
  6860  0F19  3000               	addwfc	(strlen@s+1),f
  6861  0F1A  3DB1               	goto	l1725
  6862  0F1B  2F1C               	line	18
  6863                           	
  6864                           l804:	
  6865  0F1C                     	line	16
  6866                           	
  6867                           l1725:	
  6868  0F1C                     	movf	(strlen@s),w
  6869  0F1C  0830               	movwf	fsr0l
  6870  0F1D  0084               	movf	((strlen@s+1)),w
  6871  0F1E  0831               	movwf	fsr0h
  6872  0F1F  0085               	moviw	fsr0++
  6873  0F20  0012               	btfss	status,2
  6874  0F21  1D03               	goto	u831
  6875  0F22  2F24               	goto	u830
  6876  0F23  2F25               u831:
  6877  0F24                     	goto	l1723
  6878  0F24  2F17               u830:
  6879  0F25                     	goto	l1727
  6880  0F25  2F26               	
  6881                           l806:	
  6882  0F26                     	line	25
  6883                           	
  6884                           l1727:	
  6885  0F26                     	comf	(strlen@a),w
  6886  0F26  0934               	movwf	(??_strlen+0)+0
  6887  0F27  00B2               	comf	(strlen@a+1),w
  6888  0F28  0935               	movwf	((??_strlen+0)+0+1)
  6889  0F29  00B3               	incf	(??_strlen+0)+0,f
  6890  0F2A  0AB2               	skipnz
  6891  0F2B  1903               	incf	((??_strlen+0)+0+1),f
  6892  0F2C  0AB3               	movf	(strlen@s),w
  6893  0F2D  0830               	addwf	0+(??_strlen+0)+0,w
  6894  0F2E  0732               	movwf	(?_strlen)
  6895  0F2F  00B0               	movf	(strlen@s+1),w
  6896  0F30  0831               	addwfc	1+(??_strlen+0)+0,w
  6897  0F31  3D33               	movwf	1+(?_strlen)
  6898  0F32  00B1               	goto	l807
  6899  0F33  2F34               	
  6900                           l1729:	
  6901  0F34                     	line	26
  6902                           	
  6903                           l807:	
  6904  0F34                     	return
  6905  0F34  0008               	opt stack 0
  6906                           GLOBAL	__end_of_strlen
  6907                           	__end_of_strlen:
  6908  0F35                     	signat	_strlen,4218
  6909                           	global	_strcpy
  6910                           
  6911 ;; *************** function _strcpy *****************
  6912 ;; Defined at:
  6913 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;  dest            1    wreg     PTR unsigned char 
  6916 ;;		 -> wInterruptText(75), 
  6917 ;;  src             2   22[BANK0 ] PTR const unsigned char 
  6918 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  6919 ;;		 -> main@wReadout(20), 
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;  dest            1   29[BANK0 ] PTR unsigned char 
  6922 ;;		 -> wInterruptText(75), 
  6923 ;;  s               2   26[BANK0 ] PTR const unsigned char 
  6924 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  6925 ;;		 -> main@wReadout(20), 
  6926 ;;  d               1   28[BANK0 ] PTR unsigned char 
  6927 ;;		 -> wInterruptText(75), 
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      PTR unsigned char 
  6930 ;; Registers used:
  6931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6937 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6938 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6939 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6940 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
  6941 ;;Total ram usage:        8 bytes
  6942 ;; Hardware stack levels used:    1
  6943 ;; Hardware stack levels required when called:    4
  6944 ;; This function calls:
  6945 ;;		Nothing
  6946 ;; This function is called by:
  6947 ;;		_strcat
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           psect	text28,local,class=CODE,delta=2,merge=1,group=2
  6951                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  6952                           	line	7
  6953                           global __ptext28
  6954                           __ptext28:	;psect for function _strcpy
  6955  0F35                     psect	text28
  6956                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  6957                           	line	7
  6958                           	global	__size_of_strcpy
  6959                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  6960  0025                     	
  6961                           _strcpy:	
  6962  0F35                     ;incstack = 0
  6963                           	opt	stack 9
  6964                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  6965                           ;strcpy@dest stored from wreg
  6966                           	movlb 0	; select bank0
  6967  0F35  0020               	movwf	(strcpy@dest)
  6968  0F36  00BD               	line	13
  6969                           	
  6970                           l1791:	
  6971  0F37                     	movf	(strcpy@src+1),w
  6972  0F37  0837               	movwf	(strcpy@s+1)
  6973  0F38  00BB               	movf	(strcpy@src),w
  6974  0F39  0836               	movwf	(strcpy@s)
  6975  0F3A  00BA               	line	14
  6976                           	movf	(strcpy@dest),w
  6977  0F3B  083D               	movwf	(??_strcpy+0)+0
  6978  0F3C  00B8               	movf	(??_strcpy+0)+0,w
  6979  0F3D  0838               	movwf	(strcpy@d)
  6980  0F3E  00BC               	line	15
  6981                           	goto	l1793
  6982  0F3F  2F41               	
  6983                           l799:	
  6984  0F40                     	goto	l1793
  6985  0F40  2F41               	
  6986                           l798:	
  6987  0F41                     	
  6988                           l1793:	
  6989  0F41                     	movf	(strcpy@d),w
  6990  0F41  083C               	movwf	fsr1l
  6991  0F42  0086               	movlw 1	; select bank2/3
  6992  0F43  3001               	movwf fsr1h	
  6993  0F44  0087               	
  6994                           	incf	(strcpy@d),f
  6995  0F45  0ABC               	movf	(strcpy@s+1),w
  6996  0F46  083B               	movwf	(??_strcpy+0)+0+1
  6997  0F47  00B9               	movf	(strcpy@s),w
  6998  0F48  083A               	movwf	(??_strcpy+0)+0
  6999  0F49  00B8               	incf	(strcpy@s),f
  7000  0F4A  0ABA               	skipnz
  7001  0F4B  1903               	incf	(strcpy@s+1),f
  7002  0F4C  0ABB               	movf	0+(??_strcpy+0)+0,w
  7003  0F4D  0838               	movwf	fsr0l
  7004  0F4E  0084               	movf	(1+(??_strcpy+0)+0),w
  7005  0F4F  0839               	movwf	fsr0h
  7006  0F50  0085               	movf	indf0,w ;code access
  7007  0F51  0800               	movwi	[0]fsr1
  7008  0F52  3FC0               	movf	wreg
  7009  0F53  0889               	btfss	status,2
  7010  0F54  1D03               	goto	u891
  7011  0F55  2F57               	goto	u890
  7012  0F56  2F58               u891:
  7013  0F57                     	goto	l1793
  7014  0F57  2F41               u890:
  7015  0F58                     	goto	l801
  7016  0F58  2F59               	
  7017                           l800:	
  7018  0F59                     	line	18
  7019                           ;	Return value of _strcpy is never used
  7020                           	
  7021                           l801:	
  7022  0F59                     	return
  7023  0F59  0008               	opt stack 0
  7024                           GLOBAL	__end_of_strcpy
  7025                           	__end_of_strcpy:
  7026  0F5A                     	signat	_strcpy,8313
  7027                           	global	_myint
  7028                           
  7029 ;; *************** function _myint *****************
  7030 ;; Defined at:
  7031 ;;		line 404 in file "161518_temp_main.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;		None
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;		None
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  1    wreg      void 
  7038 ;; Registers used:
  7039 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7047 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7048 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7049 ;;Total ram usage:        1 bytes
  7050 ;; Hardware stack levels used:    1
  7051 ;; Hardware stack levels required when called:    3
  7052 ;; This function calls:
  7053 ;;		_ToggleBitRB5
  7054 ;;		i1_Add_Trace
  7055 ;; This function is called by:
  7056 ;;		Interrupt level 1
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           psect	intentry,class=CODE,delta=2
  7060                           global __pintentry
  7061                           __pintentry:
  7062  0004                     psect	intentry
  7063                           	file	"161518_temp_main.c"
  7064                           	line	404
  7065                           	global	__size_of_myint
  7066                           	__size_of_myint	equ	__end_of_myint-_myint
  7067  0102                     	
  7068                           _myint:	
  7069  0004                     ;incstack = 0
  7070                           	opt	stack 6
  7071                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
  7072  0004  147E               ; Regs used in _myint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7073                           psect	intentry
  7074                           	pagesel	$
  7075  0005  3180               	line	407
  7076                           	
  7077                           i1l2279:	
  7078  0006                     	movlb 0	; select bank0
  7079  0006  0020               	btfss	(17),3	;volatile
  7080  0007  1D91               	goto	u131_21
  7081  0008  280A               	goto	u131_20
  7082  0009  280B               u131_21:
  7083  000A                     	goto	i1l2337
  7084  000A  28CC               u131_20:
  7085  000B                     	line	409
  7086                           	
  7087                           i1l2281:	
  7088  000B                     	bcf	(17),3	;volatile
  7089  000B  1191               	line	410
  7090                           	
  7091                           i1l2283:	
  7092  000C                     	movf	((_wI2CTxBufferSize)),w
  7093  000C  0858               	btfsc	status,2
  7094  000D  1903               	goto	u132_21
  7095  000E  2810               	goto	u132_20
  7096  000F  2811               u132_21:
  7097  0010                     	goto	i1l2337
  7098  0010  28CC               u132_20:
  7099  0011                     	line	412
  7100                           	
  7101                           i1l2285:	
  7102  0011                     	movlb 4	; select bank4
  7103  0011  0024               	btfss	(532)^0200h,4	;volatile
  7104  0012  1E14               	goto	u133_21
  7105  0013  2815               	goto	u133_20
  7106  0014  2816               u133_21:
  7107  0015                     	goto	i1l179
  7108  0015  281C               u133_20:
  7109  0016                     	line	415
  7110                           	
  7111                           i1l2287:	
  7112  0016                     	movlb 1	; select bank1
  7113  0016  0021               	bcf	(145)^080h,3	;volatile
  7114  0017  1191               	line	416
  7115                           	
  7116                           i1l2289:	
  7117  0018                     	movlb 0	; select bank0
  7118  0018  0020               	clrf	(_wI2CTxBufferSize)
  7119  0019  01D8               	line	417
  7120                           	clrf	(_wI2CTxSendPos)
  7121  001A  01D6               	line	418
  7122                           	goto	i1l2337
  7123  001B  28CC               	line	419
  7124                           	
  7125                           i1l179:	
  7126  001C                     	btfss	(532)^0200h,0	;volatile
  7127  001C  1C14               	goto	u134_21
  7128  001D  281F               	goto	u134_20
  7129  001E  2820               u134_21:
  7130  001F                     	goto	i1l181
  7131  001F  284C               u134_20:
  7132  0020                     	
  7133                           i1l2291:	
  7134  0020                     	movlb 1	; select bank1
  7135  0020  0021               	btfss	(_wI2CTxBuffer)^080h,(0)&7
  7136  0021  1C54               	goto	u135_21
  7137  0022  2824               	goto	u135_20
  7138  0023  2825               u135_21:
  7139  0024                     	goto	i1l181
  7140  0024  284C               u135_20:
  7141  0025                     	line	421
  7142                           	
  7143                           i1l2293:	
  7144  0025                     	movlb 4	; select bank4
  7145  0025  0024               	movf	(529)^0200h,w	;volatile
  7146  0026  0811               	movlb 0	; select bank0
  7147  0027  0020               	movwf	(??_myint+0)+0
  7148  0028  00AF               	movf	(_wReceptionBufferPosition),w
  7149  0029  0859               	addlw	low(_wReceptionBuffer|((0x1)<<8))&0ffh
  7150  002A  3E34               	movwf	fsr1l
  7151  002B  0086               	movlw 1	; select bank2/3
  7152  002C  3001               	movwf fsr1h	
  7153  002D  0087               	
  7154                           	movf	(??_myint+0)+0,w
  7155  002E  082F               	movwf	indf1
  7156  002F  0081               	line	422
  7157                           	
  7158                           i1l2295:	
  7159  0030                     	movlw	low(01h)
  7160  0030  3001               	movwf	(??_myint+0)+0
  7161  0031  00AF               	movf	(??_myint+0)+0,w
  7162  0032  082F               	addwf	(_wReceptionBufferPosition),f
  7163  0033  07D9               	line	424
  7164                           	
  7165                           i1l2297:	
  7166  0034                     	movlb 4	; select bank4
  7167  0034  0024               	bcf	(532)^0200h,0	;volatile
  7168  0035  1014               	line	425
  7169                           	
  7170                           i1l2299:	
  7171  0036                     	movlb 0	; select bank0
  7172  0036  0020               	movf	(_wI2CRxBufferSize),w
  7173  0037  0857               	subwf	(_wReceptionBufferPosition),w
  7174  0038  0259               	skipnc
  7175  0039  1803               	goto	u136_21
  7176  003A  283C               	goto	u136_20
  7177  003B  283D               u136_21:
  7178  003C                     	goto	i1l182
  7179  003C  2840               u136_20:
  7180  003D                     	line	427
  7181                           	
  7182                           i1l2301:	
  7183  003D                     	movlb 4	; select bank4
  7184  003D  0024               	bcf	(534)^0200h,5	;volatile
  7185  003E  1296               	line	428
  7186                           	goto	i1l2305
  7187  003F  2849               	line	429
  7188                           	
  7189                           i1l182:	
  7190  0040                     	line	431
  7191                           	movlb 4	; select bank4
  7192  0040  0024               	bsf	(534)^0200h,5	;volatile
  7193  0041  1696               	line	432
  7194                           	
  7195                           i1l2303:	
  7196  0042                     	movlw	low(01h)
  7197  0042  3001               	movlb 0	; select bank0
  7198  0043  0020               	movwf	(??_myint+0)+0
  7199  0044  00AF               	movf	(??_myint+0)+0,w
  7200  0045  082F               	movlb 1	; select bank1
  7201  0046  0021               	addwf	(_wReceptionCounter)^080h,f
  7202  0047  07D3               	goto	i1l2305
  7203  0048  2849               	line	434
  7204                           	
  7205                           i1l183:	
  7206  0049                     	line	435
  7207                           	
  7208                           i1l2305:	
  7209  0049                     	movlb 4	; select bank4
  7210  0049  0024               	bsf	(534)^0200h,4	;volatile
  7211  004A  1616               	line	436
  7212                           	goto	i1l2337
  7213  004B  28CC               	line	437
  7214                           	
  7215                           i1l181:	
  7216  004C                     	movlb 4	; select bank4
  7217  004C  0024               	btfss	(532)^0200h,3	;volatile
  7218  004D  1D94               	goto	u137_21
  7219  004E  2850               	goto	u137_20
  7220  004F  2851               u137_21:
  7221  0050                     	goto	i1l185
  7222  0050  286B               u137_20:
  7223  0051                     	
  7224                           i1l2307:	
  7225  0051                     	movlb 0	; select bank0
  7226  0051  0020               	movf	((_wI2CTxSendPos)),w
  7227  0052  0856               	btfss	status,2
  7228  0053  1D03               	goto	u138_21
  7229  0054  2856               	goto	u138_20
  7230  0055  2857               u138_21:
  7231  0056                     	goto	i1l185
  7232  0056  286B               u138_20:
  7233  0057                     	line	440
  7234                           	
  7235                           i1l2309:	
  7236  0057                     	movf	((_wI2CTxBufferSize)),w
  7237  0057  0858               	btfsc	status,2
  7238  0058  1903               	goto	u139_21
  7239  0059  285B               	goto	u139_20
  7240  005A  285C               u139_21:
  7241  005B                     	goto	i1l2337
  7242  005B  28CC               u139_20:
  7243  005C                     	line	442
  7244                           	
  7245                           i1l2311:	
  7246  005C                     	movf	(_wI2CTxSendPos),w
  7247  005C  0856               	addlw	low(_wI2CTxBuffer|((0x0)<<8))&0ffh
  7248  005D  3ED4               	movwf	fsr1l
  7249  005E  0086               	clrf fsr1h	
  7250  005F  0187               	
  7251                           	movf	indf1,w
  7252  0060  0801               	movlb 4	; select bank4
  7253  0061  0024               	movwf	(529)^0200h	;volatile
  7254  0062  0091               	line	443
  7255                           	
  7256                           i1l2313:	
  7257  0063                     	movlw	low(01h)
  7258  0063  3001               	movlb 0	; select bank0
  7259  0064  0020               	movwf	(??_myint+0)+0
  7260  0065  00AF               	movf	(??_myint+0)+0,w
  7261  0066  082F               	addwf	(_wI2CTxSendPos),f
  7262  0067  07D6               	line	444
  7263                           	goto	i1l2337
  7264  0068  28CC               	line	445
  7265                           	
  7266                           i1l186:	
  7267  0069                     	goto	i1l2337
  7268  0069  28CC               	line	448
  7269                           	
  7270                           i1l187:	
  7271  006A                     	line	449
  7272                           	goto	i1l2337
  7273  006A  28CC               	line	450
  7274                           	
  7275                           i1l185:	
  7276  006B                     	line	452
  7277                           	movlb 4	; select bank4
  7278  006B  0024               	btfsc	(534)^0200h,6	;volatile
  7279  006C  1B16               	goto	u140_21
  7280  006D  286F               	goto	u140_20
  7281  006E  2870               u140_21:
  7282  006F                     	goto	i1l189
  7283  006F  28A5               u140_20:
  7284  0070                     	
  7285                           i1l2315:	
  7286  0070                     	movlb 0	; select bank0
  7287  0070  0020               	movf	((_wI2CTxSendPos)),w
  7288  0071  0856               	btfsc	status,2
  7289  0072  1903               	goto	u141_21
  7290  0073  2875               	goto	u141_20
  7291  0074  2876               u141_21:
  7292  0075                     	goto	i1l189
  7293  0075  28A5               u141_20:
  7294  0076                     	line	456
  7295                           	
  7296                           i1l2317:	
  7297  0076                     	movf	(_wI2CTxBufferSize),w
  7298  0076  0858               	subwf	(_wI2CTxSendPos),w
  7299  0077  0256               	skipnc
  7300  0078  1803               	goto	u142_21
  7301  0079  287B               	goto	u142_20
  7302  007A  287C               u142_21:
  7303  007B                     	goto	i1l190
  7304  007B  2889               u142_20:
  7305  007C                     	line	458
  7306                           	
  7307                           i1l2319:	
  7308  007C                     	movf	(_wI2CTxSendPos),w
  7309  007C  0856               	addlw	low(_wI2CTxBuffer|((0x0)<<8))&0ffh
  7310  007D  3ED4               	movwf	fsr1l
  7311  007E  0086               	clrf fsr1h	
  7312  007F  0187               	
  7313                           	movf	indf1,w
  7314  0080  0801               	movlb 4	; select bank4
  7315  0081  0024               	movwf	(529)^0200h	;volatile
  7316  0082  0091               	line	459
  7317                           	
  7318                           i1l2321:	
  7319  0083                     	movlw	low(01h)
  7320  0083  3001               	movlb 0	; select bank0
  7321  0084  0020               	movwf	(??_myint+0)+0
  7322  0085  00AF               	movf	(??_myint+0)+0,w
  7323  0086  082F               	addwf	(_wI2CTxSendPos),f
  7324  0087  07D6               	line	460
  7325                           	goto	i1l2337
  7326  0088  28CC               	line	461
  7327                           	
  7328                           i1l190:	
  7329  0089                     	line	463
  7330                           	movlb 1	; select bank1
  7331  0089  0021               	btfss	(_wI2CTxBuffer)^080h,(0)&7
  7332  008A  1C54               	goto	u143_21
  7333  008B  288D               	goto	u143_20
  7334  008C  288E               u143_21:
  7335  008D                     	goto	i1l192
  7336  008D  28A0               u143_20:
  7337  008E                     	line	465
  7338                           	
  7339                           i1l2323:	
  7340  008E                     	movlb 0	; select bank0
  7341  008E  0020               	movf	(_wI2CRxBufferSize),w
  7342  008F  0857               	subwf	(_wReceptionBufferPosition),w
  7343  0090  0259               	skipnc
  7344  0091  1803               	goto	u144_21
  7345  0092  2894               	goto	u144_20
  7346  0093  2895               u144_21:
  7347  0094                     	goto	i1l193
  7348  0094  289C               u144_20:
  7349  0095                     	line	467
  7350                           	
  7351                           i1l2325:	
  7352  0095                     	opt asmopt_push
  7353                           opt asmopt_off
  7354                           	movlw	66
  7355  0095  3042               u185_27:
  7356  0096                     decfsz	wreg
  7357  0096  0B89               	goto	u185_27
  7358  0097  2896               	nop2
  7359  0098  3200               opt asmopt_pop
  7360                           
  7361                           	line	468
  7362                           	
  7363                           i1l2327:	
  7364  0099                     	movlb 4	; select bank4
  7365  0099  0024               	bsf	(534)^0200h,3	;volatile
  7366  009A  1596               	line	471
  7367                           	goto	i1l2337
  7368  009B  28CC               	line	472
  7369                           	
  7370                           i1l193:	
  7371  009C                     	line	474
  7372                           	movlb 4	; select bank4
  7373  009C  0024               	bsf	(534)^0200h,2	;volatile
  7374  009D  1516               	goto	i1l2337
  7375  009E  28CC               	line	475
  7376                           	
  7377                           i1l194:	
  7378  009F                     	line	476
  7379                           	goto	i1l2337
  7380  009F  28CC               	line	477
  7381                           	
  7382                           i1l192:	
  7383  00A0                     	line	479
  7384                           	movlb 4	; select bank4
  7385  00A0  0024               	bsf	(534)^0200h,2	;volatile
  7386  00A1  1516               	goto	i1l2337
  7387  00A2  28CC               	line	480
  7388                           	
  7389                           i1l195:	
  7390  00A3                     	goto	i1l2337
  7391  00A3  28CC               	line	481
  7392                           	
  7393                           i1l191:	
  7394  00A4                     	line	482
  7395                           	goto	i1l2337
  7396  00A4  28CC               	line	483
  7397                           	
  7398                           i1l189:	
  7399  00A5                     	movlb 4	; select bank4
  7400  00A5  0024               	btfss	(534)^0200h,6	;volatile
  7401  00A6  1F16               	goto	u145_21
  7402  00A7  28A9               	goto	u145_20
  7403  00A8  28AA               u145_21:
  7404  00A9                     	goto	i1l2335
  7405  00A9  28B8               u145_20:
  7406  00AA                     	line	486
  7407                           	
  7408                           i1l2329:	
  7409  00AA                     	bcf	(534)^0200h,6	;volatile
  7410  00AA  1316               	line	487
  7411                           	
  7412                           i1l2331:	
  7413  00AB                     	movlb 0	; select bank0
  7414  00AB  0020               	movf	((_wI2CTxSendPos)),w
  7415  00AC  0856               	btfsc	status,2
  7416  00AD  1903               	goto	u146_21
  7417  00AE  28B0               	goto	u146_20
  7418  00AF  28B1               u146_21:
  7419  00B0                     	goto	i1l198
  7420  00B0  28B4               u146_20:
  7421  00B1                     	line	489
  7422                           	
  7423                           i1l2333:	
  7424  00B1                     	movlb 4	; select bank4
  7425  00B1  0024               	bsf	(534)^0200h,2	;volatile
  7426  00B2  1516               	line	490
  7427                           	goto	i1l2337
  7428  00B3  28CC               	line	491
  7429                           	
  7430                           i1l198:	
  7431  00B4                     	line	493
  7432                           	movlb 4	; select bank4
  7433  00B4  0024               	bsf	(534)^0200h,2	;volatile
  7434  00B5  1516               	goto	i1l2337
  7435  00B6  28CC               	line	494
  7436                           	
  7437                           i1l199:	
  7438  00B7                     	line	495
  7439                           	goto	i1l2337
  7440  00B7  28CC               	line	496
  7441                           	
  7442                           i1l197:	
  7443  00B8                     	line	498
  7444                           	
  7445                           i1l2335:	
  7446  00B8                     	movlw	low(04Bh)
  7447  00B8  304B               	movlb 0	; select bank0
  7448  00B9  0020               	movwf	(??_myint+0)+0
  7449  00BA  00AF               	movf	(??_myint+0)+0,w
  7450  00BB  082F               	movwf	(i1Add_Trace@iSizeOfoText)
  7451  00BC  00A5               	movlw	low(((STR_7)|8000h))
  7452  00BD  305C               	movwf	(i1Add_Trace@iText)
  7453  00BE  00A6               	movlw	high(((STR_7)|8000h))
  7454  00BF  3090               	movwf	((i1Add_Trace@iText))+1
  7455  00C0  00A7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  7456  00C1  30A0               	fcall	i1_Add_Trace
  7457  00C2  3187  2795  3180   	goto	i1l2337
  7458  00C5  28CC               	line	499
  7459                           	
  7460                           i1l200:	
  7461  00C6                     	goto	i1l2337
  7462  00C6  28CC               	
  7463                           i1l196:	
  7464  00C7                     	goto	i1l2337
  7465  00C7  28CC               	line	500
  7466                           	
  7467                           i1l188:	
  7468  00C8                     	goto	i1l2337
  7469  00C8  28CC               	
  7470                           i1l184:	
  7471  00C9                     	goto	i1l2337
  7472  00C9  28CC               	
  7473                           i1l180:	
  7474  00CA                     	goto	i1l2337
  7475  00CA  28CC               	line	501
  7476                           	
  7477                           i1l178:	
  7478  00CB                     	goto	i1l2337
  7479  00CB  28CC               	line	502
  7480                           	
  7481                           i1l177:	
  7482  00CC                     	line	503
  7483                           	
  7484                           i1l2337:	
  7485  00CC                     	movlb 0	; select bank0
  7486  00CC  0020               	btfss	(18),3	;volatile
  7487  00CD  1D92               	goto	u147_21
  7488  00CE  28D0               	goto	u147_20
  7489  00CF  28D1               u147_21:
  7490  00D0                     	goto	i1l2343
  7491  00D0  28DF               u147_20:
  7492  00D1                     	line	505
  7493                           	
  7494                           i1l2339:	
  7495  00D1                     	bcf	(18),3	;volatile
  7496  00D1  1192               	line	506
  7497                           	
  7498                           i1l2341:	
  7499  00D2                     	movlw	low(04Bh)
  7500  00D2  304B               	movwf	(??_myint+0)+0
  7501  00D3  00AF               	movf	(??_myint+0)+0,w
  7502  00D4  082F               	movwf	(i1Add_Trace@iSizeOfoText)
  7503  00D5  00A5               	movlw	low(((STR_8)|8000h))
  7504  00D6  3055               	movwf	(i1Add_Trace@iText)
  7505  00D7  00A6               	movlw	high(((STR_8)|8000h))
  7506  00D8  3090               	movwf	((i1Add_Trace@iText))+1
  7507  00D9  00A7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  7508  00DA  30A0               	fcall	i1_Add_Trace
  7509  00DB  3187  2795  3180   	goto	i1l2343
  7510  00DE  28DF               	line	507
  7511                           	
  7512                           i1l201:	
  7513  00DF                     	line	508
  7514                           	
  7515                           i1l2343:	
  7516  00DF                     	movlb 0	; select bank0
  7517  00DF  0020               	btfss	(17),0	;volatile
  7518  00E0  1C11               	goto	u148_21
  7519  00E1  28E3               	goto	u148_20
  7520  00E2  28E4               u148_21:
  7521  00E3                     	goto	i1l205
  7522  00E3  2904               u148_20:
  7523  00E4                     	line	510
  7524                           	
  7525                           i1l2345:	
  7526  00E4                     	fcall	_ToggleBitRB5
  7527  00E4  318E  2636  3180   	line	512
  7528                           	
  7529                           i1l2347:	
  7530  00E7                     	movlw	low(01h)
  7531  00E7  3001               	movlb 0	; select bank0
  7532  00E8  0020               	movwf	(??_myint+0)+0
  7533  00E9  00AF               	movf	(??_myint+0)+0,w
  7534  00EA  082F               	addwf	(_wTimer1IntCounter),f
  7535  00EB  07D5               	line	513
  7536                           	
  7537                           i1l2349:	
  7538  00EC                     	bcf	(17),0	;volatile
  7539  00EC  1011               	line	515
  7540                           	
  7541                           i1l2351:	
  7542  00ED                     		movlw	7
  7543  00ED  3007               	xorwf	((_wTimer1IntCounter)),w
  7544  00EE  0655               	btfss	status,2
  7545  00EF  1D03               	goto	u149_21
  7546  00F0  28F2               	goto	u149_20
  7547  00F1  28F3               u149_21:
  7548  00F2                     	goto	i1l2355
  7549  00F2  28F8               u149_20:
  7550  00F3                     	line	517
  7551                           	
  7552                           i1l2353:	
  7553  00F3                     	movlw	low(04Ch)
  7554  00F3  304C               	movwf	(23)	;volatile
  7555  00F4  0097               	line	518
  7556                           	movlw	low(083h)
  7557  00F5  3083               	movwf	(22)	;volatile
  7558  00F6  0096               	goto	i1l2355
  7559  00F7  28F8               	line	519
  7560                           	
  7561                           i1l203:	
  7562  00F8                     	line	520
  7563                           	
  7564                           i1l2355:	
  7565  00F8                     		movlw	8
  7566  00F8  3008               	xorwf	((_wTimer1IntCounter)),w
  7567  00F9  0655               	btfss	status,2
  7568  00FA  1D03               	goto	u150_21
  7569  00FB  28FD               	goto	u150_20
  7570  00FC  28FE               u150_21:
  7571  00FD                     	goto	i1l205
  7572  00FD  2904               u150_20:
  7573  00FE                     	line	522
  7574                           	
  7575                           i1l2357:	
  7576  00FE                     	clrf	(_wTimer1IntCounter)
  7577  00FE  01D5               	line	524
  7578                           	
  7579                           i1l2359:	
  7580  00FF                     	movlb 1	; select bank1
  7581  00FF  0021               	clrf	(_wTempUpdate)^080h
  7582  0100  01D1               	incf	(_wTempUpdate)^080h,f
  7583  0101  0AD1               	goto	i1l205
  7584  0102  2904               	line	525
  7585                           	
  7586                           i1l204:	
  7587  0103                     	goto	i1l205
  7588  0103  2904               	line	526
  7589                           	
  7590                           i1l202:	
  7591  0104                     	line	527
  7592                           	
  7593                           i1l205:	
  7594  0104                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  7595  0104  107E               	retfie
  7596  0105  0009               	opt stack 0
  7597                           GLOBAL	__end_of_myint
  7598                           	__end_of_myint:
  7599  0106                     	signat	_myint,89
  7600                           	global	i1_Add_Trace
  7601                           
  7602 ;; *************** function i1_Add_Trace *****************
  7603 ;; Defined at:
  7604 ;;		line 80 in file "161518_temp_main.c"
  7605 ;; Parameters:    Size  Location     Type
  7606 ;;  oText           1    wreg     PTR unsigned char 
  7607 ;;		 -> wInterruptText(75), 
  7608 ;;  iSizeOfoText    1    5[BANK0 ] unsigned char 
  7609 ;;  iText           2    6[BANK0 ] PTR unsigned char 
  7610 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  7611 ;;		 -> main@wReadout(20), 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  oText           1   14[BANK0 ] PTR unsigned char 
  7614 ;;		 -> wInterruptText(75), 
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  1    wreg      void 
  7617 ;; Registers used:
  7618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7619 ;; Tracked objects:
  7620 ;;		On entry : 0/0
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7624 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  7625 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7626 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  7627 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  7628 ;;Total ram usage:       10 bytes
  7629 ;; Hardware stack levels used:    1
  7630 ;; Hardware stack levels required when called:    2
  7631 ;; This function calls:
  7632 ;;		i1_strcat
  7633 ;;		i1_strlen
  7634 ;; This function is called by:
  7635 ;;		_myint
  7636 ;; This function uses a non-reentrant model
  7637 ;;
  7638                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
  7639                           	line	80
  7640                           global __ptext30
  7641                           __ptext30:	;psect for function i1_Add_Trace
  7642  0795                     psect	text30
  7643                           	file	"161518_temp_main.c"
  7644                           	line	80
  7645                           	global	__size_ofi1_Add_Trace
  7646                           	__size_ofi1_Add_Trace	equ	__end_ofi1_Add_Trace-i1_Add_Trace
  7647  003A                     	
  7648                           i1_Add_Trace:	
  7649  0795                     ;incstack = 0
  7650                           	opt	stack 6
  7651                           ; Regs used in i1_Add_Trace: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7652                           ;i1Add_Trace@oText stored from wreg
  7653                           	movlb 0	; select bank0
  7654  0795  0020               	movwf	(i1Add_Trace@oText)
  7655  0796  00AE               	line	82
  7656                           	
  7657                           i1l2041:	
  7658  0797                     	movf	(i1Add_Trace@oText),w
  7659  0797  082E               	movwf	(i1strlen@s)
  7660  0798  00F0               	movlw	0x1
  7661  0799  3001               
  7662                           	movwf	(i1strlen@s+1)
  7663  079A  00F1               	fcall	i1_strlen
  7664  079B  318E  26CA  3187   	comf	(0+(?i1_strlen)),w
  7665  079E  0970               	movlb 0	; select bank0
  7666  079F  0020               	movwf	(??i1_Add_Trace+0)+0
  7667  07A0  00A8               	comf	(1+(?i1_strlen)),w
  7668  07A1  0971               	movwf	((??i1_Add_Trace+0)+0+1)
  7669  07A2  00A9               	incf	(??i1_Add_Trace+0)+0,f
  7670  07A3  0AA8               	skipnz
  7671  07A4  1903               	incf	((??i1_Add_Trace+0)+0+1),f
  7672  07A5  0AA9               	movf	(i1Add_Trace@iSizeOfoText),w
  7673  07A6  0825               	addwf	0+(??i1_Add_Trace+0)+0,w
  7674  07A7  0728               	movwf	(??i1_Add_Trace+2)+0
  7675  07A8  00AA               	movf	1+(??i1_Add_Trace+0)+0,w
  7676  07A9  0829               	skipnc
  7677  07AA  1803               	incf	1+(??i1_Add_Trace+0)+0,w
  7678  07AB  0A29               	movwf	((??i1_Add_Trace+2)+0)+1
  7679  07AC  00AB               	movf	0+(??i1_Add_Trace+2)+0,w
  7680  07AD  082A               	addlw	0FFh
  7681  07AE  3EFF               	movwf	(??i1_Add_Trace+4)+0
  7682  07AF  00AC               	movlw	0FFh
  7683  07B0  30FF               	addwfc	1+(??i1_Add_Trace+2)+0,w
  7684  07B1  3D2B               	movwf	1+(??i1_Add_Trace+4)+0
  7685  07B2  00AD               	movf	(i1Add_Trace@iText+1),w
  7686  07B3  0827               	movwf	(i1strlen@s+1)
  7687  07B4  00F1               	movf	(i1Add_Trace@iText),w
  7688  07B5  0826               	movwf	(i1strlen@s)
  7689  07B6  00F0               	fcall	i1_strlen
  7690  07B7  318E  26CA  3187   	movlb 0	; select bank0
  7691  07BA  0020               	movf	1+(??i1_Add_Trace+4)+0,w
  7692  07BB  082D               	subwf	(1+(?i1_strlen)),w
  7693  07BC  0271               	skipz
  7694  07BD  1D03               	goto	u120_25
  7695  07BE  2FC1               	movf	0+(??i1_Add_Trace+4)+0,w
  7696  07BF  082C               	subwf	(0+(?i1_strlen)),w
  7697  07C0  0270               u120_25:
  7698  07C1                     	skipnc
  7699  07C1  1803               	goto	u120_21
  7700  07C2  2FC4               	goto	u120_20
  7701  07C3  2FC5               u120_21:
  7702  07C4                     	goto	i1l117
  7703  07C4  2FCE               u120_20:
  7704  07C5                     	line	84
  7705                           	
  7706                           i1l2043:	
  7707  07C5                     	movf	(i1Add_Trace@iText+1),w
  7708  07C5  0827               	movwf	(i1strcat@src+1)
  7709  07C6  00A1               	movf	(i1Add_Trace@iText),w
  7710  07C7  0826               	movwf	(i1strcat@src)
  7711  07C8  00A0               	movf	(i1Add_Trace@oText),w
  7712  07C9  082E               	fcall	i1_strcat
  7713  07CA  318E  2698  3187   	goto	i1l117
  7714  07CD  2FCE               	line	85
  7715                           	
  7716                           i1l116:	
  7717  07CE                     	line	86
  7718                           	
  7719                           i1l117:	
  7720  07CE                     	return
  7721  07CE  0008               	opt stack 0
  7722                           GLOBAL	__end_ofi1_Add_Trace
  7723                           	__end_ofi1_Add_Trace:
  7724  07CF                     	signat	i1_Add_Trace,89
  7725                           	global	i1_strcat
  7726                           
  7727 ;; *************** function i1_strcat *****************
  7728 ;; Defined at:
  7729 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  dest            1    wreg     PTR unsigned char 
  7732 ;;		 -> wInterruptText(75), 
  7733 ;;  src             2    0[BANK0 ] PTR const unsigned char 
  7734 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  7735 ;;		 -> main@wReadout(20), 
  7736 ;; Auto vars:     Size  Location     Type
  7737 ;;  dest            1    4[BANK0 ] PTR unsigned char 
  7738 ;;		 -> wInterruptText(75), 
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  1    wreg      PTR unsigned char 
  7741 ;; Registers used:
  7742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7748 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7750 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7751 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7752 ;;Total ram usage:        5 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; Hardware stack levels required when called:    1
  7755 ;; This function calls:
  7756 ;;		i1_strcpy
  7757 ;;		i1_strlen
  7758 ;; This function is called by:
  7759 ;;		i1_Add_Trace
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
  7763                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  7764                           	line	3
  7765                           global __ptext31
  7766                           __ptext31:	;psect for function i1_strcat
  7767  0E98                     psect	text31
  7768                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  7769                           	line	3
  7770                           	global	__size_ofi1_strcat
  7771                           	__size_ofi1_strcat	equ	__end_ofi1_strcat-i1_strcat
  7772  0019                     	
  7773                           i1_strcat:	
  7774  0E98                     ;incstack = 0
  7775                           	opt	stack 6
  7776                           ; Regs used in i1_strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7777                           ;i1strcat@dest stored from wreg
  7778                           	movlb 0	; select bank0
  7779  0E98  0020               	movwf	(i1strcat@dest)
  7780  0E99  00A4               	line	5
  7781                           	
  7782                           i1l1913:	
  7783  0E9A                     	movf	(i1strcat@src+1),w
  7784  0E9A  0821               	movwf	(i1strcpy@src+1)
  7785  0E9B  00F7               	movf	(i1strcat@src),w
  7786  0E9C  0820               	movwf	(i1strcpy@src)
  7787  0E9D  00F6               	movf	(i1strcat@dest),w
  7788  0E9E  0824               	movwf	(i1strlen@s)
  7789  0E9F  00F0               	movlw	0x1
  7790  0EA0  3001               
  7791                           	movwf	(i1strlen@s+1)
  7792  0EA1  00F1               	fcall	i1_strlen
  7793  0EA2  318E  26CA  318E   	movf	(0+?i1_strlen),w
  7794  0EA5  0870               	movlb 0	; select bank0
  7795  0EA6  0020               	movwf	(??i1_strcat+0)+0
  7796  0EA7  00A2               	movf	(1+?i1_strlen),w
  7797  0EA8  0871               	movwf	((??i1_strcat+0)+0+1)
  7798  0EA9  00A3               	movf	(i1strcat@dest),w
  7799  0EAA  0824               	addwf	0+(??i1_strcat+0)+0,w
  7800  0EAB  0722               	fcall	i1_strcpy
  7801  0EAC  318E  26ED  318E   	goto	i1l795
  7802  0EAF  2EB0               	line	6
  7803                           	
  7804                           i1l1915:	
  7805  0EB0                     	line	7
  7806                           ;	Return value of i1_strcat is never used
  7807                           	
  7808                           i1l795:	
  7809  0EB0                     	return
  7810  0EB0  0008               	opt stack 0
  7811                           GLOBAL	__end_ofi1_strcat
  7812                           	__end_ofi1_strcat:
  7813  0EB1                     	signat	i1_strcat,89
  7814                           	global	i1_strlen
  7815                           
  7816 ;; *************** function i1_strlen *****************
  7817 ;; Defined at:
  7818 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  7819 ;; Parameters:    Size  Location     Type
  7820 ;;  s               2    0[COMMON] PTR const unsigned char 
  7821 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  7822 ;;		 -> main@wReadout(20), wInterruptText(75), 
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;  strlen          2    4[COMMON] PTR const unsigned char 
  7825 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  7826 ;;		 -> main@wReadout(20), wInterruptText(75), 
  7827 ;; Return value:  Size  Location     Type
  7828 ;;                  2    0[COMMON] unsigned int 
  7829 ;; Registers used:
  7830 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7831 ;; Tracked objects:
  7832 ;;		On entry : 0/0
  7833 ;;		On exit  : 0/0
  7834 ;;		Unchanged: 0/0
  7835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7837 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7838 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7839 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7840 ;;Total ram usage:        6 bytes
  7841 ;; Hardware stack levels used:    1
  7842 ;; This function calls:
  7843 ;;		Nothing
  7844 ;; This function is called by:
  7845 ;;		i1_Add_Trace
  7846 ;;		i1_strcat
  7847 ;; This function uses a non-reentrant model
  7848 ;;
  7849                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
  7850                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  7851                           	line	12
  7852                           global __ptext32
  7853                           __ptext32:	;psect for function i1_strlen
  7854  0ECA                     psect	text32
  7855                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  7856                           	line	12
  7857                           	global	__size_ofi1_strlen
  7858                           	__size_ofi1_strlen	equ	__end_ofi1_strlen-i1_strlen
  7859  0023                     	
  7860                           i1_strlen:	
  7861  0ECA                     ;incstack = 0
  7862                           	opt	stack 7
  7863                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
  7864                           	line	14
  7865                           	
  7866                           i1l1799:	
  7867  0ECA                     	movf	(i1strlen@s+1),w
  7868  0ECA  0871               	movwf	(i1strlen@a+1)
  7869  0ECB  00F5               	movf	(i1strlen@s),w
  7870  0ECC  0870               	movwf	(i1strlen@a)
  7871  0ECD  00F4               	line	16
  7872                           	goto	i1l1803
  7873  0ECE  2ED4               	
  7874                           i1l805:	
  7875  0ECF                     	line	17
  7876                           	
  7877                           i1l1801:	
  7878  0ECF                     	movlw	01h
  7879  0ECF  3001               	addwf	(i1strlen@s),f
  7880  0ED0  07F0               	movlw	0
  7881  0ED1  3000               	addwfc	(i1strlen@s+1),f
  7882  0ED2  3DF1               	goto	i1l1803
  7883  0ED3  2ED4               	line	18
  7884                           	
  7885                           i1l804:	
  7886  0ED4                     	line	16
  7887                           	
  7888                           i1l1803:	
  7889  0ED4                     	movf	(i1strlen@s),w
  7890  0ED4  0870               	movwf	fsr0l
  7891  0ED5  0084               	movf	((i1strlen@s+1)),w
  7892  0ED6  0871               	movwf	fsr0h
  7893  0ED7  0085               	moviw	fsr0++
  7894  0ED8  0012               	btfss	status,2
  7895  0ED9  1D03               	goto	u91_21
  7896  0EDA  2EDC               	goto	u91_20
  7897  0EDB  2EDD               u91_21:
  7898  0EDC                     	goto	i1l1801
  7899  0EDC  2ECF               u91_20:
  7900  0EDD                     	goto	i1l1805
  7901  0EDD  2EDE               	
  7902                           i1l806:	
  7903  0EDE                     	line	25
  7904                           	
  7905                           i1l1805:	
  7906  0EDE                     	comf	(i1strlen@a),w
  7907  0EDE  0974               	movwf	(??i1_strlen+0)+0
  7908  0EDF  00F2               	comf	(i1strlen@a+1),w
  7909  0EE0  0975               	movwf	((??i1_strlen+0)+0+1)
  7910  0EE1  00F3               	incf	(??i1_strlen+0)+0,f
  7911  0EE2  0AF2               	skipnz
  7912  0EE3  1903               	incf	((??i1_strlen+0)+0+1),f
  7913  0EE4  0AF3               	movf	(i1strlen@s),w
  7914  0EE5  0870               	addwf	0+(??i1_strlen+0)+0,w
  7915  0EE6  0772               	movwf	(?i1_strlen)
  7916  0EE7  00F0               	movf	(i1strlen@s+1),w
  7917  0EE8  0871               	addwfc	1+(??i1_strlen+0)+0,w
  7918  0EE9  3D73               	movwf	1+(?i1_strlen)
  7919  0EEA  00F1               	goto	i1l807
  7920  0EEB  2EEC               	
  7921                           i1l1807:	
  7922  0EEC                     	line	26
  7923                           	
  7924                           i1l807:	
  7925  0EEC                     	return
  7926  0EEC  0008               	opt stack 0
  7927                           GLOBAL	__end_ofi1_strlen
  7928                           	__end_ofi1_strlen:
  7929  0EED                     	signat	i1_strlen,90
  7930                           	global	i1_strcpy
  7931                           
  7932 ;; *************** function i1_strcpy *****************
  7933 ;; Defined at:
  7934 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;  dest            1    wreg     PTR unsigned char 
  7937 ;;		 -> wInterruptText(75), 
  7938 ;;  src             2    6[COMMON] PTR const unsigned char 
  7939 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  7940 ;;		 -> main@wReadout(20), 
  7941 ;; Auto vars:     Size  Location     Type
  7942 ;;  dest            1   12[COMMON] PTR unsigned char 
  7943 ;;		 -> wInterruptText(75), 
  7944 ;;  strcpy          2   10[COMMON] PTR const unsigned char 
  7945 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  7946 ;;		 -> main@wReadout(20), 
  7947 ;;  strcpy          1   13[COMMON] PTR unsigned char 
  7948 ;;		 -> wInterruptText(75), 
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  1    wreg      PTR unsigned char 
  7951 ;; Registers used:
  7952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7959 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7960 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7961 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7962 ;;Total ram usage:        8 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; This function calls:
  7965 ;;		Nothing
  7966 ;; This function is called by:
  7967 ;;		i1_strcat
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
  7971                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  7972                           	line	7
  7973                           global __ptext33
  7974                           __ptext33:	;psect for function i1_strcpy
  7975  0EED                     psect	text33
  7976                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  7977                           	line	7
  7978                           	global	__size_ofi1_strcpy
  7979                           	__size_ofi1_strcpy	equ	__end_ofi1_strcpy-i1_strcpy
  7980  0024                     	
  7981                           i1_strcpy:	
  7982  0EED                     ;incstack = 0
  7983                           	opt	stack 6
  7984                           ; Regs used in i1_strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  7985                           ;i1strcpy@dest stored from wreg
  7986                           	movwf	(i1strcpy@dest)
  7987  0EED  00FC               	line	13
  7988                           	
  7989                           i1l1795:	
  7990  0EEE                     	movf	(i1strcpy@src+1),w
  7991  0EEE  0877               	movwf	(i1strcpy@s+1)
  7992  0EEF  00FB               	movf	(i1strcpy@src),w
  7993  0EF0  0876               	movwf	(i1strcpy@s)
  7994  0EF1  00FA               	line	14
  7995                           	movf	(i1strcpy@dest),w
  7996  0EF2  087C               	movwf	(??i1_strcpy+0)+0
  7997  0EF3  00F8               	movf	(??i1_strcpy+0)+0,w
  7998  0EF4  0878               	movwf	(i1strcpy@d)
  7999  0EF5  00FD               	line	15
  8000                           	goto	i1l1797
  8001  0EF6  2EF8               	
  8002                           i1l799:	
  8003  0EF7                     	goto	i1l1797
  8004  0EF7  2EF8               	
  8005                           i1l798:	
  8006  0EF8                     	
  8007                           i1l1797:	
  8008  0EF8                     	movf	(i1strcpy@d),w
  8009  0EF8  087D               	movwf	fsr1l
  8010  0EF9  0086               	movlw 1	; select bank2/3
  8011  0EFA  3001               	movwf fsr1h	
  8012  0EFB  0087               	
  8013                           	incf	(i1strcpy@d),f
  8014  0EFC  0AFD               	movf	(i1strcpy@s+1),w
  8015  0EFD  087B               	movwf	(??i1_strcpy+0)+0+1
  8016  0EFE  00F9               	movf	(i1strcpy@s),w
  8017  0EFF  087A               	movwf	(??i1_strcpy+0)+0
  8018  0F00  00F8               	incf	(i1strcpy@s),f
  8019  0F01  0AFA               	skipnz
  8020  0F02  1903               	incf	(i1strcpy@s+1),f
  8021  0F03  0AFB               	movf	0+(??i1_strcpy+0)+0,w
  8022  0F04  0878               	movwf	fsr0l
  8023  0F05  0084               	movf	(1+(??i1_strcpy+0)+0),w
  8024  0F06  0879               	movwf	fsr0h
  8025  0F07  0085               	movf	indf0,w ;code access
  8026  0F08  0800               	movwi	[0]fsr1
  8027  0F09  3FC0               	movf	wreg
  8028  0F0A  0889               	btfss	status,2
  8029  0F0B  1D03               	goto	u90_21
  8030  0F0C  2F0E               	goto	u90_20
  8031  0F0D  2F0F               u90_21:
  8032  0F0E                     	goto	i1l1797
  8033  0F0E  2EF8               u90_20:
  8034  0F0F                     	goto	i1l801
  8035  0F0F  2F10               	
  8036                           i1l800:	
  8037  0F10                     	line	18
  8038                           ;	Return value of i1_strcpy is never used
  8039                           	
  8040                           i1l801:	
  8041  0F10                     	return
  8042  0F10  0008               	opt stack 0
  8043                           GLOBAL	__end_ofi1_strcpy
  8044                           	__end_ofi1_strcpy:
  8045  0F11                     	signat	i1_strcpy,89
  8046                           	global	_ToggleBitRB5
  8047                           
  8048 ;; *************** function _ToggleBitRB5 *****************
  8049 ;; Defined at:
  8050 ;;		line 54 in file "161518_temp_main.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;		None
  8053 ;; Auto vars:     Size  Location     Type
  8054 ;;		None
  8055 ;; Return value:  Size  Location     Type
  8056 ;;                  1    wreg      void 
  8057 ;; Registers used:
  8058 ;;		None
  8059 ;; Tracked objects:
  8060 ;;		On entry : 0/0
  8061 ;;		On exit  : 0/0
  8062 ;;		Unchanged: 0/0
  8063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8068 ;;Total ram usage:        0 bytes
  8069 ;; Hardware stack levels used:    1
  8070 ;; This function calls:
  8071 ;;		Nothing
  8072 ;; This function is called by:
  8073 ;;		_myint
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
  8077                           	file	"161518_temp_main.c"
  8078                           	line	54
  8079                           global __ptext34
  8080                           __ptext34:	;psect for function _ToggleBitRB5
  8081  0E36                     psect	text34
  8082                           	file	"161518_temp_main.c"
  8083                           	line	54
  8084                           	global	__size_of_ToggleBitRB5
  8085                           	__size_of_ToggleBitRB5	equ	__end_of_ToggleBitRB5-_ToggleBitRB5
  8086  000A                     	
  8087                           _ToggleBitRB5:	
  8088  0E36                     ;incstack = 0
  8089                           	opt	stack 8
  8090                           ; Regs used in _ToggleBitRB5: []
  8091                           	line	56
  8092                           	
  8093                           i1l1917:	
  8094  0E36                     	movlb 0	; select bank0
  8095  0E36  0020               	btfss	(13),5	;volatile
  8096  0E37  1E8D               	goto	u111_21
  8097  0E38  2E3A               	goto	u111_20
  8098  0E39  2E3B               u111_21:
  8099  0E3A                     	goto	i1l107
  8100  0E3A  2E3D               u111_20:
  8101  0E3B                     	line	58
  8102                           	
  8103                           i1l1919:	
  8104  0E3B                     	bcf	(13),5	;volatile
  8105  0E3B  128D               	line	59
  8106                           	goto	i1l109
  8107  0E3C  2E3F               	line	60
  8108                           	
  8109                           i1l107:	
  8110  0E3D                     	line	62
  8111                           	bsf	(13),5	;volatile
  8112  0E3D  168D               	goto	i1l109
  8113  0E3E  2E3F               	line	63
  8114                           	
  8115                           i1l108:	
  8116  0E3F                     	line	64
  8117                           	
  8118                           i1l109:	
  8119  0E3F                     	return
  8120  0E3F  0008               	opt stack 0
  8121                           GLOBAL	__end_of_ToggleBitRB5
  8122                           	__end_of_ToggleBitRB5:
  8123  0E40                     	signat	_ToggleBitRB5,89
  8124                           global	___latbits
  8125                           ___latbits	equ	3
  8126  0003                     	global	btemp
  8127                           	btemp set 07Eh
  8128  007E                     
  8129                           	DABS	1,126,2	;btemp
  8130                           	global	int$flags
  8131                           	int$flags	set btemp
  8132  007E                     	global	wtemp0
  8133                           	wtemp0 set btemp+0
  8134  007E                     	end


Data Sizes:
    Strings     96
    Constant    0
    Data        4
    BSS         159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      61
    BANK1            80     49      76
    BANK2            80      0      50
    BANK3            80      0      75
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK1[20]), wInterruptText(BANK3[75]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK1[20]), wInterruptText(BANK3[75]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK1[20]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK1[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK1[20]), 

    strcat@dest	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    memset@dest	PTR void  size(2) Largest target is 75
		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]), 

    memset@s	PTR unsigned char  size(2) Largest target is 75
		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]), 

    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
		 -> STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[16]), STR_3(CODE[16]), 
		 -> main@wConv(BANK1[4]), wInterruptText(BANK3[75]), 

    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
		 -> main@wEnterBottonPressed(BANK1[1]), main@wDownBottonPressed(BANK1[1]), main@wUpBottonPressed(BANK1[1]), 

    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
		 -> main@wDebounceDown(BANK1[2]), main@wDebounceUp(BANK1[2]), main@wDebounceEnter(BANK1[2]), 

    printEM1812@oTextOut	PTR unsigned char  size(1) Largest target is 20
		 -> main@wReadout(BANK1[20]), 

    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    sp__memset	PTR void  size(2) Largest target is 75
		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    Add_Trace@iText	PTR unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK1[20]), 

    Add_Trace@oText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myint in COMMON

    i1_strcat->i1_strcpy
    i1_strcpy->i1_strlen

Critical Paths under _main in BANK0

    _main->_Add_Trace
    _setNotBlinkingCursor->_writeInsChk
    _setCursorOff->_writeInsChk
    _printEM1812->___lwdiv
    _powerOnLcd->_writeInsChk
    _moveCursorToHome->_writeInsChk
    _initLCD->_writeInsChk
    _clearDisplay->_writeInsChk
    _writeInsChk->_waitLCDBusy
    _writeInsChk->_writeInsNoChk
    _writeInsNoChk->_setData
    _PrintLog->_lcdWriteText
    _lcdWriteText->_writeTxtChk
    _writeTxtChk->_setCursorPosition
    _setCursorPosition->_waitLCDBusy
    _GetTemp->_memset
    _Add_Trace->_strcat
    _strcat->_strcpy
    _strcpy->_strlen

Critical Paths under _myint in BANK0

    _myint->i1_Add_Trace
    i1_Add_Trace->i1_strcat

Critical Paths under _main in BANK1

    None.

Critical Paths under _myint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myint in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myint in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myint in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myint in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myint in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myint in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                54    54      0   18952
                                             45 BANK0      5     5      0
                                              0 BANK1     49    49      0
                          _Add_Trace
                           _Debounce
                            _GetTemp
                           _PrintLog
                       _SetToGetTemp
                           _WakeTemp
                       _clearDisplay
                            _initLCD
                       _lcdWriteText
                             _memset
                   _moveCursorToHome
                         _powerOnLcd
                        _printEM1812
                       _setCursorOff
                  _setCursorPosition
               _setNotBlinkingCursor
 ---------------------------------------------------------------------------------
 (1) _setNotBlinkingCursor                                 1     1      0     178
                                             22 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _setCursorOff                                         1     1      0     178
                                             22 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _printEM1812                                         27    24      3    1524
                                             24 BANK0      7     4      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     463
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                             16 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _powerOnLcd                                           1     1      0     178
                                             22 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _moveCursorToHome                                     0     0      0     178
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     444
                                             22 BANK0      1     1      0
                       _clearDisplay
                            _setData
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _clearDisplay                                         0     0      0     178
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _writeInsChk                                          1     1      0     178
                                             21 BANK0      1     1      0
                        _waitLCDBusy
                      _writeInsNoChk
 ---------------------------------------------------------------------------------
 (3) _writeInsNoChk                                        2     2      0     132
                                             19 BANK0      2     2      0
                 _SetToSendDataToLCD
                            _setData
 ---------------------------------------------------------------------------------
 (1) _WakeTemp                                             1     1      0       0
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SetToGetTemp                                         1     1      0       0
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PrintLog                                             4     4      0    4632
                                             35 BANK0      4     4      0
                       _lcdWriteText
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _lcdWriteText                                         6     4      2    2147
                                             29 BANK0      6     4      2
                        _writeTxtChk
 ---------------------------------------------------------------------------------
 (2) _writeTxtChk                                          3     3      0    1601
                                             26 BANK0      3     3      0
                 _SetToSendDataToLCD
                  _setCursorPosition
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (1) _setCursorPosition                                    5     4      1    1423
                                             21 BANK0      5     4      1
                 _SetToSendDataToLCD
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (3) _waitLCDBusy                                          5     5      0      24
                                             16 BANK0      5     5      0
               _SetToReadDataFromLCD
 ---------------------------------------------------------------------------------
 (4) _SetToReadDataFromLCD                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setData                                              3     3      0      88
                                             16 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _SetToSendDataToLCD                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetTemp                                              1     1      0    1897
                                             30 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                              14     8      6    1897
                                             16 BANK0     14     8      6
 ---------------------------------------------------------------------------------
 (1) _Debounce                                             5     3      2     632
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _Add_Trace                                           10     7      3    2290
                                             35 BANK0     10     7      3
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcat                                               5     3      2     780
                                             30 BANK0      5     3      2
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     394
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     6      2     205
                                             22 BANK0      8     6      2
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _myint                                                1     1      0     770
                                             15 BANK0      1     1      0
                       _ToggleBitRB5
                        i1_Add_Trace
 ---------------------------------------------------------------------------------
 (8) i1_Add_Trace                                         10     7      3     770
                                              5 BANK0     10     7      3
                           i1_strcat
                           i1_strlen
 ---------------------------------------------------------------------------------
 (9) i1_strcat                                             5     3      2     388
                                              0 BANK0      5     3      2
                           i1_strcpy
                           i1_strlen
 ---------------------------------------------------------------------------------
 (9) i1_strlen                                             6     4      2     168
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (10) i1_strcpy                                            8     6      2     122
                                              6 COMMON     8     6      2
                           i1_strlen (ARG)
 ---------------------------------------------------------------------------------
 (8) _ToggleBitRB5                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Add_Trace
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _Debounce
   _GetTemp
     _memset
   _PrintLog
     _lcdWriteText
       _writeTxtChk
         _SetToSendDataToLCD
         _setCursorPosition
           _SetToSendDataToLCD
           _setData
           _waitLCDBusy
             _SetToReadDataFromLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
     _memset
     _strlen
   _SetToGetTemp
   _WakeTemp
   _clearDisplay
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _initLCD
     _clearDisplay
       _writeInsChk
         _waitLCDBusy
           _SetToReadDataFromLCD
         _writeInsNoChk
           _SetToSendDataToLCD
           _setData
     _setData
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _lcdWriteText
     _writeTxtChk
       _SetToSendDataToLCD
       _setCursorPosition
         _SetToSendDataToLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
       _setData
       _waitLCDBusy
         _SetToReadDataFromLCD
   _memset
   _moveCursorToHome
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _powerOnLcd
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _printEM1812
     ___lwdiv
     ___lwmod
   _setCursorOff
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _setCursorPosition
     _SetToSendDataToLCD
     _setData
     _waitLCDBusy
       _SetToReadDataFromLCD
   _setNotBlinkingCursor
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData

 _myint (ROOT)
   _ToggleBitRB5
   i1_Add_Trace
     i1_strcat
       i1_strcpy
         i1_strlen (ARG)
       i1_strlen
     i1_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     32      3D       5       76.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     31      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      32       9       62.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4B      11       93.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     114      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     114      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Jan 20 23:22:58 2019

                  __CFG_CP$OFF 0000                    _SSPSTATbits 0214             _SetToSendDataToLCD 0E1C  
                          l120 0FA8                            l112 0F7F                            l121 0FA8  
                          l113 0F7F                            l116 0794                            l124 0E7F  
                          l132 05A9                            l117 0794                            l125 0E7F  
                          l150 021B                            l135 066A                            l303 0E6B  
                          l151 025D                            l136 0671                            l128 07FC  
                          l160 02FB                            l152 02CF                            l137 0684  
                          l241 0FC1                            l129 07FC                            l161 030A  
                          l138 069E                            l242 0FAC                            l330 0E1B  
                          l306 0E60                            l170 03D4                            l162 0377  
                          l154 0272                            l139 069E                            l243 0FD2  
                          l163 0363                            l155 0330                            l340 05C2  
                          l260 04C1                            l244 0FD2                            l164 03B5  
                          l156 031A                            l341 05CD                            l261 04E4  
                          l333 0E35                            l165 03BE                            l157 02DD  
                          l342 05D8                            l270 04EE                            l262 04CE  
                          l238 0659                            l166 03CA                            l158 032F  
                          l343 0609                            l271 04F5                            l263 04E3  
                          l167 03D2                            l159 02EC                            l256 075A  
                          l336 05DA                            l272 04FC                            l264 04DB  
                          l168 03D3                            l337 05AE                            l273 0505  
                          l265 04E2                            l169 03D4                            l282 0E27  
                          l290 0FFF                            l338 05F0                            l266 053D  
                          l291 0FFF                            l339 05B7                            l267 0507  
                          l259 04E6                            l268 04E7                            l276 0E4A  
                          l620 06DD                            l285 0E21                            l269 051E  
                          l621 06B5                            l622 06AB                            l630 0719  
                          l279 0E97                            l623 06BA                            l631 06F7  
                          l800 0F59                            l288 0FF7                            l624 06BB  
                          l632 06ED                            l801 0F59                            l289 0FDF  
                          l297 0E55                            l625 06D0                            l633 06FC  
                          l626 06DC                            l634 06FD                            l627 06E2  
                          l635 070C                            l804 0F1C                            l636 0718  
                          l805 0F17                            l637 071E                            l806 0F26  
                          l807 0F34                            l781 03E3                            l782 04A6  
                          l783 0406                            l784 044D                            l785 0476  
                          l786 049F                            l795 0EC9                            l787 0490  
                          l788 04A6                            l798 0F41                            l799 0F40  
                          u800 0FFE                            u801 0FFD                            u830 0F25  
                          u831 0F24                            u815 05FC                            u840 04B5  
                          u841 04B4                            u825 0E8B                            u850 04BB  
                          u851 04BA                            u860 04C8                            u861 04C7  
                          u870 04D5                            u871 04D4                            u785 0725  
                          u890 0F58                            u970 0FD1                            u891 0F57  
                          u795 0736                            u971 0FD0                            u980 06A8  
                          u885 052A                            u981 06A7                            u995 06AC  
        _wReceptionCounterPrev 00D2                   __CFG_BORV$LO 0000                            wreg 0009  
          ?_SetToSendDataToLCD 0070                   __CFG_LVP$OFF 0000                 ??_lcdWriteText 003F  
                         l2001 0698                           l2011 062B                           l2003 060A  
                         l2021 0647                           l2013 062E                           l2005 0612  
                         l2023 0656                           l2015 0636                           l2007 061A  
                         l2031 0E5C                           l2017 063A                           l2009 061E  
                         l2033 0E2E                           l2025 0E4B                           l2019 0642  
                         l2035 0E32                           l2027 0E51                           l2029 0E56  
                         l2037 0E61                           l2039 0E67                           l2501 044C  
                         l1701 05F8                           l2511 0483                           l2503 044D  
                         l1703 05F9                           l1711 0E82                           l1721 0F11  
                         l2521 049A                           l2513 0487                           l2505 046B  
                         l1705 0604                           l1713 0E85                           l2601 018F  
                         l1723 0F17                           l1811 0EC9                           l2523 049F  
                         l2515 048B                           l2507 0475                           l2531 0F97  
                         l1651 0E22                           l1715 0E87                           l1731 0E42  
                         l2611 0197                           l2603 0191                           l1725 0F1C  
                         l2517 0490                           l2509 0476                           l2533 0F99  
                         l2525 0F80                           l1661 0758                           l1653 0721  
                         l1741 04B5                           l1733 04A9                           l2541 07D1  
                         l1717 0E88                           l1901 06FD                           l2701 02A1  
                         l2621 01A3                           l2613 0199                           l2605 0192  
                         l1727 0F26                           l2519 0496                           l2535 0F9E  
                         l2527 0F86                           l1663 0E1C                           l1655 0722  
                         l1671 0FE2                           l1751 04D5                           l1743 04BB  
                         l1735 04AC                           l2543 07DD                           l1719 0E92  
                         l1911 071E                           l1903 0707                           l2711 02D6  
                         l2703 02B0                           l2631 01A8                           l2623 01A4  
                         l2615 019B                           l2607 0194                           l2551 0146  
                         l1729 0F34                           l1809 0EB3                           l2537 0FA3  
                         l2529 0F88                           l1657 0754                           l1673 0FEE  
                         l1665 0FD3                           l1681 05AC                           l1761 04F5  
                         l1753 04DB                           l1745 04C1                           l1737 04AE  
                         l2545 07E2                           l1921 0F5A                           l1905 070C  
                         l2721 0319                           l2713 02DD                           l2705 02BD  
                         l2641 01AD                           l2633 01A9                           l2625 01A5  
                         l2617 019C                           l2609 0196                           l2561 015C  
                         l2553 0155                           l2491 03E9                           l2483 03D6  
                         l2539 0FA5                           l1659 0756                           l1675 0FEF  
                         l1667 0FD6                           l1691 05D9                           l1683 05AE  
                         l1763 04FC                           l1771 051E                           l1755 04E5  
                         l1747 04C8                           l1739 04AF                           l2547 07E9  
                         l1931 0F77                           l1923 0F60                           l1907 0711  
                         l2731 033A                           l2715 02EC                           l2723 031A  
                         l2707 02CA                           l2651 01B7                           l2643 01AF  
                         l2635 01AA                           l2627 01A6                           l2619 01A1  
                         l2571 0163                           l2563 015D                           l2555 0158  
                         l2493 03FB                           l2485 03DB                           l1677 0FF3  
                         l1669 0FD9                           l1685 05B7                           l1693 05DA  
                         l1781 0531                           l1773 0521                           l1765 0502  
                         l1757 04E7                           l1749 04CE                           l1861 0FC1  
                         l1933 0F7C                           l1925 0F64                           l1909 0719  
                         l2741 0359                           l2733 0343                           l2717 02FB  
                         l2725 0330                           l2709 02CF                           l2661 01E1  
                         l2653 01C3                           l2645 01B0                           l2637 01AB  
                         l2629 01A7                           l2581 016D                           l2573 0165  
                         l2565 015E                           l2557 015A                           l2549 013D  
                         l1791 0F37                           l1935 075D                           l2495 0405  
                         l2487 03E2                           l1679 0FF5                           l1687 05C2  
                         l1695 05F0                           l1783 0536                           l1775 0524  
                         l1767 0506                           l1759 04EE                           l1855 0FA9  
                         l1927 0F70                           l1863 0E17                           l1871 06AB  
                         l2751 037C                           l2743 0360                           l2735 0346  
                         l2727 0336                           l2719 030A                           l2671 0202  
                         l2663 01E4                           l2655 01C6                           l2647 01B1  
                         l2639 01AC                           l2591 0174                           l2583 016E  
                         l2575 0167                           l2567 015F                           l2559 015B  
                         l1793 0F41                           l1937 078B                           l2497 0406  
                         l2489 03E3                           l1697 05F3                           l1689 05CD  
                         l1785 0538                           l1777 0526                           l1769 0507  
                         l1857 0FAC                           l1929 0F71                           l1961 0E79  
                         l1881 06CE                           l1873 06B0                           l1865 069F  
                         l2761 03AE                           l2753 038A                           l2745 0363  
                         l2737 034F                           l2729 0337                           l2681 021B  
                         l2673 020A                           l2665 01F0                           l2657 01D2  
                         l2649 01B4                           l2593 0176                           l2585 0170  
                         l2577 0169                           l2569 0161                           l2499 0442  
                         l1699 05F6                           l1779 0527                           l1859 0FBB  
                         l1963 0E7C                           l1955 0E6C                           l1883 06D0  
                         l1875 06B5                           l1867 06A2                           l1891 06E3  
                         l2771 03C3                           l2763 03B5                           l2755 0398  
                         l2747 036C                           l2739 0352                           l2691 0267  
                         l2683 0222                           l2675 020C                           l2667 01F3  
                         l2659 01D5                           l2595 0178                           l2587 0171  
                         l2579 016B                           l1957 0E6E                           l1885 06D5  
                         l1877 06BB                           l1869 06A8                           l1893 06EA  
                         l1981 0593                           l1973 053E                           l2773 03CA  
                         l2765 03BA                           l2757 03A7                           l2749 0377  
                         l2853 0324                           l2693 0272                           l2685 022C  
                         l2677 020F                           l2669 01FF                           l2597 017B  
                         l2589 0172                           l1991 066A                           l2855 0510  
                         l1959 0E74                           l1879 06CA                           l1887 06DD  
                         l1895 06ED                           l1983 059B                           l1975 057F  
                         l2775 03D0                           l2767 03BB                           l2759 03AD  
                         l2695 0278                           l2687 0242                           l2679 0212  
                         l2599 017E                           l1993 0671                           l2857 05E2  
                         l1889 06E2                           l1897 06F2                           l1985 05A4  
                         l1977 0583                           l2769 03BE                           l2697 0287  
                         l2689 025D                           l1995 067E                           l1987 065C  
                         l1899 06F7                           l1979 058B                           l2699 0294  
                         l1997 0684                           l1989 0661                           l1999 0691  
                         STR_1 1040                           STR_2 104C                           STR_3 1010  
                         STR_4 1030                           STR_5 1020                           STR_6 1000  
                         STR_7 105C                           STR_8 1055                           u1000 06B9  
                         u1001 06B8                           u1020 06CA                           u1100 0717  
                         u1021 06C9                           u1101 0716                           u1015 06BC  
                         u1120 0F60                           u1040 06DB                           u1121 0F5F  
                         u1041 06DA                           u1025 06C6                           u1130 078B  
                         u1050 06EA                           u1131 078A                           u1035 06D1  
                         u1051 06E9                           u1150 0E74                           u1070 06FB  
                         u1135 0787                           u1151 0E73                           u1071 06FA  
                         u1080 0707                           u1081 0706                           u1065 06EE  
                         u1170 0661                           u1171 0660                           u1180 067E  
                         u1181 067D                           u1085 0703                           u1190 0691  
                         u1191 0690                           u1095 070D                           u1600 0F86  
                         u1601 0F85                           u1610 07E2                           u1611 07E1  
                         u1700 03C3                           u1620 0222                           u1701 03C2  
                         u1621 0221                           u1550 03E1                           u1710 03D0  
                         u1630 0267                           u1551 03E0                           u1711 03CF  
                         u1631 0266                           u1560 0404                           u1640 0271  
                         u1561 0403                           u1641 0270                           u1570 044B  
                         u1650 02D6                           u1571 044A                           u1651 02D5  
                         u1635 0263                           u1580 0474                           u1660 0336  
                         u1581 0473                           u1661 0335                           u1645 026D  
                         u1590 04A5                           u1670 0360                           u1591 04A4  
                         u1807 0616                           u1671 035F                           u1727 01BD  
                         u1680 03AD                           u1817 0622                           u1681 03AC  
                         u1737 01CC                           u1690 03BA                           u1827 062C  
                         u1691 03B9                           u1747 01DB                           u1837 0633  
                         u1757 01EA                           u1847 063B                           u1767 01F9  
                         u1777 0216                           u1787 033E                           u1797 034A  
                         _WPUB 020D                   __CFG_WRT$OFF 0000           printEM1812@wVariable 0038  
                         _main 013D                           _test 0052                           fsr0h 0005  
                         fsr1h 0007                           indf0 0000                           fsr0l 0004  
                         indf1 0001                           fsr1l 0006                           btemp 007E  
                __CFG_BOREN$ON 0000                           start 0106                  __CFG_IESO$OFF 0000  
         ??_SetToSendDataToLCD 0030                __end_of_GetTemp 0FA9           __end_of_clearDisplay 0E1C  
                 main@wCounter 00CE                          ?_main 0070                    _writeInsChk 0E40  
                __CFG_WDTE$OFF 0000                   main@wReadout 00A0                __end_of___lwdiv 06E3  
                        i1l200 00C6                          i1l201 00DF                          i1l202 0104  
                        i1l107 0E3D                          i1l203 00F8                          i1l108 0E3F  
                        i1l116 07CE                          i1l204 0103                          i1l109 0E3F  
                        i1l117 07CE                          i1l205 0104                          i1l180 00CA  
                        i1l181 004C                          i1l190 0089                          i1l182 0040  
                        i1l191 00A4                          i1l183 0049                          i1l184 00C9  
                        i1l192 00A0                          i1l177 00CC                          i1l193 009C  
                        i1l185 006B                __end_of___lwmod 071F                          i1l178 00CB  
                        i1l194 009F                          i1l186 0069                          i1l195 00A3  
                        i1l187 006A                          i1l179 001C                          i1l188 00C8  
                        i1l196 00C7                          i1l197 00B8                          i1l189 00A5  
                        i1l198 00B4                          i1l199 00B7                          i1l800 0F10  
                        i1l801 0F10                          i1l804 0ED4                          i1l805 0ECF  
                        i1l806 0EDE                          i1l807 0EEC                          i1l795 0EB0  
                        i1l798 0EF8                          i1l799 0EF7                          _TMR1H 0017  
                        _TMR1L 0016                          _PORTA 000C                          _PORTB 000D  
                        _TRISA 008C                          _TRISB 008D                          _TRISC 008E  
                        u90_20 0F0F                          u90_21 0F0E                          u91_20 0EDD  
                        u91_21 0EDC                    _writeTxtChk 04A7                  __CFG_PWRTE$ON 0000  
               __CFG_FCMEN$OFF 0000                __end_of_initLCD 065A         ??_SetToReadDataFromLCD 0030  
                        _myint 0004                __end_of_setData 075B             __size_of_Add_Trace 003A  
                        status 0003                          wtemp0 007E               __end_of_Debounce 069F  
       ??_setNotBlinkingCursor 0036               __end_ofi1_strcat 0EB1               __end_ofi1_strcpy 0F11  
             __end_ofi1_strlen 0EED                 __CFG_MCLRE$OFF 0000                __initialization 0108  
                 __end_of_main 03D6                 __CFG_LPBOR$OFF 0000                   ?i1_Add_Trace 0025  
                       ??_main 004D               _wReceptionBuffer 0134               __end_of_WakeTemp 0E80  
             __end_of_PrintLog 07FD                   ?_waitLCDBusy 0070                  main@wMenuPrev 00C0  
                       ?_myint 0070                         _ANSELA 018C                         _ANSELB 018D  
                       u111_20 0E3B                         u111_21 0E3A                         i1l2041 0797  
                       i1l2043 07C5                         i1l2301 003D                         i1l2311 005C  
                       i1l2303 0042                         u120_20 07C5                         u120_21 07C4  
                       i1l2321 0083                         i1l2313 0063                         i1l2305 0049  
                       i1l2331 00AB                         i1l2323 008E                         i1l2315 0070  
                       i1l2307 0051                         u120_25 07C1                         i1l2341 00D2  
                       i1l2333 00B1                         i1l2325 0095                         i1l2317 0076  
                       i1l2309 0057                         i1l2351 00ED                         i1l2343 00DF  
                       i1l2335 00B8                         i1l2327 0099                         i1l2319 007C  
                       i1l1801 0ECF                         i1l2353 00F3                         i1l2345 00E4  
                       i1l2329 00AA                         i1l2281 000B                         i1l2337 00CC  
                       i1l1803 0ED4                         i1l2355 00F8                         i1l2347 00E7  
                       i1l2339 00D1                         i1l2291 0020                         i1l2283 000C  
                       i1l1805 0EDE                         i1l2357 00FE                         i1l2349 00EC  
                       i1l2293 0025                         i1l2285 0011                         i1l1807 0EEC  
                       i1l2359 00FF                         i1l2295 0030                         i1l2287 0016  
                       i1l2279 0006                         i1l1913 0E9A                         i1l2297 0034  
                       i1l2289 0018                         i1l1915 0EB0                         i1l2299 0036  
                       i1l1917 0E36                         i1l1919 0E3B                         u131_20 000B  
                       u131_21 000A                  main@wHumidity 00C8                         i1l1795 0EEE  
                       i1l1797 0EF8                         i1l1799 0ECA                         u140_20 0070  
                       u132_20 0011                         u140_21 006F                         u132_21 0010  
                       u141_20 0076                         u133_20 0016                         u141_21 0075  
                       u133_21 0015                         u150_20 00FE                         u142_20 007C  
                       u134_20 0020                         u150_21 00FD                         u142_21 007B  
                       u134_21 001F                         u143_20 008E                         u135_20 0025  
                       u143_21 008D                         u135_21 0024                  setData@iValue 0032  
                       u144_20 0095                         u136_20 003D                         u144_21 0094  
                       u136_21 003C                         u145_20 00AA                         u137_20 0051  
                       u145_21 00A9                         u137_21 0050                         u146_20 00B1  
                       u138_20 0057                         u146_21 00B0                         u138_21 0056  
                       u147_20 00D1                         u139_20 005C                         u147_21 00D0  
                       u139_21 005B                         u148_20 00E4                         u148_21 00E3  
                       u149_20 00F3                         u149_21 00F2              _setCursorPosition 05AA  
                       u185_27 0096                      ??_GetTemp 003E                         _SSPADD 0212  
                       _SSPBUF 0211             ?_setCursorPosition 0035            ??_setCursorPosition 0036  
         __end_of_lcdWriteText 0FD3                      ??___lwdiv 0034                      ??___lwmod 0034  
      main@wEnterBottonPressed 00C1                   ?_printEM1812 0038                         _memset 03D6  
            __end_of_Add_Trace 0795                         _strcat 0EB1                         _strcpy 0F35  
                       _strlen 0F11                      ??_initLCD 0036                      ??_setData 0030  
     __end_of_moveCursorToHome 0E36                  ?_SetToGetTemp 0070      __end_of_setCursorPosition 060A  
       __size_of_writeInsNoChk 0018        __end_of__initialization 0139          __size_of_clearDisplay 0005  
   setCursorPosition@wLCDIndex 0039                 __pcstackCOMMON 0070                   __pidataBANK1 0E13  
                __end_of_myint 0106           writeInsNoChk@iOpCode 0034     setCursorPosition@iPosition 0035  
               _wInterruptText 01A0                 _OPTION_REGbits 0095                      ?_Debounce 0030  
                  i1strcat@src 0020                      ?i1_strcat 0020                      ?i1_strcpy 0076  
                    ?i1_strlen 0070                 ??_SetToGetTemp 0030                   _clearDisplay 0E17  
                  i1strcpy@src 0076                        ??_myint 002F                     __pbssBANK0 0052  
                   __pbssBANK1 00D1                     __pbssBANK2 0120                     __pbssBANK3 01A0  
            _wReceptionCounter 00D3                  ?_setCursorOff 0070                __CFG_VCAPEN$OFF 0000  
                    ?_WakeTemp 0070                     __pmaintext 013D                 Add_Trace@iText 0044  
               Add_Trace@oText 004C                      ?_PrintLog 0070                     __pintentry 0004  
                _writeInsNoChk 0E80                        ?_memset 0030                   ?_writeInsChk 0070  
                      ?_strcat 003E                        ?_strcpy 0036                        ?_strlen 0030  
         __size_ofi1_Add_Trace 003A                   ?_writeTxtChk 0070                     ??_Debounce 0032  
                   ??i1_strcat 0022                     ??i1_strcpy 0078                     ??i1_strlen 0072  
   __size_of_setCursorPosition 0060           __size_of_waitLCDBusy 002D                 ??_setCursorOff 0036  
                      _GetTemp 0F80          __size_of_lcdWriteText 002A           main@wTemperaturePrev 00BE  
                   ??_WakeTemp 0030    __size_of_SetToSendDataToLCD 0006                     ??_PrintLog 0043  
              printEM1812@wTen 003C                        ___lwdiv 069F                 ?_writeInsNoChk 0070  
                      ___lwmod 06E3                __CFG_STVREN$OFF 0000                Debounce@iSwitch 0034  
              __size_of_memset 00D1                  ?_ToggleBitRB5 0070                        __ptext1 0E61  
                      __ptext2 0E56                        __ptext3 053E                        __ptext4 06E3  
                      __ptext5 069F                        __ptext6 0E4B                        __ptext7 0E2E  
                      __ptext8 060A                        __ptext9 0E17                Debounce@ioTimer 0030  
              __size_of_strcat 0019           __size_of_printEM1812 006C                __size_of_strcpy 0025  
              __size_of_strlen 0024                        _initLCD 060A                      _T1CONbits 0018  
                      _setData 071F              main@wDebounceDown 00C6                        clrloop0 0E29  
         end_of_initialization 0139                   _lcdWriteText 0FA9  __size_of_SetToReadDataFromLCD 0006  
                      memset@c 0032                        memset@k 003A                        memset@n 0034  
                      memset@s 003C               __CFG_CLKOUTEN$ON 0000  __size_of_setNotBlinkingCursor 000B  
         __end_of_SetToGetTemp 0F80                        strcpy@d 003C                        strlen@a 0034  
               ??_ToggleBitRB5 0070                        strcpy@s 003A                        strlen@s 0030  
                    _PORTAbits 000C                      _PORTBbits 000D                     _powerOnLcd 0E4B  
         main@wUpBottonPressed 00CC               __CFG_FOSC$INTOSC 0000                      _Add_Trace 075B  
                    _TRISAbits 008C              ?_moveCursorToHome 0070            printEM1812@wDecimal 003E  
            _wTimer1IntCounter 0055             ??_moveCursorToHome 0036            printEM1812@oTextOut 003A  
             main@wTemperature 00CA            waitLCDBusy@busyFlag 0033                ??_writeInsNoChk 0033  
             _mWritingPosition 005A           __end_of_setCursorOff 0E61                 __end_of_memset 04A7  
               __end_of_strcat 0ECA                 __end_of_strcpy 0F5A                 __end_of_strlen 0F35  
         __size_of_writeInsChk 000B            start_initialization 0108                     ?_Add_Trace 0043  
         __size_of_writeTxtChk 0097              __size_of_Debounce 0045                      i1strcpy@d 007D  
                    i1strlen@a 0074                      i1strcpy@s 007A                      i1strlen@s 0070  
            __size_ofi1_strcat 0019              __size_ofi1_strcpy 0024              __size_ofi1_strlen 0023  
                 i1strcat@dest 0024              __size_of_WakeTemp 0014                main@wDebounceUp 00C4  
                  __pdataBANK1 00E8                  _wI2CTxSendPos 0056              __size_of_PrintLog 002E  
                     ??_memset 0036                   i1strcpy@dest 007C                     memset@dest 0030  
                     ??_strcat 0040                       ??_strcpy 0038                       ??_strlen 0032  
                  ?_powerOnLcd 0070               i1Add_Trace@iText 0026                      ___latbits 0003  
             i1Add_Trace@oText 002E                  __pcstackBANK0 0020                  __pcstackBANK1 00A0  
            printEM1812@wUnity 003D           __end_of_ToggleBitRB5 0E40                       ?_GetTemp 0070  
        __size_of_SetToGetTemp 0026        i1Add_Trace@iSizeOfoText 0025               ___lwdiv@dividend 0032  
           writeInsChk@iOpCode 0035                       ?___lwdiv 0030                       ?___lwmod 0030  
                ??i1_Add_Trace 0028                      _wCounter2 0054                       ?_initLCD 0070  
                     ?_setData 0070                    ??_Add_Trace 0046                  ??_waitLCDBusy 0030  
                PrintLog@iText 0046               ___lwdiv@quotient 0035                   _SetToGetTemp 0F5A  
               __size_of_myint 0102               _mDisplayOnOffReg 005C     __end_of_SetToSendDataToLCD 0E22  
                    clear_ram0 0E28                       _PIE1bits 0091                       _PIE2bits 0092  
          __size_of_powerOnLcd 000B                       _PIR1bits 0011                       _PIR2bits 0012  
        __size_of_setCursorOff 000B                      main@F2241 00E8       _wReceptionBufferPosition 0059  
            Debounce@swPressed 0031   __end_of_SetToReadDataFromLCD 0E28                  ??_printEM1812 003B  
  lcdWriteText@wCharReadingPos 0042               _wI2CRxBufferSize 0057                      main@wConv 00B4  
                    main@wMenu 00D0   __end_of_setNotBlinkingCursor 0E6C                      main@wTemp 00B8  
                     _Debounce 065A            __end_ofi1_Add_Trace 07CF                       i1_strcat 0E98  
                     i1_strcpy 0EED                       i1_strlen 0ECA              lcdWriteText@iText 003D  
          __end_of_waitLCDBusy 1000                   _setCursorOff 0E56               __size_of_GetTemp 0029  
                     _WakeTemp 0E6C      __size_of_moveCursorToHome 0008          Add_Trace@iSizeOfoText 0043  
                 _wI2CTxBuffer 00D4                       _PrintLog 07CF               __size_of___lwdiv 0044  
             __size_of___lwmod 003C                    _wTempUpdate 00D1               _wI2CTxBufferSize 0058  
                   _ANSELCbits 018E               __size_of_initLCD 0050                     strcat@dest 0042  
          __end_of_printEM1812 05AA      PrintLog@wInterruptTextLen 0045                ___lwdiv@divisor 0030  
             __size_of_setData 003C                ___lwdiv@counter 0037                  ?_clearDisplay 0070  
        __size_of_ToggleBitRB5 000A                       __ptext10 0E40                       __ptext11 0E80  
                     __ptext20 071F                       __ptext12 0E6C                       __ptext21 0E1C  
                     __ptext13 0F5A                       __ptext30 0795                       __ptext22 0F80  
                     __ptext14 07CF                       __ptext31 0E98                       __ptext23 03D6  
                     __ptext15 0FA9                       __ptext32 0ECA                       __ptext24 065A  
                     __ptext16 04A7                       __ptext33 0EED                       __ptext25 075B  
                     __ptext17 05AA                       __ptext34 0E36                       __ptext26 0EB1  
                     __ptext18 0FD3                       __ptext27 0F11                       __ptext19 0E22  
                     __ptext28 0F35                       _wHexTemp 0120          main@wIterationCounter 00BA  
                   strcpy@dest 003D                  __size_of_main 0299             main@wDebounceEnter 00C2  
           writeTxtChk@iOpCode 003C                       int$flags 007E          __end_of_writeInsNoChk 0E98  
            main@wHumidityPrev 00BC                    i1_Add_Trace 0795                  ??_writeInsChk 0035  
                 _ToggleBitRB5 0E36                   ??_powerOnLcd 0036                  ??_writeTxtChk 003A  
                   _INTCONbits 000B                    _waitLCDBusy 0FD3                 ??_clearDisplay 0036  
       setCursorPosition@iLine 0038                       intlevel1 0000         main@wDownBottonPressed 00CD  
         _SetToReadDataFromLCD 0E22                      strcat@src 003E               ___lwmod@dividend 0032  
                    strcpy@src 0036                     _OSCCONbits 0099           _setNotBlinkingCursor 0E61  
           __end_of_powerOnLcd 0E56                    _printEM1812 053E                  __pstringtext1 1000  
                __pstringtext2 1010                  __pstringtext3 1020                  __pstringtext4 1030  
                __pstringtext5 1040                  __pstringtext6 104C                  __pstringtext7 1055  
                __pstringtext8 105C                  __pstringtext9 0000                ___lwmod@divisor 0030  
              ___lwmod@counter 0035            __end_of_writeInsChk 0E4B                    _SSPCON1bits 0215  
                  _SSPCON2bits 0216                    _SSPCON3bits 0217                  ?_lcdWriteText 003D  
          __end_of_writeTxtChk 053E          ?_SetToReadDataFromLCD 0070          ?_setNotBlinkingCursor 0070  
             _moveCursorToHome 0E2E         _mCursorDisplayShiftReg 005B  
