

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Feb 18 21:18:26 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F1518 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   120                           PORTB equ 0Dh ;# 
   121  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   122                           PORTC equ 0Eh ;# 
   123  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   124                           PORTE equ 010h ;# 
   125  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   126                           PIR1 equ 011h ;# 
   127  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   128                           PIR2 equ 012h ;# 
   129  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   130                           TMR0 equ 015h ;# 
   131  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   132                           TMR1 equ 016h ;# 
   133  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   134                           TMR1L equ 016h ;# 
   135  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   136                           TMR1H equ 017h ;# 
   137  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   138                           T1CON equ 018h ;# 
   139  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   140                           T1GCON equ 019h ;# 
   141  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   142                           TMR2 equ 01Ah ;# 
   143  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   144                           PR2 equ 01Bh ;# 
   145  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   146                           T2CON equ 01Ch ;# 
   147  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   148                           TRISA equ 08Ch ;# 
   149  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   150                           TRISB equ 08Dh ;# 
   151  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   152                           TRISC equ 08Eh ;# 
   153  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   154                           TRISE equ 090h ;# 
   155  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   156                           PIE1 equ 091h ;# 
   157  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   158                           PIE2 equ 092h ;# 
   159  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   160                           OPTION_REG equ 095h ;# 
   161  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   162                           PCON equ 096h ;# 
   163  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   164                           WDTCON equ 097h ;# 
   165  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   166                           OSCCON equ 099h ;# 
   167  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   168                           OSCSTAT equ 09Ah ;# 
   169  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   170                           ADRES equ 09Bh ;# 
   171  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   172                           ADRESL equ 09Bh ;# 
   173  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   174                           ADRESH equ 09Ch ;# 
   175  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   176                           ADCON0 equ 09Dh ;# 
   177  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   178                           ADCON1 equ 09Eh ;# 
   179  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   180                           LATA equ 010Ch ;# 
   181  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   182                           LATB equ 010Dh ;# 
   183  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   184                           LATC equ 010Eh ;# 
   185  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   186                           BORCON equ 0116h ;# 
   187  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   188                           FVRCON equ 0117h ;# 
   189  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   190                           APFCON equ 011Dh ;# 
   191  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   192                           ANSELA equ 018Ch ;# 
   193  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   194                           ANSELB equ 018Dh ;# 
   195  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   196                           ANSELC equ 018Eh ;# 
   197  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   198                           PMADR equ 0191h ;# 
   199  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   200                           PMADRL equ 0191h ;# 
   201  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   202                           PMADRH equ 0192h ;# 
   203  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   204                           PMDAT equ 0193h ;# 
   205  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   206                           PMDATL equ 0193h ;# 
   207  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   208                           PMDATH equ 0194h ;# 
   209  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   210                           PMCON1 equ 0195h ;# 
   211  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   212                           PMCON2 equ 0196h ;# 
   213  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   214                           VREGCON equ 0197h ;# 
   215  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   216                           RCREG equ 0199h ;# 
   217  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   218                           TXREG equ 019Ah ;# 
   219  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   220                           SP1BRG equ 019Bh ;# 
   221  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   222                           SP1BRGL equ 019Bh ;# 
   223  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   224                           SPBRG equ 019Bh ;# 
   225  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   226                           SPBRGL equ 019Bh ;# 
   227  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   228                           SP1BRGH equ 019Ch ;# 
   229  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   230                           SPBRGH equ 019Ch ;# 
   231  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   232                           RCSTA equ 019Dh ;# 
   233  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   234                           TXSTA equ 019Eh ;# 
   235  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   236                           BAUDCON equ 019Fh ;# 
   237  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   238                           WPUB equ 020Dh ;# 
   239  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   240                           WPUE equ 0210h ;# 
   241  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   242                           SSPBUF equ 0211h ;# 
   243  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   244                           SSP1BUF equ 0211h ;# 
   245  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   246                           SSPADD equ 0212h ;# 
   247  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   248                           SSP1ADD equ 0212h ;# 
   249  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   250                           SSPMSK equ 0213h ;# 
   251  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   252                           SSP1MSK equ 0213h ;# 
   253  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   254                           SSPSTAT equ 0214h ;# 
   255  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   256                           SSP1STAT equ 0214h ;# 
   257  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   258                           SSPCON1 equ 0215h ;# 
   259  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   260                           SSPCON equ 0215h ;# 
   261  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   262                           SSP1CON1 equ 0215h ;# 
   263  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   264                           SSPCON2 equ 0216h ;# 
   265  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   266                           SSP1CON2 equ 0216h ;# 
   267  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   268                           SSPCON3 equ 0217h ;# 
   269  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   270                           SSP1CON3 equ 0217h ;# 
   271  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   272                           CCPR1 equ 0291h ;# 
   273  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   274                           CCPR1L equ 0291h ;# 
   275  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   276                           CCPR1H equ 0292h ;# 
   277  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   278                           CCP1CON equ 0293h ;# 
   279  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   280                           CCPR2 equ 0298h ;# 
   281  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   282                           CCPR2L equ 0298h ;# 
   283  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   284                           CCPR2H equ 0299h ;# 
   285  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   286                           CCP2CON equ 029Ah ;# 
   287  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   288                           IOCBP equ 0394h ;# 
   289  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   290                           IOCBN equ 0395h ;# 
   291  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   292                           IOCBF equ 0396h ;# 
   293  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   294                           STATUS_SHAD equ 0FE4h ;# 
   295  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   296                           WREG_SHAD equ 0FE5h ;# 
   297  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   298                           BSR_SHAD equ 0FE6h ;# 
   299  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   300                           PCLATH_SHAD equ 0FE7h ;# 
   301  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   302                           FSR0L_SHAD equ 0FE8h ;# 
   303  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   304                           FSR0H_SHAD equ 0FE9h ;# 
   305  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   306                           FSR1L_SHAD equ 0FEAh ;# 
   307  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   308                           FSR1H_SHAD equ 0FEBh ;# 
   309  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   310                           STKPTR equ 0FEDh ;# 
   311  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   312                           TOSL equ 0FEEh ;# 
   313  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   314                           TOSH equ 0FEFh ;# 
   315  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   316                           INDF0 equ 00h ;# 
   317  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   318                           INDF1 equ 01h ;# 
   319  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   320                           PCL equ 02h ;# 
   321  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   322                           STATUS equ 03h ;# 
   323  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   324                           FSR0L equ 04h ;# 
   325  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   326                           FSR0H equ 05h ;# 
   327  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   328                           FSR1L equ 06h ;# 
   329  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   330                           FSR1H equ 07h ;# 
   331  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   332                           BSR equ 08h ;# 
   333  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   334                           WREG equ 09h ;# 
   335  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   336                           PCLATH equ 0Ah ;# 
   337  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   338                           INTCON equ 0Bh ;# 
   339  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   340                           PORTA equ 0Ch ;# 
   341  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   342                           PORTB equ 0Dh ;# 
   343  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   344                           PORTC equ 0Eh ;# 
   345  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   346                           PORTE equ 010h ;# 
   347  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   348                           PIR1 equ 011h ;# 
   349  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   350                           PIR2 equ 012h ;# 
   351  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   352                           TMR0 equ 015h ;# 
   353  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   354                           TMR1 equ 016h ;# 
   355  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   356                           TMR1L equ 016h ;# 
   357  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   358                           TMR1H equ 017h ;# 
   359  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   360                           T1CON equ 018h ;# 
   361  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   362                           T1GCON equ 019h ;# 
   363  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   364                           TMR2 equ 01Ah ;# 
   365  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   366                           PR2 equ 01Bh ;# 
   367  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   368                           T2CON equ 01Ch ;# 
   369  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   370                           TRISA equ 08Ch ;# 
   371  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   372                           TRISB equ 08Dh ;# 
   373  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   374                           TRISC equ 08Eh ;# 
   375  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   376                           TRISE equ 090h ;# 
   377  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   378                           PIE1 equ 091h ;# 
   379  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   380                           PIE2 equ 092h ;# 
   381  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   382                           OPTION_REG equ 095h ;# 
   383  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   384                           PCON equ 096h ;# 
   385  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   386                           WDTCON equ 097h ;# 
   387  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   388                           OSCCON equ 099h ;# 
   389  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   390                           OSCSTAT equ 09Ah ;# 
   391  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   392                           ADRES equ 09Bh ;# 
   393  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   394                           ADRESL equ 09Bh ;# 
   395  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   396                           ADRESH equ 09Ch ;# 
   397  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   398                           ADCON0 equ 09Dh ;# 
   399  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   400                           ADCON1 equ 09Eh ;# 
   401  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   402                           LATA equ 010Ch ;# 
   403  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   404                           LATB equ 010Dh ;# 
   405  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   406                           LATC equ 010Eh ;# 
   407  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   408                           BORCON equ 0116h ;# 
   409  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   410                           FVRCON equ 0117h ;# 
   411  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   412                           APFCON equ 011Dh ;# 
   413  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   414                           ANSELA equ 018Ch ;# 
   415  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   416                           ANSELB equ 018Dh ;# 
   417  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   418                           ANSELC equ 018Eh ;# 
   419  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   420                           PMADR equ 0191h ;# 
   421  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   422                           PMADRL equ 0191h ;# 
   423  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   424                           PMADRH equ 0192h ;# 
   425  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   426                           PMDAT equ 0193h ;# 
   427  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   428                           PMDATL equ 0193h ;# 
   429  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   430                           PMDATH equ 0194h ;# 
   431  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   432                           PMCON1 equ 0195h ;# 
   433  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   434                           PMCON2 equ 0196h ;# 
   435  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   436                           VREGCON equ 0197h ;# 
   437  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   438                           RCREG equ 0199h ;# 
   439  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   440                           TXREG equ 019Ah ;# 
   441  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   442                           SP1BRG equ 019Bh ;# 
   443  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   444                           SP1BRGL equ 019Bh ;# 
   445  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   446                           SPBRG equ 019Bh ;# 
   447  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   448                           SPBRGL equ 019Bh ;# 
   449  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   450                           SP1BRGH equ 019Ch ;# 
   451  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   452                           SPBRGH equ 019Ch ;# 
   453  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   454                           RCSTA equ 019Dh ;# 
   455  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   456                           TXSTA equ 019Eh ;# 
   457  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   458                           BAUDCON equ 019Fh ;# 
   459  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   460                           WPUB equ 020Dh ;# 
   461  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   462                           WPUE equ 0210h ;# 
   463  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   464                           SSPBUF equ 0211h ;# 
   465  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   466                           SSP1BUF equ 0211h ;# 
   467  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   468                           SSPADD equ 0212h ;# 
   469  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   470                           SSP1ADD equ 0212h ;# 
   471  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   472                           SSPMSK equ 0213h ;# 
   473  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   474                           SSP1MSK equ 0213h ;# 
   475  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   476                           SSPSTAT equ 0214h ;# 
   477  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   478                           SSP1STAT equ 0214h ;# 
   479  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   480                           SSPCON1 equ 0215h ;# 
   481  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   482                           SSPCON equ 0215h ;# 
   483  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   484                           SSP1CON1 equ 0215h ;# 
   485  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   486                           SSPCON2 equ 0216h ;# 
   487  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   488                           SSP1CON2 equ 0216h ;# 
   489  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   490                           SSPCON3 equ 0217h ;# 
   491  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   492                           SSP1CON3 equ 0217h ;# 
   493  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   494                           CCPR1 equ 0291h ;# 
   495  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   496                           CCPR1L equ 0291h ;# 
   497  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   498                           CCPR1H equ 0292h ;# 
   499  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   500                           CCP1CON equ 0293h ;# 
   501  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   502                           CCPR2 equ 0298h ;# 
   503  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   504                           CCPR2L equ 0298h ;# 
   505  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   506                           CCPR2H equ 0299h ;# 
   507  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   508                           CCP2CON equ 029Ah ;# 
   509  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   510                           IOCBP equ 0394h ;# 
   511  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   512                           IOCBN equ 0395h ;# 
   513  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   514                           IOCBF equ 0396h ;# 
   515  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   516                           STATUS_SHAD equ 0FE4h ;# 
   517  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   518                           WREG_SHAD equ 0FE5h ;# 
   519  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   520                           BSR_SHAD equ 0FE6h ;# 
   521  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   522                           PCLATH_SHAD equ 0FE7h ;# 
   523  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   524                           FSR0L_SHAD equ 0FE8h ;# 
   525  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   526                           FSR0H_SHAD equ 0FE9h ;# 
   527  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   528                           FSR1L_SHAD equ 0FEAh ;# 
   529  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   530                           FSR1H_SHAD equ 0FEBh ;# 
   531  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   532                           STKPTR equ 0FEDh ;# 
   533  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   534                           TOSL equ 0FEEh ;# 
   535  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   536                           TOSH equ 0FEFh ;# 
   537  0FEF                     DABS 1,1568,48	;_gTxBuffer
   538                           DABS 1,1440,80	;_gTxBuffer
   539                           DABS 1,1312,80	;_gTxBuffer
   540                           DABS 1,1216,48	;_gTxBuffer
   541                           	FNCALL	_main,_Add_Trace
   542                           	FNCALL	_main,_Debounce
   543                           	FNCALL	_main,_GetTemp
   544                           	FNCALL	_main,_PrintLog
   545                           	FNCALL	_main,_Send_UART_Data
   546                           	FNCALL	_main,_SetToGetTemp
   547                           	FNCALL	_main,_ToggleBitRB5
   548                           	FNCALL	_main,_clearDisplay
   549                           	FNCALL	_main,_initLCD
   550                           	FNCALL	_main,_lcdWriteText
   551                           	FNCALL	_main,_memset
   552                           	FNCALL	_main,_moveCursorToHome
   553                           	FNCALL	_main,_powerOnLcd
   554                           	FNCALL	_main,_printEM1812
   555                           	FNCALL	_main,_setCursorOff
   556                           	FNCALL	_main,_setCursorPosition
   557                           	FNCALL	_main,_setNotBlinkingCursor
   558                           	FNCALL	_setNotBlinkingCursor,_writeInsChk
   559                           	FNCALL	_setCursorOff,_writeInsChk
   560                           	FNCALL	_printEM1812,___awdiv
   561                           	FNCALL	_printEM1812,___awmod
   562                           	FNCALL	_powerOnLcd,_writeInsChk
   563                           	FNCALL	_moveCursorToHome,_writeInsChk
   564                           	FNCALL	_initLCD,_clearDisplay
   565                           	FNCALL	_initLCD,_setData
   566                           	FNCALL	_initLCD,_writeInsChk
   567                           	FNCALL	_clearDisplay,_writeInsChk
   568                           	FNCALL	_writeInsChk,_waitLCDBusy
   569                           	FNCALL	_writeInsChk,_writeInsNoChk
   570                           	FNCALL	_writeInsNoChk,_SetToSendDataToLCD
   571                           	FNCALL	_writeInsNoChk,_setData
   572                           	FNCALL	_Send_UART_Data,_memcpy
   573                           	FNCALL	_PrintLog,_lcdWriteText
   574                           	FNCALL	_PrintLog,_memset
   575                           	FNCALL	_PrintLog,_strlen
   576                           	FNCALL	_lcdWriteText,_writeTxtChk
   577                           	FNCALL	_writeTxtChk,_SetToSendDataToLCD
   578                           	FNCALL	_writeTxtChk,_setCursorPosition
   579                           	FNCALL	_writeTxtChk,_setData
   580                           	FNCALL	_writeTxtChk,_waitLCDBusy
   581                           	FNCALL	_setCursorPosition,_SetToSendDataToLCD
   582                           	FNCALL	_setCursorPosition,_setData
   583                           	FNCALL	_setCursorPosition,_waitLCDBusy
   584                           	FNCALL	_waitLCDBusy,_SetToReadDataFromLCD
   585                           	FNCALL	_GetTemp,_memset
   586                           	FNCALL	_Add_Trace,_strcat
   587                           	FNCALL	_Add_Trace,_strlen
   588                           	FNCALL	_strcat,_strcpy
   589                           	FNCALL	_strcat,_strlen
   590                           	FNROOT	_main
   591                           	FNCALL	_myint,i1_Add_Trace
   592                           	FNCALL	i1_Add_Trace,i1_strcat
   593                           	FNCALL	i1_Add_Trace,i1_strlen
   594                           	FNCALL	i1_strcat,i1_strcpy
   595                           	FNCALL	i1_strcat,i1_strlen
   596                           	FNCALL	intlevel1,_myint
   597                           	global	intlevel1
   598                           	FNROOT	intlevel1
   599                           	global	main@F2273
   600                           	global	_wTempSet
   601                           psect	idataBANK1,class=CODE,space=0,delta=2,noexec
   602                           global __pidataBANK1
   603                           __pidataBANK1:
   604  0AD2                     	file	"161518_temp_main.c"
   605                           	line	376
   606                           
   607                           ;initializer for main@F2273
   608                           	retlw	02Bh
   609  0AD2  342B               	retlw	low(0)
   610  0AD3  3400               	retlw	078h
   611  0AD4  3478               	retlw	low(0)
   612  0AD5  3400               	line	232
   613                           
   614                           ;initializer for _wTempSet
   615                           	retlw	0D2h
   616  0AD6  34D2               	retlw	0
   617  0AD7  3400               
   618                           	global	_wTimer1IntCounter
   619                           	global	_wTempUpdate
   620                           	global	_gTxReadingPosition
   621                           	global	_gTxTransmitSize
   622                           	global	_wTrial
   623                           	global	_wI2CTxSendPos
   624                           	global	_wI2CRxBufferSize
   625                           	global	_wI2CTxBufferSize
   626                           	global	_wReceptionCounter
   627                           	global	_wReceptionBufferPosition
   628                           	global	_mWritingPosition
   629                           	global	_mCursorDisplayShiftReg
   630                           	global	_mDisplayOnOffReg
   631                           	global	_wTemperature
   632                           	global	_wHumidity
   633                           	global	_wTempState
   634                           	global	_wTimer0Counter
   635                           	global	_wI2CCommandState
   636                           	global	_wI2CTxBuffer
   637                           	global	_wReceptionBuffer
   638                           	global	_gUartTXBuffer
   639                           	global	_wInterruptText
   640                           	global	_gTxBuffer
   641                           	global	_PORTCbits
   642                           _PORTCbits	set	0xE
   643  000E                     	global	_PORTAbits
   644                           _PORTAbits	set	0xC
   645  000C                     	global	_TMR1L
   646                           _TMR1L	set	0x16
   647  0016                     	global	_TMR1H
   648                           _TMR1H	set	0x17
   649  0017                     	global	_PIR2bits
   650                           _PIR2bits	set	0x12
   651  0012                     	global	_PIR1bits
   652                           _PIR1bits	set	0x11
   653  0011                     	global	_TMR0
   654                           _TMR0	set	0x15
   655  0015                     	global	_PORTB
   656                           _PORTB	set	0xD
   657  000D                     	global	_T1CONbits
   658                           _T1CONbits	set	0x18
   659  0018                     	global	_PORTA
   660                           _PORTA	set	0xC
   661  000C                     	global	_INTCONbits
   662                           _INTCONbits	set	0xB
   663  000B                     	global	_PORTBbits
   664                           _PORTBbits	set	0xD
   665  000D                     	global	_TRISAbits
   666                           _TRISAbits	set	0x8C
   667  008C                     	global	_PIE2bits
   668                           _PIE2bits	set	0x92
   669  0092                     	global	_TRISCbits
   670                           _TRISCbits	set	0x8E
   671  008E                     	global	_TRISB
   672                           _TRISB	set	0x8D
   673  008D                     	global	_OPTION_REGbits
   674                           _OPTION_REGbits	set	0x95
   675  0095                     	global	_OSCCONbits
   676                           _OSCCONbits	set	0x99
   677  0099                     	global	_PIE1bits
   678                           _PIE1bits	set	0x91
   679  0091                     	global	_ANSELAbits
   680                           _ANSELAbits	set	0x18C
   681  018C                     	global	_TXREG
   682                           _TXREG	set	0x19A
   683  019A                     	global	_ANSELB
   684                           _ANSELB	set	0x18D
   685  018D                     	global	_RCSTAbits
   686                           _RCSTAbits	set	0x19D
   687  019D                     	global	_TXSTAbits
   688                           _TXSTAbits	set	0x19E
   689  019E                     	global	_ANSELCbits
   690                           _ANSELCbits	set	0x18E
   691  018E                     	global	_SPBRGL
   692                           _SPBRGL	set	0x19B
   693  019B                     	global	_SPBRGH
   694                           _SPBRGH	set	0x19C
   695  019C                     	global	_SSPBUF
   696                           _SSPBUF	set	0x211
   697  0211                     	global	_SSPSTATbits
   698                           _SSPSTATbits	set	0x214
   699  0214                     	global	_SSPADD
   700                           _SSPADD	set	0x212
   701  0212                     	global	_SSPCON1bits
   702                           _SSPCON1bits	set	0x215
   703  0215                     	global	_WPUB
   704                           _WPUB	set	0x20D
   705  020D                     	global	_SSPCON2bits
   706                           _SSPCON2bits	set	0x216
   707  0216                     	global	_SSPCON3bits
   708                           _SSPCON3bits	set	0x217
   709  0217                     psect	stringtext1,class=STRCODE,delta=2,noexec
   710                           global __pstringtext1
   711                           __pstringtext1:
   712  1000                     	
   713                           STR_8:	
   714  1000                     	retlw	45	;'-'
   715  1000  342D               	retlw	83	;'S'
   716  1001  3453               	retlw	101	;'e'
   717  1002  3465               	retlw	116	;'t'
   718  1003  3474               	retlw	32	;' '
   719  1004  3420               	retlw	77	;'M'
   720  1005  344D               	retlw	111	;'o'
   721  1006  346F               	retlw	100	;'d'
   722  1007  3464               	retlw	101	;'e'
   723  1008  3465               	retlw	45	;'-'
   724  1009  342D               	retlw	32	;' '
   725  100A  3420               	retlw	32	;' '
   726  100B  3420               	retlw	32	;' '
   727  100C  3420               	retlw	32	;' '
   728  100D  3420               	retlw	32	;' '
   729  100E  3420               	retlw	10
   730  100F  340A               	retlw	0
   731  1010  3400               psect	stringtext2,class=STRCODE,delta=2,noexec
   732                           global __pstringtext2
   733                           __pstringtext2:
   734  1011                     	
   735                           STR_6:	
   736  1011                     	retlw	45	;'-'
   737  1011  342D               	retlw	83	;'S'
   738  1012  3453               	retlw	101	;'e'
   739  1013  3465               	retlw	116	;'t'
   740  1014  3474               	retlw	32	;' '
   741  1015  3420               	retlw	84	;'T'
   742  1016  3454               	retlw	105	;'i'
   743  1017  3469               	retlw	109	;'m'
   744  1018  346D               	retlw	101	;'e'
   745  1019  3465               	retlw	45	;'-'
   746  101A  342D               	retlw	32	;' '
   747  101B  3420               	retlw	32	;' '
   748  101C  3420               	retlw	32	;' '
   749  101D  3420               	retlw	32	;' '
   750  101E  3420               	retlw	32	;' '
   751  101F  3420               	retlw	10
   752  1020  340A               	retlw	0
   753  1021  3400               psect	stringtext3,class=STRCODE,delta=2,noexec
   754                           global __pstringtext3
   755                           __pstringtext3:
   756  1022                     	
   757                           STR_7:	
   758  1022                     	retlw	45	;'-'
   759  1022  342D               	retlw	83	;'S'
   760  1023  3453               	retlw	101	;'e'
   761  1024  3465               	retlw	116	;'t'
   762  1025  3474               	retlw	32	;' '
   763  1026  3420               	retlw	84	;'T'
   764  1027  3454               	retlw	101	;'e'
   765  1028  3465               	retlw	109	;'m'
   766  1029  346D               	retlw	112	;'p'
   767  102A  3470               	retlw	45	;'-'
   768  102B  342D               	retlw	32	;' '
   769  102C  3420               	retlw	32	;' '
   770  102D  3420               	retlw	32	;' '
   771  102E  3420               	retlw	32	;' '
   772  102F  3420               	retlw	32	;' '
   773  1030  3420               	retlw	10
   774  1031  340A               	retlw	0
   775  1032  3400               psect	stringtext4,class=STRCODE,delta=2,noexec
   776                           global __pstringtext4
   777                           __pstringtext4:
   778  1033                     	
   779                           STR_4:	
   780  1033                     	retlw	84	;'T'
   781  1033  3454               	retlw	101	;'e'
   782  1034  3465               	retlw	109	;'m'
   783  1035  346D               	retlw	112	;'p'
   784  1036  3470               	retlw	32	;' '
   785  1037  3420               	retlw	83	;'S'
   786  1038  3453               	retlw	101	;'e'
   787  1039  3465               	retlw	116	;'t'
   788  103A  3474               	retlw	116	;'t'
   789  103B  3474               	retlw	105	;'i'
   790  103C  3469               	retlw	110	;'n'
   791  103D  346E               	retlw	103	;'g'
   792  103E  3467               	retlw	58	;':'
   793  103F  343A               	retlw	32	;' '
   794  1040  3420               	retlw	32	;' '
   795  1041  3420               	retlw	10
   796  1042  340A               	retlw	0
   797  1043  3400               psect	stringtext5,class=STRCODE,delta=2,noexec
   798                           global __pstringtext5
   799                           __pstringtext5:
   800  1044                     	
   801                           STR_9:	
   802  1044                     	retlw	87	;'W'
   803  1044  3457               	retlw	84	;'T'
   804  1045  3454               	retlw	70	;'F'
   805  1046  3446               	retlw	32	;' '
   806  1047  3420               	retlw	32	;' '
   807  1048  3420               	retlw	32	;' '
   808  1049  3420               	retlw	32	;' '
   809  104A  3420               	retlw	32	;' '
   810  104B  3420               	retlw	32	;' '
   811  104C  3420               	retlw	32	;' '
   812  104D  3420               	retlw	32	;' '
   813  104E  3420               	retlw	32	;' '
   814  104F  3420               	retlw	32	;' '
   815  1050  3420               	retlw	32	;' '
   816  1051  3420               	retlw	32	;' '
   817  1052  3420               	retlw	0
   818  1053  3400               psect	stringtext6,class=STRCODE,delta=2,noexec
   819                           global __pstringtext6
   820                           __pstringtext6:
   821  1054                     	
   822                           STR_3:	
   823  1054                     	retlw	84	;'T'
   824  1054  3454               	retlw	105	;'i'
   825  1055  3469               	retlw	109	;'m'
   826  1056  346D               	retlw	101	;'e'
   827  1057  3465               	retlw	32	;' '
   828  1058  3420               	retlw	32	;' '
   829  1059  3420               	retlw	32	;' '
   830  105A  3420               	retlw	32	;' '
   831  105B  3420               	retlw	32	;' '
   832  105C  3420               	retlw	32	;' '
   833  105D  3420               	retlw	32	;' '
   834  105E  3420               	retlw	32	;' '
   835  105F  3420               	retlw	32	;' '
   836  1060  3420               	retlw	32	;' '
   837  1061  3420               	retlw	32	;' '
   838  1062  3420               	retlw	0
   839  1063  3400               psect	stringtext7,class=STRCODE,delta=2,noexec
   840                           global __pstringtext7
   841                           __pstringtext7:
   842  1064                     	
   843                           STR_5:	
   844  1064                     	retlw	77	;'M'
   845  1064  344D               	retlw	111	;'o'
   846  1065  346F               	retlw	100	;'d'
   847  1066  3464               	retlw	101	;'e'
   848  1067  3465               	retlw	58	;':'
   849  1068  343A               	retlw	32	;' '
   850  1069  3420               	retlw	32	;' '
   851  106A  3420               	retlw	32	;' '
   852  106B  3420               	retlw	32	;' '
   853  106C  3420               	retlw	32	;' '
   854  106D  3420               	retlw	32	;' '
   855  106E  3420               	retlw	32	;' '
   856  106F  3420               	retlw	32	;' '
   857  1070  3420               	retlw	32	;' '
   858  1071  3420               	retlw	32	;' '
   859  1072  3420               	retlw	0
   860  1073  3400               psect	stringtext8,class=STRCODE,delta=2,noexec
   861                           global __pstringtext8
   862                           __pstringtext8:
   863  1074                     	
   864                           STR_1:	
   865  1074                     	retlw	72	;'H'
   866  1074  3448               	retlw	117	;'u'
   867  1075  3475               	retlw	109	;'m'
   868  1076  346D               	retlw	105	;'i'
   869  1077  3469               	retlw	100	;'d'
   870  1078  3464               	retlw	105	;'i'
   871  1079  3469               	retlw	116	;'t'
   872  107A  3474               	retlw	121	;'y'
   873  107B  3479               	retlw	32	;' '
   874  107C  3420               	retlw	58	;':'
   875  107D  343A               	retlw	32	;' '
   876  107E  3420               	retlw	0
   877  107F  3400               psect	stringtext9,class=STRCODE,delta=2,noexec
   878                           global __pstringtext9
   879                           __pstringtext9:
   880  1080                     	
   881                           STR_2:	
   882  1080                     	retlw	10
   883  1080  340A               	retlw	84	;'T'
   884  1081  3454               	retlw	101	;'e'
   885  1082  3465               	retlw	109	;'m'
   886  1083  346D               	retlw	112	;'p'
   887  1084  3470               	retlw	32	;' '
   888  1085  3420               	retlw	58	;':'
   889  1086  343A               	retlw	32	;' '
   890  1087  3420               	retlw	0
   891  1088  3400               psect	stringtext10,class=STRCODE,delta=2,noexec
   892                           global __pstringtext10
   893                           __pstringtext10:
   894  1089                     	
   895                           STR_11:	
   896  1089                     	retlw	44	;','
   897  1089  342C               	retlw	66	;'B'
   898  108A  3442               	retlw	67	;'C'
   899  108B  3443               	retlw	76	;'L'
   900  108C  344C               	retlw	73	;'I'
   901  108D  3449               	retlw	70	;'F'
   902  108E  3446               	retlw	0
   903  108F  3400               psect	stringtext11,class=STRCODE,delta=2,noexec
   904                           global __pstringtext11
   905                           __pstringtext11:
   906  1090                     	
   907                           STR_10:	
   908  1090                     	retlw	44	;','
   909  1090  342C               	retlw	78	;'N'
   910  1091  344E               	retlw	56	;'8'
   911  1092  3438               	retlw	0
   912  1093  3400               psect	stringtext12,class=STRCODE,delta=2,noexec
   913                           global __pstringtext12
   914                           __pstringtext12:
   915  0000                     ; #config settings
   916                           global __CFG_FOSC$
   917                           __CFG_FOSC$ equ 0x2
   918  0002                     global __CFG_WDTE$OFF
   919                           __CFG_WDTE$OFF equ 0x0
   920  0000                     global __CFG_PWRTE$ON
   921                           __CFG_PWRTE$ON equ 0x0
   922  0000                     global __CFG_MCLRE$OFF
   923                           __CFG_MCLRE$OFF equ 0x0
   924  0000                     global __CFG_CP$OFF
   925                           __CFG_CP$OFF equ 0x0
   926  0000                     global __CFG_BOREN$ON
   927                           __CFG_BOREN$ON equ 0x0
   928  0000                     global __CFG_CLKOUTEN$ON
   929                           __CFG_CLKOUTEN$ON equ 0x0
   930  0000                     global __CFG_IESO$OFF
   931                           __CFG_IESO$OFF equ 0x0
   932  0000                     global __CFG_FCMEN$OFF
   933                           __CFG_FCMEN$OFF equ 0x0
   934  0000                     global __CFG_WRT$OFF
   935                           __CFG_WRT$OFF equ 0x0
   936  0000                     global __CFG_VCAPEN$OFF
   937                           __CFG_VCAPEN$OFF equ 0x0
   938  0000                     global __CFG_STVREN$OFF
   939                           __CFG_STVREN$OFF equ 0x0
   940  0000                     global __CFG_BORV$LO
   941                           __CFG_BORV$LO equ 0x0
   942  0000                     global __CFG_LPBOR$OFF
   943                           __CFG_LPBOR$OFF equ 0x0
   944  0000                     global __CFG_LVP$OFF
   945                           __CFG_LVP$OFF equ 0x0
   946  0000                     	file	"C:\Users\dell\AppData\Local\Temp\salk."
   947                           	line	#
   948                           psect cinit,class=CODE,delta=2
   949                           global start_initialization
   950                           start_initialization:
   951  01E7                     
   952                           global __initialization
   953                           __initialization:
   954  01E7                     DABS 1,8944,0,_gTxBuffer	;BIGRAM
   955                           psect	bssBANK0,class=BANK0,space=1,noexec
   956                           global __pbssBANK0
   957                           __pbssBANK0:
   958  004B                     _test:
   959  004B                            ds      2
   960  004B                     
   961                           _wCounter2:
   962  004D                            ds      1
   963  004D                     
   964                           _wTimer1IntCounter:
   965  004E                            ds      1
   966  004E                     
   967                           _wTempUpdate:
   968  004F                            ds      1
   969  004F                     
   970                           _gTxReadingPosition:
   971  0050                            ds      1
   972  0050                     
   973                           _gTxTransmitSize:
   974  0051                            ds      1
   975  0051                     
   976                           _wTrial:
   977  0052                            ds      1
   978  0052                     
   979                           _wI2CTxSendPos:
   980  0053                            ds      1
   981  0053                     
   982                           _wI2CRxBufferSize:
   983  0054                            ds      1
   984  0054                     
   985                           _wI2CTxBufferSize:
   986  0055                            ds      1
   987  0055                     
   988                           _wReceptionCounterPrev:
   989  0056                            ds      1
   990  0056                     
   991                           _wReceptionCounter:
   992  0057                            ds      1
   993  0057                     
   994                           _wReceptionBufferPosition:
   995  0058                            ds      1
   996  0058                     
   997                           _mWritingPosition:
   998  0059                            ds      1
   999  0059                     
  1000                           _mCursorDisplayShiftReg:
  1001  005A                            ds      1
  1002  005A                     
  1003                           _mDisplayOnOffReg:
  1004  005B                            ds      1
  1005  005B                     
  1006                           psect	bssBANK1,class=BANK1,space=1,noexec
  1007                           global __pbssBANK1
  1008                           __pbssBANK1:
  1009  00A0                     _wTemperature:
  1010  00A0                            ds      2
  1011  00A0                     
  1012                           _wHumidity:
  1013  00A2                            ds      2
  1014  00A2                     
  1015                           _wTempState:
  1016  00A4                            ds      1
  1017  00A4                     
  1018                           _wTimer0Counter:
  1019  00A5                            ds      1
  1020  00A5                     
  1021                           _wI2CCommandState:
  1022  00A6                            ds      1
  1023  00A6                     
  1024                           _wI2CTxBuffer:
  1025  00A7                            ds      20
  1026  00A7                     
  1027                           psect	dataBANK1,class=BANK1,space=1,noexec
  1028                           global __pdataBANK1
  1029                           __pdataBANK1:
  1030  00C3                     	file	"161518_temp_main.c"
  1031                           	line	376
  1032                           main@F2273:
  1033  00C3                            ds      4
  1034  00C3                     
  1035                           psect	dataBANK1
  1036                           	file	"161518_temp_main.c"
  1037                           	line	232
  1038                           _wTempSet:
  1039  00C7                            ds      2
  1040  00C7                     
  1041                           psect	bssBANK2,class=BANK2,space=1,noexec
  1042                           global __pbssBANK2
  1043                           __pbssBANK2:
  1044  0120                     _wHexTemp:
  1045  0120                            ds      20
  1046  0120                     
  1047                           _wReceptionBuffer:
  1048  0134                            ds      30
  1049  0134                     
  1050                           psect	bssBANK3,class=BANK3,space=1,noexec
  1051                           global __pbssBANK3
  1052                           __pbssBANK3:
  1053  01A0                     _gUartTXBuffer:
  1054  01A0                            ds      50
  1055  01A0                     
  1056                           psect	bssBANK4,class=BANK4,space=1,noexec
  1057                           global __pbssBANK4
  1058                           __pbssBANK4:
  1059  0220                     _wInterruptText:
  1060  0220                            ds      75
  1061  0220                     
  1062                           psect	bssBANK5,class=BANK5,space=1,noexec
  1063                           global __pbssBANK5
  1064                           __pbssBANK5:
  1065  02A0                     _gUartRXBuffer:
  1066  02A0                            ds      50
  1067  02A0                     
  1068                           	file	"C:\Users\dell\AppData\Local\Temp\salk."
  1069                           	line	#
  1070                           ; Initialize objects allocated to BANK1
  1071                           	global __pidataBANK1,__pdataBANK1
  1072                           psect cinit,class=CODE,delta=2,merge=1
  1073                           	movlw low(__pidataBANK1)
  1074  01E7  30D2               	movwf fsr0l
  1075  01E8  0084               	movlw high(__pidataBANK1)|80h
  1076  01E9  308A               	movwf fsr0h
  1077  01EA  0085               	movlb 1	; select bank1
  1078  01EB  0021               	moviw fsr0++
  1079  01EC  0012               	movwf (__pdataBANK1+0)&07Fh
  1080  01ED  00C3               	moviw fsr0++
  1081  01EE  0012               	movwf (__pdataBANK1+1)&07Fh
  1082  01EF  00C4               	moviw fsr0++
  1083  01F0  0012               	movwf (__pdataBANK1+2)&07Fh
  1084  01F1  00C5               	moviw fsr0++
  1085  01F2  0012               	movwf (__pdataBANK1+3)&07Fh
  1086  01F3  00C6               	moviw fsr0++
  1087  01F4  0012               	movwf (__pdataBANK1+4)&07Fh
  1088  01F5  00C7               	moviw fsr0++
  1089  01F6  0012               	movwf (__pdataBANK1+5)&07Fh
  1090  01F7  00C8               	line	#
  1091                           psect clrtext,class=CODE,delta=2
  1092                           global clear_ram0
  1093                           ;	Called with FSR0 containing the base address, and
  1094                           ;	btemp/btemp+1 has the size to clear
  1095                           clear_ram0:
  1096  07F4                     	clrwdt			;clear the watchdog before getting into this loop
  1097  07F4  0064               clrloop0:
  1098  07F5                     	clrf	indf0		;clear RAM location pointed to by FSR
  1099  07F5  0180               	addfsr	0,1
  1100  07F6  3101               	movlw	1
  1101  07F7  3001               	subwf	btemp,f
  1102  07F8  02FE               	movlw	0
  1103  07F9  3000               	subwfb btemp+1,f
  1104  07FA  3BFF               	movf btemp+1,w
  1105  07FB  087F               	iorwf btemp,w
  1106  07FC  047E               	skipz
  1107  07FD  1D03               	goto clrloop0	;have we reached the end yet?
  1108  07FE  2FF5               	retlw	0		;all done for this memory range, return
  1109  07FF  3400               ; Clear objects allocated to BIGRAM
  1110                           psect cinit,class=CODE,delta=2,merge=1
  1111                           	global __pbssBIGRAM
  1112                           	movlw	low(__pbssBIGRAM)
  1113  01F8  30F0               	movwf	fsr0l
  1114  01F9  0084               	movlw	high(__pbssBIGRAM)
  1115  01FA  3022               	movwf	fsr0h
  1116  01FB  0085               	movlw	low(0100h)
  1117  01FC  3000               	movwf	btemp
  1118  01FD  00FE               	movlw	high(0100h)
  1119  01FE  3001               	movwf	btemp+1
  1120  01FF  00FF               	fcall	clear_ram0
  1121  0200  3187  27F4  3181   ; Clear objects allocated to BANK0
  1122                           psect cinit,class=CODE,delta=2,merge=1
  1123                           	global __pbssBANK0
  1124                           	movlw	low(__pbssBANK0)
  1125  0203  304B               	movwf	fsr0l
  1126  0204  0084               	movlw	high(__pbssBANK0)
  1127  0205  3000               	movwf	fsr0h
  1128  0206  0085               	movlw	low(011h)
  1129  0207  3011               	movwf	btemp
  1130  0208  00FE               	movlw	high(011h)
  1131  0209  3000               	movwf	btemp+1
  1132  020A  00FF               	fcall	clear_ram0
  1133  020B  3187  27F4  3181   ; Clear objects allocated to BANK1
  1134                           psect cinit,class=CODE,delta=2,merge=1
  1135                           	global __pbssBANK1
  1136                           	movlw	low(__pbssBANK1)
  1137  020E  30A0               	movwf	fsr0l
  1138  020F  0084               	movlw	high(__pbssBANK1)
  1139  0210  3000               	movwf	fsr0h
  1140  0211  0085               	movlw	low(01Bh)
  1141  0212  301B               	movwf	btemp
  1142  0213  00FE               	movlw	high(01Bh)
  1143  0214  3000               	movwf	btemp+1
  1144  0215  00FF               	fcall	clear_ram0
  1145  0216  3187  27F4  3181   ; Clear objects allocated to BANK2
  1146                           psect cinit,class=CODE,delta=2,merge=1
  1147                           	global __pbssBANK2
  1148                           	movlw	low(__pbssBANK2)
  1149  0219  3020               	movwf	fsr0l
  1150  021A  0084               	movlw	high(__pbssBANK2)
  1151  021B  3001               	movwf	fsr0h
  1152  021C  0085               	movlw	low(032h)
  1153  021D  3032               	movwf	btemp
  1154  021E  00FE               	movlw	high(032h)
  1155  021F  3000               	movwf	btemp+1
  1156  0220  00FF               	fcall	clear_ram0
  1157  0221  3187  27F4  3181   ; Clear objects allocated to BANK3
  1158                           psect cinit,class=CODE,delta=2,merge=1
  1159                           	global __pbssBANK3
  1160                           	movlw	low(__pbssBANK3)
  1161  0224  30A0               	movwf	fsr0l
  1162  0225  0084               	movlw	high(__pbssBANK3)
  1163  0226  3001               	movwf	fsr0h
  1164  0227  0085               	movlw	low(032h)
  1165  0228  3032               	movwf	btemp
  1166  0229  00FE               	movlw	high(032h)
  1167  022A  3000               	movwf	btemp+1
  1168  022B  00FF               	fcall	clear_ram0
  1169  022C  3187  27F4  3181   ; Clear objects allocated to BANK4
  1170                           psect cinit,class=CODE,delta=2,merge=1
  1171                           	global __pbssBANK4
  1172                           	movlw	low(__pbssBANK4)
  1173  022F  3020               	movwf	fsr0l
  1174  0230  0084               	movlw	high(__pbssBANK4)
  1175  0231  3002               	movwf	fsr0h
  1176  0232  0085               	movlw	low(04Bh)
  1177  0233  304B               	movwf	btemp
  1178  0234  00FE               	movlw	high(04Bh)
  1179  0235  3000               	movwf	btemp+1
  1180  0236  00FF               	fcall	clear_ram0
  1181  0237  3187  27F4  3181   ; Clear objects allocated to BANK5
  1182                           psect cinit,class=CODE,delta=2,merge=1
  1183                           	global __pbssBANK5
  1184                           	movlw	low(__pbssBANK5)
  1185  023A  30A0               	movwf	fsr0l
  1186  023B  0084               	movlw	high(__pbssBANK5)
  1187  023C  3002               	movwf	fsr0h
  1188  023D  0085               	movlw	low(032h)
  1189  023E  3032               	movwf	btemp
  1190  023F  00FE               	movlw	high(032h)
  1191  0240  3000               	movwf	btemp+1
  1192  0241  00FF               	fcall	clear_ram0
  1193  0242  3187  27F4  3181   psect cinit,class=CODE,delta=2,merge=1
  1194                           global end_of_initialization,__end_of__initialization
  1195                           
  1196                           ;End of C runtime variable initialization code
  1197                           
  1198                           end_of_initialization:
  1199  0245                     __end_of__initialization:
  1200  0245                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  1201  0245  107E               movlb 0
  1202  0246  0020               ljmp _main	;jump to C main() function
  1203  0247  3182  2A49         psect	cstackBANK6,class=BANK6,space=1,noexec
  1204                           global __pcstackBANK6
  1205                           __pcstackBANK6:
  1206  0320                     	global	main@wTemp
  1207                           main@wTemp:	; 2 bytes @ 0x0
  1208  0320                     	ds	2
  1209  0320                     	global	main@wConv
  1210                           main@wConv:	; 4 bytes @ 0x2
  1211  0322                     	ds	4
  1212  0322                     	global	main@wReadout
  1213                           main@wReadout:	; 20 bytes @ 0x6
  1214  0326                     	ds	20
  1215  0326                     	global	main@wIterationCounter
  1216                           main@wIterationCounter:	; 2 bytes @ 0x1A
  1217  033A                     	ds	2
  1218  033A                     	global	main@wEditingMode
  1219                           main@wEditingMode:	; 1 bytes @ 0x1C
  1220  033C                     	ds	1
  1221  033C                     	global	main@wHumidityPrev
  1222                           main@wHumidityPrev:	; 2 bytes @ 0x1D
  1223  033D                     	ds	2
  1224  033D                     	global	main@wTemperaturePrev
  1225                           main@wTemperaturePrev:	; 2 bytes @ 0x1F
  1226  033F                     	ds	2
  1227  033F                     	global	main@wUpdateMenu
  1228                           main@wUpdateMenu:	; 1 bytes @ 0x21
  1229  0341                     	ds	1
  1230  0341                     	global	main@wDebounceEnter
  1231                           main@wDebounceEnter:	; 2 bytes @ 0x22
  1232  0342                     	ds	2
  1233  0342                     	global	main@wDebounceUp
  1234                           main@wDebounceUp:	; 2 bytes @ 0x24
  1235  0344                     	ds	2
  1236  0344                     	global	main@wDebounceDown
  1237                           main@wDebounceDown:	; 2 bytes @ 0x26
  1238  0346                     	ds	2
  1239  0346                     	global	main@wCounter
  1240                           main@wCounter:	; 2 bytes @ 0x28
  1241  0348                     	ds	2
  1242  0348                     	global	main@wUpBottonPressed
  1243                           main@wUpBottonPressed:	; 1 bytes @ 0x2A
  1244  034A                     	ds	1
  1245  034A                     	global	main@wDownBottonPressed
  1246                           main@wDownBottonPressed:	; 1 bytes @ 0x2B
  1247  034B                     	ds	1
  1248  034B                     	global	main@wEnterBottonPressed
  1249                           main@wEnterBottonPressed:	; 1 bytes @ 0x2C
  1250  034C                     	ds	1
  1251  034C                     	global	main@wMenu
  1252                           main@wMenu:	; 1 bytes @ 0x2D
  1253  034D                     	ds	1
  1254  034D                     psect	cstackBANK1,class=BANK1,space=1,noexec
  1255                           global __pcstackBANK1
  1256                           __pcstackBANK1:
  1257  00BB                     ??_Add_Trace:	; 1 bytes @ 0x0
  1258  00BB                     	ds	6
  1259  00BB                     ??_main:	; 1 bytes @ 0x6
  1260  00C1                     	ds	2
  1261  00C1                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  1262                           global __pcstackCOMMON
  1263                           __pcstackCOMMON:
  1264  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1265  0070                     ?_clearDisplay:	; 1 bytes @ 0x0
  1266  0070                     ?_powerOnLcd:	; 1 bytes @ 0x0
  1267  0070                     ?_setCursorOff:	; 1 bytes @ 0x0
  1268  0070                     ?_moveCursorToHome:	; 1 bytes @ 0x0
  1269  0070                     ?_setNotBlinkingCursor:	; 1 bytes @ 0x0
  1270  0070                     ?_setData:	; 1 bytes @ 0x0
  1271  0070                     ?_writeInsChk:	; 1 bytes @ 0x0
  1272  0070                     ?_writeTxtChk:	; 1 bytes @ 0x0
  1273  0070                     ?_SetToSendDataToLCD:	; 1 bytes @ 0x0
  1274  0070                     ?_waitLCDBusy:	; 1 bytes @ 0x0
  1275  0070                     ?_writeInsNoChk:	; 1 bytes @ 0x0
  1276  0070                     ?_ToggleBitRB5:	; 1 bytes @ 0x0
  1277  0070                     ?_SetToGetTemp:	; 1 bytes @ 0x0
  1278  0070                     ?_GetTemp:	; 1 bytes @ 0x0
  1279  0070                     ?_PrintLog:	; 1 bytes @ 0x0
  1280  0070                     ?_main:	; 1 bytes @ 0x0
  1281  0070                     ?_myint:	; 1 bytes @ 0x0
  1282  0070                     ?_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  1283  0070                     	global	?i1_strlen
  1284                           ?i1_strlen:	; 2 bytes @ 0x0
  1285  0070                     	global	i1strlen@s
  1286                           i1strlen@s:	; 2 bytes @ 0x0
  1287  0070                     	ds	2
  1288  0070                     ??i1_strlen:	; 1 bytes @ 0x2
  1289  0072                     	ds	2
  1290  0072                     	global	i1strlen@a
  1291                           i1strlen@a:	; 2 bytes @ 0x4
  1292  0074                     	ds	2
  1293  0074                     ?i1_strcpy:	; 1 bytes @ 0x6
  1294  0076                     	global	i1strcpy@src
  1295                           i1strcpy@src:	; 2 bytes @ 0x6
  1296  0076                     	ds	2
  1297  0076                     ??i1_strcpy:	; 1 bytes @ 0x8
  1298  0078                     	ds	2
  1299  0078                     	global	i1strcpy@s
  1300                           i1strcpy@s:	; 2 bytes @ 0xA
  1301  007A                     	ds	2
  1302  007A                     	global	i1strcpy@dest
  1303                           i1strcpy@dest:	; 1 bytes @ 0xC
  1304  007C                     	ds	1
  1305  007C                     	global	i1strcpy@d
  1306                           i1strcpy@d:	; 1 bytes @ 0xD
  1307  007D                     	ds	1
  1308  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1309                           global __pcstackBANK0
  1310                           __pcstackBANK0:
  1311  0020                     ?i1_strcat:	; 1 bytes @ 0x0
  1312  0020                     	global	i1strcat@src
  1313                           i1strcat@src:	; 2 bytes @ 0x0
  1314  0020                     	ds	2
  1315  0020                     ??i1_strcat:	; 1 bytes @ 0x2
  1316  0022                     	ds	2
  1317  0022                     	global	i1strcat@dest
  1318                           i1strcat@dest:	; 1 bytes @ 0x4
  1319  0024                     	ds	1
  1320  0024                     ?i1_Add_Trace:	; 1 bytes @ 0x5
  1321  0025                     	global	i1Add_Trace@iSizeOfoText
  1322                           i1Add_Trace@iSizeOfoText:	; 1 bytes @ 0x5
  1323  0025                     	ds	1
  1324  0025                     	global	i1Add_Trace@iText
  1325                           i1Add_Trace@iText:	; 2 bytes @ 0x6
  1326  0026                     	ds	2
  1327  0026                     ??i1_Add_Trace:	; 1 bytes @ 0x8
  1328  0028                     	ds	6
  1329  0028                     	global	i1Add_Trace@oText
  1330                           i1Add_Trace@oText:	; 1 bytes @ 0xE
  1331  002E                     	ds	1
  1332  002E                     ??_myint:	; 1 bytes @ 0xF
  1333  002F                     	ds	5
  1334  002F                     ??_setData:	; 1 bytes @ 0x14
  1335  0034                     ??_SetToSendDataToLCD:	; 1 bytes @ 0x14
  1336  0034                     ??_waitLCDBusy:	; 1 bytes @ 0x14
  1337  0034                     ??_ToggleBitRB5:	; 1 bytes @ 0x14
  1338  0034                     ??_SetToGetTemp:	; 1 bytes @ 0x14
  1339  0034                     ?_Debounce:	; 1 bytes @ 0x14
  1340  0034                     ??_SetToReadDataFromLCD:	; 1 bytes @ 0x14
  1341  0034                     	global	?_strlen
  1342                           ?_strlen:	; 2 bytes @ 0x14
  1343  0034                     ?_memset:	; 2 bytes @ 0x14
  1344  0034                     ?_memcpy:	; 2 bytes @ 0x14
  1345  0034                     	global	?___awdiv
  1346                           ?___awdiv:	; 2 bytes @ 0x14
  1347  0034                     	global	?___awmod
  1348                           ?___awmod:	; 2 bytes @ 0x14
  1349  0034                     	global	Debounce@ioTimer
  1350                           Debounce@ioTimer:	; 1 bytes @ 0x14
  1351  0034                     	global	___awdiv@divisor
  1352                           ___awdiv@divisor:	; 2 bytes @ 0x14
  1353  0034                     	global	___awmod@divisor
  1354                           ___awmod@divisor:	; 2 bytes @ 0x14
  1355  0034                     	global	memcpy@d1
  1356                           memcpy@d1:	; 2 bytes @ 0x14
  1357  0034                     	global	memset@dest
  1358                           memset@dest:	; 2 bytes @ 0x14
  1359  0034                     	global	strlen@s
  1360                           strlen@s:	; 2 bytes @ 0x14
  1361  0034                     	ds	1
  1362  0034                     	global	Debounce@swPressed
  1363                           Debounce@swPressed:	; 1 bytes @ 0x15
  1364  0035                     	ds	1
  1365  0035                     ??_strlen:	; 1 bytes @ 0x16
  1366  0036                     ??_Debounce:	; 1 bytes @ 0x16
  1367  0036                     	global	setData@iValue
  1368                           setData@iValue:	; 1 bytes @ 0x16
  1369  0036                     	global	memcpy@s1
  1370                           memcpy@s1:	; 1 bytes @ 0x16
  1371  0036                     	global	___awdiv@dividend
  1372                           ___awdiv@dividend:	; 2 bytes @ 0x16
  1373  0036                     	global	___awmod@dividend
  1374                           ___awmod@dividend:	; 2 bytes @ 0x16
  1375  0036                     	global	memset@c
  1376                           memset@c:	; 2 bytes @ 0x16
  1377  0036                     	ds	1
  1378  0036                     ??_writeInsNoChk:	; 1 bytes @ 0x17
  1379  0037                     	global	waitLCDBusy@busyFlag
  1380                           waitLCDBusy@busyFlag:	; 2 bytes @ 0x17
  1381  0037                     	global	memcpy@n
  1382                           memcpy@n:	; 2 bytes @ 0x17
  1383  0037                     	ds	1
  1384  0037                     ??___awdiv:	; 1 bytes @ 0x18
  1385  0038                     ??___awmod:	; 1 bytes @ 0x18
  1386  0038                     	global	Debounce@iSwitch
  1387                           Debounce@iSwitch:	; 1 bytes @ 0x18
  1388  0038                     	global	writeInsNoChk@iOpCode
  1389                           writeInsNoChk@iOpCode:	; 1 bytes @ 0x18
  1390  0038                     	global	memset@n
  1391                           memset@n:	; 2 bytes @ 0x18
  1392  0038                     	global	strlen@a
  1393                           strlen@a:	; 2 bytes @ 0x18
  1394  0038                     	ds	1
  1395  0038                     ??_memcpy:	; 1 bytes @ 0x19
  1396  0039                     ?_setCursorPosition:	; 1 bytes @ 0x19
  1397  0039                     ??_writeInsChk:	; 1 bytes @ 0x19
  1398  0039                     	global	writeInsChk@iOpCode
  1399                           writeInsChk@iOpCode:	; 1 bytes @ 0x19
  1400  0039                     	global	setCursorPosition@iPosition
  1401                           setCursorPosition@iPosition:	; 1 bytes @ 0x19
  1402  0039                     	global	___awdiv@counter
  1403                           ___awdiv@counter:	; 1 bytes @ 0x19
  1404  0039                     	global	___awmod@counter
  1405                           ___awmod@counter:	; 1 bytes @ 0x19
  1406  0039                     	ds	1
  1407  0039                     ??_memset:	; 1 bytes @ 0x1A
  1408  003A                     ??_initLCD:	; 1 bytes @ 0x1A
  1409  003A                     ??_clearDisplay:	; 1 bytes @ 0x1A
  1410  003A                     ??_powerOnLcd:	; 1 bytes @ 0x1A
  1411  003A                     ??_setCursorOff:	; 1 bytes @ 0x1A
  1412  003A                     ??_moveCursorToHome:	; 1 bytes @ 0x1A
  1413  003A                     ??_setNotBlinkingCursor:	; 1 bytes @ 0x1A
  1414  003A                     ??_setCursorPosition:	; 1 bytes @ 0x1A
  1415  003A                     ?_strcpy:	; 1 bytes @ 0x1A
  1416  003A                     	global	___awdiv@sign
  1417                           ___awdiv@sign:	; 1 bytes @ 0x1A
  1418  003A                     	global	___awmod@sign
  1419                           ___awmod@sign:	; 1 bytes @ 0x1A
  1420  003A                     	global	memcpy@tmp
  1421                           memcpy@tmp:	; 1 bytes @ 0x1A
  1422  003A                     	global	strcpy@src
  1423                           strcpy@src:	; 2 bytes @ 0x1A
  1424  003A                     	ds	1
  1425  003A                     	global	___awdiv@quotient
  1426                           ___awdiv@quotient:	; 2 bytes @ 0x1B
  1427  003B                     	global	memcpy@d
  1428                           memcpy@d:	; 2 bytes @ 0x1B
  1429  003B                     	ds	1
  1430  003B                     ??_strcpy:	; 1 bytes @ 0x1C
  1431  003C                     	global	setCursorPosition@iLine
  1432                           setCursorPosition@iLine:	; 1 bytes @ 0x1C
  1433  003C                     	ds	1
  1434  003C                     ?_printEM1812:	; 1 bytes @ 0x1D
  1435  003D                     	global	setCursorPosition@wLCDIndex
  1436                           setCursorPosition@wLCDIndex:	; 1 bytes @ 0x1D
  1437  003D                     	global	memcpy@s
  1438                           memcpy@s:	; 1 bytes @ 0x1D
  1439  003D                     	global	printEM1812@wVariable
  1440                           printEM1812@wVariable:	; 2 bytes @ 0x1D
  1441  003D                     	ds	1
  1442  003D                     ??_writeTxtChk:	; 1 bytes @ 0x1E
  1443  003E                     ?_Send_UART_Data:	; 1 bytes @ 0x1E
  1444  003E                     	global	Send_UART_Data@iData_Length
  1445                           Send_UART_Data@iData_Length:	; 1 bytes @ 0x1E
  1446  003E                     	global	memset@k
  1447                           memset@k:	; 2 bytes @ 0x1E
  1448  003E                     	global	strcpy@s
  1449                           strcpy@s:	; 2 bytes @ 0x1E
  1450  003E                     	ds	1
  1451  003E                     ??_Send_UART_Data:	; 1 bytes @ 0x1F
  1452  003F                     	global	printEM1812@oTextOut
  1453                           printEM1812@oTextOut:	; 1 bytes @ 0x1F
  1454  003F                     	ds	1
  1455  003F                     ??_printEM1812:	; 1 bytes @ 0x20
  1456  0040                     	global	writeTxtChk@iOpCode
  1457                           writeTxtChk@iOpCode:	; 1 bytes @ 0x20
  1458  0040                     	global	strcpy@d
  1459                           strcpy@d:	; 1 bytes @ 0x20
  1460  0040                     	global	memset@s
  1461                           memset@s:	; 2 bytes @ 0x20
  1462  0040                     	ds	1
  1463  0040                     ?_lcdWriteText:	; 1 bytes @ 0x21
  1464  0041                     	global	strcpy@dest
  1465                           strcpy@dest:	; 1 bytes @ 0x21
  1466  0041                     	global	lcdWriteText@iText
  1467                           lcdWriteText@iText:	; 2 bytes @ 0x21
  1468  0041                     	ds	1
  1469  0041                     ?_strcat:	; 1 bytes @ 0x22
  1470  0042                     ??_GetTemp:	; 1 bytes @ 0x22
  1471  0042                     	global	printEM1812@wUnity
  1472                           printEM1812@wUnity:	; 1 bytes @ 0x22
  1473  0042                     	global	Send_UART_Data@iData
  1474                           Send_UART_Data@iData:	; 1 bytes @ 0x22
  1475  0042                     	global	strcat@src
  1476                           strcat@src:	; 2 bytes @ 0x22
  1477  0042                     	ds	1
  1478  0042                     ??_lcdWriteText:	; 1 bytes @ 0x23
  1479  0043                     	global	printEM1812@wDecimal
  1480                           printEM1812@wDecimal:	; 1 bytes @ 0x23
  1481  0043                     	ds	1
  1482  0043                     ??_strcat:	; 1 bytes @ 0x24
  1483  0044                     	global	printEM1812@wIsNegative
  1484                           printEM1812@wIsNegative:	; 1 bytes @ 0x24
  1485  0044                     	ds	1
  1486  0044                     	global	printEM1812@wTen
  1487                           printEM1812@wTen:	; 1 bytes @ 0x25
  1488  0045                     	ds	1
  1489  0045                     	global	printEM1812@wWritingPosition
  1490                           printEM1812@wWritingPosition:	; 1 bytes @ 0x26
  1491  0046                     	global	lcdWriteText@wCharReadingPos
  1492                           lcdWriteText@wCharReadingPos:	; 1 bytes @ 0x26
  1493  0046                     	global	strcat@dest
  1494                           strcat@dest:	; 1 bytes @ 0x26
  1495  0046                     	ds	1
  1496  0046                     ?_Add_Trace:	; 1 bytes @ 0x27
  1497  0047                     ??_PrintLog:	; 1 bytes @ 0x27
  1498  0047                     	global	Add_Trace@iSizeOfoText
  1499                           Add_Trace@iSizeOfoText:	; 1 bytes @ 0x27
  1500  0047                     	ds	1
  1501  0047                     	global	Add_Trace@iText
  1502                           Add_Trace@iText:	; 2 bytes @ 0x28
  1503  0048                     	ds	1
  1504  0048                     	global	PrintLog@wInterruptTextLen
  1505                           PrintLog@wInterruptTextLen:	; 1 bytes @ 0x29
  1506  0049                     	ds	1
  1507  0049                     	global	Add_Trace@oText
  1508                           Add_Trace@oText:	; 1 bytes @ 0x2A
  1509  004A                     	global	PrintLog@iText
  1510                           PrintLog@iText:	; 1 bytes @ 0x2A
  1511  004A                     	ds	1
  1512  004A                     ;!
  1513                           ;!Data Sizes:
  1514                           ;!    Strings     148
  1515                           ;!    Constant    0
  1516                           ;!    Data        6
  1517                           ;!    BSS         269
  1518                           ;!    Persistent  0
  1519                           ;!    Stack       0
  1520                           ;!
  1521                           ;!Auto Spaces:
  1522                           ;!    Space          Size  Autos    Used
  1523                           ;!    COMMON           14     14      14
  1524                           ;!    BANK0            80     43      60
  1525                           ;!    BANK1            80      8      41
  1526                           ;!    BANK2            80      0      50
  1527                           ;!    BANK3            80      0      50
  1528                           ;!    BANK4            80      0      75
  1529                           ;!    BANK5            80      0      50
  1530                           ;!    BANK6            80     46      46
  1531                           ;!    BANK7            80      0       0
  1532                           ;!    BANK8            80      0       0
  1533                           ;!    BANK9            32      0       0
  1534                           ;!    BANK10            0      0       0
  1535                           ;!    BANK11            0      0       0
  1536                           ;!    BANK12            0      0       0
  1537                           
  1538                           ;!
  1539                           ;!Pointer List with Targets:
  1540                           ;!
  1541                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 75
  1542                           ;!		 -> STR_11(CODE[7]), STR_10(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1543                           ;!		 -> main@wReadout(BANK6[20]), wInterruptText(BANK4[75]), 
  1544                           ;!
  1545                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 75
  1546                           ;!		 -> STR_11(CODE[7]), STR_10(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1547                           ;!		 -> main@wReadout(BANK6[20]), wInterruptText(BANK4[75]), 
  1548                           ;!
  1549                           ;!    strcpy@dest	PTR unsigned char  size(1) Largest target is 75
  1550                           ;!		 -> wInterruptText(BANK4[75]), 
  1551                           ;!
  1552                           ;!    strcpy@d	PTR unsigned char  size(1) Largest target is 75
  1553                           ;!		 -> wInterruptText(BANK4[75]), 
  1554                           ;!
  1555                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
  1556                           ;!		 -> STR_11(CODE[7]), STR_10(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1557                           ;!		 -> main@wReadout(BANK6[20]), 
  1558                           ;!
  1559                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
  1560                           ;!		 -> STR_11(CODE[7]), STR_10(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1561                           ;!		 -> main@wReadout(BANK6[20]), 
  1562                           ;!
  1563                           ;!    sp__strcpy	PTR unsigned char  size(1) Largest target is 75
  1564                           ;!		 -> wInterruptText(BANK4[75]), 
  1565                           ;!
  1566                           ;!    strcat@src	PTR const unsigned char  size(2) Largest target is 20
  1567                           ;!		 -> STR_11(CODE[7]), STR_10(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1568                           ;!		 -> main@wReadout(BANK6[20]), 
  1569                           ;!
  1570                           ;!    strcat@dest	PTR unsigned char  size(1) Largest target is 75
  1571                           ;!		 -> wInterruptText(BANK4[75]), 
  1572                           ;!
  1573                           ;!    memset@dest	PTR void  size(2) Largest target is 75
  1574                           ;!		 -> wInterruptText(BANK4[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]),
                                  
  1575                           ;!
  1576                           ;!    memset@s	PTR unsigned char  size(2) Largest target is 75
  1577                           ;!		 -> wInterruptText(BANK4[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]),
                                  
  1578                           ;!
  1579                           ;!    memcpy@d1	PTR void  size(2) Largest target is 256
  1580                           ;!		 -> gTxBuffer(BIGRAM[256]), 
  1581                           ;!
  1582                           ;!    memcpy@d	PTR unsigned char  size(2) Largest target is 256
  1583                           ;!		 -> gTxBuffer(BIGRAM[256]), 
  1584                           ;!
  1585                           ;!    memcpy@s1	PTR const void  size(1) Largest target is 50
  1586                           ;!		 -> gUartTXBuffer(BANK3[50]), 
  1587                           ;!
  1588                           ;!    memcpy@s	PTR const unsigned char  size(1) Largest target is 50
  1589                           ;!		 -> gUartTXBuffer(BANK3[50]), 
  1590                           ;!
  1591                           ;!    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
  1592                           ;!		 -> STR_9(CODE[16]), STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), 
  1593                           ;!		 -> STR_5(CODE[16]), STR_4(CODE[17]), STR_3(CODE[16]), main@wReadout(BANK6[20]), 
  1594                           ;!		 -> main@wConv(BANK6[4]), wInterruptText(BANK4[75]), 
  1595                           ;!
  1596                           ;!    sp__memcpy	PTR void  size(2) Largest target is 256
  1597                           ;!		 -> gTxBuffer(BIGRAM[256]), 
  1598                           ;!
  1599                           ;!    Send_UART_Data@iData	PTR unsigned char  size(1) Largest target is 50
  1600                           ;!		 -> gUartTXBuffer(BANK3[50]), 
  1601                           ;!
  1602                           ;!    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
  1603                           ;!		 -> main@wEnterBottonPressed(BANK6[1]), main@wDownBottonPressed(BANK6[1]), main@wUpB
                                 ottonPressed(BANK6[1]), 
  1604                           ;!
  1605                           ;!    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
  1606                           ;!		 -> main@wDebounceDown(BANK6[2]), main@wDebounceUp(BANK6[2]), main@wDebounceEnter(BA
                                 NK6[2]), 
  1607                           ;!
  1608                           ;!    printEM1812@oTextOut	PTR unsigned char  size(1) Largest target is 20
  1609                           ;!		 -> main@wReadout(BANK6[20]), 
  1610                           ;!
  1611                           ;!    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
  1612                           ;!		 -> wInterruptText(BANK4[75]), 
  1613                           ;!
  1614                           ;!    sp__memset	PTR void  size(2) Largest target is 75
  1615                           ;!		 -> wInterruptText(BANK4[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]),
                                  
  1616                           ;!
  1617                           ;!    sp__strcat	PTR unsigned char  size(1) Largest target is 75
  1618                           ;!		 -> wInterruptText(BANK4[75]), 
  1619                           ;!
  1620                           ;!    Add_Trace@iText	PTR unsigned char  size(2) Largest target is 20
  1621                           ;!		 -> STR_11(CODE[7]), STR_10(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1622                           ;!		 -> main@wReadout(BANK6[20]), 
  1623                           ;!
  1624                           ;!    Add_Trace@oText	PTR unsigned char  size(1) Largest target is 75
  1625                           ;!		 -> wInterruptText(BANK4[75]), 
  1626                           ;!
  1627                           
  1628                           
  1629                           ;!
  1630                           ;!Critical Paths under _main in COMMON
  1631                           ;!
  1632                           ;!    None.
  1633                           ;!
  1634                           ;!Critical Paths under _myint in COMMON
  1635                           ;!
  1636                           ;!    i1_strcat->i1_strcpy
  1637                           ;!    i1_strcpy->i1_strlen
  1638                           ;!
  1639                           ;!Critical Paths under _main in BANK0
  1640                           ;!
  1641                           ;!    _main->_Add_Trace
  1642                           ;!    _main->_PrintLog
  1643                           ;!    _setNotBlinkingCursor->_writeInsChk
  1644                           ;!    _setCursorOff->_writeInsChk
  1645                           ;!    _printEM1812->___awdiv
  1646                           ;!    _powerOnLcd->_writeInsChk
  1647                           ;!    _moveCursorToHome->_writeInsChk
  1648                           ;!    _initLCD->_writeInsChk
  1649                           ;!    _clearDisplay->_writeInsChk
  1650                           ;!    _writeInsChk->_waitLCDBusy
  1651                           ;!    _writeInsChk->_writeInsNoChk
  1652                           ;!    _writeInsNoChk->_setData
  1653                           ;!    _Send_UART_Data->_memcpy
  1654                           ;!    _PrintLog->_lcdWriteText
  1655                           ;!    _lcdWriteText->_writeTxtChk
  1656                           ;!    _writeTxtChk->_setCursorPosition
  1657                           ;!    _setCursorPosition->_waitLCDBusy
  1658                           ;!    _GetTemp->_memset
  1659                           ;!    _Add_Trace->_strcat
  1660                           ;!    _strcat->_strcpy
  1661                           ;!    _strcpy->_strlen
  1662                           ;!
  1663                           ;!Critical Paths under _myint in BANK0
  1664                           ;!
  1665                           ;!    _myint->i1_Add_Trace
  1666                           ;!    i1_Add_Trace->i1_strcat
  1667                           ;!
  1668                           ;!Critical Paths under _main in BANK1
  1669                           ;!
  1670                           ;!    _main->_Add_Trace
  1671                           ;!
  1672                           ;!Critical Paths under _myint in BANK1
  1673                           ;!
  1674                           ;!    None.
  1675                           ;!
  1676                           ;!Critical Paths under _main in BANK2
  1677                           ;!
  1678                           ;!    None.
  1679                           ;!
  1680                           ;!Critical Paths under _myint in BANK2
  1681                           ;!
  1682                           ;!    None.
  1683                           ;!
  1684                           ;!Critical Paths under _main in BANK3
  1685                           ;!
  1686                           ;!    None.
  1687                           ;!
  1688                           ;!Critical Paths under _myint in BANK3
  1689                           ;!
  1690                           ;!    None.
  1691                           ;!
  1692                           ;!Critical Paths under _main in BANK4
  1693                           ;!
  1694                           ;!    None.
  1695                           ;!
  1696                           ;!Critical Paths under _myint in BANK4
  1697                           ;!
  1698                           ;!    None.
  1699                           ;!
  1700                           ;!Critical Paths under _main in BANK5
  1701                           ;!
  1702                           ;!    None.
  1703                           ;!
  1704                           ;!Critical Paths under _myint in BANK5
  1705                           ;!
  1706                           ;!    None.
  1707                           ;!
  1708                           ;!Critical Paths under _main in BANK6
  1709                           ;!
  1710                           ;!    None.
  1711                           ;!
  1712                           ;!Critical Paths under _myint in BANK6
  1713                           ;!
  1714                           ;!    None.
  1715                           ;!
  1716                           ;!Critical Paths under _main in BANK7
  1717                           ;!
  1718                           ;!    None.
  1719                           ;!
  1720                           ;!Critical Paths under _myint in BANK7
  1721                           ;!
  1722                           ;!    None.
  1723                           ;!
  1724                           ;!Critical Paths under _main in BANK8
  1725                           ;!
  1726                           ;!    None.
  1727                           ;!
  1728                           ;!Critical Paths under _myint in BANK8
  1729                           ;!
  1730                           ;!    None.
  1731                           ;!
  1732                           ;!Critical Paths under _main in BANK9
  1733                           ;!
  1734                           ;!    None.
  1735                           ;!
  1736                           ;!Critical Paths under _myint in BANK9
  1737                           ;!
  1738                           ;!    None.
  1739                           ;!
  1740                           ;!Critical Paths under _main in BANK10
  1741                           ;!
  1742                           ;!    None.
  1743                           ;!
  1744                           ;!Critical Paths under _myint in BANK10
  1745                           ;!
  1746                           ;!    None.
  1747                           ;!
  1748                           ;!Critical Paths under _main in BANK11
  1749                           ;!
  1750                           ;!    None.
  1751                           ;!
  1752                           ;!Critical Paths under _myint in BANK11
  1753                           ;!
  1754                           ;!    None.
  1755                           ;!
  1756                           ;!Critical Paths under _main in BANK12
  1757                           ;!
  1758                           ;!    None.
  1759                           ;!
  1760                           ;!Critical Paths under _myint in BANK12
  1761                           ;!
  1762                           ;!    None.
  1763                           
  1764 ;;
  1765 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1766 ;;
  1767                           
  1768                           ;!
  1769                           ;!Call Graph Tables:
  1770                           ;!
  1771                           ;! ---------------------------------------------------------------------------------
  1772                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1773                           ;! ---------------------------------------------------------------------------------
  1774                           ;! (0) _main                                                48    48      0   25834
  1775                           ;!                                              6 BANK1      2     2      0
  1776                           ;!                                              0 BANK6     46    46      0
  1777                           ;!                          _Add_Trace
  1778                           ;!                           _Debounce
  1779                           ;!                            _GetTemp
  1780                           ;!                           _PrintLog
  1781                           ;!                     _Send_UART_Data
  1782                           ;!                       _SetToGetTemp
  1783                           ;!                       _ToggleBitRB5
  1784                           ;!                       _clearDisplay
  1785                           ;!                            _initLCD
  1786                           ;!                       _lcdWriteText
  1787                           ;!                             _memset
  1788                           ;!                   _moveCursorToHome
  1789                           ;!                         _powerOnLcd
  1790                           ;!                        _printEM1812
  1791                           ;!                       _setCursorOff
  1792                           ;!                  _setCursorPosition
  1793                           ;!               _setNotBlinkingCursor
  1794                           ;! ---------------------------------------------------------------------------------
  1795                           ;! (1) _setNotBlinkingCursor                                 1     1      0     254
  1796                           ;!                                             26 BANK0      1     1      0
  1797                           ;!                        _writeInsChk
  1798                           ;! ---------------------------------------------------------------------------------
  1799                           ;! (1) _setCursorOff                                         1     1      0     254
  1800                           ;!                                             26 BANK0      1     1      0
  1801                           ;!                        _writeInsChk
  1802                           ;! ---------------------------------------------------------------------------------
  1803                           ;! (1) _printEM1812                                         10     7      3    3104
  1804                           ;!                                             29 BANK0     10     7      3
  1805                           ;!                            ___awdiv
  1806                           ;!                            ___awmod
  1807                           ;! ---------------------------------------------------------------------------------
  1808                           ;! (2) ___awmod                                              7     3      4     793
  1809                           ;!                                             20 BANK0      7     3      4
  1810                           ;! ---------------------------------------------------------------------------------
  1811                           ;! (2) ___awdiv                                              9     5      4     805
  1812                           ;!                                             20 BANK0      9     5      4
  1813                           ;! ---------------------------------------------------------------------------------
  1814                           ;! (1) _powerOnLcd                                           1     1      0     254
  1815                           ;!                                             26 BANK0      1     1      0
  1816                           ;!                        _writeInsChk
  1817                           ;! ---------------------------------------------------------------------------------
  1818                           ;! (1) _moveCursorToHome                                     0     0      0     254
  1819                           ;!                        _writeInsChk
  1820                           ;! ---------------------------------------------------------------------------------
  1821                           ;! (1) _initLCD                                              1     1      0     632
  1822                           ;!                                             26 BANK0      1     1      0
  1823                           ;!                       _clearDisplay
  1824                           ;!                            _setData
  1825                           ;!                        _writeInsChk
  1826                           ;! ---------------------------------------------------------------------------------
  1827                           ;! (2) _clearDisplay                                         0     0      0     254
  1828                           ;!                        _writeInsChk
  1829                           ;! ---------------------------------------------------------------------------------
  1830                           ;! (2) _writeInsChk                                          1     1      0     254
  1831                           ;!                                             25 BANK0      1     1      0
  1832                           ;!                        _waitLCDBusy
  1833                           ;!                      _writeInsNoChk
  1834                           ;! ---------------------------------------------------------------------------------
  1835                           ;! (3) _writeInsNoChk                                        2     2      0     186
  1836                           ;!                                             23 BANK0      2     2      0
  1837                           ;!                 _SetToSendDataToLCD
  1838                           ;!                            _setData
  1839                           ;! ---------------------------------------------------------------------------------
  1840                           ;! (1) _ToggleBitRB5                                         0     0      0       0
  1841                           ;! ---------------------------------------------------------------------------------
  1842                           ;! (1) _SetToGetTemp                                         1     1      0       0
  1843                           ;!                                             20 BANK0      1     1      0
  1844                           ;! ---------------------------------------------------------------------------------
  1845                           ;! (1) _Send_UART_Data                                       5     4      1     697
  1846                           ;!                                             30 BANK0      5     4      1
  1847                           ;!                             _memcpy
  1848                           ;! ---------------------------------------------------------------------------------
  1849                           ;! (2) _memcpy                                              10     5      5     478
  1850                           ;!                                             20 BANK0     10     5      5
  1851                           ;! ---------------------------------------------------------------------------------
  1852                           ;! (1) _PrintLog                                             4     4      0    6002
  1853                           ;!                                             39 BANK0      4     4      0
  1854                           ;!                       _lcdWriteText
  1855                           ;!                             _memset
  1856                           ;!                             _strlen
  1857                           ;! ---------------------------------------------------------------------------------
  1858                           ;! (1) _lcdWriteText                                         6     4      2    3421
  1859                           ;!                                             33 BANK0      6     4      2
  1860                           ;!                        _writeTxtChk
  1861                           ;! ---------------------------------------------------------------------------------
  1862                           ;! (2) _writeTxtChk                                          3     3      0    2301
  1863                           ;!                                             30 BANK0      3     3      0
  1864                           ;!                 _SetToSendDataToLCD
  1865                           ;!                  _setCursorPosition
  1866                           ;!                            _setData
  1867                           ;!                        _waitLCDBusy
  1868                           ;! ---------------------------------------------------------------------------------
  1869                           ;! (1) _setCursorPosition                                    5     4      1    2047
  1870                           ;!                                             25 BANK0      5     4      1
  1871                           ;!                 _SetToSendDataToLCD
  1872                           ;!                            _setData
  1873                           ;!                        _waitLCDBusy
  1874                           ;! ---------------------------------------------------------------------------------
  1875                           ;! (3) _waitLCDBusy                                          5     5      0      37
  1876                           ;!                                             20 BANK0      5     5      0
  1877                           ;!               _SetToReadDataFromLCD
  1878                           ;! ---------------------------------------------------------------------------------
  1879                           ;! (4) _SetToReadDataFromLCD                                 0     0      0       0
  1880                           ;! ---------------------------------------------------------------------------------
  1881                           ;! (4) _setData                                              3     3      0     124
  1882                           ;!                                             20 BANK0      3     3      0
  1883                           ;! ---------------------------------------------------------------------------------
  1884                           ;! (4) _SetToSendDataToLCD                                   0     0      0       0
  1885                           ;! ---------------------------------------------------------------------------------
  1886                           ;! (1) _GetTemp                                              1     1      0    1897
  1887                           ;!                                             34 BANK0      1     1      0
  1888                           ;!                             _memset
  1889                           ;! ---------------------------------------------------------------------------------
  1890                           ;! (1) _memset                                              14     8      6    1897
  1891                           ;!                                             20 BANK0     14     8      6
  1892                           ;! ---------------------------------------------------------------------------------
  1893                           ;! (1) _Debounce                                             5     3      2     788
  1894                           ;!                                             20 BANK0      5     3      2
  1895                           ;! ---------------------------------------------------------------------------------
  1896                           ;! (1) _Add_Trace                                           10     7      3    2780
  1897                           ;!                                             39 BANK0      4     1      3
  1898                           ;!                                              0 BANK1      6     6      0
  1899                           ;!                             _strcat
  1900                           ;!                             _strlen
  1901                           ;! ---------------------------------------------------------------------------------
  1902                           ;! (2) _strcat                                               5     3      2     979
  1903                           ;!                                             34 BANK0      5     3      2
  1904                           ;!                             _strcpy
  1905                           ;!                             _strlen
  1906                           ;! ---------------------------------------------------------------------------------
  1907                           ;! (2) _strlen                                               6     4      2     490
  1908                           ;!                                             20 BANK0      6     4      2
  1909                           ;! ---------------------------------------------------------------------------------
  1910                           ;! (3) _strcpy                                               8     6      2     263
  1911                           ;!                                             26 BANK0      8     6      2
  1912                           ;!                             _strlen (ARG)
  1913                           ;! ---------------------------------------------------------------------------------
  1914                           ;! Estimated maximum stack depth 4
  1915                           ;! ---------------------------------------------------------------------------------
  1916                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1917                           ;! ---------------------------------------------------------------------------------
  1918                           ;! (7) _myint                                                5     5      0    1072
  1919                           ;!                                             15 BANK0      5     5      0
  1920                           ;!                        i1_Add_Trace
  1921                           ;! ---------------------------------------------------------------------------------
  1922                           ;! (8) i1_Add_Trace                                         10     7      3    1072
  1923                           ;!                                              5 BANK0     10     7      3
  1924                           ;!                           i1_strcat
  1925                           ;!                           i1_strlen
  1926                           ;! ---------------------------------------------------------------------------------
  1927                           ;! (9) i1_strcat                                             5     3      2     542
  1928                           ;!                                              0 BANK0      5     3      2
  1929                           ;!                           i1_strcpy
  1930                           ;!                           i1_strlen
  1931                           ;! ---------------------------------------------------------------------------------
  1932                           ;! (9) i1_strlen                                             6     4      2     235
  1933                           ;!                                              0 COMMON     6     4      2
  1934                           ;! ---------------------------------------------------------------------------------
  1935                           ;! (10) i1_strcpy                                            8     6      2     172
  1936                           ;!                                              6 COMMON     8     6      2
  1937                           ;!                           i1_strlen (ARG)
  1938                           ;! ---------------------------------------------------------------------------------
  1939                           ;! Estimated maximum stack depth 10
  1940                           ;! ---------------------------------------------------------------------------------
  1941                           ;!
  1942                           ;! Call Graph Graphs:
  1943                           ;!
  1944                           ;! _main (ROOT)
  1945                           ;!   _Add_Trace
  1946                           ;!     _strcat
  1947                           ;!       _strcpy
  1948                           ;!         _strlen (ARG)
  1949                           ;!       _strlen
  1950                           ;!     _strlen
  1951                           ;!   _Debounce
  1952                           ;!   _GetTemp
  1953                           ;!     _memset
  1954                           ;!   _PrintLog
  1955                           ;!     _lcdWriteText
  1956                           ;!       _writeTxtChk
  1957                           ;!         _SetToSendDataToLCD
  1958                           ;!         _setCursorPosition
  1959                           ;!           _SetToSendDataToLCD
  1960                           ;!           _setData
  1961                           ;!           _waitLCDBusy
  1962                           ;!             _SetToReadDataFromLCD
  1963                           ;!         _setData
  1964                           ;!         _waitLCDBusy
  1965                           ;!           _SetToReadDataFromLCD
  1966                           ;!     _memset
  1967                           ;!     _strlen
  1968                           ;!   _Send_UART_Data
  1969                           ;!     _memcpy
  1970                           ;!   _SetToGetTemp
  1971                           ;!   _ToggleBitRB5
  1972                           ;!   _clearDisplay
  1973                           ;!     _writeInsChk
  1974                           ;!       _waitLCDBusy
  1975                           ;!         _SetToReadDataFromLCD
  1976                           ;!       _writeInsNoChk
  1977                           ;!         _SetToSendDataToLCD
  1978                           ;!         _setData
  1979                           ;!   _initLCD
  1980                           ;!     _clearDisplay
  1981                           ;!       _writeInsChk
  1982                           ;!         _waitLCDBusy
  1983                           ;!           _SetToReadDataFromLCD
  1984                           ;!         _writeInsNoChk
  1985                           ;!           _SetToSendDataToLCD
  1986                           ;!           _setData
  1987                           ;!     _setData
  1988                           ;!     _writeInsChk
  1989                           ;!       _waitLCDBusy
  1990                           ;!         _SetToReadDataFromLCD
  1991                           ;!       _writeInsNoChk
  1992                           ;!         _SetToSendDataToLCD
  1993                           ;!         _setData
  1994                           ;!   _lcdWriteText
  1995                           ;!     _writeTxtChk
  1996                           ;!       _SetToSendDataToLCD
  1997                           ;!       _setCursorPosition
  1998                           ;!         _SetToSendDataToLCD
  1999                           ;!         _setData
  2000                           ;!         _waitLCDBusy
  2001                           ;!           _SetToReadDataFromLCD
  2002                           ;!       _setData
  2003                           ;!       _waitLCDBusy
  2004                           ;!         _SetToReadDataFromLCD
  2005                           ;!   _memset
  2006                           ;!   _moveCursorToHome
  2007                           ;!     _writeInsChk
  2008                           ;!       _waitLCDBusy
  2009                           ;!         _SetToReadDataFromLCD
  2010                           ;!       _writeInsNoChk
  2011                           ;!         _SetToSendDataToLCD
  2012                           ;!         _setData
  2013                           ;!   _powerOnLcd
  2014                           ;!     _writeInsChk
  2015                           ;!       _waitLCDBusy
  2016                           ;!         _SetToReadDataFromLCD
  2017                           ;!       _writeInsNoChk
  2018                           ;!         _SetToSendDataToLCD
  2019                           ;!         _setData
  2020                           ;!   _printEM1812
  2021                           ;!     ___awdiv
  2022                           ;!     ___awmod
  2023                           ;!   _setCursorOff
  2024                           ;!     _writeInsChk
  2025                           ;!       _waitLCDBusy
  2026                           ;!         _SetToReadDataFromLCD
  2027                           ;!       _writeInsNoChk
  2028                           ;!         _SetToSendDataToLCD
  2029                           ;!         _setData
  2030                           ;!   _setCursorPosition
  2031                           ;!     _SetToSendDataToLCD
  2032                           ;!     _setData
  2033                           ;!     _waitLCDBusy
  2034                           ;!       _SetToReadDataFromLCD
  2035                           ;!   _setNotBlinkingCursor
  2036                           ;!     _writeInsChk
  2037                           ;!       _waitLCDBusy
  2038                           ;!         _SetToReadDataFromLCD
  2039                           ;!       _writeInsNoChk
  2040                           ;!         _SetToSendDataToLCD
  2041                           ;!         _setData
  2042                           ;!
  2043                           ;! _myint (ROOT)
  2044                           ;!   i1_Add_Trace
  2045                           ;!     i1_strcat
  2046                           ;!       i1_strcpy
  2047                           ;!         i1_strlen (ARG)
  2048                           ;!       i1_strlen
  2049                           ;!     i1_strlen
  2050                           ;!
  2051                           
  2052                           ;! Address spaces:
  2053                           
  2054                           ;!Name               Size   Autos  Total    Cost      Usage
  2055                           ;!BIGRAM             3F0      0       0       0        0.0%
  2056                           ;!NULL                 0      0       0       0        0.0%
  2057                           ;!CODE                 0      0       0       0        0.0%
  2058                           ;!BITCOMMON            E      0       0       1        0.0%
  2059                           ;!BITSFR0              0      0       0       1        0.0%
  2060                           ;!SFR0                 0      0       0       1        0.0%
  2061                           ;!COMMON               E      E       E       2      100.0%
  2062                           ;!BITSFR1              0      0       0       2        0.0%
  2063                           ;!SFR1                 0      0       0       2        0.0%
  2064                           ;!BITSFR2              0      0       0       3        0.0%
  2065                           ;!SFR2                 0      0       0       3        0.0%
  2066                           ;!STACK                0      0       0       3        0.0%
  2067                           ;!BITBANK0            50      0       0       4        0.0%
  2068                           ;!BITSFR3              0      0       0       4        0.0%
  2069                           ;!SFR3                 0      0       0       4        0.0%
  2070                           ;!BANK0               50     2B      3C       5       75.0%
  2071                           ;!BITSFR4              0      0       0       5        0.0%
  2072                           ;!SFR4                 0      0       0       5        0.0%
  2073                           ;!BITBANK1            50      0       0       6        0.0%
  2074                           ;!BITSFR5              0      0       0       6        0.0%
  2075                           ;!SFR5                 0      0       0       6        0.0%
  2076                           ;!BANK1               50      8      29       7       51.3%
  2077                           ;!BITSFR6              0      0       0       7        0.0%
  2078                           ;!SFR6                 0      0       0       7        0.0%
  2079                           ;!BITBANK2            50      0       0       8        0.0%
  2080                           ;!BITSFR7              0      0       0       8        0.0%
  2081                           ;!SFR7                 0      0       0       8        0.0%
  2082                           ;!BANK2               50      0      32       9       62.5%
  2083                           ;!BITSFR8              0      0       0       9        0.0%
  2084                           ;!SFR8                 0      0       0       9        0.0%
  2085                           ;!BITBANK3            50      0       0      10        0.0%
  2086                           ;!BITSFR9              0      0       0      10        0.0%
  2087                           ;!SFR9                 0      0       0      10        0.0%
  2088                           ;!BANK3               50      0      32      11       62.5%
  2089                           ;!BITSFR10             0      0       0      11        0.0%
  2090                           ;!SFR10                0      0       0      11        0.0%
  2091                           ;!BITBANK4            50      0       0      12        0.0%
  2092                           ;!BITSFR11             0      0       0      12        0.0%
  2093                           ;!SFR11                0      0       0      12        0.0%
  2094                           ;!BANK4               50      0      4B      13       93.8%
  2095                           ;!BITSFR12             0      0       0      13        0.0%
  2096                           ;!SFR12                0      0       0      13        0.0%
  2097                           ;!BITBANK5            50      0       0      14        0.0%
  2098                           ;!BITSFR13             0      0       0      14        0.0%
  2099                           ;!SFR13                0      0       0      14        0.0%
  2100                           ;!BANK5               50      0      32      15       62.5%
  2101                           ;!BITSFR14             0      0       0      15        0.0%
  2102                           ;!SFR14                0      0       0      15        0.0%
  2103                           ;!BITBANK6            50      0       0      16        0.0%
  2104                           ;!BITSFR15             0      0       0      16        0.0%
  2105                           ;!SFR15                0      0       0      16        0.0%
  2106                           ;!BANK6               50     2E      2E      17       57.5%
  2107                           ;!BITSFR16             0      0       0      17        0.0%
  2108                           ;!SFR16                0      0       0      17        0.0%
  2109                           ;!BITBANK7            50      0       0      18        0.0%
  2110                           ;!BITSFR17             0      0       0      18        0.0%
  2111                           ;!SFR17                0      0       0      18        0.0%
  2112                           ;!BANK7               50      0       0      19        0.0%
  2113                           ;!BITSFR18             0      0       0      19        0.0%
  2114                           ;!SFR18                0      0       0      19        0.0%
  2115                           ;!BITSFR19             0      0       0      20        0.0%
  2116                           ;!SFR19                0      0       0      20        0.0%
  2117                           ;!ABS                  0      0     182      20        0.0%
  2118                           ;!BITBANK8            50      0       0      21        0.0%
  2119                           ;!BITSFR20             0      0       0      21        0.0%
  2120                           ;!SFR20                0      0       0      21        0.0%
  2121                           ;!BANK8               50      0       0      22        0.0%
  2122                           ;!BITSFR21             0      0       0      22        0.0%
  2123                           ;!SFR21                0      0       0      22        0.0%
  2124                           ;!BITBANK9            50      0       0      23        0.0%
  2125                           ;!BITSFR22             0      0       0      23        0.0%
  2126                           ;!SFR22                0      0       0      23        0.0%
  2127                           ;!BANK9               20      0       0      24        0.0%
  2128                           ;!BITSFR23             0      0       0      24        0.0%
  2129                           ;!SFR23                0      0       0      24        0.0%
  2130                           ;!BITBANK10           50      0       0      25        0.0%
  2131                           ;!BITSFR24             0      0       0      25        0.0%
  2132                           ;!SFR24                0      0       0      25        0.0%
  2133                           ;!BITSFR25             0      0       0      26        0.0%
  2134                           ;!SFR25                0      0       0      26        0.0%
  2135                           ;!BANK10               0      0       0      26        0.0%
  2136                           ;!BITBANK11           50      0       0      27        0.0%
  2137                           ;!BITSFR26             0      0       0      27        0.0%
  2138                           ;!SFR26                0      0       0      27        0.0%
  2139                           ;!BITSFR27             0      0       0      28        0.0%
  2140                           ;!SFR27                0      0       0      28        0.0%
  2141                           ;!BANK11               0      0       0      28        0.0%
  2142                           ;!BITBANK12           30      0       0      29        0.0%
  2143                           ;!BITSFR28             0      0       0      29        0.0%
  2144                           ;!SFR28                0      0       0      29        0.0%
  2145                           ;!BITSFR29             0      0       0      30        0.0%
  2146                           ;!SFR29                0      0       0      30        0.0%
  2147                           ;!BANK12               0      0       0      30        0.0%
  2148                           ;!BITSFR30             0      0       0      31        0.0%
  2149                           ;!SFR30                0      0       0      31        0.0%
  2150                           ;!DATA                 0      0     182      31        0.0%
  2151                           ;!BITSFR31             0      0       0      32        0.0%
  2152                           ;!SFR31                0      0       0      32        0.0%
  2153                           
  2154                           	global	_main
  2155                           
  2156 ;; *************** function _main *****************
  2157 ;; Defined at:
  2158 ;;		line 249 in file "161518_temp_main.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  wReadout       20    6[BANK6 ] unsigned char [20]
  2163 ;;  wConv           4    2[BANK6 ] unsigned char [4]
  2164 ;;  wCounter        2   40[BANK6 ] int 
  2165 ;;  wDebounceDow    2   38[BANK6 ] unsigned short 
  2166 ;;  wDebounceUp     2   36[BANK6 ] unsigned short 
  2167 ;;  wDebounceEnt    2   34[BANK6 ] unsigned short 
  2168 ;;  wTemperature    2   31[BANK6 ] short 
  2169 ;;  wHumidityPre    2   29[BANK6 ] short 
  2170 ;;  wIterationCo    2   26[BANK6 ] unsigned short 
  2171 ;;  wTemp           2    0[BANK6 ] int 
  2172 ;;  wMenu           1   45[BANK6 ] unsigned char 
  2173 ;;  wEnterBotton    1   44[BANK6 ] unsigned char 
  2174 ;;  wDownBottonP    1   43[BANK6 ] unsigned char 
  2175 ;;  wUpBottonPre    1   42[BANK6 ] unsigned char 
  2176 ;;  wUpdateMenu     1   33[BANK6 ] unsigned char 
  2177 ;;  wEditingMode    1   28[BANK6 ] unsigned char 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : B1F/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2188 ;;      Locals:         0       0       0       0       0       0       0      46       0       0       0       0       
       0       0
  2189 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  2190 ;;      Totals:         0       0       2       0       0       0       0      46       0       0       0       0       
       0       0
  2191 ;;Total ram usage:       48 bytes
  2192 ;; Hardware stack levels required when called:   10
  2193 ;; This function calls:
  2194 ;;		_Add_Trace
  2195 ;;		_Debounce
  2196 ;;		_GetTemp
  2197 ;;		_PrintLog
  2198 ;;		_Send_UART_Data
  2199 ;;		_SetToGetTemp
  2200 ;;		_ToggleBitRB5
  2201 ;;		_clearDisplay
  2202 ;;		_initLCD
  2203 ;;		_lcdWriteText
  2204 ;;		_memset
  2205 ;;		_moveCursorToHome
  2206 ;;		_powerOnLcd
  2207 ;;		_printEM1812
  2208 ;;		_setCursorOff
  2209 ;;		_setCursorPosition
  2210 ;;		_setNotBlinkingCursor
  2211 ;; This function is called by:
  2212 ;;		Startup code after reset
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  2216                           	file	"161518_temp_main.c"
  2217                           	line	249
  2218                           global __pmaintext
  2219                           __pmaintext:	;psect for function _main
  2220  0249                     psect	maintext
  2221                           	file	"161518_temp_main.c"
  2222                           	line	249
  2223                           	global	__size_of_main
  2224                           	__size_of_main	equ	__end_of_main-_main
  2225  03D8                     	
  2226                           _main:	
  2227  0249                     ;incstack = 0
  2228                           	opt	stack 6
  2229                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2230                           	line	252
  2231                           	
  2232                           l3882:	
  2233  0249                     	movlb 6	; select bank6
  2234  0249  0026               	clrf	(main@wHumidityPrev)^0300h
  2235  024A  01BD               	clrf	(main@wHumidityPrev+1)^0300h
  2236  024B  01BE               	line	253
  2237                           	clrf	(main@wTemperaturePrev)^0300h
  2238  024C  01BF               	clrf	(main@wTemperaturePrev+1)^0300h
  2239  024D  01C0               	line	254
  2240                           	
  2241                           l3884:	
  2242  024E                     	movlw	low(_wInterruptText)
  2243  024E  3020               	movlb 0	; select bank0
  2244  024F  0020               	movwf	(memset@dest)
  2245  0250  00B4               	movlw	high(_wInterruptText)
  2246  0251  3002               	movwf	(memset@dest+1)
  2247  0252  00B5               	movlw	0
  2248  0253  3000               	movwf	(memset@c)
  2249  0254  00B6               	movwf	(memset@c+1)
  2250  0255  00B7               	movlw	04Bh
  2251  0256  304B               	movwf	(memset@n)
  2252  0257  00B8               	movlw	0
  2253  0258  3000               	movwf	((memset@n))+1
  2254  0259  00B9               	fcall	_memset
  2255  025A  3186  2621  3182   	line	256
  2256                           	
  2257                           l3886:	
  2258  025D                     	movlw	(0Fh & ((1<<4)-1))<<3
  2259  025D  3078               	movlb 1	; select bank1
  2260  025E  0021               	iorwf	(153)^080h,f	;volatile
  2261  025F  0499               	line	257
  2262                           	
  2263                           l3888:	
  2264  0260                     	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
  2265  0260  30FC               	andwf	(153)^080h,f	;volatile
  2266  0261  0599               	line	258
  2267                           	
  2268                           l3890:	
  2269  0262                     	bcf	(11),7	;volatile
  2270  0262  138B               	line	260
  2271                           	
  2272                           l3892:	
  2273  0263                     	movlb 6	; select bank6
  2274  0263  0026               	clrf	(main@wUpBottonPressed)^0300h
  2275  0264  01CA               	line	261
  2276                           	
  2277                           l3894:	
  2278  0265                     	clrf	(main@wDownBottonPressed)^0300h
  2279  0265  01CB               	line	262
  2280                           	
  2281                           l3896:	
  2282  0266                     	clrf	(main@wEnterBottonPressed)^0300h
  2283  0266  01CC               	line	264
  2284                           	
  2285                           l3898:	
  2286  0267                     	clrf	(main@wEditingMode)^0300h
  2287  0267  01BC               	line	265
  2288                           	
  2289                           l3900:	
  2290  0268                     	clrf	(main@wMenu)^0300h
  2291  0268  01CD               	line	266
  2292                           	
  2293                           l3902:	
  2294  0269                     	clrf	(main@wUpdateMenu)^0300h
  2295  0269  01C1               	incf	(main@wUpdateMenu)^0300h,f
  2296  026A  0AC1               	line	268
  2297                           	
  2298                           l3904:	
  2299  026B                     	clrf	(main@wIterationCounter)^0300h
  2300  026B  01BA               	clrf	(main@wIterationCounter+1)^0300h
  2301  026C  01BB               	line	269
  2302                           	
  2303                           l3906:	
  2304  026D                     	clrf	(main@wDebounceEnter)^0300h
  2305  026D  01C2               	clrf	(main@wDebounceEnter+1)^0300h
  2306  026E  01C3               	line	270
  2307                           	
  2308                           l3908:	
  2309  026F                     	clrf	(main@wDebounceUp)^0300h
  2310  026F  01C4               	clrf	(main@wDebounceUp+1)^0300h
  2311  0270  01C5               	line	271
  2312                           	
  2313                           l3910:	
  2314  0271                     	clrf	(main@wDebounceDown)^0300h
  2315  0271  01C6               	clrf	(main@wDebounceDown+1)^0300h
  2316  0272  01C7               	line	273
  2317                           	
  2318                           l3912:	
  2319  0273                     	movlb 0	; select bank0
  2320  0273  0020               	clrf	(12)	;volatile
  2321  0274  018C               	line	277
  2322                           	
  2323                           l3914:	
  2324  0275                     	movlw	((0 & ((1<<2)-1))<<6)|not (((1<<2)-1)<<6)
  2325  0275  303F               	andwf	(24),f	;volatile
  2326  0276  0598               	line	278
  2327                           	
  2328                           l3916:	
  2329  0277                     	bcf	(24),3	;volatile
  2330  0277  1198               	line	279
  2331                           	
  2332                           l3918:	
  2333  0278                     	movlw	(03h & ((1<<2)-1))<<4
  2334  0278  3030               	iorwf	(24),f	;volatile
  2335  0279  0498               	line	280
  2336                           	
  2337                           l3920:	
  2338  027A                     	bcf	(24),2	;volatile
  2339  027A  1118               	line	281
  2340                           	
  2341                           l3922:	
  2342  027B                     	bsf	(24),0	;volatile
  2343  027B  1418               	line	282
  2344                           	
  2345                           l3924:	
  2346  027C                     	movlb 1	; select bank1
  2347  027C  0021               	bsf	(145)^080h,0	;volatile
  2348  027D  1411               	line	286
  2349                           	
  2350                           l3926:	
  2351  027E                     	movf	(149)^080h,w	;volatile
  2352  027E  0815               	andlw	not (((1<<3)-1)<<0)
  2353  027F  39F8               	iorlw	(02h & ((1<<3)-1))<<0
  2354  0280  3802               	movwf	(149)^080h	;volatile
  2355  0281  0095               	line	287
  2356                           	
  2357                           l3928:	
  2358  0282                     	bcf	(149)^080h,5	;volatile
  2359  0282  1295               	line	288
  2360                           	
  2361                           l3930:	
  2362  0283                     	bcf	(149)^080h,3	;volatile
  2363  0283  1195               	line	289
  2364                           	
  2365                           l3932:	
  2366  0284                     	bcf	(11),5	;volatile
  2367  0284  128B               	line	293
  2368                           	
  2369                           l3934:	
  2370  0285                     	movlb 0	; select bank0
  2371  0285  0020               	clrf	(13)	;volatile
  2372  0286  018D               	line	294
  2373                           	
  2374                           l3936:	
  2375  0287                     	movlb 3	; select bank3
  2376  0287  0023               	clrf	(397)^0180h	;volatile
  2377  0288  018D               	line	295
  2378                           	
  2379                           l3938:	
  2380  0289                     	movlw	low(0Fh)
  2381  0289  300F               	movlb 1	; select bank1
  2382  028A  0021               	movwf	(141)^080h	;volatile
  2383  028B  008D               	line	296
  2384                           	
  2385                           l3940:	
  2386  028C                     	movlw	low(0Fh)
  2387  028C  300F               	movlb 4	; select bank4
  2388  028D  0024               	movwf	(525)^0200h	;volatile
  2389  028E  008D               	line	297
  2390                           	
  2391                           l3942:	
  2392  028F                     	movlb 1	; select bank1
  2393  028F  0021               	bcf	(149)^080h,7	;volatile
  2394  0290  1395               	line	300
  2395                           	
  2396                           l3944:	
  2397  0291                     	movlw	low(_wI2CTxBuffer)
  2398  0291  30A7               	movlb 0	; select bank0
  2399  0292  0020               	movwf	(memset@dest)
  2400  0293  00B4               	movlw	high(_wI2CTxBuffer)
  2401  0294  3000               	movwf	(memset@dest+1)
  2402  0295  00B5               	movlw	0
  2403  0296  3000               	movwf	(memset@c)
  2404  0297  00B6               	movwf	(memset@c+1)
  2405  0298  00B7               	movlw	014h
  2406  0299  3014               	movwf	(memset@n)
  2407  029A  00B8               	movlw	0
  2408  029B  3000               	movwf	((memset@n))+1
  2409  029C  00B9               	fcall	_memset
  2410  029D  3186  2621  3182   	line	301
  2411                           	
  2412                           l3946:	
  2413  02A0                     	movlb 0	; select bank0
  2414  02A0  0020               	clrf	(_wI2CTxBufferSize)
  2415  02A1  01D5               	line	302
  2416                           	
  2417                           l3948:	
  2418  02A2                     	clrf	(_wI2CTxSendPos)
  2419  02A2  01D3               	line	307
  2420                           	
  2421                           l3950:	
  2422  02A3                     	movlb 1	; select bank1
  2423  02A3  0021               	bsf	(142)^080h,3	;volatile
  2424  02A4  158E               	line	308
  2425                           	
  2426                           l3952:	
  2427  02A5                     	bsf	(142)^080h,4	;volatile
  2428  02A5  160E               	line	309
  2429                           	
  2430                           l3954:	
  2431  02A6                     	movlb 3	; select bank3
  2432  02A6  0023               	bcf	(398)^0180h,3	;volatile
  2433  02A7  118E               	line	310
  2434                           	
  2435                           l3956:	
  2436  02A8                     	bcf	(398)^0180h,4	;volatile
  2437  02A8  120E               	line	314
  2438                           	
  2439                           l3958:	
  2440  02A9                     	bcf	(398)^0180h,6	;volatile
  2441  02A9  130E               	line	315
  2442                           	
  2443                           l3960:	
  2444  02AA                     	bcf	(398)^0180h,7	;volatile
  2445  02AA  138E               	line	316
  2446                           	
  2447                           l3962:	
  2448  02AB                     	movlb 1	; select bank1
  2449  02AB  0021               	bcf	(142)^080h,6	;volatile
  2450  02AC  130E               	line	317
  2451                           	
  2452                           l3964:	
  2453  02AD                     	bsf	(142)^080h,7	;volatile
  2454  02AD  178E               	line	321
  2455                           	
  2456                           l3966:	
  2457  02AE                     	movlb 4	; select bank4
  2458  02AE  0024               	movf	(533)^0200h,w	;volatile
  2459  02AF  0815               	andlw	not (((1<<4)-1)<<0)
  2460  02B0  39F0               	iorlw	(08h & ((1<<4)-1))<<0
  2461  02B1  3808               	movwf	(533)^0200h	;volatile
  2462  02B2  0095               	line	322
  2463                           	
  2464                           l3968:	
  2465  02B3                     	movlw	low(01Fh)
  2466  02B3  301F               	movwf	(530)^0200h	;volatile
  2467  02B4  0092               	line	323
  2468                           	
  2469                           l3970:	
  2470  02B5                     	bsf	(533)^0200h,5	;volatile
  2471  02B5  1695               	line	324
  2472                           	
  2473                           l3972:	
  2474  02B6                     	bcf	(534)^0200h,7	;volatile
  2475  02B6  1396               	line	325
  2476                           	
  2477                           l3974:	
  2478  02B7                     	bsf	(534)^0200h,4	;volatile
  2479  02B7  1616               	line	326
  2480                           	
  2481                           l3976:	
  2482  02B8                     	bsf	(535)^0200h,6	;volatile
  2483  02B8  1717               	line	327
  2484                           	
  2485                           l3978:	
  2486  02B9                     	bsf	(535)^0200h,5	;volatile
  2487  02B9  1697               	line	328
  2488                           	
  2489                           l3980:	
  2490  02BA                     	bsf	(535)^0200h,3	;volatile
  2491  02BA  1597               	line	329
  2492                           	
  2493                           l3982:	
  2494  02BB                     	bcf	(535)^0200h,1	;volatile
  2495  02BB  1097               	line	330
  2496                           	
  2497                           l3984:	
  2498  02BC                     	bcf	(535)^0200h,0	;volatile
  2499  02BC  1017               	line	331
  2500                           	
  2501                           l3986:	
  2502  02BD                     	bcf	(532)^0200h,6	;volatile
  2503  02BD  1314               	line	333
  2504                           	
  2505                           l3988:	
  2506  02BE                     	bsf	(11),6	;volatile
  2507  02BE  170B               	line	334
  2508                           	
  2509                           l3990:	
  2510  02BF                     	movlb 1	; select bank1
  2511  02BF  0021               	bsf	(145)^080h,3	;volatile
  2512  02C0  1591               	line	335
  2513                           	
  2514                           l3992:	
  2515  02C1                     	bsf	(146)^080h,3	;volatile
  2516  02C1  1592               	line	337
  2517                           	
  2518                           l3994:	
  2519  02C2                     	bsf	(11),7	;volatile
  2520  02C2  178B               	line	340
  2521                           	
  2522                           l3996:	
  2523  02C3                     	fcall	_initLCD
  2524  02C3  318E  269B  3182   	line	341
  2525                           	
  2526                           l3998:	
  2527  02C6                     	fcall	_clearDisplay
  2528  02C6  318A  22C1  3182   	line	342
  2529                           	
  2530                           l4000:	
  2531  02C9                     	opt asmopt_push
  2532                           opt asmopt_off
  2533                           movlw  3
  2534  02C9  3003               	movlb 1	; select bank1
  2535  02CA  0021               movwf	((??_main+0)^080h+0+1),f
  2536  02CB  00C2               movlw	8
  2537  02CC  3008               movwf	((??_main+0)^080h+0),f
  2538  02CD  00C1               	movlw	119
  2539  02CE  3077               u3127:
  2540  02CF                     decfsz	wreg
  2541  02CF  0B89               	goto	u3127
  2542  02D0  2ACF               	decfsz	((??_main+0)^080h+0),f
  2543  02D1  0BC1               	goto	u3127
  2544  02D2  2ACF               	decfsz	((??_main+0)^080h+0+1),f
  2545  02D3  0BC2               	goto	u3127
  2546  02D4  2ACF               opt asmopt_pop
  2547                           
  2548                           	line	343
  2549                           	
  2550                           l4002:	
  2551  02D5                     	fcall	_powerOnLcd
  2552  02D5  318A  22F5  3182   	line	344
  2553                           	
  2554                           l4004:	
  2555  02D8                     	opt asmopt_push
  2556                           opt asmopt_off
  2557                           movlw  3
  2558  02D8  3003               	movlb 1	; select bank1
  2559  02D9  0021               movwf	((??_main+0)^080h+0+1),f
  2560  02DA  00C2               movlw	8
  2561  02DB  3008               movwf	((??_main+0)^080h+0),f
  2562  02DC  00C1               	movlw	119
  2563  02DD  3077               u3137:
  2564  02DE                     decfsz	wreg
  2565  02DE  0B89               	goto	u3137
  2566  02DF  2ADE               	decfsz	((??_main+0)^080h+0),f
  2567  02E0  0BC1               	goto	u3137
  2568  02E1  2ADE               	decfsz	((??_main+0)^080h+0+1),f
  2569  02E2  0BC2               	goto	u3137
  2570  02E3  2ADE               opt asmopt_pop
  2571                           
  2572                           	line	345
  2573                           	
  2574                           l4006:	
  2575  02E4                     	fcall	_setCursorOff
  2576  02E4  318B  2300  3182   	line	346
  2577                           	
  2578                           l4008:	
  2579  02E7                     	opt asmopt_push
  2580                           opt asmopt_off
  2581                           movlw  3
  2582  02E7  3003               	movlb 1	; select bank1
  2583  02E8  0021               movwf	((??_main+0)^080h+0+1),f
  2584  02E9  00C2               movlw	8
  2585  02EA  3008               movwf	((??_main+0)^080h+0),f
  2586  02EB  00C1               	movlw	119
  2587  02EC  3077               u3147:
  2588  02ED                     decfsz	wreg
  2589  02ED  0B89               	goto	u3147
  2590  02EE  2AED               	decfsz	((??_main+0)^080h+0),f
  2591  02EF  0BC1               	goto	u3147
  2592  02F0  2AED               	decfsz	((??_main+0)^080h+0+1),f
  2593  02F1  0BC2               	goto	u3147
  2594  02F2  2AED               opt asmopt_pop
  2595                           
  2596                           	line	347
  2597                           	
  2598                           l4010:	
  2599  02F3                     	fcall	_moveCursorToHome
  2600  02F3  318A  22D8  3182   	line	348
  2601                           	
  2602                           l4012:	
  2603  02F6                     	opt asmopt_push
  2604                           opt asmopt_off
  2605                           movlw  3
  2606  02F6  3003               	movlb 1	; select bank1
  2607  02F7  0021               movwf	((??_main+0)^080h+0+1),f
  2608  02F8  00C2               movlw	8
  2609  02F9  3008               movwf	((??_main+0)^080h+0),f
  2610  02FA  00C1               	movlw	119
  2611  02FB  3077               u3157:
  2612  02FC                     decfsz	wreg
  2613  02FC  0B89               	goto	u3157
  2614  02FD  2AFC               	decfsz	((??_main+0)^080h+0),f
  2615  02FE  0BC1               	goto	u3157
  2616  02FF  2AFC               	decfsz	((??_main+0)^080h+0+1),f
  2617  0300  0BC2               	goto	u3157
  2618  0301  2AFC               opt asmopt_pop
  2619                           
  2620                           	line	349
  2621                           	
  2622                           l4014:	
  2623  0302                     	fcall	_setNotBlinkingCursor
  2624  0302  318B  230B  3182   	line	350
  2625                           	
  2626                           l4016:	
  2627  0305                     	opt asmopt_push
  2628                           opt asmopt_off
  2629                           movlw  3
  2630  0305  3003               	movlb 1	; select bank1
  2631  0306  0021               movwf	((??_main+0)^080h+0+1),f
  2632  0307  00C2               movlw	8
  2633  0308  3008               movwf	((??_main+0)^080h+0),f
  2634  0309  00C1               	movlw	119
  2635  030A  3077               u3167:
  2636  030B                     decfsz	wreg
  2637  030B  0B89               	goto	u3167
  2638  030C  2B0B               	decfsz	((??_main+0)^080h+0),f
  2639  030D  0BC1               	goto	u3167
  2640  030E  2B0B               	decfsz	((??_main+0)^080h+0+1),f
  2641  030F  0BC2               	goto	u3167
  2642  0310  2B0B               opt asmopt_pop
  2643                           
  2644                           	line	376
  2645                           	movlb 6	; select bank6
  2646  0311  0026               	clrf	(main@wCounter)^0300h
  2647  0312  01C8               	clrf	(main@wCounter+1)^0300h
  2648  0313  01C9               	line	377
  2649                           	
  2650                           l4018:	
  2651  0314                     	movlb 1	; select bank1
  2652  0314  0021               	movf	(main@F2273+3)^080h,w
  2653  0315  0846               	movlb 6	; select bank6
  2654  0316  0026               	movwf	(main@wConv+3)^0300h
  2655  0317  00A5               	movlb 1	; select bank1
  2656  0318  0021               	movf	(main@F2273+2)^080h,w
  2657  0319  0845               	movlb 6	; select bank6
  2658  031A  0026               	movwf	(main@wConv+2)^0300h
  2659  031B  00A4               	movlb 1	; select bank1
  2660  031C  0021               	movf	(main@F2273+1)^080h,w
  2661  031D  0844               	movlb 6	; select bank6
  2662  031E  0026               	movwf	(main@wConv+1)^0300h
  2663  031F  00A3               	movlb 1	; select bank1
  2664  0320  0021               	movf	(main@F2273)^080h,w
  2665  0321  0843               	movlb 6	; select bank6
  2666  0322  0026               	movwf	(main@wConv)^0300h
  2667  0323  00A2               
  2668                           	line	378
  2669                           	
  2670                           l4020:	
  2671  0324                     	clrf	(main@wTemp)^0300h
  2672  0324  01A0               	clrf	(main@wTemp+1)^0300h
  2673  0325  01A1               	line	381
  2674                           	
  2675                           l4022:	
  2676  0326                     	fcall	_clearDisplay
  2677  0326  318A  22C1  3182   	line	382
  2678                           	
  2679                           l4024:	
  2680  0329                     	fcall	_moveCursorToHome
  2681  0329  318A  22D8  3182   	line	383
  2682                           	opt asmopt_push
  2683                           opt asmopt_off
  2684                           movlw	156
  2685  032C  309C               	movlb 1	; select bank1
  2686  032D  0021               movwf	((??_main+0)^080h+0),f
  2687  032E  00C1               	movlw	215
  2688  032F  30D7               u3177:
  2689  0330                     decfsz	wreg
  2690  0330  0B89               	goto	u3177
  2691  0331  2B30               	decfsz	((??_main+0)^080h+0),f
  2692  0332  0BC1               	goto	u3177
  2693  0333  2B30               opt asmopt_pop
  2694                           
  2695                           	line	384
  2696                           	
  2697                           l191:	
  2698  0334                     	line	387
  2699                           	movlb 1	; select bank1
  2700  0334  0021               	movf	(_wHumidity+1)^080h,w
  2701  0335  0823               	movlb 6	; select bank6
  2702  0336  0026               	xorwf	(main@wHumidityPrev+1)^0300h,w
  2703  0337  063E               	skipz
  2704  0338  1D03               	goto	u2625
  2705  0339  2B3E               	movlb 1	; select bank1
  2706  033A  0021               	movf	(_wHumidity)^080h,w
  2707  033B  0822               	movlb 6	; select bank6
  2708  033C  0026               	xorwf	(main@wHumidityPrev)^0300h,w
  2709  033D  063D               u2625:
  2710  033E                     
  2711                           	skipz
  2712  033E  1D03               	goto	u2621
  2713  033F  2B41               	goto	u2620
  2714  0340  2B42               u2621:
  2715  0341                     	goto	l4028
  2716  0341  2B51               u2620:
  2717  0342                     	
  2718                           l4026:	
  2719  0342                     	movlb 1	; select bank1
  2720  0342  0021               	movf	(_wTemperature+1)^080h,w
  2721  0343  0821               	movlb 6	; select bank6
  2722  0344  0026               	xorwf	(main@wTemperaturePrev+1)^0300h,w
  2723  0345  0640               	skipz
  2724  0346  1D03               	goto	u2635
  2725  0347  2B4C               	movlb 1	; select bank1
  2726  0348  0021               	movf	(_wTemperature)^080h,w
  2727  0349  0820               	movlb 6	; select bank6
  2728  034A  0026               	xorwf	(main@wTemperaturePrev)^0300h,w
  2729  034B  063F               u2635:
  2730  034C                     
  2731                           	skipnz
  2732  034C  1903               	goto	u2631
  2733  034D  2B4F               	goto	u2630
  2734  034E  2B50               u2631:
  2735  034F                     	goto	l4046
  2736  034F  2BC6               u2630:
  2737  0350                     	goto	l4028
  2738  0350  2B51               	
  2739                           l194:	
  2740  0351                     	line	389
  2741                           	
  2742                           l4028:	
  2743  0351                     	movlb 1	; select bank1
  2744  0351  0021               	movf	(_wHumidity+1)^080h,w
  2745  0352  0823               	movlb 6	; select bank6
  2746  0353  0026               	movwf	(main@wHumidityPrev+1)^0300h
  2747  0354  00BE               	movlb 1	; select bank1
  2748  0355  0021               	movf	(_wHumidity)^080h,w
  2749  0356  0822               	movlb 6	; select bank6
  2750  0357  0026               	movwf	(main@wHumidityPrev)^0300h
  2751  0358  00BD               	line	390
  2752                           	movlb 1	; select bank1
  2753  0359  0021               	movf	(_wTemperature+1)^080h,w
  2754  035A  0821               	movlb 6	; select bank6
  2755  035B  0026               	movwf	(main@wTemperaturePrev+1)^0300h
  2756  035C  00C0               	movlb 1	; select bank1
  2757  035D  0021               	movf	(_wTemperature)^080h,w
  2758  035E  0820               	movlb 6	; select bank6
  2759  035F  0026               	movwf	(main@wTemperaturePrev)^0300h
  2760  0360  00BF               	line	391
  2761                           	
  2762                           l4030:	
  2763  0361                     	movlb 0	; select bank0
  2764  0361  0020               	clrf	(setCursorPosition@iPosition)
  2765  0362  01B9               	movlw	low(02h)
  2766  0363  3002               	fcall	_setCursorPosition
  2767  0364  318E  263B  3182   	line	392
  2768                           	
  2769                           l4032:	
  2770  0367                     	movlb 6	; select bank6
  2771  0367  0026               	movf	(main@wHumidityPrev+1)^0300h,w
  2772  0368  083E               	movlb 0	; select bank0
  2773  0369  0020               	movwf	(printEM1812@wVariable+1)
  2774  036A  00BE               	movlb 6	; select bank6
  2775  036B  0026               	movf	(main@wHumidityPrev)^0300h,w
  2776  036C  083D               	movlb 0	; select bank0
  2777  036D  0020               	movwf	(printEM1812@wVariable)
  2778  036E  00BD               	movlw	(low(main@wReadout|((0x3)<<8)))&0ffh
  2779  036F  3026               	movlb 1	; select bank1
  2780  0370  0021               	movwf	(??_main+0)^080h+0
  2781  0371  00C1               	movf	(??_main+0)^080h+0,w
  2782  0372  0841               	movlb 0	; select bank0
  2783  0373  0020               	movwf	(printEM1812@oTextOut)
  2784  0374  00BF               	fcall	_printEM1812
  2785  0375  3186  26F2  3182   	line	393
  2786                           	
  2787                           l4034:	
  2788  0378                     	movlw	low(04Bh)
  2789  0378  304B               	movlb 1	; select bank1
  2790  0379  0021               	movwf	(??_main+0)^080h+0
  2791  037A  00C1               	movf	(??_main+0)^080h+0,w
  2792  037B  0841               	movlb 0	; select bank0
  2793  037C  0020               	movwf	(Add_Trace@iSizeOfoText)
  2794  037D  00C7               	movlw	low(((STR_1)|8000h))
  2795  037E  3074               	movwf	(Add_Trace@iText)
  2796  037F  00C8               	movlw	high(((STR_1)|8000h))
  2797  0380  3090               	movwf	((Add_Trace@iText))+1
  2798  0381  00C9               	movlw	(low(_wInterruptText|((0x2)<<8)))&0ffh
  2799  0382  3020               	fcall	_Add_Trace
  2800  0383  318D  259A  3182   	line	394
  2801                           	
  2802                           l4036:	
  2803  0386                     	movlw	low(04Bh)
  2804  0386  304B               	movlb 1	; select bank1
  2805  0387  0021               	movwf	(??_main+0)^080h+0
  2806  0388  00C1               	movf	(??_main+0)^080h+0,w
  2807  0389  0841               	movlb 0	; select bank0
  2808  038A  0020               	movwf	(Add_Trace@iSizeOfoText)
  2809  038B  00C7               	movlw	low(main@wReadout)
  2810  038C  3026               	movwf	(Add_Trace@iText)
  2811  038D  00C8               	movlw	high(main@wReadout)
  2812  038E  3003               	movwf	(Add_Trace@iText+1)
  2813  038F  00C9               	movlw	(low(_wInterruptText|((0x2)<<8)))&0ffh
  2814  0390  3020               	fcall	_Add_Trace
  2815  0391  318D  259A  3182   	line	395
  2816                           	
  2817                           l4038:	
  2818  0394                     	movlb 6	; select bank6
  2819  0394  0026               	movf	(main@wTemperaturePrev+1)^0300h,w
  2820  0395  0840               	movlb 0	; select bank0
  2821  0396  0020               	movwf	(printEM1812@wVariable+1)
  2822  0397  00BE               	movlb 6	; select bank6
  2823  0398  0026               	movf	(main@wTemperaturePrev)^0300h,w
  2824  0399  083F               	movlb 0	; select bank0
  2825  039A  0020               	movwf	(printEM1812@wVariable)
  2826  039B  00BD               	movlw	(low(main@wReadout|((0x3)<<8)))&0ffh
  2827  039C  3026               	movlb 1	; select bank1
  2828  039D  0021               	movwf	(??_main+0)^080h+0
  2829  039E  00C1               	movf	(??_main+0)^080h+0,w
  2830  039F  0841               	movlb 0	; select bank0
  2831  03A0  0020               	movwf	(printEM1812@oTextOut)
  2832  03A1  00BF               	fcall	_printEM1812
  2833  03A2  3186  26F2  3182   	line	396
  2834                           	
  2835                           l4040:	
  2836  03A5                     	movlw	low(04Bh)
  2837  03A5  304B               	movlb 1	; select bank1
  2838  03A6  0021               	movwf	(??_main+0)^080h+0
  2839  03A7  00C1               	movf	(??_main+0)^080h+0,w
  2840  03A8  0841               	movlb 0	; select bank0
  2841  03A9  0020               	movwf	(Add_Trace@iSizeOfoText)
  2842  03AA  00C7               	movlw	low(((STR_2)|8000h))
  2843  03AB  3080               	movwf	(Add_Trace@iText)
  2844  03AC  00C8               	movlw	high(((STR_2)|8000h))
  2845  03AD  3090               	movwf	((Add_Trace@iText))+1
  2846  03AE  00C9               	movlw	(low(_wInterruptText|((0x2)<<8)))&0ffh
  2847  03AF  3020               	fcall	_Add_Trace
  2848  03B0  318D  259A  3182   	line	397
  2849                           	
  2850                           l4042:	
  2851  03B3                     	movlw	low(04Bh)
  2852  03B3  304B               	movlb 1	; select bank1
  2853  03B4  0021               	movwf	(??_main+0)^080h+0
  2854  03B5  00C1               	movf	(??_main+0)^080h+0,w
  2855  03B6  0841               	movlb 0	; select bank0
  2856  03B7  0020               	movwf	(Add_Trace@iSizeOfoText)
  2857  03B8  00C7               	movlw	low(main@wReadout)
  2858  03B9  3026               	movwf	(Add_Trace@iText)
  2859  03BA  00C8               	movlw	high(main@wReadout)
  2860  03BB  3003               	movwf	(Add_Trace@iText+1)
  2861  03BC  00C9               	movlw	(low(_wInterruptText|((0x2)<<8)))&0ffh
  2862  03BD  3020               	fcall	_Add_Trace
  2863  03BE  318D  259A  3182   	line	398
  2864                           	
  2865                           l4044:	
  2866  03C1                     	movlw	(low(_wInterruptText|((0x2)<<8)))&0ffh
  2867  03C1  3020               	fcall	_PrintLog
  2868  03C2  318C  24C7  3182   	goto	l4046
  2869  03C5  2BC6               	line	399
  2870                           	
  2871                           l192:	
  2872  03C6                     	line	401
  2873                           	
  2874                           l4046:	
  2875  03C6                     	movlb 6	; select bank6
  2876  03C6  0026               	movf	((main@wUpdateMenu)^0300h),w
  2877  03C7  0841               	btfsc	status,2
  2878  03C8  1903               	goto	u2641
  2879  03C9  2BCB               	goto	u2640
  2880  03CA  2BCC               u2641:
  2881  03CB                     	goto	l4156
  2882  03CB  2D40               u2640:
  2883  03CC                     	line	403
  2884                           	
  2885                           l4048:	
  2886  03CC                     	clrf	(main@wUpdateMenu)^0300h
  2887  03CC  01C1               	line	404
  2888                           	goto	l4074
  2889  03CD  2C6A               	line	406
  2890                           	
  2891                           l197:	
  2892  03CE                     	line	407
  2893                           	
  2894                           l4050:	
  2895  03CE                     	movlb 0	; select bank0
  2896  03CE  0020               	clrf	(setCursorPosition@iPosition)
  2897  03CF  01B9               	movlw	low(0)
  2898  03D0  3000               	fcall	_setCursorPosition
  2899  03D1  318E  263B  3182   	line	408
  2900                           	movlw	low(((STR_3)|8000h))
  2901  03D4  3054               	movlb 0	; select bank0
  2902  03D5  0020               	movwf	(lcdWriteText@iText)
  2903  03D6  00C1               	movlw	high(((STR_3)|8000h))
  2904  03D7  3090               	movwf	((lcdWriteText@iText))+1
  2905  03D8  00C2               	fcall	_lcdWriteText
  2906  03D9  318C  2419  3182   	line	409
  2907                           	goto	l4156
  2908  03DC  2D40               	line	410
  2909                           	
  2910                           l199:	
  2911  03DD                     	line	411
  2912                           	
  2913                           l4052:	
  2914  03DD                     	movlb 0	; select bank0
  2915  03DD  0020               	clrf	(setCursorPosition@iPosition)
  2916  03DE  01B9               	movlw	low(0)
  2917  03DF  3000               	fcall	_setCursorPosition
  2918  03E0  318E  263B  3182   	line	412
  2919                           	movlw	low(((STR_4)|8000h))
  2920  03E3  3033               	movlb 0	; select bank0
  2921  03E4  0020               	movwf	(lcdWriteText@iText)
  2922  03E5  00C1               	movlw	high(((STR_4)|8000h))
  2923  03E6  3090               	movwf	((lcdWriteText@iText))+1
  2924  03E7  00C2               	fcall	_lcdWriteText
  2925  03E8  318C  2419  3182   	line	413
  2926                           	
  2927                           l4054:	
  2928  03EB                     	movlb 1	; select bank1
  2929  03EB  0021               	movf	(_wTempSet+1)^080h,w
  2930  03EC  0848               	movlb 0	; select bank0
  2931  03ED  0020               	movwf	(printEM1812@wVariable+1)
  2932  03EE  00BE               	movlb 1	; select bank1
  2933  03EF  0021               	movf	(_wTempSet)^080h,w
  2934  03F0  0847               	movlb 0	; select bank0
  2935  03F1  0020               	movwf	(printEM1812@wVariable)
  2936  03F2  00BD               	movlw	(low(main@wReadout|((0x3)<<8)))&0ffh
  2937  03F3  3026               	movlb 1	; select bank1
  2938  03F4  0021               	movwf	(??_main+0)^080h+0
  2939  03F5  00C1               	movf	(??_main+0)^080h+0,w
  2940  03F6  0841               	movlb 0	; select bank0
  2941  03F7  0020               	movwf	(printEM1812@oTextOut)
  2942  03F8  00BF               	fcall	_printEM1812
  2943  03F9  3186  26F2  3182   	line	414
  2944                           	
  2945                           l4056:	
  2946  03FC                     	movlw	low(main@wReadout)
  2947  03FC  3026               	movlb 0	; select bank0
  2948  03FD  0020               	movwf	(lcdWriteText@iText)
  2949  03FE  00C1               	movlw	high(main@wReadout)
  2950  03FF  3003               	movwf	(lcdWriteText@iText+1)
  2951  0400  00C2               	fcall	_lcdWriteText
  2952  0401  318C  2419  3182   	line	415
  2953                           	goto	l4156
  2954  0404  2D40               	line	416
  2955                           	
  2956                           l200:	
  2957  0405                     	line	417
  2958                           	
  2959                           l4058:	
  2960  0405                     	movlb 0	; select bank0
  2961  0405  0020               	clrf	(setCursorPosition@iPosition)
  2962  0406  01B9               	movlw	low(0)
  2963  0407  3000               	fcall	_setCursorPosition
  2964  0408  318E  263B  3182   	line	418
  2965                           	movlw	low(((STR_5)|8000h))
  2966  040B  3064               	movlb 0	; select bank0
  2967  040C  0020               	movwf	(lcdWriteText@iText)
  2968  040D  00C1               	movlw	high(((STR_5)|8000h))
  2969  040E  3090               	movwf	((lcdWriteText@iText))+1
  2970  040F  00C2               	fcall	_lcdWriteText
  2971  0410  318C  2419  3182   	line	419
  2972                           	goto	l4156
  2973  0413  2D40               	line	420
  2974                           	
  2975                           l201:	
  2976  0414                     	line	421
  2977                           	
  2978                           l4060:	
  2979  0414                     	movlb 0	; select bank0
  2980  0414  0020               	clrf	(setCursorPosition@iPosition)
  2981  0415  01B9               	movlw	low(0)
  2982  0416  3000               	fcall	_setCursorPosition
  2983  0417  318E  263B  3182   	line	422
  2984                           	movlw	low(((STR_6)|8000h))
  2985  041A  3011               	movlb 0	; select bank0
  2986  041B  0020               	movwf	(lcdWriteText@iText)
  2987  041C  00C1               	movlw	high(((STR_6)|8000h))
  2988  041D  3090               	movwf	((lcdWriteText@iText))+1
  2989  041E  00C2               	fcall	_lcdWriteText
  2990  041F  318C  2419  3182   	line	423
  2991                           	goto	l4156
  2992  0422  2D40               	line	424
  2993                           	
  2994                           l202:	
  2995  0423                     	line	425
  2996                           	
  2997                           l4062:	
  2998  0423                     	movlb 0	; select bank0
  2999  0423  0020               	clrf	(setCursorPosition@iPosition)
  3000  0424  01B9               	movlw	low(0)
  3001  0425  3000               	fcall	_setCursorPosition
  3002  0426  318E  263B  3182   	line	426
  3003                           	movlw	low(((STR_7)|8000h))
  3004  0429  3022               	movlb 0	; select bank0
  3005  042A  0020               	movwf	(lcdWriteText@iText)
  3006  042B  00C1               	movlw	high(((STR_7)|8000h))
  3007  042C  3090               	movwf	((lcdWriteText@iText))+1
  3008  042D  00C2               	fcall	_lcdWriteText
  3009  042E  318C  2419  3182   	line	427
  3010                           	
  3011                           l4064:	
  3012  0431                     	movlb 1	; select bank1
  3013  0431  0021               	movf	(_wTempSet+1)^080h,w
  3014  0432  0848               	movlb 0	; select bank0
  3015  0433  0020               	movwf	(printEM1812@wVariable+1)
  3016  0434  00BE               	movlb 1	; select bank1
  3017  0435  0021               	movf	(_wTempSet)^080h,w
  3018  0436  0847               	movlb 0	; select bank0
  3019  0437  0020               	movwf	(printEM1812@wVariable)
  3020  0438  00BD               	movlw	(low(main@wReadout|((0x3)<<8)))&0ffh
  3021  0439  3026               	movlb 1	; select bank1
  3022  043A  0021               	movwf	(??_main+0)^080h+0
  3023  043B  00C1               	movf	(??_main+0)^080h+0,w
  3024  043C  0841               	movlb 0	; select bank0
  3025  043D  0020               	movwf	(printEM1812@oTextOut)
  3026  043E  00BF               	fcall	_printEM1812
  3027  043F  3186  26F2  3182   	line	428
  3028                           	
  3029                           l4066:	
  3030  0442                     	movlw	low(main@wReadout)
  3031  0442  3026               	movlb 0	; select bank0
  3032  0443  0020               	movwf	(lcdWriteText@iText)
  3033  0444  00C1               	movlw	high(main@wReadout)
  3034  0445  3003               	movwf	(lcdWriteText@iText+1)
  3035  0446  00C2               	fcall	_lcdWriteText
  3036  0447  318C  2419  3182   	line	429
  3037                           	goto	l4156
  3038  044A  2D40               	line	430
  3039                           	
  3040                           l203:	
  3041  044B                     	line	431
  3042                           	
  3043                           l4068:	
  3044  044B                     	movlb 0	; select bank0
  3045  044B  0020               	clrf	(setCursorPosition@iPosition)
  3046  044C  01B9               	movlw	low(0)
  3047  044D  3000               	fcall	_setCursorPosition
  3048  044E  318E  263B  3182   	line	432
  3049                           	movlw	low(((STR_8)|8000h))
  3050  0451  3000               	movlb 0	; select bank0
  3051  0452  0020               	movwf	(lcdWriteText@iText)
  3052  0453  00C1               	movlw	high(((STR_8)|8000h))
  3053  0454  3090               	movwf	((lcdWriteText@iText))+1
  3054  0455  00C2               	fcall	_lcdWriteText
  3055  0456  318C  2419  3182   	line	434
  3056                           	goto	l4156
  3057  0459  2D40               	line	435
  3058                           	
  3059                           l204:	
  3060  045A                     	line	436
  3061                           	
  3062                           l4070:	
  3063  045A                     	movlb 0	; select bank0
  3064  045A  0020               	clrf	(setCursorPosition@iPosition)
  3065  045B  01B9               	movlw	low(0)
  3066  045C  3000               	fcall	_setCursorPosition
  3067  045D  318E  263B  3182   	line	437
  3068                           	movlw	low(((STR_9)|8000h))
  3069  0460  3044               	movlb 0	; select bank0
  3070  0461  0020               	movwf	(lcdWriteText@iText)
  3071  0462  00C1               	movlw	high(((STR_9)|8000h))
  3072  0463  3090               	movwf	((lcdWriteText@iText))+1
  3073  0464  00C2               	fcall	_lcdWriteText
  3074  0465  318C  2419  3182   	line	438
  3075                           	goto	l4156
  3076  0468  2D40               	line	439
  3077                           	
  3078                           l4072:	
  3079  0469                     	goto	l4156
  3080  0469  2D40               	
  3081                           l196:	
  3082  046A                     	
  3083                           l4074:	
  3084  046A                     	movlb 6	; select bank6
  3085  046A  0026               	movf	(main@wMenu)^0300h,w
  3086  046B  084D               	movlb 1	; select bank1
  3087  046C  0021               	movwf	(??_main+0)^080h+0
  3088  046D  00C1               	clrf	(??_main+0)^080h+0+1
  3089  046E  01C2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3090                           ; Switch size 1, requested type "space"
  3091                           ; Number of cases is 1, Range of values is 0 to 0
  3092                           ; switch strategies available:
  3093                           ; Name         Instructions Cycles
  3094                           ; simple_byte            4     3 (average)
  3095                           ; direct_byte            8     6 (fixed)
  3096                           ; jumptable            260     6 (fixed)
  3097                           ;	Chosen strategy is simple_byte
  3098                           
  3099                           	movf 1+(??_main+0)^080h+0,w
  3100  046F  0842               	opt asmopt_push
  3101                           	opt asmopt_off
  3102                           	xorlw	0^0	; case 0
  3103  0470  3A00               	skipnz
  3104  0471  1903               	goto	l4620
  3105  0472  2C74               	goto	l4070
  3106  0473  2C5A               	opt asmopt_pop
  3107                           	
  3108                           l4620:	
  3109  0474                     ; Switch size 1, requested type "space"
  3110                           ; Number of cases is 6, Range of values is 0 to 130
  3111                           ; switch strategies available:
  3112                           ; Name         Instructions Cycles
  3113                           ; simple_byte           19    10 (average)
  3114                           ; jumptable            260     6 (fixed)
  3115                           ;	Chosen strategy is simple_byte
  3116                           
  3117                           	movf 0+(??_main+0)^080h+0,w
  3118  0474  0841               	opt asmopt_push
  3119                           	opt asmopt_off
  3120                           	xorlw	0^0	; case 0
  3121  0475  3A00               	skipnz
  3122  0476  1903               	goto	l4050
  3123  0477  2BCE               	xorlw	1^0	; case 1
  3124  0478  3A01               	skipnz
  3125  0479  1903               	goto	l4052
  3126  047A  2BDD               	xorlw	2^1	; case 2
  3127  047B  3A03               	skipnz
  3128  047C  1903               	goto	l4058
  3129  047D  2C05               	xorlw	128^2	; case 128
  3130  047E  3A82               	skipnz
  3131  047F  1903               	goto	l4060
  3132  0480  2C14               	xorlw	129^128	; case 129
  3133  0481  3A01               	skipnz
  3134  0482  1903               	goto	l4062
  3135  0483  2C23               	xorlw	130^129	; case 130
  3136  0484  3A03               	skipnz
  3137  0485  1903               	goto	l4068
  3138  0486  2C4B               	goto	l4070
  3139  0487  2C5A               	opt asmopt_pop
  3140                           
  3141                           	
  3142                           l198:	
  3143  0488                     	goto	l4156
  3144  0488  2D40               	line	440
  3145                           	
  3146                           l195:	
  3147  0489                     	line	442
  3148                           	goto	l4156
  3149  0489  2D40               	line	444
  3150                           	
  3151                           l206:	
  3152  048A                     	line	445
  3153                           	
  3154                           l4076:	
  3155  048A                     	fcall	_SetToGetTemp
  3156  048A  318B  23F0  3182   	line	446
  3157                           	
  3158                           l4078:	
  3159  048D                     	fcall	_ToggleBitRB5
  3160  048D  318A  22E0  3182   	line	447
  3161                           	
  3162                           l4080:	
  3163  0490                     	movlw	low(01h)
  3164  0490  3001               	movlb 1	; select bank1
  3165  0491  0021               	movwf	(??_main+0)^080h+0
  3166  0492  00C1               	movf	(??_main+0)^080h+0,w
  3167  0493  0841               	addwf	(_wTempState)^080h,f
  3168  0494  07A4               	line	448
  3169                           	
  3170                           l4082:	
  3171  0495                     	bcf	(11),5	;volatile
  3172  0495  128B               	line	449
  3173                           	
  3174                           l4084:	
  3175  0496                     	movlb 0	; select bank0
  3176  0496  0020               	clrf	(21)	;volatile
  3177  0497  0195               	line	450
  3178                           	
  3179                           l4086:	
  3180  0498                     	movlb 1	; select bank1
  3181  0498  0021               	clrf	(_wTimer0Counter)^080h
  3182  0499  01A5               	line	451
  3183                           	
  3184                           l4088:	
  3185  049A                     	bsf	(11),5	;volatile
  3186  049A  168B               	line	452
  3187                           	goto	l4158
  3188  049B  2D53               	line	453
  3189                           	
  3190                           l208:	
  3191  049C                     	line	454
  3192                           	
  3193                           l4090:	
  3194  049C                     		movlw	2
  3195  049C  3002               	xorwf	((_wTimer0Counter)^080h),w
  3196  049D  0625               	btfss	status,2
  3197  049E  1D03               	goto	u2651
  3198  049F  2CA1               	goto	u2650
  3199  04A0  2CA2               u2651:
  3200  04A1                     	goto	l4158
  3201  04A1  2D53               u2650:
  3202  04A2                     	line	456
  3203                           	
  3204                           l4092:	
  3205  04A2                     	movlw	low(01h)
  3206  04A2  3001               	movwf	(??_main+0)^080h+0
  3207  04A3  00C1               	movf	(??_main+0)^080h+0,w
  3208  04A4  0841               	addwf	(_wTempState)^080h,f
  3209  04A5  07A4               	line	457
  3210                           	
  3211                           l4094:	
  3212  04A6                     	bcf	(11),5	;volatile
  3213  04A6  128B               	goto	l4158
  3214  04A7  2D53               	line	458
  3215                           	
  3216                           l209:	
  3217  04A8                     	line	459
  3218                           	goto	l4158
  3219  04A8  2D53               	line	460
  3220                           	
  3221                           l210:	
  3222  04A9                     	line	461
  3223                           	
  3224                           l4096:	
  3225  04A9                     		movlw	3
  3226  04A9  3003               	xorwf	((_wI2CCommandState)^080h),w
  3227  04AA  0626               	btfss	status,2
  3228  04AB  1D03               	goto	u2661
  3229  04AC  2CAE               	goto	u2660
  3230  04AD  2CAF               u2661:
  3231  04AE                     	goto	l4100
  3232  04AE  2CB1               u2660:
  3233  04AF                     	line	463
  3234                           	
  3235                           l4098:	
  3236  04AF                     	clrf	(_wTempState)^080h
  3237  04AF  01A4               	line	464
  3238                           	goto	l4158
  3239  04B0  2D53               	line	465
  3240                           	
  3241                           l211:	
  3242  04B1                     	
  3243                           l4100:	
  3244  04B1                     		movlw	2
  3245  04B1  3002               	xorwf	((_wI2CCommandState)^080h),w
  3246  04B2  0626               	btfss	status,2
  3247  04B3  1D03               	goto	u2671
  3248  04B4  2CB6               	goto	u2670
  3249  04B5  2CB7               u2671:
  3250  04B6                     	goto	l4158
  3251  04B6  2D53               u2670:
  3252  04B7                     	line	467
  3253                           	
  3254                           l4102:	
  3255  04B7                     	fcall	_ToggleBitRB5
  3256  04B7  318A  22E0  3182   	line	468
  3257                           	
  3258                           l4104:	
  3259  04BA                     	fcall	_GetTemp
  3260  04BA  318C  246E  3182   	line	469
  3261                           	
  3262                           l4106:	
  3263  04BD                     	fcall	_ToggleBitRB5
  3264  04BD  318A  22E0  3182   	line	470
  3265                           	
  3266                           l4108:	
  3267  04C0                     	movlw	low(01h)
  3268  04C0  3001               	movlb 1	; select bank1
  3269  04C1  0021               	movwf	(??_main+0)^080h+0
  3270  04C2  00C1               	movf	(??_main+0)^080h+0,w
  3271  04C3  0841               	addwf	(_wTempState)^080h,f
  3272  04C4  07A4               	line	471
  3273                           	
  3274                           l4110:	
  3275  04C5                     	bcf	(11),5	;volatile
  3276  04C5  128B               	line	472
  3277                           	
  3278                           l4112:	
  3279  04C6                     	movlb 0	; select bank0
  3280  04C6  0020               	clrf	(21)	;volatile
  3281  04C7  0195               	line	473
  3282                           	
  3283                           l4114:	
  3284  04C8                     	movlb 1	; select bank1
  3285  04C8  0021               	clrf	(_wTimer0Counter)^080h
  3286  04C9  01A5               	line	474
  3287                           	
  3288                           l4116:	
  3289  04CA                     	bsf	(11),5	;volatile
  3290  04CA  168B               	goto	l4158
  3291  04CB  2D53               	line	475
  3292                           	
  3293                           l213:	
  3294  04CC                     	goto	l4158
  3295  04CC  2D53               	
  3296                           l212:	
  3297  04CD                     	line	476
  3298                           	goto	l4158
  3299  04CD  2D53               	line	477
  3300                           	
  3301                           l214:	
  3302  04CE                     	line	478
  3303                           	
  3304                           l4118:	
  3305  04CE                     		movlw	2
  3306  04CE  3002               	xorwf	((_wTimer0Counter)^080h),w
  3307  04CF  0625               	btfss	status,2
  3308  04D0  1D03               	goto	u2681
  3309  04D1  2CD3               	goto	u2680
  3310  04D2  2CD4               u2681:
  3311  04D3                     	goto	l4158
  3312  04D3  2D53               u2680:
  3313  04D4                     	line	480
  3314                           	
  3315                           l4120:	
  3316  04D4                     	movlw	low(01h)
  3317  04D4  3001               	movwf	(??_main+0)^080h+0
  3318  04D5  00C1               	movf	(??_main+0)^080h+0,w
  3319  04D6  0841               	addwf	(_wTempState)^080h,f
  3320  04D7  07A4               	line	481
  3321                           	
  3322                           l4122:	
  3323  04D8                     	bcf	(11),5	;volatile
  3324  04D8  128B               	goto	l4158
  3325  04D9  2D53               	line	482
  3326                           	
  3327                           l215:	
  3328  04DA                     	line	483
  3329                           	goto	l4158
  3330  04DA  2D53               	line	484
  3331                           	
  3332                           l216:	
  3333  04DB                     	line	485
  3334                           	
  3335                           l4124:	
  3336  04DB                     		movlw	3
  3337  04DB  3003               	xorwf	((_wI2CCommandState)^080h),w
  3338  04DC  0626               	btfss	status,2
  3339  04DD  1D03               	goto	u2691
  3340  04DE  2CE0               	goto	u2690
  3341  04DF  2CE1               u2691:
  3342  04E0                     	goto	l4128
  3343  04E0  2CE3               u2690:
  3344  04E1                     	line	487
  3345                           	
  3346                           l4126:	
  3347  04E1                     	clrf	(_wTempState)^080h
  3348  04E1  01A4               	line	488
  3349                           	goto	l4158
  3350  04E2  2D53               	line	489
  3351                           	
  3352                           l217:	
  3353  04E3                     	
  3354                           l4128:	
  3355  04E3                     		movlw	2
  3356  04E3  3002               	xorwf	((_wI2CCommandState)^080h),w
  3357  04E4  0626               	btfss	status,2
  3358  04E5  1D03               	goto	u2701
  3359  04E6  2CE8               	goto	u2700
  3360  04E7  2CE9               u2701:
  3361  04E8                     	goto	l4158
  3362  04E8  2D53               u2700:
  3363  04E9                     	line	491
  3364                           	
  3365                           l4130:	
  3366  04E9                     	movlw	low(01h)
  3367  04E9  3001               	movwf	(??_main+0)^080h+0
  3368  04EA  00C1               	movf	(??_main+0)^080h+0,w
  3369  04EB  0841               	addwf	(_wTempState)^080h,f
  3370  04EC  07A4               	line	492
  3371                           	
  3372                           l4132:	
  3373  04ED                     	movlw	low(041h)
  3374  04ED  3041               	movwf	(??_main+0)^080h+0
  3375  04EE  00C1               	movf	(??_main+0)^080h+0,w
  3376  04EF  0841               	movlb 3	; select bank3
  3377  04F0  0023               	movwf	(_gUartTXBuffer)^0180h
  3378  04F1  00A0               	line	493
  3379                           	
  3380                           l4134:	
  3381  04F2                     	movlw	low(054h)
  3382  04F2  3054               	movlb 1	; select bank1
  3383  04F3  0021               	movwf	(??_main+0)^080h+0
  3384  04F4  00C1               	movf	(??_main+0)^080h+0,w
  3385  04F5  0841               	movlb 3	; select bank3
  3386  04F6  0023               	movwf	0+(_gUartTXBuffer)^0180h+01h
  3387  04F7  00A1               	line	494
  3388                           	
  3389                           l4136:	
  3390  04F8                     	movlw	low(0Dh)
  3391  04F8  300D               	movlb 1	; select bank1
  3392  04F9  0021               	movwf	(??_main+0)^080h+0
  3393  04FA  00C1               	movf	(??_main+0)^080h+0,w
  3394  04FB  0841               	movlb 3	; select bank3
  3395  04FC  0023               	movwf	0+(_gUartTXBuffer)^0180h+02h
  3396  04FD  00A2               	line	495
  3397                           	
  3398                           l4138:	
  3399  04FE                     	movlw	low(0Ah)
  3400  04FE  300A               	movlb 1	; select bank1
  3401  04FF  0021               	movwf	(??_main+0)^080h+0
  3402  0500  00C1               	movf	(??_main+0)^080h+0,w
  3403  0501  0841               	movlb 3	; select bank3
  3404  0502  0023               	movwf	0+(_gUartTXBuffer)^0180h+03h
  3405  0503  00A3               	line	496
  3406                           	
  3407                           l4140:	
  3408  0504                     	clrf	0+(_gUartTXBuffer)^0180h+04h
  3409  0504  01A4               	line	497
  3410                           	
  3411                           l4142:	
  3412  0505                     	movlw	low(04h)
  3413  0505  3004               	movlb 1	; select bank1
  3414  0506  0021               	movwf	(??_main+0)^080h+0
  3415  0507  00C1               	movf	(??_main+0)^080h+0,w
  3416  0508  0841               	movlb 0	; select bank0
  3417  0509  0020               	movwf	(Send_UART_Data@iData_Length)
  3418  050A  00BE               	movlw	(low(_gUartTXBuffer|((0x1)<<8)))&0ffh
  3419  050B  30A0               	fcall	_Send_UART_Data
  3420  050C  318C  2443  3182   	goto	l4158
  3421  050F  2D53               	line	498
  3422                           	
  3423                           l219:	
  3424  0510                     	goto	l4158
  3425  0510  2D53               	
  3426                           l218:	
  3427  0511                     	line	499
  3428                           	goto	l4158
  3429  0511  2D53               	line	500
  3430                           	
  3431                           l220:	
  3432  0512                     	line	501
  3433                           	
  3434                           l4144:	
  3435  0512                     	movlb 6	; select bank6
  3436  0512  0026               	movf	(main@wCounter)^0300h,w
  3437  0513  0848               	addlw	02h
  3438  0514  3E02               	movwf	(main@wCounter)^0300h
  3439  0515  00C8               	movlw	0
  3440  0516  3000               	addwfc	(main@wCounter+1)^0300h,w
  3441  0517  3D49               	movwf	1+(main@wCounter)^0300h
  3442  0518  00C9               	line	502
  3443                           		movlw	4
  3444  0519  3004               	xorwf	((main@wCounter)^0300h),w
  3445  051A  0648               iorwf	((main@wCounter+1)^0300h),w
  3446  051B  0449               	btfss	status,2
  3447  051C  1D03               	goto	u2711
  3448  051D  2D1F               	goto	u2710
  3449  051E  2D20               u2711:
  3450  051F                     	goto	l4148
  3451  051F  2D23               u2710:
  3452  0520                     	line	504
  3453                           	
  3454                           l4146:	
  3455  0520                     	clrf	(main@wCounter)^0300h
  3456  0520  01C8               	clrf	(main@wCounter+1)^0300h
  3457  0521  01C9               	goto	l4148
  3458  0522  2D23               	line	505
  3459                           	
  3460                           l221:	
  3461  0523                     	line	506
  3462                           	
  3463                           l4148:	
  3464  0523                     	movlw	low(013h)
  3465  0523  3013               	movlb 1	; select bank1
  3466  0524  0021               	movwf	(??_main+0)^080h+0
  3467  0525  00C1               	movf	(??_main+0)^080h+0,w
  3468  0526  0841               	movlb 0	; select bank0
  3469  0527  0020               	movwf	(setCursorPosition@iPosition)
  3470  0528  00B9               	movlw	low(03h)
  3471  0529  3003               	fcall	_setCursorPosition
  3472  052A  318E  263B  3182   	line	507
  3473                           	
  3474                           l4150:	
  3475  052D                     	movlb 6	; select bank6
  3476  052D  0026               	movf	(main@wCounter)^0300h,w
  3477  052E  0848               	addlw	low(main@wConv|((0x3)<<8))&0ffh
  3478  052F  3E22               	movlb 0	; select bank0
  3479  0530  0020               	movwf	(lcdWriteText@iText)
  3480  0531  00C1               	movlw	0x3
  3481  0532  3003               
  3482                           	movwf	(lcdWriteText@iText+1)
  3483  0533  00C2               	fcall	_lcdWriteText
  3484  0534  318C  2419  3182   	line	508
  3485                           	
  3486                           l4152:	
  3487  0537                     	movlw	low(01h)
  3488  0537  3001               	movlb 1	; select bank1
  3489  0538  0021               	movwf	(??_main+0)^080h+0
  3490  0539  00C1               	movf	(??_main+0)^080h+0,w
  3491  053A  0841               	addwf	(_wTempState)^080h,f
  3492  053B  07A4               	line	509
  3493                           	goto	l4158
  3494  053C  2D53               	line	510
  3495                           	
  3496                           l222:	
  3497  053D                     	line	511
  3498                           	goto	l4158
  3499  053D  2D53               	line	512
  3500                           	
  3501                           l223:	
  3502  053E                     	line	513
  3503                           	goto	l4158
  3504  053E  2D53               	line	514
  3505                           	
  3506                           l4154:	
  3507  053F                     	goto	l4158
  3508  053F  2D53               	
  3509                           l205:	
  3510  0540                     	
  3511                           l4156:	
  3512  0540                     	movlb 1	; select bank1
  3513  0540  0021               	movf	(_wTempState)^080h,w
  3514  0541  0824               	movwf	(??_main+0)^080h+0
  3515  0542  00C1               	clrf	(??_main+0)^080h+0+1
  3516  0543  01C2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3517                           ; Switch size 1, requested type "space"
  3518                           ; Number of cases is 1, Range of values is 0 to 0
  3519                           ; switch strategies available:
  3520                           ; Name         Instructions Cycles
  3521                           ; simple_byte            4     3 (average)
  3522                           ; direct_byte            8     6 (fixed)
  3523                           ; jumptable            260     6 (fixed)
  3524                           ;	Chosen strategy is simple_byte
  3525                           
  3526                           	movf 1+(??_main+0)^080h+0,w
  3527  0544  0842               	opt asmopt_push
  3528                           	opt asmopt_off
  3529                           	xorlw	0^0	; case 0
  3530  0545  3A00               	skipnz
  3531  0546  1903               	goto	l4622
  3532  0547  2D49               	goto	l4158
  3533  0548  2D53               	opt asmopt_pop
  3534                           	
  3535                           l4622:	
  3536  0549                     ; Switch size 1, requested type "space"
  3537                           ; Number of cases is 7, Range of values is 0 to 6
  3538                           ; switch strategies available:
  3539                           ; Name         Instructions Cycles
  3540                           ; direct_byte           20     6 (fixed)
  3541                           ; simple_byte           22    12 (average)
  3542                           ; jumptable            260     6 (fixed)
  3543                           ;	Chosen strategy is direct_byte
  3544                           
  3545                           	movf 0+(??_main+0)^080h+0,w
  3546  0549  0841               	movwf fsr0l
  3547  054A  0084               	movlw	7
  3548  054B  3007               	subwf	fsr0l,w
  3549  054C  0204               skipnc
  3550  054D  1803               goto l4158
  3551  054E  2D53               movlp high(S4624)
  3552  054F  3188               	lslf fsr0l,w
  3553  0550  3504               	addlw low(S4624)
  3554  0551  3E00               	movwf pc
  3555  0552  0082               psect	swtext1,local,class=CONST,delta=2
  3556                           global __pswtext1
  3557                           __pswtext1:
  3558  0800                     S4624:
  3559  0800                     	ljmp	l4076
  3560  0800  3184  2C8A         	ljmp	l4090
  3561  0802  3184  2C9C         	ljmp	l4096
  3562  0804  3184  2CA9         	ljmp	l4118
  3563  0806  3184  2CCE         	ljmp	l4124
  3564  0808  3184  2CDB         	ljmp	l4144
  3565  080A  3185  2D12         	ljmp	l4158
  3566  080C  3185  2D53         psect	maintext
  3567                           
  3568                           	
  3569                           l207:	
  3570  0553                     	line	516
  3571                           	
  3572                           l4158:	
  3573  0553                     	movlw	01h
  3574  0553  3001               	movlb 6	; select bank6
  3575  0554  0026               	addwf	(main@wIterationCounter)^0300h,f
  3576  0555  07BA               	movlw	0
  3577  0556  3000               	addwfc	(main@wIterationCounter+1)^0300h,f
  3578  0557  3DBB               	line	519
  3579                           	
  3580                           l4160:	
  3581  0558                     	movlw	(low(main@wDebounceEnter|((0x3)<<8)))&0ffh
  3582  0558  3042               	movlb 1	; select bank1
  3583  0559  0021               	movwf	(??_main+0)^080h+0
  3584  055A  00C1               	movf	(??_main+0)^080h+0,w
  3585  055B  0841               	movlb 0	; select bank0
  3586  055C  0020               	movwf	(Debounce@ioTimer)
  3587  055D  00B4               	movlw	(low(main@wEnterBottonPressed|((0x3)<<8)))&0ffh
  3588  055E  304C               	movlb 1	; select bank1
  3589  055F  0021               	movwf	(??_main+1)^080h+0
  3590  0560  00C2               	movf	(??_main+1)^080h+0,w
  3591  0561  0842               	movlb 0	; select bank0
  3592  0562  0020               	movwf	(Debounce@swPressed)
  3593  0563  00B5               	movf	(13),w	;volatile
  3594  0564  080D               	andlw	(1<<1)-1
  3595  0565  3901               	fcall	_Debounce
  3596  0566  3187  27A8  3182   	line	520
  3597                           	
  3598                           l4162:	
  3599  0569                     	movlw	(low(main@wDebounceUp|((0x3)<<8)))&0ffh
  3600  0569  3044               	movlb 1	; select bank1
  3601  056A  0021               	movwf	(??_main+0)^080h+0
  3602  056B  00C1               	movf	(??_main+0)^080h+0,w
  3603  056C  0841               	movlb 0	; select bank0
  3604  056D  0020               	movwf	(Debounce@ioTimer)
  3605  056E  00B4               	movlw	(low(main@wUpBottonPressed|((0x3)<<8)))&0ffh
  3606  056F  304A               	movlb 1	; select bank1
  3607  0570  0021               	movwf	(??_main+1)^080h+0
  3608  0571  00C2               	movf	(??_main+1)^080h+0,w
  3609  0572  0842               	movlb 0	; select bank0
  3610  0573  0020               	movwf	(Debounce@swPressed)
  3611  0574  00B5               	rrf	(13),w	;volatile
  3612  0575  0C0D               	andlw	(1<<1)-1
  3613  0576  3901               	fcall	_Debounce
  3614  0577  3187  27A8  3182   	line	521
  3615                           	
  3616                           l4164:	
  3617  057A                     	movlw	(low(main@wDebounceDown|((0x3)<<8)))&0ffh
  3618  057A  3046               	movlb 1	; select bank1
  3619  057B  0021               	movwf	(??_main+0)^080h+0
  3620  057C  00C1               	movf	(??_main+0)^080h+0,w
  3621  057D  0841               	movlb 0	; select bank0
  3622  057E  0020               	movwf	(Debounce@ioTimer)
  3623  057F  00B4               	movlw	(low(main@wDownBottonPressed|((0x3)<<8)))&0ffh
  3624  0580  304B               	movlb 1	; select bank1
  3625  0581  0021               	movwf	(??_main+1)^080h+0
  3626  0582  00C2               	movf	(??_main+1)^080h+0,w
  3627  0583  0842               	movlb 0	; select bank0
  3628  0584  0020               	movwf	(Debounce@swPressed)
  3629  0585  00B5               	rrf	(13),w	;volatile
  3630  0586  0C0D               	rrf	wreg,f
  3631  0587  0C89               	andlw	(1<<1)-1
  3632  0588  3901               	fcall	_Debounce
  3633  0589  3187  27A8  3182   	line	525
  3634                           	
  3635                           l4166:	
  3636  058C                     	movlb 6	; select bank6
  3637  058C  0026               		decf	((main@wUpBottonPressed)^0300h),w
  3638  058D  034A               	btfss	status,2
  3639  058E  1D03               	goto	u2721
  3640  058F  2D91               	goto	u2720
  3641  0590  2D92               u2721:
  3642  0591                     	goto	l4180
  3643  0591  2DBC               u2720:
  3644  0592                     	line	527
  3645                           	
  3646                           l4168:	
  3647  0592                     	clrf	(main@wUpdateMenu)^0300h
  3648  0592  01C1               	incf	(main@wUpdateMenu)^0300h,f
  3649  0593  0AC1               	line	528
  3650                           	
  3651                           l4170:	
  3652  0594                     	clrf	(main@wUpBottonPressed)^0300h
  3653  0594  01CA               	line	529
  3654                           	goto	l4178
  3655  0595  2DA7               	line	531
  3656                           	
  3657                           l226:	
  3658  0596                     	line	533
  3659                           	goto	l4180
  3660  0596  2DBC               	line	534
  3661                           	
  3662                           l228:	
  3663  0597                     	line	535
  3664                           	
  3665                           l4172:	
  3666  0597                     	movlb 1	; select bank1
  3667  0597  0021               	movf	(_wTempSet)^080h,w
  3668  0598  0847               	addlw	01h
  3669  0599  3E01               	movwf	(_wTempSet)^080h
  3670  059A  00C7               	movlw	0
  3671  059B  3000               	addwfc	(_wTempSet+1)^080h,w
  3672  059C  3D48               	movwf	1+(_wTempSet)^080h
  3673  059D  00C8               	line	536
  3674                           	goto	l4180
  3675  059E  2DBC               	line	537
  3676                           	
  3677                           l229:	
  3678  059F                     	line	538
  3679                           	goto	l4180
  3680  059F  2DBC               	line	539
  3681                           	
  3682                           l230:	
  3683  05A0                     	line	540
  3684                           	
  3685                           l4174:	
  3686  05A0                     	movlw	low(01h)
  3687  05A0  3001               	movwf	(??_main+0)^080h+0
  3688  05A1  00C1               	movf	(??_main+0)^080h+0,w
  3689  05A2  0841               	movlb 6	; select bank6
  3690  05A3  0026               	addwf	(main@wMenu)^0300h,f
  3691  05A4  07CD               	line	541
  3692                           	goto	l4180
  3693  05A5  2DBC               	line	542
  3694                           	
  3695                           l4176:	
  3696  05A6                     	goto	l4180
  3697  05A6  2DBC               	
  3698                           l225:	
  3699  05A7                     	
  3700                           l4178:	
  3701  05A7                     	movf	(main@wMenu)^0300h,w
  3702  05A7  084D               	movlb 1	; select bank1
  3703  05A8  0021               	movwf	(??_main+0)^080h+0
  3704  05A9  00C1               	clrf	(??_main+0)^080h+0+1
  3705  05AA  01C2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3706                           ; Switch size 1, requested type "space"
  3707                           ; Number of cases is 1, Range of values is 0 to 0
  3708                           ; switch strategies available:
  3709                           ; Name         Instructions Cycles
  3710                           ; simple_byte            4     3 (average)
  3711                           ; direct_byte            8     6 (fixed)
  3712                           ; jumptable            260     6 (fixed)
  3713                           ;	Chosen strategy is simple_byte
  3714                           
  3715                           	movf 1+(??_main+0)^080h+0,w
  3716  05AB  0842               	opt asmopt_push
  3717                           	opt asmopt_off
  3718                           	xorlw	0^0	; case 0
  3719  05AC  3A00               	skipnz
  3720  05AD  1903               	goto	l4626
  3721  05AE  2DB0               	goto	l4174
  3722  05AF  2DA0               	opt asmopt_pop
  3723                           	
  3724                           l4626:	
  3725  05B0                     ; Switch size 1, requested type "space"
  3726                           ; Number of cases is 3, Range of values is 128 to 130
  3727                           ; switch strategies available:
  3728                           ; Name         Instructions Cycles
  3729                           ; simple_byte           10     6 (average)
  3730                           ; direct_byte           15     9 (fixed)
  3731                           ; jumptable            263     9 (fixed)
  3732                           ;	Chosen strategy is simple_byte
  3733                           
  3734                           	movf 0+(??_main+0)^080h+0,w
  3735  05B0  0841               	opt asmopt_push
  3736                           	opt asmopt_off
  3737                           	xorlw	128^0	; case 128
  3738  05B1  3A80               	skipnz
  3739  05B2  1903               	goto	l4180
  3740  05B3  2DBC               	xorlw	129^128	; case 129
  3741  05B4  3A01               	skipnz
  3742  05B5  1903               	goto	l4172
  3743  05B6  2D97               	xorlw	130^129	; case 130
  3744  05B7  3A03               	skipnz
  3745  05B8  1903               	goto	l4180
  3746  05B9  2DBC               	goto	l4174
  3747  05BA  2DA0               	opt asmopt_pop
  3748                           
  3749                           	
  3750                           l227:	
  3751  05BB                     	goto	l4180
  3752  05BB  2DBC               	line	544
  3753                           	
  3754                           l224:	
  3755  05BC                     	line	545
  3756                           	
  3757                           l4180:	
  3758  05BC                     	movlb 6	; select bank6
  3759  05BC  0026               		decf	((main@wDownBottonPressed)^0300h),w
  3760  05BD  034B               	btfss	status,2
  3761  05BE  1D03               	goto	u2731
  3762  05BF  2DC1               	goto	u2730
  3763  05C0  2DC2               u2731:
  3764  05C1                     	goto	l4194
  3765  05C1  2DEA               u2730:
  3766  05C2                     	line	547
  3767                           	
  3768                           l4182:	
  3769  05C2                     	clrf	(main@wUpdateMenu)^0300h
  3770  05C2  01C1               	incf	(main@wUpdateMenu)^0300h,f
  3771  05C3  0AC1               	line	548
  3772                           	
  3773                           l4184:	
  3774  05C4                     	clrf	(main@wDownBottonPressed)^0300h
  3775  05C4  01CB               	line	549
  3776                           	goto	l4192
  3777  05C5  2DD5               	line	551
  3778                           	
  3779                           l233:	
  3780  05C6                     	line	553
  3781                           	goto	l4194
  3782  05C6  2DEA               	line	554
  3783                           	
  3784                           l235:	
  3785  05C7                     	line	555
  3786                           	
  3787                           l4186:	
  3788  05C7                     	movlb 1	; select bank1
  3789  05C7  0021               	movf	(_wTempSet)^080h,w
  3790  05C8  0847               	addlw	0FFh
  3791  05C9  3EFF               	movwf	(_wTempSet)^080h
  3792  05CA  00C7               	movlw	0FFh
  3793  05CB  30FF               	addwfc	(_wTempSet+1)^080h,w
  3794  05CC  3D48               	movwf	1+(_wTempSet)^080h
  3795  05CD  00C8               	line	556
  3796                           	goto	l4194
  3797  05CE  2DEA               	line	557
  3798                           	
  3799                           l236:	
  3800  05CF                     	line	558
  3801                           	goto	l4194
  3802  05CF  2DEA               	line	559
  3803                           	
  3804                           l237:	
  3805  05D0                     	line	560
  3806                           	
  3807                           l4188:	
  3808  05D0                     	movlw	01h
  3809  05D0  3001               	movlb 6	; select bank6
  3810  05D1  0026               	subwf	(main@wMenu)^0300h,f
  3811  05D2  02CD               	line	561
  3812                           	goto	l4194
  3813  05D3  2DEA               	line	562
  3814                           	
  3815                           l4190:	
  3816  05D4                     	goto	l4194
  3817  05D4  2DEA               	
  3818                           l232:	
  3819  05D5                     	
  3820                           l4192:	
  3821  05D5                     	movf	(main@wMenu)^0300h,w
  3822  05D5  084D               	movlb 1	; select bank1
  3823  05D6  0021               	movwf	(??_main+0)^080h+0
  3824  05D7  00C1               	clrf	(??_main+0)^080h+0+1
  3825  05D8  01C2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3826                           ; Switch size 1, requested type "space"
  3827                           ; Number of cases is 1, Range of values is 0 to 0
  3828                           ; switch strategies available:
  3829                           ; Name         Instructions Cycles
  3830                           ; simple_byte            4     3 (average)
  3831                           ; direct_byte            8     6 (fixed)
  3832                           ; jumptable            260     6 (fixed)
  3833                           ;	Chosen strategy is simple_byte
  3834                           
  3835                           	movf 1+(??_main+0)^080h+0,w
  3836  05D9  0842               	opt asmopt_push
  3837                           	opt asmopt_off
  3838                           	xorlw	0^0	; case 0
  3839  05DA  3A00               	skipnz
  3840  05DB  1903               	goto	l4628
  3841  05DC  2DDE               	goto	l4188
  3842  05DD  2DD0               	opt asmopt_pop
  3843                           	
  3844                           l4628:	
  3845  05DE                     ; Switch size 1, requested type "space"
  3846                           ; Number of cases is 3, Range of values is 128 to 130
  3847                           ; switch strategies available:
  3848                           ; Name         Instructions Cycles
  3849                           ; simple_byte           10     6 (average)
  3850                           ; direct_byte           15     9 (fixed)
  3851                           ; jumptable            263     9 (fixed)
  3852                           ;	Chosen strategy is simple_byte
  3853                           
  3854                           	movf 0+(??_main+0)^080h+0,w
  3855  05DE  0841               	opt asmopt_push
  3856                           	opt asmopt_off
  3857                           	xorlw	128^0	; case 128
  3858  05DF  3A80               	skipnz
  3859  05E0  1903               	goto	l4194
  3860  05E1  2DEA               	xorlw	129^128	; case 129
  3861  05E2  3A01               	skipnz
  3862  05E3  1903               	goto	l4186
  3863  05E4  2DC7               	xorlw	130^129	; case 130
  3864  05E5  3A03               	skipnz
  3865  05E6  1903               	goto	l4194
  3866  05E7  2DEA               	goto	l4188
  3867  05E8  2DD0               	opt asmopt_pop
  3868                           
  3869                           	
  3870                           l234:	
  3871  05E9                     	goto	l4194
  3872  05E9  2DEA               	line	563
  3873                           	
  3874                           l231:	
  3875  05EA                     	line	564
  3876                           	
  3877                           l4194:	
  3878  05EA                     	movlb 6	; select bank6
  3879  05EA  0026               		decf	((main@wEnterBottonPressed)^0300h),w
  3880  05EB  034C               	btfss	status,2
  3881  05EC  1D03               	goto	u2741
  3882  05ED  2DEF               	goto	u2740
  3883  05EE  2DF0               u2741:
  3884  05EF                     	goto	l4208
  3885  05EF  2E05               u2740:
  3886  05F0                     	line	566
  3887                           	
  3888                           l4196:	
  3889  05F0                     	clrf	(main@wUpdateMenu)^0300h
  3890  05F0  01C1               	incf	(main@wUpdateMenu)^0300h,f
  3891  05F1  0AC1               	line	567
  3892                           	
  3893                           l4198:	
  3894  05F2                     	clrf	(main@wEnterBottonPressed)^0300h
  3895  05F2  01CC               	line	568
  3896                           	
  3897                           l4200:	
  3898  05F3                     	movf	((main@wEditingMode)^0300h),w
  3899  05F3  083C               	btfss	status,2
  3900  05F4  1D03               	goto	u2751
  3901  05F5  2DF7               	goto	u2750
  3902  05F6  2DF8               u2751:
  3903  05F7                     	goto	l4206
  3904  05F7  2E02               u2750:
  3905  05F8                     	line	570
  3906                           	
  3907                           l4202:	
  3908  05F8                     	clrf	(main@wEditingMode)^0300h
  3909  05F8  01BC               	incf	(main@wEditingMode)^0300h,f
  3910  05F9  0ABC               	line	571
  3911                           	
  3912                           l4204:	
  3913  05FA                     	movf	(main@wMenu)^0300h,w
  3914  05FA  084D               	addlw	080h
  3915  05FB  3E80               	movlb 1	; select bank1
  3916  05FC  0021               	movwf	(??_main+0)^080h+0
  3917  05FD  00C1               	movf	(??_main+0)^080h+0,w
  3918  05FE  0841               	movlb 6	; select bank6
  3919  05FF  0026               	movwf	(main@wMenu)^0300h
  3920  0600  00CD               	line	572
  3921                           	goto	l4208
  3922  0601  2E05               	line	573
  3923                           	
  3924                           l239:	
  3925  0602                     	line	575
  3926                           	
  3927                           l4206:	
  3928  0602                     	clrf	(main@wEditingMode)^0300h
  3929  0602  01BC               	goto	l4208
  3930  0603  2E05               	line	576
  3931                           	
  3932                           l240:	
  3933  0604                     	goto	l4208
  3934  0604  2E05               	line	577
  3935                           	
  3936                           l238:	
  3937  0605                     	line	578
  3938                           	
  3939                           l4208:	
  3940  0605                     		incf	((main@wMenu)^0300h),w
  3941  0605  0A4D               	btfss	status,2
  3942  0606  1D03               	goto	u2761
  3943  0607  2E09               	goto	u2760
  3944  0608  2E0A               u2761:
  3945  0609                     	goto	l4214
  3946  0609  2E13               u2760:
  3947  060A                     	line	580
  3948                           	
  3949                           l4210:	
  3950  060A                     	clrf	(main@wUpdateMenu)^0300h
  3951  060A  01C1               	incf	(main@wUpdateMenu)^0300h,f
  3952  060B  0AC1               	line	581
  3953                           	
  3954                           l4212:	
  3955  060C                     	movlw	low(02h)
  3956  060C  3002               	movlb 1	; select bank1
  3957  060D  0021               	movwf	(??_main+0)^080h+0
  3958  060E  00C1               	movf	(??_main+0)^080h+0,w
  3959  060F  0841               	movlb 6	; select bank6
  3960  0610  0026               	movwf	(main@wMenu)^0300h
  3961  0611  00CD               	goto	l4214
  3962  0612  2E13               	line	582
  3963                           	
  3964                           l241:	
  3965  0613                     	line	583
  3966                           	
  3967                           l4214:	
  3968  0613                     		movlw	3
  3969  0613  3003               	xorwf	((main@wMenu)^0300h),w
  3970  0614  064D               	btfss	status,2
  3971  0615  1D03               	goto	u2771
  3972  0616  2E18               	goto	u2770
  3973  0617  2E19               u2771:
  3974  0618                     	goto	l191
  3975  0618  2B34               u2770:
  3976  0619                     	line	585
  3977                           	
  3978                           l4216:	
  3979  0619                     	clrf	(main@wUpdateMenu)^0300h
  3980  0619  01C1               	incf	(main@wUpdateMenu)^0300h,f
  3981  061A  0AC1               	line	586
  3982                           	
  3983                           l4218:	
  3984  061B                     	clrf	(main@wMenu)^0300h
  3985  061B  01CD               	goto	l191
  3986  061C  2B34               	line	587
  3987                           	
  3988                           l242:	
  3989  061D                     	goto	l191
  3990  061D  2B34               	line	590
  3991                           	
  3992                           l243:	
  3993  061E                     	goto	l191
  3994  061E  2B34               	
  3995                           l244:	
  3996  061F                     	line	592
  3997                           	
  3998                           l245:	
  3999  061F                     	global	start
  4000                           	ljmp	start
  4001  061F  3181  29E5         	opt stack 0
  4002                           GLOBAL	__end_of_main
  4003                           	__end_of_main:
  4004  0621                     	signat	_main,89
  4005                           	global	_setNotBlinkingCursor
  4006                           
  4007 ;; *************** function _setNotBlinkingCursor *****************
  4008 ;; Defined at:
  4009 ;;		line 220 in file "LCD_hd44780u_qy_2004a.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;		None
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;		None
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      void 
  4016 ;; Registers used:
  4017 ;;		wreg, status,2, status,0, pclath, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4025 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4026 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4027 ;;Total ram usage:        1 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:    7
  4030 ;; This function calls:
  4031 ;;		_writeInsChk
  4032 ;; This function is called by:
  4033 ;;		_main
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4037                           	file	"LCD_hd44780u_qy_2004a.c"
  4038                           	line	220
  4039                           global __ptext1
  4040                           __ptext1:	;psect for function _setNotBlinkingCursor
  4041  0B0B                     psect	text1
  4042                           	file	"LCD_hd44780u_qy_2004a.c"
  4043                           	line	220
  4044                           	global	__size_of_setNotBlinkingCursor
  4045                           	__size_of_setNotBlinkingCursor	equ	__end_of_setNotBlinkingCursor-_setNotBlinkingCursor

  4046  000B                     	
  4047                           _setNotBlinkingCursor:	
  4048  0B0B                     ;incstack = 0
  4049                           	opt	stack 8
  4050                           ; Regs used in _setNotBlinkingCursor: [wreg+status,2+status,0+pclath+cstack]
  4051                           	line	222
  4052                           	
  4053                           l3874:	
  4054  0B0B                     ;LCD_hd44780u_qy_2004a.c: 222:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFE;
  4055                           	movlb 0	; select bank0
  4056  0B0B  0020               	movf	(_mDisplayOnOffReg),w
  4057  0B0C  085B               	andlw	0FEh
  4058  0B0D  39FE               	movwf	(??_setNotBlinkingCursor+0)+0
  4059  0B0E  00BA               	movf	(??_setNotBlinkingCursor+0)+0,w
  4060  0B0F  083A               	movwf	(_mDisplayOnOffReg)
  4061  0B10  00DB               	line	223
  4062                           	
  4063                           l3876:	
  4064  0B11                     ;LCD_hd44780u_qy_2004a.c: 223:   writeInsChk(mDisplayOnOffReg);
  4065                           	movf	(_mDisplayOnOffReg),w
  4066  0B11  085B               	fcall	_writeInsChk
  4067  0B12  318A  22EA  318B   	line	224
  4068                           	
  4069                           l402:	
  4070  0B15                     	return
  4071  0B15  0008               	opt stack 0
  4072                           GLOBAL	__end_of_setNotBlinkingCursor
  4073                           	__end_of_setNotBlinkingCursor:
  4074  0B16                     	signat	_setNotBlinkingCursor,89
  4075                           	global	_setCursorOff
  4076                           
  4077 ;; *************** function _setCursorOff *****************
  4078 ;; Defined at:
  4079 ;;		line 225 in file "LCD_hd44780u_qy_2004a.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      void 
  4086 ;; Registers used:
  4087 ;;		wreg, status,2, status,0, pclath, cstack
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4095 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4096 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4097 ;;Total ram usage:        1 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:    7
  4100 ;; This function calls:
  4101 ;;		_writeInsChk
  4102 ;; This function is called by:
  4103 ;;		_main
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4107                           	line	225
  4108                           global __ptext2
  4109                           __ptext2:	;psect for function _setCursorOff
  4110  0B00                     psect	text2
  4111                           	file	"LCD_hd44780u_qy_2004a.c"
  4112                           	line	225
  4113                           	global	__size_of_setCursorOff
  4114                           	__size_of_setCursorOff	equ	__end_of_setCursorOff-_setCursorOff
  4115  000B                     	
  4116                           _setCursorOff:	
  4117  0B00                     ;incstack = 0
  4118                           	opt	stack 8
  4119                           ; Regs used in _setCursorOff: [wreg+status,2+status,0+pclath+cstack]
  4120                           	line	227
  4121                           	
  4122                           l3866:	
  4123  0B00                     ;LCD_hd44780u_qy_2004a.c: 227:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFD;
  4124                           	movlb 0	; select bank0
  4125  0B00  0020               	movf	(_mDisplayOnOffReg),w
  4126  0B01  085B               	andlw	0FDh
  4127  0B02  39FD               	movwf	(??_setCursorOff+0)+0
  4128  0B03  00BA               	movf	(??_setCursorOff+0)+0,w
  4129  0B04  083A               	movwf	(_mDisplayOnOffReg)
  4130  0B05  00DB               	line	228
  4131                           	
  4132                           l3868:	
  4133  0B06                     ;LCD_hd44780u_qy_2004a.c: 228:   writeInsChk(mDisplayOnOffReg);
  4134                           	movf	(_mDisplayOnOffReg),w
  4135  0B06  085B               	fcall	_writeInsChk
  4136  0B07  318A  22EA  318B   	line	229
  4137                           	
  4138                           l405:	
  4139  0B0A                     	return
  4140  0B0A  0008               	opt stack 0
  4141                           GLOBAL	__end_of_setCursorOff
  4142                           	__end_of_setCursorOff:
  4143  0B0B                     	signat	_setCursorOff,89
  4144                           	global	_printEM1812
  4145                           
  4146 ;; *************** function _printEM1812 *****************
  4147 ;; Defined at:
  4148 ;;		line 134 in file "161518_temp_main.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  wVariable       2   29[BANK0 ] short 
  4151 ;;  oTextOut        1   31[BANK0 ] PTR unsigned char 
  4152 ;;		 -> main@wReadout(20), 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  wWritingPosi    1   38[BANK0 ] unsigned char 
  4155 ;;  wTen            1   37[BANK0 ] unsigned char 
  4156 ;;  wIsNegative     1   36[BANK0 ] unsigned char 
  4157 ;;  wDecimal        1   35[BANK0 ] unsigned char 
  4158 ;;  wUnity          1   34[BANK0 ] unsigned char 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      void 
  4161 ;; Registers used:
  4162 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4168 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  4169 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  4170 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  4171 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  4172 ;;Total ram usage:       10 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; Hardware stack levels required when called:    5
  4175 ;; This function calls:
  4176 ;;		___awdiv
  4177 ;;		___awmod
  4178 ;; This function is called by:
  4179 ;;		_main
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4183                           	file	"161518_temp_main.c"
  4184                           	line	134
  4185                           global __ptext3
  4186                           __ptext3:	;psect for function _printEM1812
  4187  06F2                     psect	text3
  4188                           	file	"161518_temp_main.c"
  4189                           	line	134
  4190                           	global	__size_of_printEM1812
  4191                           	__size_of_printEM1812	equ	__end_of_printEM1812-_printEM1812
  4192  00B6                     	
  4193                           _printEM1812:	
  4194  06F2                     ;incstack = 0
  4195                           	opt	stack 10
  4196                           ; Regs used in _printEM1812: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4197                           	line	139
  4198                           	
  4199                           l3762:	
  4200  06F2                     	movlb 0	; select bank0
  4201  06F2  0020               	clrf	(printEM1812@wIsNegative)
  4202  06F3  01C4               	line	140
  4203                           	clrf	(printEM1812@wWritingPosition)
  4204  06F4  01C6               	line	142
  4205                           	
  4206                           l3764:	
  4207  06F5                     	btfss	(printEM1812@wVariable+1),7
  4208  06F5  1FBE               	goto	u2541
  4209  06F6  2EF8               	goto	u2540
  4210  06F7  2EF9               u2541:
  4211  06F8                     	goto	l3770
  4212  06F8  2F01               u2540:
  4213  06F9                     	line	144
  4214                           	
  4215                           l3766:	
  4216  06F9                     	clrf	(printEM1812@wIsNegative)
  4217  06F9  01C4               	incf	(printEM1812@wIsNegative),f
  4218  06FA  0AC4               	line	145
  4219                           	
  4220                           l3768:	
  4221  06FB                     	comf	(printEM1812@wVariable),f
  4222  06FB  09BD               	comf	(printEM1812@wVariable+1),f
  4223  06FC  09BE               	incf	(printEM1812@wVariable),f
  4224  06FD  0ABD               	skipnz
  4225  06FE  1903               	incf	(printEM1812@wVariable+1),f
  4226  06FF  0ABE               	goto	l3770
  4227  0700  2F01               	line	146
  4228                           	
  4229                           l152:	
  4230  0701                     	line	148
  4231                           	
  4232                           l3770:	
  4233  0701                     	movlw	064h
  4234  0701  3064               	movwf	(___awdiv@divisor)
  4235  0702  00B4               	movlw	0
  4236  0703  3000               	movwf	((___awdiv@divisor))+1
  4237  0704  00B5               	movf	(printEM1812@wVariable+1),w
  4238  0705  083E               	movwf	(___awdiv@dividend+1)
  4239  0706  00B7               	movf	(printEM1812@wVariable),w
  4240  0707  083D               	movwf	(___awdiv@dividend)
  4241  0708  00B6               	fcall	___awdiv
  4242  0709  318E  26FF  3186   	movlb 0	; select bank0
  4243  070C  0020               	movf	(0+(?___awdiv)),w
  4244  070D  0834               	movwf	(??_printEM1812+0)+0
  4245  070E  00C0               	movf	(??_printEM1812+0)+0,w
  4246  070F  0840               	movwf	(printEM1812@wTen)
  4247  0710  00C5               	line	149
  4248                           	
  4249                           l3772:	
  4250  0711                     	movlw	064h
  4251  0711  3064               	movwf	(___awmod@divisor)
  4252  0712  00B4               	movlw	0
  4253  0713  3000               	movwf	((___awmod@divisor))+1
  4254  0714  00B5               	movf	(printEM1812@wVariable+1),w
  4255  0715  083E               	movwf	(___awmod@dividend+1)
  4256  0716  00B7               	movf	(printEM1812@wVariable),w
  4257  0717  083D               	movwf	(___awmod@dividend)
  4258  0718  00B6               	fcall	___awmod
  4259  0719  318D  25DD  3186   	movlb 0	; select bank0
  4260  071C  0020               	movf	(1+(?___awmod)),w
  4261  071D  0835               	movwf	(printEM1812@wVariable+1)
  4262  071E  00BE               	movf	(0+(?___awmod)),w
  4263  071F  0834               	movwf	(printEM1812@wVariable)
  4264  0720  00BD               	line	150
  4265                           	
  4266                           l3774:	
  4267  0721                     	movlw	0Ah
  4268  0721  300A               	movwf	(___awdiv@divisor)
  4269  0722  00B4               	movlw	0
  4270  0723  3000               	movwf	((___awdiv@divisor))+1
  4271  0724  00B5               	movf	(printEM1812@wVariable+1),w
  4272  0725  083E               	movwf	(___awdiv@dividend+1)
  4273  0726  00B7               	movf	(printEM1812@wVariable),w
  4274  0727  083D               	movwf	(___awdiv@dividend)
  4275  0728  00B6               	fcall	___awdiv
  4276  0729  318E  26FF  3186   	movlb 0	; select bank0
  4277  072C  0020               	movf	(0+(?___awdiv)),w
  4278  072D  0834               	movwf	(??_printEM1812+0)+0
  4279  072E  00C0               	movf	(??_printEM1812+0)+0,w
  4280  072F  0840               	movwf	(printEM1812@wUnity)
  4281  0730  00C2               	line	151
  4282                           	
  4283                           l3776:	
  4284  0731                     	movlw	0Ah
  4285  0731  300A               	movwf	(___awmod@divisor)
  4286  0732  00B4               	movlw	0
  4287  0733  3000               	movwf	((___awmod@divisor))+1
  4288  0734  00B5               	movf	(printEM1812@wVariable+1),w
  4289  0735  083E               	movwf	(___awmod@dividend+1)
  4290  0736  00B7               	movf	(printEM1812@wVariable),w
  4291  0737  083D               	movwf	(___awmod@dividend)
  4292  0738  00B6               	fcall	___awmod
  4293  0739  318D  25DD  3186   	movlb 0	; select bank0
  4294  073C  0020               	movf	(1+(?___awmod)),w
  4295  073D  0835               	movwf	(printEM1812@wVariable+1)
  4296  073E  00BE               	movf	(0+(?___awmod)),w
  4297  073F  0834               	movwf	(printEM1812@wVariable)
  4298  0740  00BD               	line	152
  4299                           	
  4300                           l3778:	
  4301  0741                     	movf	(printEM1812@wVariable),w
  4302  0741  083D               	movwf	(??_printEM1812+0)+0
  4303  0742  00C0               	movf	(??_printEM1812+0)+0,w
  4304  0743  0840               	movwf	(printEM1812@wDecimal)
  4305  0744  00C3               	line	155
  4306                           	movf	((printEM1812@wIsNegative)),w
  4307  0745  0844               	btfsc	status,2
  4308  0746  1903               	goto	u2551
  4309  0747  2F49               	goto	u2550
  4310  0748  2F4A               u2551:
  4311  0749                     	goto	l3784
  4312  0749  2F5A               u2550:
  4313  074A                     	line	157
  4314                           	
  4315                           l3780:	
  4316  074A                     	movlw	low(02Dh)
  4317  074A  302D               	movwf	(??_printEM1812+0)+0
  4318  074B  00C0               	movf	(printEM1812@wWritingPosition),w
  4319  074C  0846               	addwf	(printEM1812@oTextOut),w
  4320  074D  073F               	movwf	(??_printEM1812+1)+0
  4321  074E  00C1               	movf	0+(??_printEM1812+1)+0,w
  4322  074F  0841               	movwf	fsr1l
  4323  0750  0086               	movlw 3	; select bank6/7
  4324  0751  3003               	movwf fsr1h	
  4325  0752  0087               	
  4326                           	movf	(??_printEM1812+0)+0,w
  4327  0753  0840               	movwf	indf1
  4328  0754  0081               	line	158
  4329                           	
  4330                           l3782:	
  4331  0755                     	movlw	low(01h)
  4332  0755  3001               	movwf	(??_printEM1812+0)+0
  4333  0756  00C0               	movf	(??_printEM1812+0)+0,w
  4334  0757  0840               	addwf	(printEM1812@wWritingPosition),f
  4335  0758  07C6               	goto	l3784
  4336  0759  2F5A               	line	159
  4337                           	
  4338                           l153:	
  4339  075A                     	line	160
  4340                           	
  4341                           l3784:	
  4342  075A                     	movf	((printEM1812@wTen)),w
  4343  075A  0845               	btfsc	status,2
  4344  075B  1903               	goto	u2561
  4345  075C  2F5E               	goto	u2560
  4346  075D  2F5F               u2561:
  4347  075E                     	goto	l3790
  4348  075E  2F70               u2560:
  4349  075F                     	line	162
  4350                           	
  4351                           l3786:	
  4352  075F                     	movf	(printEM1812@wTen),w
  4353  075F  0845               	addlw	030h
  4354  0760  3E30               	movwf	(??_printEM1812+0)+0
  4355  0761  00C0               	movf	(printEM1812@wWritingPosition),w
  4356  0762  0846               	addwf	(printEM1812@oTextOut),w
  4357  0763  073F               	movwf	(??_printEM1812+1)+0
  4358  0764  00C1               	movf	0+(??_printEM1812+1)+0,w
  4359  0765  0841               	movwf	fsr1l
  4360  0766  0086               	movlw 3	; select bank6/7
  4361  0767  3003               	movwf fsr1h	
  4362  0768  0087               	
  4363                           	movf	(??_printEM1812+0)+0,w
  4364  0769  0840               	movwf	indf1
  4365  076A  0081               	line	163
  4366                           	
  4367                           l3788:	
  4368  076B                     	movlw	low(01h)
  4369  076B  3001               	movwf	(??_printEM1812+0)+0
  4370  076C  00C0               	movf	(??_printEM1812+0)+0,w
  4371  076D  0840               	addwf	(printEM1812@wWritingPosition),f
  4372  076E  07C6               	goto	l3790
  4373  076F  2F70               	line	164
  4374                           	
  4375                           l154:	
  4376  0770                     	line	165
  4377                           	
  4378                           l3790:	
  4379  0770                     	movf	(printEM1812@wUnity),w
  4380  0770  0842               	addlw	030h
  4381  0771  3E30               	movwf	(??_printEM1812+0)+0
  4382  0772  00C0               	movf	(printEM1812@wWritingPosition),w
  4383  0773  0846               	addwf	(printEM1812@oTextOut),w
  4384  0774  073F               	movwf	(??_printEM1812+1)+0
  4385  0775  00C1               	movf	0+(??_printEM1812+1)+0,w
  4386  0776  0841               	movwf	fsr1l
  4387  0777  0086               	movlw 3	; select bank6/7
  4388  0778  3003               	movwf fsr1h	
  4389  0779  0087               	
  4390                           	movf	(??_printEM1812+0)+0,w
  4391  077A  0840               	movwf	indf1
  4392  077B  0081               	line	166
  4393                           	movlw	low(01h)
  4394  077C  3001               	movwf	(??_printEM1812+0)+0
  4395  077D  00C0               	movf	(??_printEM1812+0)+0,w
  4396  077E  0840               	addwf	(printEM1812@wWritingPosition),f
  4397  077F  07C6               	line	167
  4398                           	
  4399                           l3792:	
  4400  0780                     	movlw	low(02Ch)
  4401  0780  302C               	movwf	(??_printEM1812+0)+0
  4402  0781  00C0               	movf	(printEM1812@wWritingPosition),w
  4403  0782  0846               	addwf	(printEM1812@oTextOut),w
  4404  0783  073F               	movwf	(??_printEM1812+1)+0
  4405  0784  00C1               	movf	0+(??_printEM1812+1)+0,w
  4406  0785  0841               	movwf	fsr1l
  4407  0786  0086               	movlw 3	; select bank6/7
  4408  0787  3003               	movwf fsr1h	
  4409  0788  0087               	
  4410                           	movf	(??_printEM1812+0)+0,w
  4411  0789  0840               	movwf	indf1
  4412  078A  0081               	line	168
  4413                           	
  4414                           l3794:	
  4415  078B                     	movlw	low(01h)
  4416  078B  3001               	movwf	(??_printEM1812+0)+0
  4417  078C  00C0               	movf	(??_printEM1812+0)+0,w
  4418  078D  0840               	addwf	(printEM1812@wWritingPosition),f
  4419  078E  07C6               	line	169
  4420                           	movf	(printEM1812@wDecimal),w
  4421  078F  0843               	addlw	030h
  4422  0790  3E30               	movwf	(??_printEM1812+0)+0
  4423  0791  00C0               	movf	(printEM1812@wWritingPosition),w
  4424  0792  0846               	addwf	(printEM1812@oTextOut),w
  4425  0793  073F               	movwf	(??_printEM1812+1)+0
  4426  0794  00C1               	movf	0+(??_printEM1812+1)+0,w
  4427  0795  0841               	movwf	fsr1l
  4428  0796  0086               	movlw 3	; select bank6/7
  4429  0797  3003               	movwf fsr1h	
  4430  0798  0087               	
  4431                           	movf	(??_printEM1812+0)+0,w
  4432  0799  0840               	movwf	indf1
  4433  079A  0081               	line	170
  4434                           	
  4435                           l3796:	
  4436  079B                     	movlw	low(01h)
  4437  079B  3001               	movwf	(??_printEM1812+0)+0
  4438  079C  00C0               	movf	(??_printEM1812+0)+0,w
  4439  079D  0840               	addwf	(printEM1812@wWritingPosition),f
  4440  079E  07C6               	line	171
  4441                           	
  4442                           l3798:	
  4443  079F                     	movf	(printEM1812@wWritingPosition),w
  4444  079F  0846               	addwf	(printEM1812@oTextOut),w
  4445  07A0  073F               	movwf	(??_printEM1812+0)+0
  4446  07A1  00C0               	movf	0+(??_printEM1812+0)+0,w
  4447  07A2  0840               	movwf	fsr1l
  4448  07A3  0086               	movlw 3	; select bank6/7
  4449  07A4  3003               	movwf fsr1h	
  4450  07A5  0087               	
  4451                           	clrf	indf1
  4452  07A6  0181               	line	173
  4453                           	
  4454                           l155:	
  4455  07A7                     	return
  4456  07A7  0008               	opt stack 0
  4457                           GLOBAL	__end_of_printEM1812
  4458                           	__end_of_printEM1812:
  4459  07A8                     	signat	_printEM1812,8313
  4460                           	global	___awmod
  4461                           
  4462 ;; *************** function ___awmod *****************
  4463 ;; Defined at:
  4464 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  divisor         2   20[BANK0 ] int 
  4467 ;;  dividend        2   22[BANK0 ] int 
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;  sign            1   26[BANK0 ] unsigned char 
  4470 ;;  counter         1   25[BANK0 ] unsigned char 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  2   20[BANK0 ] int 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2, status,0
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4480 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4481 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  4482 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4483 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
  4484 ;;Total ram usage:        7 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    4
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_printEM1812
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  4494                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  4495                           	line	5
  4496                           global __ptext4
  4497                           __ptext4:	;psect for function ___awmod
  4498  0DDD                     psect	text4
  4499                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  4500                           	line	5
  4501                           	global	__size_of___awmod
  4502                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  4503  005E                     	
  4504                           ___awmod:	
  4505  0DDD                     ;incstack = 0
  4506                           	opt	stack 10
  4507                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4508                           	line	12
  4509                           	
  4510                           l3666:	
  4511  0DDD                     	movlb 0	; select bank0
  4512  0DDD  0020               	clrf	(___awmod@sign)
  4513  0DDE  01BA               	line	13
  4514                           	
  4515                           l3668:	
  4516  0DDF                     	btfss	(___awmod@dividend+1),7
  4517  0DDF  1FB7               	goto	u2401
  4518  0DE0  2DE2               	goto	u2400
  4519  0DE1  2DE3               u2401:
  4520  0DE2                     	goto	l3674
  4521  0DE2  2DEB               u2400:
  4522  0DE3                     	line	14
  4523                           	
  4524                           l3670:	
  4525  0DE3                     	comf	(___awmod@dividend),f
  4526  0DE3  09B6               	comf	(___awmod@dividend+1),f
  4527  0DE4  09B7               	incf	(___awmod@dividend),f
  4528  0DE5  0AB6               	skipnz
  4529  0DE6  1903               	incf	(___awmod@dividend+1),f
  4530  0DE7  0AB7               	line	15
  4531                           	
  4532                           l3672:	
  4533  0DE8                     	clrf	(___awmod@sign)
  4534  0DE8  01BA               	incf	(___awmod@sign),f
  4535  0DE9  0ABA               	goto	l3674
  4536  0DEA  2DEB               	line	16
  4537                           	
  4538                           l602:	
  4539  0DEB                     	line	17
  4540                           	
  4541                           l3674:	
  4542  0DEB                     	btfss	(___awmod@divisor+1),7
  4543  0DEB  1FB5               	goto	u2411
  4544  0DEC  2DEE               	goto	u2410
  4545  0DED  2DEF               u2411:
  4546  0DEE                     	goto	l3678
  4547  0DEE  2DF5               u2410:
  4548  0DEF                     	line	18
  4549                           	
  4550                           l3676:	
  4551  0DEF                     	comf	(___awmod@divisor),f
  4552  0DEF  09B4               	comf	(___awmod@divisor+1),f
  4553  0DF0  09B5               	incf	(___awmod@divisor),f
  4554  0DF1  0AB4               	skipnz
  4555  0DF2  1903               	incf	(___awmod@divisor+1),f
  4556  0DF3  0AB5               	goto	l3678
  4557  0DF4  2DF5               	
  4558                           l603:	
  4559  0DF5                     	line	19
  4560                           	
  4561                           l3678:	
  4562  0DF5                     	movf	((___awmod@divisor)),w
  4563  0DF5  0834               iorwf	((___awmod@divisor+1)),w
  4564  0DF6  0435               	btfsc	status,2
  4565  0DF7  1903               	goto	u2421
  4566  0DF8  2DFA               	goto	u2420
  4567  0DF9  2DFB               u2421:
  4568  0DFA                     	goto	l3696
  4569  0DFA  2E2A               u2420:
  4570  0DFB                     	line	20
  4571                           	
  4572                           l3680:	
  4573  0DFB                     	clrf	(___awmod@counter)
  4574  0DFB  01B9               	incf	(___awmod@counter),f
  4575  0DFC  0AB9               	line	21
  4576                           	goto	l3686
  4577  0DFD  2E08               	
  4578                           l606:	
  4579  0DFE                     	line	22
  4580                           	
  4581                           l3682:	
  4582  0DFE                     	movlw	01h
  4583  0DFE  3001               	
  4584                           u2435:
  4585  0DFF                     	lslf	(___awmod@divisor),f
  4586  0DFF  35B4               	rlf	(___awmod@divisor+1),f
  4587  0E00  0DB5               	decfsz	wreg,f
  4588  0E01  0B89               	goto	u2435
  4589  0E02  2DFF               	line	23
  4590                           	
  4591                           l3684:	
  4592  0E03                     	movlw	low(01h)
  4593  0E03  3001               	movwf	(??___awmod+0)+0
  4594  0E04  00B8               	movf	(??___awmod+0)+0,w
  4595  0E05  0838               	addwf	(___awmod@counter),f
  4596  0E06  07B9               	goto	l3686
  4597  0E07  2E08               	line	24
  4598                           	
  4599                           l605:	
  4600  0E08                     	line	21
  4601                           	
  4602                           l3686:	
  4603  0E08                     	btfss	(___awmod@divisor+1),(15)&7
  4604  0E08  1FB5               	goto	u2441
  4605  0E09  2E0B               	goto	u2440
  4606  0E0A  2E0C               u2441:
  4607  0E0B                     	goto	l3682
  4608  0E0B  2DFE               u2440:
  4609  0E0C                     	goto	l3688
  4610  0E0C  2E0E               	
  4611                           l607:	
  4612  0E0D                     	goto	l3688
  4613  0E0D  2E0E               	line	25
  4614                           	
  4615                           l608:	
  4616  0E0E                     	line	26
  4617                           	
  4618                           l3688:	
  4619  0E0E                     	movf	(___awmod@divisor+1),w
  4620  0E0E  0835               	subwf	(___awmod@dividend+1),w
  4621  0E0F  0237               	skipz
  4622  0E10  1D03               	goto	u2455
  4623  0E11  2E14               	movf	(___awmod@divisor),w
  4624  0E12  0834               	subwf	(___awmod@dividend),w
  4625  0E13  0236               u2455:
  4626  0E14                     	skipc
  4627  0E14  1C03               	goto	u2451
  4628  0E15  2E17               	goto	u2450
  4629  0E16  2E18               u2451:
  4630  0E17                     	goto	l3692
  4631  0E17  2E1D               u2450:
  4632  0E18                     	line	27
  4633                           	
  4634                           l3690:	
  4635  0E18                     	movf	(___awmod@divisor),w
  4636  0E18  0834               	subwf	(___awmod@dividend),f
  4637  0E19  02B6               	movf	(___awmod@divisor+1),w
  4638  0E1A  0835               	subwfb	(___awmod@dividend+1),f
  4639  0E1B  3BB7               	goto	l3692
  4640  0E1C  2E1D               	
  4641                           l609:	
  4642  0E1D                     	line	28
  4643                           	
  4644                           l3692:	
  4645  0E1D                     	movlw	01h
  4646  0E1D  3001               	
  4647                           u2465:
  4648  0E1E                     	lsrf	(___awmod@divisor+1),f
  4649  0E1E  36B5               	rrf	(___awmod@divisor),f
  4650  0E1F  0CB4               	decfsz	wreg,f
  4651  0E20  0B89               	goto	u2465
  4652  0E21  2E1E               	line	29
  4653                           	
  4654                           l3694:	
  4655  0E22                     	movlw	01h
  4656  0E22  3001               	subwf	(___awmod@counter),f
  4657  0E23  02B9               	btfss	status,2
  4658  0E24  1D03               	goto	u2471
  4659  0E25  2E27               	goto	u2470
  4660  0E26  2E28               u2471:
  4661  0E27                     	goto	l3688
  4662  0E27  2E0E               u2470:
  4663  0E28                     	goto	l3696
  4664  0E28  2E2A               	
  4665                           l610:	
  4666  0E29                     	goto	l3696
  4667  0E29  2E2A               	line	30
  4668                           	
  4669                           l604:	
  4670  0E2A                     	line	31
  4671                           	
  4672                           l3696:	
  4673  0E2A                     	movf	((___awmod@sign)),w
  4674  0E2A  083A               	btfsc	status,2
  4675  0E2B  1903               	goto	u2481
  4676  0E2C  2E2E               	goto	u2480
  4677  0E2D  2E2F               u2481:
  4678  0E2E                     	goto	l3700
  4679  0E2E  2E35               u2480:
  4680  0E2F                     	line	32
  4681                           	
  4682                           l3698:	
  4683  0E2F                     	comf	(___awmod@dividend),f
  4684  0E2F  09B6               	comf	(___awmod@dividend+1),f
  4685  0E30  09B7               	incf	(___awmod@dividend),f
  4686  0E31  0AB6               	skipnz
  4687  0E32  1903               	incf	(___awmod@dividend+1),f
  4688  0E33  0AB7               	goto	l3700
  4689  0E34  2E35               	
  4690                           l611:	
  4691  0E35                     	line	33
  4692                           	
  4693                           l3700:	
  4694  0E35                     	movf	(___awmod@dividend+1),w
  4695  0E35  0837               	movwf	(?___awmod+1)
  4696  0E36  00B5               	movf	(___awmod@dividend),w
  4697  0E37  0836               	movwf	(?___awmod)
  4698  0E38  00B4               	goto	l612
  4699  0E39  2E3A               	
  4700                           l3702:	
  4701  0E3A                     	line	34
  4702                           	
  4703                           l612:	
  4704  0E3A                     	return
  4705  0E3A  0008               	opt stack 0
  4706                           GLOBAL	__end_of___awmod
  4707                           	__end_of___awmod:
  4708  0E3B                     	signat	___awmod,8314
  4709                           	global	___awdiv
  4710                           
  4711 ;; *************** function ___awdiv *****************
  4712 ;; Defined at:
  4713 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  divisor         2   20[BANK0 ] int 
  4716 ;;  dividend        2   22[BANK0 ] int 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;  quotient        2   27[BANK0 ] int 
  4719 ;;  sign            1   26[BANK0 ] unsigned char 
  4720 ;;  counter         1   25[BANK0 ] unsigned char 
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  2   20[BANK0 ] int 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2, status,0
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4730 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4731 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4732 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4733 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0
  4734 ;;Total ram usage:        9 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; Hardware stack levels required when called:    4
  4737 ;; This function calls:
  4738 ;;		Nothing
  4739 ;; This function is called by:
  4740 ;;		_printEM1812
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  4744                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  4745                           	line	5
  4746                           global __ptext5
  4747                           __ptext5:	;psect for function ___awdiv
  4748  0EFF                     psect	text5
  4749                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  4750                           	line	5
  4751                           	global	__size_of___awdiv
  4752                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  4753  006A                     	
  4754                           ___awdiv:	
  4755  0EFF                     ;incstack = 0
  4756                           	opt	stack 10
  4757                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4758                           	line	13
  4759                           	
  4760                           l3622:	
  4761  0EFF                     	movlb 0	; select bank0
  4762  0EFF  0020               	clrf	(___awdiv@sign)
  4763  0F00  01BA               	line	14
  4764                           	
  4765                           l3624:	
  4766  0F01                     	btfss	(___awdiv@divisor+1),7
  4767  0F01  1FB5               	goto	u2301
  4768  0F02  2F04               	goto	u2300
  4769  0F03  2F05               u2301:
  4770  0F04                     	goto	l3630
  4771  0F04  2F0D               u2300:
  4772  0F05                     	line	15
  4773                           	
  4774                           l3626:	
  4775  0F05                     	comf	(___awdiv@divisor),f
  4776  0F05  09B4               	comf	(___awdiv@divisor+1),f
  4777  0F06  09B5               	incf	(___awdiv@divisor),f
  4778  0F07  0AB4               	skipnz
  4779  0F08  1903               	incf	(___awdiv@divisor+1),f
  4780  0F09  0AB5               	line	16
  4781                           	
  4782                           l3628:	
  4783  0F0A                     	clrf	(___awdiv@sign)
  4784  0F0A  01BA               	incf	(___awdiv@sign),f
  4785  0F0B  0ABA               	goto	l3630
  4786  0F0C  2F0D               	line	17
  4787                           	
  4788                           l589:	
  4789  0F0D                     	line	18
  4790                           	
  4791                           l3630:	
  4792  0F0D                     	btfss	(___awdiv@dividend+1),7
  4793  0F0D  1FB7               	goto	u2311
  4794  0F0E  2F10               	goto	u2310
  4795  0F0F  2F11               u2311:
  4796  0F10                     	goto	l3636
  4797  0F10  2F1B               u2310:
  4798  0F11                     	line	19
  4799                           	
  4800                           l3632:	
  4801  0F11                     	comf	(___awdiv@dividend),f
  4802  0F11  09B6               	comf	(___awdiv@dividend+1),f
  4803  0F12  09B7               	incf	(___awdiv@dividend),f
  4804  0F13  0AB6               	skipnz
  4805  0F14  1903               	incf	(___awdiv@dividend+1),f
  4806  0F15  0AB7               	line	20
  4807                           	
  4808                           l3634:	
  4809  0F16                     	movlw	low(01h)
  4810  0F16  3001               	movwf	(??___awdiv+0)+0
  4811  0F17  00B8               	movf	(??___awdiv+0)+0,w
  4812  0F18  0838               	xorwf	(___awdiv@sign),f
  4813  0F19  06BA               	goto	l3636
  4814  0F1A  2F1B               	line	21
  4815                           	
  4816                           l590:	
  4817  0F1B                     	line	22
  4818                           	
  4819                           l3636:	
  4820  0F1B                     	clrf	(___awdiv@quotient)
  4821  0F1B  01BB               	clrf	(___awdiv@quotient+1)
  4822  0F1C  01BC               	line	23
  4823                           	
  4824                           l3638:	
  4825  0F1D                     	movf	((___awdiv@divisor)),w
  4826  0F1D  0834               iorwf	((___awdiv@divisor+1)),w
  4827  0F1E  0435               	btfsc	status,2
  4828  0F1F  1903               	goto	u2321
  4829  0F20  2F22               	goto	u2320
  4830  0F21  2F23               u2321:
  4831  0F22                     	goto	l3658
  4832  0F22  2F58               u2320:
  4833  0F23                     	line	24
  4834                           	
  4835                           l3640:	
  4836  0F23                     	clrf	(___awdiv@counter)
  4837  0F23  01B9               	incf	(___awdiv@counter),f
  4838  0F24  0AB9               	line	25
  4839                           	goto	l3646
  4840  0F25  2F30               	
  4841                           l593:	
  4842  0F26                     	line	26
  4843                           	
  4844                           l3642:	
  4845  0F26                     	movlw	01h
  4846  0F26  3001               	
  4847                           u2335:
  4848  0F27                     	lslf	(___awdiv@divisor),f
  4849  0F27  35B4               	rlf	(___awdiv@divisor+1),f
  4850  0F28  0DB5               	decfsz	wreg,f
  4851  0F29  0B89               	goto	u2335
  4852  0F2A  2F27               	line	27
  4853                           	
  4854                           l3644:	
  4855  0F2B                     	movlw	low(01h)
  4856  0F2B  3001               	movwf	(??___awdiv+0)+0
  4857  0F2C  00B8               	movf	(??___awdiv+0)+0,w
  4858  0F2D  0838               	addwf	(___awdiv@counter),f
  4859  0F2E  07B9               	goto	l3646
  4860  0F2F  2F30               	line	28
  4861                           	
  4862                           l592:	
  4863  0F30                     	line	25
  4864                           	
  4865                           l3646:	
  4866  0F30                     	btfss	(___awdiv@divisor+1),(15)&7
  4867  0F30  1FB5               	goto	u2341
  4868  0F31  2F33               	goto	u2340
  4869  0F32  2F34               u2341:
  4870  0F33                     	goto	l3642
  4871  0F33  2F26               u2340:
  4872  0F34                     	goto	l3648
  4873  0F34  2F36               	
  4874                           l594:	
  4875  0F35                     	goto	l3648
  4876  0F35  2F36               	line	29
  4877                           	
  4878                           l595:	
  4879  0F36                     	line	30
  4880                           	
  4881                           l3648:	
  4882  0F36                     	movlw	01h
  4883  0F36  3001               	
  4884                           u2355:
  4885  0F37                     	lslf	(___awdiv@quotient),f
  4886  0F37  35BB               	rlf	(___awdiv@quotient+1),f
  4887  0F38  0DBC               	decfsz	wreg,f
  4888  0F39  0B89               	goto	u2355
  4889  0F3A  2F37               	line	31
  4890                           	movf	(___awdiv@divisor+1),w
  4891  0F3B  0835               	subwf	(___awdiv@dividend+1),w
  4892  0F3C  0237               	skipz
  4893  0F3D  1D03               	goto	u2365
  4894  0F3E  2F41               	movf	(___awdiv@divisor),w
  4895  0F3F  0834               	subwf	(___awdiv@dividend),w
  4896  0F40  0236               u2365:
  4897  0F41                     	skipc
  4898  0F41  1C03               	goto	u2361
  4899  0F42  2F44               	goto	u2360
  4900  0F43  2F45               u2361:
  4901  0F44                     	goto	l3654
  4902  0F44  2F4B               u2360:
  4903  0F45                     	line	32
  4904                           	
  4905                           l3650:	
  4906  0F45                     	movf	(___awdiv@divisor),w
  4907  0F45  0834               	subwf	(___awdiv@dividend),f
  4908  0F46  02B6               	movf	(___awdiv@divisor+1),w
  4909  0F47  0835               	subwfb	(___awdiv@dividend+1),f
  4910  0F48  3BB7               	line	33
  4911                           	
  4912                           l3652:	
  4913  0F49                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  4914  0F49  143B               	goto	l3654
  4915  0F4A  2F4B               	line	34
  4916                           	
  4917                           l596:	
  4918  0F4B                     	line	35
  4919                           	
  4920                           l3654:	
  4921  0F4B                     	movlw	01h
  4922  0F4B  3001               	
  4923                           u2375:
  4924  0F4C                     	lsrf	(___awdiv@divisor+1),f
  4925  0F4C  36B5               	rrf	(___awdiv@divisor),f
  4926  0F4D  0CB4               	decfsz	wreg,f
  4927  0F4E  0B89               	goto	u2375
  4928  0F4F  2F4C               	line	36
  4929                           	
  4930                           l3656:	
  4931  0F50                     	movlw	01h
  4932  0F50  3001               	subwf	(___awdiv@counter),f
  4933  0F51  02B9               	btfss	status,2
  4934  0F52  1D03               	goto	u2381
  4935  0F53  2F55               	goto	u2380
  4936  0F54  2F56               u2381:
  4937  0F55                     	goto	l3648
  4938  0F55  2F36               u2380:
  4939  0F56                     	goto	l3658
  4940  0F56  2F58               	
  4941                           l597:	
  4942  0F57                     	goto	l3658
  4943  0F57  2F58               	line	37
  4944                           	
  4945                           l591:	
  4946  0F58                     	line	38
  4947                           	
  4948                           l3658:	
  4949  0F58                     	movf	((___awdiv@sign)),w
  4950  0F58  083A               	btfsc	status,2
  4951  0F59  1903               	goto	u2391
  4952  0F5A  2F5C               	goto	u2390
  4953  0F5B  2F5D               u2391:
  4954  0F5C                     	goto	l3662
  4955  0F5C  2F63               u2390:
  4956  0F5D                     	line	39
  4957                           	
  4958                           l3660:	
  4959  0F5D                     	comf	(___awdiv@quotient),f
  4960  0F5D  09BB               	comf	(___awdiv@quotient+1),f
  4961  0F5E  09BC               	incf	(___awdiv@quotient),f
  4962  0F5F  0ABB               	skipnz
  4963  0F60  1903               	incf	(___awdiv@quotient+1),f
  4964  0F61  0ABC               	goto	l3662
  4965  0F62  2F63               	
  4966                           l598:	
  4967  0F63                     	line	40
  4968                           	
  4969                           l3662:	
  4970  0F63                     	movf	(___awdiv@quotient+1),w
  4971  0F63  083C               	movwf	(?___awdiv+1)
  4972  0F64  00B5               	movf	(___awdiv@quotient),w
  4973  0F65  083B               	movwf	(?___awdiv)
  4974  0F66  00B4               	goto	l599
  4975  0F67  2F68               	
  4976                           l3664:	
  4977  0F68                     	line	41
  4978                           	
  4979                           l599:	
  4980  0F68                     	return
  4981  0F68  0008               	opt stack 0
  4982                           GLOBAL	__end_of___awdiv
  4983                           	__end_of___awdiv:
  4984  0F69                     	signat	___awdiv,8314
  4985                           	global	_powerOnLcd
  4986                           
  4987 ;; *************** function _powerOnLcd *****************
  4988 ;; Defined at:
  4989 ;;		line 210 in file "LCD_hd44780u_qy_2004a.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;		None
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;		None
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  1    wreg      void 
  4996 ;; Registers used:
  4997 ;;		wreg, status,2, status,0, pclath, cstack
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5005 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5006 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5007 ;;Total ram usage:        1 bytes
  5008 ;; Hardware stack levels used:    1
  5009 ;; Hardware stack levels required when called:    7
  5010 ;; This function calls:
  5011 ;;		_writeInsChk
  5012 ;; This function is called by:
  5013 ;;		_main
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  5017                           	file	"LCD_hd44780u_qy_2004a.c"
  5018                           	line	210
  5019                           global __ptext6
  5020                           __ptext6:	;psect for function _powerOnLcd
  5021  0AF5                     psect	text6
  5022                           	file	"LCD_hd44780u_qy_2004a.c"
  5023                           	line	210
  5024                           	global	__size_of_powerOnLcd
  5025                           	__size_of_powerOnLcd	equ	__end_of_powerOnLcd-_powerOnLcd
  5026  000B                     	
  5027                           _powerOnLcd:	
  5028  0AF5                     ;incstack = 0
  5029                           	opt	stack 8
  5030                           ; Regs used in _powerOnLcd: [wreg+status,2+status,0+pclath+cstack]
  5031                           	line	212
  5032                           	
  5033                           l3862:	
  5034  0AF5                     ;LCD_hd44780u_qy_2004a.c: 212:   mDisplayOnOffReg = mDisplayOnOffReg | 0x04;
  5035                           	movlb 0	; select bank0
  5036  0AF5  0020               	movf	(_mDisplayOnOffReg),w
  5037  0AF6  085B               	iorlw	04h
  5038  0AF7  3804               	movwf	(??_powerOnLcd+0)+0
  5039  0AF8  00BA               	movf	(??_powerOnLcd+0)+0,w
  5040  0AF9  083A               	movwf	(_mDisplayOnOffReg)
  5041  0AFA  00DB               	line	213
  5042                           	
  5043                           l3864:	
  5044  0AFB                     ;LCD_hd44780u_qy_2004a.c: 213:   writeInsChk(mDisplayOnOffReg);
  5045                           	movf	(_mDisplayOnOffReg),w
  5046  0AFB  085B               	fcall	_writeInsChk
  5047  0AFC  318A  22EA  318A   	line	214
  5048                           	
  5049                           l396:	
  5050  0AFF                     	return
  5051  0AFF  0008               	opt stack 0
  5052                           GLOBAL	__end_of_powerOnLcd
  5053                           	__end_of_powerOnLcd:
  5054  0B00                     	signat	_powerOnLcd,89
  5055                           	global	_moveCursorToHome
  5056                           
  5057 ;; *************** function _moveCursorToHome *****************
  5058 ;; Defined at:
  5059 ;;		line 271 in file "LCD_hd44780u_qy_2004a.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;		None
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0, pclath, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5077 ;;Total ram usage:        0 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    7
  5080 ;; This function calls:
  5081 ;;		_writeInsChk
  5082 ;; This function is called by:
  5083 ;;		_main
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  5087                           	line	271
  5088                           global __ptext7
  5089                           __ptext7:	;psect for function _moveCursorToHome
  5090  0AD8                     psect	text7
  5091                           	file	"LCD_hd44780u_qy_2004a.c"
  5092                           	line	271
  5093                           	global	__size_of_moveCursorToHome
  5094                           	__size_of_moveCursorToHome	equ	__end_of_moveCursorToHome-_moveCursorToHome
  5095  0008                     	
  5096                           _moveCursorToHome:	
  5097  0AD8                     ;incstack = 0
  5098                           	opt	stack 8
  5099                           ; Regs used in _moveCursorToHome: [wreg+status,2+status,0+pclath+cstack]
  5100                           	line	273
  5101                           	
  5102                           l3870:	
  5103  0AD8                     ;LCD_hd44780u_qy_2004a.c: 273:   writeInsChk(0x02);
  5104                           	movlw	low(02h)
  5105  0AD8  3002               	fcall	_writeInsChk
  5106  0AD9  318A  22EA  318A   	line	274
  5107                           	
  5108                           l3872:	
  5109  0ADC                     ;LCD_hd44780u_qy_2004a.c: 274:   mWritingPosition=1;
  5110                           	movlb 0	; select bank0
  5111  0ADC  0020               	clrf	(_mWritingPosition)
  5112  0ADD  01D9               	incf	(_mWritingPosition),f
  5113  0ADE  0AD9               	line	275
  5114                           	
  5115                           l432:	
  5116  0ADF                     	return
  5117  0ADF  0008               	opt stack 0
  5118                           GLOBAL	__end_of_moveCursorToHome
  5119                           	__end_of_moveCursorToHome:
  5120  0AE0                     	signat	_moveCursorToHome,89
  5121                           	global	_initLCD
  5122                           
  5123 ;; *************** function _initLCD *****************
  5124 ;; Defined at:
  5125 ;;		line 10 in file "LCD_hd44780u_qy_2004a.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;		None
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;		None
  5130 ;; Return value:  Size  Location     Type
  5131 ;;                  1    wreg      void 
  5132 ;; Registers used:
  5133 ;;		wreg, status,2, status,0, pclath, cstack
  5134 ;; Tracked objects:
  5135 ;;		On entry : 0/0
  5136 ;;		On exit  : 0/0
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5141 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5142 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5143 ;;Total ram usage:        1 bytes
  5144 ;; Hardware stack levels used:    1
  5145 ;; Hardware stack levels required when called:    8
  5146 ;; This function calls:
  5147 ;;		_clearDisplay
  5148 ;;		_setData
  5149 ;;		_writeInsChk
  5150 ;; This function is called by:
  5151 ;;		_main
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  5155                           	line	10
  5156                           global __ptext8
  5157                           __ptext8:	;psect for function _initLCD
  5158  0E9B                     psect	text8
  5159                           	file	"LCD_hd44780u_qy_2004a.c"
  5160                           	line	10
  5161                           	global	__size_of_initLCD
  5162                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  5163  0064                     	
  5164                           _initLCD:	
  5165  0E9B                     ;incstack = 0
  5166                           	opt	stack 7
  5167                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  5168                           	line	13
  5169                           	
  5170                           l3840:	
  5171  0E9B                     ;LCD_hd44780u_qy_2004a.c: 13:   ANSELAbits.ANSA3 = 0;
  5172                           	movlb 3	; select bank3
  5173  0E9B  0023               	bcf	(396)^0180h,3	;volatile
  5174  0E9C  118C               	line	14
  5175                           ;LCD_hd44780u_qy_2004a.c: 14:   ANSELCbits.ANSC2 = 0;
  5176                           	bcf	(398)^0180h,2	;volatile
  5177  0E9D  110E               	line	15
  5178                           ;LCD_hd44780u_qy_2004a.c: 15:   ANSELCbits.ANSC1 = 0;
  5179                           	bcf	(398)^0180h,1	;volatile
  5180  0E9E  108E               	line	16
  5181                           ;LCD_hd44780u_qy_2004a.c: 16:   ANSELCbits.ANSC0 = 0;
  5182                           	bcf	(398)^0180h,0	;volatile
  5183  0E9F  100E               	line	17
  5184                           ;LCD_hd44780u_qy_2004a.c: 17:   ANSELAbits.ANSA0 = 0;
  5185                           	bcf	(396)^0180h,0	;volatile
  5186  0EA0  100C               	line	18
  5187                           ;LCD_hd44780u_qy_2004a.c: 18:   ANSELAbits.ANSA1 = 0;
  5188                           	bcf	(396)^0180h,1	;volatile
  5189  0EA1  108C               	line	19
  5190                           ;LCD_hd44780u_qy_2004a.c: 19:   ANSELAbits.ANSA2 = 0;
  5191                           	bcf	(396)^0180h,2	;volatile
  5192  0EA2  110C               	line	21
  5193                           ;LCD_hd44780u_qy_2004a.c: 21:   PORTAbits.RA3 = 0;
  5194                           	movlb 0	; select bank0
  5195  0EA3  0020               	bcf	(12),3	;volatile
  5196  0EA4  118C               	line	22
  5197                           ;LCD_hd44780u_qy_2004a.c: 22:   PORTCbits.RC2 = 0;
  5198                           	bcf	(14),2	;volatile
  5199  0EA5  110E               	line	23
  5200                           ;LCD_hd44780u_qy_2004a.c: 23:   PORTCbits.RC1 = 0;
  5201                           	bcf	(14),1	;volatile
  5202  0EA6  108E               	line	24
  5203                           ;LCD_hd44780u_qy_2004a.c: 24:   PORTCbits.RC0 = 0;
  5204                           	bcf	(14),0	;volatile
  5205  0EA7  100E               	line	25
  5206                           ;LCD_hd44780u_qy_2004a.c: 25:   PORTAbits.RA0=0;
  5207                           	bcf	(12),0	;volatile
  5208  0EA8  100C               	line	26
  5209                           ;LCD_hd44780u_qy_2004a.c: 26:   PORTAbits.RA1=0;
  5210                           	bcf	(12),1	;volatile
  5211  0EA9  108C               	line	27
  5212                           ;LCD_hd44780u_qy_2004a.c: 27:   PORTAbits.RA2=0;
  5213                           	bcf	(12),2	;volatile
  5214  0EAA  110C               	line	29
  5215                           ;LCD_hd44780u_qy_2004a.c: 29:   TRISAbits.TRISA0 = 0;
  5216                           	movlb 1	; select bank1
  5217  0EAB  0021               	bcf	(140)^080h,0	;volatile
  5218  0EAC  100C               	line	30
  5219                           ;LCD_hd44780u_qy_2004a.c: 30:   TRISAbits.TRISA1 = 0;
  5220                           	bcf	(140)^080h,1	;volatile
  5221  0EAD  108C               	line	31
  5222                           ;LCD_hd44780u_qy_2004a.c: 31:   TRISAbits.TRISA2 = 0;
  5223                           	bcf	(140)^080h,2	;volatile
  5224  0EAE  110C               	line	32
  5225                           ;LCD_hd44780u_qy_2004a.c: 32:   TRISAbits.TRISA3 = 0;
  5226                           	bcf	(140)^080h,3	;volatile
  5227  0EAF  118C               	line	33
  5228                           ;LCD_hd44780u_qy_2004a.c: 33:   TRISCbits.TRISC2 = 0;
  5229                           	bcf	(142)^080h,2	;volatile
  5230  0EB0  110E               	line	34
  5231                           ;LCD_hd44780u_qy_2004a.c: 34:   TRISCbits.TRISC1 = 0;
  5232                           	bcf	(142)^080h,1	;volatile
  5233  0EB1  108E               	line	35
  5234                           ;LCD_hd44780u_qy_2004a.c: 35:   TRISCbits.TRISC0 = 0;
  5235                           	bcf	(142)^080h,0	;volatile
  5236  0EB2  100E               	line	38
  5237                           ;LCD_hd44780u_qy_2004a.c: 38:   PORTAbits.RA0 = 0;
  5238                           	movlb 0	; select bank0
  5239  0EB3  0020               	bcf	(12),0	;volatile
  5240  0EB4  100C               	line	39
  5241                           ;LCD_hd44780u_qy_2004a.c: 39:   PORTAbits.RA1 = 0;
  5242                           	bcf	(12),1	;volatile
  5243  0EB5  108C               	line	40
  5244                           ;LCD_hd44780u_qy_2004a.c: 40:   PORTAbits.RA2 = 0;
  5245                           	bcf	(12),2	;volatile
  5246  0EB6  110C               	line	43
  5247                           	
  5248                           l3842:	
  5249  0EB7                     ;LCD_hd44780u_qy_2004a.c: 43:   _delay((unsigned long)((15)*(16000000/4000.0)));
  5250                           	opt asmopt_push
  5251                           opt asmopt_off
  5252                           movlw	78
  5253  0EB7  304E               	movlb 0	; select bank0
  5254  0EB8  0020               movwf	((??_initLCD+0)+0),f
  5255  0EB9  00BA               	movlw	235
  5256  0EBA  30EB               u3187:
  5257  0EBB                     decfsz	wreg
  5258  0EBB  0B89               	goto	u3187
  5259  0EBC  2EBB               	decfsz	((??_initLCD+0)+0),f
  5260  0EBD  0BBA               	goto	u3187
  5261  0EBE  2EBB               opt asmopt_pop
  5262                           
  5263                           	line	44
  5264                           	
  5265                           l3844:	
  5266  0EBF                     ;LCD_hd44780u_qy_2004a.c: 44:   setData(0x3);
  5267                           	movlw	low(03h)
  5268  0EBF  3003               	fcall	_setData
  5269  0EC0  318D  255E  318E   	line	45
  5270                           	
  5271                           l3846:	
  5272  0EC3                     ;LCD_hd44780u_qy_2004a.c: 45:   _delay((unsigned long)((5)*(16000000/4000.0)));
  5273                           	opt asmopt_push
  5274                           opt asmopt_off
  5275                           movlw	26
  5276  0EC3  301A               	movlb 0	; select bank0
  5277  0EC4  0020               movwf	((??_initLCD+0)+0),f
  5278  0EC5  00BA               	movlw	248
  5279  0EC6  30F8               u3197:
  5280  0EC7                     decfsz	wreg
  5281  0EC7  0B89               	goto	u3197
  5282  0EC8  2EC7               	decfsz	((??_initLCD+0)+0),f
  5283  0EC9  0BBA               	goto	u3197
  5284  0ECA  2EC7               	nop
  5285  0ECB  0000               opt asmopt_pop
  5286                           
  5287                           	line	46
  5288                           ;LCD_hd44780u_qy_2004a.c: 46:   setData(0x3);
  5289                           	movlw	low(03h)
  5290  0ECC  3003               	fcall	_setData
  5291  0ECD  318D  255E  318E   	line	47
  5292                           	
  5293                           l3848:	
  5294  0ED0                     ;LCD_hd44780u_qy_2004a.c: 47:   _delay((unsigned long)((150)*(16000000/4000000.0)));
  5295                           	opt asmopt_push
  5296                           opt asmopt_off
  5297                           	movlw	200
  5298  0ED0  30C8               u3207:
  5299  0ED1                     decfsz	wreg
  5300  0ED1  0B89               	goto	u3207
  5301  0ED2  2ED1               opt asmopt_pop
  5302                           
  5303                           	line	48
  5304                           	
  5305                           l3850:	
  5306  0ED3                     ;LCD_hd44780u_qy_2004a.c: 48:   setData(0x3);
  5307                           	movlw	low(03h)
  5308  0ED3  3003               	fcall	_setData
  5309  0ED4  318D  255E  318E   	line	49
  5310                           ;LCD_hd44780u_qy_2004a.c: 49:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  5311                           	opt asmopt_push
  5312                           opt asmopt_off
  5313                           	movlw	13
  5314  0ED7  300D               u3217:
  5315  0ED8                     decfsz	wreg
  5316  0ED8  0B89               	goto	u3217
  5317  0ED9  2ED8               	nop
  5318  0EDA  0000               opt asmopt_pop
  5319                           
  5320                           	line	50
  5321                           	
  5322                           l3852:	
  5323  0EDB                     ;LCD_hd44780u_qy_2004a.c: 50:   setData(0x2);
  5324                           	movlw	low(02h)
  5325  0EDB  3002               	fcall	_setData
  5326  0EDC  318D  255E  318E   	line	51
  5327                           	
  5328                           l3854:	
  5329  0EDF                     ;LCD_hd44780u_qy_2004a.c: 51:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  5330                           	opt asmopt_push
  5331                           opt asmopt_off
  5332                           	movlw	13
  5333  0EDF  300D               u3227:
  5334  0EE0                     decfsz	wreg
  5335  0EE0  0B89               	goto	u3227
  5336  0EE1  2EE0               	nop
  5337  0EE2  0000               opt asmopt_pop
  5338                           
  5339                           	line	52
  5340                           ;LCD_hd44780u_qy_2004a.c: 52:   writeInsChk(0x28);
  5341                           	movlw	low(028h)
  5342  0EE3  3028               	fcall	_writeInsChk
  5343  0EE4  318A  22EA  318E   	line	53
  5344                           	
  5345                           l3856:	
  5346  0EE7                     ;LCD_hd44780u_qy_2004a.c: 53:   mDisplayOnOffReg = 0x0F;
  5347                           	movlw	low(0Fh)
  5348  0EE7  300F               	movlb 0	; select bank0
  5349  0EE8  0020               	movwf	(??_initLCD+0)+0
  5350  0EE9  00BA               	movf	(??_initLCD+0)+0,w
  5351  0EEA  083A               	movwf	(_mDisplayOnOffReg)
  5352  0EEB  00DB               	line	54
  5353                           	
  5354                           l3858:	
  5355  0EEC                     ;LCD_hd44780u_qy_2004a.c: 54:   mCursorDisplayShiftReg= 0x06;
  5356                           	movlw	low(06h)
  5357  0EEC  3006               	movwf	(??_initLCD+0)+0
  5358  0EED  00BA               	movf	(??_initLCD+0)+0,w
  5359  0EEE  083A               	movwf	(_mCursorDisplayShiftReg)
  5360  0EEF  00DA               	line	55
  5361                           ;LCD_hd44780u_qy_2004a.c: 55:   writeInsChk(mDisplayOnOffReg);
  5362                           	movf	(_mDisplayOnOffReg),w
  5363  0EF0  085B               	fcall	_writeInsChk
  5364  0EF1  318A  22EA  318E   	line	57
  5365                           ;LCD_hd44780u_qy_2004a.c: 57:   clearDisplay();
  5366                           	fcall	_clearDisplay
  5367  0EF4  318A  22C1  318E   	line	58
  5368                           ;LCD_hd44780u_qy_2004a.c: 58:   writeInsChk(0x06);
  5369                           	movlw	low(06h)
  5370  0EF7  3006               	fcall	_writeInsChk
  5371  0EF8  318A  22EA  318E   	line	59
  5372                           	
  5373                           l3860:	
  5374  0EFB                     ;LCD_hd44780u_qy_2004a.c: 59:   mWritingPosition=1;
  5375                           	movlb 0	; select bank0
  5376  0EFB  0020               	clrf	(_mWritingPosition)
  5377  0EFC  01D9               	incf	(_mWritingPosition),f
  5378  0EFD  0AD9               	line	61
  5379                           	
  5380                           l337:	
  5381  0EFE                     	return
  5382  0EFE  0008               	opt stack 0
  5383                           GLOBAL	__end_of_initLCD
  5384                           	__end_of_initLCD:
  5385  0EFF                     	signat	_initLCD,89
  5386                           	global	_clearDisplay
  5387                           
  5388 ;; *************** function _clearDisplay *****************
  5389 ;; Defined at:
  5390 ;;		line 267 in file "LCD_hd44780u_qy_2004a.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;		None
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;		None
  5395 ;; Return value:  Size  Location     Type
  5396 ;;                  1    wreg      void 
  5397 ;; Registers used:
  5398 ;;		wreg, status,2, status,0, pclath, cstack
  5399 ;; Tracked objects:
  5400 ;;		On entry : 0/0
  5401 ;;		On exit  : 0/0
  5402 ;;		Unchanged: 0/0
  5403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5408 ;;Total ram usage:        0 bytes
  5409 ;; Hardware stack levels used:    1
  5410 ;; Hardware stack levels required when called:    7
  5411 ;; This function calls:
  5412 ;;		_writeInsChk
  5413 ;; This function is called by:
  5414 ;;		_main
  5415 ;;		_initLCD
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  5419                           	line	267
  5420                           global __ptext9
  5421                           __ptext9:	;psect for function _clearDisplay
  5422  0AC1                     psect	text9
  5423                           	file	"LCD_hd44780u_qy_2004a.c"
  5424                           	line	267
  5425                           	global	__size_of_clearDisplay
  5426                           	__size_of_clearDisplay	equ	__end_of_clearDisplay-_clearDisplay
  5427  0005                     	
  5428                           _clearDisplay:	
  5429  0AC1                     ;incstack = 0
  5430                           	opt	stack 7
  5431                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  5432                           	line	269
  5433                           	
  5434                           l3620:	
  5435  0AC1                     ;LCD_hd44780u_qy_2004a.c: 269:   writeInsChk(0x01);
  5436                           	movlw	low(01h)
  5437  0AC1  3001               	fcall	_writeInsChk
  5438  0AC2  318A  22EA  318A   	line	270
  5439                           	
  5440                           l429:	
  5441  0AC5                     	return
  5442  0AC5  0008               	opt stack 0
  5443                           GLOBAL	__end_of_clearDisplay
  5444                           	__end_of_clearDisplay:
  5445  0AC6                     	signat	_clearDisplay,89
  5446                           	global	_writeInsChk
  5447                           
  5448 ;; *************** function _writeInsChk *****************
  5449 ;; Defined at:
  5450 ;;		line 154 in file "LCD_hd44780u_qy_2004a.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;  iOpCode         1    wreg     unsigned char 
  5453 ;; Auto vars:     Size  Location     Type
  5454 ;;  iOpCode         1   25[BANK0 ] unsigned char 
  5455 ;; Return value:  Size  Location     Type
  5456 ;;                  1    wreg      void 
  5457 ;; Registers used:
  5458 ;;		wreg, status,2, status,0, pclath, cstack
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5465 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5467 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5468 ;;Total ram usage:        1 bytes
  5469 ;; Hardware stack levels used:    1
  5470 ;; Hardware stack levels required when called:    6
  5471 ;; This function calls:
  5472 ;;		_waitLCDBusy
  5473 ;;		_writeInsNoChk
  5474 ;; This function is called by:
  5475 ;;		_initLCD
  5476 ;;		_powerOnLcd
  5477 ;;		_setNotBlinkingCursor
  5478 ;;		_setCursorOff
  5479 ;;		_clearDisplay
  5480 ;;		_moveCursorToHome
  5481 ;;		_powerOffLcd
  5482 ;;		_setBlinkingCursor
  5483 ;;		_setCursorOn
  5484 ;;		_setCursorMovingLeft
  5485 ;;		_setCursorMovingRight
  5486 ;;		_setDisplayMovingRight
  5487 ;;		_setDisplayMovingLeft
  5488 ;;		_moveCursorRight
  5489 ;;		_moveCursorLeft
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5493                           	line	154
  5494                           global __ptext10
  5495                           __ptext10:	;psect for function _writeInsChk
  5496  0AEA                     psect	text10
  5497                           	file	"LCD_hd44780u_qy_2004a.c"
  5498                           	line	154
  5499                           	global	__size_of_writeInsChk
  5500                           	__size_of_writeInsChk	equ	__end_of_writeInsChk-_writeInsChk
  5501  000B                     	
  5502                           _writeInsChk:	
  5503  0AEA                     ;incstack = 0
  5504                           	opt	stack 8
  5505                           ; Regs used in _writeInsChk: [wreg+status,2+status,0+pclath+cstack]
  5506                           ;writeInsChk@iOpCode stored from wreg
  5507                           	movlb 0	; select bank0
  5508  0AEA  0020               	movwf	(writeInsChk@iOpCode)
  5509  0AEB  00B9               	line	156
  5510                           	
  5511                           l3476:	
  5512  0AEC                     ;LCD_hd44780u_qy_2004a.c: 154: void writeInsChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 55: {;LCD_hd44780u_qy_2004a.c: 156:   waitLCDBusy();
  5513                           	fcall	_waitLCDBusy
  5514  0AEC  318C  249A  318A   	line	157
  5515                           ;LCD_hd44780u_qy_2004a.c: 157:   writeInsNoChk(iOpCode);
  5516                           	movlb 0	; select bank0
  5517  0AEF  0020               	movf	(writeInsChk@iOpCode),w
  5518  0AF0  0839               	fcall	_writeInsNoChk
  5519  0AF1  318B  2316  318A   	line	158
  5520                           	
  5521                           l375:	
  5522  0AF4                     	return
  5523  0AF4  0008               	opt stack 0
  5524                           GLOBAL	__end_of_writeInsChk
  5525                           	__end_of_writeInsChk:
  5526  0AF5                     	signat	_writeInsChk,4217
  5527                           	global	_writeInsNoChk
  5528                           
  5529 ;; *************** function _writeInsNoChk *****************
  5530 ;; Defined at:
  5531 ;;		line 160 in file "LCD_hd44780u_qy_2004a.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;  iOpCode         1    wreg     unsigned char 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  iOpCode         1   24[BANK0 ] unsigned char 
  5536 ;; Return value:  Size  Location     Type
  5537 ;;                  1    wreg      void 
  5538 ;; Registers used:
  5539 ;;		wreg, status,2, status,0, pclath, cstack
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5546 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5547 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5548 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5549 ;;Total ram usage:        2 bytes
  5550 ;; Hardware stack levels used:    1
  5551 ;; Hardware stack levels required when called:    5
  5552 ;; This function calls:
  5553 ;;		_SetToSendDataToLCD
  5554 ;;		_setData
  5555 ;; This function is called by:
  5556 ;;		_writeInsChk
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  5560                           	line	160
  5561                           global __ptext11
  5562                           __ptext11:	;psect for function _writeInsNoChk
  5563  0B16                     psect	text11
  5564                           	file	"LCD_hd44780u_qy_2004a.c"
  5565                           	line	160
  5566                           	global	__size_of_writeInsNoChk
  5567                           	__size_of_writeInsNoChk	equ	__end_of_writeInsNoChk-_writeInsNoChk
  5568  0018                     	
  5569                           _writeInsNoChk:	
  5570  0B16                     ;incstack = 0
  5571                           	opt	stack 8
  5572                           ; Regs used in _writeInsNoChk: [wreg+status,2+status,0+pclath+cstack]
  5573                           ;writeInsNoChk@iOpCode stored from wreg
  5574                           	movlb 0	; select bank0
  5575  0B16  0020               	movwf	(writeInsNoChk@iOpCode)
  5576  0B17  00B8               	line	162
  5577                           	
  5578                           l3456:	
  5579  0B18                     ;LCD_hd44780u_qy_2004a.c: 160: void writeInsNoChk(char iOpCode);LCD_hd44780u_qy_2004a.c:
                                  161: {;LCD_hd44780u_qy_2004a.c: 162:   SetToSendDataToLCD();
  5580                           	fcall	_SetToSendDataToLCD
  5581  0B18  318A  22C6  318B   	line	163
  5582                           	
  5583                           l3458:	
  5584  0B1B                     ;LCD_hd44780u_qy_2004a.c: 163:   PORTAbits.RA0 = 0;
  5585                           	movlb 0	; select bank0
  5586  0B1B  0020               	bcf	(12),0	;volatile
  5587  0B1C  100C               	line	164
  5588                           	
  5589                           l3460:	
  5590  0B1D                     ;LCD_hd44780u_qy_2004a.c: 164:   PORTAbits.RA1 = 0;
  5591                           	bcf	(12),1	;volatile
  5592  0B1D  108C               	line	165
  5593                           	
  5594                           l3462:	
  5595  0B1E                     ;LCD_hd44780u_qy_2004a.c: 165:   setData(iOpCode >> 4);
  5596                           	movf	(writeInsNoChk@iOpCode),w
  5597  0B1E  0838               	movwf	(??_writeInsNoChk+0)+0
  5598  0B1F  00B7               	movlw	04h
  5599  0B20  3004               u2135:
  5600  0B21                     	lsrf	(??_writeInsNoChk+0)+0,f
  5601  0B21  36B7               	decfsz	wreg,f
  5602  0B22  0B89               	goto	u2135
  5603  0B23  2B21               	movf	0+(??_writeInsNoChk+0)+0,w
  5604  0B24  0837               	fcall	_setData
  5605  0B25  318D  255E  318B   	line	166
  5606                           	
  5607                           l3464:	
  5608  0B28                     ;LCD_hd44780u_qy_2004a.c: 166:   setData(iOpCode);
  5609                           	movlb 0	; select bank0
  5610  0B28  0020               	movf	(writeInsNoChk@iOpCode),w
  5611  0B29  0838               	fcall	_setData
  5612  0B2A  318D  255E  318B   	line	167
  5613                           	
  5614                           l378:	
  5615  0B2D                     	return
  5616  0B2D  0008               	opt stack 0
  5617                           GLOBAL	__end_of_writeInsNoChk
  5618                           	__end_of_writeInsNoChk:
  5619  0B2E                     	signat	_writeInsNoChk,4217
  5620                           	global	_ToggleBitRB5
  5621                           
  5622 ;; *************** function _ToggleBitRB5 *****************
  5623 ;; Defined at:
  5624 ;;		line 59 in file "161518_temp_main.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;		None
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;		None
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  1    wreg      void 
  5631 ;; Registers used:
  5632 ;;		None
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5642 ;;Total ram usage:        0 bytes
  5643 ;; Hardware stack levels used:    1
  5644 ;; Hardware stack levels required when called:    4
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		_main
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5652                           	file	"161518_temp_main.c"
  5653                           	line	59
  5654                           global __ptext12
  5655                           __ptext12:	;psect for function _ToggleBitRB5
  5656  0AE0                     psect	text12
  5657                           	file	"161518_temp_main.c"
  5658                           	line	59
  5659                           	global	__size_of_ToggleBitRB5
  5660                           	__size_of_ToggleBitRB5	equ	__end_of_ToggleBitRB5-_ToggleBitRB5
  5661  000A                     	
  5662                           _ToggleBitRB5:	
  5663  0AE0                     ;incstack = 0
  5664                           	opt	stack 11
  5665                           ; Regs used in _ToggleBitRB5: []
  5666                           	line	61
  5667                           	
  5668                           l3708:	
  5669  0AE0                     	movlb 0	; select bank0
  5670  0AE0  0020               	btfss	(13),5	;volatile
  5671  0AE1  1E8D               	goto	u2491
  5672  0AE2  2AE4               	goto	u2490
  5673  0AE3  2AE5               u2491:
  5674  0AE4                     	goto	l125
  5675  0AE4  2AE7               u2490:
  5676  0AE5                     	line	63
  5677                           	
  5678                           l3710:	
  5679  0AE5                     	bcf	(13),5	;volatile
  5680  0AE5  128D               	line	64
  5681                           	goto	l127
  5682  0AE6  2AE9               	line	65
  5683                           	
  5684                           l125:	
  5685  0AE7                     	line	67
  5686                           	bsf	(13),5	;volatile
  5687  0AE7  168D               	goto	l127
  5688  0AE8  2AE9               	line	68
  5689                           	
  5690                           l126:	
  5691  0AE9                     	line	69
  5692                           	
  5693                           l127:	
  5694  0AE9                     	return
  5695  0AE9  0008               	opt stack 0
  5696                           GLOBAL	__end_of_ToggleBitRB5
  5697                           	__end_of_ToggleBitRB5:
  5698  0AEA                     	signat	_ToggleBitRB5,89
  5699                           	global	_SetToGetTemp
  5700                           
  5701 ;; *************** function _SetToGetTemp *****************
  5702 ;; Defined at:
  5703 ;;		line 72 in file "161518_temp_main.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;		None
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;		None
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  1    wreg      void 
  5710 ;; Registers used:
  5711 ;;		wreg, status,2, status,0
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5719 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5720 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5721 ;;Total ram usage:        1 bytes
  5722 ;; Hardware stack levels used:    1
  5723 ;; Hardware stack levels required when called:    4
  5724 ;; This function calls:
  5725 ;;		Nothing
  5726 ;; This function is called by:
  5727 ;;		_main
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5731                           	line	72
  5732                           global __ptext13
  5733                           __ptext13:	;psect for function _SetToGetTemp
  5734  0BF0                     psect	text13
  5735                           	file	"161518_temp_main.c"
  5736                           	line	72
  5737                           	global	__size_of_SetToGetTemp
  5738                           	__size_of_SetToGetTemp	equ	__end_of_SetToGetTemp-_SetToGetTemp
  5739  0029                     	
  5740                           _SetToGetTemp:	
  5741  0BF0                     ;incstack = 0
  5742                           	opt	stack 11
  5743                           ; Regs used in _SetToGetTemp: [wreg+status,2+status,0]
  5744                           	line	74
  5745                           	
  5746                           l3712:	
  5747  0BF0                     	movlb 0	; select bank0
  5748  0BF0  0020               	clrf	(_wTrial)
  5749  0BF1  01D2               	line	75
  5750                           	
  5751                           l3714:	
  5752  0BF2                     	movf	((_wI2CTxBufferSize)),w
  5753  0BF2  0855               	btfss	status,2
  5754  0BF3  1D03               	goto	u2501
  5755  0BF4  2BF6               	goto	u2500
  5756  0BF5  2BF7               u2501:
  5757  0BF6                     	goto	l133
  5758  0BF6  2C18               u2500:
  5759  0BF7                     	line	77
  5760                           	
  5761                           l3716:	
  5762  0BF7                     	movlb 1	; select bank1
  5763  0BF7  0021               	bsf	(145)^080h,3	;volatile
  5764  0BF8  1591               	line	78
  5765                           	movlb 4	; select bank4
  5766  0BF9  0024               	bsf	(535)^0200h,7	;volatile
  5767  0BFA  1797               	line	79
  5768                           	
  5769                           l3718:	
  5770  0BFB                     	movlw	low(0B8h)
  5771  0BFB  30B8               	movlb 0	; select bank0
  5772  0BFC  0020               	movwf	(??_SetToGetTemp+0)+0
  5773  0BFD  00B4               	movf	(??_SetToGetTemp+0)+0,w
  5774  0BFE  0834               	movlb 1	; select bank1
  5775  0BFF  0021               	movwf	(_wI2CTxBuffer)^080h
  5776  0C00  00A7               	line	80
  5777                           	movlw	low(03h)
  5778  0C01  3003               	movlb 0	; select bank0
  5779  0C02  0020               	movwf	(??_SetToGetTemp+0)+0
  5780  0C03  00B4               	movf	(??_SetToGetTemp+0)+0,w
  5781  0C04  0834               	movlb 1	; select bank1
  5782  0C05  0021               	movwf	0+(_wI2CTxBuffer)^080h+01h
  5783  0C06  00A8               	line	81
  5784                           	
  5785                           l3720:	
  5786  0C07                     	clrf	0+(_wI2CTxBuffer)^080h+02h
  5787  0C07  01A9               	line	82
  5788                           	
  5789                           l3722:	
  5790  0C08                     	movlw	low(04h)
  5791  0C08  3004               	movlb 0	; select bank0
  5792  0C09  0020               	movwf	(??_SetToGetTemp+0)+0
  5793  0C0A  00B4               	movf	(??_SetToGetTemp+0)+0,w
  5794  0C0B  0834               	movlb 1	; select bank1
  5795  0C0C  0021               	movwf	0+(_wI2CTxBuffer)^080h+03h
  5796  0C0D  00AA               	line	83
  5797                           	
  5798                           l3724:	
  5799  0C0E                     	movlw	low(04h)
  5800  0C0E  3004               	movlb 0	; select bank0
  5801  0C0F  0020               	movwf	(??_SetToGetTemp+0)+0
  5802  0C10  00B4               	movf	(??_SetToGetTemp+0)+0,w
  5803  0C11  0834               	movwf	(_wI2CTxBufferSize)
  5804  0C12  00D5               	line	84
  5805                           	
  5806                           l3726:	
  5807  0C13                     	movlb 1	; select bank1
  5808  0C13  0021               	clrf	(_wI2CCommandState)^080h
  5809  0C14  01A6               	line	85
  5810                           	
  5811                           l3728:	
  5812  0C15                     	movlb 4	; select bank4
  5813  0C15  0024               	bsf	(534)^0200h,0	;volatile
  5814  0C16  1416               	goto	l133
  5815  0C17  2C18               	line	87
  5816                           	
  5817                           l132:	
  5818  0C18                     	line	88
  5819                           	
  5820                           l133:	
  5821  0C18                     	return
  5822  0C18  0008               	opt stack 0
  5823                           GLOBAL	__end_of_SetToGetTemp
  5824                           	__end_of_SetToGetTemp:
  5825  0C19                     	signat	_SetToGetTemp,89
  5826                           	global	_Send_UART_Data
  5827                           
  5828 ;; *************** function _Send_UART_Data *****************
  5829 ;; Defined at:
  5830 ;;		line 195 in file "161518_temp_main.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;  iData           1    wreg     PTR unsigned char 
  5833 ;;		 -> gUartTXBuffer(50), 
  5834 ;;  iData_Length    1   30[BANK0 ] unsigned char 
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;  iData           1   34[BANK0 ] PTR unsigned char 
  5837 ;;		 -> gUartTXBuffer(50), 
  5838 ;; Return value:  Size  Location     Type
  5839 ;;                  1    wreg      void 
  5840 ;; Registers used:
  5841 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5842 ;; Tracked objects:
  5843 ;;		On entry : 0/0
  5844 ;;		On exit  : 0/0
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5847 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5848 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5849 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  5850 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  5851 ;;Total ram usage:        5 bytes
  5852 ;; Hardware stack levels used:    1
  5853 ;; Hardware stack levels required when called:    5
  5854 ;; This function calls:
  5855 ;;		_memcpy
  5856 ;; This function is called by:
  5857 ;;		_main
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5861                           	line	195
  5862                           global __ptext14
  5863                           __ptext14:	;psect for function _Send_UART_Data
  5864  0C43                     psect	text14
  5865                           	file	"161518_temp_main.c"
  5866                           	line	195
  5867                           	global	__size_of_Send_UART_Data
  5868                           	__size_of_Send_UART_Data	equ	__end_of_Send_UART_Data-_Send_UART_Data
  5869  002B                     	
  5870                           _Send_UART_Data:	
  5871  0C43                     ;incstack = 0
  5872                           	opt	stack 10
  5873                           ; Regs used in _Send_UART_Data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5874                           ;Send_UART_Data@iData stored from wreg
  5875                           	movlb 0	; select bank0
  5876  0C43  0020               	movwf	(Send_UART_Data@iData)
  5877  0C44  00C2               	line	197
  5878                           	
  5879                           l3816:	
  5880  0C45                     	movf	((_gTxTransmitSize)),w
  5881  0C45  0851               	btfsc	status,2
  5882  0C46  1903               	goto	u2601
  5883  0C47  2C49               	goto	u2600
  5884  0C48  2C4A               u2601:
  5885  0C49                     	goto	l3820
  5886  0C49  2C4C               u2600:
  5887  0C4A                     	goto	l166
  5888  0C4A  2C6D               	line	199
  5889                           	
  5890                           l3818:	
  5891  0C4B                     	goto	l166
  5892  0C4B  2C6D               	line	200
  5893                           	
  5894                           l165:	
  5895  0C4C                     	line	201
  5896                           	
  5897                           l3820:	
  5898  0C4C                     	clrf	(_gTxReadingPosition)
  5899  0C4C  01D0               	line	202
  5900                           	
  5901                           l3822:	
  5902  0C4D                     	movf	(Send_UART_Data@iData_Length),w
  5903  0C4D  083E               	movwf	(??_Send_UART_Data+0)+0
  5904  0C4E  00BF               	movf	(??_Send_UART_Data+0)+0,w
  5905  0C4F  083F               	movwf	(_gTxTransmitSize)
  5906  0C50  00D1               	line	203
  5907                           	
  5908                           l3824:	
  5909  0C51                     	movlw	low(8944)
  5910  0C51  30F0               	movwf	(memcpy@d1)
  5911  0C52  00B4               	movlw	high(8944)
  5912  0C53  3022               	movwf	((memcpy@d1))+1
  5913  0C54  00B5               	movf	(Send_UART_Data@iData),w
  5914  0C55  0842               	movwf	(??_Send_UART_Data+0)+0
  5915  0C56  00BF               	movf	(??_Send_UART_Data+0)+0,w
  5916  0C57  083F               	movwf	(memcpy@s1)
  5917  0C58  00B6               	movf	(Send_UART_Data@iData_Length),w
  5918  0C59  083E               	movwf	(??_Send_UART_Data+1)+0
  5919  0C5A  00C0               	clrf	(??_Send_UART_Data+1)+0+1
  5920  0C5B  01C1               	movf	0+(??_Send_UART_Data+1)+0,w
  5921  0C5C  0840               	movwf	(memcpy@n)
  5922  0C5D  00B7               	movf	1+(??_Send_UART_Data+1)+0,w
  5923  0C5E  0841               	movwf	(memcpy@n+1)
  5924  0C5F  00B8               	fcall	_memcpy
  5925  0C60  318C  24F5  318C   	line	205
  5926                           	
  5927                           l3826:	
  5928  0C63                     	movlb 3	; select bank3
  5929  0C63  0023               	clrf	(412)^0180h	;volatile
  5930  0C64  019C               	line	206
  5931                           	
  5932                           l3828:	
  5933  0C65                     	movlw	low(01h)
  5934  0C65  3001               	movwf	(411)^0180h	;volatile
  5935  0C66  009B               	line	207
  5936                           	
  5937                           l3830:	
  5938  0C67                     	bcf	(398)^0180h,6	;volatile
  5939  0C67  130E               	line	208
  5940                           	
  5941                           l3832:	
  5942  0C68                     	bsf	(414)^0180h,5	;volatile
  5943  0C68  169E               	line	209
  5944                           	
  5945                           l3834:	
  5946  0C69                     	bcf	(414)^0180h,4	;volatile
  5947  0C69  121E               	line	210
  5948                           	
  5949                           l3836:	
  5950  0C6A                     	bsf	(413)^0180h,7	;volatile
  5951  0C6A  179D               	line	211
  5952                           	
  5953                           l3838:	
  5954  0C6B                     	movlb 1	; select bank1
  5955  0C6B  0021               	bsf	(145)^080h,4	;volatile
  5956  0C6C  1611               	line	213
  5957                           	
  5958                           l166:	
  5959  0C6D                     	return
  5960  0C6D  0008               	opt stack 0
  5961                           GLOBAL	__end_of_Send_UART_Data
  5962                           	__end_of_Send_UART_Data:
  5963  0C6E                     	signat	_Send_UART_Data,8313
  5964                           	global	_memcpy
  5965                           
  5966 ;; *************** function _memcpy *****************
  5967 ;; Defined at:
  5968 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  d1              2   20[BANK0 ] PTR void 
  5971 ;;		 -> gTxBuffer(256), 
  5972 ;;  s1              1   22[BANK0 ] PTR const void 
  5973 ;;		 -> gUartTXBuffer(50), 
  5974 ;;  n               2   23[BANK0 ] unsigned int 
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;  d               2   27[BANK0 ] PTR unsigned char 
  5977 ;;		 -> gTxBuffer(256), 
  5978 ;;  s               1   29[BANK0 ] PTR const unsigned char 
  5979 ;;		 -> gUartTXBuffer(50), 
  5980 ;;  tmp             1   26[BANK0 ] unsigned char 
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  2   20[BANK0 ] PTR void 
  5983 ;; Registers used:
  5984 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5990 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  5991 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  5992 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5993 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  5994 ;;Total ram usage:       10 bytes
  5995 ;; Hardware stack levels used:    1
  5996 ;; Hardware stack levels required when called:    4
  5997 ;; This function calls:
  5998 ;;		Nothing
  5999 ;; This function is called by:
  6000 ;;		_Send_UART_Data
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           psect	text15,local,class=CODE,delta=2,merge=1,group=2
  6004                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
  6005                           	line	4
  6006                           global __ptext15
  6007                           __ptext15:	;psect for function _memcpy
  6008  0CF5                     psect	text15
  6009                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
  6010                           	line	4
  6011                           	global	__size_of_memcpy
  6012                           	__size_of_memcpy	equ	__end_of_memcpy-_memcpy
  6013  002F                     	
  6014                           _memcpy:	
  6015  0CF5                     ;incstack = 0
  6016                           	opt	stack 10
  6017                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  6018                           	line	11
  6019                           	
  6020                           l3608:	
  6021  0CF5                     	movlb 0	; select bank0
  6022  0CF5  0020               	movf	(memcpy@s1),w
  6023  0CF6  0836               	movwf	(??_memcpy+0)+0
  6024  0CF7  00B9               	movf	(??_memcpy+0)+0,w
  6025  0CF8  0839               	movwf	(memcpy@s)
  6026  0CF9  00BD               	line	12
  6027                           	movf	(memcpy@d1+1),w
  6028  0CFA  0835               	movwf	(memcpy@d+1)
  6029  0CFB  00BC               	movf	(memcpy@d1),w
  6030  0CFC  0834               	movwf	(memcpy@d)
  6031  0CFD  00BB               	line	13
  6032                           	goto	l3618
  6033  0CFE  2D16               	
  6034                           l881:	
  6035  0CFF                     	line	14
  6036                           	
  6037                           l3610:	
  6038  0CFF                     	movf	(memcpy@s),w
  6039  0CFF  083D               	movwf	fsr1l
  6040  0D00  0086               	movlw 1	; select bank2/3
  6041  0D01  3001               	movwf fsr1h	
  6042  0D02  0087               	
  6043                           	movf	indf1,w
  6044  0D03  0801               	movwf	(??_memcpy+0)+0
  6045  0D04  00B9               	movf	(??_memcpy+0)+0,w
  6046  0D05  0839               	movwf	(memcpy@tmp)
  6047  0D06  00BA               	
  6048                           l3612:	
  6049  0D07                     	movlw	low(01h)
  6050  0D07  3001               	movwf	(??_memcpy+0)+0
  6051  0D08  00B9               	movf	(??_memcpy+0)+0,w
  6052  0D09  0839               	addwf	(memcpy@s),f
  6053  0D0A  07BD               	line	15
  6054                           	
  6055                           l3614:	
  6056  0D0B                     	movf	(memcpy@d),w
  6057  0D0B  083B               	movwf	fsr1l
  6058  0D0C  0086               	movf	(memcpy@d+1),w
  6059  0D0D  083C               	movwf	fsr1h
  6060  0D0E  0087               	movf	(memcpy@tmp),w
  6061  0D0F  083A               	movwf	indf1
  6062  0D10  0081               	
  6063                           l3616:	
  6064  0D11                     	movlw	01h
  6065  0D11  3001               	addwf	(memcpy@d),f
  6066  0D12  07BB               	movlw	0
  6067  0D13  3000               	addwfc	(memcpy@d+1),f
  6068  0D14  3DBC               	goto	l3618
  6069  0D15  2D16               	line	16
  6070                           	
  6071                           l880:	
  6072  0D16                     	line	13
  6073                           	
  6074                           l3618:	
  6075  0D16                     	movlw	01h
  6076  0D16  3001               	subwf	(memcpy@n),f
  6077  0D17  02B7               	movlw	0
  6078  0D18  3000               	subwfb	(memcpy@n+1),f
  6079  0D19  3BB8               		incf	(((memcpy@n))),w
  6080  0D1A  0A37               	skipz
  6081  0D1B  1D03               	goto	u2291
  6082  0D1C  2D21               	incf	(((memcpy@n+1))),w
  6083  0D1D  0A38               	btfss	status,2
  6084  0D1E  1D03               	goto	u2291
  6085  0D1F  2D21               	goto	u2290
  6086  0D20  2D22               u2291:
  6087  0D21                     	goto	l3610
  6088  0D21  2CFF               u2290:
  6089  0D22                     	goto	l883
  6090  0D22  2D23               	
  6091                           l882:	
  6092  0D23                     	line	18
  6093                           ;	Return value of _memcpy is never used
  6094                           	
  6095                           l883:	
  6096  0D23                     	return
  6097  0D23  0008               	opt stack 0
  6098                           GLOBAL	__end_of_memcpy
  6099                           	__end_of_memcpy:
  6100  0D24                     	signat	_memcpy,12409
  6101                           	global	_PrintLog
  6102                           
  6103 ;; *************** function _PrintLog *****************
  6104 ;; Defined at:
  6105 ;;		line 124 in file "161518_temp_main.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  iText           1    wreg     PTR unsigned char 
  6108 ;;		 -> wInterruptText(75), 
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;  iText           1   42[BANK0 ] PTR unsigned char 
  6111 ;;		 -> wInterruptText(75), 
  6112 ;;  wInterruptTe    1   41[BANK0 ] unsigned char 
  6113 ;; Return value:  Size  Location     Type
  6114 ;;                  1    wreg      void 
  6115 ;; Registers used:
  6116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/0
  6119 ;;		On exit  : 0/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6123 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6124 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6125 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6126 ;;Total ram usage:        4 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; Hardware stack levels required when called:    9
  6129 ;; This function calls:
  6130 ;;		_lcdWriteText
  6131 ;;		_memset
  6132 ;;		_strlen
  6133 ;; This function is called by:
  6134 ;;		_main
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  6138                           	file	"161518_temp_main.c"
  6139                           	line	124
  6140                           global __ptext16
  6141                           __ptext16:	;psect for function _PrintLog
  6142  0CC7                     psect	text16
  6143                           	file	"161518_temp_main.c"
  6144                           	line	124
  6145                           	global	__size_of_PrintLog
  6146                           	__size_of_PrintLog	equ	__end_of_PrintLog-_PrintLog
  6147  002E                     	
  6148                           _PrintLog:	
  6149  0CC7                     ;incstack = 0
  6150                           	opt	stack 6
  6151                           ; Regs used in _PrintLog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6152                           ;PrintLog@iText stored from wreg
  6153                           	movlb 0	; select bank0
  6154  0CC7  0020               	movwf	(PrintLog@iText)
  6155  0CC8  00CA               	line	126
  6156                           	
  6157                           l3754:	
  6158  0CC9                     	movf	(PrintLog@iText),w
  6159  0CC9  084A               	movwf	(strlen@s)
  6160  0CCA  00B4               	movlw	0x2
  6161  0CCB  3002               
  6162                           	movwf	(strlen@s+1)
  6163  0CCC  00B5               	fcall	_strlen
  6164  0CCD  318B  23A7  318C   	movlb 0	; select bank0
  6165  0CD0  0020               	movf	(0+(?_strlen)),w
  6166  0CD1  0834               	movwf	(??_PrintLog+0)+0
  6167  0CD2  00C7               	movf	(??_PrintLog+0)+0,w
  6168  0CD3  0847               	movwf	(PrintLog@wInterruptTextLen)
  6169  0CD4  00C9               	line	128
  6170                           	
  6171                           l3756:	
  6172  0CD5                     	movf	((PrintLog@wInterruptTextLen)),w
  6173  0CD5  0849               	btfsc	status,2
  6174  0CD6  1903               	goto	u2531
  6175  0CD7  2CD9               	goto	u2530
  6176  0CD8  2CDA               u2531:
  6177  0CD9                     	goto	l149
  6178  0CD9  2CF4               u2530:
  6179  0CDA                     	line	130
  6180                           	
  6181                           l3758:	
  6182  0CDA                     	movf	(PrintLog@iText),w
  6183  0CDA  084A               	movwf	(lcdWriteText@iText)
  6184  0CDB  00C1               	movlw	0x2
  6185  0CDC  3002               
  6186                           	movwf	(lcdWriteText@iText+1)
  6187  0CDD  00C2               	fcall	_lcdWriteText
  6188  0CDE  318C  2419  318C   	line	131
  6189                           	
  6190                           l3760:	
  6191  0CE1                     	movlb 0	; select bank0
  6192  0CE1  0020               	movf	(PrintLog@iText),w
  6193  0CE2  084A               	movwf	(memset@dest)
  6194  0CE3  00B4               	movlw	0x2
  6195  0CE4  3002               
  6196                           	movwf	(memset@dest+1)
  6197  0CE5  00B5               	movlw	0
  6198  0CE6  3000               	movwf	(memset@c)
  6199  0CE7  00B6               	movwf	(memset@c+1)
  6200  0CE8  00B7               	movf	(PrintLog@wInterruptTextLen),w
  6201  0CE9  0849               	movwf	(??_PrintLog+0)+0
  6202  0CEA  00C7               	clrf	(??_PrintLog+0)+0+1
  6203  0CEB  01C8               	movf	0+(??_PrintLog+0)+0,w
  6204  0CEC  0847               	movwf	(memset@n)
  6205  0CED  00B8               	movf	1+(??_PrintLog+0)+0,w
  6206  0CEE  0848               	movwf	(memset@n+1)
  6207  0CEF  00B9               	fcall	_memset
  6208  0CF0  3186  2621  318C   	goto	l149
  6209  0CF3  2CF4               	line	132
  6210                           	
  6211                           l148:	
  6212  0CF4                     	line	133
  6213                           	
  6214                           l149:	
  6215  0CF4                     	return
  6216  0CF4  0008               	opt stack 0
  6217                           GLOBAL	__end_of_PrintLog
  6218                           	__end_of_PrintLog:
  6219  0CF5                     	signat	_PrintLog,4217
  6220                           	global	_lcdWriteText
  6221                           
  6222 ;; *************** function _lcdWriteText *****************
  6223 ;; Defined at:
  6224 ;;		line 63 in file "LCD_hd44780u_qy_2004a.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;  iText           2   33[BANK0 ] PTR unsigned char 
  6227 ;;		 -> STR_9(16), STR_8(17), STR_7(17), STR_6(17), 
  6228 ;;		 -> STR_5(16), STR_4(17), STR_3(16), main@wReadout(20), 
  6229 ;;		 -> main@wConv(4), wInterruptText(75), 
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;  wCharReading    1   38[BANK0 ] unsigned char 
  6232 ;; Return value:  Size  Location     Type
  6233 ;;                  1    wreg      void 
  6234 ;; Registers used:
  6235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6241 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6242 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6243 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  6244 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  6245 ;;Total ram usage:        6 bytes
  6246 ;; Hardware stack levels used:    1
  6247 ;; Hardware stack levels required when called:    8
  6248 ;; This function calls:
  6249 ;;		_writeTxtChk
  6250 ;; This function is called by:
  6251 ;;		_PrintLog
  6252 ;;		_main
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  6256                           	file	"LCD_hd44780u_qy_2004a.c"
  6257                           	line	63
  6258                           global __ptext17
  6259                           __ptext17:	;psect for function _lcdWriteText
  6260  0C19                     psect	text17
  6261                           	file	"LCD_hd44780u_qy_2004a.c"
  6262                           	line	63
  6263                           	global	__size_of_lcdWriteText
  6264                           	__size_of_lcdWriteText	equ	__end_of_lcdWriteText-_lcdWriteText
  6265  002A                     	
  6266                           _lcdWriteText:	
  6267  0C19                     ;incstack = 0
  6268                           	opt	stack 7
  6269                           ; Regs used in _lcdWriteText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6270                           	line	65
  6271                           	
  6272                           l3600:	
  6273  0C19                     ;LCD_hd44780u_qy_2004a.c: 63: void lcdWriteText(char *iText);LCD_hd44780u_qy_2004a.c: 64
                                 :  {;LCD_hd44780u_qy_2004a.c: 65:   unsigned char wCharReadingPos = 0;
  6274                           	movlb 0	; select bank0
  6275  0C19  0020               	clrf	(lcdWriteText@wCharReadingPos)
  6276  0C1A  01C6               	line	66
  6277                           ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
  6278                           	goto	l3606
  6279  0C1B  2C31               	
  6280                           l341:	
  6281  0C1C                     	line	68
  6282                           	
  6283                           l3602:	
  6284  0C1C                     ;LCD_hd44780u_qy_2004a.c: 67:   {;LCD_hd44780u_qy_2004a.c: 68:     writeTxtChk(iText[wCh
                                 arReadingPos]);
  6285                           	movf	(lcdWriteText@iText+1),w
  6286  0C1C  0842               	movwf	(??_lcdWriteText+0)+0+1
  6287  0C1D  00C4               	movf	(lcdWriteText@iText),w
  6288  0C1E  0841               	movwf	(??_lcdWriteText+0)+0
  6289  0C1F  00C3               	movf	(lcdWriteText@wCharReadingPos),w
  6290  0C20  0846               	addwf	(??_lcdWriteText+0)+0,w
  6291  0C21  0743               	movwf	fsr0l
  6292  0C22  0084               	movf	(??_lcdWriteText+0)+1,w
  6293  0C23  0844               	skipnc
  6294  0C24  1803               	incf	(??_lcdWriteText+0)+1,w
  6295  0C25  0A44               	movwf	fsr0h
  6296  0C26  0085               
  6297                           	movf	indf0,w ;code access
  6298  0C27  0800               	fcall	_writeTxtChk
  6299  0C28  318F  2769  318C   	line	69
  6300                           	
  6301                           l3604:	
  6302  0C2B                     ;LCD_hd44780u_qy_2004a.c: 69:     wCharReadingPos++;
  6303                           	movlw	low(01h)
  6304  0C2B  3001               	movlb 0	; select bank0
  6305  0C2C  0020               	movwf	(??_lcdWriteText+0)+0
  6306  0C2D  00C3               	movf	(??_lcdWriteText+0)+0,w
  6307  0C2E  0843               	addwf	(lcdWriteText@wCharReadingPos),f
  6308  0C2F  07C6               	goto	l3606
  6309  0C30  2C31               	line	70
  6310                           ;LCD_hd44780u_qy_2004a.c: 70:   }
  6311                           	
  6312                           l340:	
  6313  0C31                     	line	66
  6314                           	
  6315                           l3606:	
  6316  0C31                     ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
  6317                           	movf	(lcdWriteText@iText+1),w
  6318  0C31  0842               	movwf	(??_lcdWriteText+0)+0+1
  6319  0C32  00C4               	movf	(lcdWriteText@iText),w
  6320  0C33  0841               	movwf	(??_lcdWriteText+0)+0
  6321  0C34  00C3               	movf	(lcdWriteText@wCharReadingPos),w
  6322  0C35  0846               	addwf	(??_lcdWriteText+0)+0,w
  6323  0C36  0743               	movwf	fsr0l
  6324  0C37  0084               	movf	(??_lcdWriteText+0)+1,w
  6325  0C38  0844               	skipnc
  6326  0C39  1803               	incf	(??_lcdWriteText+0)+1,w
  6327  0C3A  0A44               	movwf	fsr0h
  6328  0C3B  0085               
  6329                           	moviw	fsr0++
  6330  0C3C  0012               	btfss	status,2
  6331  0C3D  1D03               	goto	u2281
  6332  0C3E  2C40               	goto	u2280
  6333  0C3F  2C41               u2281:
  6334  0C40                     	goto	l3602
  6335  0C40  2C1C               u2280:
  6336  0C41                     	goto	l343
  6337  0C41  2C42               	
  6338                           l342:	
  6339  0C42                     	line	72
  6340                           	
  6341                           l343:	
  6342  0C42                     	return
  6343  0C42  0008               	opt stack 0
  6344                           GLOBAL	__end_of_lcdWriteText
  6345                           	__end_of_lcdWriteText:
  6346  0C43                     	signat	_lcdWriteText,4217
  6347                           	global	_writeTxtChk
  6348                           
  6349 ;; *************** function _writeTxtChk *****************
  6350 ;; Defined at:
  6351 ;;		line 101 in file "LCD_hd44780u_qy_2004a.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  iOpCode         1    wreg     unsigned char 
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;  iOpCode         1   32[BANK0 ] unsigned char 
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  1    wreg      void 
  6358 ;; Registers used:
  6359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6367 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6368 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  6369 ;;Total ram usage:        3 bytes
  6370 ;; Hardware stack levels used:    1
  6371 ;; Hardware stack levels required when called:    7
  6372 ;; This function calls:
  6373 ;;		_SetToSendDataToLCD
  6374 ;;		_setCursorPosition
  6375 ;;		_setData
  6376 ;;		_waitLCDBusy
  6377 ;; This function is called by:
  6378 ;;		_lcdWriteText
  6379 ;;		_lcdWriteRotText
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  6383                           	line	101
  6384                           global __ptext18
  6385                           __ptext18:	;psect for function _writeTxtChk
  6386  0F69                     psect	text18
  6387                           	file	"LCD_hd44780u_qy_2004a.c"
  6388                           	line	101
  6389                           	global	__size_of_writeTxtChk
  6390                           	__size_of_writeTxtChk	equ	__end_of_writeTxtChk-_writeTxtChk
  6391  0097                     	
  6392                           _writeTxtChk:	
  6393  0F69                     ;incstack = 0
  6394                           	opt	stack 7
  6395                           ; Regs used in _writeTxtChk: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6396                           ;writeTxtChk@iOpCode stored from wreg
  6397                           	movlb 0	; select bank0
  6398  0F69  0020               	movwf	(writeTxtChk@iOpCode)
  6399  0F6A  00C0               	line	103
  6400                           	
  6401                           l3478:	
  6402  0F6B                     ;LCD_hd44780u_qy_2004a.c: 101: void writeTxtChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 02: {;LCD_hd44780u_qy_2004a.c: 103:   SetToSendDataToLCD();
  6403                           	fcall	_SetToSendDataToLCD
  6404  0F6B  318A  22C6  318F   	line	104
  6405                           	
  6406                           l3480:	
  6407  0F6E                     ;LCD_hd44780u_qy_2004a.c: 104:   PORTAbits.RA0 = 1;
  6408                           	movlb 0	; select bank0
  6409  0F6E  0020               	bsf	(12),0	;volatile
  6410  0F6F  140C               	line	105
  6411                           	
  6412                           l3482:	
  6413  0F70                     ;LCD_hd44780u_qy_2004a.c: 105:   PORTAbits.RA1 = 0;
  6414                           	bcf	(12),1	;volatile
  6415  0F70  108C               	line	106
  6416                           	
  6417                           l3484:	
  6418  0F71                     ;LCD_hd44780u_qy_2004a.c: 106:   if(iOpCode == '\n')
  6419                           		movlw	10
  6420  0F71  300A               	xorwf	((writeTxtChk@iOpCode)),w
  6421  0F72  0640               	btfss	status,2
  6422  0F73  1D03               	goto	u2151
  6423  0F74  2F76               	goto	u2150
  6424  0F75  2F77               u2151:
  6425  0F76                     	goto	l3514
  6426  0F76  2FC9               u2150:
  6427  0F77                     	line	108
  6428                           	
  6429                           l3486:	
  6430  0F77                     ;LCD_hd44780u_qy_2004a.c: 107:   {;LCD_hd44780u_qy_2004a.c: 108:    if(mWritingPosition 
                                 < 20)
  6431                           	movlw	low(014h)
  6432  0F77  3014               	subwf	(_mWritingPosition),w
  6433  0F78  0259               	skipnc
  6434  0F79  1803               	goto	u2161
  6435  0F7A  2F7C               	goto	u2160
  6436  0F7B  2F7D               u2161:
  6437  0F7C                     	goto	l3490
  6438  0F7C  2F83               u2160:
  6439  0F7D                     	line	110
  6440                           	
  6441                           l3488:	
  6442  0F7D                     ;LCD_hd44780u_qy_2004a.c: 109:    {;LCD_hd44780u_qy_2004a.c: 110:        setCursorPositi
                                 on(1,0);
  6443                           	clrf	(setCursorPosition@iPosition)
  6444  0F7D  01B9               	movlw	low(01h)
  6445  0F7E  3001               	fcall	_setCursorPosition
  6446  0F7F  318E  263B  318F   	line	111
  6447                           ;LCD_hd44780u_qy_2004a.c: 111:    }
  6448                           	goto	l365
  6449  0F82  2FFF               	line	112
  6450                           ;LCD_hd44780u_qy_2004a.c: 112:    else if(mWritingPosition < 40)
  6451                           	
  6452                           l359:	
  6453  0F83                     	
  6454                           l3490:	
  6455  0F83                     	movlw	low(028h)
  6456  0F83  3028               	movlb 0	; select bank0
  6457  0F84  0020               	subwf	(_mWritingPosition),w
  6458  0F85  0259               	skipnc
  6459  0F86  1803               	goto	u2171
  6460  0F87  2F89               	goto	u2170
  6461  0F88  2F8A               u2171:
  6462  0F89                     	goto	l3494
  6463  0F89  2F90               u2170:
  6464  0F8A                     	line	114
  6465                           	
  6466                           l3492:	
  6467  0F8A                     ;LCD_hd44780u_qy_2004a.c: 113:    {;LCD_hd44780u_qy_2004a.c: 114:        setCursorPositi
                                 on(2,0);
  6468                           	clrf	(setCursorPosition@iPosition)
  6469  0F8A  01B9               	movlw	low(02h)
  6470  0F8B  3002               	fcall	_setCursorPosition
  6471  0F8C  318E  263B  318F   	line	115
  6472                           ;LCD_hd44780u_qy_2004a.c: 115:    }
  6473                           	goto	l365
  6474  0F8F  2FFF               	line	116
  6475                           ;LCD_hd44780u_qy_2004a.c: 116:    else if(mWritingPosition < 60)
  6476                           	
  6477                           l361:	
  6478  0F90                     	
  6479                           l3494:	
  6480  0F90                     	movlw	low(03Ch)
  6481  0F90  303C               	movlb 0	; select bank0
  6482  0F91  0020               	subwf	(_mWritingPosition),w
  6483  0F92  0259               	skipnc
  6484  0F93  1803               	goto	u2181
  6485  0F94  2F96               	goto	u2180
  6486  0F95  2F97               u2181:
  6487  0F96                     	goto	l3498
  6488  0F96  2F9D               u2180:
  6489  0F97                     	line	118
  6490                           	
  6491                           l3496:	
  6492  0F97                     ;LCD_hd44780u_qy_2004a.c: 117:    {;LCD_hd44780u_qy_2004a.c: 118:        setCursorPositi
                                 on(3,0);
  6493                           	clrf	(setCursorPosition@iPosition)
  6494  0F97  01B9               	movlw	low(03h)
  6495  0F98  3003               	fcall	_setCursorPosition
  6496  0F99  318E  263B  318F   	line	119
  6497                           ;LCD_hd44780u_qy_2004a.c: 119:    }
  6498                           	goto	l365
  6499  0F9C  2FFF               	line	120
  6500                           ;LCD_hd44780u_qy_2004a.c: 120:    else
  6501                           	
  6502                           l363:	
  6503  0F9D                     	line	122
  6504                           	
  6505                           l3498:	
  6506  0F9D                     ;LCD_hd44780u_qy_2004a.c: 121:    {;LCD_hd44780u_qy_2004a.c: 122:        setCursorPositi
                                 on(0,0);
  6507                           	movlb 0	; select bank0
  6508  0F9D  0020               	clrf	(setCursorPosition@iPosition)
  6509  0F9E  01B9               	movlw	low(0)
  6510  0F9F  3000               	fcall	_setCursorPosition
  6511  0FA0  318E  263B  318F   	goto	l365
  6512  0FA3  2FFF               	line	123
  6513                           ;LCD_hd44780u_qy_2004a.c: 123:    }
  6514                           	
  6515                           l364:	
  6516  0FA4                     	goto	l365
  6517  0FA4  2FFF               	
  6518                           l362:	
  6519  0FA5                     	goto	l365
  6520  0FA5  2FFF               	
  6521                           l360:	
  6522  0FA6                     	goto	l365
  6523  0FA6  2FFF               	line	124
  6524                           	
  6525                           l3500:	
  6526  0FA7                     ;LCD_hd44780u_qy_2004a.c: 124:    return;
  6527                           	goto	l365
  6528  0FA7  2FFF               	line	125
  6529                           ;LCD_hd44780u_qy_2004a.c: 125:   }
  6530                           	
  6531                           l358:	
  6532  0FA8                     	line	126
  6533                           ;LCD_hd44780u_qy_2004a.c: 126:   switch(mWritingPosition)
  6534                           	goto	l3514
  6535  0FA8  2FC9               	line	128
  6536                           ;LCD_hd44780u_qy_2004a.c: 127:   {;LCD_hd44780u_qy_2004a.c: 128:     case 20:
  6537                           	
  6538                           l367:	
  6539  0FA9                     	line	129
  6540                           	
  6541                           l3502:	
  6542  0FA9                     ;LCD_hd44780u_qy_2004a.c: 129:       setCursorPosition(1,0);
  6543                           	movlb 0	; select bank0
  6544  0FA9  0020               	clrf	(setCursorPosition@iPosition)
  6545  0FAA  01B9               	movlw	low(01h)
  6546  0FAB  3001               	fcall	_setCursorPosition
  6547  0FAC  318E  263B  318F   	line	130
  6548                           ;LCD_hd44780u_qy_2004a.c: 130:       break;
  6549                           	goto	l3516
  6550  0FAF  2FE0               	line	131
  6551                           ;LCD_hd44780u_qy_2004a.c: 131:     case 40:
  6552                           	
  6553                           l369:	
  6554  0FB0                     	line	132
  6555                           	
  6556                           l3504:	
  6557  0FB0                     ;LCD_hd44780u_qy_2004a.c: 132:       setCursorPosition(2,0);
  6558                           	movlb 0	; select bank0
  6559  0FB0  0020               	clrf	(setCursorPosition@iPosition)
  6560  0FB1  01B9               	movlw	low(02h)
  6561  0FB2  3002               	fcall	_setCursorPosition
  6562  0FB3  318E  263B  318F   	line	133
  6563                           ;LCD_hd44780u_qy_2004a.c: 133:       break;
  6564                           	goto	l3516
  6565  0FB6  2FE0               	line	134
  6566                           ;LCD_hd44780u_qy_2004a.c: 134:     case 60:
  6567                           	
  6568                           l370:	
  6569  0FB7                     	line	135
  6570                           	
  6571                           l3506:	
  6572  0FB7                     ;LCD_hd44780u_qy_2004a.c: 135:       setCursorPosition(3,0);
  6573                           	movlb 0	; select bank0
  6574  0FB7  0020               	clrf	(setCursorPosition@iPosition)
  6575  0FB8  01B9               	movlw	low(03h)
  6576  0FB9  3003               	fcall	_setCursorPosition
  6577  0FBA  318E  263B  318F   	line	136
  6578                           ;LCD_hd44780u_qy_2004a.c: 136:       break;
  6579                           	goto	l3516
  6580  0FBD  2FE0               	line	137
  6581                           ;LCD_hd44780u_qy_2004a.c: 137:     case 80:
  6582                           	
  6583                           l371:	
  6584  0FBE                     	line	138
  6585                           	
  6586                           l3508:	
  6587  0FBE                     ;LCD_hd44780u_qy_2004a.c: 138:       setCursorPosition(0,0);
  6588                           	movlb 0	; select bank0
  6589  0FBE  0020               	clrf	(setCursorPosition@iPosition)
  6590  0FBF  01B9               	movlw	low(0)
  6591  0FC0  3000               	fcall	_setCursorPosition
  6592  0FC1  318E  263B  318F   	line	139
  6593                           	
  6594                           l3510:	
  6595  0FC4                     ;LCD_hd44780u_qy_2004a.c: 139:       mWritingPosition = 0;
  6596                           	movlb 0	; select bank0
  6597  0FC4  0020               	clrf	(_mWritingPosition)
  6598  0FC5  01D9               	line	140
  6599                           ;LCD_hd44780u_qy_2004a.c: 140:       break;
  6600                           	goto	l3516
  6601  0FC6  2FE0               	line	141
  6602                           ;LCD_hd44780u_qy_2004a.c: 141:     default:
  6603                           	
  6604                           l372:	
  6605  0FC7                     	line	142
  6606                           ;LCD_hd44780u_qy_2004a.c: 142:       break;
  6607                           	goto	l3516
  6608  0FC7  2FE0               	line	143
  6609                           	
  6610                           l3512:	
  6611  0FC8                     ;LCD_hd44780u_qy_2004a.c: 143:   }
  6612                           	goto	l3516
  6613  0FC8  2FE0               	
  6614                           l366:	
  6615  0FC9                     	
  6616                           l3514:	
  6617  0FC9                     	movlb 0	; select bank0
  6618  0FC9  0020               	movf	(_mWritingPosition),w
  6619  0FCA  0859               	movwf	(??_writeTxtChk+0)+0
  6620  0FCB  00BE               	clrf	(??_writeTxtChk+0)+0+1
  6621  0FCC  01BF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6622                           ; Switch size 1, requested type "space"
  6623                           ; Number of cases is 1, Range of values is 0 to 0
  6624                           ; switch strategies available:
  6625                           ; Name         Instructions Cycles
  6626                           ; simple_byte            4     3 (average)
  6627                           ; direct_byte            8     6 (fixed)
  6628                           ; jumptable            260     6 (fixed)
  6629                           ;	Chosen strategy is simple_byte
  6630                           
  6631                           	movf 1+(??_writeTxtChk+0)+0,w
  6632  0FCD  083F               	opt asmopt_push
  6633                           	opt asmopt_off
  6634                           	xorlw	0^0	; case 0
  6635  0FCE  3A00               	skipnz
  6636  0FCF  1903               	goto	l4630
  6637  0FD0  2FD2               	goto	l3516
  6638  0FD1  2FE0               	opt asmopt_pop
  6639                           	
  6640                           l4630:	
  6641  0FD2                     ; Switch size 1, requested type "space"
  6642                           ; Number of cases is 4, Range of values is 20 to 80
  6643                           ; switch strategies available:
  6644                           ; Name         Instructions Cycles
  6645                           ; simple_byte           13     7 (average)
  6646                           ; direct_byte          131     9 (fixed)
  6647                           ; jumptable            263     9 (fixed)
  6648                           ;	Chosen strategy is simple_byte
  6649                           
  6650                           	movf 0+(??_writeTxtChk+0)+0,w
  6651  0FD2  083E               	opt asmopt_push
  6652                           	opt asmopt_off
  6653                           	xorlw	20^0	; case 20
  6654  0FD3  3A14               	skipnz
  6655  0FD4  1903               	goto	l3502
  6656  0FD5  2FA9               	xorlw	40^20	; case 40
  6657  0FD6  3A3C               	skipnz
  6658  0FD7  1903               	goto	l3504
  6659  0FD8  2FB0               	xorlw	60^40	; case 60
  6660  0FD9  3A14               	skipnz
  6661  0FDA  1903               	goto	l3506
  6662  0FDB  2FB7               	xorlw	80^60	; case 80
  6663  0FDC  3A6C               	skipnz
  6664  0FDD  1903               	goto	l3508
  6665  0FDE  2FBE               	goto	l3516
  6666  0FDF  2FE0               	opt asmopt_pop
  6667                           
  6668                           	
  6669                           l368:	
  6670  0FE0                     	line	144
  6671                           	
  6672                           l3516:	
  6673  0FE0                     ;LCD_hd44780u_qy_2004a.c: 144:   waitLCDBusy();
  6674                           	fcall	_waitLCDBusy
  6675  0FE0  318C  249A  318F   	line	145
  6676                           	
  6677                           l3518:	
  6678  0FE3                     ;LCD_hd44780u_qy_2004a.c: 145:   SetToSendDataToLCD();
  6679                           	fcall	_SetToSendDataToLCD
  6680  0FE3  318A  22C6  318F   	line	146
  6681                           	
  6682                           l3520:	
  6683  0FE6                     ;LCD_hd44780u_qy_2004a.c: 146:   PORTAbits.RA0 = 1;
  6684                           	movlb 0	; select bank0
  6685  0FE6  0020               	bsf	(12),0	;volatile
  6686  0FE7  140C               	line	147
  6687                           	
  6688                           l3522:	
  6689  0FE8                     ;LCD_hd44780u_qy_2004a.c: 147:   PORTAbits.RA1 = 0;
  6690                           	bcf	(12),1	;volatile
  6691  0FE8  108C               	line	148
  6692                           	
  6693                           l3524:	
  6694  0FE9                     ;LCD_hd44780u_qy_2004a.c: 148:   setData(iOpCode >> 4);
  6695                           	movf	(writeTxtChk@iOpCode),w
  6696  0FE9  0840               	movwf	(??_writeTxtChk+0)+0
  6697  0FEA  00BE               	movlw	04h
  6698  0FEB  3004               u2195:
  6699  0FEC                     	lsrf	(??_writeTxtChk+0)+0,f
  6700  0FEC  36BE               	decfsz	wreg,f
  6701  0FED  0B89               	goto	u2195
  6702  0FEE  2FEC               	movf	0+(??_writeTxtChk+0)+0,w
  6703  0FEF  083E               	fcall	_setData
  6704  0FF0  318D  255E  318F   	line	149
  6705                           	
  6706                           l3526:	
  6707  0FF3                     ;LCD_hd44780u_qy_2004a.c: 149:   setData(iOpCode);
  6708                           	movlb 0	; select bank0
  6709  0FF3  0020               	movf	(writeTxtChk@iOpCode),w
  6710  0FF4  0840               	fcall	_setData
  6711  0FF5  318D  255E  318F   	line	150
  6712                           	
  6713                           l3528:	
  6714  0FF8                     ;LCD_hd44780u_qy_2004a.c: 150:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  6715                           		opt asmopt_push
  6716                           	opt asmopt_off
  6717                           	nop2	;2 cycle nop
  6718  0FF8  3200               	nop2	;2 cycle nop
  6719  0FF9  3200               	opt asmopt_pop
  6720                           
  6721                           	line	151
  6722                           	
  6723                           l3530:	
  6724  0FFA                     ;LCD_hd44780u_qy_2004a.c: 151:   mWritingPosition++;
  6725                           	movlw	low(01h)
  6726  0FFA  3001               	movlb 0	; select bank0
  6727  0FFB  0020               	movwf	(??_writeTxtChk+0)+0
  6728  0FFC  00BE               	movf	(??_writeTxtChk+0)+0,w
  6729  0FFD  083E               	addwf	(_mWritingPosition),f
  6730  0FFE  07D9               	line	152
  6731                           	
  6732                           l365:	
  6733  0FFF                     	return
  6734  0FFF  0008               	opt stack 0
  6735                           GLOBAL	__end_of_writeTxtChk
  6736                           	__end_of_writeTxtChk:
  6737  1000                     	signat	_writeTxtChk,4217
  6738                           	global	_setCursorPosition
  6739                           
  6740 ;; *************** function _setCursorPosition *****************
  6741 ;; Defined at:
  6742 ;;		line 276 in file "LCD_hd44780u_qy_2004a.c"
  6743 ;; Parameters:    Size  Location     Type
  6744 ;;  iLine           1    wreg     unsigned char 
  6745 ;;  iPosition       1   25[BANK0 ] unsigned char 
  6746 ;; Auto vars:     Size  Location     Type
  6747 ;;  iLine           1   28[BANK0 ] unsigned char 
  6748 ;;  wLCDIndex       1   29[BANK0 ] unsigned char 
  6749 ;; Return value:  Size  Location     Type
  6750 ;;                  1    wreg      void 
  6751 ;; Registers used:
  6752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6753 ;; Tracked objects:
  6754 ;;		On entry : 0/0
  6755 ;;		On exit  : 0/0
  6756 ;;		Unchanged: 0/0
  6757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6758 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6759 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6760 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6761 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  6762 ;;Total ram usage:        5 bytes
  6763 ;; Hardware stack levels used:    1
  6764 ;; Hardware stack levels required when called:    6
  6765 ;; This function calls:
  6766 ;;		_SetToSendDataToLCD
  6767 ;;		_setData
  6768 ;;		_waitLCDBusy
  6769 ;; This function is called by:
  6770 ;;		_main
  6771 ;;		_writeTxtChk
  6772 ;; This function uses a non-reentrant model
  6773 ;;
  6774                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  6775                           	line	276
  6776                           global __ptext19
  6777                           __ptext19:	;psect for function _setCursorPosition
  6778  0E3B                     psect	text19
  6779                           	file	"LCD_hd44780u_qy_2004a.c"
  6780                           	line	276
  6781                           	global	__size_of_setCursorPosition
  6782                           	__size_of_setCursorPosition	equ	__end_of_setCursorPosition-_setCursorPosition
  6783  0060                     	
  6784                           _setCursorPosition:	
  6785  0E3B                     ;incstack = 0
  6786                           	opt	stack 9
  6787                           ; Regs used in _setCursorPosition: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6788                           ;setCursorPosition@iLine stored from wreg
  6789                           	movlb 0	; select bank0
  6790  0E3B  0020               	movwf	(setCursorPosition@iLine)
  6791  0E3C  00BC               	line	278
  6792                           	
  6793                           l3426:	
  6794  0E3D                     ;LCD_hd44780u_qy_2004a.c: 276: void setCursorPosition(char iLine, char iPosition);LCD_hd
                                 44780u_qy_2004a.c: 277: {;LCD_hd44780u_qy_2004a.c: 278:   char wLCDIndex=0;
  6795                           	clrf	(setCursorPosition@wLCDIndex)
  6796  0E3D  01BD               	line	280
  6797                           ;LCD_hd44780u_qy_2004a.c: 280:   switch(iLine)
  6798                           	goto	l3438
  6799  0E3E  2E6B               	line	282
  6800                           ;LCD_hd44780u_qy_2004a.c: 281:   {;LCD_hd44780u_qy_2004a.c: 282:       case 0:
  6801                           	
  6802                           l436:	
  6803  0E3F                     	line	283
  6804                           	
  6805                           l3428:	
  6806  0E3F                     ;LCD_hd44780u_qy_2004a.c: 283:           wLCDIndex = 0x00 + iPosition;
  6807                           	movf	(setCursorPosition@iPosition),w
  6808  0E3F  0839               	movwf	(??_setCursorPosition+0)+0
  6809  0E40  00BA               	movf	(??_setCursorPosition+0)+0,w
  6810  0E41  083A               	movwf	(setCursorPosition@wLCDIndex)
  6811  0E42  00BD               	line	284
  6812                           ;LCD_hd44780u_qy_2004a.c: 284:           mWritingPosition = iPosition;
  6813                           	movf	(setCursorPosition@iPosition),w
  6814  0E43  0839               	movwf	(??_setCursorPosition+0)+0
  6815  0E44  00BA               	movf	(??_setCursorPosition+0)+0,w
  6816  0E45  083A               	movwf	(_mWritingPosition)
  6817  0E46  00D9               	line	285
  6818                           ;LCD_hd44780u_qy_2004a.c: 285:           break;
  6819                           	goto	l3440
  6820  0E47  2E81               	line	286
  6821                           ;LCD_hd44780u_qy_2004a.c: 286:       case 1:
  6822                           	
  6823                           l438:	
  6824  0E48                     	line	287
  6825                           	
  6826                           l3430:	
  6827  0E48                     ;LCD_hd44780u_qy_2004a.c: 287:           wLCDIndex = 0x40 + iPosition;
  6828                           	movf	(setCursorPosition@iPosition),w
  6829  0E48  0839               	addlw	040h
  6830  0E49  3E40               	movwf	(??_setCursorPosition+0)+0
  6831  0E4A  00BA               	movf	(??_setCursorPosition+0)+0,w
  6832  0E4B  083A               	movwf	(setCursorPosition@wLCDIndex)
  6833  0E4C  00BD               	line	288
  6834                           ;LCD_hd44780u_qy_2004a.c: 288:           mWritingPosition = 20 + iPosition;
  6835                           	movf	(setCursorPosition@iPosition),w
  6836  0E4D  0839               	addlw	014h
  6837  0E4E  3E14               	movwf	(??_setCursorPosition+0)+0
  6838  0E4F  00BA               	movf	(??_setCursorPosition+0)+0,w
  6839  0E50  083A               	movwf	(_mWritingPosition)
  6840  0E51  00D9               	line	289
  6841                           ;LCD_hd44780u_qy_2004a.c: 289:           break;
  6842                           	goto	l3440
  6843  0E52  2E81               	line	290
  6844                           ;LCD_hd44780u_qy_2004a.c: 290:       case 2:
  6845                           	
  6846                           l439:	
  6847  0E53                     	line	291
  6848                           	
  6849                           l3432:	
  6850  0E53                     ;LCD_hd44780u_qy_2004a.c: 291:           wLCDIndex = 0x14 + iPosition;
  6851                           	movf	(setCursorPosition@iPosition),w
  6852  0E53  0839               	addlw	014h
  6853  0E54  3E14               	movwf	(??_setCursorPosition+0)+0
  6854  0E55  00BA               	movf	(??_setCursorPosition+0)+0,w
  6855  0E56  083A               	movwf	(setCursorPosition@wLCDIndex)
  6856  0E57  00BD               	line	292
  6857                           ;LCD_hd44780u_qy_2004a.c: 292:           mWritingPosition = 40 + iPosition;
  6858                           	movf	(setCursorPosition@iPosition),w
  6859  0E58  0839               	addlw	028h
  6860  0E59  3E28               	movwf	(??_setCursorPosition+0)+0
  6861  0E5A  00BA               	movf	(??_setCursorPosition+0)+0,w
  6862  0E5B  083A               	movwf	(_mWritingPosition)
  6863  0E5C  00D9               	line	293
  6864                           ;LCD_hd44780u_qy_2004a.c: 293:           break;
  6865                           	goto	l3440
  6866  0E5D  2E81               	line	294
  6867                           ;LCD_hd44780u_qy_2004a.c: 294:       case 3:
  6868                           	
  6869                           l440:	
  6870  0E5E                     	line	295
  6871                           	
  6872                           l3434:	
  6873  0E5E                     ;LCD_hd44780u_qy_2004a.c: 295:           wLCDIndex = 0x54 + iPosition;
  6874                           	movf	(setCursorPosition@iPosition),w
  6875  0E5E  0839               	addlw	054h
  6876  0E5F  3E54               	movwf	(??_setCursorPosition+0)+0
  6877  0E60  00BA               	movf	(??_setCursorPosition+0)+0,w
  6878  0E61  083A               	movwf	(setCursorPosition@wLCDIndex)
  6879  0E62  00BD               	line	296
  6880                           ;LCD_hd44780u_qy_2004a.c: 296:           mWritingPosition = 60 + iPosition;
  6881                           	movf	(setCursorPosition@iPosition),w
  6882  0E63  0839               	addlw	03Ch
  6883  0E64  3E3C               	movwf	(??_setCursorPosition+0)+0
  6884  0E65  00BA               	movf	(??_setCursorPosition+0)+0,w
  6885  0E66  083A               	movwf	(_mWritingPosition)
  6886  0E67  00D9               	line	297
  6887                           ;LCD_hd44780u_qy_2004a.c: 297:           break;
  6888                           	goto	l3440
  6889  0E68  2E81               	line	298
  6890                           ;LCD_hd44780u_qy_2004a.c: 298:       default:
  6891                           	
  6892                           l441:	
  6893  0E69                     	line	299
  6894                           ;LCD_hd44780u_qy_2004a.c: 299:       break;
  6895                           	goto	l3440
  6896  0E69  2E81               	line	300
  6897                           	
  6898                           l3436:	
  6899  0E6A                     ;LCD_hd44780u_qy_2004a.c: 300:   }
  6900                           	goto	l3440
  6901  0E6A  2E81               	
  6902                           l435:	
  6903  0E6B                     	
  6904                           l3438:	
  6905  0E6B                     	movf	(setCursorPosition@iLine),w
  6906  0E6B  083C               	movwf	(??_setCursorPosition+0)+0
  6907  0E6C  00BA               	clrf	(??_setCursorPosition+0)+0+1
  6908  0E6D  01BB               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6909                           ; Switch size 1, requested type "space"
  6910                           ; Number of cases is 1, Range of values is 0 to 0
  6911                           ; switch strategies available:
  6912                           ; Name         Instructions Cycles
  6913                           ; simple_byte            4     3 (average)
  6914                           ; direct_byte            8     6 (fixed)
  6915                           ; jumptable            260     6 (fixed)
  6916                           ;	Chosen strategy is simple_byte
  6917                           
  6918                           	movf 1+(??_setCursorPosition+0)+0,w
  6919  0E6E  083B               	opt asmopt_push
  6920                           	opt asmopt_off
  6921                           	xorlw	0^0	; case 0
  6922  0E6F  3A00               	skipnz
  6923  0E70  1903               	goto	l4632
  6924  0E71  2E73               	goto	l3440
  6925  0E72  2E81               	opt asmopt_pop
  6926                           	
  6927                           l4632:	
  6928  0E73                     ; Switch size 1, requested type "space"
  6929                           ; Number of cases is 4, Range of values is 0 to 3
  6930                           ; switch strategies available:
  6931                           ; Name         Instructions Cycles
  6932                           ; simple_byte           13     7 (average)
  6933                           ; direct_byte           14     6 (fixed)
  6934                           ; jumptable            260     6 (fixed)
  6935                           ;	Chosen strategy is simple_byte
  6936                           
  6937                           	movf 0+(??_setCursorPosition+0)+0,w
  6938  0E73  083A               	opt asmopt_push
  6939                           	opt asmopt_off
  6940                           	xorlw	0^0	; case 0
  6941  0E74  3A00               	skipnz
  6942  0E75  1903               	goto	l3428
  6943  0E76  2E3F               	xorlw	1^0	; case 1
  6944  0E77  3A01               	skipnz
  6945  0E78  1903               	goto	l3430
  6946  0E79  2E48               	xorlw	2^1	; case 2
  6947  0E7A  3A03               	skipnz
  6948  0E7B  1903               	goto	l3432
  6949  0E7C  2E53               	xorlw	3^2	; case 3
  6950  0E7D  3A01               	skipnz
  6951  0E7E  1903               	goto	l3434
  6952  0E7F  2E5E               	goto	l3440
  6953  0E80  2E81               	opt asmopt_pop
  6954                           
  6955                           	
  6956                           l437:	
  6957  0E81                     	line	302
  6958                           	
  6959                           l3440:	
  6960  0E81                     ;LCD_hd44780u_qy_2004a.c: 302:   waitLCDBusy();
  6961                           	fcall	_waitLCDBusy
  6962  0E81  318C  249A  318E   	line	304
  6963                           	
  6964                           l3442:	
  6965  0E84                     ;LCD_hd44780u_qy_2004a.c: 304:   SetToSendDataToLCD();
  6966                           	fcall	_SetToSendDataToLCD
  6967  0E84  318A  22C6  318E   	line	305
  6968                           	
  6969                           l3444:	
  6970  0E87                     ;LCD_hd44780u_qy_2004a.c: 305:   PORTAbits.RA0 = 0;
  6971                           	movlb 0	; select bank0
  6972  0E87  0020               	bcf	(12),0	;volatile
  6973  0E88  100C               	line	306
  6974                           	
  6975                           l3446:	
  6976  0E89                     ;LCD_hd44780u_qy_2004a.c: 306:   PORTAbits.RA1 = 0;
  6977                           	bcf	(12),1	;volatile
  6978  0E89  108C               	line	307
  6979                           	
  6980                           l3448:	
  6981  0E8A                     ;LCD_hd44780u_qy_2004a.c: 307:   setData((wLCDIndex >> 4) | 0x8 );
  6982                           	movf	(setCursorPosition@wLCDIndex),w
  6983  0E8A  083D               	movwf	(??_setCursorPosition+0)+0
  6984  0E8B  00BA               	movlw	04h
  6985  0E8C  3004               u2125:
  6986  0E8D                     	lsrf	(??_setCursorPosition+0)+0,f
  6987  0E8D  36BA               	decfsz	wreg,f
  6988  0E8E  0B89               	goto	u2125
  6989  0E8F  2E8D               	movf	0+(??_setCursorPosition+0)+0,w
  6990  0E90  083A               	iorlw	08h
  6991  0E91  3808               	fcall	_setData
  6992  0E92  318D  255E  318E   	line	308
  6993                           	
  6994                           l3450:	
  6995  0E95                     ;LCD_hd44780u_qy_2004a.c: 308:   setData(wLCDIndex);
  6996                           	movlb 0	; select bank0
  6997  0E95  0020               	movf	(setCursorPosition@wLCDIndex),w
  6998  0E96  083D               	fcall	_setData
  6999  0E97  318D  255E  318E   	line	310
  7000                           	
  7001                           l442:	
  7002  0E9A                     	return
  7003  0E9A  0008               	opt stack 0
  7004                           GLOBAL	__end_of_setCursorPosition
  7005                           	__end_of_setCursorPosition:
  7006  0E9B                     	signat	_setCursorPosition,8313
  7007                           	global	_waitLCDBusy
  7008                           
  7009 ;; *************** function _waitLCDBusy *****************
  7010 ;; Defined at:
  7011 ;;		line 184 in file "LCD_hd44780u_qy_2004a.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;		None
  7014 ;; Auto vars:     Size  Location     Type
  7015 ;;  busyFlag        2   23[BANK0 ] int 
  7016 ;; Return value:  Size  Location     Type
  7017 ;;                  1    wreg      void 
  7018 ;; Registers used:
  7019 ;;		wreg, status,2, status,0, pclath, cstack
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7026 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7027 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  7028 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7029 ;;Total ram usage:        5 bytes
  7030 ;; Hardware stack levels used:    1
  7031 ;; Hardware stack levels required when called:    5
  7032 ;; This function calls:
  7033 ;;		_SetToReadDataFromLCD
  7034 ;; This function is called by:
  7035 ;;		_writeTxtChk
  7036 ;;		_writeInsChk
  7037 ;;		_setCursorPosition
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  7041                           	line	184
  7042                           global __ptext20
  7043                           __ptext20:	;psect for function _waitLCDBusy
  7044  0C9A                     psect	text20
  7045                           	file	"LCD_hd44780u_qy_2004a.c"
  7046                           	line	184
  7047                           	global	__size_of_waitLCDBusy
  7048                           	__size_of_waitLCDBusy	equ	__end_of_waitLCDBusy-_waitLCDBusy
  7049  002D                     	
  7050                           _waitLCDBusy:	
  7051  0C9A                     ;incstack = 0
  7052                           	opt	stack 8
  7053                           ; Regs used in _waitLCDBusy: [wreg+status,2+status,0+pclath+cstack]
  7054                           	line	186
  7055                           	
  7056                           l3410:	
  7057  0C9A                     ;LCD_hd44780u_qy_2004a.c: 186:   PORTAbits.RA0 = 0;
  7058                           	movlb 0	; select bank0
  7059  0C9A  0020               	bcf	(12),0	;volatile
  7060  0C9B  100C               	line	187
  7061                           ;LCD_hd44780u_qy_2004a.c: 187:   PORTAbits.RA1 = 1;
  7062                           	bsf	(12),1	;volatile
  7063  0C9C  148C               	line	189
  7064                           	
  7065                           l3412:	
  7066  0C9D                     ;LCD_hd44780u_qy_2004a.c: 189:   SetToReadDataFromLCD();
  7067                           	fcall	_SetToReadDataFromLCD
  7068  0C9D  318A  22CC  318C   	line	191
  7069                           	
  7070                           l3414:	
  7071  0CA0                     ;LCD_hd44780u_qy_2004a.c: 191:   int busyFlag = 1;
  7072                           	movlw	01h
  7073  0CA0  3001               	movlb 0	; select bank0
  7074  0CA1  0020               	movwf	(waitLCDBusy@busyFlag)
  7075  0CA2  00B7               	movlw	0
  7076  0CA3  3000               	movwf	((waitLCDBusy@busyFlag))+1
  7077  0CA4  00B8               	line	192
  7078                           ;LCD_hd44780u_qy_2004a.c: 192:   while(busyFlag == 1)
  7079                           	goto	l387
  7080  0CA5  2CBE               	
  7081                           l388:	
  7082  0CA6                     	line	195
  7083                           ;LCD_hd44780u_qy_2004a.c: 193:   {;LCD_hd44780u_qy_2004a.c: 195:     PORTAbits.RA2 = 1;

  7084                           	bsf	(12),2	;volatile
  7085  0CA6  150C               	line	196
  7086                           ;LCD_hd44780u_qy_2004a.c: 196:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  7087                           		opt asmopt_push
  7088                           	opt asmopt_off
  7089                           	nop2	;2 cycle nop
  7090  0CA7  3200               	nop2	;2 cycle nop
  7091  0CA8  3200               	opt asmopt_pop
  7092                           
  7093                           	line	197
  7094                           	
  7095                           l3416:	
  7096  0CA9                     ;LCD_hd44780u_qy_2004a.c: 197:     busyFlag = PORTAbits.RA3;
  7097                           	movlb 0	; select bank0
  7098  0CA9  0020               	rrf	(12),w	;volatile
  7099  0CAA  0C0C               	movwf	(??_waitLCDBusy+0)+0
  7100  0CAB  00B4               	rrf	(??_waitLCDBusy+0)+0,f
  7101  0CAC  0CB4               	rrf	(??_waitLCDBusy+0)+0,w
  7102  0CAD  0C34               	andlw	(1<<1)-1
  7103  0CAE  3901               	movwf	(??_waitLCDBusy+1)+0
  7104  0CAF  00B5               	clrf	(??_waitLCDBusy+1)+0+1
  7105  0CB0  01B6               	movf	0+(??_waitLCDBusy+1)+0,w
  7106  0CB1  0835               	movwf	(waitLCDBusy@busyFlag)
  7107  0CB2  00B7               	movf	1+(??_waitLCDBusy+1)+0,w
  7108  0CB3  0836               	movwf	(waitLCDBusy@busyFlag+1)
  7109  0CB4  00B8               	line	198
  7110                           	
  7111                           l3418:	
  7112  0CB5                     ;LCD_hd44780u_qy_2004a.c: 198:     PORTAbits.RA2 = 0;
  7113                           	bcf	(12),2	;volatile
  7114  0CB5  110C               	line	199
  7115                           	
  7116                           l3420:	
  7117  0CB6                     ;LCD_hd44780u_qy_2004a.c: 199:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  7118                           		opt asmopt_push
  7119                           	opt asmopt_off
  7120                           	nop2	;2 cycle nop
  7121  0CB6  3200               	nop2	;2 cycle nop
  7122  0CB7  3200               	nop2	;2 cycle nop
  7123  0CB8  3200               	nop2	;2 cycle nop
  7124  0CB9  3200               	opt asmopt_pop
  7125                           
  7126                           	line	201
  7127                           	
  7128                           l3422:	
  7129  0CBA                     ;LCD_hd44780u_qy_2004a.c: 201:     PORTAbits.RA2 = 1;
  7130                           	movlb 0	; select bank0
  7131  0CBA  0020               	bsf	(12),2	;volatile
  7132  0CBB  150C               	line	202
  7133                           	
  7134                           l3424:	
  7135  0CBC                     ;LCD_hd44780u_qy_2004a.c: 202:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  7136                           		opt asmopt_push
  7137                           	opt asmopt_off
  7138                           	nop2	;2 cycle nop
  7139  0CBC  3200               	nop2	;2 cycle nop
  7140  0CBD  3200               	opt asmopt_pop
  7141                           
  7142                           	line	203
  7143                           ;LCD_hd44780u_qy_2004a.c: 203:   }
  7144                           	
  7145                           l387:	
  7146  0CBE                     	line	192
  7147                           ;LCD_hd44780u_qy_2004a.c: 192:   while(busyFlag == 1)
  7148                           	movlb 0	; select bank0
  7149  0CBE  0020               		decf	((waitLCDBusy@busyFlag)),w
  7150  0CBF  0337               iorwf	((waitLCDBusy@busyFlag+1)),w
  7151  0CC0  0438               	btfsc	status,2
  7152  0CC1  1903               	goto	u2111
  7153  0CC2  2CC4               	goto	u2110
  7154  0CC3  2CC5               u2111:
  7155  0CC4                     	goto	l388
  7156  0CC4  2CA6               u2110:
  7157  0CC5                     	goto	l390
  7158  0CC5  2CC6               	
  7159                           l389:	
  7160  0CC6                     	line	204
  7161                           	
  7162                           l390:	
  7163  0CC6                     	return
  7164  0CC6  0008               	opt stack 0
  7165                           GLOBAL	__end_of_waitLCDBusy
  7166                           	__end_of_waitLCDBusy:
  7167  0CC7                     	signat	_waitLCDBusy,89
  7168                           	global	_SetToReadDataFromLCD
  7169                           
  7170 ;; *************** function _SetToReadDataFromLCD *****************
  7171 ;; Defined at:
  7172 ;;		line 169 in file "LCD_hd44780u_qy_2004a.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;		None
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;		None
  7177 ;; Return value:  Size  Location     Type
  7178 ;;                  1    wreg      void 
  7179 ;; Registers used:
  7180 ;;		None
  7181 ;; Tracked objects:
  7182 ;;		On entry : 0/0
  7183 ;;		On exit  : 0/0
  7184 ;;		Unchanged: 0/0
  7185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7190 ;;Total ram usage:        0 bytes
  7191 ;; Hardware stack levels used:    1
  7192 ;; Hardware stack levels required when called:    4
  7193 ;; This function calls:
  7194 ;;		Nothing
  7195 ;; This function is called by:
  7196 ;;		_waitLCDBusy
  7197 ;; This function uses a non-reentrant model
  7198 ;;
  7199                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  7200                           	line	169
  7201                           global __ptext21
  7202                           __ptext21:	;psect for function _SetToReadDataFromLCD
  7203  0ACC                     psect	text21
  7204                           	file	"LCD_hd44780u_qy_2004a.c"
  7205                           	line	169
  7206                           	global	__size_of_SetToReadDataFromLCD
  7207                           	__size_of_SetToReadDataFromLCD	equ	__end_of_SetToReadDataFromLCD-_SetToReadDataFromLCD

  7208  0006                     	
  7209                           _SetToReadDataFromLCD:	
  7210  0ACC                     ;incstack = 0
  7211                           	opt	stack 8
  7212                           ; Regs used in _SetToReadDataFromLCD: []
  7213                           	line	171
  7214                           	
  7215                           l3396:	
  7216  0ACC                     ;LCD_hd44780u_qy_2004a.c: 171:   TRISAbits.TRISA3 = 1;
  7217                           	movlb 1	; select bank1
  7218  0ACC  0021               	bsf	(140)^080h,3	;volatile
  7219  0ACD  158C               	line	172
  7220                           ;LCD_hd44780u_qy_2004a.c: 172:   TRISCbits.TRISC2 = 1;
  7221                           	bsf	(142)^080h,2	;volatile
  7222  0ACE  150E               	line	173
  7223                           ;LCD_hd44780u_qy_2004a.c: 173:   TRISCbits.TRISC1 = 1;
  7224                           	bsf	(142)^080h,1	;volatile
  7225  0ACF  148E               	line	174
  7226                           ;LCD_hd44780u_qy_2004a.c: 174:   TRISCbits.TRISC0 = 1;
  7227                           	bsf	(142)^080h,0	;volatile
  7228  0AD0  140E               	line	175
  7229                           	
  7230                           l381:	
  7231  0AD1                     	return
  7232  0AD1  0008               	opt stack 0
  7233                           GLOBAL	__end_of_SetToReadDataFromLCD
  7234                           	__end_of_SetToReadDataFromLCD:
  7235  0AD2                     	signat	_SetToReadDataFromLCD,89
  7236                           	global	_setData
  7237                           
  7238 ;; *************** function _setData *****************
  7239 ;; Defined at:
  7240 ;;		line 89 in file "LCD_hd44780u_qy_2004a.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;  iValue          1    wreg     unsigned char 
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;  iValue          1   22[BANK0 ] unsigned char 
  7245 ;; Return value:  Size  Location     Type
  7246 ;;                  1    wreg      void 
  7247 ;; Registers used:
  7248 ;;		wreg, status,2, status,0
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7256 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7257 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  7258 ;;Total ram usage:        3 bytes
  7259 ;; Hardware stack levels used:    1
  7260 ;; Hardware stack levels required when called:    4
  7261 ;; This function calls:
  7262 ;;		Nothing
  7263 ;; This function is called by:
  7264 ;;		_initLCD
  7265 ;;		_writeTxtChk
  7266 ;;		_writeInsNoChk
  7267 ;;		_setCursorPosition
  7268 ;; This function uses a non-reentrant model
  7269 ;;
  7270                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  7271                           	line	89
  7272                           global __ptext22
  7273                           __ptext22:	;psect for function _setData
  7274  0D5E                     psect	text22
  7275                           	file	"LCD_hd44780u_qy_2004a.c"
  7276                           	line	89
  7277                           	global	__size_of_setData
  7278                           	__size_of_setData	equ	__end_of_setData-_setData
  7279  003C                     	
  7280                           _setData:	
  7281  0D5E                     ;incstack = 0
  7282                           	opt	stack 8
  7283                           ; Regs used in _setData: [wreg+status,2+status,0]
  7284                           ;setData@iValue stored from wreg
  7285                           	movlb 0	; select bank0
  7286  0D5E  0020               	movwf	(setData@iValue)
  7287  0D5F  00B6               	line	91
  7288                           	
  7289                           l3398:	
  7290  0D60                     ;LCD_hd44780u_qy_2004a.c: 89: void setData(char iValue);LCD_hd44780u_qy_2004a.c: 90: {;L
                                 CD_hd44780u_qy_2004a.c: 91:   PORTAbits.RA2 = 1;
  7291                           	bsf	(12),2	;volatile
  7292  0D60  150C               	line	92
  7293                           	
  7294                           l3400:	
  7295  0D61                     ;LCD_hd44780u_qy_2004a.c: 92:   PORTAbits.RA3 = (iValue & 0x8) >> 3;
  7296                           	movf	(setData@iValue),w
  7297  0D61  0836               	movwf	(??_setData+0)+0
  7298  0D62  00B4               	movlw	03h
  7299  0D63  3003               u2095:
  7300  0D64                     	lsrf	(??_setData+0)+0,f
  7301  0D64  36B4               	decfsz	wreg,f
  7302  0D65  0B89               	goto	u2095
  7303  0D66  2D64               	movf	0+(??_setData+0)+0,w
  7304  0D67  0834               	andlw	01h
  7305  0D68  3901               	movwf	(??_setData+1)+0
  7306  0D69  00B5               	rlf	(??_setData+1)+0,f
  7307  0D6A  0DB5               	rlf	(??_setData+1)+0,f
  7308  0D6B  0DB5               	rlf	(??_setData+1)+0,f
  7309  0D6C  0DB5               	movf	(12),w	;volatile
  7310  0D6D  080C               	xorwf	(??_setData+1)+0,w
  7311  0D6E  0635               	andlw	not (((1<<1)-1)<<3)
  7312  0D6F  39F7               	xorwf	(??_setData+1)+0,w
  7313  0D70  0635               	movwf	(12)	;volatile
  7314  0D71  008C               	line	93
  7315                           ;LCD_hd44780u_qy_2004a.c: 93:   PORTCbits.RC2 = (iValue & 0x4) >> 2;
  7316                           	movf	(setData@iValue),w
  7317  0D72  0836               	movwf	(??_setData+0)+0
  7318  0D73  00B4               	movlw	02h
  7319  0D74  3002               u2105:
  7320  0D75                     	lsrf	(??_setData+0)+0,f
  7321  0D75  36B4               	decfsz	wreg,f
  7322  0D76  0B89               	goto	u2105
  7323  0D77  2D75               	movf	0+(??_setData+0)+0,w
  7324  0D78  0834               	andlw	01h
  7325  0D79  3901               	movwf	(??_setData+1)+0
  7326  0D7A  00B5               	rlf	(??_setData+1)+0,f
  7327  0D7B  0DB5               	rlf	(??_setData+1)+0,f
  7328  0D7C  0DB5               	movf	(14),w	;volatile
  7329  0D7D  080E               	xorwf	(??_setData+1)+0,w
  7330  0D7E  0635               	andlw	not (((1<<1)-1)<<2)
  7331  0D7F  39FB               	xorwf	(??_setData+1)+0,w
  7332  0D80  0635               	movwf	(14)	;volatile
  7333  0D81  008E               	line	94
  7334                           ;LCD_hd44780u_qy_2004a.c: 94:   PORTCbits.RC1 = (iValue & 0x2) >> 1;
  7335                           	lsrf	(setData@iValue),w
  7336  0D82  3636               	andlw	01h
  7337  0D83  3901               	movwf	(??_setData+0)+0
  7338  0D84  00B4               	rlf	(??_setData+0)+0,f
  7339  0D85  0DB4               	movf	(14),w	;volatile
  7340  0D86  080E               	xorwf	(??_setData+0)+0,w
  7341  0D87  0634               	andlw	not (((1<<1)-1)<<1)
  7342  0D88  39FD               	xorwf	(??_setData+0)+0,w
  7343  0D89  0634               	movwf	(14)	;volatile
  7344  0D8A  008E               	line	95
  7345                           ;LCD_hd44780u_qy_2004a.c: 95:   PORTCbits.RC0 = (iValue & 0x1) ;
  7346                           	movlw	low(01h)
  7347  0D8B  3001               	andwf	(setData@iValue),w
  7348  0D8C  0536               	movwf	(??_setData+0)+0
  7349  0D8D  00B4               	movf	(14),w	;volatile
  7350  0D8E  080E               	xorwf	0+(??_setData+0)+0,w
  7351  0D8F  0634               	andlw	not ((1<<1)-1)
  7352  0D90  39FE               	xorwf	0+(??_setData+0)+0,w
  7353  0D91  0634               	movwf	(14)	;volatile
  7354  0D92  008E               	line	96
  7355                           	
  7356                           l3402:	
  7357  0D93                     ;LCD_hd44780u_qy_2004a.c: 96:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  7358                           		opt asmopt_push
  7359                           	opt asmopt_off
  7360                           	nop2	;2 cycle nop
  7361  0D93  3200               	nop2	;2 cycle nop
  7362  0D94  3200               	opt asmopt_pop
  7363                           
  7364                           	line	97
  7365                           	
  7366                           l3404:	
  7367  0D95                     ;LCD_hd44780u_qy_2004a.c: 97:   PORTAbits.RA2 = 0;
  7368                           	movlb 0	; select bank0
  7369  0D95  0020               	bcf	(12),2	;volatile
  7370  0D96  110C               	line	98
  7371                           	
  7372                           l3406:	
  7373  0D97                     ;LCD_hd44780u_qy_2004a.c: 98:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  7374                           		opt asmopt_push
  7375                           	opt asmopt_off
  7376                           	nop2	;2 cycle nop
  7377  0D97  3200               	nop2	;2 cycle nop
  7378  0D98  3200               	opt asmopt_pop
  7379                           
  7380                           	line	99
  7381                           	
  7382                           l355:	
  7383  0D99                     	return
  7384  0D99  0008               	opt stack 0
  7385                           GLOBAL	__end_of_setData
  7386                           	__end_of_setData:
  7387  0D9A                     	signat	_setData,4217
  7388                           	global	_SetToSendDataToLCD
  7389                           
  7390 ;; *************** function _SetToSendDataToLCD *****************
  7391 ;; Defined at:
  7392 ;;		line 176 in file "LCD_hd44780u_qy_2004a.c"
  7393 ;; Parameters:    Size  Location     Type
  7394 ;;		None
  7395 ;; Auto vars:     Size  Location     Type
  7396 ;;		None
  7397 ;; Return value:  Size  Location     Type
  7398 ;;                  1    wreg      void 
  7399 ;; Registers used:
  7400 ;;		None
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/0
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7410 ;;Total ram usage:        0 bytes
  7411 ;; Hardware stack levels used:    1
  7412 ;; Hardware stack levels required when called:    4
  7413 ;; This function calls:
  7414 ;;		Nothing
  7415 ;; This function is called by:
  7416 ;;		_writeTxtChk
  7417 ;;		_writeInsNoChk
  7418 ;;		_setCursorPosition
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  7422                           	line	176
  7423                           global __ptext23
  7424                           __ptext23:	;psect for function _SetToSendDataToLCD
  7425  0AC6                     psect	text23
  7426                           	file	"LCD_hd44780u_qy_2004a.c"
  7427                           	line	176
  7428                           	global	__size_of_SetToSendDataToLCD
  7429                           	__size_of_SetToSendDataToLCD	equ	__end_of_SetToSendDataToLCD-_SetToSendDataToLCD
  7430  0006                     	
  7431                           _SetToSendDataToLCD:	
  7432  0AC6                     ;incstack = 0
  7433                           	opt	stack 8
  7434                           ; Regs used in _SetToSendDataToLCD: []
  7435                           	line	178
  7436                           	
  7437                           l3408:	
  7438  0AC6                     ;LCD_hd44780u_qy_2004a.c: 178:   TRISAbits.TRISA3 = 0;;
  7439                           	movlb 1	; select bank1
  7440  0AC6  0021               	bcf	(140)^080h,3	;volatile
  7441  0AC7  118C               	line	179
  7442                           ;LCD_hd44780u_qy_2004a.c: 179:   TRISCbits.TRISC2 = 0;;
  7443                           	bcf	(142)^080h,2	;volatile
  7444  0AC8  110E               	line	180
  7445                           ;LCD_hd44780u_qy_2004a.c: 180:   TRISCbits.TRISC1 = 0;;
  7446                           	bcf	(142)^080h,1	;volatile
  7447  0AC9  108E               	line	181
  7448                           ;LCD_hd44780u_qy_2004a.c: 181:   TRISCbits.TRISC0 = 0;;
  7449                           	bcf	(142)^080h,0	;volatile
  7450  0ACA  100E               	line	182
  7451                           	
  7452                           l384:	
  7453  0ACB                     	return
  7454  0ACB  0008               	opt stack 0
  7455                           GLOBAL	__end_of_SetToSendDataToLCD
  7456                           	__end_of_SetToSendDataToLCD:
  7457  0ACC                     	signat	_SetToSendDataToLCD,89
  7458                           	global	_GetTemp
  7459                           
  7460 ;; *************** function _GetTemp *****************
  7461 ;; Defined at:
  7462 ;;		line 98 in file "161518_temp_main.c"
  7463 ;; Parameters:    Size  Location     Type
  7464 ;;		None
  7465 ;; Auto vars:     Size  Location     Type
  7466 ;;		None
  7467 ;; Return value:  Size  Location     Type
  7468 ;;                  1    wreg      void 
  7469 ;; Registers used:
  7470 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7471 ;; Tracked objects:
  7472 ;;		On entry : 0/0
  7473 ;;		On exit  : 0/0
  7474 ;;		Unchanged: 0/0
  7475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7478 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7479 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7480 ;;Total ram usage:        1 bytes
  7481 ;; Hardware stack levels used:    1
  7482 ;; Hardware stack levels required when called:    5
  7483 ;; This function calls:
  7484 ;;		_memset
  7485 ;; This function is called by:
  7486 ;;		_main
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  7490                           	file	"161518_temp_main.c"
  7491                           	line	98
  7492                           global __ptext24
  7493                           __ptext24:	;psect for function _GetTemp
  7494  0C6E                     psect	text24
  7495                           	file	"161518_temp_main.c"
  7496                           	line	98
  7497                           	global	__size_of_GetTemp
  7498                           	__size_of_GetTemp	equ	__end_of_GetTemp-_GetTemp
  7499  002C                     	
  7500                           _GetTemp:	
  7501  0C6E                     ;incstack = 0
  7502                           	opt	stack 10
  7503                           ; Regs used in _GetTemp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7504                           	line	100
  7505                           	
  7506                           l3734:	
  7507  0C6E                     	movlb 0	; select bank0
  7508  0C6E  0020               	clrf	(_wTrial)
  7509  0C6F  01D2               	line	101
  7510                           	
  7511                           l3736:	
  7512  0C70                     	movf	((_wI2CTxBufferSize)),w
  7513  0C70  0855               	btfss	status,2
  7514  0C71  1D03               	goto	u2521
  7515  0C72  2C74               	goto	u2520
  7516  0C73  2C75               u2521:
  7517  0C74                     	goto	l141
  7518  0C74  2C99               u2520:
  7519  0C75                     	line	103
  7520                           	
  7521                           l3738:	
  7522  0C75                     	movlb 1	; select bank1
  7523  0C75  0021               	bsf	(145)^080h,3	;volatile
  7524  0C76  1591               	line	104
  7525                           	
  7526                           l3740:	
  7527  0C77                     	movlw	low(_wReceptionBuffer)
  7528  0C77  3034               	movlb 0	; select bank0
  7529  0C78  0020               	movwf	(memset@dest)
  7530  0C79  00B4               	movlw	high(_wReceptionBuffer)
  7531  0C7A  3001               	movwf	(memset@dest+1)
  7532  0C7B  00B5               	movlw	0
  7533  0C7C  3000               	movwf	(memset@c)
  7534  0C7D  00B6               	movwf	(memset@c+1)
  7535  0C7E  00B7               	movlw	01Eh
  7536  0C7F  301E               	movwf	(memset@n)
  7537  0C80  00B8               	movlw	0
  7538  0C81  3000               	movwf	((memset@n))+1
  7539  0C82  00B9               	fcall	_memset
  7540  0C83  3186  2621  318C   	line	105
  7541                           	
  7542                           l3742:	
  7543  0C86                     	movlb 0	; select bank0
  7544  0C86  0020               	clrf	(_wReceptionBufferPosition)
  7545  0C87  01D8               	line	106
  7546                           	
  7547                           l3744:	
  7548  0C88                     	movlw	low(0B9h)
  7549  0C88  30B9               	movwf	(??_GetTemp+0)+0
  7550  0C89  00C2               	movf	(??_GetTemp+0)+0,w
  7551  0C8A  0842               	movlb 1	; select bank1
  7552  0C8B  0021               	movwf	(_wI2CTxBuffer)^080h
  7553  0C8C  00A7               	line	107
  7554                           	
  7555                           l3746:	
  7556  0C8D                     	movlw	low(08h)
  7557  0C8D  3008               	movlb 0	; select bank0
  7558  0C8E  0020               	movwf	(??_GetTemp+0)+0
  7559  0C8F  00C2               	movf	(??_GetTemp+0)+0,w
  7560  0C90  0842               	movwf	(_wI2CRxBufferSize)
  7561  0C91  00D4               	line	108
  7562                           	
  7563                           l3748:	
  7564  0C92                     	clrf	(_wI2CTxBufferSize)
  7565  0C92  01D5               	incf	(_wI2CTxBufferSize),f
  7566  0C93  0AD5               	line	109
  7567                           	
  7568                           l3750:	
  7569  0C94                     	movlb 1	; select bank1
  7570  0C94  0021               	clrf	(_wI2CCommandState)^080h
  7571  0C95  01A6               	line	110
  7572                           	
  7573                           l3752:	
  7574  0C96                     	movlb 4	; select bank4
  7575  0C96  0024               	bsf	(534)^0200h,0	;volatile
  7576  0C97  1416               	goto	l141
  7577  0C98  2C99               	line	111
  7578                           	
  7579                           l140:	
  7580  0C99                     	line	112
  7581                           	
  7582                           l141:	
  7583  0C99                     	return
  7584  0C99  0008               	opt stack 0
  7585                           GLOBAL	__end_of_GetTemp
  7586                           	__end_of_GetTemp:
  7587  0C9A                     	signat	_GetTemp,89
  7588                           	global	_memset
  7589                           
  7590 ;; *************** function _memset *****************
  7591 ;; Defined at:
  7592 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  7593 ;; Parameters:    Size  Location     Type
  7594 ;;  dest            2   20[BANK0 ] PTR void 
  7595 ;;		 -> wInterruptText(75), wReceptionBuffer(30), wI2CTxBuffer(20), 
  7596 ;;  c               2   22[BANK0 ] int 
  7597 ;;  n               2   24[BANK0 ] unsigned int 
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;  s               2   32[BANK0 ] PTR unsigned char 
  7600 ;;		 -> wInterruptText(75), wReceptionBuffer(30), wI2CTxBuffer(20), 
  7601 ;;  k               2   30[BANK0 ] unsigned int 
  7602 ;; Return value:  Size  Location     Type
  7603 ;;                  2   20[BANK0 ] PTR void 
  7604 ;; Registers used:
  7605 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7606 ;; Tracked objects:
  7607 ;;		On entry : 0/0
  7608 ;;		On exit  : 0/0
  7609 ;;		Unchanged: 0/0
  7610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7611 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  7612 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  7613 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  7614 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
  7615 ;;Total ram usage:       14 bytes
  7616 ;; Hardware stack levels used:    1
  7617 ;; Hardware stack levels required when called:    4
  7618 ;; This function calls:
  7619 ;;		Nothing
  7620 ;; This function is called by:
  7621 ;;		_GetTemp
  7622 ;;		_PrintLog
  7623 ;;		_main
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           psect	text25,local,class=CODE,delta=2,merge=1,group=2
  7627                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  7628                           	line	4
  7629                           global __ptext25
  7630                           __ptext25:	;psect for function _memset
  7631  0621                     psect	text25
  7632                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  7633                           	line	4
  7634                           	global	__size_of_memset
  7635                           	__size_of_memset	equ	__end_of_memset-_memset
  7636  00D1                     	
  7637                           _memset:	
  7638  0621                     ;incstack = 0
  7639                           	opt	stack 11
  7640                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7641                           	line	6
  7642                           	
  7643                           l3558:	
  7644  0621                     	movlb 0	; select bank0
  7645  0621  0020               	movf	(memset@dest+1),w
  7646  0622  0835               	movwf	(memset@s+1)
  7647  0623  00C1               	movf	(memset@dest),w
  7648  0624  0834               	movwf	(memset@s)
  7649  0625  00C0               	line	13
  7650                           	
  7651                           l3560:	
  7652  0626                     	movf	((memset@n)),w
  7653  0626  0838               iorwf	((memset@n+1)),w
  7654  0627  0439               	btfss	status,2
  7655  0628  1D03               	goto	u2231
  7656  0629  2E2B               	goto	u2230
  7657  062A  2E2C               u2231:
  7658  062B                     	goto	l3564
  7659  062B  2E2E               u2230:
  7660  062C                     	goto	l887
  7661  062C  2EF1               	
  7662                           l3562:	
  7663  062D                     ;	Return value of _memset is never used
  7664                           	goto	l887
  7665  062D  2EF1               	
  7666                           l886:	
  7667  062E                     	line	14
  7668                           	
  7669                           l3564:	
  7670  062E                     	movf	(memset@s),w
  7671  062E  0840               	movwf	fsr1l
  7672  062F  0086               	movf	(memset@s+1),w
  7673  0630  0841               	movwf	fsr1h
  7674  0631  0087               	movf	(memset@c),w
  7675  0632  0836               	movwf	indf1
  7676  0633  0081               	line	15
  7677                           	
  7678                           l3566:	
  7679  0634                     	movf	(memset@n),w
  7680  0634  0838               	addlw	0FFh
  7681  0635  3EFF               	movwf	(??_memset+0)+0
  7682  0636  00BA               	movlw	0FFh
  7683  0637  30FF               	addwfc	(memset@n+1),w
  7684  0638  3D39               	movwf	1+(??_memset+0)+0
  7685  0639  00BB               	movf	0+(??_memset+0)+0,w
  7686  063A  083A               	addwf	(memset@s),w
  7687  063B  0740               	movwf	(??_memset+2)+0
  7688  063C  00BC               	movf	1+(??_memset+0)+0,w
  7689  063D  083B               	addwfc	(memset@s+1),w
  7690  063E  3D41               	movwf	1+(??_memset+2)+0
  7691  063F  00BD               	movf	0+(??_memset+2)+0,w
  7692  0640  083C               	movwf	fsr1l
  7693  0641  0086               	movf	1+(??_memset+2)+0,w
  7694  0642  083D               	movwf	fsr1h
  7695  0643  0087               	movf	(memset@c),w
  7696  0644  0836               	movwf	indf1
  7697  0645  0081               	line	16
  7698                           	
  7699                           l3568:	
  7700  0646                     	movlw	0
  7701  0646  3000               	subwf	(memset@n+1),w
  7702  0647  0239               	movlw	03h
  7703  0648  3003               	skipnz
  7704  0649  1903               	subwf	(memset@n),w
  7705  064A  0238               	skipnc
  7706  064B  1803               	goto	u2241
  7707  064C  2E4E               	goto	u2240
  7708  064D  2E4F               u2241:
  7709  064E                     	goto	l3572
  7710  064E  2E51               u2240:
  7711  064F                     	goto	l887
  7712  064F  2EF1               	
  7713                           l3570:	
  7714  0650                     ;	Return value of _memset is never used
  7715                           	goto	l887
  7716  0650  2EF1               	
  7717                           l888:	
  7718  0651                     	line	17
  7719                           	
  7720                           l3572:	
  7721  0651                     	movf	(memset@s),w
  7722  0651  0840               	addlw	01h
  7723  0652  3E01               	movwf	(??_memset+0)+0
  7724  0653  00BA               	movlw	0
  7725  0654  3000               	addwfc	(memset@s+1),w
  7726  0655  3D41               	movwf	1+(??_memset+0)+0
  7727  0656  00BB               	movf	0+(??_memset+0)+0,w
  7728  0657  083A               	movwf	fsr1l
  7729  0658  0086               	movf	1+(??_memset+0)+0,w
  7730  0659  083B               	movwf	fsr1h
  7731  065A  0087               	movf	(memset@c),w
  7732  065B  0836               	movwf	indf1
  7733  065C  0081               	line	18
  7734                           	movf	(memset@s),w
  7735  065D  0840               	addlw	02h
  7736  065E  3E02               	movwf	(??_memset+0)+0
  7737  065F  00BA               	movlw	0
  7738  0660  3000               	addwfc	(memset@s+1),w
  7739  0661  3D41               	movwf	1+(??_memset+0)+0
  7740  0662  00BB               	movf	0+(??_memset+0)+0,w
  7741  0663  083A               	movwf	fsr1l
  7742  0664  0086               	movf	1+(??_memset+0)+0,w
  7743  0665  083B               	movwf	fsr1h
  7744  0666  0087               	movf	(memset@c),w
  7745  0667  0836               	movwf	indf1
  7746  0668  0081               	line	19
  7747                           	movf	(memset@n),w
  7748  0669  0838               	addlw	0FEh
  7749  066A  3EFE               	movwf	(??_memset+0)+0
  7750  066B  00BA               	movlw	0FFh
  7751  066C  30FF               	addwfc	(memset@n+1),w
  7752  066D  3D39               	movwf	1+(??_memset+0)+0
  7753  066E  00BB               	movf	0+(??_memset+0)+0,w
  7754  066F  083A               	addwf	(memset@s),w
  7755  0670  0740               	movwf	(??_memset+2)+0
  7756  0671  00BC               	movf	1+(??_memset+0)+0,w
  7757  0672  083B               	addwfc	(memset@s+1),w
  7758  0673  3D41               	movwf	1+(??_memset+2)+0
  7759  0674  00BD               	movf	0+(??_memset+2)+0,w
  7760  0675  083C               	movwf	fsr1l
  7761  0676  0086               	movf	1+(??_memset+2)+0,w
  7762  0677  083D               	movwf	fsr1h
  7763  0678  0087               	movf	(memset@c),w
  7764  0679  0836               	movwf	indf1
  7765  067A  0081               	line	20
  7766                           	movf	(memset@n),w
  7767  067B  0838               	addlw	0FDh
  7768  067C  3EFD               	movwf	(??_memset+0)+0
  7769  067D  00BA               	movlw	0FFh
  7770  067E  30FF               	addwfc	(memset@n+1),w
  7771  067F  3D39               	movwf	1+(??_memset+0)+0
  7772  0680  00BB               	movf	0+(??_memset+0)+0,w
  7773  0681  083A               	addwf	(memset@s),w
  7774  0682  0740               	movwf	(??_memset+2)+0
  7775  0683  00BC               	movf	1+(??_memset+0)+0,w
  7776  0684  083B               	addwfc	(memset@s+1),w
  7777  0685  3D41               	movwf	1+(??_memset+2)+0
  7778  0686  00BD               	movf	0+(??_memset+2)+0,w
  7779  0687  083C               	movwf	fsr1l
  7780  0688  0086               	movf	1+(??_memset+2)+0,w
  7781  0689  083D               	movwf	fsr1h
  7782  068A  0087               	movf	(memset@c),w
  7783  068B  0836               	movwf	indf1
  7784  068C  0081               	line	21
  7785                           	
  7786                           l3574:	
  7787  068D                     	movlw	0
  7788  068D  3000               	subwf	(memset@n+1),w
  7789  068E  0239               	movlw	07h
  7790  068F  3007               	skipnz
  7791  0690  1903               	subwf	(memset@n),w
  7792  0691  0238               	skipnc
  7793  0692  1803               	goto	u2251
  7794  0693  2E95               	goto	u2250
  7795  0694  2E96               u2251:
  7796  0695                     	goto	l3578
  7797  0695  2E98               u2250:
  7798  0696                     	goto	l887
  7799  0696  2EF1               	
  7800                           l3576:	
  7801  0697                     ;	Return value of _memset is never used
  7802                           	goto	l887
  7803  0697  2EF1               	
  7804                           l889:	
  7805  0698                     	line	22
  7806                           	
  7807                           l3578:	
  7808  0698                     	movf	(memset@s),w
  7809  0698  0840               	addlw	03h
  7810  0699  3E03               	movwf	(??_memset+0)+0
  7811  069A  00BA               	movlw	0
  7812  069B  3000               	addwfc	(memset@s+1),w
  7813  069C  3D41               	movwf	1+(??_memset+0)+0
  7814  069D  00BB               	movf	0+(??_memset+0)+0,w
  7815  069E  083A               	movwf	fsr1l
  7816  069F  0086               	movf	1+(??_memset+0)+0,w
  7817  06A0  083B               	movwf	fsr1h
  7818  06A1  0087               	movf	(memset@c),w
  7819  06A2  0836               	movwf	indf1
  7820  06A3  0081               	line	23
  7821                           	movf	(memset@n),w
  7822  06A4  0838               	addlw	0FCh
  7823  06A5  3EFC               	movwf	(??_memset+0)+0
  7824  06A6  00BA               	movlw	0FFh
  7825  06A7  30FF               	addwfc	(memset@n+1),w
  7826  06A8  3D39               	movwf	1+(??_memset+0)+0
  7827  06A9  00BB               	movf	0+(??_memset+0)+0,w
  7828  06AA  083A               	addwf	(memset@s),w
  7829  06AB  0740               	movwf	(??_memset+2)+0
  7830  06AC  00BC               	movf	1+(??_memset+0)+0,w
  7831  06AD  083B               	addwfc	(memset@s+1),w
  7832  06AE  3D41               	movwf	1+(??_memset+2)+0
  7833  06AF  00BD               	movf	0+(??_memset+2)+0,w
  7834  06B0  083C               	movwf	fsr1l
  7835  06B1  0086               	movf	1+(??_memset+2)+0,w
  7836  06B2  083D               	movwf	fsr1h
  7837  06B3  0087               	movf	(memset@c),w
  7838  06B4  0836               	movwf	indf1
  7839  06B5  0081               	line	24
  7840                           	
  7841                           l3580:	
  7842  06B6                     	movlw	0
  7843  06B6  3000               	subwf	(memset@n+1),w
  7844  06B7  0239               	movlw	09h
  7845  06B8  3009               	skipnz
  7846  06B9  1903               	subwf	(memset@n),w
  7847  06BA  0238               	skipnc
  7848  06BB  1803               	goto	u2261
  7849  06BC  2EBE               	goto	u2260
  7850  06BD  2EBF               u2261:
  7851  06BE                     	goto	l3584
  7852  06BE  2EC1               u2260:
  7853  06BF                     	goto	l887
  7854  06BF  2EF1               	
  7855                           l3582:	
  7856  06C0                     ;	Return value of _memset is never used
  7857                           	goto	l887
  7858  06C0  2EF1               	
  7859                           l890:	
  7860  06C1                     	line	31
  7861                           	
  7862                           l3584:	
  7863  06C1                     	comf	(memset@s),w
  7864  06C1  0940               	movwf	(??_memset+0)+0
  7865  06C2  00BA               	comf	(memset@s+1),w
  7866  06C3  0941               	movwf	((??_memset+0)+0+1)
  7867  06C4  00BB               	incf	(??_memset+0)+0,f
  7868  06C5  0ABA               	skipnz
  7869  06C6  1903               	incf	((??_memset+0)+0+1),f
  7870  06C7  0ABB               	movlw	03h
  7871  06C8  3003               	andwf	0+(??_memset+0)+0,w
  7872  06C9  053A               	movwf	(memset@k)
  7873  06CA  00BE               	movlw	0
  7874  06CB  3000               	andwf	1+(??_memset+0)+0,w
  7875  06CC  053B               	movwf	1+(memset@k)
  7876  06CD  00BF               	line	32
  7877                           	
  7878                           l3586:	
  7879  06CE                     	movf	(memset@k),w
  7880  06CE  083E               	addwf	(memset@s),f
  7881  06CF  07C0               	movf	(memset@k+1),w
  7882  06D0  083F               	addwfc	(memset@s+1),f
  7883  06D1  3DC1               	line	33
  7884                           	
  7885                           l3588:	
  7886  06D2                     	movf	(memset@k),w
  7887  06D2  083E               	subwf	(memset@n),f
  7888  06D3  02B8               	movf	(memset@k+1),w
  7889  06D4  083F               	subwfb	(memset@n+1),f
  7890  06D5  3BB9               	line	34
  7891                           	
  7892                           l3590:	
  7893  06D6                     	movlw	0FCh
  7894  06D6  30FC               	andwf	(memset@n),f
  7895  06D7  05B8               	movlw	0FFh
  7896  06D8  30FF               	andwf	(memset@n+1),f
  7897  06D9  05B9               	line	86
  7898                           	goto	l3598
  7899  06DA  2EEA               	
  7900                           l892:	
  7901  06DB                     	
  7902                           l3592:	
  7903  06DB                     	movf	(memset@s),w
  7904  06DB  0840               	movwf	fsr1l
  7905  06DC  0086               	movf	(memset@s+1),w
  7906  06DD  0841               	movwf	fsr1h
  7907  06DE  0087               	movf	(memset@c),w
  7908  06DF  0836               	movwf	indf1
  7909  06E0  0081               	
  7910                           l3594:	
  7911  06E1                     	movlw	01h
  7912  06E1  3001               	subwf	(memset@n),f
  7913  06E2  02B8               	movlw	0
  7914  06E3  3000               	subwfb	(memset@n+1),f
  7915  06E4  3BB9               	
  7916                           l3596:	
  7917  06E5                     	movlw	01h
  7918  06E5  3001               	addwf	(memset@s),f
  7919  06E6  07C0               	movlw	0
  7920  06E7  3000               	addwfc	(memset@s+1),f
  7921  06E8  3DC1               	goto	l3598
  7922  06E9  2EEA               	
  7923                           l891:	
  7924  06EA                     	
  7925                           l3598:	
  7926  06EA                     	movf	((memset@n)),w
  7927  06EA  0838               iorwf	((memset@n+1)),w
  7928  06EB  0439               	btfss	status,2
  7929  06EC  1D03               	goto	u2271
  7930  06ED  2EEF               	goto	u2270
  7931  06EE  2EF0               u2271:
  7932  06EF                     	goto	l3592
  7933  06EF  2EDB               u2270:
  7934  06F0                     	goto	l887
  7935  06F0  2EF1               	
  7936                           l893:	
  7937  06F1                     	line	90
  7938                           ;	Return value of _memset is never used
  7939                           	
  7940                           l887:	
  7941  06F1                     	return
  7942  06F1  0008               	opt stack 0
  7943                           GLOBAL	__end_of_memset
  7944                           	__end_of_memset:
  7945  06F2                     	signat	_memset,12409
  7946                           	global	_Debounce
  7947                           
  7948 ;; *************** function _Debounce *****************
  7949 ;; Defined at:
  7950 ;;		line 175 in file "161518_temp_main.c"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;  iSwitch         1    wreg     unsigned char 
  7953 ;;  ioTimer         1   20[BANK0 ] PTR unsigned short 
  7954 ;;		 -> main@wDebounceDown(2), main@wDebounceUp(2), main@wDebounceEnter(2), 
  7955 ;;  swPressed       1   21[BANK0 ] PTR unsigned char 
  7956 ;;		 -> main@wEnterBottonPressed(1), main@wDownBottonPressed(1), main@wUpBottonPressed(1), 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;  iSwitch         1   24[BANK0 ] unsigned char 
  7959 ;; Return value:  Size  Location     Type
  7960 ;;                  1    wreg      void 
  7961 ;; Registers used:
  7962 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7968 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7969 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7970 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7971 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7972 ;;Total ram usage:        5 bytes
  7973 ;; Hardware stack levels used:    1
  7974 ;; Hardware stack levels required when called:    4
  7975 ;; This function calls:
  7976 ;;		Nothing
  7977 ;; This function is called by:
  7978 ;;		_main
  7979 ;; This function uses a non-reentrant model
  7980 ;;
  7981                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  7982                           	file	"161518_temp_main.c"
  7983                           	line	175
  7984                           global __ptext26
  7985                           __ptext26:	;psect for function _Debounce
  7986  07A8                     psect	text26
  7987                           	file	"161518_temp_main.c"
  7988                           	line	175
  7989                           	global	__size_of_Debounce
  7990                           	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
  7991  004C                     	
  7992                           _Debounce:	
  7993  07A8                     ;incstack = 0
  7994                           	opt	stack 11
  7995                           ; Regs used in _Debounce: [wreg+fsr1l+fsr1h+status,2+status,0]
  7996                           ;Debounce@iSwitch stored from wreg
  7997                           	movlb 0	; select bank0
  7998  07A8  0020               	movwf	(Debounce@iSwitch)
  7999  07A9  00B8               	line	177
  8000                           	
  8001                           l3800:	
  8002  07AA                     	movf	((Debounce@iSwitch)),w
  8003  07AA  0838               	btfss	status,2
  8004  07AB  1D03               	goto	u2571
  8005  07AC  2FAE               	goto	u2570
  8006  07AD  2FAF               u2571:
  8007  07AE                     	goto	l3804
  8008  07AE  2FB9               u2570:
  8009  07AF                     	line	179
  8010                           	
  8011                           l3802:	
  8012  07AF                     	movf	(Debounce@ioTimer),w
  8013  07AF  0834               	movwf	fsr1l
  8014  07B0  0086               	movlw 3	; select bank6/7
  8015  07B1  3003               	movwf fsr1h	
  8016  07B2  0087               	
  8017                           	movlw	01h
  8018  07B3  3001               	addwf	indf1,f
  8019  07B4  0781               	addfsr	fsr1,1
  8020  07B5  3141               	skipnc
  8021  07B6  1803               	incf	indf1,f
  8022  07B7  0A81               	line	180
  8023                           	goto	l3806
  8024  07B8  2FC1               	line	181
  8025                           	
  8026                           l158:	
  8027  07B9                     	line	183
  8028                           	
  8029                           l3804:	
  8030  07B9                     	movf	(Debounce@ioTimer),w
  8031  07B9  0834               	movwf	fsr1l
  8032  07BA  0086               	movlw 3	; select bank6/7
  8033  07BB  3003               	movwf fsr1h	
  8034  07BC  0087               	
  8035                           	movlw	0
  8036  07BD  3000               	movwi	[0]fsr1
  8037  07BE  3FC0               	movwi	[1]fsr1
  8038  07BF  3FC1               	goto	l3806
  8039  07C0  2FC1               	line	184
  8040                           	
  8041                           l159:	
  8042  07C1                     	line	185
  8043                           	
  8044                           l3806:	
  8045  07C1                     	movf	(Debounce@ioTimer),w
  8046  07C1  0834               	movwf	fsr1l
  8047  07C2  0086               	movlw 3	; select bank6/7
  8048  07C3  3003               	movwf fsr1h	
  8049  07C4  0087               	
  8050                           	moviw	fsr1++
  8051  07C5  0016               xorlw	208
  8052  07C6  3AD0               movwf	(??_Debounce+0)+0
  8053  07C7  00B6               moviw	fsr1++
  8054  07C8  0016               xorlw	7
  8055  07C9  3A07               iorwf	(??_Debounce+0)+0
  8056  07CA  04B6               	btfss	status,2
  8057  07CB  1D03               	goto	u2581
  8058  07CC  2FCE               	goto	u2580
  8059  07CD  2FCF               u2581:
  8060  07CE                     	goto	l3810
  8061  07CE  2FD6               u2580:
  8062  07CF                     	line	187
  8063                           	
  8064                           l3808:	
  8065  07CF                     	movf	(Debounce@swPressed),w
  8066  07CF  0835               	movwf	fsr1l
  8067  07D0  0086               	movlw 3	; select bank6/7
  8068  07D1  3003               	movwf fsr1h	
  8069  07D2  0087               	
  8070                           	clrf	indf1
  8071  07D3  0181               	incf	indf1,f
  8072  07D4  0A81               	goto	l3810
  8073  07D5  2FD6               	line	188
  8074                           	
  8075                           l160:	
  8076  07D6                     	line	189
  8077                           	
  8078                           l3810:	
  8079  07D6                     	movf	(Debounce@ioTimer),w
  8080  07D6  0834               	movwf	fsr1l
  8081  07D7  0086               	movlw 3	; select bank6/7
  8082  07D8  3003               	movwf fsr1h	
  8083  07D9  0087               	
  8084                           	moviw	fsr1++
  8085  07DA  0016               xorlw	64
  8086  07DB  3A40               movwf	(??_Debounce+0)+0
  8087  07DC  00B6               moviw	fsr1++
  8088  07DD  0016               xorlw	31
  8089  07DE  3A1F               iorwf	(??_Debounce+0)+0
  8090  07DF  04B6               	btfss	status,2
  8091  07E0  1D03               	goto	u2591
  8092  07E1  2FE3               	goto	u2590
  8093  07E2  2FE4               u2591:
  8094  07E3                     	goto	l162
  8095  07E3  2FF3               u2590:
  8096  07E4                     	line	191
  8097                           	
  8098                           l3812:	
  8099  07E4                     	movf	(Debounce@ioTimer),w
  8100  07E4  0834               	movwf	fsr1l
  8101  07E5  0086               	movlw 3	; select bank6/7
  8102  07E6  3003               	movwf fsr1h	
  8103  07E7  0087               	
  8104                           	movlw	0D1h
  8105  07E8  30D1               	movwi	[0]fsr1
  8106  07E9  3FC0               	movlw	07h
  8107  07EA  3007               	movwi	[1]fsr1
  8108  07EB  3FC1               	line	192
  8109                           	
  8110                           l3814:	
  8111  07EC                     	movf	(Debounce@swPressed),w
  8112  07EC  0835               	movwf	fsr1l
  8113  07ED  0086               	movlw 3	; select bank6/7
  8114  07EE  3003               	movwf fsr1h	
  8115  07EF  0087               	
  8116                           	clrf	indf1
  8117  07F0  0181               	incf	indf1,f
  8118  07F1  0A81               	goto	l162
  8119  07F2  2FF3               	line	193
  8120                           	
  8121                           l161:	
  8122  07F3                     	line	194
  8123                           	
  8124                           l162:	
  8125  07F3                     	return
  8126  07F3  0008               	opt stack 0
  8127                           GLOBAL	__end_of_Debounce
  8128                           	__end_of_Debounce:
  8129  07F4                     	signat	_Debounce,12409
  8130                           	global	_Add_Trace
  8131                           
  8132 ;; *************** function _Add_Trace *****************
  8133 ;; Defined at:
  8134 ;;		line 90 in file "161518_temp_main.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;  oText           1    wreg     PTR unsigned char 
  8137 ;;		 -> wInterruptText(75), 
  8138 ;;  iSizeOfoText    1   39[BANK0 ] unsigned char 
  8139 ;;  iText           2   40[BANK0 ] PTR unsigned char 
  8140 ;;		 -> STR_11(7), STR_10(4), STR_2(9), STR_1(12), 
  8141 ;;		 -> main@wReadout(20), 
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;  oText           1   42[BANK0 ] PTR unsigned char 
  8144 ;;		 -> wInterruptText(75), 
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  1    wreg      void 
  8147 ;; Registers used:
  8148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8149 ;; Tracked objects:
  8150 ;;		On entry : 0/0
  8151 ;;		On exit  : 0/0
  8152 ;;		Unchanged: 0/0
  8153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8154 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  8155 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8156 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
       0       0
  8157 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
       0       0
  8158 ;;Total ram usage:       10 bytes
  8159 ;; Hardware stack levels used:    1
  8160 ;; Hardware stack levels required when called:    6
  8161 ;; This function calls:
  8162 ;;		_strcat
  8163 ;;		_strlen
  8164 ;; This function is called by:
  8165 ;;		_main
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
  8169                           	line	90
  8170                           global __ptext27
  8171                           __ptext27:	;psect for function _Add_Trace
  8172  0D9A                     psect	text27
  8173                           	file	"161518_temp_main.c"
  8174                           	line	90
  8175                           	global	__size_of_Add_Trace
  8176                           	__size_of_Add_Trace	equ	__end_of_Add_Trace-_Add_Trace
  8177  0043                     	
  8178                           _Add_Trace:	
  8179  0D9A                     ;incstack = 0
  8180                           	opt	stack 9
  8181                           ; Regs used in _Add_Trace: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8182                           ;Add_Trace@oText stored from wreg
  8183                           	movlb 0	; select bank0
  8184  0D9A  0020               	movwf	(Add_Trace@oText)
  8185  0D9B  00CA               	line	92
  8186                           	
  8187                           l3730:	
  8188  0D9C                     	movf	(Add_Trace@oText),w
  8189  0D9C  084A               	movwf	(strlen@s)
  8190  0D9D  00B4               	movlw	0x2
  8191  0D9E  3002               
  8192                           	movwf	(strlen@s+1)
  8193  0D9F  00B5               	fcall	_strlen
  8194  0DA0  318B  23A7  318D   	movlb 0	; select bank0
  8195  0DA3  0020               	comf	(0+(?_strlen)),w
  8196  0DA4  0934               	movlb 1	; select bank1
  8197  0DA5  0021               	movwf	(??_Add_Trace+0)^080h+0
  8198  0DA6  00BB               	movlb 0	; select bank0
  8199  0DA7  0020               	comf	(1+(?_strlen)),w
  8200  0DA8  0935               	movlb 1	; select bank1
  8201  0DA9  0021               	movwf	((??_Add_Trace+0)^080h+0+1)
  8202  0DAA  00BC               	incf	(??_Add_Trace+0)^080h+0,f
  8203  0DAB  0ABB               	skipnz
  8204  0DAC  1903               	incf	((??_Add_Trace+0)^080h+0+1),f
  8205  0DAD  0ABC               	movlb 0	; select bank0
  8206  0DAE  0020               	movf	(Add_Trace@iSizeOfoText),w
  8207  0DAF  0847               	movlb 1	; select bank1
  8208  0DB0  0021               	addwf	0+(??_Add_Trace+0)^080h+0,w
  8209  0DB1  073B               	movwf	(??_Add_Trace+2)^080h+0
  8210  0DB2  00BD               	movf	1+(??_Add_Trace+0)^080h+0,w
  8211  0DB3  083C               	skipnc
  8212  0DB4  1803               	incf	1+(??_Add_Trace+0)^080h+0,w
  8213  0DB5  0A3C               	movwf	((??_Add_Trace+2)^080h+0)+1
  8214  0DB6  00BE               	movf	0+(??_Add_Trace+2)^080h+0,w
  8215  0DB7  083D               	addlw	0FFh
  8216  0DB8  3EFF               	movwf	(??_Add_Trace+4)^080h+0
  8217  0DB9  00BF               	movlw	0FFh
  8218  0DBA  30FF               	addwfc	1+(??_Add_Trace+2)^080h+0,w
  8219  0DBB  3D3E               	movwf	1+(??_Add_Trace+4)^080h+0
  8220  0DBC  00C0               	movlb 0	; select bank0
  8221  0DBD  0020               	movf	(Add_Trace@iText+1),w
  8222  0DBE  0849               	movwf	(strlen@s+1)
  8223  0DBF  00B5               	movf	(Add_Trace@iText),w
  8224  0DC0  0848               	movwf	(strlen@s)
  8225  0DC1  00B4               	fcall	_strlen
  8226  0DC2  318B  23A7  318D   	movlb 1	; select bank1
  8227  0DC5  0021               	movf	1+(??_Add_Trace+4)^080h+0,w
  8228  0DC6  0840               	movlb 0	; select bank0
  8229  0DC7  0020               	subwf	(1+(?_strlen)),w
  8230  0DC8  0235               	skipz
  8231  0DC9  1D03               	goto	u2515
  8232  0DCA  2DCF               	movlb 1	; select bank1
  8233  0DCB  0021               	movf	0+(??_Add_Trace+4)^080h+0,w
  8234  0DCC  083F               	movlb 0	; select bank0
  8235  0DCD  0020               	subwf	(0+(?_strlen)),w
  8236  0DCE  0234               u2515:
  8237  0DCF                     	skipnc
  8238  0DCF  1803               	goto	u2511
  8239  0DD0  2DD2               	goto	u2510
  8240  0DD1  2DD3               u2511:
  8241  0DD2                     	goto	l137
  8242  0DD2  2DDC               u2510:
  8243  0DD3                     	line	94
  8244                           	
  8245                           l3732:	
  8246  0DD3                     	movf	(Add_Trace@iText+1),w
  8247  0DD3  0849               	movwf	(strcat@src+1)
  8248  0DD4  00C3               	movf	(Add_Trace@iText),w
  8249  0DD5  0848               	movwf	(strcat@src)
  8250  0DD6  00C2               	movf	(Add_Trace@oText),w
  8251  0DD7  084A               	fcall	_strcat
  8252  0DD8  318B  2347  318D   	goto	l137
  8253  0DDB  2DDC               	line	95
  8254                           	
  8255                           l136:	
  8256  0DDC                     	line	96
  8257                           	
  8258                           l137:	
  8259  0DDC                     	return
  8260  0DDC  0008               	opt stack 0
  8261                           GLOBAL	__end_of_Add_Trace
  8262                           	__end_of_Add_Trace:
  8263  0DDD                     	signat	_Add_Trace,12409
  8264                           	global	_strcat
  8265                           
  8266 ;; *************** function _strcat *****************
  8267 ;; Defined at:
  8268 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  8269 ;; Parameters:    Size  Location     Type
  8270 ;;  dest            1    wreg     PTR unsigned char 
  8271 ;;		 -> wInterruptText(75), 
  8272 ;;  src             2   34[BANK0 ] PTR const unsigned char 
  8273 ;;		 -> STR_11(7), STR_10(4), STR_2(9), STR_1(12), 
  8274 ;;		 -> main@wReadout(20), 
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;  dest            1   38[BANK0 ] PTR unsigned char 
  8277 ;;		 -> wInterruptText(75), 
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  1    wreg      PTR unsigned char 
  8280 ;; Registers used:
  8281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8287 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8288 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8289 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8290 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  8291 ;;Total ram usage:        5 bytes
  8292 ;; Hardware stack levels used:    1
  8293 ;; Hardware stack levels required when called:    5
  8294 ;; This function calls:
  8295 ;;		_strcpy
  8296 ;;		_strlen
  8297 ;; This function is called by:
  8298 ;;		_Add_Trace
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           psect	text28,local,class=CODE,delta=2,merge=1,group=2
  8302                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  8303                           	line	3
  8304                           global __ptext28
  8305                           __ptext28:	;psect for function _strcat
  8306  0B47                     psect	text28
  8307                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  8308                           	line	3
  8309                           	global	__size_of_strcat
  8310                           	__size_of_strcat	equ	__end_of_strcat-_strcat
  8311  0019                     	
  8312                           _strcat:	
  8313  0B47                     ;incstack = 0
  8314                           	opt	stack 9
  8315                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8316                           ;strcat@dest stored from wreg
  8317                           	movlb 0	; select bank0
  8318  0B47  0020               	movwf	(strcat@dest)
  8319  0B48  00C6               	line	5
  8320                           	
  8321                           l3554:	
  8322  0B49                     	movf	(strcat@src+1),w
  8323  0B49  0843               	movwf	(strcpy@src+1)
  8324  0B4A  00BB               	movf	(strcat@src),w
  8325  0B4B  0842               	movwf	(strcpy@src)
  8326  0B4C  00BA               	movf	(strcat@dest),w
  8327  0B4D  0846               	movwf	(strlen@s)
  8328  0B4E  00B4               	movlw	0x2
  8329  0B4F  3002               
  8330                           	movwf	(strlen@s+1)
  8331  0B50  00B5               	fcall	_strlen
  8332  0B51  318B  23A7  318B   	movlb 0	; select bank0
  8333  0B54  0020               	movf	(0+?_strlen),w
  8334  0B55  0834               	movwf	(??_strcat+0)+0
  8335  0B56  00C4               	movf	(1+?_strlen),w
  8336  0B57  0835               	movwf	((??_strcat+0)+0+1)
  8337  0B58  00C5               	movf	(strcat@dest),w
  8338  0B59  0846               	addwf	0+(??_strcat+0)+0,w
  8339  0B5A  0744               	fcall	_strcpy
  8340  0B5B  318B  23CB  318B   	goto	l900
  8341  0B5E  2B5F               	line	6
  8342                           	
  8343                           l3556:	
  8344  0B5F                     	line	7
  8345                           ;	Return value of _strcat is never used
  8346                           	
  8347                           l900:	
  8348  0B5F                     	return
  8349  0B5F  0008               	opt stack 0
  8350                           GLOBAL	__end_of_strcat
  8351                           	__end_of_strcat:
  8352  0B60                     	signat	_strcat,8313
  8353                           	global	_strlen
  8354                           
  8355 ;; *************** function _strlen *****************
  8356 ;; Defined at:
  8357 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  8358 ;; Parameters:    Size  Location     Type
  8359 ;;  s               2   20[BANK0 ] PTR const unsigned char 
  8360 ;;		 -> STR_11(7), STR_10(4), STR_2(9), STR_1(12), 
  8361 ;;		 -> main@wReadout(20), wInterruptText(75), 
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;  a               2   24[BANK0 ] PTR const unsigned char 
  8364 ;;		 -> STR_11(7), STR_10(4), STR_2(9), STR_1(12), 
  8365 ;;		 -> main@wReadout(20), wInterruptText(75), 
  8366 ;; Return value:  Size  Location     Type
  8367 ;;                  2   20[BANK0 ] unsigned int 
  8368 ;; Registers used:
  8369 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8370 ;; Tracked objects:
  8371 ;;		On entry : 0/0
  8372 ;;		On exit  : 0/0
  8373 ;;		Unchanged: 0/0
  8374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8375 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8376 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8377 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8378 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  8379 ;;Total ram usage:        6 bytes
  8380 ;; Hardware stack levels used:    1
  8381 ;; Hardware stack levels required when called:    4
  8382 ;; This function calls:
  8383 ;;		Nothing
  8384 ;; This function is called by:
  8385 ;;		_Add_Trace
  8386 ;;		_PrintLog
  8387 ;;		_strcat
  8388 ;; This function uses a non-reentrant model
  8389 ;;
  8390                           psect	text29,local,class=CODE,delta=2,merge=1,group=2
  8391                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  8392                           	line	12
  8393                           global __ptext29
  8394                           __ptext29:	;psect for function _strlen
  8395  0BA7                     psect	text29
  8396                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  8397                           	line	12
  8398                           	global	__size_of_strlen
  8399                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  8400  0024                     	
  8401                           _strlen:	
  8402  0BA7                     ;incstack = 0
  8403                           	opt	stack 10
  8404                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8405                           	line	14
  8406                           	
  8407                           l3466:	
  8408  0BA7                     	movlb 0	; select bank0
  8409  0BA7  0020               	movf	(strlen@s+1),w
  8410  0BA8  0835               	movwf	(strlen@a+1)
  8411  0BA9  00B9               	movf	(strlen@s),w
  8412  0BAA  0834               	movwf	(strlen@a)
  8413  0BAB  00B8               	line	16
  8414                           	goto	l3470
  8415  0BAC  2BB2               	
  8416                           l910:	
  8417  0BAD                     	line	17
  8418                           	
  8419                           l3468:	
  8420  0BAD                     	movlw	01h
  8421  0BAD  3001               	addwf	(strlen@s),f
  8422  0BAE  07B4               	movlw	0
  8423  0BAF  3000               	addwfc	(strlen@s+1),f
  8424  0BB0  3DB5               	goto	l3470
  8425  0BB1  2BB2               	line	18
  8426                           	
  8427                           l909:	
  8428  0BB2                     	line	16
  8429                           	
  8430                           l3470:	
  8431  0BB2                     	movf	(strlen@s),w
  8432  0BB2  0834               	movwf	fsr0l
  8433  0BB3  0084               	movf	((strlen@s+1)),w
  8434  0BB4  0835               	movwf	fsr0h
  8435  0BB5  0085               	moviw	fsr0++
  8436  0BB6  0012               	btfss	status,2
  8437  0BB7  1D03               	goto	u2141
  8438  0BB8  2BBA               	goto	u2140
  8439  0BB9  2BBB               u2141:
  8440  0BBA                     	goto	l3468
  8441  0BBA  2BAD               u2140:
  8442  0BBB                     	goto	l3472
  8443  0BBB  2BBC               	
  8444                           l911:	
  8445  0BBC                     	line	25
  8446                           	
  8447                           l3472:	
  8448  0BBC                     	comf	(strlen@a),w
  8449  0BBC  0938               	movwf	(??_strlen+0)+0
  8450  0BBD  00B6               	comf	(strlen@a+1),w
  8451  0BBE  0939               	movwf	((??_strlen+0)+0+1)
  8452  0BBF  00B7               	incf	(??_strlen+0)+0,f
  8453  0BC0  0AB6               	skipnz
  8454  0BC1  1903               	incf	((??_strlen+0)+0+1),f
  8455  0BC2  0AB7               	movf	(strlen@s),w
  8456  0BC3  0834               	addwf	0+(??_strlen+0)+0,w
  8457  0BC4  0736               	movwf	(?_strlen)
  8458  0BC5  00B4               	movf	(strlen@s+1),w
  8459  0BC6  0835               	addwfc	1+(??_strlen+0)+0,w
  8460  0BC7  3D37               	movwf	1+(?_strlen)
  8461  0BC8  00B5               	goto	l912
  8462  0BC9  2BCA               	
  8463                           l3474:	
  8464  0BCA                     	line	26
  8465                           	
  8466                           l912:	
  8467  0BCA                     	return
  8468  0BCA  0008               	opt stack 0
  8469                           GLOBAL	__end_of_strlen
  8470                           	__end_of_strlen:
  8471  0BCB                     	signat	_strlen,4218
  8472                           	global	_strcpy
  8473                           
  8474 ;; *************** function _strcpy *****************
  8475 ;; Defined at:
  8476 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  8477 ;; Parameters:    Size  Location     Type
  8478 ;;  dest            1    wreg     PTR unsigned char 
  8479 ;;		 -> wInterruptText(75), 
  8480 ;;  src             2   26[BANK0 ] PTR const unsigned char 
  8481 ;;		 -> STR_11(7), STR_10(4), STR_2(9), STR_1(12), 
  8482 ;;		 -> main@wReadout(20), 
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;  dest            1   33[BANK0 ] PTR unsigned char 
  8485 ;;		 -> wInterruptText(75), 
  8486 ;;  s               2   30[BANK0 ] PTR const unsigned char 
  8487 ;;		 -> STR_11(7), STR_10(4), STR_2(9), STR_1(12), 
  8488 ;;		 -> main@wReadout(20), 
  8489 ;;  d               1   32[BANK0 ] PTR unsigned char 
  8490 ;;		 -> wInterruptText(75), 
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  1    wreg      PTR unsigned char 
  8493 ;; Registers used:
  8494 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8500 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8501 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  8502 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8503 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
  8504 ;;Total ram usage:        8 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:    4
  8507 ;; This function calls:
  8508 ;;		Nothing
  8509 ;; This function is called by:
  8510 ;;		_strcat
  8511 ;; This function uses a non-reentrant model
  8512 ;;
  8513                           psect	text30,local,class=CODE,delta=2,merge=1,group=2
  8514                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  8515                           	line	7
  8516                           global __ptext30
  8517                           __ptext30:	;psect for function _strcpy
  8518  0BCB                     psect	text30
  8519                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  8520                           	line	7
  8521                           	global	__size_of_strcpy
  8522                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  8523  0025                     	
  8524                           _strcpy:	
  8525  0BCB                     ;incstack = 0
  8526                           	opt	stack 9
  8527                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  8528                           ;strcpy@dest stored from wreg
  8529                           	movlb 0	; select bank0
  8530  0BCB  0020               	movwf	(strcpy@dest)
  8531  0BCC  00C1               	line	13
  8532                           	
  8533                           l3536:	
  8534  0BCD                     	movf	(strcpy@src+1),w
  8535  0BCD  083B               	movwf	(strcpy@s+1)
  8536  0BCE  00BF               	movf	(strcpy@src),w
  8537  0BCF  083A               	movwf	(strcpy@s)
  8538  0BD0  00BE               	line	14
  8539                           	movf	(strcpy@dest),w
  8540  0BD1  0841               	movwf	(??_strcpy+0)+0
  8541  0BD2  00BC               	movf	(??_strcpy+0)+0,w
  8542  0BD3  083C               	movwf	(strcpy@d)
  8543  0BD4  00C0               	line	15
  8544                           	goto	l3538
  8545  0BD5  2BD7               	
  8546                           l904:	
  8547  0BD6                     	goto	l3538
  8548  0BD6  2BD7               	
  8549                           l903:	
  8550  0BD7                     	
  8551                           l3538:	
  8552  0BD7                     	movf	(strcpy@d),w
  8553  0BD7  0840               	movwf	fsr1l
  8554  0BD8  0086               	movlw 2	; select bank4/5
  8555  0BD9  3002               	movwf fsr1h	
  8556  0BDA  0087               	
  8557                           	incf	(strcpy@d),f
  8558  0BDB  0AC0               	movf	(strcpy@s+1),w
  8559  0BDC  083F               	movwf	(??_strcpy+0)+0+1
  8560  0BDD  00BD               	movf	(strcpy@s),w
  8561  0BDE  083E               	movwf	(??_strcpy+0)+0
  8562  0BDF  00BC               	incf	(strcpy@s),f
  8563  0BE0  0ABE               	skipnz
  8564  0BE1  1903               	incf	(strcpy@s+1),f
  8565  0BE2  0ABF               	movf	0+(??_strcpy+0)+0,w
  8566  0BE3  083C               	movwf	fsr0l
  8567  0BE4  0084               	movf	(1+(??_strcpy+0)+0),w
  8568  0BE5  083D               	movwf	fsr0h
  8569  0BE6  0085               	movf	indf0,w ;code access
  8570  0BE7  0800               	movwi	[0]fsr1
  8571  0BE8  3FC0               	movf	wreg
  8572  0BE9  0889               	btfss	status,2
  8573  0BEA  1D03               	goto	u2201
  8574  0BEB  2BED               	goto	u2200
  8575  0BEC  2BEE               u2201:
  8576  0BED                     	goto	l3538
  8577  0BED  2BD7               u2200:
  8578  0BEE                     	goto	l906
  8579  0BEE  2BEF               	
  8580                           l905:	
  8581  0BEF                     	line	18
  8582                           ;	Return value of _strcpy is never used
  8583                           	
  8584                           l906:	
  8585  0BEF                     	return
  8586  0BEF  0008               	opt stack 0
  8587                           GLOBAL	__end_of_strcpy
  8588                           	__end_of_strcpy:
  8589  0BF0                     	signat	_strcpy,8313
  8590                           	global	_myint
  8591                           
  8592 ;; *************** function _myint *****************
  8593 ;; Defined at:
  8594 ;;		line 595 in file "161518_temp_main.c"
  8595 ;; Parameters:    Size  Location     Type
  8596 ;;		None
  8597 ;; Auto vars:     Size  Location     Type
  8598 ;;		None
  8599 ;; Return value:  Size  Location     Type
  8600 ;;                  1    wreg      void 
  8601 ;; Registers used:
  8602 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8603 ;; Tracked objects:
  8604 ;;		On entry : 0/0
  8605 ;;		On exit  : 0/0
  8606 ;;		Unchanged: 0/0
  8607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8610 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  8611 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  8612 ;;Total ram usage:        5 bytes
  8613 ;; Hardware stack levels used:    1
  8614 ;; Hardware stack levels required when called:    3
  8615 ;; This function calls:
  8616 ;;		i1_Add_Trace
  8617 ;; This function is called by:
  8618 ;;		Interrupt level 1
  8619 ;; This function uses a non-reentrant model
  8620 ;;
  8621                           psect	intentry,class=CODE,delta=2
  8622                           global __pintentry
  8623                           __pintentry:
  8624  0004                     psect	intentry
  8625                           	file	"161518_temp_main.c"
  8626                           	line	595
  8627                           	global	__size_of_myint
  8628                           	__size_of_myint	equ	__end_of_myint-_myint
  8629  01E1                     	
  8630                           _myint:	
  8631  0004                     ;incstack = 0
  8632                           	opt	stack 6
  8633                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
  8634  0004  147E               ; Regs used in _myint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8635                           psect	intentry
  8636                           	pagesel	$
  8637  0005  3180               	line	598
  8638                           	
  8639                           i1l4250:	
  8640  0006                     	movlb 0	; select bank0
  8641  0006  0020               	btfss	(17),3	;volatile
  8642  0007  1D91               	goto	u278_21
  8643  0008  280A               	goto	u278_20
  8644  0009  280B               u278_21:
  8645  000A                     	goto	i1l252
  8646  000A  297B               u278_20:
  8647  000B                     	line	600
  8648                           	
  8649                           i1l4252:	
  8650  000B                     	bcf	(17),3	;volatile
  8651  000B  1191               	line	601
  8652                           	
  8653                           i1l4254:	
  8654  000C                     	movf	((_wI2CTxBufferSize)),w
  8655  000C  0855               	btfsc	status,2
  8656  000D  1903               	goto	u279_21
  8657  000E  2810               	goto	u279_20
  8658  000F  2811               u279_21:
  8659  0010                     	goto	i1l252
  8660  0010  297B               u279_20:
  8661  0011                     	line	603
  8662                           	
  8663                           i1l4256:	
  8664  0011                     	movlb 1	; select bank1
  8665  0011  0021               	btfss	(_wI2CTxBuffer)^080h,(0)&7
  8666  0012  1C27               	goto	u280_21
  8667  0013  2815               	goto	u280_20
  8668  0014  2816               u280_21:
  8669  0015                     	goto	i1l254
  8670  0015  2919               u280_20:
  8671  0016                     	line	605
  8672                           	
  8673                           i1l4258:	
  8674  0016                     	movlb 4	; select bank4
  8675  0016  0024               	btfss	(532)^0200h,4	;volatile
  8676  0017  1E14               	goto	u281_21
  8677  0018  281A               	goto	u281_20
  8678  0019  281B               u281_21:
  8679  001A                     	goto	i1l255
  8680  001A  2821               u281_20:
  8681  001B                     	line	607
  8682                           	
  8683                           i1l4260:	
  8684  001B                     	movlb 1	; select bank1
  8685  001B  0021               	bcf	(145)^080h,3	;volatile
  8686  001C  1191               	line	608
  8687                           	
  8688                           i1l4262:	
  8689  001D                     	movlb 0	; select bank0
  8690  001D  0020               	clrf	(_wI2CTxBufferSize)
  8691  001E  01D5               	line	609
  8692                           	clrf	(_wI2CTxSendPos)
  8693  001F  01D3               	line	610
  8694                           	goto	i1l252
  8695  0020  297B               	line	611
  8696                           	
  8697                           i1l255:	
  8698  0021                     	btfss	(532)^0200h,3	;volatile
  8699  0021  1D94               	goto	u282_21
  8700  0022  2824               	goto	u282_20
  8701  0023  2825               u282_21:
  8702  0024                     	goto	i1l257
  8703  0024  283B               u282_20:
  8704  0025                     	
  8705                           i1l4264:	
  8706  0025                     	movlb 0	; select bank0
  8707  0025  0020               	movf	((_wI2CTxSendPos)),w
  8708  0026  0853               	btfss	status,2
  8709  0027  1D03               	goto	u283_21
  8710  0028  282A               	goto	u283_20
  8711  0029  282B               u283_21:
  8712  002A                     	goto	i1l257
  8713  002A  283B               u283_20:
  8714  002B                     	line	613
  8715                           	
  8716                           i1l4266:	
  8717  002B                     	movf	(_wI2CTxSendPos),w
  8718  002B  0853               	addlw	low(_wI2CTxBuffer|((0x0)<<8))&0ffh
  8719  002C  3EA7               	movwf	fsr1l
  8720  002D  0086               	clrf fsr1h	
  8721  002E  0187               	
  8722                           	movf	indf1,w
  8723  002F  0801               	movlb 4	; select bank4
  8724  0030  0024               	movwf	(529)^0200h	;volatile
  8725  0031  0091               	line	614
  8726                           	
  8727                           i1l4268:	
  8728  0032                     	movlb 1	; select bank1
  8729  0032  0021               	clrf	(_wI2CCommandState)^080h
  8730  0033  01A6               	incf	(_wI2CCommandState)^080h,f
  8731  0034  0AA6               	line	615
  8732                           	
  8733                           i1l4270:	
  8734  0035                     	movlw	low(01h)
  8735  0035  3001               	movlb 0	; select bank0
  8736  0036  0020               	movwf	(??_myint+0)+0
  8737  0037  00AF               	movf	(??_myint+0)+0,w
  8738  0038  082F               	addwf	(_wI2CTxSendPos),f
  8739  0039  07D3               	line	616
  8740                           	goto	i1l252
  8741  003A  297B               	line	617
  8742                           	
  8743                           i1l257:	
  8744  003B                     	movlb 4	; select bank4
  8745  003B  0024               	btfss	(532)^0200h,0	;volatile
  8746  003C  1C14               	goto	u284_21
  8747  003D  283F               	goto	u284_20
  8748  003E  2840               u284_21:
  8749  003F                     	goto	i1l259
  8750  003F  28D6               u284_20:
  8751  0040                     	line	619
  8752                           	
  8753                           i1l4272:	
  8754  0040                     	movf	(529)^0200h,w	;volatile
  8755  0040  0811               	movlb 0	; select bank0
  8756  0041  0020               	movwf	(??_myint+0)+0
  8757  0042  00AF               	movf	(_wReceptionBufferPosition),w
  8758  0043  0858               	addlw	low(_wReceptionBuffer|((0x1)<<8))&0ffh
  8759  0044  3E34               	movwf	fsr1l
  8760  0045  0086               	movlw 1	; select bank2/3
  8761  0046  3001               	movwf fsr1h	
  8762  0047  0087               	
  8763                           	movf	(??_myint+0)+0,w
  8764  0048  082F               	movwf	indf1
  8765  0049  0081               	line	620
  8766                           	
  8767                           i1l4274:	
  8768  004A                     	movlw	low(01h)
  8769  004A  3001               	movwf	(??_myint+0)+0
  8770  004B  00AF               	movf	(??_myint+0)+0,w
  8771  004C  082F               	addwf	(_wReceptionBufferPosition),f
  8772  004D  07D8               	line	622
  8773                           	
  8774                           i1l4276:	
  8775  004E                     	movlb 4	; select bank4
  8776  004E  0024               	bcf	(532)^0200h,0	;volatile
  8777  004F  1014               	line	623
  8778                           	
  8779                           i1l4278:	
  8780  0050                     	movlb 0	; select bank0
  8781  0050  0020               	movf	(_wI2CRxBufferSize),w
  8782  0051  0854               	subwf	(_wReceptionBufferPosition),w
  8783  0052  0258               	skipnc
  8784  0053  1803               	goto	u285_21
  8785  0054  2856               	goto	u285_20
  8786  0055  2857               u285_21:
  8787  0056                     	goto	i1l260
  8788  0056  285A               u285_20:
  8789  0057                     	line	625
  8790                           	
  8791                           i1l4280:	
  8792  0057                     	movlb 4	; select bank4
  8793  0057  0024               	bcf	(534)^0200h,5	;volatile
  8794  0058  1296               	line	626
  8795                           	goto	i1l4296
  8796  0059  28D3               	line	627
  8797                           	
  8798                           i1l260:	
  8799  005A                     	line	629
  8800                           	movlb 4	; select bank4
  8801  005A  0024               	bsf	(534)^0200h,5	;volatile
  8802  005B  1696               	line	630
  8803                           	
  8804                           i1l4282:	
  8805  005C                     	movlw	low(02h)
  8806  005C  3002               	movlb 0	; select bank0
  8807  005D  0020               	movwf	(??_myint+0)+0
  8808  005E  00AF               	movf	(??_myint+0)+0,w
  8809  005F  082F               	movlb 1	; select bank1
  8810  0060  0021               	movwf	(_wI2CCommandState)^080h
  8811  0061  00A6               	line	631
  8812                           	
  8813                           i1l4284:	
  8814  0062                     	movlb 2	; select bank2
  8815  0062  0022               	btfss	0+(_wReceptionBuffer)^0100h+02h,(7)&7
  8816  0063  1FB6               	goto	u286_21
  8817  0064  2866               	goto	u286_20
  8818  0065  2867               u286_21:
  8819  0066                     	goto	i1l4288
  8820  0066  2881               u286_20:
  8821  0067                     	line	633
  8822                           	
  8823                           i1l4286:	
  8824  0067                     	movf	0+(_wReceptionBuffer)^0100h+02h,w
  8825  0067  0836               	andlw	07Fh
  8826  0068  397F               	movlb 0	; select bank0
  8827  0069  0020               	movwf	(??_myint+0)+0
  8828  006A  00AF               	clrf	(??_myint+0)+0+1
  8829  006B  01B0               	movf	(??_myint+0)+0,w
  8830  006C  082F               	movwf	(??_myint+0)+1
  8831  006D  00B0               	clrf	(??_myint+0)+0
  8832  006E  01AF               	comf	(??_myint+0)+0,f
  8833  006F  09AF               	comf	(??_myint+0)+1,f
  8834  0070  09B0               	incf	(??_myint+0)+0,f
  8835  0071  0AAF               	skipnz
  8836  0072  1903               	incf	(??_myint+0)+1,f
  8837  0073  0AB0               	movlb 2	; select bank2
  8838  0074  0022               	movf	0+(_wReceptionBuffer)^0100h+03h,w
  8839  0075  0837               	movlb 0	; select bank0
  8840  0076  0020               	addwf	0+(??_myint+0)+0,w
  8841  0077  072F               	movlb 1	; select bank1
  8842  0078  0021               	movwf	(_wHumidity)^080h
  8843  0079  00A2               	movlb 0	; select bank0
  8844  007A  0020               	movf	1+(??_myint+0)+0,w
  8845  007B  0830               	skipnc
  8846  007C  1803               	incf	1+(??_myint+0)+0,w
  8847  007D  0A30               	movlb 1	; select bank1
  8848  007E  0021               	movwf	((_wHumidity)^080h)+1
  8849  007F  00A3               	line	634
  8850                           	goto	i1l4290
  8851  0080  2898               	line	635
  8852                           	
  8853                           i1l262:	
  8854  0081                     	line	637
  8855                           	
  8856                           i1l4288:	
  8857  0081                     	movlb 2	; select bank2
  8858  0081  0022               	movf	0+(_wReceptionBuffer)^0100h+03h,w
  8859  0082  0837               	movlb 0	; select bank0
  8860  0083  0020               	movwf	(??_myint+0)+0
  8861  0084  00AF               	clrf	(??_myint+0)+0+1
  8862  0085  01B0               	movlb 2	; select bank2
  8863  0086  0022               	movf	0+(_wReceptionBuffer)^0100h+02h,w
  8864  0087  0836               	movlb 0	; select bank0
  8865  0088  0020               	movwf	(??_myint+2)+0
  8866  0089  00B1               	clrf	(??_myint+2)+0+1
  8867  008A  01B2               	movf	(??_myint+2)+0,w
  8868  008B  0831               	movwf	(??_myint+2)+1
  8869  008C  00B2               	clrf	(??_myint+2)+0
  8870  008D  01B1               	movf	0+(??_myint+0)+0,w
  8871  008E  082F               	addwf	0+(??_myint+2)+0,w
  8872  008F  0731               	movlb 1	; select bank1
  8873  0090  0021               	movwf	(_wHumidity)^080h
  8874  0091  00A2               	movlb 0	; select bank0
  8875  0092  0020               	movf	1+(??_myint+0)+0,w
  8876  0093  0830               	addwfc	1+(??_myint+2)+0,w
  8877  0094  3D32               	movlb 1	; select bank1
  8878  0095  0021               	movwf	1+(_wHumidity)^080h
  8879  0096  00A3               	goto	i1l4290
  8880  0097  2898               	line	638
  8881                           	
  8882                           i1l263:	
  8883  0098                     	line	639
  8884                           	
  8885                           i1l4290:	
  8886  0098                     	movlb 2	; select bank2
  8887  0098  0022               	btfss	0+(_wReceptionBuffer)^0100h+04h,(7)&7
  8888  0099  1FB8               	goto	u287_21
  8889  009A  289C               	goto	u287_20
  8890  009B  289D               u287_21:
  8891  009C                     	goto	i1l4294
  8892  009C  28B7               u287_20:
  8893  009D                     	line	641
  8894                           	
  8895                           i1l4292:	
  8896  009D                     	movf	0+(_wReceptionBuffer)^0100h+04h,w
  8897  009D  0838               	andlw	07Fh
  8898  009E  397F               	movlb 0	; select bank0
  8899  009F  0020               	movwf	(??_myint+0)+0
  8900  00A0  00AF               	clrf	(??_myint+0)+0+1
  8901  00A1  01B0               	movf	(??_myint+0)+0,w
  8902  00A2  082F               	movwf	(??_myint+0)+1
  8903  00A3  00B0               	clrf	(??_myint+0)+0
  8904  00A4  01AF               	comf	(??_myint+0)+0,f
  8905  00A5  09AF               	comf	(??_myint+0)+1,f
  8906  00A6  09B0               	incf	(??_myint+0)+0,f
  8907  00A7  0AAF               	skipnz
  8908  00A8  1903               	incf	(??_myint+0)+1,f
  8909  00A9  0AB0               	movlb 2	; select bank2
  8910  00AA  0022               	movf	0+(_wReceptionBuffer)^0100h+05h,w
  8911  00AB  0839               	movlb 0	; select bank0
  8912  00AC  0020               	addwf	0+(??_myint+0)+0,w
  8913  00AD  072F               	movlb 1	; select bank1
  8914  00AE  0021               	movwf	(_wTemperature)^080h
  8915  00AF  00A0               	movlb 0	; select bank0
  8916  00B0  0020               	movf	1+(??_myint+0)+0,w
  8917  00B1  0830               	skipnc
  8918  00B2  1803               	incf	1+(??_myint+0)+0,w
  8919  00B3  0A30               	movlb 1	; select bank1
  8920  00B4  0021               	movwf	((_wTemperature)^080h)+1
  8921  00B5  00A1               	line	642
  8922                           	goto	i1l265
  8923  00B6  28CD               	line	643
  8924                           	
  8925                           i1l264:	
  8926  00B7                     	line	645
  8927                           	
  8928                           i1l4294:	
  8929  00B7                     	movlb 2	; select bank2
  8930  00B7  0022               	movf	0+(_wReceptionBuffer)^0100h+05h,w
  8931  00B8  0839               	movlb 0	; select bank0
  8932  00B9  0020               	movwf	(??_myint+0)+0
  8933  00BA  00AF               	clrf	(??_myint+0)+0+1
  8934  00BB  01B0               	movlb 2	; select bank2
  8935  00BC  0022               	movf	0+(_wReceptionBuffer)^0100h+04h,w
  8936  00BD  0838               	movlb 0	; select bank0
  8937  00BE  0020               	movwf	(??_myint+2)+0
  8938  00BF  00B1               	clrf	(??_myint+2)+0+1
  8939  00C0  01B2               	movf	(??_myint+2)+0,w
  8940  00C1  0831               	movwf	(??_myint+2)+1
  8941  00C2  00B2               	clrf	(??_myint+2)+0
  8942  00C3  01B1               	movf	0+(??_myint+0)+0,w
  8943  00C4  082F               	addwf	0+(??_myint+2)+0,w
  8944  00C5  0731               	movlb 1	; select bank1
  8945  00C6  0021               	movwf	(_wTemperature)^080h
  8946  00C7  00A0               	movlb 0	; select bank0
  8947  00C8  0020               	movf	1+(??_myint+0)+0,w
  8948  00C9  0830               	addwfc	1+(??_myint+2)+0,w
  8949  00CA  3D32               	movlb 1	; select bank1
  8950  00CB  0021               	movwf	1+(_wTemperature)^080h
  8951  00CC  00A1               	line	646
  8952                           	
  8953                           i1l265:	
  8954  00CD                     	line	647
  8955                           	movlw	low(01h)
  8956  00CD  3001               	movlb 0	; select bank0
  8957  00CE  0020               	movwf	(??_myint+0)+0
  8958  00CF  00AF               	movf	(??_myint+0)+0,w
  8959  00D0  082F               	addwf	(_wReceptionCounter),f
  8960  00D1  07D7               	goto	i1l4296
  8961  00D2  28D3               	line	649
  8962                           	
  8963                           i1l261:	
  8964  00D3                     	line	650
  8965                           	
  8966                           i1l4296:	
  8967  00D3                     	movlb 4	; select bank4
  8968  00D3  0024               	bsf	(534)^0200h,4	;volatile
  8969  00D4  1616               	line	651
  8970                           	goto	i1l252
  8971  00D5  297B               	line	652
  8972                           	
  8973                           i1l259:	
  8974  00D6                     	line	654
  8975                           	btfsc	(534)^0200h,6	;volatile
  8976  00D6  1B16               	goto	u288_21
  8977  00D7  28D9               	goto	u288_20
  8978  00D8  28DA               u288_21:
  8979  00D9                     	goto	i1l267
  8980  00D9  28ED               u288_20:
  8981  00DA                     	
  8982                           i1l4298:	
  8983  00DA                     	movlb 0	; select bank0
  8984  00DA  0020               	movf	((_wI2CTxSendPos)),w
  8985  00DB  0853               	btfsc	status,2
  8986  00DC  1903               	goto	u289_21
  8987  00DD  28DF               	goto	u289_20
  8988  00DE  28E0               u289_21:
  8989  00DF                     	goto	i1l267
  8990  00DF  28ED               u289_20:
  8991  00E0                     	line	656
  8992                           	
  8993                           i1l4300:	
  8994  00E0                     	movf	(_wI2CRxBufferSize),w
  8995  00E0  0854               	subwf	(_wReceptionBufferPosition),w
  8996  00E1  0258               	skipnc
  8997  00E2  1803               	goto	u290_21
  8998  00E3  28E5               	goto	u290_20
  8999  00E4  28E6               u290_21:
  9000  00E5                     	goto	i1l268
  9001  00E5  28E9               u290_20:
  9002  00E6                     	line	659
  9003                           	
  9004                           i1l4302:	
  9005  00E6                     	movlb 4	; select bank4
  9006  00E6  0024               	bsf	(534)^0200h,3	;volatile
  9007  00E7  1596               	line	660
  9008                           	goto	i1l252
  9009  00E8  297B               	line	661
  9010                           	
  9011                           i1l268:	
  9012  00E9                     	line	663
  9013                           	movlb 4	; select bank4
  9014  00E9  0024               	bsf	(534)^0200h,2	;volatile
  9015  00EA  1516               	goto	i1l252
  9016  00EB  297B               	line	664
  9017                           	
  9018                           i1l269:	
  9019  00EC                     	line	665
  9020                           	goto	i1l252
  9021  00EC  297B               	line	666
  9022                           	
  9023                           i1l267:	
  9024  00ED                     	movlb 4	; select bank4
  9025  00ED  0024               	btfss	(534)^0200h,6	;volatile
  9026  00EE  1F16               	goto	u291_21
  9027  00EF  28F1               	goto	u291_20
  9028  00F0  28F2               u291_21:
  9029  00F1                     	goto	i1l4312
  9030  00F1  2906               u291_20:
  9031  00F2                     	line	668
  9032                           	
  9033                           i1l4304:	
  9034  00F2                     	bcf	(534)^0200h,6	;volatile
  9035  00F2  1316               	line	669
  9036                           	
  9037                           i1l4306:	
  9038  00F3                     	movlw	low(03h)
  9039  00F3  3003               	movlb 0	; select bank0
  9040  00F4  0020               	movwf	(??_myint+0)+0
  9041  00F5  00AF               	movf	(??_myint+0)+0,w
  9042  00F6  082F               	movlb 1	; select bank1
  9043  00F7  0021               	movwf	(_wI2CCommandState)^080h
  9044  00F8  00A6               	line	670
  9045                           	
  9046                           i1l4308:	
  9047  00F9                     	movlb 0	; select bank0
  9048  00F9  0020               	movf	((_wI2CTxSendPos)),w
  9049  00FA  0853               	btfsc	status,2
  9050  00FB  1903               	goto	u292_21
  9051  00FC  28FE               	goto	u292_20
  9052  00FD  28FF               u292_21:
  9053  00FE                     	goto	i1l272
  9054  00FE  2902               u292_20:
  9055  00FF                     	line	672
  9056                           	
  9057                           i1l4310:	
  9058  00FF                     	movlb 4	; select bank4
  9059  00FF  0024               	bsf	(534)^0200h,2	;volatile
  9060  0100  1516               	line	673
  9061                           	goto	i1l252
  9062  0101  297B               	line	674
  9063                           	
  9064                           i1l272:	
  9065  0102                     	line	676
  9066                           	movlb 4	; select bank4
  9067  0102  0024               	bsf	(534)^0200h,2	;volatile
  9068  0103  1516               	goto	i1l252
  9069  0104  297B               	line	677
  9070                           	
  9071                           i1l273:	
  9072  0105                     	line	678
  9073                           	goto	i1l252
  9074  0105  297B               	line	679
  9075                           	
  9076                           i1l271:	
  9077  0106                     	line	681
  9078                           	
  9079                           i1l4312:	
  9080  0106                     	movlw	low(04Bh)
  9081  0106  304B               	movlb 0	; select bank0
  9082  0107  0020               	movwf	(??_myint+0)+0
  9083  0108  00AF               	movf	(??_myint+0)+0,w
  9084  0109  082F               	movwf	(i1Add_Trace@iSizeOfoText)
  9085  010A  00A5               	movlw	low(((STR_10)|8000h))
  9086  010B  3090               	movwf	(i1Add_Trace@iText)
  9087  010C  00A6               	movlw	high(((STR_10)|8000h))
  9088  010D  3090               	movwf	((i1Add_Trace@iText))+1
  9089  010E  00A7               	movlw	(low(_wInterruptText|((0x2)<<8)))&0ffh
  9090  010F  3020               	fcall	i1_Add_Trace
  9091  0110  318D  2524  3180   	goto	i1l252
  9092  0113  297B               	line	682
  9093                           	
  9094                           i1l274:	
  9095  0114                     	goto	i1l252
  9096  0114  297B               	
  9097                           i1l270:	
  9098  0115                     	goto	i1l252
  9099  0115  297B               	line	683
  9100                           	
  9101                           i1l266:	
  9102  0116                     	goto	i1l252
  9103  0116  297B               	
  9104                           i1l258:	
  9105  0117                     	goto	i1l252
  9106  0117  297B               	
  9107                           i1l256:	
  9108  0118                     	line	685
  9109                           	goto	i1l252
  9110  0118  297B               	line	686
  9111                           	
  9112                           i1l254:	
  9113  0119                     	line	688
  9114                           	movlb 4	; select bank4
  9115  0119  0024               	btfss	(532)^0200h,4	;volatile
  9116  011A  1E14               	goto	u293_21
  9117  011B  291D               	goto	u293_20
  9118  011C  291E               u293_21:
  9119  011D                     	goto	i1l276
  9120  011D  2924               u293_20:
  9121  011E                     	line	690
  9122                           	
  9123                           i1l4314:	
  9124  011E                     	movlb 1	; select bank1
  9125  011E  0021               	bcf	(145)^080h,3	;volatile
  9126  011F  1191               	line	691
  9127                           	
  9128                           i1l4316:	
  9129  0120                     	movlb 0	; select bank0
  9130  0120  0020               	clrf	(_wI2CTxBufferSize)
  9131  0121  01D5               	line	692
  9132                           	clrf	(_wI2CTxSendPos)
  9133  0122  01D3               	line	693
  9134                           	goto	i1l252
  9135  0123  297B               	line	694
  9136                           	
  9137                           i1l276:	
  9138  0124                     	btfss	(532)^0200h,3	;volatile
  9139  0124  1D94               	goto	u294_21
  9140  0125  2927               	goto	u294_20
  9141  0126  2928               u294_21:
  9142  0127                     	goto	i1l278
  9143  0127  293F               u294_20:
  9144  0128                     	
  9145                           i1l4318:	
  9146  0128                     	movlb 0	; select bank0
  9147  0128  0020               	movf	((_wI2CTxSendPos)),w
  9148  0129  0853               	btfss	status,2
  9149  012A  1D03               	goto	u295_21
  9150  012B  292D               	goto	u295_20
  9151  012C  292E               u295_21:
  9152  012D                     	goto	i1l278
  9153  012D  293F               u295_20:
  9154  012E                     	line	696
  9155                           	
  9156                           i1l4320:	
  9157  012E                     	movlb 1	; select bank1
  9158  012E  0021               	clrf	(_wI2CCommandState)^080h
  9159  012F  01A6               	incf	(_wI2CCommandState)^080h,f
  9160  0130  0AA6               	line	697
  9161                           	
  9162                           i1l4322:	
  9163  0131                     	movlb 0	; select bank0
  9164  0131  0020               	movf	(_wI2CTxSendPos),w
  9165  0132  0853               	addlw	low(_wI2CTxBuffer|((0x0)<<8))&0ffh
  9166  0133  3EA7               	movwf	fsr1l
  9167  0134  0086               	clrf fsr1h	
  9168  0135  0187               	
  9169                           	movf	indf1,w
  9170  0136  0801               	movlb 4	; select bank4
  9171  0137  0024               	movwf	(529)^0200h	;volatile
  9172  0138  0091               	line	698
  9173                           	
  9174                           i1l4324:	
  9175  0139                     	movlw	low(01h)
  9176  0139  3001               	movlb 0	; select bank0
  9177  013A  0020               	movwf	(??_myint+0)+0
  9178  013B  00AF               	movf	(??_myint+0)+0,w
  9179  013C  082F               	addwf	(_wI2CTxSendPos),f
  9180  013D  07D3               	line	699
  9181                           	goto	i1l252
  9182  013E  297B               	line	700
  9183                           	
  9184                           i1l278:	
  9185  013F                     	line	702
  9186                           	movlb 4	; select bank4
  9187  013F  0024               	btfsc	(534)^0200h,6	;volatile
  9188  0140  1B16               	goto	u296_21
  9189  0141  2943               	goto	u296_20
  9190  0142  2944               u296_21:
  9191  0143                     	goto	i1l280
  9192  0143  2967               u296_20:
  9193  0144                     	
  9194                           i1l4326:	
  9195  0144                     	movlb 0	; select bank0
  9196  0144  0020               	movf	((_wI2CTxSendPos)),w
  9197  0145  0853               	btfsc	status,2
  9198  0146  1903               	goto	u297_21
  9199  0147  2949               	goto	u297_20
  9200  0148  294A               u297_21:
  9201  0149                     	goto	i1l280
  9202  0149  2967               u297_20:
  9203  014A                     	line	704
  9204                           	
  9205                           i1l4328:	
  9206  014A                     	movf	(_wI2CTxBufferSize),w
  9207  014A  0855               	subwf	(_wI2CTxSendPos),w
  9208  014B  0253               	skipnc
  9209  014C  1803               	goto	u298_21
  9210  014D  294F               	goto	u298_20
  9211  014E  2950               u298_21:
  9212  014F                     	goto	i1l281
  9213  014F  295D               u298_20:
  9214  0150                     	line	706
  9215                           	
  9216                           i1l4330:	
  9217  0150                     	movf	(_wI2CTxSendPos),w
  9218  0150  0853               	addlw	low(_wI2CTxBuffer|((0x0)<<8))&0ffh
  9219  0151  3EA7               	movwf	fsr1l
  9220  0152  0086               	clrf fsr1h	
  9221  0153  0187               	
  9222                           	movf	indf1,w
  9223  0154  0801               	movlb 4	; select bank4
  9224  0155  0024               	movwf	(529)^0200h	;volatile
  9225  0156  0091               	line	707
  9226                           	
  9227                           i1l4332:	
  9228  0157                     	movlw	low(01h)
  9229  0157  3001               	movlb 0	; select bank0
  9230  0158  0020               	movwf	(??_myint+0)+0
  9231  0159  00AF               	movf	(??_myint+0)+0,w
  9232  015A  082F               	addwf	(_wI2CTxSendPos),f
  9233  015B  07D3               	line	708
  9234                           	goto	i1l252
  9235  015C  297B               	line	709
  9236                           	
  9237                           i1l281:	
  9238  015D                     	line	711
  9239                           	movlb 4	; select bank4
  9240  015D  0024               	bsf	(534)^0200h,2	;volatile
  9241  015E  1516               	line	712
  9242                           	
  9243                           i1l4334:	
  9244  015F                     	movlw	low(02h)
  9245  015F  3002               	movlb 0	; select bank0
  9246  0160  0020               	movwf	(??_myint+0)+0
  9247  0161  00AF               	movf	(??_myint+0)+0,w
  9248  0162  082F               	movlb 1	; select bank1
  9249  0163  0021               	movwf	(_wI2CCommandState)^080h
  9250  0164  00A6               	goto	i1l252
  9251  0165  297B               	line	713
  9252                           	
  9253                           i1l282:	
  9254  0166                     	line	714
  9255                           	goto	i1l252
  9256  0166  297B               	line	715
  9257                           	
  9258                           i1l280:	
  9259  0167                     	movlb 4	; select bank4
  9260  0167  0024               	btfss	(534)^0200h,6	;volatile
  9261  0168  1F16               	goto	u299_21
  9262  0169  296B               	goto	u299_20
  9263  016A  296C               u299_21:
  9264  016B                     	goto	i1l252
  9265  016B  297B               u299_20:
  9266  016C                     	line	717
  9267                           	
  9268                           i1l4336:	
  9269  016C                     	bcf	(534)^0200h,6	;volatile
  9270  016C  1316               	line	718
  9271                           	bsf	(534)^0200h,2	;volatile
  9272  016D  1516               	line	719
  9273                           	
  9274                           i1l4338:	
  9275  016E                     	movlw	low(03h)
  9276  016E  3003               	movlb 0	; select bank0
  9277  016F  0020               	movwf	(??_myint+0)+0
  9278  0170  00AF               	movf	(??_myint+0)+0,w
  9279  0171  082F               	movlb 1	; select bank1
  9280  0172  0021               	movwf	(_wI2CCommandState)^080h
  9281  0173  00A6               	line	720
  9282                           	goto	i1l252
  9283  0174  297B               	line	721
  9284                           	
  9285                           i1l284:	
  9286  0175                     	goto	i1l252
  9287  0175  297B               	line	724
  9288                           	
  9289                           i1l285:	
  9290  0176                     	goto	i1l252
  9291  0176  297B               	
  9292                           i1l283:	
  9293  0177                     	goto	i1l252
  9294  0177  297B               	line	725
  9295                           	
  9296                           i1l279:	
  9297  0178                     	goto	i1l252
  9298  0178  297B               	
  9299                           i1l277:	
  9300  0179                     	goto	i1l252
  9301  0179  297B               	line	726
  9302                           	
  9303                           i1l275:	
  9304  017A                     	goto	i1l252
  9305  017A  297B               	line	731
  9306                           	
  9307                           i1l253:	
  9308  017B                     	line	732
  9309                           	
  9310                           i1l252:	
  9311  017B                     	line	733
  9312                           	movlb 0	; select bank0
  9313  017B  0020               	btfss	(18),3	;volatile
  9314  017C  1D92               	goto	u300_21
  9315  017D  297F               	goto	u300_20
  9316  017E  2980               u300_21:
  9317  017F                     	goto	i1l4344
  9318  017F  298E               u300_20:
  9319  0180                     	line	735
  9320                           	
  9321                           i1l4340:	
  9322  0180                     	bcf	(18),3	;volatile
  9323  0180  1192               	line	736
  9324                           	
  9325                           i1l4342:	
  9326  0181                     	movlw	low(04Bh)
  9327  0181  304B               	movwf	(??_myint+0)+0
  9328  0182  00AF               	movf	(??_myint+0)+0,w
  9329  0183  082F               	movwf	(i1Add_Trace@iSizeOfoText)
  9330  0184  00A5               	movlw	low(((STR_11)|8000h))
  9331  0185  3089               	movwf	(i1Add_Trace@iText)
  9332  0186  00A6               	movlw	high(((STR_11)|8000h))
  9333  0187  3090               	movwf	((i1Add_Trace@iText))+1
  9334  0188  00A7               	movlw	(low(_wInterruptText|((0x2)<<8)))&0ffh
  9335  0189  3020               	fcall	i1_Add_Trace
  9336  018A  318D  2524  3180   	goto	i1l4344
  9337  018D  298E               	line	737
  9338                           	
  9339                           i1l286:	
  9340  018E                     	line	738
  9341                           	
  9342                           i1l4344:	
  9343  018E                     	movlb 0	; select bank0
  9344  018E  0020               	btfss	(17),0	;volatile
  9345  018F  1C11               	goto	u301_21
  9346  0190  2992               	goto	u301_20
  9347  0191  2993               u301_21:
  9348  0192                     	goto	i1l287
  9349  0192  29B7               u301_20:
  9350  0193                     	line	740
  9351                           	
  9352                           i1l4346:	
  9353  0193                     	movlw	low(01h)
  9354  0193  3001               	movwf	(??_myint+0)+0
  9355  0194  00AF               	movf	(??_myint+0)+0,w
  9356  0195  082F               	addwf	(_wTimer1IntCounter),f
  9357  0196  07CE               	line	741
  9358                           	
  9359                           i1l4348:	
  9360  0197                     	bcf	(17),0	;volatile
  9361  0197  1011               	line	743
  9362                           		movlw	7
  9363  0198  3007               	xorwf	((_wTimer1IntCounter)),w
  9364  0199  064E               	btfss	status,2
  9365  019A  1D03               	goto	u302_21
  9366  019B  299D               	goto	u302_20
  9367  019C  299E               u302_21:
  9368  019D                     	goto	i1l4352
  9369  019D  29A3               u302_20:
  9370  019E                     	line	745
  9371                           	
  9372                           i1l4350:	
  9373  019E                     	movlw	low(04Ch)
  9374  019E  304C               	movwf	(23)	;volatile
  9375  019F  0097               	line	746
  9376                           	movlw	low(083h)
  9377  01A0  3083               	movwf	(22)	;volatile
  9378  01A1  0096               	goto	i1l4352
  9379  01A2  29A3               	line	747
  9380                           	
  9381                           i1l288:	
  9382  01A3                     	line	748
  9383                           	
  9384                           i1l4352:	
  9385  01A3                     		movlw	8
  9386  01A3  3008               	xorwf	((_wTimer1IntCounter)),w
  9387  01A4  064E               	btfss	status,2
  9388  01A5  1D03               	goto	u303_21
  9389  01A6  29A8               	goto	u303_20
  9390  01A7  29A9               u303_21:
  9391  01A8                     	goto	i1l287
  9392  01A8  29B7               u303_20:
  9393  01A9                     	line	750
  9394                           	
  9395                           i1l4354:	
  9396  01A9                     	clrf	(_wTimer1IntCounter)
  9397  01A9  01CE               	line	751
  9398                           	
  9399                           i1l4356:	
  9400  01AA                     	clrf	(_wTempUpdate)
  9401  01AA  01CF               	incf	(_wTempUpdate),f
  9402  01AB  0ACF               	line	752
  9403                           	
  9404                           i1l4358:	
  9405  01AC                     		movlw	6
  9406  01AC  3006               	movlb 1	; select bank1
  9407  01AD  0021               	xorwf	((_wTempState)^080h),w
  9408  01AE  0624               	btfss	status,2
  9409  01AF  1D03               	goto	u304_21
  9410  01B0  29B2               	goto	u304_20
  9411  01B1  29B3               u304_21:
  9412  01B2                     	goto	i1l287
  9413  01B2  29B7               u304_20:
  9414  01B3                     	line	754
  9415                           	
  9416                           i1l4360:	
  9417  01B3                     	clrf	(_wTempState)^080h
  9418  01B3  01A4               	line	755
  9419                           	goto	i1l287
  9420  01B4  29B7               	line	756
  9421                           	
  9422                           i1l290:	
  9423  01B5                     	goto	i1l287
  9424  01B5  29B7               	line	759
  9425                           	
  9426                           i1l291:	
  9427  01B6                     	goto	i1l287
  9428  01B6  29B7               	line	760
  9429                           	
  9430                           i1l289:	
  9431  01B7                     	line	761
  9432                           	
  9433                           i1l287:	
  9434  01B7                     	line	762
  9435                           	btfss	(11),2	;volatile
  9436  01B7  1D0B               	goto	u305_21
  9437  01B8  29BA               	goto	u305_20
  9438  01B9  29BB               u305_21:
  9439  01BA                     	goto	i1l4366
  9440  01BA  29C3               u305_20:
  9441  01BB                     	line	764
  9442                           	
  9443                           i1l4362:	
  9444  01BB                     	bcf	(11),2	;volatile
  9445  01BB  110B               	line	765
  9446                           	
  9447                           i1l4364:	
  9448  01BC                     	movlw	low(01h)
  9449  01BC  3001               	movlb 0	; select bank0
  9450  01BD  0020               	movwf	(??_myint+0)+0
  9451  01BE  00AF               	movf	(??_myint+0)+0,w
  9452  01BF  082F               	movlb 1	; select bank1
  9453  01C0  0021               	addwf	(_wTimer0Counter)^080h,f
  9454  01C1  07A5               	goto	i1l4366
  9455  01C2  29C3               	line	766
  9456                           	
  9457                           i1l292:	
  9458  01C3                     	line	767
  9459                           	
  9460                           i1l4366:	
  9461  01C3                     	movlb 0	; select bank0
  9462  01C3  0020               	btfss	(17),4	;volatile
  9463  01C4  1E11               	goto	u306_21
  9464  01C5  29C7               	goto	u306_20
  9465  01C6  29C8               u306_21:
  9466  01C7                     	goto	i1l296
  9467  01C7  29E3               u306_20:
  9468  01C8                     	line	769
  9469                           	
  9470                           i1l4368:	
  9471  01C8                     	movf	(_gTxTransmitSize),w
  9472  01C8  0851               	subwf	(_gTxReadingPosition),w
  9473  01C9  0250               	skipnc
  9474  01CA  1803               	goto	u307_21
  9475  01CB  29CD               	goto	u307_20
  9476  01CC  29CE               u307_21:
  9477  01CD                     	goto	i1l4374
  9478  01CD  29DD               u307_20:
  9479  01CE                     	line	771
  9480                           	
  9481                           i1l4370:	
  9482  01CE                     	movf	(_gTxReadingPosition),w
  9483  01CE  0850               	addlw	low 8944
  9484  01CF  3EF0               	movwf	fsr1l
  9485  01D0  0086               	clrf	(fsr1l)+1
  9486  01D1  0187               	movlw	high 8944
  9487  01D2  3022               	addwfc	(fsr1l)+1,f
  9488  01D3  3D87               	movf	indf1,w
  9489  01D4  0801               	movlb 3	; select bank3
  9490  01D5  0023               	movwf	(410)^0180h	;volatile
  9491  01D6  009A               	line	772
  9492                           	
  9493                           i1l4372:	
  9494  01D7                     	movlw	low(01h)
  9495  01D7  3001               	movlb 0	; select bank0
  9496  01D8  0020               	movwf	(??_myint+0)+0
  9497  01D9  00AF               	movf	(??_myint+0)+0,w
  9498  01DA  082F               	addwf	(_gTxReadingPosition),f
  9499  01DB  07D0               	line	773
  9500                           	goto	i1l296
  9501  01DC  29E3               	line	774
  9502                           	
  9503                           i1l294:	
  9504  01DD                     	line	776
  9505                           	
  9506                           i1l4374:	
  9507  01DD                     	clrf	(_gTxReadingPosition)
  9508  01DD  01D0               	line	777
  9509                           	clrf	(_gTxTransmitSize)
  9510  01DE  01D1               	line	778
  9511                           	
  9512                           i1l4376:	
  9513  01DF                     	movlb 1	; select bank1
  9514  01DF  0021               	bcf	(145)^080h,4	;volatile
  9515  01E0  1211               	goto	i1l296
  9516  01E1  29E3               	line	779
  9517                           	
  9518                           i1l295:	
  9519  01E2                     	goto	i1l296
  9520  01E2  29E3               	line	780
  9521                           	
  9522                           i1l293:	
  9523  01E3                     	line	781
  9524                           	
  9525                           i1l296:	
  9526  01E3                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  9527  01E3  107E               	retfie
  9528  01E4  0009               	opt stack 0
  9529                           GLOBAL	__end_of_myint
  9530                           	__end_of_myint:
  9531  01E5                     	signat	_myint,89
  9532                           	global	i1_Add_Trace
  9533                           
  9534 ;; *************** function i1_Add_Trace *****************
  9535 ;; Defined at:
  9536 ;;		line 90 in file "161518_temp_main.c"
  9537 ;; Parameters:    Size  Location     Type
  9538 ;;  oText           1    wreg     PTR unsigned char 
  9539 ;;		 -> wInterruptText(75), 
  9540 ;;  iSizeOfoText    1    5[BANK0 ] unsigned char 
  9541 ;;  iText           2    6[BANK0 ] PTR unsigned char 
  9542 ;;		 -> STR_11(7), STR_10(4), STR_2(9), STR_1(12), 
  9543 ;;		 -> main@wReadout(20), 
  9544 ;; Auto vars:     Size  Location     Type
  9545 ;;  oText           1   14[BANK0 ] PTR unsigned char 
  9546 ;;		 -> wInterruptText(75), 
  9547 ;; Return value:  Size  Location     Type
  9548 ;;                  1    wreg      void 
  9549 ;; Registers used:
  9550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9551 ;; Tracked objects:
  9552 ;;		On entry : 0/0
  9553 ;;		On exit  : 0/0
  9554 ;;		Unchanged: 0/0
  9555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9556 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  9557 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9558 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  9559 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  9560 ;;Total ram usage:       10 bytes
  9561 ;; Hardware stack levels used:    1
  9562 ;; Hardware stack levels required when called:    2
  9563 ;; This function calls:
  9564 ;;		i1_strcat
  9565 ;;		i1_strlen
  9566 ;; This function is called by:
  9567 ;;		_myint
  9568 ;; This function uses a non-reentrant model
  9569 ;;
  9570                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
  9571                           	line	90
  9572                           global __ptext32
  9573                           __ptext32:	;psect for function i1_Add_Trace
  9574  0D24                     psect	text32
  9575                           	file	"161518_temp_main.c"
  9576                           	line	90
  9577                           	global	__size_ofi1_Add_Trace
  9578                           	__size_ofi1_Add_Trace	equ	__end_ofi1_Add_Trace-i1_Add_Trace
  9579  003A                     	
  9580                           i1_Add_Trace:	
  9581  0D24                     ;incstack = 0
  9582                           	opt	stack 6
  9583                           ; Regs used in i1_Add_Trace: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9584                           ;i1Add_Trace@oText stored from wreg
  9585                           	movlb 0	; select bank0
  9586  0D24  0020               	movwf	(i1Add_Trace@oText)
  9587  0D25  00AE               	line	92
  9588                           	
  9589                           i1l3878:	
  9590  0D26                     	movf	(i1Add_Trace@oText),w
  9591  0D26  082E               	movwf	(i1strlen@s)
  9592  0D27  00F0               	movlw	0x2
  9593  0D28  3002               
  9594                           	movwf	(i1strlen@s+1)
  9595  0D29  00F1               	fcall	i1_strlen
  9596  0D2A  318B  2360  318D   	comf	(0+(?i1_strlen)),w
  9597  0D2D  0970               	movlb 0	; select bank0
  9598  0D2E  0020               	movwf	(??i1_Add_Trace+0)+0
  9599  0D2F  00A8               	comf	(1+(?i1_strlen)),w
  9600  0D30  0971               	movwf	((??i1_Add_Trace+0)+0+1)
  9601  0D31  00A9               	incf	(??i1_Add_Trace+0)+0,f
  9602  0D32  0AA8               	skipnz
  9603  0D33  1903               	incf	((??i1_Add_Trace+0)+0+1),f
  9604  0D34  0AA9               	movf	(i1Add_Trace@iSizeOfoText),w
  9605  0D35  0825               	addwf	0+(??i1_Add_Trace+0)+0,w
  9606  0D36  0728               	movwf	(??i1_Add_Trace+2)+0
  9607  0D37  00AA               	movf	1+(??i1_Add_Trace+0)+0,w
  9608  0D38  0829               	skipnc
  9609  0D39  1803               	incf	1+(??i1_Add_Trace+0)+0,w
  9610  0D3A  0A29               	movwf	((??i1_Add_Trace+2)+0)+1
  9611  0D3B  00AB               	movf	0+(??i1_Add_Trace+2)+0,w
  9612  0D3C  082A               	addlw	0FFh
  9613  0D3D  3EFF               	movwf	(??i1_Add_Trace+4)+0
  9614  0D3E  00AC               	movlw	0FFh
  9615  0D3F  30FF               	addwfc	1+(??i1_Add_Trace+2)+0,w
  9616  0D40  3D2B               	movwf	1+(??i1_Add_Trace+4)+0
  9617  0D41  00AD               	movf	(i1Add_Trace@iText+1),w
  9618  0D42  0827               	movwf	(i1strlen@s+1)
  9619  0D43  00F1               	movf	(i1Add_Trace@iText),w
  9620  0D44  0826               	movwf	(i1strlen@s)
  9621  0D45  00F0               	fcall	i1_strlen
  9622  0D46  318B  2360  318D   	movlb 0	; select bank0
  9623  0D49  0020               	movf	1+(??i1_Add_Trace+4)+0,w
  9624  0D4A  082D               	subwf	(1+(?i1_strlen)),w
  9625  0D4B  0271               	skipz
  9626  0D4C  1D03               	goto	u261_25
  9627  0D4D  2D50               	movf	0+(??i1_Add_Trace+4)+0,w
  9628  0D4E  082C               	subwf	(0+(?i1_strlen)),w
  9629  0D4F  0270               u261_25:
  9630  0D50                     	skipnc
  9631  0D50  1803               	goto	u261_21
  9632  0D51  2D53               	goto	u261_20
  9633  0D52  2D54               u261_21:
  9634  0D53                     	goto	i1l137
  9635  0D53  2D5D               u261_20:
  9636  0D54                     	line	94
  9637                           	
  9638                           i1l3880:	
  9639  0D54                     	movf	(i1Add_Trace@iText+1),w
  9640  0D54  0827               	movwf	(i1strcat@src+1)
  9641  0D55  00A1               	movf	(i1Add_Trace@iText),w
  9642  0D56  0826               	movwf	(i1strcat@src)
  9643  0D57  00A0               	movf	(i1Add_Trace@oText),w
  9644  0D58  082E               	fcall	i1_strcat
  9645  0D59  318B  232E  318D   	goto	i1l137
  9646  0D5C  2D5D               	line	95
  9647                           	
  9648                           i1l136:	
  9649  0D5D                     	line	96
  9650                           	
  9651                           i1l137:	
  9652  0D5D                     	return
  9653  0D5D  0008               	opt stack 0
  9654                           GLOBAL	__end_ofi1_Add_Trace
  9655                           	__end_ofi1_Add_Trace:
  9656  0D5E                     	signat	i1_Add_Trace,89
  9657                           	global	i1_strcat
  9658                           
  9659 ;; *************** function i1_strcat *****************
  9660 ;; Defined at:
  9661 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  9662 ;; Parameters:    Size  Location     Type
  9663 ;;  dest            1    wreg     PTR unsigned char 
  9664 ;;		 -> wInterruptText(75), 
  9665 ;;  src             2    0[BANK0 ] PTR const unsigned char 
  9666 ;;		 -> STR_11(7), STR_10(4), STR_2(9), STR_1(12), 
  9667 ;;		 -> main@wReadout(20), 
  9668 ;; Auto vars:     Size  Location     Type
  9669 ;;  dest            1    4[BANK0 ] PTR unsigned char 
  9670 ;;		 -> wInterruptText(75), 
  9671 ;; Return value:  Size  Location     Type
  9672 ;;                  1    wreg      PTR unsigned char 
  9673 ;; Registers used:
  9674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9675 ;; Tracked objects:
  9676 ;;		On entry : 0/0
  9677 ;;		On exit  : 0/0
  9678 ;;		Unchanged: 0/0
  9679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9680 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9681 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9682 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9683 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  9684 ;;Total ram usage:        5 bytes
  9685 ;; Hardware stack levels used:    1
  9686 ;; Hardware stack levels required when called:    1
  9687 ;; This function calls:
  9688 ;;		i1_strcpy
  9689 ;;		i1_strlen
  9690 ;; This function is called by:
  9691 ;;		i1_Add_Trace
  9692 ;; This function uses a non-reentrant model
  9693 ;;
  9694                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
  9695                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  9696                           	line	3
  9697                           global __ptext33
  9698                           __ptext33:	;psect for function i1_strcat
  9699  0B2E                     psect	text33
  9700                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  9701                           	line	3
  9702                           	global	__size_ofi1_strcat
  9703                           	__size_ofi1_strcat	equ	__end_ofi1_strcat-i1_strcat
  9704  0019                     	
  9705                           i1_strcat:	
  9706  0B2E                     ;incstack = 0
  9707                           	opt	stack 6
  9708                           ; Regs used in i1_strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9709                           ;i1strcat@dest stored from wreg
  9710                           	movlb 0	; select bank0
  9711  0B2E  0020               	movwf	(i1strcat@dest)
  9712  0B2F  00A4               	line	5
  9713                           	
  9714                           i1l3704:	
  9715  0B30                     	movf	(i1strcat@src+1),w
  9716  0B30  0821               	movwf	(i1strcpy@src+1)
  9717  0B31  00F7               	movf	(i1strcat@src),w
  9718  0B32  0820               	movwf	(i1strcpy@src)
  9719  0B33  00F6               	movf	(i1strcat@dest),w
  9720  0B34  0824               	movwf	(i1strlen@s)
  9721  0B35  00F0               	movlw	0x2
  9722  0B36  3002               
  9723                           	movwf	(i1strlen@s+1)
  9724  0B37  00F1               	fcall	i1_strlen
  9725  0B38  318B  2360  318B   	movf	(0+?i1_strlen),w
  9726  0B3B  0870               	movlb 0	; select bank0
  9727  0B3C  0020               	movwf	(??i1_strcat+0)+0
  9728  0B3D  00A2               	movf	(1+?i1_strlen),w
  9729  0B3E  0871               	movwf	((??i1_strcat+0)+0+1)
  9730  0B3F  00A3               	movf	(i1strcat@dest),w
  9731  0B40  0824               	addwf	0+(??i1_strcat+0)+0,w
  9732  0B41  0722               	fcall	i1_strcpy
  9733  0B42  318B  2383  318B   	goto	i1l900
  9734  0B45  2B46               	line	6
  9735                           	
  9736                           i1l3706:	
  9737  0B46                     	line	7
  9738                           ;	Return value of i1_strcat is never used
  9739                           	
  9740                           i1l900:	
  9741  0B46                     	return
  9742  0B46  0008               	opt stack 0
  9743                           GLOBAL	__end_ofi1_strcat
  9744                           	__end_ofi1_strcat:
  9745  0B47                     	signat	i1_strcat,89
  9746                           	global	i1_strlen
  9747                           
  9748 ;; *************** function i1_strlen *****************
  9749 ;; Defined at:
  9750 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  9751 ;; Parameters:    Size  Location     Type
  9752 ;;  s               2    0[COMMON] PTR const unsigned char 
  9753 ;;		 -> STR_11(7), STR_10(4), STR_2(9), STR_1(12), 
  9754 ;;		 -> main@wReadout(20), wInterruptText(75), 
  9755 ;; Auto vars:     Size  Location     Type
  9756 ;;  strlen          2    4[COMMON] PTR const unsigned char 
  9757 ;;		 -> STR_11(7), STR_10(4), STR_2(9), STR_1(12), 
  9758 ;;		 -> main@wReadout(20), wInterruptText(75), 
  9759 ;; Return value:  Size  Location     Type
  9760 ;;                  2    0[COMMON] unsigned int 
  9761 ;; Registers used:
  9762 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9763 ;; Tracked objects:
  9764 ;;		On entry : 0/0
  9765 ;;		On exit  : 0/0
  9766 ;;		Unchanged: 0/0
  9767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9768 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9769 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9770 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9771 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9772 ;;Total ram usage:        6 bytes
  9773 ;; Hardware stack levels used:    1
  9774 ;; This function calls:
  9775 ;;		Nothing
  9776 ;; This function is called by:
  9777 ;;		i1_Add_Trace
  9778 ;;		i1_strcat
  9779 ;; This function uses a non-reentrant model
  9780 ;;
  9781                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
  9782                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  9783                           	line	12
  9784                           global __ptext34
  9785                           __ptext34:	;psect for function i1_strlen
  9786  0B60                     psect	text34
  9787                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  9788                           	line	12
  9789                           	global	__size_ofi1_strlen
  9790                           	__size_ofi1_strlen	equ	__end_ofi1_strlen-i1_strlen
  9791  0023                     	
  9792                           i1_strlen:	
  9793  0B60                     ;incstack = 0
  9794                           	opt	stack 7
  9795                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
  9796                           	line	14
  9797                           	
  9798                           i1l3544:	
  9799  0B60                     	movf	(i1strlen@s+1),w
  9800  0B60  0871               	movwf	(i1strlen@a+1)
  9801  0B61  00F5               	movf	(i1strlen@s),w
  9802  0B62  0870               	movwf	(i1strlen@a)
  9803  0B63  00F4               	line	16
  9804                           	goto	i1l3548
  9805  0B64  2B6A               	
  9806                           i1l910:	
  9807  0B65                     	line	17
  9808                           	
  9809                           i1l3546:	
  9810  0B65                     	movlw	01h
  9811  0B65  3001               	addwf	(i1strlen@s),f
  9812  0B66  07F0               	movlw	0
  9813  0B67  3000               	addwfc	(i1strlen@s+1),f
  9814  0B68  3DF1               	goto	i1l3548
  9815  0B69  2B6A               	line	18
  9816                           	
  9817                           i1l909:	
  9818  0B6A                     	line	16
  9819                           	
  9820                           i1l3548:	
  9821  0B6A                     	movf	(i1strlen@s),w
  9822  0B6A  0870               	movwf	fsr0l
  9823  0B6B  0084               	movf	((i1strlen@s+1)),w
  9824  0B6C  0871               	movwf	fsr0h
  9825  0B6D  0085               	moviw	fsr0++
  9826  0B6E  0012               	btfss	status,2
  9827  0B6F  1D03               	goto	u222_21
  9828  0B70  2B72               	goto	u222_20
  9829  0B71  2B73               u222_21:
  9830  0B72                     	goto	i1l3546
  9831  0B72  2B65               u222_20:
  9832  0B73                     	goto	i1l3550
  9833  0B73  2B74               	
  9834                           i1l911:	
  9835  0B74                     	line	25
  9836                           	
  9837                           i1l3550:	
  9838  0B74                     	comf	(i1strlen@a),w
  9839  0B74  0974               	movwf	(??i1_strlen+0)+0
  9840  0B75  00F2               	comf	(i1strlen@a+1),w
  9841  0B76  0975               	movwf	((??i1_strlen+0)+0+1)
  9842  0B77  00F3               	incf	(??i1_strlen+0)+0,f
  9843  0B78  0AF2               	skipnz
  9844  0B79  1903               	incf	((??i1_strlen+0)+0+1),f
  9845  0B7A  0AF3               	movf	(i1strlen@s),w
  9846  0B7B  0870               	addwf	0+(??i1_strlen+0)+0,w
  9847  0B7C  0772               	movwf	(?i1_strlen)
  9848  0B7D  00F0               	movf	(i1strlen@s+1),w
  9849  0B7E  0871               	addwfc	1+(??i1_strlen+0)+0,w
  9850  0B7F  3D73               	movwf	1+(?i1_strlen)
  9851  0B80  00F1               	goto	i1l912
  9852  0B81  2B82               	
  9853                           i1l3552:	
  9854  0B82                     	line	26
  9855                           	
  9856                           i1l912:	
  9857  0B82                     	return
  9858  0B82  0008               	opt stack 0
  9859                           GLOBAL	__end_ofi1_strlen
  9860                           	__end_ofi1_strlen:
  9861  0B83                     	signat	i1_strlen,90
  9862                           	global	i1_strcpy
  9863                           
  9864 ;; *************** function i1_strcpy *****************
  9865 ;; Defined at:
  9866 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;  dest            1    wreg     PTR unsigned char 
  9869 ;;		 -> wInterruptText(75), 
  9870 ;;  src             2    6[COMMON] PTR const unsigned char 
  9871 ;;		 -> STR_11(7), STR_10(4), STR_2(9), STR_1(12), 
  9872 ;;		 -> main@wReadout(20), 
  9873 ;; Auto vars:     Size  Location     Type
  9874 ;;  dest            1   12[COMMON] PTR unsigned char 
  9875 ;;		 -> wInterruptText(75), 
  9876 ;;  strcpy          2   10[COMMON] PTR const unsigned char 
  9877 ;;		 -> STR_11(7), STR_10(4), STR_2(9), STR_1(12), 
  9878 ;;		 -> main@wReadout(20), 
  9879 ;;  strcpy          1   13[COMMON] PTR unsigned char 
  9880 ;;		 -> wInterruptText(75), 
  9881 ;; Return value:  Size  Location     Type
  9882 ;;                  1    wreg      PTR unsigned char 
  9883 ;; Registers used:
  9884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9885 ;; Tracked objects:
  9886 ;;		On entry : 0/0
  9887 ;;		On exit  : 0/0
  9888 ;;		Unchanged: 0/0
  9889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9891 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9892 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9893 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9894 ;;Total ram usage:        8 bytes
  9895 ;; Hardware stack levels used:    1
  9896 ;; This function calls:
  9897 ;;		Nothing
  9898 ;; This function is called by:
  9899 ;;		i1_strcat
  9900 ;; This function uses a non-reentrant model
  9901 ;;
  9902                           psect	text35,local,class=CODE,delta=2,merge=1,group=0
  9903                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  9904                           	line	7
  9905                           global __ptext35
  9906                           __ptext35:	;psect for function i1_strcpy
  9907  0B83                     psect	text35
  9908                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  9909                           	line	7
  9910                           	global	__size_ofi1_strcpy
  9911                           	__size_ofi1_strcpy	equ	__end_ofi1_strcpy-i1_strcpy
  9912  0024                     	
  9913                           i1_strcpy:	
  9914  0B83                     ;incstack = 0
  9915                           	opt	stack 6
  9916                           ; Regs used in i1_strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  9917                           ;i1strcpy@dest stored from wreg
  9918                           	movwf	(i1strcpy@dest)
  9919  0B83  00FC               	line	13
  9920                           	
  9921                           i1l3540:	
  9922  0B84                     	movf	(i1strcpy@src+1),w
  9923  0B84  0877               	movwf	(i1strcpy@s+1)
  9924  0B85  00FB               	movf	(i1strcpy@src),w
  9925  0B86  0876               	movwf	(i1strcpy@s)
  9926  0B87  00FA               	line	14
  9927                           	movf	(i1strcpy@dest),w
  9928  0B88  087C               	movwf	(??i1_strcpy+0)+0
  9929  0B89  00F8               	movf	(??i1_strcpy+0)+0,w
  9930  0B8A  0878               	movwf	(i1strcpy@d)
  9931  0B8B  00FD               	line	15
  9932                           	goto	i1l3542
  9933  0B8C  2B8E               	
  9934                           i1l904:	
  9935  0B8D                     	goto	i1l3542
  9936  0B8D  2B8E               	
  9937                           i1l903:	
  9938  0B8E                     	
  9939                           i1l3542:	
  9940  0B8E                     	movf	(i1strcpy@d),w
  9941  0B8E  087D               	movwf	fsr1l
  9942  0B8F  0086               	movlw 2	; select bank4/5
  9943  0B90  3002               	movwf fsr1h	
  9944  0B91  0087               	
  9945                           	incf	(i1strcpy@d),f
  9946  0B92  0AFD               	movf	(i1strcpy@s+1),w
  9947  0B93  087B               	movwf	(??i1_strcpy+0)+0+1
  9948  0B94  00F9               	movf	(i1strcpy@s),w
  9949  0B95  087A               	movwf	(??i1_strcpy+0)+0
  9950  0B96  00F8               	incf	(i1strcpy@s),f
  9951  0B97  0AFA               	skipnz
  9952  0B98  1903               	incf	(i1strcpy@s+1),f
  9953  0B99  0AFB               	movf	0+(??i1_strcpy+0)+0,w
  9954  0B9A  0878               	movwf	fsr0l
  9955  0B9B  0084               	movf	(1+(??i1_strcpy+0)+0),w
  9956  0B9C  0879               	movwf	fsr0h
  9957  0B9D  0085               	movf	indf0,w ;code access
  9958  0B9E  0800               	movwi	[0]fsr1
  9959  0B9F  3FC0               	movf	wreg
  9960  0BA0  0889               	btfss	status,2
  9961  0BA1  1D03               	goto	u221_21
  9962  0BA2  2BA4               	goto	u221_20
  9963  0BA3  2BA5               u221_21:
  9964  0BA4                     	goto	i1l3542
  9965  0BA4  2B8E               u221_20:
  9966  0BA5                     	goto	i1l906
  9967  0BA5  2BA6               	
  9968                           i1l905:	
  9969  0BA6                     	line	18
  9970                           ;	Return value of i1_strcpy is never used
  9971                           	
  9972                           i1l906:	
  9973  0BA6                     	return
  9974  0BA6  0008               	opt stack 0
  9975                           GLOBAL	__end_ofi1_strcpy
  9976                           	__end_ofi1_strcpy:
  9977  0BA7                     	signat	i1_strcpy,89
  9978                           global	___latbits
  9979                           ___latbits	equ	3
  9980  0003                     	global	btemp
  9981                           	btemp set 07Eh
  9982  007E                     
  9983                           	DABS	1,126,2	;btemp
  9984                           	global	int$flags
  9985                           	int$flags	set btemp
  9986  007E                     	global	wtemp0
  9987                           	wtemp0 set btemp+0
  9988  007E                     global __pbssBIGRAM
  9989                           __pbssBIGRAM	equ	8944
  9990  22F0                     	end


Data Sizes:
    Strings     148
    Constant    0
    Data        6
    BSS         269
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     43      60
    BANK1            80      8      41
    BANK2            80      0      50
    BANK3            80      0      50
    BANK4            80      0      75
    BANK5            80      0      50
    BANK6            80     46      46
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            32      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_11(CODE[7]), STR_10(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK6[20]), wInterruptText(BANK4[75]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_11(CODE[7]), STR_10(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK6[20]), wInterruptText(BANK4[75]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK4[75]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK4[75]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_11(CODE[7]), STR_10(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK6[20]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_11(CODE[7]), STR_10(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK6[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK4[75]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_11(CODE[7]), STR_10(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK6[20]), 

    strcat@dest	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK4[75]), 

    memset@dest	PTR void  size(2) Largest target is 75
		 -> wInterruptText(BANK4[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]), 

    memset@s	PTR unsigned char  size(2) Largest target is 75
		 -> wInterruptText(BANK4[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]), 

    memcpy@d1	PTR void  size(2) Largest target is 256
		 -> gTxBuffer(BIGRAM[256]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 256
		 -> gTxBuffer(BIGRAM[256]), 

    memcpy@s1	PTR const void  size(1) Largest target is 50
		 -> gUartTXBuffer(BANK3[50]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 50
		 -> gUartTXBuffer(BANK3[50]), 

    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
		 -> STR_9(CODE[16]), STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[16]), STR_4(CODE[17]), STR_3(CODE[16]), main@wReadout(BANK6[20]), 
		 -> main@wConv(BANK6[4]), wInterruptText(BANK4[75]), 

    sp__memcpy	PTR void  size(2) Largest target is 256
		 -> gTxBuffer(BIGRAM[256]), 

    Send_UART_Data@iData	PTR unsigned char  size(1) Largest target is 50
		 -> gUartTXBuffer(BANK3[50]), 

    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
		 -> main@wEnterBottonPressed(BANK6[1]), main@wDownBottonPressed(BANK6[1]), main@wUpBottonPressed(BANK6[1]), 

    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
		 -> main@wDebounceDown(BANK6[2]), main@wDebounceUp(BANK6[2]), main@wDebounceEnter(BANK6[2]), 

    printEM1812@oTextOut	PTR unsigned char  size(1) Largest target is 20
		 -> main@wReadout(BANK6[20]), 

    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK4[75]), 

    sp__memset	PTR void  size(2) Largest target is 75
		 -> wInterruptText(BANK4[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK4[75]), 

    Add_Trace@iText	PTR unsigned char  size(2) Largest target is 20
		 -> STR_11(CODE[7]), STR_10(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK6[20]), 

    Add_Trace@oText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK4[75]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myint in COMMON

    i1_strcat->i1_strcpy
    i1_strcpy->i1_strlen

Critical Paths under _main in BANK0

    _main->_Add_Trace
    _main->_PrintLog
    _setNotBlinkingCursor->_writeInsChk
    _setCursorOff->_writeInsChk
    _printEM1812->___awdiv
    _powerOnLcd->_writeInsChk
    _moveCursorToHome->_writeInsChk
    _initLCD->_writeInsChk
    _clearDisplay->_writeInsChk
    _writeInsChk->_waitLCDBusy
    _writeInsChk->_writeInsNoChk
    _writeInsNoChk->_setData
    _Send_UART_Data->_memcpy
    _PrintLog->_lcdWriteText
    _lcdWriteText->_writeTxtChk
    _writeTxtChk->_setCursorPosition
    _setCursorPosition->_waitLCDBusy
    _GetTemp->_memset
    _Add_Trace->_strcat
    _strcat->_strcpy
    _strcpy->_strlen

Critical Paths under _myint in BANK0

    _myint->i1_Add_Trace
    i1_Add_Trace->i1_strcat

Critical Paths under _main in BANK1

    _main->_Add_Trace

Critical Paths under _myint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myint in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myint in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myint in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myint in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myint in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myint in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0   25834
                                              6 BANK1      2     2      0
                                              0 BANK6     46    46      0
                          _Add_Trace
                           _Debounce
                            _GetTemp
                           _PrintLog
                     _Send_UART_Data
                       _SetToGetTemp
                       _ToggleBitRB5
                       _clearDisplay
                            _initLCD
                       _lcdWriteText
                             _memset
                   _moveCursorToHome
                         _powerOnLcd
                        _printEM1812
                       _setCursorOff
                  _setCursorPosition
               _setNotBlinkingCursor
 ---------------------------------------------------------------------------------
 (1) _setNotBlinkingCursor                                 1     1      0     254
                                             26 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _setCursorOff                                         1     1      0     254
                                             26 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _printEM1812                                         10     7      3    3104
                                             29 BANK0     10     7      3
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                             20 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                             20 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _powerOnLcd                                           1     1      0     254
                                             26 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _moveCursorToHome                                     0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     632
                                             26 BANK0      1     1      0
                       _clearDisplay
                            _setData
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _clearDisplay                                         0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _writeInsChk                                          1     1      0     254
                                             25 BANK0      1     1      0
                        _waitLCDBusy
                      _writeInsNoChk
 ---------------------------------------------------------------------------------
 (3) _writeInsNoChk                                        2     2      0     186
                                             23 BANK0      2     2      0
                 _SetToSendDataToLCD
                            _setData
 ---------------------------------------------------------------------------------
 (1) _ToggleBitRB5                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetToGetTemp                                         1     1      0       0
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Send_UART_Data                                       5     4      1     697
                                             30 BANK0      5     4      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              10     5      5     478
                                             20 BANK0     10     5      5
 ---------------------------------------------------------------------------------
 (1) _PrintLog                                             4     4      0    6002
                                             39 BANK0      4     4      0
                       _lcdWriteText
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _lcdWriteText                                         6     4      2    3421
                                             33 BANK0      6     4      2
                        _writeTxtChk
 ---------------------------------------------------------------------------------
 (2) _writeTxtChk                                          3     3      0    2301
                                             30 BANK0      3     3      0
                 _SetToSendDataToLCD
                  _setCursorPosition
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (1) _setCursorPosition                                    5     4      1    2047
                                             25 BANK0      5     4      1
                 _SetToSendDataToLCD
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (3) _waitLCDBusy                                          5     5      0      37
                                             20 BANK0      5     5      0
               _SetToReadDataFromLCD
 ---------------------------------------------------------------------------------
 (4) _SetToReadDataFromLCD                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setData                                              3     3      0     124
                                             20 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _SetToSendDataToLCD                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetTemp                                              1     1      0    1897
                                             34 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                              14     8      6    1897
                                             20 BANK0     14     8      6
 ---------------------------------------------------------------------------------
 (1) _Debounce                                             5     3      2     788
                                             20 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _Add_Trace                                           10     7      3    2780
                                             39 BANK0      4     1      3
                                              0 BANK1      6     6      0
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcat                                               5     3      2     979
                                             34 BANK0      5     3      2
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             20 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     6      2     263
                                             26 BANK0      8     6      2
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _myint                                                5     5      0    1072
                                             15 BANK0      5     5      0
                        i1_Add_Trace
 ---------------------------------------------------------------------------------
 (8) i1_Add_Trace                                         10     7      3    1072
                                              5 BANK0     10     7      3
                           i1_strcat
                           i1_strlen
 ---------------------------------------------------------------------------------
 (9) i1_strcat                                             5     3      2     542
                                              0 BANK0      5     3      2
                           i1_strcpy
                           i1_strlen
 ---------------------------------------------------------------------------------
 (9) i1_strlen                                             6     4      2     235
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (10) i1_strcpy                                            8     6      2     172
                                              6 COMMON     8     6      2
                           i1_strlen (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Add_Trace
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _Debounce
   _GetTemp
     _memset
   _PrintLog
     _lcdWriteText
       _writeTxtChk
         _SetToSendDataToLCD
         _setCursorPosition
           _SetToSendDataToLCD
           _setData
           _waitLCDBusy
             _SetToReadDataFromLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
     _memset
     _strlen
   _Send_UART_Data
     _memcpy
   _SetToGetTemp
   _ToggleBitRB5
   _clearDisplay
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _initLCD
     _clearDisplay
       _writeInsChk
         _waitLCDBusy
           _SetToReadDataFromLCD
         _writeInsNoChk
           _SetToSendDataToLCD
           _setData
     _setData
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _lcdWriteText
     _writeTxtChk
       _SetToSendDataToLCD
       _setCursorPosition
         _SetToSendDataToLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
       _setData
       _waitLCDBusy
         _SetToReadDataFromLCD
   _memset
   _moveCursorToHome
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _powerOnLcd
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _printEM1812
     ___awdiv
     ___awmod
   _setCursorOff
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _setCursorPosition
     _SetToSendDataToLCD
     _setData
     _waitLCDBusy
       _SetToReadDataFromLCD
   _setNotBlinkingCursor
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData

 _myint (ROOT)
   i1_Add_Trace
     i1_strcat
       i1_strcpy
         i1_strlen (ARG)
       i1_strlen
     i1_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2B      3C       5       75.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      8      29       7       51.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      32       9       62.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      32      11       62.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4B      13       93.8%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      32      15       62.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50     2E      2E      17       57.5%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     182      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               20      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     182      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Feb 18 21:18:26 2019

                            pc 0002                     __CFG_FOSC$ 0002                    __CFG_CP$OFF 0000  
                  _SSPSTATbits 0214                   ___awdiv@sign 003A             _SetToSendDataToLCD 0AC6  
                          l200 0405                            l201 0414                            l210 04A9  
                          l202 0423                            l211 04B1                            l203 044B  
                          l140 0C99                            l132 0C18                            l220 0512  
                          l212 04CD                            l204 045A                            l141 0C99  
                          l133 0C18                            l125 0AE7                            l205 0540  
                          l221 0523                            l213 04CC                            l126 0AE9  
                          l230 05A0                            l222 053D                            l214 04CE  
                          l206 048A                            l127 0AE9                            l231 05EA  
                          l207 0553                            l223 053E                            l215 04DA  
                          l136 0DDC                            l160 07D6                            l152 0701  
                          l240 0604                            l232 05D5                            l224 05BC  
                          l216 04DB                            l208 049C                            l137 0DDC  
                          l161 07F3                            l153 075A                            l241 0613  
                          l233 05C6                            l225 05A7                            l217 04E3  
                          l209 04A8                            l162 07F3                            l154 0770  
                          l402 0B15                            l242 061D                            l234 05E9  
                          l226 0596                            l218 0511                            l155 07A7  
                          l243 061E                            l235 05C7                            l227 05BB  
                          l219 0510                            l340 0C31                            l148 0CF4  
                          l244 061F                            l236 05CF                            l228 0597  
                          l341 0C1C                            l149 0CF4                            l165 0C4C  
                          l405 0B0A                            l245 061F                            l237 05D0  
                          l229 059F                            l158 07B9                            l342 0C42  
                          l166 0C6D                            l238 0605                            l159 07C1  
                          l343 0C42                            l239 0602                            l191 0334  
                          l440 0E5E                            l360 0FA6                            l432 0ADF  
                          l192 03C6                            l441 0E69                            l361 0F90  
                          l337 0EFE                            l442 0E9A                            l370 0FB7  
                          l362 0FA5                            l610 0E29                            l602 0DEB  
                          l194 0351                            l355 0D99                            l435 0E6B  
                          l371 0FBE                            l363 0F9D                            l611 0E35  
                          l603 0DF5                            l195 0489                            l436 0E3F  
                          l372 0FC7                            l364 0FA4                            l612 0E3A  
                          l604 0E2A                            l196 046A                            l381 0AD1  
                          l437 0E81                            l365 0FFF                            l429 0AC5  
                          l605 0E08                            l197 03CE                            l390 0CC6  
                          l438 0E48                            l366 0FC9                            l358 0FA8  
                          l606 0DFE                            l198 0488                            l439 0E53  
                          l367 0FA9                            l359 0F83                            l375 0AF4  
                          l607 0E0D                            l199 03DD                            l384 0ACB  
                          l368 0FE0                            l608 0E0E                            l369 0FB0  
                          l609 0E1D                            l378 0B2D                            l387 0CBE  
                          l900 0B5F                            l388 0CA6                            l396 0AFF  
                          l389 0CC6                            l910 0BAD                            l590 0F1B  
                          l903 0BD7                            l911 0BBC                            l591 0F58  
                          l904 0BD6                            l912 0BCA                            l592 0F30  
                          l905 0BEF                            l593 0F26                            l906 0BEF  
                          l594 0F35                            l595 0F36                            l596 0F4B  
                          l909 0BB2                            l597 0F57                            l589 0F0D  
                          l598 0F63                            l599 0F68                            l880 0D16  
                          l881 0CFF                            l890 06C1                            l882 0D23  
                          l891 06EA                            l883 0D23                            l892 06DB  
                          l893 06F1                            l886 062E                            l887 06F1  
                          l888 0651                            l889 0698          _wReceptionCounterPrev 0056  
                 ___awmod@sign 003A                   __CFG_BORV$LO 0000                            wreg 0009  
          ?_SetToSendDataToLCD 0070                           S4624 0800                   __CFG_LVP$OFF 0000  
               ??_lcdWriteText 0043                           l4000 02C9                           l4010 02F3  
                         l4002 02D5                           l4100 04B1                           l4020 0324  
                         l4012 02F6                           l4004 02D8                           l4110 04C5  
                         l4102 04B7                           l4030 0361                           l4022 0326  
                         l4014 0302                           l4006 02E4                           l3400 0D61  
                         l4200 05F3                           l4120 04D4                           l4112 04C6  
                         l4104 04BA                           l4040 03A5                           l4032 0367  
                         l4024 0329                           l4016 0305                           l4008 02E7  
                         l3402 0D93                           l3410 0C9A                           l4210 060A  
                         l4202 05F8                           l4130 04E9                           l4122 04D8  
                         l4114 04C8                           l4106 04BD                           l4050 03CE  
                         l4042 03B3                           l4034 0378                           l4026 0342  
                         l4018 0314                           l3404 0D95                           l3420 0CB6  
                         l3412 0C9D                           l3500 0FA7                           l4212 060C  
                         l4204 05FA                           l4140 0504                           l4132 04ED  
                         l4124 04DB                           l4116 04CA                           l4108 04C0  
                         l4060 0414                           l4052 03DD                           l4044 03C1  
                         l4036 0386                           l4028 0351                           l3406 0D97  
                         l3422 0CBA                           l3414 0CA0                           l3430 0E48  
                         l3510 0FC4                           l3502 0FA9                           l4214 0613  
                         l4206 0602                           l4150 052D                           l4142 0505  
                         l4134 04F2                           l4126 04E1                           l4118 04CE  
                         l4070 045A                           l4062 0423                           l4054 03EB  
                         l4038 0394                           l4046 03C6                           l3408 0AC6  
                         l3424 0CBC                           l3416 0CA9                           l3432 0E53  
                         l3440 0E81                           l3520 0FE6                           l3512 0FC8  
                         l3504 0FB0                           l3600 0C19                           l4216 0619  
                         l4208 0605                           l4160 0558                           l4152 0537  
                         l4144 0512                           l4136 04F8                           l4128 04E3  
                         l4080 0490                           l4072 0469                           l4064 0431  
                         l4056 03FC                           l4048 03CC                           l3418 0CB5  
                         l3450 0E95                           l3442 0E84                           l3434 0E5E  
                         l3426 0E3D                           l3530 0FFA                           l3522 0FE8  
                         l3506 0FB7                           l3514 0FC9                           l3602 0C1C  
                         l3610 0CFF                           l4218 061B                           l4170 0594  
                         l4162 0569                           l4154 053F                           l4146 0520  
                         l4138 04FE                           l4090 049C                           l4082 0495  
                         l4066 0442                           l4058 0405                           l4074 046A  
                         l3444 0E87                           l3436 0E6A                           l3428 0E3F  
                         l3524 0FE9                           l3508 0FBE                           l3516 0FE0  
                         l3604 0C2B                           l3612 0D07                           l3460 0B1D  
                         l3620 0AC1                           l3700 0E35                           l4172 0597  
                         l4180 05BC                           l4164 057A                           l4148 0523  
                         l4092 04A2                           l4084 0496                           l4076 048A  
                         l4068 044B                           l4156 0540                           l3470 0BB2  
                         l3446 0E89                           l3438 0E6B                           l3526 0FF3  
                         l3518 0FE3                           l3606 0C31                           l3614 0D0B  
                         l3710 0AE5                           l3462 0B1E                           l3630 0F0D  
                         l3622 0EFF                           l3702 0E3A                           l4190 05D4  
                         l4182 05C2                           l4174 05A0                           l4166 058C  
                         l4094 04A6                           l4158 0553                           l4086 0498  
                         l4078 048D                           l3536 0BCD                           l3472 0BBC  
                         l3800 07AA                           l3560 0626                           l3448 0E8A  
                         l3528 0FF8                           l3480 0F6E                           l3616 0D11  
                         l3608 0CF5                           l3720 0C07                           l3712 0BF0  
                         l3464 0B28                           l3456 0B18                           l3640 0F23  
                         l3632 0F11                           l3624 0F01                           l4192 05D5  
                         l4184 05C4                           l4176 05A6                           l4168 0592  
                         l4096 04A9                           l4088 049A                           l3538 0BD7  
                         l3474 0BCA                           l3466 0BA7                           l3554 0B49  
                         l3730 0D9C                           l3810 07D6                           l3802 07AF  
                         l3570 0650                           l3562 062D                           l3490 0F83  
                         l3482 0F70                           l3618 0D16                           l3722 0C08  
                         l3714 0BF2                           l3458 0B1B                           l3650 0F45  
                         l3642 0F26                           l3634 0F16                           l3626 0F05  
                         l4186 05C7                           l4194 05EA                           l4178 05A7  
                         l4098 04AF                           l3468 0BAD                           l3556 0B5F  
                         l3732 0DD3                           l3812 07E4                           l3804 07B9  
                         l3580 06B6                           l3572 0651                           l3564 062E  
                         l3740 0C77                           l3396 0ACC                           l3492 0F8A  
                         l3484 0F71                           l3820 0C4C                           l3724 0C0E  
                         l3716 0BF7                           l3708 0AE0                           l3476 0AEC  
                         l3660 0F5D                           l3652 0F49                           l3644 0F2B  
                         l3636 0F1B                           l3628 0F0A                           l4196 05F0  
                         l4188 05D0                           l4620 0474                           l3900 0268  
                         l3814 07EC                           l3806 07C1                           l3590 06D6  
                         l3582 06C0                           l3574 068D                           l3566 0634  
                         l3558 0621                           l3750 0C94                           l3742 0C86  
                         l3734 0C6E                           l3398 0D60                           l4630 0FD2  
                         l3494 0F90                           l3486 0F77                           l3478 0F6B  
                         l3830 0C67                           l3822 0C4D                           l3726 0C13  
                         l3718 0BFB                           l3662 0F63                           l3654 0F4B  
                         l3646 0F30                           l3638 0F1D                           l3670 0DE3  
                         l4198 05F2                           l4622 0549                           l3910 0271  
                         l3902 0269                           l3808 07CF                           l3592 06DB  
                         l3584 06C1                           l3576 0697                           l3568 0646  
                         l3752 0C96                           l3744 0C88                           l3736 0C70  
                         l4632 0E73                           l3496 0F97                           l3488 0F7D  
                         l3760 0CE1                           l3832 0C68                           l3824 0C51  
                         l3816 0C45                           l3728 0C15                           l3840 0E9B  
                         l3664 0F68                           l3656 0F50                           l3648 0F36  
                         l3680 0DFB                           l3672 0DE8                           l3920 027A  
                         l3912 0273                           l3904 026B                           l3594 06E1  
                         l3586 06CE                           l3578 0698                           l3746 0C8D  
                         l3738 0C75                           l3498 0F9D                           l3754 0CC9  
                         l3834 0C69                           l3826 0C63                           l3818 0C4B  
                         l3850 0ED3                           l3842 0EB7                           l3658 0F58  
                         l3690 0E18                           l3682 0DFE                           l3674 0DEB  
                         l3666 0DDD                           l3770 0701                           l3762 06F2  
                         l4626 05B0                           l3930 0283                           l3922 027B  
                         l3914 0275                           l3906 026D                           l3596 06E5  
                         l3588 06D2                           l3748 0C92                           l3756 0CD5  
                         l3836 0C6A                           l3828 0C65                           l3860 0EFB  
                         l3852 0EDB                           l3844 0EBF                           l3692 0E1D  
                         l3684 0E03                           l3676 0DEF                           l3668 0DDF  
                         l3780 074A                           l3772 0711                           l3764 06F5  
                         l4628 05DE                           l3940 028C                           l3932 0284  
                         l3924 027C                           l3916 0277                           l3908 026F  
                         l3598 06EA                           l3758 0CDA                           l3838 0C6B  
                         l3854 0EDF                           l3846 0EC3                           l3870 0AD8  
                         l3862 0AF5                           l3694 0E22                           l3686 0E08  
                         l3678 0DF5                           l3790 0770                           l3782 0755  
                         l3774 0721                           l3766 06F9                           l3950 02A3  
                         l3942 028F                           l3934 0285                           l3926 027E  
                         l3918 0278                           l3856 0EE7                           l3848 0ED0  
                         l3872 0ADC                           l3864 0AFB                           l3688 0E0E  
                         l3696 0E2A                           l3792 0780                           l3784 075A  
                         l3776 0731                           l3768 06FB                           l3960 02AA  
                         l3952 02A5                           l3944 0291                           l3936 0287  
                         l3928 0282                           l3858 0EEC                           l3698 0E2F  
                         l3794 078B                           l3786 075F                           l3778 0741  
                         l3866 0B00                           l3874 0B0B                           l3970 02B5  
                         l3962 02AB                           l3954 02A6                           l3946 02A0  
                         l3938 0289                           l3890 0262                           l3882 0249  
                         l3796 079B                           l3788 076B                           l3868 0B06  
                         l3876 0B11                           l3980 02BA                           l3972 02B6  
                         l3964 02AD                           l3956 02A8                           l3948 02A2  
                         l3892 0263                           l3884 024E                           l3798 079F  
                         l3990 02BF                           l3982 02BB                           l3974 02B7  
                         l3966 02AE                           l3958 02A9                           l3894 0265  
                         l3886 025D                           l3992 02C1                           l3984 02BC  
                         l3976 02B8                           l3968 02B3                           l3896 0266  
                         l3888 0260                           l3994 02C2                           l3986 02BD  
                         l3978 02B9                           l3898 0267                           l3996 02C3  
                         l3988 02BE                           l3998 02C6                           STR_1 1074  
                         STR_2 1080                           STR_3 1054                           STR_4 1033  
                         STR_5 1064                           STR_6 1011                           STR_7 1022  
                         STR_8 1000                           STR_9 1044                           u2110 0CC5  
                         u2111 0CC4                           u2200 0BEE                           u2201 0BED  
                         u2105 0D75                           u2140 0BBB                           u2300 0F05  
                         u2141 0BBA                           u2125 0E8D                           u2301 0F04  
                         u2230 062C                           u2150 0F77                           u2310 0F11  
                         u2231 062B                           u2151 0F76                           u2135 0B21  
                         u2311 0F10                           u2240 064F                           u2160 0F7D  
                         u2320 0F23                           u2400 0DE3                           u2241 064E  
                         u2161 0F7C                           u2321 0F22                           u2401 0DE2  
                         u2250 0696                           u2170 0F8A                           u2410 0DEF  
                         u2251 0695                           u2171 0F89                           u2411 0DEE  
                         u2260 06BF                           u2180 0F97                           u2500 0BF7  
                         u2340 0F34                           u2420 0DFB                           u2261 06BE  
                         u2181 0F96                           u2501 0BF6                           u2341 0F33  
                         u2421 0DFA                           u2510 0DD3                           u2270 06F0  
                         u2511 0DD2                           u2271 06EF                           u2095 0D64  
                         u3207 0ED1                           u2335 0F27                           u3127 02CF  
                         u2520 0C75                           u2280 0C41                           u2600 0C4A  
                         u2360 0F45                           u2440 0E0C                           u2521 0C74  
                         u2281 0C40                           u2601 0C49                           u3217 0ED8  
                         u2361 0F44                           u2441 0E0B                           u3137 02DE  
                         u2530 0CDA                           u2290 0D22                           u2450 0E18  
                         u2515 0DCF                           u2195 0FEC                           u2531 0CD9  
                         u2291 0D21                           u3227 0EE0                           u2355 0F37  
                         u2451 0E17                           u2435 0DFF                           u3147 02ED  
                         u2380 0F56                           u2540 06F9                           u2700 04E9  
                         u2620 0342                           u2381 0F55                           u2365 0F41  
                         u2541 06F8                           u2701 04E8                           u2621 0341  
                         u3157 02FC                           u2390 0F5D                           u2470 0E28  
                         u2550 074A                           u2710 0520                           u2630 0350  
                         u2391 0F5C                           u2375 0F4C                           u2471 0E27  
                         u2455 0E14                           u2551 0749                           u2711 051F  
                         u2631 034F                           u3167 030B                           u2480 0E2F  
                         u2560 075F                           u2720 0592                           u2640 03CC  
                         u2481 0E2E                           u2465 0E1E                           u2561 075E  
                         u2721 0591                           u2641 03CB                           u2625 033E  
                         u3177 0330                           u2570 07AF                           u2490 0AE5  
                         u2730 05C2                           u2650 04A2                           u2571 07AE  
                         u2491 0AE4                           u3187 0EBB                           u2731 05C1  
                         u2651 04A1                           u2635 034C                           u2580 07CF  
                         u2740 05F0                           u2660 04AF                           u2581 07CE  
                         u3197 0EC7                           u2741 05EF                           u2661 04AE  
                         u2590 07E4                           u2750 05F8                           u2670 04B7  
                         u2591 07E3                           u2751 05F7                           u2671 04B6  
                         u2760 060A                           u2680 04D4                           u2761 0609  
                         u2681 04D3                           u2770 0619                           u2690 04E1  
                         u2771 0618                           u2691 04E0                           _TMR0 0015  
                         _WPUB 020D                   __CFG_WRT$OFF 0000           printEM1812@wVariable 003D  
                         _main 0249                           _test 004B                           fsr0h 0005  
                         fsr1h 0007                           indf0 0000                           fsr0l 0004  
                         indf1 0001                           fsr1l 0006                           btemp 007E  
                __CFG_BOREN$ON 0000                           start 01E5                  __CFG_IESO$OFF 0000  
         ??_SetToSendDataToLCD 0034                __end_of_GetTemp 0C9A           __end_of_clearDisplay 0AC6  
             ??_Send_UART_Data 003F                   main@wCounter 0348                          ?_main 0070  
                  _writeInsChk 0AEA                __end_of___awdiv 0F69                          STR_10 1090  
                        STR_11 1089                  __CFG_WDTE$OFF 0000                __end_of___awmod 0E3B  
              ___awdiv@divisor 0034                   main@wReadout 0326                          i1l136 0D5D  
                        i1l137 0D5D                          i1l260 005A                          i1l252 017B  
                        i1l253 017B                          i1l261 00D3                          i1l270 0115  
                        i1l262 0081                          i1l254 0119                          i1l271 0106  
                        i1l263 0098                          i1l255 0021                          i1l280 0167  
                        i1l256 0118                          i1l272 0102                          i1l264 00B7  
                        i1l281 015D                          i1l273 0105                          i1l265 00CD  
                        i1l257 003B                          i1l290 01B5                          i1l282 0166  
                        i1l258 0117                          i1l266 0116                          i1l274 0114  
                        i1l291 01B6                          i1l275 017A                          i1l283 0177  
                        i1l267 00ED                          i1l259 00D6                          i1l292 01C3  
                        i1l284 0175                          i1l276 0124                          i1l268 00E9  
                        i1l293 01E3                          i1l277 0179                          i1l285 0176  
                        i1l269 00EC                          i1l294 01DD                          i1l286 018E  
                        i1l278 013F                          i1l295 01E2                          i1l287 01B7  
                        i1l279 0178                          i1l296 01E3                          i1l288 01A3  
                        i1l289 01B7                          i1l900 0B46                          i1l910 0B65  
                        i1l903 0B8E                          i1l911 0B74                          i1l904 0B8D  
                        i1l912 0B82                          i1l905 0BA6                          i1l906 0BA6  
                        i1l909 0B6A                ___awdiv@counter 0039                          _TMR1H 0017  
                        _TMR1L 0016                          _PORTA 000C                          _PORTB 000D  
       printEM1812@wIsNegative 0044                          _TRISB 008D                          _TXREG 019A  
                  _writeTxtChk 0F69                  __CFG_PWRTE$ON 0000                 __CFG_FCMEN$OFF 0000  
              __end_of_initLCD 0EFF         ??_SetToReadDataFromLCD 0034                          _myint 0004  
              __end_of_setData 0D9A             __size_of_Add_Trace 0043                          status 0003  
                        wtemp0 007E               __end_of_Debounce 07F4         ??_setNotBlinkingCursor 003A  
             __end_ofi1_strcat 0B47               __end_ofi1_strcpy 0BA7               __end_ofi1_strlen 0B83  
               __CFG_MCLRE$OFF 0000                __initialization 01E7                   __end_of_main 0621  
               __CFG_LPBOR$OFF 0000                   ?i1_Add_Trace 0025                         ??_main 00C1  
             _wReceptionBuffer 0134               __end_of_PrintLog 0CF5                   ?_waitLCDBusy 0070  
                _gUartRXBuffer 02A0               ___awdiv@dividend 0036                         ?_myint 0070  
                       _ANSELB 018D                  _gUartTXBuffer 01A0                         i1l4300 00E0  
                       i1l4310 00FF                         i1l4302 00E6                         i1l4320 012E  
                       i1l4304 00F2                         i1l4312 0106                         i1l4330 0150  
                       i1l4322 0131                         i1l4314 011E                         i1l4306 00F3  
                       i1l4250 0006                         i1l3540 0B84                         i1l4340 0180  
                       i1l4332 0157                         i1l4324 0139                         i1l4316 0120  
                       i1l4308 00F9                         i1l4260 001B                         i1l4252 000B  
                       i1l3542 0B8E                         i1l3550 0B74                         i1l4350 019E  
                       i1l4342 0181                         i1l4334 015F                         i1l4326 0144  
                       i1l4318 0128                         i1l4270 0035                         i1l4262 001D  
                       i1l4254 000C                         i1l3552 0B82                         i1l3544 0B60  
                       i1l3704 0B30                         i1l4360 01B3                         i1l4352 01A3  
                       i1l4344 018E                         i1l4336 016C                         i1l4328 014A  
                       i1l4280 0057                         i1l4272 0040                         i1l4264 0025  
                       i1l4256 0011                         i1l3546 0B65                         i1l3706 0B46  
                       i1l4370 01CE                         i1l4362 01BB                         i1l4354 01A9  
                       i1l4346 0193                         i1l4338 016E                         i1l4290 0098  
                       i1l4282 005C                         i1l4274 004A                         i1l4266 002B  
                       i1l4258 0016                         i1l3548 0B6A                         i1l4372 01D7  
                       i1l4364 01BC                         i1l4356 01AA                         i1l4348 0197  
                       i1l4292 009D                         i1l4284 0062                         i1l4276 004E  
                       i1l4268 0032                         i1l4374 01DD                         i1l4366 01C3  
                       i1l4358 01AC                         i1l4294 00B7                         i1l4286 0067  
                       i1l4278 0050                         i1l4376 01DF                         i1l4368 01C8  
                       u300_20 0180                         i1l4288 0081                         i1l4296 00D3  
                       u300_21 017F                         i1l4298 00DA                         u221_20 0BA5  
                       i1l3880 0D54                         u301_20 0193                         u221_21 0BA4  
                       u301_21 0192                         i1l3878 0D26                         u222_20 0B73  
                       u302_20 019E                         u222_21 0B72                         u302_21 019D  
                       u303_20 01A9                         u303_21 01A8                  setData@iValue 0036  
                       u304_20 01B3                         u304_21 01B2                         u305_20 01BB  
                       u305_21 01BA                         u306_20 01C8                         u306_21 01C7  
                       u307_20 01CE                         u307_21 01CD                         u261_20 0D54  
                       u261_21 0D53                         u261_25 0D50                         u280_20 0016  
                       u280_21 0015                         u281_20 001B                         u281_21 001A  
            _setCursorPosition 0E3B                         u290_20 00E6                         u282_20 0025  
                       u290_21 00E5                         u282_21 0024                         u291_20 00F2  
                       u283_20 002B                         u291_21 00F1                         u283_21 002A  
                       u292_20 00FF                         u284_20 0040                         u292_21 00FE  
                       u284_21 003F                         u293_20 011E                         u285_20 0057  
                       u293_21 011D                         u285_21 0056                         u294_20 0128  
                       u286_20 0067                         u278_20 000B                         u294_21 0127  
                       u286_21 0066                         u278_21 000A                         u295_20 012E  
                       u287_20 009D                         u279_20 0011                         u295_21 012D  
                       u287_21 009C                         u279_21 0010                         u296_20 0144  
                       u288_20 00DA                         u296_21 0143                         u288_21 00D9  
                       u297_20 014A                         u289_20 00E0                         u297_21 0149  
                       u289_21 00DF                         u298_20 0150                         u298_21 014F  
                       u299_20 016C                         u299_21 016B                         _SPBRGH 019C  
                    ??_GetTemp 0042                         _SPBRGL 019B                         _SSPADD 0212  
                       _SSPBUF 0211             ?_setCursorPosition 0039            ??_setCursorPosition 003A  
                    ??___awdiv 0038                      ??___awmod 0038           __end_of_lcdWriteText 0C43  
      main@wEnterBottonPressed 034C                         _memcpy 0CF5                   ?_printEM1812 003D  
                       _memset 0621                         _wTrial 0052               ___awdiv@quotient 003B  
              ___awmod@divisor 0034              __end_of_Add_Trace 0DDD                ___awmod@counter 0039  
                       _strcat 0B47                         _strcpy 0BCB                         _strlen 0BA7  
                    ??_initLCD 003A                      ??_setData 0034       __end_of_moveCursorToHome 0AE0  
                ?_SetToGetTemp 0070      __end_of_setCursorPosition 0E9B             _gTxReadingPosition 0050  
       __size_of_writeInsNoChk 0018        __end_of__initialization 0245               main@wEditingMode 033C  
        __size_of_clearDisplay 0005     setCursorPosition@wLCDIndex 003D                 __pcstackCOMMON 0070  
                 __pidataBANK1 0AD2                  __end_of_myint 01E5           writeInsNoChk@iOpCode 0038  
   setCursorPosition@iPosition 0039                 _wInterruptText 0220                 _OPTION_REGbits 0095  
                    ?_Debounce 0034                    i1strcat@src 0020                      ?i1_strcat 0020  
                    ?i1_strcpy 0076                      ?i1_strlen 0070                 ??_SetToGetTemp 0034  
                 _clearDisplay 0AC1                    i1strcpy@src 0076                        ??_myint 002F  
                   __pbssBANK0 004B                     __pbssBANK1 00A0                     __pbssBANK2 0120  
                   __pbssBANK3 01A0                     __pbssBANK4 0220                     __pbssBANK5 02A0  
            _wReceptionCounter 0057                  ?_setCursorOff 0070                __CFG_VCAPEN$OFF 0000  
                   __pmaintext 0249                 Add_Trace@iText 0048                 Add_Trace@oText 004A  
                    ?_PrintLog 0070                     __pintentry 0004                        ?_memcpy 0034  
                _writeInsNoChk 0B16                        ?_memset 0034                   ?_writeInsChk 0070  
                      ?_strcat 0042                        ?_strcpy 003A                        ?_strlen 0034  
         __size_ofi1_Add_Trace 003A                   ?_writeTxtChk 0070                     ??_Debounce 0036  
                   ??i1_strcat 0022                     ??i1_strcpy 0078                     ??i1_strlen 0072  
   __size_of_setCursorPosition 0060           __size_of_waitLCDBusy 002D                 ??_setCursorOff 003A  
                      _GetTemp 0C6E                _gTxTransmitSize 0051          __size_of_lcdWriteText 002A  
         main@wTemperaturePrev 033F    __size_of_SetToSendDataToLCD 0006                     ??_PrintLog 0047  
                      ___awdiv 0EFF                        ___awmod 0DDD                printEM1812@wTen 0045  
               ?_writeInsNoChk 0070                     _wTempState 00A4                __CFG_STVREN$OFF 0000  
              Debounce@iSwitch 0038               _wI2CCommandState 00A6                __size_of_memcpy 002F  
              __size_of_memset 00D1            Send_UART_Data@iData 0042                  ?_ToggleBitRB5 0070  
                      __ptext1 0B0B                        __ptext2 0B00                        __ptext3 06F2  
                      __ptext4 0DDD                        __ptext5 0EFF                        __ptext6 0AF5  
                      __ptext7 0AD8                        __ptext8 0E9B                        __ptext9 0AC1  
              Debounce@ioTimer 0034                __size_of_strcat 0019           __size_of_printEM1812 00B6  
              __size_of_strcpy 0025                __size_of_strlen 0024                        _initLCD 0E9B  
                    _T1CONbits 0018               ___awmod@dividend 0036                        _setData 0D5E  
            main@wDebounceDown 0346                        clrloop0 07F5           end_of_initialization 0245  
                 _lcdWriteText 0C19  __size_of_SetToReadDataFromLCD 0006                        memcpy@d 003B  
                      memcpy@n 0037                        memcpy@s 003D                        memset@c 0036  
                      memset@k 003E                        memset@n 0038                        memset@s 0040  
             __CFG_CLKOUTEN$ON 0000  __size_of_setNotBlinkingCursor 000B                      _RCSTAbits 019D  
         __end_of_SetToGetTemp 0C19                        strcpy@d 0040                        strlen@a 0038  
               ??_ToggleBitRB5 0034                        strcpy@s 003E                        strlen@s 0034  
                    _PORTAbits 000C                      _PORTBbits 000D                      _PORTCbits 000E  
                   _powerOnLcd 0AF5           main@wUpBottonPressed 034A                      _Add_Trace 0D9A  
                    _TRISAbits 008C                      _TRISCbits 008E              ?_moveCursorToHome 0070  
          printEM1812@wDecimal 0043              _wTimer1IntCounter 004E        __size_of_Send_UART_Data 002B  
   Send_UART_Data@iData_Length 003E             ??_moveCursorToHome 003A            printEM1812@oTextOut 003F  
                    _TXSTAbits 019E            waitLCDBusy@busyFlag 0037                ??_writeInsNoChk 0037  
             _mWritingPosition 0059           __end_of_setCursorOff 0B0B                 __end_of_memcpy 0D24  
               __end_of_memset 06F2    printEM1812@wWritingPosition 0046                 __end_of_strcat 0B60  
               _wTimer0Counter 00A5                 __end_of_strcpy 0BF0                 __end_of_strlen 0BCB  
         __size_of_writeInsChk 000B            start_initialization 01E7                     ?_Add_Trace 0047  
         __size_of_writeTxtChk 0097              __size_of_Debounce 004C                      i1strcpy@d 007D  
                    i1strlen@a 0074                      i1strcpy@s 007A                      i1strlen@s 0070  
            __size_ofi1_strcat 0019              __size_ofi1_strcpy 0024              __size_ofi1_strlen 0023  
                 i1strcat@dest 0024                main@wDebounceUp 0344                    __pdataBANK1 00C3  
                _wI2CTxSendPos 0053                       ??_memcpy 0039              __size_of_PrintLog 002E  
                     ??_memset 003A                   i1strcpy@dest 007C                     memset@dest 0034  
                     ??_strcat 0044                       ??_strcpy 003C                       ??_strlen 0036  
                  ?_powerOnLcd 0070                    __pbssBIGRAM 22F0               i1Add_Trace@iText 0026  
                    ___latbits 0003               i1Add_Trace@oText 002E                  __pcstackBANK0 0020  
                __pcstackBANK1 00BB                  __pcstackBANK6 0320              printEM1812@wUnity 0042  
                    _gTxBuffer 22F0           __end_of_ToggleBitRB5 0AEA                       ?_GetTemp 0070  
        __size_of_SetToGetTemp 0029                   _wTemperature 00A0        i1Add_Trace@iSizeOfoText 0025  
           writeInsChk@iOpCode 0039                       ?___awdiv 0034                       ?___awmod 0034  
                ??i1_Add_Trace 0028                      __pswtext1 0800                      _wCounter2 004D  
                     ?_initLCD 0070                       ?_setData 0070                    ??_Add_Trace 00BB  
                ??_waitLCDBusy 0034                      _wHumidity 00A2                  PrintLog@iText 004A  
               _Send_UART_Data 0C43                   _SetToGetTemp 0BF0                 __size_of_myint 01E1  
             _mDisplayOnOffReg 005B     __end_of_SetToSendDataToLCD 0ACC                      clear_ram0 07F4  
                     _PIE1bits 0091                       _PIE2bits 0092            __size_of_powerOnLcd 000B  
                     _PIR1bits 0011                       _PIR2bits 0012          __size_of_setCursorOff 000B  
                    main@F2273 00C3       _wReceptionBufferPosition 0058              Debounce@swPressed 0035  
 __end_of_SetToReadDataFromLCD 0AD2                  ??_printEM1812 0040    lcdWriteText@wCharReadingPos 0046  
             _wI2CRxBufferSize 0054                      main@wConv 0322                      main@wMenu 034D  
 __end_of_setNotBlinkingCursor 0B16                      main@wTemp 0320                       _Debounce 07A8  
          __end_ofi1_Add_Trace 0D5E         __end_of_Send_UART_Data 0C6E                       i1_strcat 0B2E  
                     i1_strcpy 0B83                       i1_strlen 0B60              lcdWriteText@iText 0041  
          __end_of_waitLCDBusy 0CC7                main@wUpdateMenu 0341                   _setCursorOff 0B00  
             __size_of_GetTemp 002C      __size_of_moveCursorToHome 0008                      memcpy@tmp 003A  
        Add_Trace@iSizeOfoText 0047                   _wI2CTxBuffer 00A7                       _PrintLog 0CC7  
             __size_of___awdiv 006A               __size_of___awmod 005E                    _wTempUpdate 004F  
             _wI2CTxBufferSize 0055                     _ANSELAbits 018C                     _ANSELCbits 018E  
             __size_of_initLCD 0064                     strcat@dest 0046            __end_of_printEM1812 07A8  
              ?_Send_UART_Data 003E      PrintLog@wInterruptTextLen 0049               __size_of_setData 003C  
                ?_clearDisplay 0070          __size_of_ToggleBitRB5 000A                       __ptext10 0AEA  
                     __ptext11 0B16                       __ptext20 0C9A                       __ptext12 0AE0  
                     __ptext21 0ACC                       __ptext13 0BF0                       __ptext30 0BCB  
                     __ptext22 0D5E                       __ptext14 0C43                       __ptext23 0AC6  
                     __ptext15 0CF5                       __ptext32 0D24                       __ptext24 0C6E  
                     __ptext16 0CC7                       __ptext33 0B2E                       __ptext25 0621  
                     __ptext17 0C19                       __ptext34 0B60                       __ptext26 07A8  
                     __ptext18 0F69                       __ptext35 0B83                       __ptext27 0D9A  
                     __ptext19 0E3B                       __ptext28 0B47                       __ptext29 0BA7  
                     _wHexTemp 0120          main@wIterationCounter 033A                     strcpy@dest 0041  
                     _wTempSet 00C7                  __size_of_main 03D8             main@wDebounceEnter 0342  
           writeTxtChk@iOpCode 0040                       int$flags 007E          __end_of_writeInsNoChk 0B2E  
            main@wHumidityPrev 033D                    i1_Add_Trace 0D24                  ??_writeInsChk 0039  
                 _ToggleBitRB5 0AE0                   ??_powerOnLcd 003A                  ??_writeTxtChk 003E  
                   _INTCONbits 000B                       memcpy@d1 0034                       memcpy@s1 0036  
                  _waitLCDBusy 0C9A                 ??_clearDisplay 003A                 __pstringtext10 1089  
               __pstringtext11 1090                 __pstringtext12 0000         setCursorPosition@iLine 003C  
                     intlevel1 0000         main@wDownBottonPressed 034B           _SetToReadDataFromLCD 0ACC  
                    strcat@src 0042                      strcpy@src 003A                     _OSCCONbits 0099  
         _setNotBlinkingCursor 0B0B             __end_of_powerOnLcd 0B00                    _printEM1812 06F2  
                __pstringtext1 1000                  __pstringtext2 1011                  __pstringtext3 1022  
                __pstringtext4 1033                  __pstringtext5 1044                  __pstringtext6 1054  
                __pstringtext7 1064                  __pstringtext8 1074                  __pstringtext9 1080  
          __end_of_writeInsChk 0AF5                    _SSPCON1bits 0215                    _SSPCON2bits 0216  
                  _SSPCON3bits 0217                  ?_lcdWriteText 0041            __end_of_writeTxtChk 1000  
        ?_SetToReadDataFromLCD 0070          ?_setNotBlinkingCursor 0070               _moveCursorToHome 0AD8  
       _mCursorDisplayShiftReg 005A  
