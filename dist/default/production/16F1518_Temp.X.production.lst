

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Jan 10 00:11:58 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F1518 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   120                           PORTB equ 0Dh ;# 
   121  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   122                           PORTC equ 0Eh ;# 
   123  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   124                           PORTE equ 010h ;# 
   125  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   126                           PIR1 equ 011h ;# 
   127  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   128                           PIR2 equ 012h ;# 
   129  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   130                           TMR0 equ 015h ;# 
   131  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   132                           TMR1 equ 016h ;# 
   133  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   134                           TMR1L equ 016h ;# 
   135  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   136                           TMR1H equ 017h ;# 
   137  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   138                           T1CON equ 018h ;# 
   139  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   140                           T1GCON equ 019h ;# 
   141  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   142                           TMR2 equ 01Ah ;# 
   143  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   144                           PR2 equ 01Bh ;# 
   145  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   146                           T2CON equ 01Ch ;# 
   147  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   148                           TRISA equ 08Ch ;# 
   149  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   150                           TRISB equ 08Dh ;# 
   151  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   152                           TRISC equ 08Eh ;# 
   153  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   154                           TRISE equ 090h ;# 
   155  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   156                           PIE1 equ 091h ;# 
   157  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   158                           PIE2 equ 092h ;# 
   159  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   160                           OPTION_REG equ 095h ;# 
   161  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   162                           PCON equ 096h ;# 
   163  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   164                           WDTCON equ 097h ;# 
   165  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   166                           OSCCON equ 099h ;# 
   167  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   168                           OSCSTAT equ 09Ah ;# 
   169  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   170                           ADRES equ 09Bh ;# 
   171  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   172                           ADRESL equ 09Bh ;# 
   173  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   174                           ADRESH equ 09Ch ;# 
   175  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   176                           ADCON0 equ 09Dh ;# 
   177  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   178                           ADCON1 equ 09Eh ;# 
   179  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   180                           LATA equ 010Ch ;# 
   181  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   182                           LATB equ 010Dh ;# 
   183  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   184                           LATC equ 010Eh ;# 
   185  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   186                           BORCON equ 0116h ;# 
   187  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   188                           FVRCON equ 0117h ;# 
   189  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   190                           APFCON equ 011Dh ;# 
   191  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   192                           ANSELA equ 018Ch ;# 
   193  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   194                           ANSELB equ 018Dh ;# 
   195  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   196                           ANSELC equ 018Eh ;# 
   197  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   198                           PMADR equ 0191h ;# 
   199  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   200                           PMADRL equ 0191h ;# 
   201  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   202                           PMADRH equ 0192h ;# 
   203  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   204                           PMDAT equ 0193h ;# 
   205  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   206                           PMDATL equ 0193h ;# 
   207  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   208                           PMDATH equ 0194h ;# 
   209  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   210                           PMCON1 equ 0195h ;# 
   211  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   212                           PMCON2 equ 0196h ;# 
   213  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   214                           VREGCON equ 0197h ;# 
   215  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   216                           RCREG equ 0199h ;# 
   217  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   218                           TXREG equ 019Ah ;# 
   219  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   220                           SP1BRG equ 019Bh ;# 
   221  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   222                           SP1BRGL equ 019Bh ;# 
   223  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   224                           SPBRG equ 019Bh ;# 
   225  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   226                           SPBRGL equ 019Bh ;# 
   227  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   228                           SP1BRGH equ 019Ch ;# 
   229  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   230                           SPBRGH equ 019Ch ;# 
   231  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   232                           RCSTA equ 019Dh ;# 
   233  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   234                           TXSTA equ 019Eh ;# 
   235  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   236                           BAUDCON equ 019Fh ;# 
   237  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   238                           WPUB equ 020Dh ;# 
   239  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   240                           WPUE equ 0210h ;# 
   241  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   242                           SSPBUF equ 0211h ;# 
   243  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   244                           SSP1BUF equ 0211h ;# 
   245  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   246                           SSPADD equ 0212h ;# 
   247  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   248                           SSP1ADD equ 0212h ;# 
   249  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   250                           SSPMSK equ 0213h ;# 
   251  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   252                           SSP1MSK equ 0213h ;# 
   253  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   254                           SSPSTAT equ 0214h ;# 
   255  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   256                           SSP1STAT equ 0214h ;# 
   257  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   258                           SSPCON1 equ 0215h ;# 
   259  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   260                           SSPCON equ 0215h ;# 
   261  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   262                           SSP1CON1 equ 0215h ;# 
   263  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   264                           SSPCON2 equ 0216h ;# 
   265  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   266                           SSP1CON2 equ 0216h ;# 
   267  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   268                           SSPCON3 equ 0217h ;# 
   269  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   270                           SSP1CON3 equ 0217h ;# 
   271  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   272                           CCPR1 equ 0291h ;# 
   273  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   274                           CCPR1L equ 0291h ;# 
   275  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   276                           CCPR1H equ 0292h ;# 
   277  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   278                           CCP1CON equ 0293h ;# 
   279  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   280                           CCPR2 equ 0298h ;# 
   281  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   282                           CCPR2L equ 0298h ;# 
   283  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   284                           CCPR2H equ 0299h ;# 
   285  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   286                           CCP2CON equ 029Ah ;# 
   287  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   288                           IOCBP equ 0394h ;# 
   289  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   290                           IOCBN equ 0395h ;# 
   291  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   292                           IOCBF equ 0396h ;# 
   293  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   294                           STATUS_SHAD equ 0FE4h ;# 
   295  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   296                           WREG_SHAD equ 0FE5h ;# 
   297  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   298                           BSR_SHAD equ 0FE6h ;# 
   299  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   300                           PCLATH_SHAD equ 0FE7h ;# 
   301  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   302                           FSR0L_SHAD equ 0FE8h ;# 
   303  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   304                           FSR0H_SHAD equ 0FE9h ;# 
   305  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   306                           FSR1L_SHAD equ 0FEAh ;# 
   307  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   308                           FSR1H_SHAD equ 0FEBh ;# 
   309  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   310                           STKPTR equ 0FEDh ;# 
   311  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   312                           TOSL equ 0FEEh ;# 
   313  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   314                           TOSH equ 0FEFh ;# 
   315  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   316                           INDF0 equ 00h ;# 
   317  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   318                           INDF1 equ 01h ;# 
   319  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   320                           PCL equ 02h ;# 
   321  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   322                           STATUS equ 03h ;# 
   323  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   324                           FSR0L equ 04h ;# 
   325  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   326                           FSR0H equ 05h ;# 
   327  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   328                           FSR1L equ 06h ;# 
   329  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   330                           FSR1H equ 07h ;# 
   331  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   332                           BSR equ 08h ;# 
   333  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   334                           WREG equ 09h ;# 
   335  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   336                           PCLATH equ 0Ah ;# 
   337  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   338                           INTCON equ 0Bh ;# 
   339  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   340                           PORTA equ 0Ch ;# 
   341  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   342                           PORTB equ 0Dh ;# 
   343  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   344                           PORTC equ 0Eh ;# 
   345  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   346                           PORTE equ 010h ;# 
   347  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   348                           PIR1 equ 011h ;# 
   349  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   350                           PIR2 equ 012h ;# 
   351  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   352                           TMR0 equ 015h ;# 
   353  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   354                           TMR1 equ 016h ;# 
   355  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   356                           TMR1L equ 016h ;# 
   357  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   358                           TMR1H equ 017h ;# 
   359  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   360                           T1CON equ 018h ;# 
   361  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   362                           T1GCON equ 019h ;# 
   363  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   364                           TMR2 equ 01Ah ;# 
   365  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   366                           PR2 equ 01Bh ;# 
   367  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   368                           T2CON equ 01Ch ;# 
   369  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   370                           TRISA equ 08Ch ;# 
   371  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   372                           TRISB equ 08Dh ;# 
   373  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   374                           TRISC equ 08Eh ;# 
   375  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   376                           TRISE equ 090h ;# 
   377  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   378                           PIE1 equ 091h ;# 
   379  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   380                           PIE2 equ 092h ;# 
   381  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   382                           OPTION_REG equ 095h ;# 
   383  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   384                           PCON equ 096h ;# 
   385  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   386                           WDTCON equ 097h ;# 
   387  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   388                           OSCCON equ 099h ;# 
   389  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   390                           OSCSTAT equ 09Ah ;# 
   391  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   392                           ADRES equ 09Bh ;# 
   393  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   394                           ADRESL equ 09Bh ;# 
   395  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   396                           ADRESH equ 09Ch ;# 
   397  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   398                           ADCON0 equ 09Dh ;# 
   399  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   400                           ADCON1 equ 09Eh ;# 
   401  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   402                           LATA equ 010Ch ;# 
   403  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   404                           LATB equ 010Dh ;# 
   405  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   406                           LATC equ 010Eh ;# 
   407  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   408                           BORCON equ 0116h ;# 
   409  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   410                           FVRCON equ 0117h ;# 
   411  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   412                           APFCON equ 011Dh ;# 
   413  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   414                           ANSELA equ 018Ch ;# 
   415  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   416                           ANSELB equ 018Dh ;# 
   417  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   418                           ANSELC equ 018Eh ;# 
   419  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   420                           PMADR equ 0191h ;# 
   421  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   422                           PMADRL equ 0191h ;# 
   423  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   424                           PMADRH equ 0192h ;# 
   425  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   426                           PMDAT equ 0193h ;# 
   427  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   428                           PMDATL equ 0193h ;# 
   429  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   430                           PMDATH equ 0194h ;# 
   431  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   432                           PMCON1 equ 0195h ;# 
   433  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   434                           PMCON2 equ 0196h ;# 
   435  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   436                           VREGCON equ 0197h ;# 
   437  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   438                           RCREG equ 0199h ;# 
   439  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   440                           TXREG equ 019Ah ;# 
   441  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   442                           SP1BRG equ 019Bh ;# 
   443  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   444                           SP1BRGL equ 019Bh ;# 
   445  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   446                           SPBRG equ 019Bh ;# 
   447  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   448                           SPBRGL equ 019Bh ;# 
   449  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   450                           SP1BRGH equ 019Ch ;# 
   451  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   452                           SPBRGH equ 019Ch ;# 
   453  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   454                           RCSTA equ 019Dh ;# 
   455  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   456                           TXSTA equ 019Eh ;# 
   457  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   458                           BAUDCON equ 019Fh ;# 
   459  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   460                           WPUB equ 020Dh ;# 
   461  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   462                           WPUE equ 0210h ;# 
   463  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   464                           SSPBUF equ 0211h ;# 
   465  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   466                           SSP1BUF equ 0211h ;# 
   467  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   468                           SSPADD equ 0212h ;# 
   469  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   470                           SSP1ADD equ 0212h ;# 
   471  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   472                           SSPMSK equ 0213h ;# 
   473  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   474                           SSP1MSK equ 0213h ;# 
   475  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   476                           SSPSTAT equ 0214h ;# 
   477  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   478                           SSP1STAT equ 0214h ;# 
   479  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   480                           SSPCON1 equ 0215h ;# 
   481  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   482                           SSPCON equ 0215h ;# 
   483  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   484                           SSP1CON1 equ 0215h ;# 
   485  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   486                           SSPCON2 equ 0216h ;# 
   487  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   488                           SSP1CON2 equ 0216h ;# 
   489  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   490                           SSPCON3 equ 0217h ;# 
   491  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   492                           SSP1CON3 equ 0217h ;# 
   493  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   494                           CCPR1 equ 0291h ;# 
   495  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   496                           CCPR1L equ 0291h ;# 
   497  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   498                           CCPR1H equ 0292h ;# 
   499  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   500                           CCP1CON equ 0293h ;# 
   501  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   502                           CCPR2 equ 0298h ;# 
   503  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   504                           CCPR2L equ 0298h ;# 
   505  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   506                           CCPR2H equ 0299h ;# 
   507  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   508                           CCP2CON equ 029Ah ;# 
   509  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   510                           IOCBP equ 0394h ;# 
   511  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   512                           IOCBN equ 0395h ;# 
   513  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   514                           IOCBF equ 0396h ;# 
   515  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   516                           STATUS_SHAD equ 0FE4h ;# 
   517  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   518                           WREG_SHAD equ 0FE5h ;# 
   519  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   520                           BSR_SHAD equ 0FE6h ;# 
   521  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   522                           PCLATH_SHAD equ 0FE7h ;# 
   523  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   524                           FSR0L_SHAD equ 0FE8h ;# 
   525  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   526                           FSR0H_SHAD equ 0FE9h ;# 
   527  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   528                           FSR1L_SHAD equ 0FEAh ;# 
   529  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   530                           FSR1H_SHAD equ 0FEBh ;# 
   531  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   532                           STKPTR equ 0FEDh ;# 
   533  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   534                           TOSL equ 0FEEh ;# 
   535  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   536                           TOSH equ 0FEFh ;# 
   537  0FEF                     	FNCALL	_main,_Add_Trace
   538                           	FNCALL	_main,_GetTemp
   539                           	FNCALL	_main,_PrintLog
   540                           	FNCALL	_main,_SetToGetTemp
   541                           	FNCALL	_main,_WakeTemp
   542                           	FNCALL	_main,_clearDisplay
   543                           	FNCALL	_main,_initLCD
   544                           	FNCALL	_main,_lcdWriteText
   545                           	FNCALL	_main,_memset
   546                           	FNCALL	_main,_moveCursorToHome
   547                           	FNCALL	_main,_powerOnLcd
   548                           	FNCALL	_main,_setCursorOff
   549                           	FNCALL	_main,_setNotBlinkingCursor
   550                           	FNCALL	_setNotBlinkingCursor,_writeInsChk
   551                           	FNCALL	_setCursorOff,_writeInsChk
   552                           	FNCALL	_powerOnLcd,_writeInsChk
   553                           	FNCALL	_moveCursorToHome,_writeInsChk
   554                           	FNCALL	_initLCD,_clearDisplay
   555                           	FNCALL	_initLCD,_setData
   556                           	FNCALL	_initLCD,_writeInsChk
   557                           	FNCALL	_clearDisplay,_writeInsChk
   558                           	FNCALL	_writeInsChk,_waitLCDBusy
   559                           	FNCALL	_writeInsChk,_writeInsNoChk
   560                           	FNCALL	_writeInsNoChk,_SetToSendDataToLCD
   561                           	FNCALL	_writeInsNoChk,_setData
   562                           	FNCALL	_PrintLog,_lcdWriteText
   563                           	FNCALL	_PrintLog,_memset
   564                           	FNCALL	_PrintLog,_strlen
   565                           	FNCALL	_lcdWriteText,_writeTxtChk
   566                           	FNCALL	_writeTxtChk,_SetToSendDataToLCD
   567                           	FNCALL	_writeTxtChk,_setCursorPosition
   568                           	FNCALL	_writeTxtChk,_setData
   569                           	FNCALL	_writeTxtChk,_waitLCDBusy
   570                           	FNCALL	_setCursorPosition,_SetToSendDataToLCD
   571                           	FNCALL	_setCursorPosition,_setData
   572                           	FNCALL	_setCursorPosition,_waitLCDBusy
   573                           	FNCALL	_waitLCDBusy,_SetToReadDataFromLCD
   574                           	FNCALL	_GetTemp,_memset
   575                           	FNCALL	_Add_Trace,_strcat
   576                           	FNCALL	_Add_Trace,_strlen
   577                           	FNCALL	_strcat,_strcpy
   578                           	FNCALL	_strcat,_strlen
   579                           	FNROOT	_main
   580                           	FNCALL	_myint,_ToggleBitRB5
   581                           	FNCALL	_myint,_sprintf
   582                           	FNCALL	_myint,i1_Add_Trace
   583                           	FNCALL	i1_Add_Trace,i1_strcat
   584                           	FNCALL	i1_Add_Trace,i1_strlen
   585                           	FNCALL	i1_strcat,i1_strcpy
   586                           	FNCALL	i1_strcat,i1_strlen
   587                           	FNCALL	_sprintf,_vfprintf
   588                           	FNCALL	_vfprintf,_vfpfcnvrt
   589                           	FNCALL	_vfpfcnvrt,_dtoa
   590                           	FNCALL	_vfpfcnvrt,_fputc
   591                           	FNCALL	_dtoa,___aldiv
   592                           	FNCALL	_dtoa,___almod
   593                           	FNCALL	_dtoa,_abs
   594                           	FNCALL	_dtoa,_pad
   595                           	FNCALL	_pad,_fputc
   596                           	FNCALL	_pad,_fputs
   597                           	FNCALL	_pad,i1_strlen
   598                           	FNCALL	_fputs,_fputc
   599                           	FNCALL	_fputc,_putch
   600                           	FNCALL	intlevel1,_myint
   601                           	global	intlevel1
   602                           	FNROOT	intlevel1
   603                           	global	main@F2190
   604                           psect	idataBANK1,class=CODE,space=0,delta=2,noexec
   605                           global __pidataBANK1
   606                           __pidataBANK1:
   607  07FC                     	file	"161518_temp_main.c"
   608                           	line	201
   609                           
   610                           ;initializer for main@F2190
   611                           	retlw	02Bh
   612  07FC  342B               	retlw	low(0)
   613  07FD  3400               	retlw	078h
   614  07FE  3478               	retlw	low(0)
   615  07FF  3400               	global	_nout
   616                           	global	_width
   617                           	global	_prec
   618                           	global	_flags
   619                           	global	_wI2CTxSendPos
   620                           	global	_wI2CRxBufferSize
   621                           	global	_wReceptionBufferPosition
   622                           	global	_test
   623                           	global	_wI2CTxBufferSize
   624                           	global	_mWritingPosition
   625                           	global	_mCursorDisplayShiftReg
   626                           	global	_mDisplayOnOffReg
   627                           	global	_wI2CTxBuffer
   628                           	global	_dbuf
   629                           	global	_wHexTemp
   630                           	global	_wInterruptText
   631                           	global	_wReceptionBuffer
   632                           	global	_PORTAbits
   633                           _PORTAbits	set	0xC
   634  000C                     	global	_PIR2bits
   635                           _PIR2bits	set	0x12
   636  0012                     	global	_PIR1bits
   637                           _PIR1bits	set	0x11
   638  0011                     	global	_PORTB
   639                           _PORTB	set	0xD
   640  000D                     	global	_PORTA
   641                           _PORTA	set	0xC
   642  000C                     	global	_INTCONbits
   643                           _INTCONbits	set	0xB
   644  000B                     	global	_PORTBbits
   645                           _PORTBbits	set	0xD
   646  000D                     	global	_TRISAbits
   647                           _TRISAbits	set	0x8C
   648  008C                     	global	_PIE2bits
   649                           _PIE2bits	set	0x92
   650  0092                     	global	_TRISC
   651                           _TRISC	set	0x8E
   652  008E                     	global	_TRISA
   653                           _TRISA	set	0x8C
   654  008C                     	global	_TRISB
   655                           _TRISB	set	0x8D
   656  008D                     	global	_OSCCONbits
   657                           _OSCCONbits	set	0x99
   658  0099                     	global	_PIE1bits
   659                           _PIE1bits	set	0x91
   660  0091                     	global	_ANSELCbits
   661                           _ANSELCbits	set	0x18E
   662  018E                     	global	_ANSELA
   663                           _ANSELA	set	0x18C
   664  018C                     	global	_ANSELB
   665                           _ANSELB	set	0x18D
   666  018D                     	global	_SSPBUF
   667                           _SSPBUF	set	0x211
   668  0211                     	global	_SSPSTATbits
   669                           _SSPSTATbits	set	0x214
   670  0214                     	global	_SSPADD
   671                           _SSPADD	set	0x212
   672  0212                     	global	_SSPCON1bits
   673                           _SSPCON1bits	set	0x215
   674  0215                     	global	_SSPCON2bits
   675                           _SSPCON2bits	set	0x216
   676  0216                     	global	_SSPCON3bits
   677                           _SSPCON3bits	set	0x217
   678  0217                     psect	stringtext1,class=STRCODE,delta=2,noexec
   679                           global __pstringtext1
   680                           __pstringtext1:
   681  1000                     	
   682                           STR_12:	
   683  1000                     	retlw	44	;','
   684  1000  342C               	retlw	66	;'B'
   685  1001  3442               	retlw	67	;'C'
   686  1002  3443               	retlw	76	;'L'
   687  1003  344C               	retlw	73	;'I'
   688  1004  3449               	retlw	70	;'F'
   689  1005  3446               	retlw	0
   690  1006  3400               psect	stringtext2,class=STRCODE,delta=2,noexec
   691                           global __pstringtext2
   692                           __pstringtext2:
   693  1007                     	
   694                           STR_5:	
   695  1007                     	retlw	32	;' '
   696  1007  3420               	retlw	37	;'%'
   697  1008  3425               	retlw	105	;'i'
   698  1009  3469               	retlw	32	;' '
   699  100A  3420               	retlw	0
   700  100B  3400               psect	stringtext3,class=STRCODE,delta=2,noexec
   701                           global __pstringtext3
   702                           __pstringtext3:
   703  100C                     	
   704                           STR_2:	
   705  100C                     	retlw	44	;','
   706  100C  342C               	retlw	83	;'S'
   707  100D  3453               	retlw	84	;'T'
   708  100E  3454               	retlw	58	;':'
   709  100F  343A               	retlw	0
   710  1010  3400               psect	stringtext4,class=STRCODE,delta=2,noexec
   711                           global __pstringtext4
   712                           __pstringtext4:
   713  1011                     	
   714                           STR_7:	
   715  1011                     	retlw	44	;','
   716  1011  342C               	retlw	73	;'I'
   717  1012  3449               	retlw	83	;'S'
   718  1013  3453               	retlw	69	;'E'
   719  1014  3445               	retlw	0
   720  1015  3400               psect	stringtext5,class=STRCODE,delta=2,noexec
   721                           global __pstringtext5
   722                           __pstringtext5:
   723  1016                     	
   724                           STR_11:	
   725  1016                     	retlw	44	;','
   726  1016  342C               	retlw	78	;'N'
   727  1017  344E               	retlw	56	;'8'
   728  1018  3438               	retlw	0
   729  1019  3400               psect	stringtext6,class=STRCODE,delta=2,noexec
   730                           global __pstringtext6
   731                           __pstringtext6:
   732  101A                     	
   733                           STR_3:	
   734  101A                     	retlw	71	;'G'
   735  101A  3447               	retlw	84	;'T'
   736  101B  3454               	retlw	58	;':'
   737  101C  343A               	retlw	0
   738  101D  3400               psect	stringtext7,class=STRCODE,delta=2,noexec
   739                           global __pstringtext7
   740                           __pstringtext7:
   741  101E                     	
   742                           STR_1:	
   743  101E                     	retlw	87	;'W'
   744  101E  3457               	retlw	84	;'T'
   745  101F  3454               	retlw	58	;':'
   746  1020  343A               	retlw	0
   747  1021  3400               psect	stringtext8,class=STRCODE,delta=2,noexec
   748                           global __pstringtext8
   749                           __pstringtext8:
   750  1022                     	
   751                           STR_10:	
   752  1022                     	retlw	44	;','
   753  1022  342C               	retlw	78	;'N'
   754  1023  344E               	retlw	65	;'A'
   755  1024  3441               	retlw	0
   756  1025  3400               psect	stringtext9,class=STRCODE,delta=2,noexec
   757                           global __pstringtext9
   758                           __pstringtext9:
   759  1026                     	
   760                           STR_4:	
   761  1026                     	retlw	44	;','
   762  1026  342C               	retlw	80	;'P'
   763  1027  3450               	retlw	0
   764  1028  3400               psect	stringtext10,class=STRCODE,delta=2,noexec
   765                           global __pstringtext10
   766                           __pstringtext10:
   767  1029                     	
   768                           STR_6:	
   769  1029                     	retlw	44	;','
   770  1029  342C               	retlw	83	;'S'
   771  102A  3453               	retlw	0
   772  102B  3400               psect	stringtext11,class=STRCODE,delta=2,noexec
   773                           global __pstringtext11
   774                           __pstringtext11:
   775  102C                     	
   776                           STR_9:	
   777  102C                     	retlw	82	;'R'
   778  102C  3452               	retlw	0
   779  102D  3400               psect	stringtext12,class=STRCODE,delta=2,noexec
   780                           global __pstringtext12
   781                           __pstringtext12:
   782  0000                     STR_8	equ	STR_10+2
   783  1024                     ; #config settings
   784                           global __CFG_FOSC$INTOSC
   785                           __CFG_FOSC$INTOSC equ 0x0
   786  0000                     global __CFG_WDTE$OFF
   787                           __CFG_WDTE$OFF equ 0x0
   788  0000                     global __CFG_PWRTE$ON
   789                           __CFG_PWRTE$ON equ 0x0
   790  0000                     global __CFG_MCLRE$OFF
   791                           __CFG_MCLRE$OFF equ 0x0
   792  0000                     global __CFG_CP$OFF
   793                           __CFG_CP$OFF equ 0x0
   794  0000                     global __CFG_BOREN$ON
   795                           __CFG_BOREN$ON equ 0x0
   796  0000                     global __CFG_CLKOUTEN$ON
   797                           __CFG_CLKOUTEN$ON equ 0x0
   798  0000                     global __CFG_IESO$OFF
   799                           __CFG_IESO$OFF equ 0x0
   800  0000                     global __CFG_FCMEN$OFF
   801                           __CFG_FCMEN$OFF equ 0x0
   802  0000                     global __CFG_WRT$OFF
   803                           __CFG_WRT$OFF equ 0x0
   804  0000                     global __CFG_VCAPEN$OFF
   805                           __CFG_VCAPEN$OFF equ 0x0
   806  0000                     global __CFG_STVREN$OFF
   807                           __CFG_STVREN$OFF equ 0x0
   808  0000                     global __CFG_BORV$LO
   809                           __CFG_BORV$LO equ 0x0
   810  0000                     global __CFG_LPBOR$OFF
   811                           __CFG_LPBOR$OFF equ 0x0
   812  0000                     global __CFG_LVP$OFF
   813                           __CFG_LVP$OFF equ 0x0
   814  0000                     	file	"C:\Users\dell\AppData\Local\Temp\sd0."
   815                           	line	#
   816                           psect cinit,class=CODE,delta=2
   817                           global start_initialization
   818                           start_initialization:
   819  015A                     
   820                           global __initialization
   821                           __initialization:
   822  015A                     psect	bssBANK0,class=BANK0,space=1,noexec
   823                           global __pbssBANK0
   824                           __pbssBANK0:
   825  0064                     _nout:
   826  0064                            ds      2
   827  0064                     
   828                           _width:
   829  0066                            ds      2
   830  0066                     
   831                           _prec:
   832  0068                            ds      2
   833  0068                     
   834                           _flags:
   835  006A                            ds      2
   836  006A                     
   837                           _wCounter2:
   838  006C                            ds      1
   839  006C                     
   840                           _wI2CTxSendPos:
   841  006D                            ds      1
   842  006D                     
   843                           _wI2CRxBufferSize:
   844  006E                            ds      1
   845  006E                     
   846                           _wReceptionBufferPosition:
   847  006F                            ds      1
   848  006F                     
   849                           psect	bssBANK1,class=BANK1,space=1,noexec
   850                           global __pbssBANK1
   851                           __pbssBANK1:
   852  00C7                     _test:
   853  00C7                            ds      2
   854  00C7                     
   855                           _wI2CTxBufferSize:
   856  00C9                            ds      1
   857  00C9                     
   858                           _mWritingPosition:
   859  00CA                            ds      1
   860  00CA                     
   861                           _mCursorDisplayShiftReg:
   862  00CB                            ds      1
   863  00CB                     
   864                           _mDisplayOnOffReg:
   865  00CC                            ds      1
   866  00CC                     
   867                           _wI2CTxBuffer:
   868  00CD                            ds      20
   869  00CD                     
   870                           psect	dataBANK1,class=BANK1,space=1,noexec
   871                           global __pdataBANK1
   872                           __pdataBANK1:
   873  00E1                     	file	"161518_temp_main.c"
   874                           	line	201
   875                           main@F2190:
   876  00E1                            ds      4
   877  00E1                     
   878                           psect	bssBANK2,class=BANK2,space=1,noexec
   879                           global __pbssBANK2
   880                           __pbssBANK2:
   881  0120                     _dbuf:
   882  0120                            ds      32
   883  0120                     
   884                           _wHexTemp:
   885  0140                            ds      20
   886  0140                     
   887                           psect	bssBANK3,class=BANK3,space=1,noexec
   888                           global __pbssBANK3
   889                           __pbssBANK3:
   890  01A0                     _wInterruptText:
   891  01A0                            ds      75
   892  01A0                     
   893                           psect	bssBANK4,class=BANK4,space=1,noexec
   894                           global __pbssBANK4
   895                           __pbssBANK4:
   896  0220                     _wReceptionBuffer:
   897  0220                            ds      30
   898  0220                     
   899                           	file	"C:\Users\dell\AppData\Local\Temp\sd0."
   900                           	line	#
   901                           ; Initialize objects allocated to BANK1
   902                           	global __pidataBANK1,__pdataBANK1
   903                           psect cinit,class=CODE,delta=2,merge=1
   904                           	movlb 1	; select bank1
   905  015A  0021               	fcall	__pidataBANK1+0		;fetch initializer
   906  015B  3187  27FC  3181   	movwf	__pdataBANK1+0&07fh		
   907  015E  00E1               	fcall	__pidataBANK1+1		;fetch initializer
   908  015F  3187  27FD  3181   	movwf	__pdataBANK1+1&07fh		
   909  0162  00E2               	fcall	__pidataBANK1+2		;fetch initializer
   910  0163  3187  27FE  3181   	movwf	__pdataBANK1+2&07fh		
   911  0166  00E3               	fcall	__pidataBANK1+3		;fetch initializer
   912  0167  3187  27FF  3181   	movwf	__pdataBANK1+3&07fh		
   913  016A  00E4               	line	#
   914                           psect clrtext,class=CODE,delta=2
   915                           global clear_ram0
   916                           ;	Called with FSR0 containing the base address, and
   917                           ;	WREG with the size to clear
   918                           clear_ram0:
   919  0C17                     	clrwdt			;clear the watchdog before getting into this loop
   920  0C17  0064               clrloop0:
   921  0C18                     	clrf	indf0		;clear RAM location pointed to by FSR
   922  0C18  0180               	addfsr	0,1
   923  0C19  3101               	decfsz wreg		;Have we reached the end of clearing yet?
   924  0C1A  0B89               	goto clrloop0	;have we reached the end yet?
   925  0C1B  2C18               	retlw	0		;all done for this memory range, return
   926  0C1C  3400               ; Clear objects allocated to BANK0
   927                           psect cinit,class=CODE,delta=2,merge=1
   928                           	global __pbssBANK0
   929                           	movlw	low(__pbssBANK0)
   930  016B  3064               	movwf	fsr0l
   931  016C  0084               	movlw	high(__pbssBANK0)
   932  016D  3000               	movwf	fsr0h
   933  016E  0085               	movlw	0Ch
   934  016F  300C               	fcall	clear_ram0
   935  0170  318C  2417  3181   ; Clear objects allocated to BANK1
   936                           psect cinit,class=CODE,delta=2,merge=1
   937                           	global __pbssBANK1
   938                           	movlw	low(__pbssBANK1)
   939  0173  30C7               	movwf	fsr0l
   940  0174  0084               	movlw	high(__pbssBANK1)
   941  0175  3000               	movwf	fsr0h
   942  0176  0085               	movlw	01Ah
   943  0177  301A               	fcall	clear_ram0
   944  0178  318C  2417  3181   ; Clear objects allocated to BANK2
   945                           psect cinit,class=CODE,delta=2,merge=1
   946                           	global __pbssBANK2
   947                           	movlw	low(__pbssBANK2)
   948  017B  3020               	movwf	fsr0l
   949  017C  0084               	movlw	high(__pbssBANK2)
   950  017D  3001               	movwf	fsr0h
   951  017E  0085               	movlw	034h
   952  017F  3034               	fcall	clear_ram0
   953  0180  318C  2417  3181   ; Clear objects allocated to BANK3
   954                           psect cinit,class=CODE,delta=2,merge=1
   955                           	global __pbssBANK3
   956                           	movlw	low(__pbssBANK3)
   957  0183  30A0               	movwf	fsr0l
   958  0184  0084               	movlw	high(__pbssBANK3)
   959  0185  3001               	movwf	fsr0h
   960  0186  0085               	movlw	04Bh
   961  0187  304B               	fcall	clear_ram0
   962  0188  318C  2417  3181   ; Clear objects allocated to BANK4
   963                           psect cinit,class=CODE,delta=2,merge=1
   964                           	global __pbssBANK4
   965                           	movlw	low(__pbssBANK4)
   966  018B  3020               	movwf	fsr0l
   967  018C  0084               	movlw	high(__pbssBANK4)
   968  018D  3002               	movwf	fsr0h
   969  018E  0085               	movlw	01Eh
   970  018F  301E               	fcall	clear_ram0
   971  0190  318C  2417  3181   psect cinit,class=CODE,delta=2,merge=1
   972                           global end_of_initialization,__end_of__initialization
   973                           
   974                           ;End of C runtime variable initialization code
   975                           
   976                           end_of_initialization:
   977  0193                     __end_of__initialization:
   978  0193                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
   979  0193  107E               movlb 0
   980  0194  0020               ljmp _main	;jump to C main() function
   981  0195  3181  2997         psect	cstackBANK1,class=BANK1,space=1,noexec
   982                           global __pcstackBANK1
   983                           __pcstackBANK1:
   984  00A0                     ??_setData:	; 1 bytes @ 0x0
   985  00A0                     ??_SetToSendDataToLCD:	; 1 bytes @ 0x0
   986  00A0                     ??_waitLCDBusy:	; 1 bytes @ 0x0
   987  00A0                     ??_SetToGetTemp:	; 1 bytes @ 0x0
   988  00A0                     ??_WakeTemp:	; 1 bytes @ 0x0
   989  00A0                     ??_SetToReadDataFromLCD:	; 1 bytes @ 0x0
   990  00A0                     	global	?_strlen
   991                           ?_strlen:	; 2 bytes @ 0x0
   992  00A0                     ?_memset:	; 2 bytes @ 0x0
   993  00A0                     	global	memset@dest
   994                           memset@dest:	; 2 bytes @ 0x0
   995  00A0                     	global	strlen@s
   996                           strlen@s:	; 2 bytes @ 0x0
   997  00A0                     	ds	2
   998  00A0                     ??_strlen:	; 1 bytes @ 0x2
   999  00A2                     	global	setData@iValue
  1000                           setData@iValue:	; 1 bytes @ 0x2
  1001  00A2                     	global	memset@c
  1002                           memset@c:	; 2 bytes @ 0x2
  1003  00A2                     	ds	1
  1004  00A2                     ??_writeInsNoChk:	; 1 bytes @ 0x3
  1005  00A3                     	global	waitLCDBusy@busyFlag
  1006                           waitLCDBusy@busyFlag:	; 2 bytes @ 0x3
  1007  00A3                     	ds	1
  1008  00A3                     	global	writeInsNoChk@iOpCode
  1009                           writeInsNoChk@iOpCode:	; 1 bytes @ 0x4
  1010  00A4                     	global	memset@n
  1011                           memset@n:	; 2 bytes @ 0x4
  1012  00A4                     	global	strlen@a
  1013                           strlen@a:	; 2 bytes @ 0x4
  1014  00A4                     	ds	1
  1015  00A4                     ??_writeInsChk:	; 1 bytes @ 0x5
  1016  00A5                     ?_setCursorPosition:	; 1 bytes @ 0x5
  1017  00A5                     	global	writeInsChk@iOpCode
  1018                           writeInsChk@iOpCode:	; 1 bytes @ 0x5
  1019  00A5                     	global	setCursorPosition@iPosition
  1020                           setCursorPosition@iPosition:	; 1 bytes @ 0x5
  1021  00A5                     	ds	1
  1022  00A5                     ??_memset:	; 1 bytes @ 0x6
  1023  00A6                     ??_initLCD:	; 1 bytes @ 0x6
  1024  00A6                     ??_clearDisplay:	; 1 bytes @ 0x6
  1025  00A6                     ??_powerOnLcd:	; 1 bytes @ 0x6
  1026  00A6                     ??_setCursorOff:	; 1 bytes @ 0x6
  1027  00A6                     ??_moveCursorToHome:	; 1 bytes @ 0x6
  1028  00A6                     ??_setNotBlinkingCursor:	; 1 bytes @ 0x6
  1029  00A6                     ??_setCursorPosition:	; 1 bytes @ 0x6
  1030  00A6                     ?_strcpy:	; 1 bytes @ 0x6
  1031  00A6                     	global	strcpy@src
  1032                           strcpy@src:	; 2 bytes @ 0x6
  1033  00A6                     	ds	2
  1034  00A6                     ??_strcpy:	; 1 bytes @ 0x8
  1035  00A8                     	global	setCursorPosition@iLine
  1036                           setCursorPosition@iLine:	; 1 bytes @ 0x8
  1037  00A8                     	ds	1
  1038  00A8                     	global	setCursorPosition@wLCDIndex
  1039                           setCursorPosition@wLCDIndex:	; 1 bytes @ 0x9
  1040  00A9                     	ds	1
  1041  00A9                     ??_writeTxtChk:	; 1 bytes @ 0xA
  1042  00AA                     	global	memset@k
  1043                           memset@k:	; 2 bytes @ 0xA
  1044  00AA                     	global	strcpy@s
  1045                           strcpy@s:	; 2 bytes @ 0xA
  1046  00AA                     	ds	2
  1047  00AA                     	global	writeTxtChk@iOpCode
  1048                           writeTxtChk@iOpCode:	; 1 bytes @ 0xC
  1049  00AC                     	global	strcpy@d
  1050                           strcpy@d:	; 1 bytes @ 0xC
  1051  00AC                     	global	memset@s
  1052                           memset@s:	; 2 bytes @ 0xC
  1053  00AC                     	ds	1
  1054  00AC                     ?_lcdWriteText:	; 1 bytes @ 0xD
  1055  00AD                     	global	strcpy@dest
  1056                           strcpy@dest:	; 1 bytes @ 0xD
  1057  00AD                     	global	lcdWriteText@iText
  1058                           lcdWriteText@iText:	; 2 bytes @ 0xD
  1059  00AD                     	ds	1
  1060  00AD                     ?_strcat:	; 1 bytes @ 0xE
  1061  00AE                     ??_GetTemp:	; 1 bytes @ 0xE
  1062  00AE                     	global	strcat@src
  1063                           strcat@src:	; 2 bytes @ 0xE
  1064  00AE                     	ds	1
  1065  00AE                     ??_lcdWriteText:	; 1 bytes @ 0xF
  1066  00AF                     	ds	1
  1067  00AF                     ??_strcat:	; 1 bytes @ 0x10
  1068  00B0                     	ds	1
  1069  00B0                     	global	lcdWriteText@wCharReadingPos
  1070                           lcdWriteText@wCharReadingPos:	; 1 bytes @ 0x11
  1071  00B1                     	ds	1
  1072  00B1                     ??_PrintLog:	; 1 bytes @ 0x12
  1073  00B2                     	global	strcat@dest
  1074                           strcat@dest:	; 1 bytes @ 0x12
  1075  00B2                     	ds	1
  1076  00B2                     ?_Add_Trace:	; 1 bytes @ 0x13
  1077  00B3                     	global	Add_Trace@iSizeOfoText
  1078                           Add_Trace@iSizeOfoText:	; 1 bytes @ 0x13
  1079  00B3                     	global	PrintLog@wInterruptTextLen
  1080                           PrintLog@wInterruptTextLen:	; 1 bytes @ 0x13
  1081  00B3                     	ds	1
  1082  00B3                     	global	PrintLog@iText
  1083                           PrintLog@iText:	; 1 bytes @ 0x14
  1084  00B4                     	global	Add_Trace@iText
  1085                           Add_Trace@iText:	; 2 bytes @ 0x14
  1086  00B4                     	ds	2
  1087  00B4                     ??_Add_Trace:	; 1 bytes @ 0x16
  1088  00B6                     	ds	6
  1089  00B6                     	global	Add_Trace@oText
  1090                           Add_Trace@oText:	; 1 bytes @ 0x1C
  1091  00BC                     	ds	1
  1092  00BC                     ??_main:	; 1 bytes @ 0x1D
  1093  00BD                     	ds	2
  1094  00BD                     	global	main@wTemp
  1095                           main@wTemp:	; 2 bytes @ 0x1F
  1096  00BF                     	ds	2
  1097  00BF                     	global	main@wConv
  1098                           main@wConv:	; 4 bytes @ 0x21
  1099  00C1                     	ds	4
  1100  00C1                     	global	main@wCounter
  1101                           main@wCounter:	; 2 bytes @ 0x25
  1102  00C5                     	ds	2
  1103  00C5                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  1104                           global __pcstackCOMMON
  1105                           __pcstackCOMMON:
  1106  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1107  0070                     ?_clearDisplay:	; 1 bytes @ 0x0
  1108  0070                     ?_powerOnLcd:	; 1 bytes @ 0x0
  1109  0070                     ?_setCursorOff:	; 1 bytes @ 0x0
  1110  0070                     ?_moveCursorToHome:	; 1 bytes @ 0x0
  1111  0070                     ?_setNotBlinkingCursor:	; 1 bytes @ 0x0
  1112  0070                     ?_setData:	; 1 bytes @ 0x0
  1113  0070                     ?_writeInsChk:	; 1 bytes @ 0x0
  1114  0070                     ?_writeTxtChk:	; 1 bytes @ 0x0
  1115  0070                     ?_SetToSendDataToLCD:	; 1 bytes @ 0x0
  1116  0070                     ?_waitLCDBusy:	; 1 bytes @ 0x0
  1117  0070                     ?_writeInsNoChk:	; 1 bytes @ 0x0
  1118  0070                     ?_putch:	; 1 bytes @ 0x0
  1119  0070                     ??_putch:	; 1 bytes @ 0x0
  1120  0070                     ?_ToggleBitRB5:	; 1 bytes @ 0x0
  1121  0070                     ??_ToggleBitRB5:	; 1 bytes @ 0x0
  1122  0070                     ?_SetToGetTemp:	; 1 bytes @ 0x0
  1123  0070                     ?_GetTemp:	; 1 bytes @ 0x0
  1124  0070                     ?_WakeTemp:	; 1 bytes @ 0x0
  1125  0070                     ?_PrintLog:	; 1 bytes @ 0x0
  1126  0070                     ?_main:	; 1 bytes @ 0x0
  1127  0070                     ?_myint:	; 1 bytes @ 0x0
  1128  0070                     ?_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  1129  0070                     ?_fputc:	; 2 bytes @ 0x0
  1130  0070                     	global	?i1_strlen
  1131                           ?i1_strlen:	; 2 bytes @ 0x0
  1132  0070                     	global	?___aldiv
  1133                           ?___aldiv:	; 4 bytes @ 0x0
  1134  0070                     	global	?___almod
  1135                           ?___almod:	; 4 bytes @ 0x0
  1136  0070                     putch@c:	; 1 bytes @ 0x0
  1137  0070                     	global	fputc@c
  1138                           fputc@c:	; 2 bytes @ 0x0
  1139  0070                     	global	i1strlen@s
  1140                           i1strlen@s:	; 2 bytes @ 0x0
  1141  0070                     	global	___aldiv@divisor
  1142                           ___aldiv@divisor:	; 4 bytes @ 0x0
  1143  0070                     	global	___almod@divisor
  1144                           ___almod@divisor:	; 4 bytes @ 0x0
  1145  0070                     	ds	2
  1146  0070                     ??i1_strlen:	; 1 bytes @ 0x2
  1147  0072                     	global	fputc@fp
  1148                           fputc@fp:	; 1 bytes @ 0x2
  1149  0072                     	ds	1
  1150  0072                     ??_fputc:	; 1 bytes @ 0x3
  1151  0073                     	ds	1
  1152  0073                     	global	i1strlen@a
  1153                           i1strlen@a:	; 2 bytes @ 0x4
  1154  0074                     	global	___aldiv@dividend
  1155                           ___aldiv@dividend:	; 4 bytes @ 0x4
  1156  0074                     	global	___almod@dividend
  1157                           ___almod@dividend:	; 4 bytes @ 0x4
  1158  0074                     	ds	2
  1159  0074                     ?i1_strcpy:	; 1 bytes @ 0x6
  1160  0076                     	global	i1strcpy@src
  1161                           i1strcpy@src:	; 2 bytes @ 0x6
  1162  0076                     	ds	2
  1163  0076                     ??___aldiv:	; 1 bytes @ 0x8
  1164  0078                     ??___almod:	; 1 bytes @ 0x8
  1165  0078                     ??i1_strcpy:	; 1 bytes @ 0x8
  1166  0078                     ?_fputs:	; 2 bytes @ 0x8
  1167  0078                     	global	fputs@fp
  1168                           fputs@fp:	; 1 bytes @ 0x8
  1169  0078                     	ds	1
  1170  0078                     ??_fputs:	; 1 bytes @ 0x9
  1171  0079                     	global	___almod@counter
  1172                           ___almod@counter:	; 1 bytes @ 0x9
  1173  0079                     	ds	1
  1174  0079                     	global	___almod@sign
  1175                           ___almod@sign:	; 1 bytes @ 0xA
  1176  007A                     	global	i1strcpy@s
  1177                           i1strcpy@s:	; 2 bytes @ 0xA
  1178  007A                     	ds	1
  1179  007A                     	global	?_abs
  1180                           ?_abs:	; 2 bytes @ 0xB
  1181  007B                     	global	abs@a
  1182                           abs@a:	; 2 bytes @ 0xB
  1183  007B                     	ds	1
  1184  007B                     ??_pad:	; 1 bytes @ 0xC
  1185  007C                     	global	i1strcpy@dest
  1186                           i1strcpy@dest:	; 1 bytes @ 0xC
  1187  007C                     	ds	1
  1188  007C                     ??_sprintf:	; 1 bytes @ 0xD
  1189  007D                     	global	i1strcpy@d
  1190                           i1strcpy@d:	; 1 bytes @ 0xD
  1191  007D                     	ds	1
  1192  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1193                           global __pcstackBANK0
  1194                           __pcstackBANK0:
  1195  0020                     ??_abs:	; 1 bytes @ 0x0
  1196  0020                     ?i1_strcat:	; 1 bytes @ 0x0
  1197  0020                     	global	___aldiv@counter
  1198                           ___aldiv@counter:	; 1 bytes @ 0x0
  1199  0020                     	global	fputs@c
  1200                           fputs@c:	; 1 bytes @ 0x0
  1201  0020                     	global	i1strcat@src
  1202                           i1strcat@src:	; 2 bytes @ 0x0
  1203  0020                     	ds	1
  1204  0020                     	global	___aldiv@sign
  1205                           ___aldiv@sign:	; 1 bytes @ 0x1
  1206  0021                     	global	fputs@i
  1207                           fputs@i:	; 2 bytes @ 0x1
  1208  0021                     	ds	1
  1209  0021                     ??i1_strcat:	; 1 bytes @ 0x2
  1210  0022                     	global	___aldiv@quotient
  1211                           ___aldiv@quotient:	; 4 bytes @ 0x2
  1212  0022                     	ds	1
  1213  0022                     	global	fputs@s
  1214                           fputs@s:	; 1 bytes @ 0x3
  1215  0023                     	ds	1
  1216  0023                     	global	?_pad
  1217                           ?_pad:	; 2 bytes @ 0x4
  1218  0024                     	global	pad@buf
  1219                           pad@buf:	; 1 bytes @ 0x4
  1220  0024                     	global	i1strcat@dest
  1221                           i1strcat@dest:	; 1 bytes @ 0x4
  1222  0024                     	ds	1
  1223  0024                     ?i1_Add_Trace:	; 1 bytes @ 0x5
  1224  0025                     	global	i1Add_Trace@iSizeOfoText
  1225                           i1Add_Trace@iSizeOfoText:	; 1 bytes @ 0x5
  1226  0025                     	global	pad@p
  1227                           pad@p:	; 2 bytes @ 0x5
  1228  0025                     	ds	1
  1229  0025                     	global	i1Add_Trace@iText
  1230                           i1Add_Trace@iText:	; 2 bytes @ 0x6
  1231  0026                     	ds	1
  1232  0026                     	global	pad@i
  1233                           pad@i:	; 2 bytes @ 0x7
  1234  0027                     	ds	1
  1235  0027                     ??i1_Add_Trace:	; 1 bytes @ 0x8
  1236  0028                     	ds	1
  1237  0028                     	global	pad@w
  1238                           pad@w:	; 2 bytes @ 0x9
  1239  0029                     	ds	2
  1240  0029                     	global	pad@fp
  1241                           pad@fp:	; 1 bytes @ 0xB
  1242  002B                     	ds	1
  1243  002B                     	global	?_dtoa
  1244                           ?_dtoa:	; 2 bytes @ 0xC
  1245  002C                     	global	dtoa@d
  1246                           dtoa@d:	; 4 bytes @ 0xC
  1247  002C                     	ds	2
  1248  002C                     	global	i1Add_Trace@oText
  1249                           i1Add_Trace@oText:	; 1 bytes @ 0xE
  1250  002E                     	ds	2
  1251  002E                     ??_dtoa:	; 1 bytes @ 0x10
  1252  0030                     	ds	2
  1253  0030                     	global	_dtoa$672
  1254                           _dtoa$672:	; 2 bytes @ 0x12
  1255  0032                     	ds	2
  1256  0032                     	global	dtoa@fp
  1257                           dtoa@fp:	; 1 bytes @ 0x14
  1258  0034                     	ds	1
  1259  0034                     	global	dtoa@p
  1260                           dtoa@p:	; 2 bytes @ 0x15
  1261  0035                     	ds	2
  1262  0035                     	global	dtoa@w
  1263                           dtoa@w:	; 2 bytes @ 0x17
  1264  0037                     	ds	2
  1265  0037                     	global	dtoa@s
  1266                           dtoa@s:	; 2 bytes @ 0x19
  1267  0039                     	ds	2
  1268  0039                     	global	dtoa@n
  1269                           dtoa@n:	; 4 bytes @ 0x1B
  1270  003B                     	ds	4
  1271  003B                     	global	dtoa@i
  1272                           dtoa@i:	; 2 bytes @ 0x1F
  1273  003F                     	ds	2
  1274  003F                     	global	?_vfpfcnvrt
  1275                           ?_vfpfcnvrt:	; 2 bytes @ 0x21
  1276  0041                     	global	vfpfcnvrt@fmt
  1277                           vfpfcnvrt@fmt:	; 1 bytes @ 0x21
  1278  0041                     	ds	1
  1279  0041                     	global	vfpfcnvrt@ap
  1280                           vfpfcnvrt@ap:	; 1 bytes @ 0x22
  1281  0042                     	ds	1
  1282  0042                     ??_vfpfcnvrt:	; 1 bytes @ 0x23
  1283  0043                     	ds	5
  1284  0043                     	global	vfpfcnvrt@ll
  1285                           vfpfcnvrt@ll:	; 4 bytes @ 0x28
  1286  0048                     	ds	4
  1287  0048                     	global	vfpfcnvrt@fp
  1288                           vfpfcnvrt@fp:	; 1 bytes @ 0x2C
  1289  004C                     	ds	1
  1290  004C                     	global	?_vfprintf
  1291                           ?_vfprintf:	; 2 bytes @ 0x2D
  1292  004D                     	global	vfprintf@fmt
  1293                           vfprintf@fmt:	; 2 bytes @ 0x2D
  1294  004D                     	ds	2
  1295  004D                     	global	vfprintf@ap
  1296                           vfprintf@ap:	; 1 bytes @ 0x2F
  1297  004F                     	ds	1
  1298  004F                     ??_vfprintf:	; 1 bytes @ 0x30
  1299  0050                     	ds	2
  1300  0050                     	global	vfprintf@fp
  1301                           vfprintf@fp:	; 1 bytes @ 0x32
  1302  0052                     	ds	1
  1303  0052                     	global	vfprintf@cfmt
  1304                           vfprintf@cfmt:	; 2 bytes @ 0x33
  1305  0053                     	ds	2
  1306  0053                     	global	?_sprintf
  1307                           ?_sprintf:	; 2 bytes @ 0x35
  1308  0055                     	global	sprintf@fmt
  1309                           sprintf@fmt:	; 2 bytes @ 0x35
  1310  0055                     	ds	4
  1311  0055                     	global	sprintf@ret
  1312                           sprintf@ret:	; 2 bytes @ 0x39
  1313  0059                     	ds	2
  1314  0059                     	global	sprintf@ap
  1315                           sprintf@ap:	; 1 bytes @ 0x3B
  1316  005B                     	ds	1
  1317  005B                     	global	sprintf@s
  1318                           sprintf@s:	; 1 bytes @ 0x3C
  1319  005C                     	ds	1
  1320  005C                     	global	sprintf@f
  1321                           sprintf@f:	; 5 bytes @ 0x3D
  1322  005D                     	ds	5
  1323  005D                     ??_myint:	; 1 bytes @ 0x42
  1324  0062                     	ds	2
  1325  0062                     ;!
  1326                           ;!Data Sizes:
  1327                           ;!    Strings     46
  1328                           ;!    Constant    0
  1329                           ;!    Data        4
  1330                           ;!    BSS         195
  1331                           ;!    Persistent  0
  1332                           ;!    Stack       0
  1333                           ;!
  1334                           ;!Auto Spaces:
  1335                           ;!    Space          Size  Autos    Used
  1336                           ;!    COMMON           14     14      14
  1337                           ;!    BANK0            80     68      80
  1338                           ;!    BANK1            80     39      69
  1339                           ;!    BANK2            80      0      52
  1340                           ;!    BANK3            80      0      75
  1341                           ;!    BANK4            80      0      30
  1342                           ;!    BANK5            80      0       0
  1343                           ;!    BANK6            80      0       0
  1344                           ;!    BANK7            80      0       0
  1345                           ;!    BANK8            80      0       0
  1346                           ;!    BANK9            80      0       0
  1347                           ;!    BANK10           80      0       0
  1348                           ;!    BANK11           80      0       0
  1349                           ;!    BANK12           48      0       0
  1350                           
  1351                           ;!
  1352                           ;!Pointer List with Targets:
  1353                           ;!
  1354                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 75
  1355                           ;!		 -> dbuf(BANK2[32]), STR_12(CODE[7]), STR_11(CODE[4]), STR_10(CODE[4]), 
  1356                           ;!		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[3]), 
  1357                           ;!		 -> wHexTemp(BANK2[20]), STR_4(CODE[3]), STR_3(CODE[4]), STR_2(CODE[5]), 
  1358                           ;!		 -> STR_1(CODE[4]), wInterruptText(BANK3[75]), 
  1359                           ;!
  1360                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 75
  1361                           ;!		 -> dbuf(BANK2[32]), STR_12(CODE[7]), STR_11(CODE[4]), STR_10(CODE[4]), 
  1362                           ;!		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[3]), 
  1363                           ;!		 -> wHexTemp(BANK2[20]), STR_4(CODE[3]), STR_3(CODE[4]), STR_2(CODE[5]), 
  1364                           ;!		 -> STR_1(CODE[4]), wInterruptText(BANK3[75]), 
  1365                           ;!
  1366                           ;!    strcpy@dest	PTR unsigned char  size(1) Largest target is 75
  1367                           ;!		 -> wInterruptText(BANK3[75]), 
  1368                           ;!
  1369                           ;!    strcpy@d	PTR unsigned char  size(1) Largest target is 75
  1370                           ;!		 -> wInterruptText(BANK3[75]), 
  1371                           ;!
  1372                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
  1373                           ;!		 -> STR_12(CODE[7]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[2]), 
  1374                           ;!		 -> STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[3]), wHexTemp(BANK2[20]), 
  1375                           ;!		 -> STR_4(CODE[3]), STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 
  1376                           ;!
  1377                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
  1378                           ;!		 -> STR_12(CODE[7]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[2]), 
  1379                           ;!		 -> STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[3]), wHexTemp(BANK2[20]), 
  1380                           ;!		 -> STR_4(CODE[3]), STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 
  1381                           ;!
  1382                           ;!    sp__strcpy	PTR unsigned char  size(1) Largest target is 75
  1383                           ;!		 -> wInterruptText(BANK3[75]), 
  1384                           ;!
  1385                           ;!    strcat@src	PTR const unsigned char  size(2) Largest target is 20
  1386                           ;!		 -> STR_12(CODE[7]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[2]), 
  1387                           ;!		 -> STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[3]), wHexTemp(BANK2[20]), 
  1388                           ;!		 -> STR_4(CODE[3]), STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 
  1389                           ;!
  1390                           ;!    strcat@dest	PTR unsigned char  size(1) Largest target is 75
  1391                           ;!		 -> wInterruptText(BANK3[75]), 
  1392                           ;!
  1393                           ;!    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
  1394                           ;!		 -> STR_5(CODE[5]), 
  1395                           ;!
  1396                           ;!    sprintf@s	PTR unsigned char  size(1) Largest target is 20
  1397                           ;!		 -> wHexTemp(BANK2[20]), 
  1398                           ;!
  1399                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  1400                           ;!		 -> ?_sprintf(BANK0[2]), 
  1401                           ;!
  1402                           ;!    f.buffer	PTR unsigned char  size(1) Largest target is 20
  1403                           ;!		 -> wHexTemp(BANK2[20]), 
  1404                           ;!
  1405                           ;!    fputs@s	PTR const unsigned char  size(1) Largest target is 32
  1406                           ;!		 -> dbuf(BANK2[32]), 
  1407                           ;!
  1408                           ;!    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
  1409                           ;!		 -> sprintf@f(BANK0[5]), 
  1410                           ;!
  1411                           ;!    S973_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 20
  1412                           ;!		 -> wHexTemp(BANK2[20]), 
  1413                           ;!
  1414                           ;!    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 20
  1415                           ;!		 -> wHexTemp(BANK2[20]), 
  1416                           ;!
  1417                           ;!    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
  1418                           ;!		 -> sprintf@f(BANK0[5]), 
  1419                           ;!
  1420                           ;!    memset@dest	PTR void  size(2) Largest target is 75
  1421                           ;!		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK4[30]), wI2CTxBuffer(BANK1[20]),
                                  
  1422                           ;!
  1423                           ;!    memset@s	PTR unsigned char  size(2) Largest target is 75
  1424                           ;!		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK4[30]), wI2CTxBuffer(BANK1[20]),
                                  
  1425                           ;!
  1426                           ;!    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
  1427                           ;!		 -> sprintf@ap(BANK0[1]), 
  1428                           ;!
  1429                           ;!    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
  1430                           ;!		 -> sprintf@f(BANK0[5]), 
  1431                           ;!
  1432                           ;!    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
  1433                           ;!		 -> STR_5(CODE[5]), 
  1434                           ;!
  1435                           ;!    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
  1436                           ;!		 -> STR_5(CODE[5]), 
  1437                           ;!
  1438                           ;!    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
  1439                           ;!		 -> sprintf@f(BANK0[5]), 
  1440                           ;!
  1441                           ;!    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
  1442                           ;!		 -> sprintf@ap(BANK0[1]), 
  1443                           ;!
  1444                           ;!    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
  1445                           ;!		 -> vfprintf@cfmt(BANK0[2]), 
  1446                           ;!
  1447                           ;!    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
  1448                           ;!		 -> sprintf@f(BANK0[5]), 
  1449                           ;!
  1450                           ;!    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
  1451                           ;!		 -> sprintf@f(BANK0[5]), 
  1452                           ;!
  1453                           ;!    pad@buf	PTR unsigned char  size(1) Largest target is 32
  1454                           ;!		 -> dbuf(BANK2[32]), 
  1455                           ;!
  1456                           ;!    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
  1457                           ;!		 -> main@wConv(BANK1[4]), wInterruptText(BANK3[75]), 
  1458                           ;!
  1459                           ;!    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
  1460                           ;!		 -> wInterruptText(BANK3[75]), 
  1461                           ;!
  1462                           ;!    sp__memset	PTR void  size(2) Largest target is 75
  1463                           ;!		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK4[30]), wI2CTxBuffer(BANK1[20]),
                                  
  1464                           ;!
  1465                           ;!    sp__strcat	PTR unsigned char  size(1) Largest target is 75
  1466                           ;!		 -> wInterruptText(BANK3[75]), 
  1467                           ;!
  1468                           ;!    Add_Trace@iText	PTR unsigned char  size(2) Largest target is 20
  1469                           ;!		 -> STR_12(CODE[7]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[2]), 
  1470                           ;!		 -> STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[3]), wHexTemp(BANK2[20]), 
  1471                           ;!		 -> STR_4(CODE[3]), STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 
  1472                           ;!
  1473                           ;!    Add_Trace@oText	PTR unsigned char  size(1) Largest target is 75
  1474                           ;!		 -> wInterruptText(BANK3[75]), 
  1475                           ;!
  1476                           
  1477                           
  1478                           ;!
  1479                           ;!Critical Paths under _main in COMMON
  1480                           ;!
  1481                           ;!    None.
  1482                           ;!
  1483                           ;!Critical Paths under _myint in COMMON
  1484                           ;!
  1485                           ;!    _myint->_sprintf
  1486                           ;!    i1_strcat->i1_strcpy
  1487                           ;!    i1_strcpy->i1_strlen
  1488                           ;!    _dtoa->_abs
  1489                           ;!    _dtoa->_pad
  1490                           ;!    _pad->_fputs
  1491                           ;!    _fputs->_fputc
  1492                           ;!    _abs->___almod
  1493                           ;!
  1494                           ;!Critical Paths under _main in BANK0
  1495                           ;!
  1496                           ;!    None.
  1497                           ;!
  1498                           ;!Critical Paths under _myint in BANK0
  1499                           ;!
  1500                           ;!    _myint->_sprintf
  1501                           ;!    i1_Add_Trace->i1_strcat
  1502                           ;!    _sprintf->_vfprintf
  1503                           ;!    _vfprintf->_vfpfcnvrt
  1504                           ;!    _vfpfcnvrt->_dtoa
  1505                           ;!    _dtoa->_pad
  1506                           ;!    _pad->_fputs
  1507                           ;!
  1508                           ;!Critical Paths under _main in BANK1
  1509                           ;!
  1510                           ;!    _main->_Add_Trace
  1511                           ;!    _setNotBlinkingCursor->_writeInsChk
  1512                           ;!    _setCursorOff->_writeInsChk
  1513                           ;!    _powerOnLcd->_writeInsChk
  1514                           ;!    _moveCursorToHome->_writeInsChk
  1515                           ;!    _initLCD->_writeInsChk
  1516                           ;!    _clearDisplay->_writeInsChk
  1517                           ;!    _writeInsChk->_waitLCDBusy
  1518                           ;!    _writeInsChk->_writeInsNoChk
  1519                           ;!    _writeInsNoChk->_setData
  1520                           ;!    _PrintLog->_lcdWriteText
  1521                           ;!    _lcdWriteText->_writeTxtChk
  1522                           ;!    _writeTxtChk->_setCursorPosition
  1523                           ;!    _setCursorPosition->_waitLCDBusy
  1524                           ;!    _GetTemp->_memset
  1525                           ;!    _Add_Trace->_strcat
  1526                           ;!    _strcat->_strcpy
  1527                           ;!    _strcpy->_strlen
  1528                           ;!
  1529                           ;!Critical Paths under _myint in BANK1
  1530                           ;!
  1531                           ;!    None.
  1532                           ;!
  1533                           ;!Critical Paths under _main in BANK2
  1534                           ;!
  1535                           ;!    None.
  1536                           ;!
  1537                           ;!Critical Paths under _myint in BANK2
  1538                           ;!
  1539                           ;!    None.
  1540                           ;!
  1541                           ;!Critical Paths under _main in BANK3
  1542                           ;!
  1543                           ;!    None.
  1544                           ;!
  1545                           ;!Critical Paths under _myint in BANK3
  1546                           ;!
  1547                           ;!    None.
  1548                           ;!
  1549                           ;!Critical Paths under _main in BANK4
  1550                           ;!
  1551                           ;!    None.
  1552                           ;!
  1553                           ;!Critical Paths under _myint in BANK4
  1554                           ;!
  1555                           ;!    None.
  1556                           ;!
  1557                           ;!Critical Paths under _main in BANK5
  1558                           ;!
  1559                           ;!    None.
  1560                           ;!
  1561                           ;!Critical Paths under _myint in BANK5
  1562                           ;!
  1563                           ;!    None.
  1564                           ;!
  1565                           ;!Critical Paths under _main in BANK6
  1566                           ;!
  1567                           ;!    None.
  1568                           ;!
  1569                           ;!Critical Paths under _myint in BANK6
  1570                           ;!
  1571                           ;!    None.
  1572                           ;!
  1573                           ;!Critical Paths under _main in BANK7
  1574                           ;!
  1575                           ;!    None.
  1576                           ;!
  1577                           ;!Critical Paths under _myint in BANK7
  1578                           ;!
  1579                           ;!    None.
  1580                           ;!
  1581                           ;!Critical Paths under _main in BANK8
  1582                           ;!
  1583                           ;!    None.
  1584                           ;!
  1585                           ;!Critical Paths under _myint in BANK8
  1586                           ;!
  1587                           ;!    None.
  1588                           ;!
  1589                           ;!Critical Paths under _main in BANK9
  1590                           ;!
  1591                           ;!    None.
  1592                           ;!
  1593                           ;!Critical Paths under _myint in BANK9
  1594                           ;!
  1595                           ;!    None.
  1596                           ;!
  1597                           ;!Critical Paths under _main in BANK10
  1598                           ;!
  1599                           ;!    None.
  1600                           ;!
  1601                           ;!Critical Paths under _myint in BANK10
  1602                           ;!
  1603                           ;!    None.
  1604                           ;!
  1605                           ;!Critical Paths under _main in BANK11
  1606                           ;!
  1607                           ;!    None.
  1608                           ;!
  1609                           ;!Critical Paths under _myint in BANK11
  1610                           ;!
  1611                           ;!    None.
  1612                           ;!
  1613                           ;!Critical Paths under _main in BANK12
  1614                           ;!
  1615                           ;!    None.
  1616                           ;!
  1617                           ;!Critical Paths under _myint in BANK12
  1618                           ;!
  1619                           ;!    None.
  1620                           
  1621 ;;
  1622 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1623 ;;
  1624                           
  1625                           ;!
  1626                           ;!Call Graph Tables:
  1627                           ;!
  1628                           ;! ---------------------------------------------------------------------------------
  1629                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1630                           ;! ---------------------------------------------------------------------------------
  1631                           ;! (0) _main                                                10    10      0   13043
  1632                           ;!                                             29 BANK1     10    10      0
  1633                           ;!                          _Add_Trace
  1634                           ;!                            _GetTemp
  1635                           ;!                           _PrintLog
  1636                           ;!                       _SetToGetTemp
  1637                           ;!                           _WakeTemp
  1638                           ;!                       _clearDisplay
  1639                           ;!                            _initLCD
  1640                           ;!                       _lcdWriteText
  1641                           ;!                             _memset
  1642                           ;!                   _moveCursorToHome
  1643                           ;!                         _powerOnLcd
  1644                           ;!                       _setCursorOff
  1645                           ;!               _setNotBlinkingCursor
  1646                           ;! ---------------------------------------------------------------------------------
  1647                           ;! (1) _setNotBlinkingCursor                                 1     1      0     178
  1648                           ;!                                              6 BANK1      1     1      0
  1649                           ;!                        _writeInsChk
  1650                           ;! ---------------------------------------------------------------------------------
  1651                           ;! (1) _setCursorOff                                         1     1      0     178
  1652                           ;!                                              6 BANK1      1     1      0
  1653                           ;!                        _writeInsChk
  1654                           ;! ---------------------------------------------------------------------------------
  1655                           ;! (1) _powerOnLcd                                           1     1      0     178
  1656                           ;!                                              6 BANK1      1     1      0
  1657                           ;!                        _writeInsChk
  1658                           ;! ---------------------------------------------------------------------------------
  1659                           ;! (1) _moveCursorToHome                                     0     0      0     178
  1660                           ;!                        _writeInsChk
  1661                           ;! ---------------------------------------------------------------------------------
  1662                           ;! (1) _initLCD                                              1     1      0     444
  1663                           ;!                                              6 BANK1      1     1      0
  1664                           ;!                       _clearDisplay
  1665                           ;!                            _setData
  1666                           ;!                        _writeInsChk
  1667                           ;! ---------------------------------------------------------------------------------
  1668                           ;! (2) _clearDisplay                                         0     0      0     178
  1669                           ;!                        _writeInsChk
  1670                           ;! ---------------------------------------------------------------------------------
  1671                           ;! (2) _writeInsChk                                          1     1      0     178
  1672                           ;!                                              5 BANK1      1     1      0
  1673                           ;!                        _waitLCDBusy
  1674                           ;!                      _writeInsNoChk
  1675                           ;! ---------------------------------------------------------------------------------
  1676                           ;! (3) _writeInsNoChk                                        2     2      0     132
  1677                           ;!                                              3 BANK1      2     2      0
  1678                           ;!                 _SetToSendDataToLCD
  1679                           ;!                            _setData
  1680                           ;! ---------------------------------------------------------------------------------
  1681                           ;! (1) _WakeTemp                                             1     1      0       0
  1682                           ;!                                              0 BANK1      1     1      0
  1683                           ;! ---------------------------------------------------------------------------------
  1684                           ;! (1) _SetToGetTemp                                         1     1      0       0
  1685                           ;!                                              0 BANK1      1     1      0
  1686                           ;! ---------------------------------------------------------------------------------
  1687                           ;! (1) _PrintLog                                             3     3      0    3605
  1688                           ;!                                             18 BANK1      3     3      0
  1689                           ;!                       _lcdWriteText
  1690                           ;!                             _memset
  1691                           ;!                             _strlen
  1692                           ;! ---------------------------------------------------------------------------------
  1693                           ;! (1) _lcdWriteText                                         5     3      2    1029
  1694                           ;!                                             13 BANK1      5     3      2
  1695                           ;!                        _writeTxtChk
  1696                           ;! ---------------------------------------------------------------------------------
  1697                           ;! (2) _writeTxtChk                                          3     3      0     819
  1698                           ;!                                             10 BANK1      3     3      0
  1699                           ;!                 _SetToSendDataToLCD
  1700                           ;!                  _setCursorPosition
  1701                           ;!                            _setData
  1702                           ;!                        _waitLCDBusy
  1703                           ;! ---------------------------------------------------------------------------------
  1704                           ;! (3) _setCursorPosition                                    5     4      1     663
  1705                           ;!                                              5 BANK1      5     4      1
  1706                           ;!                 _SetToSendDataToLCD
  1707                           ;!                            _setData
  1708                           ;!                        _waitLCDBusy
  1709                           ;! ---------------------------------------------------------------------------------
  1710                           ;! (3) _waitLCDBusy                                          5     5      0      24
  1711                           ;!                                              0 BANK1      5     5      0
  1712                           ;!               _SetToReadDataFromLCD
  1713                           ;! ---------------------------------------------------------------------------------
  1714                           ;! (4) _SetToReadDataFromLCD                                 0     0      0       0
  1715                           ;! ---------------------------------------------------------------------------------
  1716                           ;! (4) _setData                                              3     3      0      88
  1717                           ;!                                              0 BANK1      3     3      0
  1718                           ;! ---------------------------------------------------------------------------------
  1719                           ;! (4) _SetToSendDataToLCD                                   0     0      0       0
  1720                           ;! ---------------------------------------------------------------------------------
  1721                           ;! (1) _GetTemp                                              1     1      0    1897
  1722                           ;!                                             14 BANK1      1     1      0
  1723                           ;!                             _memset
  1724                           ;! ---------------------------------------------------------------------------------
  1725                           ;! (1) _memset                                              14     8      6    1897
  1726                           ;!                                              0 BANK1     14     8      6
  1727                           ;! ---------------------------------------------------------------------------------
  1728                           ;! (1) _Add_Trace                                           10     7      3    3136
  1729                           ;!                                             19 BANK1     10     7      3
  1730                           ;!                             _strcat
  1731                           ;!                             _strlen
  1732                           ;! ---------------------------------------------------------------------------------
  1733                           ;! (2) _strcat                                               5     3      2     830
  1734                           ;!                                             14 BANK1      5     3      2
  1735                           ;!                             _strcpy
  1736                           ;!                             _strlen
  1737                           ;! ---------------------------------------------------------------------------------
  1738                           ;! (2) _strlen                                               6     4      2     444
  1739                           ;!                                              0 BANK1      6     4      2
  1740                           ;! ---------------------------------------------------------------------------------
  1741                           ;! (3) _strcpy                                               8     6      2     205
  1742                           ;!                                              6 BANK1      8     6      2
  1743                           ;!                             _strlen (ARG)
  1744                           ;! ---------------------------------------------------------------------------------
  1745                           ;! Estimated maximum stack depth 4
  1746                           ;! ---------------------------------------------------------------------------------
  1747                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1748                           ;! ---------------------------------------------------------------------------------
  1749                           ;! (7) _myint                                                2     2      0    7369
  1750                           ;!                                             66 BANK0      2     2      0
  1751                           ;!                       _ToggleBitRB5
  1752                           ;!                            _sprintf
  1753                           ;!                        i1_Add_Trace
  1754                           ;! ---------------------------------------------------------------------------------
  1755                           ;! (8) i1_Add_Trace                                         10     7      3    1186
  1756                           ;!                                              5 BANK0     10     7      3
  1757                           ;!                           i1_strcat
  1758                           ;!                           i1_strlen
  1759                           ;! ---------------------------------------------------------------------------------
  1760                           ;! (9) i1_strcat                                             5     3      2     414
  1761                           ;!                                              0 BANK0      5     3      2
  1762                           ;!                           i1_strcpy
  1763                           ;!                           i1_strlen
  1764                           ;! ---------------------------------------------------------------------------------
  1765                           ;! (10) i1_strcpy                                            8     6      2     122
  1766                           ;!                                              6 COMMON     8     6      2
  1767                           ;!                           i1_strlen (ARG)
  1768                           ;! ---------------------------------------------------------------------------------
  1769                           ;! (8) _sprintf                                             14    10      4    6183
  1770                           ;!                                             13 COMMON     1     1      0
  1771                           ;!                                             53 BANK0     13     9      4
  1772                           ;!                           _vfprintf
  1773                           ;! ---------------------------------------------------------------------------------
  1774                           ;! (9) _vfprintf                                             8     5      3    5875
  1775                           ;!                                             45 BANK0      8     5      3
  1776                           ;!                          _vfpfcnvrt
  1777                           ;! ---------------------------------------------------------------------------------
  1778                           ;! (10) _vfpfcnvrt                                          32    30      2    5564
  1779                           ;!                                             33 BANK0     12    10      2
  1780                           ;!                               _dtoa
  1781                           ;!                              _fputc
  1782                           ;! ---------------------------------------------------------------------------------
  1783                           ;! (11) _dtoa                                               21    17      4    4214
  1784                           ;!                                             12 BANK0     21    17      4
  1785                           ;!                            ___aldiv
  1786                           ;!                            ___almod
  1787                           ;!                                _abs
  1788                           ;!                                _pad
  1789                           ;! ---------------------------------------------------------------------------------
  1790                           ;! (12) _pad                                                 9     6      3    2608
  1791                           ;!                                             12 COMMON     1     1      0
  1792                           ;!                                              4 BANK0      8     5      3
  1793                           ;!                              _fputc
  1794                           ;!                              _fputs
  1795                           ;!                           i1_strlen
  1796                           ;! ---------------------------------------------------------------------------------
  1797                           ;! (9) i1_strlen                                             6     4      2     194
  1798                           ;!                                              0 COMMON     6     4      2
  1799                           ;! ---------------------------------------------------------------------------------
  1800                           ;! (13) _fputs                                               8     7      1    1149
  1801                           ;!                                              8 COMMON     4     3      1
  1802                           ;!                                              0 BANK0      4     4      0
  1803                           ;!                              _fputc
  1804                           ;! ---------------------------------------------------------------------------------
  1805                           ;! (11) _fputc                                               8     5      3     834
  1806                           ;!                                              0 COMMON     8     5      3
  1807                           ;!                              _putch
  1808                           ;! ---------------------------------------------------------------------------------
  1809                           ;! (12) _putch                                               1     1      0       0
  1810                           ;! ---------------------------------------------------------------------------------
  1811                           ;! (12) _abs                                                 4     2      2     142
  1812                           ;!                                             11 COMMON     2     0      2
  1813                           ;!                                              0 BANK0      2     2      0
  1814                           ;!                            ___almod (ARG)
  1815                           ;! ---------------------------------------------------------------------------------
  1816                           ;! (12) ___almod                                            11     3      8     448
  1817                           ;!                                              0 COMMON    11     3      8
  1818                           ;! ---------------------------------------------------------------------------------
  1819                           ;! (12) ___aldiv                                            15     7      8     452
  1820                           ;!                                              0 COMMON     9     1      8
  1821                           ;!                                              0 BANK0      6     6      0
  1822                           ;! ---------------------------------------------------------------------------------
  1823                           ;! (8) _ToggleBitRB5                                         0     0      0       0
  1824                           ;! ---------------------------------------------------------------------------------
  1825                           ;! Estimated maximum stack depth 13
  1826                           ;! ---------------------------------------------------------------------------------
  1827                           ;!
  1828                           ;! Call Graph Graphs:
  1829                           ;!
  1830                           ;! _main (ROOT)
  1831                           ;!   _Add_Trace
  1832                           ;!     _strcat
  1833                           ;!       _strcpy
  1834                           ;!         _strlen (ARG)
  1835                           ;!       _strlen
  1836                           ;!     _strlen
  1837                           ;!   _GetTemp
  1838                           ;!     _memset
  1839                           ;!   _PrintLog
  1840                           ;!     _lcdWriteText
  1841                           ;!       _writeTxtChk
  1842                           ;!         _SetToSendDataToLCD
  1843                           ;!         _setCursorPosition
  1844                           ;!           _SetToSendDataToLCD
  1845                           ;!           _setData
  1846                           ;!           _waitLCDBusy
  1847                           ;!             _SetToReadDataFromLCD
  1848                           ;!         _setData
  1849                           ;!         _waitLCDBusy
  1850                           ;!           _SetToReadDataFromLCD
  1851                           ;!     _memset
  1852                           ;!     _strlen
  1853                           ;!   _SetToGetTemp
  1854                           ;!   _WakeTemp
  1855                           ;!   _clearDisplay
  1856                           ;!     _writeInsChk
  1857                           ;!       _waitLCDBusy
  1858                           ;!         _SetToReadDataFromLCD
  1859                           ;!       _writeInsNoChk
  1860                           ;!         _SetToSendDataToLCD
  1861                           ;!         _setData
  1862                           ;!   _initLCD
  1863                           ;!     _clearDisplay
  1864                           ;!       _writeInsChk
  1865                           ;!         _waitLCDBusy
  1866                           ;!           _SetToReadDataFromLCD
  1867                           ;!         _writeInsNoChk
  1868                           ;!           _SetToSendDataToLCD
  1869                           ;!           _setData
  1870                           ;!     _setData
  1871                           ;!     _writeInsChk
  1872                           ;!       _waitLCDBusy
  1873                           ;!         _SetToReadDataFromLCD
  1874                           ;!       _writeInsNoChk
  1875                           ;!         _SetToSendDataToLCD
  1876                           ;!         _setData
  1877                           ;!   _lcdWriteText
  1878                           ;!     _writeTxtChk
  1879                           ;!       _SetToSendDataToLCD
  1880                           ;!       _setCursorPosition
  1881                           ;!         _SetToSendDataToLCD
  1882                           ;!         _setData
  1883                           ;!         _waitLCDBusy
  1884                           ;!           _SetToReadDataFromLCD
  1885                           ;!       _setData
  1886                           ;!       _waitLCDBusy
  1887                           ;!         _SetToReadDataFromLCD
  1888                           ;!   _memset
  1889                           ;!   _moveCursorToHome
  1890                           ;!     _writeInsChk
  1891                           ;!       _waitLCDBusy
  1892                           ;!         _SetToReadDataFromLCD
  1893                           ;!       _writeInsNoChk
  1894                           ;!         _SetToSendDataToLCD
  1895                           ;!         _setData
  1896                           ;!   _powerOnLcd
  1897                           ;!     _writeInsChk
  1898                           ;!       _waitLCDBusy
  1899                           ;!         _SetToReadDataFromLCD
  1900                           ;!       _writeInsNoChk
  1901                           ;!         _SetToSendDataToLCD
  1902                           ;!         _setData
  1903                           ;!   _setCursorOff
  1904                           ;!     _writeInsChk
  1905                           ;!       _waitLCDBusy
  1906                           ;!         _SetToReadDataFromLCD
  1907                           ;!       _writeInsNoChk
  1908                           ;!         _SetToSendDataToLCD
  1909                           ;!         _setData
  1910                           ;!   _setNotBlinkingCursor
  1911                           ;!     _writeInsChk
  1912                           ;!       _waitLCDBusy
  1913                           ;!         _SetToReadDataFromLCD
  1914                           ;!       _writeInsNoChk
  1915                           ;!         _SetToSendDataToLCD
  1916                           ;!         _setData
  1917                           ;!
  1918                           ;! _myint (ROOT)
  1919                           ;!   _ToggleBitRB5
  1920                           ;!   _sprintf
  1921                           ;!     _vfprintf
  1922                           ;!       _vfpfcnvrt
  1923                           ;!         _dtoa
  1924                           ;!           ___aldiv
  1925                           ;!           ___almod
  1926                           ;!           _abs
  1927                           ;!             ___almod (ARG)
  1928                           ;!           _pad
  1929                           ;!             _fputc
  1930                           ;!               _putch
  1931                           ;!             _fputs
  1932                           ;!               _fputc
  1933                           ;!                 _putch
  1934                           ;!             i1_strlen
  1935                           ;!         _fputc
  1936                           ;!           _putch
  1937                           ;!   i1_Add_Trace
  1938                           ;!     i1_strcat
  1939                           ;!       i1_strcpy
  1940                           ;!         i1_strlen (ARG)
  1941                           ;!       i1_strlen
  1942                           ;!     i1_strlen
  1943                           ;!
  1944                           
  1945                           ;! Address spaces:
  1946                           
  1947                           ;!Name               Size   Autos  Total    Cost      Usage
  1948                           ;!BIGRAM             3F0      0       0       0        0.0%
  1949                           ;!NULL                 0      0       0       0        0.0%
  1950                           ;!CODE                 0      0       0       0        0.0%
  1951                           ;!BITCOMMON            E      0       0       1        0.0%
  1952                           ;!BITSFR0              0      0       0       1        0.0%
  1953                           ;!SFR0                 0      0       0       1        0.0%
  1954                           ;!COMMON               E      E       E       2      100.0%
  1955                           ;!BITSFR1              0      0       0       2        0.0%
  1956                           ;!SFR1                 0      0       0       2        0.0%
  1957                           ;!BITSFR2              0      0       0       3        0.0%
  1958                           ;!SFR2                 0      0       0       3        0.0%
  1959                           ;!STACK                0      0       0       3        0.0%
  1960                           ;!BITBANK0            50      0       0       4        0.0%
  1961                           ;!BITSFR3              0      0       0       4        0.0%
  1962                           ;!SFR3                 0      0       0       4        0.0%
  1963                           ;!BANK0               50     44      50       5      100.0%
  1964                           ;!BITSFR4              0      0       0       5        0.0%
  1965                           ;!SFR4                 0      0       0       5        0.0%
  1966                           ;!BITBANK1            50      0       0       6        0.0%
  1967                           ;!BITSFR5              0      0       0       6        0.0%
  1968                           ;!SFR5                 0      0       0       6        0.0%
  1969                           ;!BANK1               50     27      45       7       86.3%
  1970                           ;!BITSFR6              0      0       0       7        0.0%
  1971                           ;!SFR6                 0      0       0       7        0.0%
  1972                           ;!BITBANK2            50      0       0       8        0.0%
  1973                           ;!BITSFR7              0      0       0       8        0.0%
  1974                           ;!SFR7                 0      0       0       8        0.0%
  1975                           ;!BANK2               50      0      34       9       65.0%
  1976                           ;!BITSFR8              0      0       0       9        0.0%
  1977                           ;!SFR8                 0      0       0       9        0.0%
  1978                           ;!BITBANK3            50      0       0      10        0.0%
  1979                           ;!BITSFR9              0      0       0      10        0.0%
  1980                           ;!SFR9                 0      0       0      10        0.0%
  1981                           ;!BANK3               50      0      4B      11       93.8%
  1982                           ;!BITSFR10             0      0       0      11        0.0%
  1983                           ;!SFR10                0      0       0      11        0.0%
  1984                           ;!BITBANK4            50      0       0      12        0.0%
  1985                           ;!BITSFR11             0      0       0      12        0.0%
  1986                           ;!SFR11                0      0       0      12        0.0%
  1987                           ;!BANK4               50      0      1E      13       37.5%
  1988                           ;!BITSFR12             0      0       0      13        0.0%
  1989                           ;!SFR12                0      0       0      13        0.0%
  1990                           ;!BITBANK5            50      0       0      14        0.0%
  1991                           ;!BITSFR13             0      0       0      14        0.0%
  1992                           ;!SFR13                0      0       0      14        0.0%
  1993                           ;!BANK5               50      0       0      15        0.0%
  1994                           ;!BITSFR14             0      0       0      15        0.0%
  1995                           ;!SFR14                0      0       0      15        0.0%
  1996                           ;!BITBANK6            50      0       0      16        0.0%
  1997                           ;!BITSFR15             0      0       0      16        0.0%
  1998                           ;!SFR15                0      0       0      16        0.0%
  1999                           ;!BANK6               50      0       0      17        0.0%
  2000                           ;!BITSFR16             0      0       0      17        0.0%
  2001                           ;!SFR16                0      0       0      17        0.0%
  2002                           ;!BITBANK7            50      0       0      18        0.0%
  2003                           ;!BITSFR17             0      0       0      18        0.0%
  2004                           ;!SFR17                0      0       0      18        0.0%
  2005                           ;!BANK7               50      0       0      19        0.0%
  2006                           ;!BITSFR18             0      0       0      19        0.0%
  2007                           ;!SFR18                0      0       0      19        0.0%
  2008                           ;!BITSFR19             0      0       0      20        0.0%
  2009                           ;!SFR19                0      0       0      20        0.0%
  2010                           ;!ABS                  0      0     140      20        0.0%
  2011                           ;!BITBANK8            50      0       0      21        0.0%
  2012                           ;!BITSFR20             0      0       0      21        0.0%
  2013                           ;!SFR20                0      0       0      21        0.0%
  2014                           ;!BANK8               50      0       0      22        0.0%
  2015                           ;!BITSFR21             0      0       0      22        0.0%
  2016                           ;!SFR21                0      0       0      22        0.0%
  2017                           ;!BITBANK9            50      0       0      23        0.0%
  2018                           ;!BITSFR22             0      0       0      23        0.0%
  2019                           ;!SFR22                0      0       0      23        0.0%
  2020                           ;!BANK9               50      0       0      24        0.0%
  2021                           ;!BITSFR23             0      0       0      24        0.0%
  2022                           ;!SFR23                0      0       0      24        0.0%
  2023                           ;!BITBANK10           50      0       0      25        0.0%
  2024                           ;!BITSFR24             0      0       0      25        0.0%
  2025                           ;!SFR24                0      0       0      25        0.0%
  2026                           ;!BANK10              50      0       0      26        0.0%
  2027                           ;!BITSFR25             0      0       0      26        0.0%
  2028                           ;!SFR25                0      0       0      26        0.0%
  2029                           ;!BITBANK11           50      0       0      27        0.0%
  2030                           ;!BITSFR26             0      0       0      27        0.0%
  2031                           ;!SFR26                0      0       0      27        0.0%
  2032                           ;!BANK11              50      0       0      28        0.0%
  2033                           ;!BITSFR27             0      0       0      28        0.0%
  2034                           ;!SFR27                0      0       0      28        0.0%
  2035                           ;!BITBANK12           30      0       0      29        0.0%
  2036                           ;!BITSFR28             0      0       0      29        0.0%
  2037                           ;!SFR28                0      0       0      29        0.0%
  2038                           ;!BANK12              30      0       0      30        0.0%
  2039                           ;!BITSFR29             0      0       0      30        0.0%
  2040                           ;!SFR29                0      0       0      30        0.0%
  2041                           ;!BITSFR30             0      0       0      31        0.0%
  2042                           ;!SFR30                0      0       0      31        0.0%
  2043                           ;!DATA                 0      0     140      31        0.0%
  2044                           ;!BITSFR31             0      0       0      32        0.0%
  2045                           ;!SFR31                0      0       0      32        0.0%
  2046                           
  2047                           	global	_main
  2048                           
  2049 ;; *************** function _main *****************
  2050 ;; Defined at:
  2051 ;;		line 118 in file "161518_temp_main.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  wConv           4   33[BANK1 ] unsigned char [4]
  2056 ;;  wCounter        2   37[BANK1 ] int 
  2057 ;;  wTemp           2   31[BANK1 ] int 
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : B1F/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2068 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
       0       0
  2069 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  2070 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
       0       0
  2071 ;;Total ram usage:       10 bytes
  2072 ;; Hardware stack levels required when called:   15
  2073 ;; This function calls:
  2074 ;;		_Add_Trace
  2075 ;;		_GetTemp
  2076 ;;		_PrintLog
  2077 ;;		_SetToGetTemp
  2078 ;;		_WakeTemp
  2079 ;;		_clearDisplay
  2080 ;;		_initLCD
  2081 ;;		_lcdWriteText
  2082 ;;		_memset
  2083 ;;		_moveCursorToHome
  2084 ;;		_powerOnLcd
  2085 ;;		_setCursorOff
  2086 ;;		_setNotBlinkingCursor
  2087 ;; This function is called by:
  2088 ;;		Startup code after reset
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  2092                           	file	"161518_temp_main.c"
  2093                           	line	118
  2094                           global __pmaintext
  2095                           __pmaintext:	;psect for function _main
  2096  0197                     psect	maintext
  2097                           	file	"161518_temp_main.c"
  2098                           	line	118
  2099                           	global	__size_of_main
  2100                           	__size_of_main	equ	__end_of_main-_main
  2101  0147                     	
  2102                           _main:	
  2103  0197                     ;incstack = 0
  2104                           	opt	stack 1
  2105                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2106                           	line	120
  2107                           	
  2108                           l2669:	
  2109  0197                     	movlw	low(_wInterruptText)
  2110  0197  30A0               	movlb 1	; select bank1
  2111  0198  0021               	movwf	(memset@dest)^080h
  2112  0199  00A0               	movlw	high(_wInterruptText)
  2113  019A  3001               	movwf	(memset@dest+1)^080h
  2114  019B  00A1               	movlw	0
  2115  019C  3000               	movwf	(memset@c)^080h
  2116  019D  00A2               	movwf	(memset@c+1)^080h
  2117  019E  00A3               	movlw	04Bh
  2118  019F  304B               	movwf	(memset@n)^080h
  2119  01A0  00A4               	movlw	0
  2120  01A1  3000               	movwf	((memset@n)^080h)+1
  2121  01A2  00A5               	fcall	_memset
  2122  01A3  3184  24DE  3181   	line	122
  2123                           	
  2124                           l2671:	
  2125  01A6                     	movlw	(0Fh & ((1<<4)-1))<<3
  2126  01A6  3078               	movlb 1	; select bank1
  2127  01A7  0021               	iorwf	(153)^080h,f	;volatile
  2128  01A8  0499               	line	123
  2129                           	
  2130                           l2673:	
  2131  01A9                     	movlw	(03h & ((1<<2)-1))<<0
  2132  01A9  3003               	iorwf	(153)^080h,f	;volatile
  2133  01AA  0499               	line	124
  2134                           	
  2135                           l2675:	
  2136  01AB                     	bcf	(11),7	;volatile
  2137  01AB  138B               	line	125
  2138                           	
  2139                           l2677:	
  2140  01AC                     	movlb 0	; select bank0
  2141  01AC  0020               	clrf	(12)	;volatile
  2142  01AD  018C               	line	127
  2143                           	
  2144                           l2679:	
  2145  01AE                     	clrf	(13)	;volatile
  2146  01AE  018D               	line	128
  2147                           	
  2148                           l2681:	
  2149  01AF                     	movlb 3	; select bank3
  2150  01AF  0023               	clrf	(397)^0180h	;volatile
  2151  01B0  018D               	line	129
  2152                           	
  2153                           l2683:	
  2154  01B1                     	movlb 1	; select bank1
  2155  01B1  0021               	clrf	(141)^080h	;volatile
  2156  01B2  018D               	line	131
  2157                           	movlw	low(_wI2CTxBuffer)
  2158  01B3  30CD               	movwf	(memset@dest)^080h
  2159  01B4  00A0               	movlw	high(_wI2CTxBuffer)
  2160  01B5  3000               	movwf	(memset@dest+1)^080h
  2161  01B6  00A1               	movlw	0
  2162  01B7  3000               	movwf	(memset@c)^080h
  2163  01B8  00A2               	movwf	(memset@c+1)^080h
  2164  01B9  00A3               	movlw	014h
  2165  01BA  3014               	movwf	(memset@n)^080h
  2166  01BB  00A4               	movlw	0
  2167  01BC  3000               	movwf	((memset@n)^080h)+1
  2168  01BD  00A5               	fcall	_memset
  2169  01BE  3184  24DE  3181   	line	132
  2170                           	
  2171                           l2685:	
  2172  01C1                     	movlb 1	; select bank1
  2173  01C1  0021               	clrf	(_wI2CTxBufferSize)^080h
  2174  01C2  01C9               	line	133
  2175                           	
  2176                           l2687:	
  2177  01C3                     	movlb 0	; select bank0
  2178  01C3  0020               	clrf	(_wI2CTxSendPos)
  2179  01C4  01ED               	line	135
  2180                           	
  2181                           l2689:	
  2182  01C5                     	movlb 3	; select bank3
  2183  01C5  0023               	clrf	(396)^0180h	;volatile
  2184  01C6  018C               	line	136
  2185                           	
  2186                           l2691:	
  2187  01C7                     	movlb 1	; select bank1
  2188  01C7  0021               	clrf	(140)^080h	;volatile
  2189  01C8  018C               	line	138
  2190                           	
  2191                           l2693:	
  2192  01C9                     	clrf	(142)^080h	;volatile
  2193  01C9  018E               	line	139
  2194                           	
  2195                           l2695:	
  2196  01CA                     	movlw	low(0FFh)
  2197  01CA  30FF               	movwf	(142)^080h	;volatile
  2198  01CB  008E               	line	140
  2199                           	
  2200                           l2697:	
  2201  01CC                     	movlb 3	; select bank3
  2202  01CC  0023               	bcf	(398)^0180h,3	;volatile
  2203  01CD  118E               	line	141
  2204                           	
  2205                           l2699:	
  2206  01CE                     	bcf	(398)^0180h,4	;volatile
  2207  01CE  120E               	line	146
  2208                           	
  2209                           l2701:	
  2210  01CF                     	movlb 4	; select bank4
  2211  01CF  0024               	movf	(533)^0200h,w	;volatile
  2212  01D0  0815               	andlw	not (((1<<4)-1)<<0)
  2213  01D1  39F0               	iorlw	(08h & ((1<<4)-1))<<0
  2214  01D2  3808               	movwf	(533)^0200h	;volatile
  2215  01D3  0095               	line	147
  2216                           	
  2217                           l2703:	
  2218  01D4                     	movlw	low(01Fh)
  2219  01D4  301F               	movwf	(530)^0200h	;volatile
  2220  01D5  0092               	line	148
  2221                           	
  2222                           l2705:	
  2223  01D6                     	bsf	(533)^0200h,5	;volatile
  2224  01D6  1695               	line	149
  2225                           	
  2226                           l2707:	
  2227  01D7                     	bcf	(534)^0200h,7	;volatile
  2228  01D7  1396               	line	150
  2229                           	
  2230                           l2709:	
  2231  01D8                     	bsf	(534)^0200h,4	;volatile
  2232  01D8  1616               	line	151
  2233                           	
  2234                           l2711:	
  2235  01D9                     	bsf	(535)^0200h,6	;volatile
  2236  01D9  1717               	line	152
  2237                           	
  2238                           l2713:	
  2239  01DA                     	bsf	(535)^0200h,5	;volatile
  2240  01DA  1697               	line	153
  2241                           	
  2242                           l2715:	
  2243  01DB                     	bsf	(535)^0200h,3	;volatile
  2244  01DB  1597               	line	154
  2245                           	
  2246                           l2717:	
  2247  01DC                     	bcf	(535)^0200h,1	;volatile
  2248  01DC  1097               	line	155
  2249                           	
  2250                           l2719:	
  2251  01DD                     	bcf	(535)^0200h,0	;volatile
  2252  01DD  1017               	line	156
  2253                           	
  2254                           l2721:	
  2255  01DE                     	bcf	(532)^0200h,6	;volatile
  2256  01DE  1314               	line	158
  2257                           	
  2258                           l2723:	
  2259  01DF                     	bsf	(11),6	;volatile
  2260  01DF  170B               	line	159
  2261                           	
  2262                           l2725:	
  2263  01E0                     	movlb 1	; select bank1
  2264  01E0  0021               	bsf	(145)^080h,3	;volatile
  2265  01E1  1591               	line	160
  2266                           	
  2267                           l2727:	
  2268  01E2                     	bsf	(146)^080h,3	;volatile
  2269  01E2  1592               	line	162
  2270                           	
  2271                           l2729:	
  2272  01E3                     	bsf	(11),7	;volatile
  2273  01E3  178B               	line	165
  2274                           	
  2275                           l2731:	
  2276  01E4                     	fcall	_initLCD
  2277  01E4  318F  275B  3181   	line	166
  2278                           	
  2279                           l2733:	
  2280  01E7                     	fcall	_clearDisplay
  2281  01E7  318C  2406  3181   	line	167
  2282                           	
  2283                           l2735:	
  2284  01EA                     	opt asmopt_push
  2285                           opt asmopt_off
  2286                           movlw  3
  2287  01EA  3003               	movlb 1	; select bank1
  2288  01EB  0021               movwf	((??_main+0)^080h+0+1),f
  2289  01EC  00BE               movlw	8
  2290  01ED  3008               movwf	((??_main+0)^080h+0),f
  2291  01EE  00BD               	movlw	119
  2292  01EF  3077               u2037:
  2293  01F0                     decfsz	wreg
  2294  01F0  0B89               	goto	u2037
  2295  01F1  29F0               	decfsz	((??_main+0)^080h+0),f
  2296  01F2  0BBD               	goto	u2037
  2297  01F3  29F0               	decfsz	((??_main+0)^080h+0+1),f
  2298  01F4  0BBE               	goto	u2037
  2299  01F5  29F0               opt asmopt_pop
  2300                           
  2301                           	line	168
  2302                           	
  2303                           l2737:	
  2304  01F6                     	fcall	_powerOnLcd
  2305  01F6  318C  243A  3181   	line	169
  2306                           	
  2307                           l2739:	
  2308  01F9                     	opt asmopt_push
  2309                           opt asmopt_off
  2310                           movlw  3
  2311  01F9  3003               	movlb 1	; select bank1
  2312  01FA  0021               movwf	((??_main+0)^080h+0+1),f
  2313  01FB  00BE               movlw	8
  2314  01FC  3008               movwf	((??_main+0)^080h+0),f
  2315  01FD  00BD               	movlw	119
  2316  01FE  3077               u2047:
  2317  01FF                     decfsz	wreg
  2318  01FF  0B89               	goto	u2047
  2319  0200  29FF               	decfsz	((??_main+0)^080h+0),f
  2320  0201  0BBD               	goto	u2047
  2321  0202  29FF               	decfsz	((??_main+0)^080h+0+1),f
  2322  0203  0BBE               	goto	u2047
  2323  0204  29FF               opt asmopt_pop
  2324                           
  2325                           	line	170
  2326                           	
  2327                           l2741:	
  2328  0205                     	fcall	_setCursorOff
  2329  0205  318C  2445  3181   	line	171
  2330                           	
  2331                           l2743:	
  2332  0208                     	opt asmopt_push
  2333                           opt asmopt_off
  2334                           movlw  3
  2335  0208  3003               	movlb 1	; select bank1
  2336  0209  0021               movwf	((??_main+0)^080h+0+1),f
  2337  020A  00BE               movlw	8
  2338  020B  3008               movwf	((??_main+0)^080h+0),f
  2339  020C  00BD               	movlw	119
  2340  020D  3077               u2057:
  2341  020E                     decfsz	wreg
  2342  020E  0B89               	goto	u2057
  2343  020F  2A0E               	decfsz	((??_main+0)^080h+0),f
  2344  0210  0BBD               	goto	u2057
  2345  0211  2A0E               	decfsz	((??_main+0)^080h+0+1),f
  2346  0212  0BBE               	goto	u2057
  2347  0213  2A0E               opt asmopt_pop
  2348                           
  2349                           	line	172
  2350                           	
  2351                           l2745:	
  2352  0214                     	fcall	_moveCursorToHome
  2353  0214  318C  241D  3181   	line	173
  2354                           	
  2355                           l2747:	
  2356  0217                     	opt asmopt_push
  2357                           opt asmopt_off
  2358                           movlw  3
  2359  0217  3003               	movlb 1	; select bank1
  2360  0218  0021               movwf	((??_main+0)^080h+0+1),f
  2361  0219  00BE               movlw	8
  2362  021A  3008               movwf	((??_main+0)^080h+0),f
  2363  021B  00BD               	movlw	119
  2364  021C  3077               u2067:
  2365  021D                     decfsz	wreg
  2366  021D  0B89               	goto	u2067
  2367  021E  2A1D               	decfsz	((??_main+0)^080h+0),f
  2368  021F  0BBD               	goto	u2067
  2369  0220  2A1D               	decfsz	((??_main+0)^080h+0+1),f
  2370  0221  0BBE               	goto	u2067
  2371  0222  2A1D               opt asmopt_pop
  2372                           
  2373                           	line	174
  2374                           	
  2375                           l2749:	
  2376  0223                     	fcall	_setNotBlinkingCursor
  2377  0223  318C  2450  3181   	line	175
  2378                           	
  2379                           l2751:	
  2380  0226                     	opt asmopt_push
  2381                           opt asmopt_off
  2382                           movlw  3
  2383  0226  3003               	movlb 1	; select bank1
  2384  0227  0021               movwf	((??_main+0)^080h+0+1),f
  2385  0228  00BE               movlw	8
  2386  0229  3008               movwf	((??_main+0)^080h+0),f
  2387  022A  00BD               	movlw	119
  2388  022B  3077               u2077:
  2389  022C                     decfsz	wreg
  2390  022C  0B89               	goto	u2077
  2391  022D  2A2C               	decfsz	((??_main+0)^080h+0),f
  2392  022E  0BBD               	goto	u2077
  2393  022F  2A2C               	decfsz	((??_main+0)^080h+0+1),f
  2394  0230  0BBE               	goto	u2077
  2395  0231  2A2C               opt asmopt_pop
  2396                           
  2397                           	line	201
  2398                           	
  2399                           l2753:	
  2400  0232                     	movlb 1	; select bank1
  2401  0232  0021               	clrf	(main@wCounter)^080h
  2402  0233  01C5               	clrf	(main@wCounter+1)^080h
  2403  0234  01C6               	line	202
  2404                           	
  2405                           l2755:	
  2406  0235                     	movf	(main@F2190+3)^080h,w
  2407  0235  0864               	movwf	(main@wConv+3)^080h
  2408  0236  00C4               	movf	(main@F2190+2)^080h,w
  2409  0237  0863               	movwf	(main@wConv+2)^080h
  2410  0238  00C3               	movf	(main@F2190+1)^080h,w
  2411  0239  0862               	movwf	(main@wConv+1)^080h
  2412  023A  00C2               	movf	(main@F2190)^080h,w
  2413  023B  0861               	movwf	(main@wConv)^080h
  2414  023C  00C1               
  2415                           	line	203
  2416                           	
  2417                           l2757:	
  2418  023D                     	clrf	(main@wTemp)^080h
  2419  023D  01BF               	clrf	(main@wTemp+1)^080h
  2420  023E  01C0               	line	204
  2421                           	goto	l2795
  2422  023F  2AD7               	
  2423                           l123:	
  2424  0240                     	line	206
  2425                           	
  2426                           l2759:	
  2427  0240                     	fcall	_clearDisplay
  2428  0240  318C  2406  3181   	line	207
  2429                           	fcall	_moveCursorToHome
  2430  0243  318C  241D  3181   	line	208
  2431                           	
  2432                           l2761:	
  2433  0246                     	opt asmopt_push
  2434                           opt asmopt_off
  2435                           movlw  21
  2436  0246  3015               	movlb 1	; select bank1
  2437  0247  0021               movwf	((??_main+0)^080h+0+1),f
  2438  0248  00BE               movlw	75
  2439  0249  304B               movwf	((??_main+0)^080h+0),f
  2440  024A  00BD               	movlw	190
  2441  024B  30BE               u2087:
  2442  024C                     decfsz	wreg
  2443  024C  0B89               	goto	u2087
  2444  024D  2A4C               	decfsz	((??_main+0)^080h+0),f
  2445  024E  0BBD               	goto	u2087
  2446  024F  2A4C               	decfsz	((??_main+0)^080h+0+1),f
  2447  0250  0BBE               	goto	u2087
  2448  0251  2A4C               	nop
  2449  0252  0000               opt asmopt_pop
  2450                           
  2451                           	line	210
  2452                           	
  2453                           l2763:	
  2454  0253                     	movlw	low(04Bh)
  2455  0253  304B               	movlb 1	; select bank1
  2456  0254  0021               	movwf	(??_main+0)^080h+0
  2457  0255  00BD               	movf	(??_main+0)^080h+0,w
  2458  0256  083D               	movwf	(Add_Trace@iSizeOfoText)^080h
  2459  0257  00B3               	movlw	low(((STR_1)|8000h))
  2460  0258  301E               	movwf	(Add_Trace@iText)^080h
  2461  0259  00B4               	movlw	high(((STR_1)|8000h))
  2462  025A  3090               	movwf	((Add_Trace@iText)^080h)+1
  2463  025B  00B5               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2464  025C  30A0               	fcall	_Add_Trace
  2465  025D  318E  26D4  3181   	line	211
  2466                           	
  2467                           l2765:	
  2468  0260                     	fcall	_WakeTemp
  2469  0260  3187  27EB  3181   	line	212
  2470                           	
  2471                           l2767:	
  2472  0263                     	opt asmopt_push
  2473                           opt asmopt_off
  2474                           movlw	6
  2475  0263  3006               	movlb 1	; select bank1
  2476  0264  0021               movwf	((??_main+0)^080h+0),f
  2477  0265  00BD               	movlw	48
  2478  0266  3030               u2097:
  2479  0267                     decfsz	wreg
  2480  0267  0B89               	goto	u2097
  2481  0268  2A67               	decfsz	((??_main+0)^080h+0),f
  2482  0269  0BBD               	goto	u2097
  2483  026A  2A67               	nop
  2484  026B  0000               opt asmopt_pop
  2485                           
  2486                           	line	214
  2487                           	movlw	low(04Bh)
  2488  026C  304B               	movlb 1	; select bank1
  2489  026D  0021               	movwf	(??_main+0)^080h+0
  2490  026E  00BD               	movf	(??_main+0)^080h+0,w
  2491  026F  083D               	movwf	(Add_Trace@iSizeOfoText)^080h
  2492  0270  00B3               	movlw	low(((STR_2)|8000h))
  2493  0271  300C               	movwf	(Add_Trace@iText)^080h
  2494  0272  00B4               	movlw	high(((STR_2)|8000h))
  2495  0273  3090               	movwf	((Add_Trace@iText)^080h)+1
  2496  0274  00B5               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2497  0275  30A0               	fcall	_Add_Trace
  2498  0276  318E  26D4  3181   	line	215
  2499                           	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2500  0279  30A0               	fcall	_PrintLog
  2501  027A  318E  263F  3181   	line	216
  2502                           	
  2503                           l2769:	
  2504  027D                     	fcall	_SetToGetTemp
  2505  027D  318C  24C3  3181   	line	217
  2506                           	
  2507                           l2771:	
  2508  0280                     	opt asmopt_push
  2509                           opt asmopt_off
  2510                           movlw	8
  2511  0280  3008               	movlb 1	; select bank1
  2512  0281  0021               movwf	((??_main+0)^080h+0),f
  2513  0282  00BD               	movlw	201
  2514  0283  30C9               u2107:
  2515  0284                     decfsz	wreg
  2516  0284  0B89               	goto	u2107
  2517  0285  2A84               	decfsz	((??_main+0)^080h+0),f
  2518  0286  0BBD               	goto	u2107
  2519  0287  2A84               	nop2
  2520  0288  3200               opt asmopt_pop
  2521                           
  2522                           	line	219
  2523                           	
  2524                           l2773:	
  2525  0289                     	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2526  0289  30A0               	fcall	_PrintLog
  2527  028A  318E  263F  3181   	line	221
  2528                           	
  2529                           l2775:	
  2530  028D                     	movlw	low(04Bh)
  2531  028D  304B               	movlb 1	; select bank1
  2532  028E  0021               	movwf	(??_main+0)^080h+0
  2533  028F  00BD               	movf	(??_main+0)^080h+0,w
  2534  0290  083D               	movwf	(Add_Trace@iSizeOfoText)^080h
  2535  0291  00B3               	movlw	low(((STR_3)|8000h))
  2536  0292  301A               	movwf	(Add_Trace@iText)^080h
  2537  0293  00B4               	movlw	high(((STR_3)|8000h))
  2538  0294  3090               	movwf	((Add_Trace@iText)^080h)+1
  2539  0295  00B5               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2540  0296  30A0               	fcall	_Add_Trace
  2541  0297  318E  26D4  3181   	line	222
  2542                           	
  2543                           l2777:	
  2544  029A                     	fcall	_GetTemp
  2545  029A  318D  2598  3181   	line	224
  2546                           	
  2547                           l2779:	
  2548  029D                     	opt asmopt_push
  2549                           opt asmopt_off
  2550                           movlw  41
  2551  029D  3029               	movlb 1	; select bank1
  2552  029E  0021               movwf	((??_main+0)^080h+0+1),f
  2553  029F  00BE               movlw	150
  2554  02A0  3096               movwf	((??_main+0)^080h+0),f
  2555  02A1  00BD               	movlw	127
  2556  02A2  307F               u2117:
  2557  02A3                     decfsz	wreg
  2558  02A3  0B89               	goto	u2117
  2559  02A4  2AA3               	decfsz	((??_main+0)^080h+0),f
  2560  02A5  0BBD               	goto	u2117
  2561  02A6  2AA3               	decfsz	((??_main+0)^080h+0+1),f
  2562  02A7  0BBE               	goto	u2117
  2563  02A8  2AA3               opt asmopt_pop
  2564                           
  2565                           	line	225
  2566                           	
  2567                           l2781:	
  2568  02A9                     	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2569  02A9  30A0               	fcall	_PrintLog
  2570  02AA  318E  263F  3181   	line	227
  2571                           	
  2572                           l2783:	
  2573  02AD                     	movlb 1	; select bank1
  2574  02AD  0021               	movf	(main@wCounter)^080h,w
  2575  02AE  0845               	addlw	02h
  2576  02AF  3E02               	movwf	(main@wCounter)^080h
  2577  02B0  00C5               	movlw	0
  2578  02B1  3000               	addwfc	(main@wCounter+1)^080h,w
  2579  02B2  3D46               	movwf	1+(main@wCounter)^080h
  2580  02B3  00C6               	line	228
  2581                           	
  2582                           l2785:	
  2583  02B4                     		movlw	4
  2584  02B4  3004               	xorwf	((main@wCounter)^080h),w
  2585  02B5  0645               iorwf	((main@wCounter+1)^080h),w
  2586  02B6  0446               	btfss	status,2
  2587  02B7  1D03               	goto	u2011
  2588  02B8  2ABA               	goto	u2010
  2589  02B9  2ABB               u2011:
  2590  02BA                     	goto	l2789
  2591  02BA  2ABE               u2010:
  2592  02BB                     	line	230
  2593                           	
  2594                           l2787:	
  2595  02BB                     	clrf	(main@wCounter)^080h
  2596  02BB  01C5               	clrf	(main@wCounter+1)^080h
  2597  02BC  01C6               	goto	l2789
  2598  02BD  2ABE               	line	231
  2599                           	
  2600                           l124:	
  2601  02BE                     	line	234
  2602                           	
  2603                           l2789:	
  2604  02BE                     	movf	(main@wCounter)^080h,w
  2605  02BE  0845               	addlw	low(main@wConv|((0x0)<<8))&0ffh
  2606  02BF  3EC1               	movwf	(lcdWriteText@iText)^080h
  2607  02C0  00AD               	movlw	0x0
  2608  02C1  3000               
  2609                           	movwf	(lcdWriteText@iText+1)^080h
  2610  02C2  00AE               	fcall	_lcdWriteText
  2611  02C3  318D  2572  3181   	line	235
  2612                           	
  2613                           l2791:	
  2614  02C6                     	opt asmopt_push
  2615                           opt asmopt_off
  2616                           movlw  203
  2617  02C6  30CB               	movlb 1	; select bank1
  2618  02C7  0021               movwf	((??_main+0)^080h+0+1),f
  2619  02C8  00BE               movlw	236
  2620  02C9  30EC               movwf	((??_main+0)^080h+0),f
  2621  02CA  00BD               	movlw	132
  2622  02CB  3084               u2127:
  2623  02CC                     decfsz	wreg
  2624  02CC  0B89               	goto	u2127
  2625  02CD  2ACC               	decfsz	((??_main+0)^080h+0),f
  2626  02CE  0BBD               	goto	u2127
  2627  02CF  2ACC               	decfsz	((??_main+0)^080h+0+1),f
  2628  02D0  0BBE               	goto	u2127
  2629  02D1  2ACC               	nop
  2630  02D2  0000               opt asmopt_pop
  2631                           
  2632                           	line	236
  2633                           	
  2634                           l2793:	
  2635  02D3                     	movlb 1	; select bank1
  2636  02D3  0021               	clrf	(_test)^080h
  2637  02D4  01C7               	clrf	(_test+1)^080h
  2638  02D5  01C8               	goto	l2795
  2639  02D6  2AD7               	line	237
  2640                           	
  2641                           l122:	
  2642  02D7                     	line	204
  2643                           	
  2644                           l2795:	
  2645  02D7                     	btfsc	(11),7	;volatile
  2646  02D7  1B8B               	goto	u2021
  2647  02D8  2ADA               	goto	u2020
  2648  02D9  2ADB               u2021:
  2649  02DA                     	goto	l2759
  2650  02DA  2A40               u2020:
  2651  02DB                     	goto	l126
  2652  02DB  2ADC               	
  2653                           l125:	
  2654  02DC                     	line	239
  2655                           	
  2656                           l126:	
  2657  02DC                     	global	start
  2658                           	ljmp	start
  2659  02DC  3181  2958         	opt stack 0
  2660                           GLOBAL	__end_of_main
  2661                           	__end_of_main:
  2662  02DE                     	signat	_main,89
  2663                           	global	_setNotBlinkingCursor
  2664                           
  2665 ;; *************** function _setNotBlinkingCursor *****************
  2666 ;; Defined at:
  2667 ;;		line 178 in file "LCD_hd44780u_qy_2004a.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;		None
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      void 
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0, pclath, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2683 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  2684 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  2685 ;;Total ram usage:        1 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:   12
  2688 ;; This function calls:
  2689 ;;		_writeInsChk
  2690 ;; This function is called by:
  2691 ;;		_main
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2695                           	file	"LCD_hd44780u_qy_2004a.c"
  2696                           	line	178
  2697                           global __ptext1
  2698                           __ptext1:	;psect for function _setNotBlinkingCursor
  2699  0C50                     psect	text1
  2700                           	file	"LCD_hd44780u_qy_2004a.c"
  2701                           	line	178
  2702                           	global	__size_of_setNotBlinkingCursor
  2703                           	__size_of_setNotBlinkingCursor	equ	__end_of_setNotBlinkingCursor-_setNotBlinkingCursor

  2704  000B                     	
  2705                           _setNotBlinkingCursor:	
  2706  0C50                     ;incstack = 0
  2707                           	opt	stack 3
  2708                           ; Regs used in _setNotBlinkingCursor: [wreg+status,2+status,0+pclath+cstack]
  2709                           	line	180
  2710                           	
  2711                           l2263:	
  2712  0C50                     ;LCD_hd44780u_qy_2004a.c: 180:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFE;
  2713                           	movlb 1	; select bank1
  2714  0C50  0021               	movf	(_mDisplayOnOffReg)^080h,w
  2715  0C51  084C               	andlw	0FEh
  2716  0C52  39FE               	movwf	(??_setNotBlinkingCursor+0)^080h+0
  2717  0C53  00A6               	movf	(??_setNotBlinkingCursor+0)^080h+0,w
  2718  0C54  0826               	movwf	(_mDisplayOnOffReg)^080h
  2719  0C55  00CC               	line	181
  2720                           	
  2721                           l2265:	
  2722  0C56                     ;LCD_hd44780u_qy_2004a.c: 181:   writeInsChk(mDisplayOnOffReg);
  2723                           	movf	(_mDisplayOnOffReg)^080h,w
  2724  0C56  084C               	fcall	_writeInsChk
  2725  0C57  318C  242F  318C   	line	182
  2726                           	
  2727                           l250:	
  2728  0C5A                     	return
  2729  0C5A  0008               	opt stack 0
  2730                           GLOBAL	__end_of_setNotBlinkingCursor
  2731                           	__end_of_setNotBlinkingCursor:
  2732  0C5B                     	signat	_setNotBlinkingCursor,89
  2733                           	global	_setCursorOff
  2734                           
  2735 ;; *************** function _setCursorOff *****************
  2736 ;; Defined at:
  2737 ;;		line 183 in file "LCD_hd44780u_qy_2004a.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;		None
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;		None
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  1    wreg      void 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0, pclath, cstack
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2753 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  2754 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  2755 ;;Total ram usage:        1 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:   12
  2758 ;; This function calls:
  2759 ;;		_writeInsChk
  2760 ;; This function is called by:
  2761 ;;		_main
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2765                           	line	183
  2766                           global __ptext2
  2767                           __ptext2:	;psect for function _setCursorOff
  2768  0C45                     psect	text2
  2769                           	file	"LCD_hd44780u_qy_2004a.c"
  2770                           	line	183
  2771                           	global	__size_of_setCursorOff
  2772                           	__size_of_setCursorOff	equ	__end_of_setCursorOff-_setCursorOff
  2773  000B                     	
  2774                           _setCursorOff:	
  2775  0C45                     ;incstack = 0
  2776                           	opt	stack 3
  2777                           ; Regs used in _setCursorOff: [wreg+status,2+status,0+pclath+cstack]
  2778                           	line	185
  2779                           	
  2780                           l2255:	
  2781  0C45                     ;LCD_hd44780u_qy_2004a.c: 185:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFD;
  2782                           	movlb 1	; select bank1
  2783  0C45  0021               	movf	(_mDisplayOnOffReg)^080h,w
  2784  0C46  084C               	andlw	0FDh
  2785  0C47  39FD               	movwf	(??_setCursorOff+0)^080h+0
  2786  0C48  00A6               	movf	(??_setCursorOff+0)^080h+0,w
  2787  0C49  0826               	movwf	(_mDisplayOnOffReg)^080h
  2788  0C4A  00CC               	line	186
  2789                           	
  2790                           l2257:	
  2791  0C4B                     ;LCD_hd44780u_qy_2004a.c: 186:   writeInsChk(mDisplayOnOffReg);
  2792                           	movf	(_mDisplayOnOffReg)^080h,w
  2793  0C4B  084C               	fcall	_writeInsChk
  2794  0C4C  318C  242F  318C   	line	187
  2795                           	
  2796                           l253:	
  2797  0C4F                     	return
  2798  0C4F  0008               	opt stack 0
  2799                           GLOBAL	__end_of_setCursorOff
  2800                           	__end_of_setCursorOff:
  2801  0C50                     	signat	_setCursorOff,89
  2802                           	global	_powerOnLcd
  2803                           
  2804 ;; *************** function _powerOnLcd *****************
  2805 ;; Defined at:
  2806 ;;		line 168 in file "LCD_hd44780u_qy_2004a.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;		None
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;		None
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0, pclath, cstack
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2822 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  2823 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  2824 ;;Total ram usage:        1 bytes
  2825 ;; Hardware stack levels used:    1
  2826 ;; Hardware stack levels required when called:   12
  2827 ;; This function calls:
  2828 ;;		_writeInsChk
  2829 ;; This function is called by:
  2830 ;;		_main
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2834                           	line	168
  2835                           global __ptext3
  2836                           __ptext3:	;psect for function _powerOnLcd
  2837  0C3A                     psect	text3
  2838                           	file	"LCD_hd44780u_qy_2004a.c"
  2839                           	line	168
  2840                           	global	__size_of_powerOnLcd
  2841                           	__size_of_powerOnLcd	equ	__end_of_powerOnLcd-_powerOnLcd
  2842  000B                     	
  2843                           _powerOnLcd:	
  2844  0C3A                     ;incstack = 0
  2845                           	opt	stack 3
  2846                           ; Regs used in _powerOnLcd: [wreg+status,2+status,0+pclath+cstack]
  2847                           	line	170
  2848                           	
  2849                           l2251:	
  2850  0C3A                     ;LCD_hd44780u_qy_2004a.c: 170:   mDisplayOnOffReg = mDisplayOnOffReg | 0x04;
  2851                           	movlb 1	; select bank1
  2852  0C3A  0021               	movf	(_mDisplayOnOffReg)^080h,w
  2853  0C3B  084C               	iorlw	04h
  2854  0C3C  3804               	movwf	(??_powerOnLcd+0)^080h+0
  2855  0C3D  00A6               	movf	(??_powerOnLcd+0)^080h+0,w
  2856  0C3E  0826               	movwf	(_mDisplayOnOffReg)^080h
  2857  0C3F  00CC               	line	171
  2858                           	
  2859                           l2253:	
  2860  0C40                     ;LCD_hd44780u_qy_2004a.c: 171:   writeInsChk(mDisplayOnOffReg);
  2861                           	movf	(_mDisplayOnOffReg)^080h,w
  2862  0C40  084C               	fcall	_writeInsChk
  2863  0C41  318C  242F  318C   	line	172
  2864                           	
  2865                           l244:	
  2866  0C44                     	return
  2867  0C44  0008               	opt stack 0
  2868                           GLOBAL	__end_of_powerOnLcd
  2869                           	__end_of_powerOnLcd:
  2870  0C45                     	signat	_powerOnLcd,89
  2871                           	global	_moveCursorToHome
  2872                           
  2873 ;; *************** function _moveCursorToHome *****************
  2874 ;; Defined at:
  2875 ;;		line 229 in file "LCD_hd44780u_qy_2004a.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, status,2, status,0, pclath, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2893 ;;Total ram usage:        0 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:   12
  2896 ;; This function calls:
  2897 ;;		_writeInsChk
  2898 ;; This function is called by:
  2899 ;;		_main
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2903                           	line	229
  2904                           global __ptext4
  2905                           __ptext4:	;psect for function _moveCursorToHome
  2906  0C1D                     psect	text4
  2907                           	file	"LCD_hd44780u_qy_2004a.c"
  2908                           	line	229
  2909                           	global	__size_of_moveCursorToHome
  2910                           	__size_of_moveCursorToHome	equ	__end_of_moveCursorToHome-_moveCursorToHome
  2911  0008                     	
  2912                           _moveCursorToHome:	
  2913  0C1D                     ;incstack = 0
  2914                           	opt	stack 3
  2915                           ; Regs used in _moveCursorToHome: [wreg+status,2+status,0+pclath+cstack]
  2916                           	line	231
  2917                           	
  2918                           l2259:	
  2919  0C1D                     ;LCD_hd44780u_qy_2004a.c: 231:   writeInsChk(0x02);
  2920                           	movlw	low(02h)
  2921  0C1D  3002               	fcall	_writeInsChk
  2922  0C1E  318C  242F  318C   	line	232
  2923                           	
  2924                           l2261:	
  2925  0C21                     ;LCD_hd44780u_qy_2004a.c: 232:   mWritingPosition=1;
  2926                           	movlb 1	; select bank1
  2927  0C21  0021               	clrf	(_mWritingPosition)^080h
  2928  0C22  01CA               	incf	(_mWritingPosition)^080h,f
  2929  0C23  0ACA               	line	233
  2930                           	
  2931                           l280:	
  2932  0C24                     	return
  2933  0C24  0008               	opt stack 0
  2934                           GLOBAL	__end_of_moveCursorToHome
  2935                           	__end_of_moveCursorToHome:
  2936  0C25                     	signat	_moveCursorToHome,89
  2937                           	global	_initLCD
  2938                           
  2939 ;; *************** function _initLCD *****************
  2940 ;; Defined at:
  2941 ;;		line 10 in file "LCD_hd44780u_qy_2004a.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;		None
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;		None
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      void 
  2948 ;; Registers used:
  2949 ;;		wreg, status,2, status,0, pclath, cstack
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2957 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  2958 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  2959 ;;Total ram usage:        1 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; Hardware stack levels required when called:   13
  2962 ;; This function calls:
  2963 ;;		_clearDisplay
  2964 ;;		_setData
  2965 ;;		_writeInsChk
  2966 ;; This function is called by:
  2967 ;;		_main
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2971                           	line	10
  2972                           global __ptext5
  2973                           __ptext5:	;psect for function _initLCD
  2974  0F5B                     psect	text5
  2975                           	file	"LCD_hd44780u_qy_2004a.c"
  2976                           	line	10
  2977                           	global	__size_of_initLCD
  2978                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  2979  0050                     	
  2980                           _initLCD:	
  2981  0F5B                     ;incstack = 0
  2982                           	opt	stack 2
  2983                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  2984                           	line	13
  2985                           	
  2986                           l2229:	
  2987  0F5B                     ;LCD_hd44780u_qy_2004a.c: 13:   TRISAbits.TRISA4 = 0;
  2988                           	movlb 1	; select bank1
  2989  0F5B  0021               	bcf	(140)^080h,4	;volatile
  2990  0F5C  120C               	line	14
  2991                           ;LCD_hd44780u_qy_2004a.c: 14:   TRISAbits.TRISA7 = 0;
  2992                           	bcf	(140)^080h,7	;volatile
  2993  0F5D  138C               	line	15
  2994                           ;LCD_hd44780u_qy_2004a.c: 15:   TRISAbits.TRISA5 = 0;
  2995                           	bcf	(140)^080h,5	;volatile
  2996  0F5E  128C               	line	16
  2997                           ;LCD_hd44780u_qy_2004a.c: 16:   PORTAbits.RA4 = 0;
  2998                           	movlb 0	; select bank0
  2999  0F5F  0020               	bcf	(12),4	;volatile
  3000  0F60  120C               	line	17
  3001                           ;LCD_hd44780u_qy_2004a.c: 17:   PORTAbits.RA7 = 0;
  3002                           	bcf	(12),7	;volatile
  3003  0F61  138C               	line	18
  3004                           ;LCD_hd44780u_qy_2004a.c: 18:   PORTAbits.RA5 = 0;
  3005                           	bcf	(12),5	;volatile
  3006  0F62  128C               	line	21
  3007                           	
  3008                           l2231:	
  3009  0F63                     ;LCD_hd44780u_qy_2004a.c: 21:   _delay((unsigned long)((15)*(16000000/4000.0)));
  3010                           	opt asmopt_push
  3011                           opt asmopt_off
  3012                           movlw	78
  3013  0F63  304E               	movlb 1	; select bank1
  3014  0F64  0021               movwf	((??_initLCD+0)^080h+0),f
  3015  0F65  00A6               	movlw	235
  3016  0F66  30EB               u2137:
  3017  0F67                     decfsz	wreg
  3018  0F67  0B89               	goto	u2137
  3019  0F68  2F67               	decfsz	((??_initLCD+0)^080h+0),f
  3020  0F69  0BA6               	goto	u2137
  3021  0F6A  2F67               opt asmopt_pop
  3022                           
  3023                           	line	22
  3024                           	
  3025                           l2233:	
  3026  0F6B                     ;LCD_hd44780u_qy_2004a.c: 22:   setData(0x3);
  3027                           	movlw	low(03h)
  3028  0F6B  3003               	fcall	_setData
  3029  0F6C  318F  270E  318F   	line	23
  3030                           	
  3031                           l2235:	
  3032  0F6F                     ;LCD_hd44780u_qy_2004a.c: 23:   _delay((unsigned long)((5)*(16000000/4000.0)));
  3033                           	opt asmopt_push
  3034                           opt asmopt_off
  3035                           movlw	26
  3036  0F6F  301A               	movlb 1	; select bank1
  3037  0F70  0021               movwf	((??_initLCD+0)^080h+0),f
  3038  0F71  00A6               	movlw	248
  3039  0F72  30F8               u2147:
  3040  0F73                     decfsz	wreg
  3041  0F73  0B89               	goto	u2147
  3042  0F74  2F73               	decfsz	((??_initLCD+0)^080h+0),f
  3043  0F75  0BA6               	goto	u2147
  3044  0F76  2F73               	nop
  3045  0F77  0000               opt asmopt_pop
  3046                           
  3047                           	line	24
  3048                           ;LCD_hd44780u_qy_2004a.c: 24:   setData(0x3);
  3049                           	movlw	low(03h)
  3050  0F78  3003               	fcall	_setData
  3051  0F79  318F  270E  318F   	line	25
  3052                           	
  3053                           l2237:	
  3054  0F7C                     ;LCD_hd44780u_qy_2004a.c: 25:   _delay((unsigned long)((150)*(16000000/4000000.0)));
  3055                           	opt asmopt_push
  3056                           opt asmopt_off
  3057                           	movlw	200
  3058  0F7C  30C8               u2157:
  3059  0F7D                     decfsz	wreg
  3060  0F7D  0B89               	goto	u2157
  3061  0F7E  2F7D               opt asmopt_pop
  3062                           
  3063                           	line	26
  3064                           	
  3065                           l2239:	
  3066  0F7F                     ;LCD_hd44780u_qy_2004a.c: 26:   setData(0x3);
  3067                           	movlw	low(03h)
  3068  0F7F  3003               	fcall	_setData
  3069  0F80  318F  270E  318F   	line	27
  3070                           ;LCD_hd44780u_qy_2004a.c: 27:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  3071                           	opt asmopt_push
  3072                           opt asmopt_off
  3073                           	movlw	13
  3074  0F83  300D               u2167:
  3075  0F84                     decfsz	wreg
  3076  0F84  0B89               	goto	u2167
  3077  0F85  2F84               	nop
  3078  0F86  0000               opt asmopt_pop
  3079                           
  3080                           	line	28
  3081                           	
  3082                           l2241:	
  3083  0F87                     ;LCD_hd44780u_qy_2004a.c: 28:   setData(0x2);
  3084                           	movlw	low(02h)
  3085  0F87  3002               	fcall	_setData
  3086  0F88  318F  270E  318F   	line	29
  3087                           	
  3088                           l2243:	
  3089  0F8B                     ;LCD_hd44780u_qy_2004a.c: 29:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  3090                           	opt asmopt_push
  3091                           opt asmopt_off
  3092                           	movlw	13
  3093  0F8B  300D               u2177:
  3094  0F8C                     decfsz	wreg
  3095  0F8C  0B89               	goto	u2177
  3096  0F8D  2F8C               	nop
  3097  0F8E  0000               opt asmopt_pop
  3098                           
  3099                           	line	30
  3100                           ;LCD_hd44780u_qy_2004a.c: 30:   writeInsChk(0x28);
  3101                           	movlw	low(028h)
  3102  0F8F  3028               	fcall	_writeInsChk
  3103  0F90  318C  242F  318F   	line	31
  3104                           	
  3105                           l2245:	
  3106  0F93                     ;LCD_hd44780u_qy_2004a.c: 31:   mDisplayOnOffReg = 0x0F;
  3107                           	movlw	low(0Fh)
  3108  0F93  300F               	movlb 1	; select bank1
  3109  0F94  0021               	movwf	(??_initLCD+0)^080h+0
  3110  0F95  00A6               	movf	(??_initLCD+0)^080h+0,w
  3111  0F96  0826               	movwf	(_mDisplayOnOffReg)^080h
  3112  0F97  00CC               	line	32
  3113                           	
  3114                           l2247:	
  3115  0F98                     ;LCD_hd44780u_qy_2004a.c: 32:   mCursorDisplayShiftReg= 0x06;
  3116                           	movlw	low(06h)
  3117  0F98  3006               	movwf	(??_initLCD+0)^080h+0
  3118  0F99  00A6               	movf	(??_initLCD+0)^080h+0,w
  3119  0F9A  0826               	movwf	(_mCursorDisplayShiftReg)^080h
  3120  0F9B  00CB               	line	33
  3121                           ;LCD_hd44780u_qy_2004a.c: 33:   writeInsChk(mDisplayOnOffReg);
  3122                           	movf	(_mDisplayOnOffReg)^080h,w
  3123  0F9C  084C               	fcall	_writeInsChk
  3124  0F9D  318C  242F  318F   	line	35
  3125                           ;LCD_hd44780u_qy_2004a.c: 35:   clearDisplay();
  3126                           	fcall	_clearDisplay
  3127  0FA0  318C  2406  318F   	line	36
  3128                           ;LCD_hd44780u_qy_2004a.c: 36:   writeInsChk(0x06);
  3129                           	movlw	low(06h)
  3130  0FA3  3006               	fcall	_writeInsChk
  3131  0FA4  318C  242F  318F   	line	37
  3132                           	
  3133                           l2249:	
  3134  0FA7                     ;LCD_hd44780u_qy_2004a.c: 37:   mWritingPosition=1;
  3135                           	movlb 1	; select bank1
  3136  0FA7  0021               	clrf	(_mWritingPosition)^080h
  3137  0FA8  01CA               	incf	(_mWritingPosition)^080h,f
  3138  0FA9  0ACA               	line	39
  3139                           	
  3140                           l192:	
  3141  0FAA                     	return
  3142  0FAA  0008               	opt stack 0
  3143                           GLOBAL	__end_of_initLCD
  3144                           	__end_of_initLCD:
  3145  0FAB                     	signat	_initLCD,89
  3146                           	global	_clearDisplay
  3147                           
  3148 ;; *************** function _clearDisplay *****************
  3149 ;; Defined at:
  3150 ;;		line 225 in file "LCD_hd44780u_qy_2004a.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;		None
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2, status,0, pclath, cstack
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3168 ;;Total ram usage:        0 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:   12
  3171 ;; This function calls:
  3172 ;;		_writeInsChk
  3173 ;; This function is called by:
  3174 ;;		_main
  3175 ;;		_initLCD
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3179                           	line	225
  3180                           global __ptext6
  3181                           __ptext6:	;psect for function _clearDisplay
  3182  0C06                     psect	text6
  3183                           	file	"LCD_hd44780u_qy_2004a.c"
  3184                           	line	225
  3185                           	global	__size_of_clearDisplay
  3186                           	__size_of_clearDisplay	equ	__end_of_clearDisplay-_clearDisplay
  3187  0005                     	
  3188                           _clearDisplay:	
  3189  0C06                     ;incstack = 0
  3190                           	opt	stack 2
  3191                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  3192                           	line	227
  3193                           	
  3194                           l2155:	
  3195  0C06                     ;LCD_hd44780u_qy_2004a.c: 227:   writeInsChk(0x01);
  3196                           	movlw	low(01h)
  3197  0C06  3001               	fcall	_writeInsChk
  3198  0C07  318C  242F  318C   	line	228
  3199                           	
  3200                           l277:	
  3201  0C0A                     	return
  3202  0C0A  0008               	opt stack 0
  3203                           GLOBAL	__end_of_clearDisplay
  3204                           	__end_of_clearDisplay:
  3205  0C0B                     	signat	_clearDisplay,89
  3206                           	global	_writeInsChk
  3207                           
  3208 ;; *************** function _writeInsChk *****************
  3209 ;; Defined at:
  3210 ;;		line 112 in file "LCD_hd44780u_qy_2004a.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  iOpCode         1    wreg     unsigned char 
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;  iOpCode         1    5[BANK1 ] unsigned char 
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      void 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2, status,0, pclath, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3225 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  3226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3227 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  3228 ;;Total ram usage:        1 bytes
  3229 ;; Hardware stack levels used:    1
  3230 ;; Hardware stack levels required when called:   11
  3231 ;; This function calls:
  3232 ;;		_waitLCDBusy
  3233 ;;		_writeInsNoChk
  3234 ;; This function is called by:
  3235 ;;		_initLCD
  3236 ;;		_powerOnLcd
  3237 ;;		_setNotBlinkingCursor
  3238 ;;		_setCursorOff
  3239 ;;		_clearDisplay
  3240 ;;		_moveCursorToHome
  3241 ;;		_powerOffLcd
  3242 ;;		_setBlinkingCursor
  3243 ;;		_setCursorOn
  3244 ;;		_setCursorMovingLeft
  3245 ;;		_setCursorMovingRight
  3246 ;;		_setDisplayMovingRight
  3247 ;;		_setDisplayMovingLeft
  3248 ;;		_moveCursorRight
  3249 ;;		_moveCursorLeft
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3253                           	line	112
  3254                           global __ptext7
  3255                           __ptext7:	;psect for function _writeInsChk
  3256  0C2F                     psect	text7
  3257                           	file	"LCD_hd44780u_qy_2004a.c"
  3258                           	line	112
  3259                           	global	__size_of_writeInsChk
  3260                           	__size_of_writeInsChk	equ	__end_of_writeInsChk-_writeInsChk
  3261  000B                     	
  3262                           _writeInsChk:	
  3263  0C2F                     ;incstack = 0
  3264                           	opt	stack 3
  3265                           ; Regs used in _writeInsChk: [wreg+status,2+status,0+pclath+cstack]
  3266                           ;writeInsChk@iOpCode stored from wreg
  3267                           	movlb 1	; select bank1
  3268  0C2F  0021               	movwf	(writeInsChk@iOpCode)^080h
  3269  0C30  00A5               	line	114
  3270                           	
  3271                           l2005:	
  3272  0C31                     ;LCD_hd44780u_qy_2004a.c: 112: void writeInsChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 13: {;LCD_hd44780u_qy_2004a.c: 114:   waitLCDBusy();
  3273                           	fcall	_waitLCDBusy
  3274  0C31  318E  266A  318C   	line	115
  3275                           ;LCD_hd44780u_qy_2004a.c: 115:   writeInsNoChk(iOpCode);
  3276                           	movlb 1	; select bank1
  3277  0C34  0021               	movf	(writeInsChk@iOpCode)^080h,w
  3278  0C35  0825               	fcall	_writeInsNoChk
  3279  0C36  318C  248D  318C   	line	116
  3280                           	
  3281                           l223:	
  3282  0C39                     	return
  3283  0C39  0008               	opt stack 0
  3284                           GLOBAL	__end_of_writeInsChk
  3285                           	__end_of_writeInsChk:
  3286  0C3A                     	signat	_writeInsChk,4217
  3287                           	global	_writeInsNoChk
  3288                           
  3289 ;; *************** function _writeInsNoChk *****************
  3290 ;; Defined at:
  3291 ;;		line 118 in file "LCD_hd44780u_qy_2004a.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  iOpCode         1    wreg     unsigned char 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  iOpCode         1    4[BANK1 ] unsigned char 
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      void 
  3298 ;; Registers used:
  3299 ;;		wreg, status,2, status,0, pclath, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3306 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  3307 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  3308 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  3309 ;;Total ram usage:        2 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:   10
  3312 ;; This function calls:
  3313 ;;		_SetToSendDataToLCD
  3314 ;;		_setData
  3315 ;; This function is called by:
  3316 ;;		_writeInsChk
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3320                           	line	118
  3321                           global __ptext8
  3322                           __ptext8:	;psect for function _writeInsNoChk
  3323  0C8D                     psect	text8
  3324                           	file	"LCD_hd44780u_qy_2004a.c"
  3325                           	line	118
  3326                           	global	__size_of_writeInsNoChk
  3327                           	__size_of_writeInsNoChk	equ	__end_of_writeInsNoChk-_writeInsNoChk
  3328  0019                     	
  3329                           _writeInsNoChk:	
  3330  0C8D                     ;incstack = 0
  3331                           	opt	stack 3
  3332                           ; Regs used in _writeInsNoChk: [wreg+status,2+status,0+pclath+cstack]
  3333                           ;writeInsNoChk@iOpCode stored from wreg
  3334                           	movlb 1	; select bank1
  3335  0C8D  0021               	movwf	(writeInsNoChk@iOpCode)^080h
  3336  0C8E  00A4               	line	120
  3337                           	
  3338                           l1927:	
  3339  0C8F                     ;LCD_hd44780u_qy_2004a.c: 118: void writeInsNoChk(char iOpCode);LCD_hd44780u_qy_2004a.c:
                                  119: {;LCD_hd44780u_qy_2004a.c: 120:   SetToSendDataToLCD();
  3340                           	fcall	_SetToSendDataToLCD
  3341  0C8F  318C  240B  318C   	line	121
  3342                           	
  3343                           l1929:	
  3344  0C92                     ;LCD_hd44780u_qy_2004a.c: 121:   PORTAbits.RA4 = 0;
  3345                           	movlb 0	; select bank0
  3346  0C92  0020               	bcf	(12),4	;volatile
  3347  0C93  120C               	line	122
  3348                           	
  3349                           l1931:	
  3350  0C94                     ;LCD_hd44780u_qy_2004a.c: 122:   PORTAbits.RA7 = 0;
  3351                           	bcf	(12),7	;volatile
  3352  0C94  138C               	line	123
  3353                           	
  3354                           l1933:	
  3355  0C95                     ;LCD_hd44780u_qy_2004a.c: 123:   setData(iOpCode >> 4);
  3356                           	movlb 1	; select bank1
  3357  0C95  0021               	movf	(writeInsNoChk@iOpCode)^080h,w
  3358  0C96  0824               	movwf	(??_writeInsNoChk+0)^080h+0
  3359  0C97  00A3               	movlw	04h
  3360  0C98  3004               u1315:
  3361  0C99                     	lsrf	(??_writeInsNoChk+0)^080h+0,f
  3362  0C99  36A3               	decfsz	wreg,f
  3363  0C9A  0B89               	goto	u1315
  3364  0C9B  2C99               	movf	0+(??_writeInsNoChk+0)^080h+0,w
  3365  0C9C  0823               	fcall	_setData
  3366  0C9D  318F  270E  318C   	line	124
  3367                           	
  3368                           l1935:	
  3369  0CA0                     ;LCD_hd44780u_qy_2004a.c: 124:   setData(iOpCode);
  3370                           	movlb 1	; select bank1
  3371  0CA0  0021               	movf	(writeInsNoChk@iOpCode)^080h,w
  3372  0CA1  0824               	fcall	_setData
  3373  0CA2  318F  270E  318C   	line	125
  3374                           	
  3375                           l226:	
  3376  0CA5                     	return
  3377  0CA5  0008               	opt stack 0
  3378                           GLOBAL	__end_of_writeInsNoChk
  3379                           	__end_of_writeInsNoChk:
  3380  0CA6                     	signat	_writeInsNoChk,4217
  3381                           	global	_WakeTemp
  3382                           
  3383 ;; *************** function _WakeTemp *****************
  3384 ;; Defined at:
  3385 ;;		line 98 in file "161518_temp_main.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;		None
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3401 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  3402 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  3403 ;;Total ram usage:        1 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:    9
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_main
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3413                           	file	"161518_temp_main.c"
  3414                           	line	98
  3415                           global __ptext9
  3416                           __ptext9:	;psect for function _WakeTemp
  3417  07EB                     psect	text9
  3418                           	file	"161518_temp_main.c"
  3419                           	line	98
  3420                           	global	__size_of_WakeTemp
  3421                           	__size_of_WakeTemp	equ	__end_of_WakeTemp-_WakeTemp
  3422  0011                     	
  3423                           _WakeTemp:	
  3424  07EB                     ;incstack = 0
  3425                           	opt	stack 6
  3426                           ; Regs used in _WakeTemp: [wreg+status,2+status,0]
  3427                           	line	100
  3428                           	
  3429                           l2211:	
  3430  07EB                     	movlb 1	; select bank1
  3431  07EB  0021               	bsf	(145)^080h,3	;volatile
  3432  07EC  1591               	line	101
  3433                           	
  3434                           l2213:	
  3435  07ED                     	movf	((_wI2CTxBufferSize)^080h),w
  3436  07ED  0849               	btfss	status,2
  3437  07EE  1D03               	goto	u1661
  3438  07EF  2FF1               	goto	u1660
  3439  07F0  2FF2               u1661:
  3440  07F1                     	goto	l111
  3441  07F1  2FFB               u1660:
  3442  07F2                     	line	103
  3443                           	
  3444                           l2215:	
  3445  07F2                     	movlw	low(0B8h)
  3446  07F2  30B8               	movwf	(??_WakeTemp+0)^080h+0
  3447  07F3  00A0               	movf	(??_WakeTemp+0)^080h+0,w
  3448  07F4  0820               	movwf	(_wI2CTxBuffer)^080h
  3449  07F5  00CD               	line	104
  3450                           	
  3451                           l2217:	
  3452  07F6                     	clrf	(_wI2CTxBufferSize)^080h
  3453  07F6  01C9               	incf	(_wI2CTxBufferSize)^080h,f
  3454  07F7  0AC9               	line	105
  3455                           	
  3456                           l2219:	
  3457  07F8                     	movlb 4	; select bank4
  3458  07F8  0024               	bsf	(534)^0200h,0	;volatile
  3459  07F9  1416               	goto	l111
  3460  07FA  2FFB               	line	106
  3461                           	
  3462                           l110:	
  3463  07FB                     	line	107
  3464                           	
  3465                           l111:	
  3466  07FB                     	return
  3467  07FB  0008               	opt stack 0
  3468                           GLOBAL	__end_of_WakeTemp
  3469                           	__end_of_WakeTemp:
  3470  07FC                     	signat	_WakeTemp,89
  3471                           	global	_SetToGetTemp
  3472                           
  3473 ;; *************** function _SetToGetTemp *****************
  3474 ;; Defined at:
  3475 ;;		line 62 in file "161518_temp_main.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;		None
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;		None
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      void 
  3482 ;; Registers used:
  3483 ;;		wreg, status,2, status,0
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3491 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  3492 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  3493 ;;Total ram usage:        1 bytes
  3494 ;; Hardware stack levels used:    1
  3495 ;; Hardware stack levels required when called:    9
  3496 ;; This function calls:
  3497 ;;		Nothing
  3498 ;; This function is called by:
  3499 ;;		_main
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3503                           	line	62
  3504                           global __ptext10
  3505                           __ptext10:	;psect for function _SetToGetTemp
  3506  0CC3                     psect	text10
  3507                           	file	"161518_temp_main.c"
  3508                           	line	62
  3509                           	global	__size_of_SetToGetTemp
  3510                           	__size_of_SetToGetTemp	equ	__end_of_SetToGetTemp-_SetToGetTemp
  3511  001F                     	
  3512                           _SetToGetTemp:	
  3513  0CC3                     ;incstack = 0
  3514                           	opt	stack 6
  3515                           ; Regs used in _SetToGetTemp: [wreg+status,2+status,0]
  3516                           	line	64
  3517                           	
  3518                           l2177:	
  3519  0CC3                     	movlb 1	; select bank1
  3520  0CC3  0021               	movf	((_wI2CTxBufferSize)^080h),w
  3521  0CC4  0849               	btfss	status,2
  3522  0CC5  1D03               	goto	u1631
  3523  0CC6  2CC8               	goto	u1630
  3524  0CC7  2CC9               u1631:
  3525  0CC8                     	goto	l99
  3526  0CC8  2CE1               u1630:
  3527  0CC9                     	line	66
  3528                           	
  3529                           l2179:	
  3530  0CC9                     	bsf	(145)^080h,3	;volatile
  3531  0CC9  1591               	line	67
  3532                           	movlb 4	; select bank4
  3533  0CCA  0024               	bsf	(535)^0200h,7	;volatile
  3534  0CCB  1797               	line	68
  3535                           	
  3536                           l2181:	
  3537  0CCC                     	movlw	low(0B8h)
  3538  0CCC  30B8               	movlb 1	; select bank1
  3539  0CCD  0021               	movwf	(??_SetToGetTemp+0)^080h+0
  3540  0CCE  00A0               	movf	(??_SetToGetTemp+0)^080h+0,w
  3541  0CCF  0820               	movwf	(_wI2CTxBuffer)^080h
  3542  0CD0  00CD               	line	69
  3543                           	movlw	low(03h)
  3544  0CD1  3003               	movwf	(??_SetToGetTemp+0)^080h+0
  3545  0CD2  00A0               	movf	(??_SetToGetTemp+0)^080h+0,w
  3546  0CD3  0820               	movwf	0+(_wI2CTxBuffer)^080h+01h
  3547  0CD4  00CE               	line	70
  3548                           	
  3549                           l2183:	
  3550  0CD5                     	clrf	0+(_wI2CTxBuffer)^080h+02h
  3551  0CD5  01CF               	line	71
  3552                           	
  3553                           l2185:	
  3554  0CD6                     	movlw	low(04h)
  3555  0CD6  3004               	movwf	(??_SetToGetTemp+0)^080h+0
  3556  0CD7  00A0               	movf	(??_SetToGetTemp+0)^080h+0,w
  3557  0CD8  0820               	movwf	0+(_wI2CTxBuffer)^080h+03h
  3558  0CD9  00D0               	line	72
  3559                           	
  3560                           l2187:	
  3561  0CDA                     	movlw	low(04h)
  3562  0CDA  3004               	movwf	(??_SetToGetTemp+0)^080h+0
  3563  0CDB  00A0               	movf	(??_SetToGetTemp+0)^080h+0,w
  3564  0CDC  0820               	movwf	(_wI2CTxBufferSize)^080h
  3565  0CDD  00C9               	line	73
  3566                           	
  3567                           l2189:	
  3568  0CDE                     	movlb 4	; select bank4
  3569  0CDE  0024               	bsf	(534)^0200h,0	;volatile
  3570  0CDF  1416               	goto	l99
  3571  0CE0  2CE1               	line	74
  3572                           	
  3573                           l98:	
  3574  0CE1                     	line	75
  3575                           	
  3576                           l99:	
  3577  0CE1                     	return
  3578  0CE1  0008               	opt stack 0
  3579                           GLOBAL	__end_of_SetToGetTemp
  3580                           	__end_of_SetToGetTemp:
  3581  0CE2                     	signat	_SetToGetTemp,89
  3582                           	global	_PrintLog
  3583                           
  3584 ;; *************** function _PrintLog *****************
  3585 ;; Defined at:
  3586 ;;		line 108 in file "161518_temp_main.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;  iText           1    wreg     PTR unsigned char 
  3589 ;;		 -> wInterruptText(75), 
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;  iText           1   20[BANK1 ] PTR unsigned char 
  3592 ;;		 -> wInterruptText(75), 
  3593 ;;  wInterruptTe    1   19[BANK1 ] unsigned char 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3604 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  3605 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  3606 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
       0       0
  3607 ;;Total ram usage:        3 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:   14
  3610 ;; This function calls:
  3611 ;;		_lcdWriteText
  3612 ;;		_memset
  3613 ;;		_strlen
  3614 ;; This function is called by:
  3615 ;;		_main
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3619                           	line	108
  3620                           global __ptext11
  3621                           __ptext11:	;psect for function _PrintLog
  3622  0E3F                     psect	text11
  3623                           	file	"161518_temp_main.c"
  3624                           	line	108
  3625                           	global	__size_of_PrintLog
  3626                           	__size_of_PrintLog	equ	__end_of_PrintLog-_PrintLog
  3627  002B                     	
  3628                           _PrintLog:	
  3629  0E3F                     ;incstack = 0
  3630                           	opt	stack 1
  3631                           ; Regs used in _PrintLog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3632                           ;PrintLog@iText stored from wreg
  3633                           	movlb 1	; select bank1
  3634  0E3F  0021               	movwf	(PrintLog@iText)^080h
  3635  0E40  00B4               	line	110
  3636                           	
  3637                           l2661:	
  3638  0E41                     	movf	(PrintLog@iText)^080h,w
  3639  0E41  0834               	movwf	(strlen@s)^080h
  3640  0E42  00A0               	movlw	0x1
  3641  0E43  3001               
  3642                           	movwf	(strlen@s+1)^080h
  3643  0E44  00A1               	fcall	_strlen
  3644  0E45  318D  2529  318E   	movlb 1	; select bank1
  3645  0E48  0021               	movf	(0+(?_strlen))^080h,w
  3646  0E49  0820               	movwf	(??_PrintLog+0)^080h+0
  3647  0E4A  00B2               	movf	(??_PrintLog+0)^080h+0,w
  3648  0E4B  0832               	movwf	(PrintLog@wInterruptTextLen)^080h
  3649  0E4C  00B3               	line	112
  3650                           	
  3651                           l2663:	
  3652  0E4D                     	movf	((PrintLog@wInterruptTextLen)^080h),w
  3653  0E4D  0833               	btfsc	status,2
  3654  0E4E  1903               	goto	u2001
  3655  0E4F  2E51               	goto	u2000
  3656  0E50  2E52               u2001:
  3657  0E51                     	goto	l115
  3658  0E51  2E69               u2000:
  3659  0E52                     	line	114
  3660                           	
  3661                           l2665:	
  3662  0E52                     	movf	(PrintLog@iText)^080h,w
  3663  0E52  0834               	movwf	(lcdWriteText@iText)^080h
  3664  0E53  00AD               	movlw	0x1
  3665  0E54  3001               
  3666                           	movwf	(lcdWriteText@iText+1)^080h
  3667  0E55  00AE               	fcall	_lcdWriteText
  3668  0E56  318D  2572  318E   	line	115
  3669                           	
  3670                           l2667:	
  3671  0E59                     	movlb 1	; select bank1
  3672  0E59  0021               	movf	(PrintLog@iText)^080h,w
  3673  0E5A  0834               	movwf	(memset@dest)^080h
  3674  0E5B  00A0               	movlw	0x1
  3675  0E5C  3001               
  3676                           	movwf	(memset@dest+1)^080h
  3677  0E5D  00A1               	movlw	0
  3678  0E5E  3000               	movwf	(memset@c)^080h
  3679  0E5F  00A2               	movwf	(memset@c+1)^080h
  3680  0E60  00A3               	movlw	01h
  3681  0E61  3001               	movwf	(memset@n)^080h
  3682  0E62  00A4               	movlw	0
  3683  0E63  3000               	movwf	((memset@n)^080h)+1
  3684  0E64  00A5               	fcall	_memset
  3685  0E65  3184  24DE  318E   	goto	l115
  3686  0E68  2E69               	line	116
  3687                           	
  3688                           l114:	
  3689  0E69                     	line	117
  3690                           	
  3691                           l115:	
  3692  0E69                     	return
  3693  0E69  0008               	opt stack 0
  3694                           GLOBAL	__end_of_PrintLog
  3695                           	__end_of_PrintLog:
  3696  0E6A                     	signat	_PrintLog,4217
  3697                           	global	_lcdWriteText
  3698                           
  3699 ;; *************** function _lcdWriteText *****************
  3700 ;; Defined at:
  3701 ;;		line 41 in file "LCD_hd44780u_qy_2004a.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;  iText           2   13[BANK1 ] PTR unsigned char 
  3704 ;;		 -> main@wConv(4), wInterruptText(75), 
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  wCharReading    1   17[BANK1 ] unsigned char 
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3716 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  3717 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  3718 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  3719 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
       0       0
  3720 ;;Total ram usage:        5 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; Hardware stack levels required when called:   13
  3723 ;; This function calls:
  3724 ;;		_writeTxtChk
  3725 ;; This function is called by:
  3726 ;;		_PrintLog
  3727 ;;		_main
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3731                           	file	"LCD_hd44780u_qy_2004a.c"
  3732                           	line	41
  3733                           global __ptext12
  3734                           __ptext12:	;psect for function _lcdWriteText
  3735  0D72                     psect	text12
  3736                           	file	"LCD_hd44780u_qy_2004a.c"
  3737                           	line	41
  3738                           	global	__size_of_lcdWriteText
  3739                           	__size_of_lcdWriteText	equ	__end_of_lcdWriteText-_lcdWriteText
  3740  0026                     	
  3741                           _lcdWriteText:	
  3742  0D72                     ;incstack = 0
  3743                           	opt	stack 2
  3744                           ; Regs used in _lcdWriteText: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3745                           	line	43
  3746                           	
  3747                           l2637:	
  3748  0D72                     ;LCD_hd44780u_qy_2004a.c: 41: void lcdWriteText(char *iText);LCD_hd44780u_qy_2004a.c: 42
                                 :  {;LCD_hd44780u_qy_2004a.c: 43:   unsigned char wCharReadingPos = 0;
  3749                           	movlb 1	; select bank1
  3750  0D72  0021               	clrf	(lcdWriteText@wCharReadingPos)^080h
  3751  0D73  01B1               	line	44
  3752                           ;LCD_hd44780u_qy_2004a.c: 44:   while( iText[wCharReadingPos] != 0)
  3753                           	goto	l2643
  3754  0D74  2D88               	
  3755                           l196:	
  3756  0D75                     	line	46
  3757                           	
  3758                           l2639:	
  3759  0D75                     ;LCD_hd44780u_qy_2004a.c: 45:   {;LCD_hd44780u_qy_2004a.c: 46:     writeTxtChk(iText[wCh
                                 arReadingPos]);
  3760                           	movf	(lcdWriteText@wCharReadingPos)^080h,w
  3761  0D75  0831               	movwf	(??_lcdWriteText+0)^080h+0
  3762  0D76  00AF               	clrf	(??_lcdWriteText+0)^080h+0+1
  3763  0D77  01B0               	movf	0+(??_lcdWriteText+0)^080h+0,w
  3764  0D78  082F               	addwf	(lcdWriteText@iText)^080h,w
  3765  0D79  072D               	movwf	fsr1l
  3766  0D7A  0086               	movf	1+(??_lcdWriteText+0)^080h+0,w
  3767  0D7B  0830               	addwfc	(lcdWriteText@iText+1)^080h,w
  3768  0D7C  3D2E               	movwf	1+fsr1l
  3769  0D7D  0087               	movf	indf1,w
  3770  0D7E  0801               	fcall	_writeTxtChk
  3771  0D7F  3186  26CC  318D   	line	47
  3772                           	
  3773                           l2641:	
  3774  0D82                     ;LCD_hd44780u_qy_2004a.c: 47:     wCharReadingPos++;
  3775                           	movlw	low(01h)
  3776  0D82  3001               	movlb 1	; select bank1
  3777  0D83  0021               	movwf	(??_lcdWriteText+0)^080h+0
  3778  0D84  00AF               	movf	(??_lcdWriteText+0)^080h+0,w
  3779  0D85  082F               	addwf	(lcdWriteText@wCharReadingPos)^080h,f
  3780  0D86  07B1               	goto	l2643
  3781  0D87  2D88               	line	48
  3782                           ;LCD_hd44780u_qy_2004a.c: 48:   }
  3783                           	
  3784                           l195:	
  3785  0D88                     	line	44
  3786                           	
  3787                           l2643:	
  3788  0D88                     ;LCD_hd44780u_qy_2004a.c: 44:   while( iText[wCharReadingPos] != 0)
  3789                           	movf	(lcdWriteText@wCharReadingPos)^080h,w
  3790  0D88  0831               	movwf	(??_lcdWriteText+0)^080h+0
  3791  0D89  00AF               	clrf	(??_lcdWriteText+0)^080h+0+1
  3792  0D8A  01B0               	movf	0+(??_lcdWriteText+0)^080h+0,w
  3793  0D8B  082F               	addwf	(lcdWriteText@iText)^080h,w
  3794  0D8C  072D               	movwf	fsr1l
  3795  0D8D  0086               	movf	1+(??_lcdWriteText+0)^080h+0,w
  3796  0D8E  0830               	addwfc	(lcdWriteText@iText+1)^080h,w
  3797  0D8F  3D2E               	movwf	1+fsr1l
  3798  0D90  0087               	movf	(indf1),w
  3799  0D91  0801               	btfss	status,2
  3800  0D92  1D03               	goto	u1981
  3801  0D93  2D95               	goto	u1980
  3802  0D94  2D96               u1981:
  3803  0D95                     	goto	l2639
  3804  0D95  2D75               u1980:
  3805  0D96                     	goto	l198
  3806  0D96  2D97               	
  3807                           l197:	
  3808  0D97                     	line	50
  3809                           	
  3810                           l198:	
  3811  0D97                     	return
  3812  0D97  0008               	opt stack 0
  3813                           GLOBAL	__end_of_lcdWriteText
  3814                           	__end_of_lcdWriteText:
  3815  0D98                     	signat	_lcdWriteText,4217
  3816                           	global	_writeTxtChk
  3817                           
  3818 ;; *************** function _writeTxtChk *****************
  3819 ;; Defined at:
  3820 ;;		line 79 in file "LCD_hd44780u_qy_2004a.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  iOpCode         1    wreg     unsigned char 
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;  iOpCode         1   12[BANK1 ] unsigned char 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      void 
  3827 ;; Registers used:
  3828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3835 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  3836 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  3837 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
       0       0
  3838 ;;Total ram usage:        3 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:   12
  3841 ;; This function calls:
  3842 ;;		_SetToSendDataToLCD
  3843 ;;		_setCursorPosition
  3844 ;;		_setData
  3845 ;;		_waitLCDBusy
  3846 ;; This function is called by:
  3847 ;;		_lcdWriteText
  3848 ;;		_lcdWriteRotText
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  3852                           	line	79
  3853                           global __ptext13
  3854                           __ptext13:	;psect for function _writeTxtChk
  3855  06CC                     psect	text13
  3856                           	file	"LCD_hd44780u_qy_2004a.c"
  3857                           	line	79
  3858                           	global	__size_of_writeTxtChk
  3859                           	__size_of_writeTxtChk	equ	__end_of_writeTxtChk-_writeTxtChk
  3860  0061                     	
  3861                           _writeTxtChk:	
  3862  06CC                     ;incstack = 0
  3863                           	opt	stack 2
  3864                           ; Regs used in _writeTxtChk: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3865                           ;writeTxtChk@iOpCode stored from wreg
  3866                           	movlb 1	; select bank1
  3867  06CC  0021               	movwf	(writeTxtChk@iOpCode)^080h
  3868  06CD  00AC               	line	81
  3869                           	
  3870                           l2007:	
  3871  06CE                     ;LCD_hd44780u_qy_2004a.c: 79: void writeTxtChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 80
                                 : {;LCD_hd44780u_qy_2004a.c: 81:   SetToSendDataToLCD();
  3872                           	fcall	_SetToSendDataToLCD
  3873  06CE  318C  240B  3186   	line	82
  3874                           	
  3875                           l2009:	
  3876  06D1                     ;LCD_hd44780u_qy_2004a.c: 82:   PORTAbits.RA4 = 1;
  3877                           	movlb 0	; select bank0
  3878  06D1  0020               	bsf	(12),4	;volatile
  3879  06D2  160C               	line	83
  3880                           	
  3881                           l2011:	
  3882  06D3                     ;LCD_hd44780u_qy_2004a.c: 83:   PORTAbits.RA7 = 0;
  3883                           	bcf	(12),7	;volatile
  3884  06D3  138C               	line	84
  3885                           ;LCD_hd44780u_qy_2004a.c: 84:   switch(mWritingPosition)
  3886                           	goto	l2025
  3887  06D4  2EF5               	line	86
  3888                           ;LCD_hd44780u_qy_2004a.c: 85:   {;LCD_hd44780u_qy_2004a.c: 86:     case 20:
  3889                           	
  3890                           l214:	
  3891  06D5                     	line	87
  3892                           	
  3893                           l2013:	
  3894  06D5                     ;LCD_hd44780u_qy_2004a.c: 87:       setCursorPosition(1,0);
  3895                           	movlb 1	; select bank1
  3896  06D5  0021               	clrf	(setCursorPosition@iPosition)^080h
  3897  06D6  01A5               	movlw	low(01h)
  3898  06D7  3001               	fcall	_setCursorPosition
  3899  06D8  3187  272D  3186   	line	88
  3900                           ;LCD_hd44780u_qy_2004a.c: 88:       break;
  3901                           	goto	l2027
  3902  06DB  2F0C               	line	89
  3903                           ;LCD_hd44780u_qy_2004a.c: 89:     case 40:
  3904                           	
  3905                           l216:	
  3906  06DC                     	line	90
  3907                           	
  3908                           l2015:	
  3909  06DC                     ;LCD_hd44780u_qy_2004a.c: 90:       setCursorPosition(2,0);
  3910                           	movlb 1	; select bank1
  3911  06DC  0021               	clrf	(setCursorPosition@iPosition)^080h
  3912  06DD  01A5               	movlw	low(02h)
  3913  06DE  3002               	fcall	_setCursorPosition
  3914  06DF  3187  272D  3186   	line	91
  3915                           ;LCD_hd44780u_qy_2004a.c: 91:       break;
  3916                           	goto	l2027
  3917  06E2  2F0C               	line	92
  3918                           ;LCD_hd44780u_qy_2004a.c: 92:     case 60:
  3919                           	
  3920                           l217:	
  3921  06E3                     	line	93
  3922                           	
  3923                           l2017:	
  3924  06E3                     ;LCD_hd44780u_qy_2004a.c: 93:       setCursorPosition(3,0);
  3925                           	movlb 1	; select bank1
  3926  06E3  0021               	clrf	(setCursorPosition@iPosition)^080h
  3927  06E4  01A5               	movlw	low(03h)
  3928  06E5  3003               	fcall	_setCursorPosition
  3929  06E6  3187  272D  3186   	line	94
  3930                           ;LCD_hd44780u_qy_2004a.c: 94:       break;
  3931                           	goto	l2027
  3932  06E9  2F0C               	line	95
  3933                           ;LCD_hd44780u_qy_2004a.c: 95:     case 80:
  3934                           	
  3935                           l218:	
  3936  06EA                     	line	96
  3937                           	
  3938                           l2019:	
  3939  06EA                     ;LCD_hd44780u_qy_2004a.c: 96:       setCursorPosition(0,0);
  3940                           	movlb 1	; select bank1
  3941  06EA  0021               	clrf	(setCursorPosition@iPosition)^080h
  3942  06EB  01A5               	movlw	low(0)
  3943  06EC  3000               	fcall	_setCursorPosition
  3944  06ED  3187  272D  3186   	line	97
  3945                           	
  3946                           l2021:	
  3947  06F0                     ;LCD_hd44780u_qy_2004a.c: 97:       mWritingPosition = 0;
  3948                           	movlb 1	; select bank1
  3949  06F0  0021               	clrf	(_mWritingPosition)^080h
  3950  06F1  01CA               	line	98
  3951                           ;LCD_hd44780u_qy_2004a.c: 98:       break;
  3952                           	goto	l2027
  3953  06F2  2F0C               	line	99
  3954                           ;LCD_hd44780u_qy_2004a.c: 99:     default:
  3955                           	
  3956                           l219:	
  3957  06F3                     	line	100
  3958                           ;LCD_hd44780u_qy_2004a.c: 100:       break;
  3959                           	goto	l2027
  3960  06F3  2F0C               	line	101
  3961                           	
  3962                           l2023:	
  3963  06F4                     ;LCD_hd44780u_qy_2004a.c: 101:   }
  3964                           	goto	l2027
  3965  06F4  2F0C               	
  3966                           l213:	
  3967  06F5                     	
  3968                           l2025:	
  3969  06F5                     	movlb 1	; select bank1
  3970  06F5  0021               	movf	(_mWritingPosition)^080h,w
  3971  06F6  084A               	movwf	(??_writeTxtChk+0)^080h+0
  3972  06F7  00AA               	clrf	(??_writeTxtChk+0)^080h+0+1
  3973  06F8  01AB               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3974                           ; Switch size 1, requested type "space"
  3975                           ; Number of cases is 1, Range of values is 0 to 0
  3976                           ; switch strategies available:
  3977                           ; Name         Instructions Cycles
  3978                           ; simple_byte            4     3 (average)
  3979                           ; direct_byte            8     6 (fixed)
  3980                           ; jumptable            260     6 (fixed)
  3981                           ;	Chosen strategy is simple_byte
  3982                           
  3983                           	movf 1+(??_writeTxtChk+0)^080h+0,w
  3984  06F9  082B               	opt asmopt_push
  3985                           	opt asmopt_off
  3986                           	xorlw	0^0	; case 0
  3987  06FA  3A00               	skipnz
  3988  06FB  1903               	goto	l2847
  3989  06FC  2EFE               	goto	l2027
  3990  06FD  2F0C               	opt asmopt_pop
  3991                           	
  3992                           l2847:	
  3993  06FE                     ; Switch size 1, requested type "space"
  3994                           ; Number of cases is 4, Range of values is 20 to 80
  3995                           ; switch strategies available:
  3996                           ; Name         Instructions Cycles
  3997                           ; simple_byte           13     7 (average)
  3998                           ; direct_byte          131     9 (fixed)
  3999                           ; jumptable            263     9 (fixed)
  4000                           ;	Chosen strategy is simple_byte
  4001                           
  4002                           	movf 0+(??_writeTxtChk+0)^080h+0,w
  4003  06FE  082A               	opt asmopt_push
  4004                           	opt asmopt_off
  4005                           	xorlw	20^0	; case 20
  4006  06FF  3A14               	skipnz
  4007  0700  1903               	goto	l2013
  4008  0701  2ED5               	xorlw	40^20	; case 40
  4009  0702  3A3C               	skipnz
  4010  0703  1903               	goto	l2015
  4011  0704  2EDC               	xorlw	60^40	; case 60
  4012  0705  3A14               	skipnz
  4013  0706  1903               	goto	l2017
  4014  0707  2EE3               	xorlw	80^60	; case 80
  4015  0708  3A6C               	skipnz
  4016  0709  1903               	goto	l2019
  4017  070A  2EEA               	goto	l2027
  4018  070B  2F0C               	opt asmopt_pop
  4019                           
  4020                           	
  4021                           l215:	
  4022  070C                     	line	102
  4023                           	
  4024                           l2027:	
  4025  070C                     ;LCD_hd44780u_qy_2004a.c: 102:   waitLCDBusy();
  4026                           	fcall	_waitLCDBusy
  4027  070C  318E  266A  3186   	line	103
  4028                           	
  4029                           l2029:	
  4030  070F                     ;LCD_hd44780u_qy_2004a.c: 103:   SetToSendDataToLCD();
  4031                           	fcall	_SetToSendDataToLCD
  4032  070F  318C  240B  3186   	line	104
  4033                           	
  4034                           l2031:	
  4035  0712                     ;LCD_hd44780u_qy_2004a.c: 104:   PORTAbits.RA4 = 1;
  4036                           	movlb 0	; select bank0
  4037  0712  0020               	bsf	(12),4	;volatile
  4038  0713  160C               	line	105
  4039                           	
  4040                           l2033:	
  4041  0714                     ;LCD_hd44780u_qy_2004a.c: 105:   PORTAbits.RA7 = 0;
  4042                           	bcf	(12),7	;volatile
  4043  0714  138C               	line	106
  4044                           	
  4045                           l2035:	
  4046  0715                     ;LCD_hd44780u_qy_2004a.c: 106:   setData(iOpCode >> 4);
  4047                           	movlb 1	; select bank1
  4048  0715  0021               	movf	(writeTxtChk@iOpCode)^080h,w
  4049  0716  082C               	movwf	(??_writeTxtChk+0)^080h+0
  4050  0717  00AA               	movlw	04h
  4051  0718  3004               u1485:
  4052  0719                     	lsrf	(??_writeTxtChk+0)^080h+0,f
  4053  0719  36AA               	decfsz	wreg,f
  4054  071A  0B89               	goto	u1485
  4055  071B  2F19               	movf	0+(??_writeTxtChk+0)^080h+0,w
  4056  071C  082A               	fcall	_setData
  4057  071D  318F  270E  3186   	line	107
  4058                           	
  4059                           l2037:	
  4060  0720                     ;LCD_hd44780u_qy_2004a.c: 107:   setData(iOpCode);
  4061                           	movlb 1	; select bank1
  4062  0720  0021               	movf	(writeTxtChk@iOpCode)^080h,w
  4063  0721  082C               	fcall	_setData
  4064  0722  318F  270E  3186   	line	108
  4065                           	
  4066                           l2039:	
  4067  0725                     ;LCD_hd44780u_qy_2004a.c: 108:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  4068                           		opt asmopt_push
  4069                           	opt asmopt_off
  4070                           	nop2	;2 cycle nop
  4071  0725  3200               	nop2	;2 cycle nop
  4072  0726  3200               	opt asmopt_pop
  4073                           
  4074                           	line	109
  4075                           	
  4076                           l2041:	
  4077  0727                     ;LCD_hd44780u_qy_2004a.c: 109:   mWritingPosition++;
  4078                           	movlw	low(01h)
  4079  0727  3001               	movlb 1	; select bank1
  4080  0728  0021               	movwf	(??_writeTxtChk+0)^080h+0
  4081  0729  00AA               	movf	(??_writeTxtChk+0)^080h+0,w
  4082  072A  082A               	addwf	(_mWritingPosition)^080h,f
  4083  072B  07CA               	line	110
  4084                           	
  4085                           l220:	
  4086  072C                     	return
  4087  072C  0008               	opt stack 0
  4088                           GLOBAL	__end_of_writeTxtChk
  4089                           	__end_of_writeTxtChk:
  4090  072D                     	signat	_writeTxtChk,4217
  4091                           	global	_setCursorPosition
  4092                           
  4093 ;; *************** function _setCursorPosition *****************
  4094 ;; Defined at:
  4095 ;;		line 234 in file "LCD_hd44780u_qy_2004a.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  iLine           1    wreg     unsigned char 
  4098 ;;  iPosition       1    5[BANK1 ] unsigned char 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  iLine           1    8[BANK1 ] unsigned char 
  4101 ;;  wLCDIndex       1    9[BANK1 ] unsigned char 
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      void 
  4104 ;; Registers used:
  4105 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4111 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  4112 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  4113 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  4114 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
       0       0
  4115 ;;Total ram usage:        5 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; Hardware stack levels required when called:   11
  4118 ;; This function calls:
  4119 ;;		_SetToSendDataToLCD
  4120 ;;		_setData
  4121 ;;		_waitLCDBusy
  4122 ;; This function is called by:
  4123 ;;		_writeTxtChk
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4127                           	line	234
  4128                           global __ptext14
  4129                           __ptext14:	;psect for function _setCursorPosition
  4130  072D                     psect	text14
  4131                           	file	"LCD_hd44780u_qy_2004a.c"
  4132                           	line	234
  4133                           	global	__size_of_setCursorPosition
  4134                           	__size_of_setCursorPosition	equ	__end_of_setCursorPosition-_setCursorPosition
  4135  0061                     	
  4136                           _setCursorPosition:	
  4137  072D                     ;incstack = 0
  4138                           	opt	stack 2
  4139                           ; Regs used in _setCursorPosition: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4140                           ;setCursorPosition@iLine stored from wreg
  4141                           	movlb 1	; select bank1
  4142  072D  0021               	movwf	(setCursorPosition@iLine)^080h
  4143  072E  00A8               	line	236
  4144                           	
  4145                           l1897:	
  4146  072F                     ;LCD_hd44780u_qy_2004a.c: 234: void setCursorPosition(char iLine, char iPosition);LCD_hd
                                 44780u_qy_2004a.c: 235: {;LCD_hd44780u_qy_2004a.c: 236:   char wLCDIndex=0;
  4147                           	clrf	(setCursorPosition@wLCDIndex)^080h
  4148  072F  01A9               	line	238
  4149                           ;LCD_hd44780u_qy_2004a.c: 238:   switch(iLine)
  4150                           	goto	l1909
  4151  0730  2F5D               	line	240
  4152                           ;LCD_hd44780u_qy_2004a.c: 239:   {;LCD_hd44780u_qy_2004a.c: 240:       case 0:
  4153                           	
  4154                           l284:	
  4155  0731                     	line	241
  4156                           	
  4157                           l1899:	
  4158  0731                     ;LCD_hd44780u_qy_2004a.c: 241:           wLCDIndex = 0x00 + iPosition;
  4159                           	movf	(setCursorPosition@iPosition)^080h,w
  4160  0731  0825               	movwf	(??_setCursorPosition+0)^080h+0
  4161  0732  00A6               	movf	(??_setCursorPosition+0)^080h+0,w
  4162  0733  0826               	movwf	(setCursorPosition@wLCDIndex)^080h
  4163  0734  00A9               	line	242
  4164                           ;LCD_hd44780u_qy_2004a.c: 242:           mWritingPosition = iPosition;
  4165                           	movf	(setCursorPosition@iPosition)^080h,w
  4166  0735  0825               	movwf	(??_setCursorPosition+0)^080h+0
  4167  0736  00A6               	movf	(??_setCursorPosition+0)^080h+0,w
  4168  0737  0826               	movwf	(_mWritingPosition)^080h
  4169  0738  00CA               	line	243
  4170                           ;LCD_hd44780u_qy_2004a.c: 243:           break;
  4171                           	goto	l1911
  4172  0739  2F73               	line	244
  4173                           ;LCD_hd44780u_qy_2004a.c: 244:       case 1:
  4174                           	
  4175                           l286:	
  4176  073A                     	line	245
  4177                           	
  4178                           l1901:	
  4179  073A                     ;LCD_hd44780u_qy_2004a.c: 245:           wLCDIndex = 0x40 + iPosition;
  4180                           	movf	(setCursorPosition@iPosition)^080h,w
  4181  073A  0825               	addlw	040h
  4182  073B  3E40               	movwf	(??_setCursorPosition+0)^080h+0
  4183  073C  00A6               	movf	(??_setCursorPosition+0)^080h+0,w
  4184  073D  0826               	movwf	(setCursorPosition@wLCDIndex)^080h
  4185  073E  00A9               	line	246
  4186                           ;LCD_hd44780u_qy_2004a.c: 246:           mWritingPosition = 20 + iPosition;
  4187                           	movf	(setCursorPosition@iPosition)^080h,w
  4188  073F  0825               	addlw	014h
  4189  0740  3E14               	movwf	(??_setCursorPosition+0)^080h+0
  4190  0741  00A6               	movf	(??_setCursorPosition+0)^080h+0,w
  4191  0742  0826               	movwf	(_mWritingPosition)^080h
  4192  0743  00CA               	line	247
  4193                           ;LCD_hd44780u_qy_2004a.c: 247:           break;
  4194                           	goto	l1911
  4195  0744  2F73               	line	248
  4196                           ;LCD_hd44780u_qy_2004a.c: 248:       case 2:
  4197                           	
  4198                           l287:	
  4199  0745                     	line	249
  4200                           	
  4201                           l1903:	
  4202  0745                     ;LCD_hd44780u_qy_2004a.c: 249:           wLCDIndex = 0x14 + iPosition;
  4203                           	movf	(setCursorPosition@iPosition)^080h,w
  4204  0745  0825               	addlw	014h
  4205  0746  3E14               	movwf	(??_setCursorPosition+0)^080h+0
  4206  0747  00A6               	movf	(??_setCursorPosition+0)^080h+0,w
  4207  0748  0826               	movwf	(setCursorPosition@wLCDIndex)^080h
  4208  0749  00A9               	line	250
  4209                           ;LCD_hd44780u_qy_2004a.c: 250:           mWritingPosition = 40 + iPosition;
  4210                           	movf	(setCursorPosition@iPosition)^080h,w
  4211  074A  0825               	addlw	028h
  4212  074B  3E28               	movwf	(??_setCursorPosition+0)^080h+0
  4213  074C  00A6               	movf	(??_setCursorPosition+0)^080h+0,w
  4214  074D  0826               	movwf	(_mWritingPosition)^080h
  4215  074E  00CA               	line	251
  4216                           ;LCD_hd44780u_qy_2004a.c: 251:           break;
  4217                           	goto	l1911
  4218  074F  2F73               	line	252
  4219                           ;LCD_hd44780u_qy_2004a.c: 252:       case 3:
  4220                           	
  4221                           l288:	
  4222  0750                     	line	253
  4223                           	
  4224                           l1905:	
  4225  0750                     ;LCD_hd44780u_qy_2004a.c: 253:           wLCDIndex = 0x54 + iPosition;
  4226                           	movf	(setCursorPosition@iPosition)^080h,w
  4227  0750  0825               	addlw	054h
  4228  0751  3E54               	movwf	(??_setCursorPosition+0)^080h+0
  4229  0752  00A6               	movf	(??_setCursorPosition+0)^080h+0,w
  4230  0753  0826               	movwf	(setCursorPosition@wLCDIndex)^080h
  4231  0754  00A9               	line	254
  4232                           ;LCD_hd44780u_qy_2004a.c: 254:           mWritingPosition = 60 + iPosition;
  4233                           	movf	(setCursorPosition@iPosition)^080h,w
  4234  0755  0825               	addlw	03Ch
  4235  0756  3E3C               	movwf	(??_setCursorPosition+0)^080h+0
  4236  0757  00A6               	movf	(??_setCursorPosition+0)^080h+0,w
  4237  0758  0826               	movwf	(_mWritingPosition)^080h
  4238  0759  00CA               	line	255
  4239                           ;LCD_hd44780u_qy_2004a.c: 255:           break;
  4240                           	goto	l1911
  4241  075A  2F73               	line	256
  4242                           ;LCD_hd44780u_qy_2004a.c: 256:       default:
  4243                           	
  4244                           l289:	
  4245  075B                     	line	257
  4246                           ;LCD_hd44780u_qy_2004a.c: 257:       break;
  4247                           	goto	l1911
  4248  075B  2F73               	line	258
  4249                           	
  4250                           l1907:	
  4251  075C                     ;LCD_hd44780u_qy_2004a.c: 258:   }
  4252                           	goto	l1911
  4253  075C  2F73               	
  4254                           l283:	
  4255  075D                     	
  4256                           l1909:	
  4257  075D                     	movf	(setCursorPosition@iLine)^080h,w
  4258  075D  0828               	movwf	(??_setCursorPosition+0)^080h+0
  4259  075E  00A6               	clrf	(??_setCursorPosition+0)^080h+0+1
  4260  075F  01A7               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4261                           ; Switch size 1, requested type "space"
  4262                           ; Number of cases is 1, Range of values is 0 to 0
  4263                           ; switch strategies available:
  4264                           ; Name         Instructions Cycles
  4265                           ; simple_byte            4     3 (average)
  4266                           ; direct_byte            8     6 (fixed)
  4267                           ; jumptable            260     6 (fixed)
  4268                           ;	Chosen strategy is simple_byte
  4269                           
  4270                           	movf 1+(??_setCursorPosition+0)^080h+0,w
  4271  0760  0827               	opt asmopt_push
  4272                           	opt asmopt_off
  4273                           	xorlw	0^0	; case 0
  4274  0761  3A00               	skipnz
  4275  0762  1903               	goto	l2849
  4276  0763  2F65               	goto	l1911
  4277  0764  2F73               	opt asmopt_pop
  4278                           	
  4279                           l2849:	
  4280  0765                     ; Switch size 1, requested type "space"
  4281                           ; Number of cases is 4, Range of values is 0 to 3
  4282                           ; switch strategies available:
  4283                           ; Name         Instructions Cycles
  4284                           ; simple_byte           13     7 (average)
  4285                           ; direct_byte           14     6 (fixed)
  4286                           ; jumptable            260     6 (fixed)
  4287                           ;	Chosen strategy is simple_byte
  4288                           
  4289                           	movf 0+(??_setCursorPosition+0)^080h+0,w
  4290  0765  0826               	opt asmopt_push
  4291                           	opt asmopt_off
  4292                           	xorlw	0^0	; case 0
  4293  0766  3A00               	skipnz
  4294  0767  1903               	goto	l1899
  4295  0768  2F31               	xorlw	1^0	; case 1
  4296  0769  3A01               	skipnz
  4297  076A  1903               	goto	l1901
  4298  076B  2F3A               	xorlw	2^1	; case 2
  4299  076C  3A03               	skipnz
  4300  076D  1903               	goto	l1903
  4301  076E  2F45               	xorlw	3^2	; case 3
  4302  076F  3A01               	skipnz
  4303  0770  1903               	goto	l1905
  4304  0771  2F50               	goto	l1911
  4305  0772  2F73               	opt asmopt_pop
  4306                           
  4307                           	
  4308                           l285:	
  4309  0773                     	line	260
  4310                           	
  4311                           l1911:	
  4312  0773                     ;LCD_hd44780u_qy_2004a.c: 260:   waitLCDBusy();
  4313                           	fcall	_waitLCDBusy
  4314  0773  318E  266A  3187   	line	262
  4315                           	
  4316                           l1913:	
  4317  0776                     ;LCD_hd44780u_qy_2004a.c: 262:   SetToSendDataToLCD();
  4318                           	fcall	_SetToSendDataToLCD
  4319  0776  318C  240B  3187   	line	263
  4320                           	
  4321                           l1915:	
  4322  0779                     ;LCD_hd44780u_qy_2004a.c: 263:   PORTAbits.RA4 = 0;
  4323                           	movlb 0	; select bank0
  4324  0779  0020               	bcf	(12),4	;volatile
  4325  077A  120C               	line	264
  4326                           	
  4327                           l1917:	
  4328  077B                     ;LCD_hd44780u_qy_2004a.c: 264:   PORTAbits.RA7 = 0;
  4329                           	bcf	(12),7	;volatile
  4330  077B  138C               	line	265
  4331                           	
  4332                           l1919:	
  4333  077C                     ;LCD_hd44780u_qy_2004a.c: 265:   setData((wLCDIndex >> 4) | 0x8 );
  4334                           	movlb 1	; select bank1
  4335  077C  0021               	movf	(setCursorPosition@wLCDIndex)^080h,w
  4336  077D  0829               	movwf	(??_setCursorPosition+0)^080h+0
  4337  077E  00A6               	movlw	04h
  4338  077F  3004               u1305:
  4339  0780                     	lsrf	(??_setCursorPosition+0)^080h+0,f
  4340  0780  36A6               	decfsz	wreg,f
  4341  0781  0B89               	goto	u1305
  4342  0782  2F80               	movf	0+(??_setCursorPosition+0)^080h+0,w
  4343  0783  0826               	iorlw	08h
  4344  0784  3808               	fcall	_setData
  4345  0785  318F  270E  3187   	line	266
  4346                           	
  4347                           l1921:	
  4348  0788                     ;LCD_hd44780u_qy_2004a.c: 266:   setData(wLCDIndex);
  4349                           	movlb 1	; select bank1
  4350  0788  0021               	movf	(setCursorPosition@wLCDIndex)^080h,w
  4351  0789  0829               	fcall	_setData
  4352  078A  318F  270E  3187   	line	268
  4353                           	
  4354                           l290:	
  4355  078D                     	return
  4356  078D  0008               	opt stack 0
  4357                           GLOBAL	__end_of_setCursorPosition
  4358                           	__end_of_setCursorPosition:
  4359  078E                     	signat	_setCursorPosition,8313
  4360                           	global	_waitLCDBusy
  4361                           
  4362 ;; *************** function _waitLCDBusy *****************
  4363 ;; Defined at:
  4364 ;;		line 142 in file "LCD_hd44780u_qy_2004a.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;		None
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;  busyFlag        2    3[BANK1 ] int 
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  1    wreg      void 
  4371 ;; Registers used:
  4372 ;;		wreg, status,2, status,0, pclath, cstack
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4379 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  4380 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
       0       0
  4381 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
       0       0
  4382 ;;Total ram usage:        5 bytes
  4383 ;; Hardware stack levels used:    1
  4384 ;; Hardware stack levels required when called:   10
  4385 ;; This function calls:
  4386 ;;		_SetToReadDataFromLCD
  4387 ;; This function is called by:
  4388 ;;		_writeTxtChk
  4389 ;;		_writeInsChk
  4390 ;;		_setCursorPosition
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  4394                           	line	142
  4395                           global __ptext15
  4396                           __ptext15:	;psect for function _waitLCDBusy
  4397  0E6A                     psect	text15
  4398                           	file	"LCD_hd44780u_qy_2004a.c"
  4399                           	line	142
  4400                           	global	__size_of_waitLCDBusy
  4401                           	__size_of_waitLCDBusy	equ	__end_of_waitLCDBusy-_waitLCDBusy
  4402  0030                     	
  4403                           _waitLCDBusy:	
  4404  0E6A                     ;incstack = 0
  4405                           	opt	stack 3
  4406                           ; Regs used in _waitLCDBusy: [wreg+status,2+status,0+pclath+cstack]
  4407                           	line	144
  4408                           	
  4409                           l1783:	
  4410  0E6A                     ;LCD_hd44780u_qy_2004a.c: 144:   PORTAbits.RA4 = 0;
  4411                           	movlb 0	; select bank0
  4412  0E6A  0020               	bcf	(12),4	;volatile
  4413  0E6B  120C               	line	145
  4414                           ;LCD_hd44780u_qy_2004a.c: 145:   PORTAbits.RA7 = 1;
  4415                           	bsf	(12),7	;volatile
  4416  0E6C  178C               	line	147
  4417                           	
  4418                           l1785:	
  4419  0E6D                     ;LCD_hd44780u_qy_2004a.c: 147:   SetToReadDataFromLCD();
  4420                           	fcall	_SetToReadDataFromLCD
  4421  0E6D  318C  2411  318E   	line	149
  4422                           	
  4423                           l1787:	
  4424  0E70                     ;LCD_hd44780u_qy_2004a.c: 149:   int busyFlag = 1;
  4425                           	movlw	01h
  4426  0E70  3001               	movlb 1	; select bank1
  4427  0E71  0021               	movwf	(waitLCDBusy@busyFlag)^080h
  4428  0E72  00A3               	movlw	0
  4429  0E73  3000               	movwf	((waitLCDBusy@busyFlag)^080h)+1
  4430  0E74  00A4               	line	150
  4431                           ;LCD_hd44780u_qy_2004a.c: 150:   while(busyFlag == 1)
  4432                           	goto	l235
  4433  0E75  2E91               	
  4434                           l236:	
  4435  0E76                     	line	153
  4436                           ;LCD_hd44780u_qy_2004a.c: 151:   {;LCD_hd44780u_qy_2004a.c: 153:     PORTAbits.RA5 = 1;

  4437                           	movlb 0	; select bank0
  4438  0E76  0020               	bsf	(12),5	;volatile
  4439  0E77  168C               	line	154
  4440                           ;LCD_hd44780u_qy_2004a.c: 154:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  4441                           		opt asmopt_push
  4442                           	opt asmopt_off
  4443                           	nop2	;2 cycle nop
  4444  0E78  3200               	nop2	;2 cycle nop
  4445  0E79  3200               	opt asmopt_pop
  4446                           
  4447                           	line	155
  4448                           	
  4449                           l1789:	
  4450  0E7A                     ;LCD_hd44780u_qy_2004a.c: 155:     busyFlag = PORTAbits.RA3;
  4451                           	movlb 0	; select bank0
  4452  0E7A  0020               	rrf	(12),w	;volatile
  4453  0E7B  0C0C               	movlb 1	; select bank1
  4454  0E7C  0021               	movwf	(??_waitLCDBusy+0)^080h+0
  4455  0E7D  00A0               	rrf	(??_waitLCDBusy+0)^080h+0,f
  4456  0E7E  0CA0               	rrf	(??_waitLCDBusy+0)^080h+0,w
  4457  0E7F  0C20               	andlw	(1<<1)-1
  4458  0E80  3901               	movwf	(??_waitLCDBusy+1)^080h+0
  4459  0E81  00A1               	clrf	(??_waitLCDBusy+1)^080h+0+1
  4460  0E82  01A2               	movf	0+(??_waitLCDBusy+1)^080h+0,w
  4461  0E83  0821               	movwf	(waitLCDBusy@busyFlag)^080h
  4462  0E84  00A3               	movf	1+(??_waitLCDBusy+1)^080h+0,w
  4463  0E85  0822               	movwf	(waitLCDBusy@busyFlag+1)^080h
  4464  0E86  00A4               	line	156
  4465                           	
  4466                           l1791:	
  4467  0E87                     ;LCD_hd44780u_qy_2004a.c: 156:     PORTAbits.RA5 = 0;
  4468                           	movlb 0	; select bank0
  4469  0E87  0020               	bcf	(12),5	;volatile
  4470  0E88  128C               	line	157
  4471                           	
  4472                           l1793:	
  4473  0E89                     ;LCD_hd44780u_qy_2004a.c: 157:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4474                           		opt asmopt_push
  4475                           	opt asmopt_off
  4476                           	nop2	;2 cycle nop
  4477  0E89  3200               	nop2	;2 cycle nop
  4478  0E8A  3200               	nop2	;2 cycle nop
  4479  0E8B  3200               	nop2	;2 cycle nop
  4480  0E8C  3200               	opt asmopt_pop
  4481                           
  4482                           	line	159
  4483                           	
  4484                           l1795:	
  4485  0E8D                     ;LCD_hd44780u_qy_2004a.c: 159:     PORTAbits.RA5 = 1;
  4486                           	movlb 0	; select bank0
  4487  0E8D  0020               	bsf	(12),5	;volatile
  4488  0E8E  168C               	line	160
  4489                           	
  4490                           l1797:	
  4491  0E8F                     ;LCD_hd44780u_qy_2004a.c: 160:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  4492                           		opt asmopt_push
  4493                           	opt asmopt_off
  4494                           	nop2	;2 cycle nop
  4495  0E8F  3200               	nop2	;2 cycle nop
  4496  0E90  3200               	opt asmopt_pop
  4497                           
  4498                           	line	161
  4499                           ;LCD_hd44780u_qy_2004a.c: 161:   }
  4500                           	
  4501                           l235:	
  4502  0E91                     	line	150
  4503                           ;LCD_hd44780u_qy_2004a.c: 150:   while(busyFlag == 1)
  4504                           	movlb 1	; select bank1
  4505  0E91  0021               		decf	((waitLCDBusy@busyFlag)^080h),w
  4506  0E92  0323               iorwf	((waitLCDBusy@busyFlag+1)^080h),w
  4507  0E93  0424               	btfsc	status,2
  4508  0E94  1903               	goto	u1051
  4509  0E95  2E97               	goto	u1050
  4510  0E96  2E98               u1051:
  4511  0E97                     	goto	l236
  4512  0E97  2E76               u1050:
  4513  0E98                     	goto	l238
  4514  0E98  2E99               	
  4515                           l237:	
  4516  0E99                     	line	162
  4517                           	
  4518                           l238:	
  4519  0E99                     	return
  4520  0E99  0008               	opt stack 0
  4521                           GLOBAL	__end_of_waitLCDBusy
  4522                           	__end_of_waitLCDBusy:
  4523  0E9A                     	signat	_waitLCDBusy,89
  4524                           	global	_SetToReadDataFromLCD
  4525                           
  4526 ;; *************** function _SetToReadDataFromLCD *****************
  4527 ;; Defined at:
  4528 ;;		line 127 in file "LCD_hd44780u_qy_2004a.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;		None
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      void 
  4535 ;; Registers used:
  4536 ;;		None
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4546 ;;Total ram usage:        0 bytes
  4547 ;; Hardware stack levels used:    1
  4548 ;; Hardware stack levels required when called:    9
  4549 ;; This function calls:
  4550 ;;		Nothing
  4551 ;; This function is called by:
  4552 ;;		_waitLCDBusy
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  4556                           	line	127
  4557                           global __ptext16
  4558                           __ptext16:	;psect for function _SetToReadDataFromLCD
  4559  0C11                     psect	text16
  4560                           	file	"LCD_hd44780u_qy_2004a.c"
  4561                           	line	127
  4562                           	global	__size_of_SetToReadDataFromLCD
  4563                           	__size_of_SetToReadDataFromLCD	equ	__end_of_SetToReadDataFromLCD-_SetToReadDataFromLCD

  4564  0006                     	
  4565                           _SetToReadDataFromLCD:	
  4566  0C11                     ;incstack = 0
  4567                           	opt	stack 3
  4568                           ; Regs used in _SetToReadDataFromLCD: []
  4569                           	line	129
  4570                           	
  4571                           l1751:	
  4572  0C11                     ;LCD_hd44780u_qy_2004a.c: 129:   TRISAbits.TRISA3 = 1;
  4573                           	movlb 1	; select bank1
  4574  0C11  0021               	bsf	(140)^080h,3	;volatile
  4575  0C12  158C               	line	130
  4576                           ;LCD_hd44780u_qy_2004a.c: 130:   TRISAbits.TRISA2 = 1;
  4577                           	bsf	(140)^080h,2	;volatile
  4578  0C13  150C               	line	131
  4579                           ;LCD_hd44780u_qy_2004a.c: 131:   TRISAbits.TRISA1 = 1;
  4580                           	bsf	(140)^080h,1	;volatile
  4581  0C14  148C               	line	132
  4582                           ;LCD_hd44780u_qy_2004a.c: 132:   TRISAbits.TRISA0 = 1;
  4583                           	bsf	(140)^080h,0	;volatile
  4584  0C15  140C               	line	133
  4585                           	
  4586                           l229:	
  4587  0C16                     	return
  4588  0C16  0008               	opt stack 0
  4589                           GLOBAL	__end_of_SetToReadDataFromLCD
  4590                           	__end_of_SetToReadDataFromLCD:
  4591  0C17                     	signat	_SetToReadDataFromLCD,89
  4592                           	global	_setData
  4593                           
  4594 ;; *************** function _setData *****************
  4595 ;; Defined at:
  4596 ;;		line 67 in file "LCD_hd44780u_qy_2004a.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;  iValue          1    wreg     unsigned char 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;  iValue          1    2[BANK1 ] unsigned char 
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      void 
  4603 ;; Registers used:
  4604 ;;		wreg, status,2, status,0
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4611 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  4612 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  4613 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
       0       0
  4614 ;;Total ram usage:        3 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:    9
  4617 ;; This function calls:
  4618 ;;		Nothing
  4619 ;; This function is called by:
  4620 ;;		_initLCD
  4621 ;;		_writeTxtChk
  4622 ;;		_writeInsNoChk
  4623 ;;		_setCursorPosition
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  4627                           	line	67
  4628                           global __ptext17
  4629                           __ptext17:	;psect for function _setData
  4630  0F0E                     psect	text17
  4631                           	file	"LCD_hd44780u_qy_2004a.c"
  4632                           	line	67
  4633                           	global	__size_of_setData
  4634                           	__size_of_setData	equ	__end_of_setData-_setData
  4635  004D                     	
  4636                           _setData:	
  4637  0F0E                     ;incstack = 0
  4638                           	opt	stack 3
  4639                           ; Regs used in _setData: [wreg+status,2+status,0]
  4640                           ;setData@iValue stored from wreg
  4641                           	movlb 1	; select bank1
  4642  0F0E  0021               	movwf	(setData@iValue)^080h
  4643  0F0F  00A2               	line	69
  4644                           	
  4645                           l1771:	
  4646  0F10                     ;LCD_hd44780u_qy_2004a.c: 67: void setData(char iValue);LCD_hd44780u_qy_2004a.c: 68: {;L
                                 CD_hd44780u_qy_2004a.c: 69:   PORTAbits.RA5 = 1;
  4647                           	movlb 0	; select bank0
  4648  0F10  0020               	bsf	(12),5	;volatile
  4649  0F11  168C               	line	70
  4650                           	
  4651                           l1773:	
  4652  0F12                     ;LCD_hd44780u_qy_2004a.c: 70:   PORTAbits.RA3 = (iValue & 0x8) >> 3;
  4653                           	movlb 1	; select bank1
  4654  0F12  0021               	movf	(setData@iValue)^080h,w
  4655  0F13  0822               	movwf	(??_setData+0)^080h+0
  4656  0F14  00A0               	movlw	03h
  4657  0F15  3003               u1035:
  4658  0F16                     	lsrf	(??_setData+0)^080h+0,f
  4659  0F16  36A0               	decfsz	wreg,f
  4660  0F17  0B89               	goto	u1035
  4661  0F18  2F16               	movf	0+(??_setData+0)^080h+0,w
  4662  0F19  0820               	andlw	01h
  4663  0F1A  3901               	movwf	(??_setData+1)^080h+0
  4664  0F1B  00A1               	rlf	(??_setData+1)^080h+0,f
  4665  0F1C  0DA1               	rlf	(??_setData+1)^080h+0,f
  4666  0F1D  0DA1               	rlf	(??_setData+1)^080h+0,f
  4667  0F1E  0DA1               	movlb 0	; select bank0
  4668  0F1F  0020               	movf	(12),w	;volatile
  4669  0F20  080C               	movlb 1	; select bank1
  4670  0F21  0021               	xorwf	(??_setData+1)^080h+0,w
  4671  0F22  0621               	andlw	not (((1<<1)-1)<<3)
  4672  0F23  39F7               	xorwf	(??_setData+1)^080h+0,w
  4673  0F24  0621               	movlb 0	; select bank0
  4674  0F25  0020               	movwf	(12)	;volatile
  4675  0F26  008C               	line	71
  4676                           ;LCD_hd44780u_qy_2004a.c: 71:   PORTAbits.RA2 = (iValue & 0x4) >> 2;
  4677                           	movlb 1	; select bank1
  4678  0F27  0021               	movf	(setData@iValue)^080h,w
  4679  0F28  0822               	movwf	(??_setData+0)^080h+0
  4680  0F29  00A0               	movlw	02h
  4681  0F2A  3002               u1045:
  4682  0F2B                     	lsrf	(??_setData+0)^080h+0,f
  4683  0F2B  36A0               	decfsz	wreg,f
  4684  0F2C  0B89               	goto	u1045
  4685  0F2D  2F2B               	movf	0+(??_setData+0)^080h+0,w
  4686  0F2E  0820               	andlw	01h
  4687  0F2F  3901               	movwf	(??_setData+1)^080h+0
  4688  0F30  00A1               	rlf	(??_setData+1)^080h+0,f
  4689  0F31  0DA1               	rlf	(??_setData+1)^080h+0,f
  4690  0F32  0DA1               	movlb 0	; select bank0
  4691  0F33  0020               	movf	(12),w	;volatile
  4692  0F34  080C               	movlb 1	; select bank1
  4693  0F35  0021               	xorwf	(??_setData+1)^080h+0,w
  4694  0F36  0621               	andlw	not (((1<<1)-1)<<2)
  4695  0F37  39FB               	xorwf	(??_setData+1)^080h+0,w
  4696  0F38  0621               	movlb 0	; select bank0
  4697  0F39  0020               	movwf	(12)	;volatile
  4698  0F3A  008C               	line	72
  4699                           ;LCD_hd44780u_qy_2004a.c: 72:   PORTAbits.RA1 = (iValue & 0x2) >> 1;
  4700                           	movlb 1	; select bank1
  4701  0F3B  0021               	lsrf	(setData@iValue)^080h,w
  4702  0F3C  3622               	andlw	01h
  4703  0F3D  3901               	movwf	(??_setData+0)^080h+0
  4704  0F3E  00A0               	rlf	(??_setData+0)^080h+0,f
  4705  0F3F  0DA0               	movlb 0	; select bank0
  4706  0F40  0020               	movf	(12),w	;volatile
  4707  0F41  080C               	movlb 1	; select bank1
  4708  0F42  0021               	xorwf	(??_setData+0)^080h+0,w
  4709  0F43  0620               	andlw	not (((1<<1)-1)<<1)
  4710  0F44  39FD               	xorwf	(??_setData+0)^080h+0,w
  4711  0F45  0620               	movlb 0	; select bank0
  4712  0F46  0020               	movwf	(12)	;volatile
  4713  0F47  008C               	line	73
  4714                           ;LCD_hd44780u_qy_2004a.c: 73:   PORTAbits.RA0 = (iValue & 0x1) ;
  4715                           	movlw	low(01h)
  4716  0F48  3001               	movlb 1	; select bank1
  4717  0F49  0021               	andwf	(setData@iValue)^080h,w
  4718  0F4A  0522               	movwf	(??_setData+0)^080h+0
  4719  0F4B  00A0               	movlb 0	; select bank0
  4720  0F4C  0020               	movf	(12),w	;volatile
  4721  0F4D  080C               	movlb 1	; select bank1
  4722  0F4E  0021               	xorwf	0+(??_setData+0)^080h+0,w
  4723  0F4F  0620               	andlw	not ((1<<1)-1)
  4724  0F50  39FE               	xorwf	0+(??_setData+0)^080h+0,w
  4725  0F51  0620               	movlb 0	; select bank0
  4726  0F52  0020               	movwf	(12)	;volatile
  4727  0F53  008C               	line	74
  4728                           	
  4729                           l1775:	
  4730  0F54                     ;LCD_hd44780u_qy_2004a.c: 74:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  4731                           		opt asmopt_push
  4732                           	opt asmopt_off
  4733                           	nop2	;2 cycle nop
  4734  0F54  3200               	nop2	;2 cycle nop
  4735  0F55  3200               	opt asmopt_pop
  4736                           
  4737                           	line	75
  4738                           	
  4739                           l1777:	
  4740  0F56                     ;LCD_hd44780u_qy_2004a.c: 75:   PORTAbits.RA5 = 0;
  4741                           	movlb 0	; select bank0
  4742  0F56  0020               	bcf	(12),5	;volatile
  4743  0F57  128C               	line	76
  4744                           	
  4745                           l1779:	
  4746  0F58                     ;LCD_hd44780u_qy_2004a.c: 76:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  4747                           		opt asmopt_push
  4748                           	opt asmopt_off
  4749                           	nop2	;2 cycle nop
  4750  0F58  3200               	nop2	;2 cycle nop
  4751  0F59  3200               	opt asmopt_pop
  4752                           
  4753                           	line	77
  4754                           	
  4755                           l210:	
  4756  0F5A                     	return
  4757  0F5A  0008               	opt stack 0
  4758                           GLOBAL	__end_of_setData
  4759                           	__end_of_setData:
  4760  0F5B                     	signat	_setData,4217
  4761                           	global	_SetToSendDataToLCD
  4762                           
  4763 ;; *************** function _SetToSendDataToLCD *****************
  4764 ;; Defined at:
  4765 ;;		line 134 in file "LCD_hd44780u_qy_2004a.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;		None
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;		None
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1    wreg      void 
  4772 ;; Registers used:
  4773 ;;		None
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4783 ;;Total ram usage:        0 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; Hardware stack levels required when called:    9
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_writeTxtChk
  4790 ;;		_writeInsNoChk
  4791 ;;		_setCursorPosition
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  4795                           	line	134
  4796                           global __ptext18
  4797                           __ptext18:	;psect for function _SetToSendDataToLCD
  4798  0C0B                     psect	text18
  4799                           	file	"LCD_hd44780u_qy_2004a.c"
  4800                           	line	134
  4801                           	global	__size_of_SetToSendDataToLCD
  4802                           	__size_of_SetToSendDataToLCD	equ	__end_of_SetToSendDataToLCD-_SetToSendDataToLCD
  4803  0006                     	
  4804                           _SetToSendDataToLCD:	
  4805  0C0B                     ;incstack = 0
  4806                           	opt	stack 3
  4807                           ; Regs used in _SetToSendDataToLCD: []
  4808                           	line	136
  4809                           	
  4810                           l1781:	
  4811  0C0B                     ;LCD_hd44780u_qy_2004a.c: 136:   TRISAbits.TRISA3 = 0;;
  4812                           	movlb 1	; select bank1
  4813  0C0B  0021               	bcf	(140)^080h,3	;volatile
  4814  0C0C  118C               	line	137
  4815                           ;LCD_hd44780u_qy_2004a.c: 137:   TRISAbits.TRISA2 = 0;;
  4816                           	bcf	(140)^080h,2	;volatile
  4817  0C0D  110C               	line	138
  4818                           ;LCD_hd44780u_qy_2004a.c: 138:   TRISAbits.TRISA1 = 0;;
  4819                           	bcf	(140)^080h,1	;volatile
  4820  0C0E  108C               	line	139
  4821                           ;LCD_hd44780u_qy_2004a.c: 139:   TRISAbits.TRISA0 = 0;;
  4822                           	bcf	(140)^080h,0	;volatile
  4823  0C0F  100C               	line	140
  4824                           	
  4825                           l232:	
  4826  0C10                     	return
  4827  0C10  0008               	opt stack 0
  4828                           GLOBAL	__end_of_SetToSendDataToLCD
  4829                           	__end_of_SetToSendDataToLCD:
  4830  0C11                     	signat	_SetToSendDataToLCD,89
  4831                           	global	_GetTemp
  4832                           
  4833 ;; *************** function _GetTemp *****************
  4834 ;; Defined at:
  4835 ;;		line 85 in file "161518_temp_main.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;		None
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;		None
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      void 
  4842 ;; Registers used:
  4843 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4851 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  4852 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  4853 ;;Total ram usage:        1 bytes
  4854 ;; Hardware stack levels used:    1
  4855 ;; Hardware stack levels required when called:   10
  4856 ;; This function calls:
  4857 ;;		_memset
  4858 ;; This function is called by:
  4859 ;;		_main
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  4863                           	file	"161518_temp_main.c"
  4864                           	line	85
  4865                           global __ptext19
  4866                           __ptext19:	;psect for function _GetTemp
  4867  0D98                     psect	text19
  4868                           	file	"161518_temp_main.c"
  4869                           	line	85
  4870                           	global	__size_of_GetTemp
  4871                           	__size_of_GetTemp	equ	__end_of_GetTemp-_GetTemp
  4872  0028                     	
  4873                           _GetTemp:	
  4874  0D98                     ;incstack = 0
  4875                           	opt	stack 5
  4876                           ; Regs used in _GetTemp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4877                           	line	87
  4878                           	
  4879                           l2645:	
  4880  0D98                     	movlb 1	; select bank1
  4881  0D98  0021               	movf	((_wI2CTxBufferSize)^080h),w
  4882  0D99  0849               	btfss	status,2
  4883  0D9A  1D03               	goto	u1991
  4884  0D9B  2D9D               	goto	u1990
  4885  0D9C  2D9E               u1991:
  4886  0D9D                     	goto	l107
  4887  0D9D  2DBF               u1990:
  4888  0D9E                     	line	89
  4889                           	
  4890                           l2647:	
  4891  0D9E                     	bsf	(145)^080h,3	;volatile
  4892  0D9E  1591               	line	90
  4893                           	
  4894                           l2649:	
  4895  0D9F                     	movlw	low(_wReceptionBuffer)
  4896  0D9F  3020               	movwf	(memset@dest)^080h
  4897  0DA0  00A0               	movlw	high(_wReceptionBuffer)
  4898  0DA1  3002               	movwf	(memset@dest+1)^080h
  4899  0DA2  00A1               	movlw	0
  4900  0DA3  3000               	movwf	(memset@c)^080h
  4901  0DA4  00A2               	movwf	(memset@c+1)^080h
  4902  0DA5  00A3               	movlw	01Eh
  4903  0DA6  301E               	movwf	(memset@n)^080h
  4904  0DA7  00A4               	movlw	0
  4905  0DA8  3000               	movwf	((memset@n)^080h)+1
  4906  0DA9  00A5               	fcall	_memset
  4907  0DAA  3184  24DE  318D   	line	91
  4908                           	
  4909                           l2651:	
  4910  0DAD                     	movlb 0	; select bank0
  4911  0DAD  0020               	clrf	(_wReceptionBufferPosition)
  4912  0DAE  01EF               	line	92
  4913                           	
  4914                           l2653:	
  4915  0DAF                     	movlw	low(0B9h)
  4916  0DAF  30B9               	movlb 1	; select bank1
  4917  0DB0  0021               	movwf	(??_GetTemp+0)^080h+0
  4918  0DB1  00AE               	movf	(??_GetTemp+0)^080h+0,w
  4919  0DB2  082E               	movwf	(_wI2CTxBuffer)^080h
  4920  0DB3  00CD               	line	93
  4921                           	
  4922                           l2655:	
  4923  0DB4                     	movlw	low(08h)
  4924  0DB4  3008               	movwf	(??_GetTemp+0)^080h+0
  4925  0DB5  00AE               	movf	(??_GetTemp+0)^080h+0,w
  4926  0DB6  082E               	movlb 0	; select bank0
  4927  0DB7  0020               	movwf	(_wI2CRxBufferSize)
  4928  0DB8  00EE               	line	94
  4929                           	
  4930                           l2657:	
  4931  0DB9                     	movlb 1	; select bank1
  4932  0DB9  0021               	clrf	(_wI2CTxBufferSize)^080h
  4933  0DBA  01C9               	incf	(_wI2CTxBufferSize)^080h,f
  4934  0DBB  0AC9               	line	95
  4935                           	
  4936                           l2659:	
  4937  0DBC                     	movlb 4	; select bank4
  4938  0DBC  0024               	bsf	(534)^0200h,0	;volatile
  4939  0DBD  1416               	goto	l107
  4940  0DBE  2DBF               	line	96
  4941                           	
  4942                           l106:	
  4943  0DBF                     	line	97
  4944                           	
  4945                           l107:	
  4946  0DBF                     	return
  4947  0DBF  0008               	opt stack 0
  4948                           GLOBAL	__end_of_GetTemp
  4949                           	__end_of_GetTemp:
  4950  0DC0                     	signat	_GetTemp,89
  4951                           	global	_memset
  4952                           
  4953 ;; *************** function _memset *****************
  4954 ;; Defined at:
  4955 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;  dest            2    0[BANK1 ] PTR void 
  4958 ;;		 -> wInterruptText(75), wReceptionBuffer(30), wI2CTxBuffer(20), 
  4959 ;;  c               2    2[BANK1 ] int 
  4960 ;;  n               2    4[BANK1 ] unsigned int 
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;  s               2   12[BANK1 ] PTR unsigned char 
  4963 ;;		 -> wInterruptText(75), wReceptionBuffer(30), wI2CTxBuffer(20), 
  4964 ;;  k               2   10[BANK1 ] unsigned int 
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  2    0[BANK1 ] PTR void 
  4967 ;; Registers used:
  4968 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4974 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
       0       0
  4975 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
       0       0
  4976 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
       0       0
  4977 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
       0       0
  4978 ;;Total ram usage:       14 bytes
  4979 ;; Hardware stack levels used:    1
  4980 ;; Hardware stack levels required when called:    9
  4981 ;; This function calls:
  4982 ;;		Nothing
  4983 ;; This function is called by:
  4984 ;;		_GetTemp
  4985 ;;		_PrintLog
  4986 ;;		_main
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           psect	text20,local,class=CODE,delta=2,merge=1,group=2
  4990                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  4991                           	line	4
  4992                           global __ptext20
  4993                           __ptext20:	;psect for function _memset
  4994  04DE                     psect	text20
  4995                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  4996                           	line	4
  4997                           	global	__size_of_memset
  4998                           	__size_of_memset	equ	__end_of_memset-_memset
  4999  00D1                     	
  5000                           _memset:	
  5001  04DE                     ;incstack = 0
  5002                           	opt	stack 6
  5003                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5004                           	line	6
  5005                           	
  5006                           l2595:	
  5007  04DE                     	movlb 1	; select bank1
  5008  04DE  0021               	movf	(memset@dest+1)^080h,w
  5009  04DF  0821               	movwf	(memset@s+1)^080h
  5010  04E0  00AD               	movf	(memset@dest)^080h,w
  5011  04E1  0820               	movwf	(memset@s)^080h
  5012  04E2  00AC               	line	13
  5013                           	
  5014                           l2597:	
  5015  04E3                     	movf	((memset@n)^080h),w
  5016  04E3  0824               iorwf	((memset@n+1)^080h),w
  5017  04E4  0425               	btfss	status,2
  5018  04E5  1D03               	goto	u1931
  5019  04E6  2CE8               	goto	u1930
  5020  04E7  2CE9               u1931:
  5021  04E8                     	goto	l2601
  5022  04E8  2CEB               u1930:
  5023  04E9                     	goto	l808
  5024  04E9  2DAE               	
  5025                           l2599:	
  5026  04EA                     ;	Return value of _memset is never used
  5027                           	goto	l808
  5028  04EA  2DAE               	
  5029                           l807:	
  5030  04EB                     	line	14
  5031                           	
  5032                           l2601:	
  5033  04EB                     	movf	(memset@s)^080h,w
  5034  04EB  082C               	movwf	fsr1l
  5035  04EC  0086               	movf	(memset@s+1)^080h,w
  5036  04ED  082D               	movwf	fsr1h
  5037  04EE  0087               	movf	(memset@c)^080h,w
  5038  04EF  0822               	movwf	indf1
  5039  04F0  0081               	line	15
  5040                           	
  5041                           l2603:	
  5042  04F1                     	movf	(memset@n)^080h,w
  5043  04F1  0824               	addlw	0FFh
  5044  04F2  3EFF               	movwf	(??_memset+0)^080h+0
  5045  04F3  00A6               	movlw	0FFh
  5046  04F4  30FF               	addwfc	(memset@n+1)^080h,w
  5047  04F5  3D25               	movwf	1+(??_memset+0)^080h+0
  5048  04F6  00A7               	movf	0+(??_memset+0)^080h+0,w
  5049  04F7  0826               	addwf	(memset@s)^080h,w
  5050  04F8  072C               	movwf	(??_memset+2)^080h+0
  5051  04F9  00A8               	movf	1+(??_memset+0)^080h+0,w
  5052  04FA  0827               	addwfc	(memset@s+1)^080h,w
  5053  04FB  3D2D               	movwf	1+(??_memset+2)^080h+0
  5054  04FC  00A9               	movf	0+(??_memset+2)^080h+0,w
  5055  04FD  0828               	movwf	fsr1l
  5056  04FE  0086               	movf	1+(??_memset+2)^080h+0,w
  5057  04FF  0829               	movwf	fsr1h
  5058  0500  0087               	movf	(memset@c)^080h,w
  5059  0501  0822               	movwf	indf1
  5060  0502  0081               	line	16
  5061                           	
  5062                           l2605:	
  5063  0503                     	movlw	0
  5064  0503  3000               	subwf	(memset@n+1)^080h,w
  5065  0504  0225               	movlw	03h
  5066  0505  3003               	skipnz
  5067  0506  1903               	subwf	(memset@n)^080h,w
  5068  0507  0224               	skipnc
  5069  0508  1803               	goto	u1941
  5070  0509  2D0B               	goto	u1940
  5071  050A  2D0C               u1941:
  5072  050B                     	goto	l2609
  5073  050B  2D0E               u1940:
  5074  050C                     	goto	l808
  5075  050C  2DAE               	
  5076                           l2607:	
  5077  050D                     ;	Return value of _memset is never used
  5078                           	goto	l808
  5079  050D  2DAE               	
  5080                           l809:	
  5081  050E                     	line	17
  5082                           	
  5083                           l2609:	
  5084  050E                     	movf	(memset@s)^080h,w
  5085  050E  082C               	addlw	01h
  5086  050F  3E01               	movwf	(??_memset+0)^080h+0
  5087  0510  00A6               	movlw	0
  5088  0511  3000               	addwfc	(memset@s+1)^080h,w
  5089  0512  3D2D               	movwf	1+(??_memset+0)^080h+0
  5090  0513  00A7               	movf	0+(??_memset+0)^080h+0,w
  5091  0514  0826               	movwf	fsr1l
  5092  0515  0086               	movf	1+(??_memset+0)^080h+0,w
  5093  0516  0827               	movwf	fsr1h
  5094  0517  0087               	movf	(memset@c)^080h,w
  5095  0518  0822               	movwf	indf1
  5096  0519  0081               	line	18
  5097                           	movf	(memset@s)^080h,w
  5098  051A  082C               	addlw	02h
  5099  051B  3E02               	movwf	(??_memset+0)^080h+0
  5100  051C  00A6               	movlw	0
  5101  051D  3000               	addwfc	(memset@s+1)^080h,w
  5102  051E  3D2D               	movwf	1+(??_memset+0)^080h+0
  5103  051F  00A7               	movf	0+(??_memset+0)^080h+0,w
  5104  0520  0826               	movwf	fsr1l
  5105  0521  0086               	movf	1+(??_memset+0)^080h+0,w
  5106  0522  0827               	movwf	fsr1h
  5107  0523  0087               	movf	(memset@c)^080h,w
  5108  0524  0822               	movwf	indf1
  5109  0525  0081               	line	19
  5110                           	movf	(memset@n)^080h,w
  5111  0526  0824               	addlw	0FEh
  5112  0527  3EFE               	movwf	(??_memset+0)^080h+0
  5113  0528  00A6               	movlw	0FFh
  5114  0529  30FF               	addwfc	(memset@n+1)^080h,w
  5115  052A  3D25               	movwf	1+(??_memset+0)^080h+0
  5116  052B  00A7               	movf	0+(??_memset+0)^080h+0,w
  5117  052C  0826               	addwf	(memset@s)^080h,w
  5118  052D  072C               	movwf	(??_memset+2)^080h+0
  5119  052E  00A8               	movf	1+(??_memset+0)^080h+0,w
  5120  052F  0827               	addwfc	(memset@s+1)^080h,w
  5121  0530  3D2D               	movwf	1+(??_memset+2)^080h+0
  5122  0531  00A9               	movf	0+(??_memset+2)^080h+0,w
  5123  0532  0828               	movwf	fsr1l
  5124  0533  0086               	movf	1+(??_memset+2)^080h+0,w
  5125  0534  0829               	movwf	fsr1h
  5126  0535  0087               	movf	(memset@c)^080h,w
  5127  0536  0822               	movwf	indf1
  5128  0537  0081               	line	20
  5129                           	movf	(memset@n)^080h,w
  5130  0538  0824               	addlw	0FDh
  5131  0539  3EFD               	movwf	(??_memset+0)^080h+0
  5132  053A  00A6               	movlw	0FFh
  5133  053B  30FF               	addwfc	(memset@n+1)^080h,w
  5134  053C  3D25               	movwf	1+(??_memset+0)^080h+0
  5135  053D  00A7               	movf	0+(??_memset+0)^080h+0,w
  5136  053E  0826               	addwf	(memset@s)^080h,w
  5137  053F  072C               	movwf	(??_memset+2)^080h+0
  5138  0540  00A8               	movf	1+(??_memset+0)^080h+0,w
  5139  0541  0827               	addwfc	(memset@s+1)^080h,w
  5140  0542  3D2D               	movwf	1+(??_memset+2)^080h+0
  5141  0543  00A9               	movf	0+(??_memset+2)^080h+0,w
  5142  0544  0828               	movwf	fsr1l
  5143  0545  0086               	movf	1+(??_memset+2)^080h+0,w
  5144  0546  0829               	movwf	fsr1h
  5145  0547  0087               	movf	(memset@c)^080h,w
  5146  0548  0822               	movwf	indf1
  5147  0549  0081               	line	21
  5148                           	
  5149                           l2611:	
  5150  054A                     	movlw	0
  5151  054A  3000               	subwf	(memset@n+1)^080h,w
  5152  054B  0225               	movlw	07h
  5153  054C  3007               	skipnz
  5154  054D  1903               	subwf	(memset@n)^080h,w
  5155  054E  0224               	skipnc
  5156  054F  1803               	goto	u1951
  5157  0550  2D52               	goto	u1950
  5158  0551  2D53               u1951:
  5159  0552                     	goto	l2615
  5160  0552  2D55               u1950:
  5161  0553                     	goto	l808
  5162  0553  2DAE               	
  5163                           l2613:	
  5164  0554                     ;	Return value of _memset is never used
  5165                           	goto	l808
  5166  0554  2DAE               	
  5167                           l810:	
  5168  0555                     	line	22
  5169                           	
  5170                           l2615:	
  5171  0555                     	movf	(memset@s)^080h,w
  5172  0555  082C               	addlw	03h
  5173  0556  3E03               	movwf	(??_memset+0)^080h+0
  5174  0557  00A6               	movlw	0
  5175  0558  3000               	addwfc	(memset@s+1)^080h,w
  5176  0559  3D2D               	movwf	1+(??_memset+0)^080h+0
  5177  055A  00A7               	movf	0+(??_memset+0)^080h+0,w
  5178  055B  0826               	movwf	fsr1l
  5179  055C  0086               	movf	1+(??_memset+0)^080h+0,w
  5180  055D  0827               	movwf	fsr1h
  5181  055E  0087               	movf	(memset@c)^080h,w
  5182  055F  0822               	movwf	indf1
  5183  0560  0081               	line	23
  5184                           	movf	(memset@n)^080h,w
  5185  0561  0824               	addlw	0FCh
  5186  0562  3EFC               	movwf	(??_memset+0)^080h+0
  5187  0563  00A6               	movlw	0FFh
  5188  0564  30FF               	addwfc	(memset@n+1)^080h,w
  5189  0565  3D25               	movwf	1+(??_memset+0)^080h+0
  5190  0566  00A7               	movf	0+(??_memset+0)^080h+0,w
  5191  0567  0826               	addwf	(memset@s)^080h,w
  5192  0568  072C               	movwf	(??_memset+2)^080h+0
  5193  0569  00A8               	movf	1+(??_memset+0)^080h+0,w
  5194  056A  0827               	addwfc	(memset@s+1)^080h,w
  5195  056B  3D2D               	movwf	1+(??_memset+2)^080h+0
  5196  056C  00A9               	movf	0+(??_memset+2)^080h+0,w
  5197  056D  0828               	movwf	fsr1l
  5198  056E  0086               	movf	1+(??_memset+2)^080h+0,w
  5199  056F  0829               	movwf	fsr1h
  5200  0570  0087               	movf	(memset@c)^080h,w
  5201  0571  0822               	movwf	indf1
  5202  0572  0081               	line	24
  5203                           	
  5204                           l2617:	
  5205  0573                     	movlw	0
  5206  0573  3000               	subwf	(memset@n+1)^080h,w
  5207  0574  0225               	movlw	09h
  5208  0575  3009               	skipnz
  5209  0576  1903               	subwf	(memset@n)^080h,w
  5210  0577  0224               	skipnc
  5211  0578  1803               	goto	u1961
  5212  0579  2D7B               	goto	u1960
  5213  057A  2D7C               u1961:
  5214  057B                     	goto	l2621
  5215  057B  2D7E               u1960:
  5216  057C                     	goto	l808
  5217  057C  2DAE               	
  5218                           l2619:	
  5219  057D                     ;	Return value of _memset is never used
  5220                           	goto	l808
  5221  057D  2DAE               	
  5222                           l811:	
  5223  057E                     	line	31
  5224                           	
  5225                           l2621:	
  5226  057E                     	comf	(memset@s)^080h,w
  5227  057E  092C               	movwf	(??_memset+0)^080h+0
  5228  057F  00A6               	comf	(memset@s+1)^080h,w
  5229  0580  092D               	movwf	((??_memset+0)^080h+0+1)
  5230  0581  00A7               	incf	(??_memset+0)^080h+0,f
  5231  0582  0AA6               	skipnz
  5232  0583  1903               	incf	((??_memset+0)^080h+0+1),f
  5233  0584  0AA7               	movlw	03h
  5234  0585  3003               	andwf	0+(??_memset+0)^080h+0,w
  5235  0586  0526               	movwf	(memset@k)^080h
  5236  0587  00AA               	movlw	0
  5237  0588  3000               	andwf	1+(??_memset+0)^080h+0,w
  5238  0589  0527               	movwf	1+(memset@k)^080h
  5239  058A  00AB               	line	32
  5240                           	
  5241                           l2623:	
  5242  058B                     	movf	(memset@k)^080h,w
  5243  058B  082A               	addwf	(memset@s)^080h,f
  5244  058C  07AC               	movf	(memset@k+1)^080h,w
  5245  058D  082B               	addwfc	(memset@s+1)^080h,f
  5246  058E  3DAD               	line	33
  5247                           	
  5248                           l2625:	
  5249  058F                     	movf	(memset@k)^080h,w
  5250  058F  082A               	subwf	(memset@n)^080h,f
  5251  0590  02A4               	movf	(memset@k+1)^080h,w
  5252  0591  082B               	subwfb	(memset@n+1)^080h,f
  5253  0592  3BA5               	line	34
  5254                           	
  5255                           l2627:	
  5256  0593                     	movlw	0FCh
  5257  0593  30FC               	andwf	(memset@n)^080h,f
  5258  0594  05A4               	movlw	0FFh
  5259  0595  30FF               	andwf	(memset@n+1)^080h,f
  5260  0596  05A5               	line	86
  5261                           	goto	l2635
  5262  0597  2DA7               	
  5263                           l813:	
  5264  0598                     	
  5265                           l2629:	
  5266  0598                     	movf	(memset@s)^080h,w
  5267  0598  082C               	movwf	fsr1l
  5268  0599  0086               	movf	(memset@s+1)^080h,w
  5269  059A  082D               	movwf	fsr1h
  5270  059B  0087               	movf	(memset@c)^080h,w
  5271  059C  0822               	movwf	indf1
  5272  059D  0081               	
  5273                           l2631:	
  5274  059E                     	movlw	01h
  5275  059E  3001               	subwf	(memset@n)^080h,f
  5276  059F  02A4               	movlw	0
  5277  05A0  3000               	subwfb	(memset@n+1)^080h,f
  5278  05A1  3BA5               	
  5279                           l2633:	
  5280  05A2                     	movlw	01h
  5281  05A2  3001               	addwf	(memset@s)^080h,f
  5282  05A3  07AC               	movlw	0
  5283  05A4  3000               	addwfc	(memset@s+1)^080h,f
  5284  05A5  3DAD               	goto	l2635
  5285  05A6  2DA7               	
  5286                           l812:	
  5287  05A7                     	
  5288                           l2635:	
  5289  05A7                     	movf	((memset@n)^080h),w
  5290  05A7  0824               iorwf	((memset@n+1)^080h),w
  5291  05A8  0425               	btfss	status,2
  5292  05A9  1D03               	goto	u1971
  5293  05AA  2DAC               	goto	u1970
  5294  05AB  2DAD               u1971:
  5295  05AC                     	goto	l2629
  5296  05AC  2D98               u1970:
  5297  05AD                     	goto	l808
  5298  05AD  2DAE               	
  5299                           l814:	
  5300  05AE                     	line	90
  5301                           ;	Return value of _memset is never used
  5302                           	
  5303                           l808:	
  5304  05AE                     	return
  5305  05AE  0008               	opt stack 0
  5306                           GLOBAL	__end_of_memset
  5307                           	__end_of_memset:
  5308  05AF                     	signat	_memset,12409
  5309                           	global	_Add_Trace
  5310                           
  5311 ;; *************** function _Add_Trace *****************
  5312 ;; Defined at:
  5313 ;;		line 77 in file "161518_temp_main.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;  oText           1    wreg     PTR unsigned char 
  5316 ;;		 -> wInterruptText(75), 
  5317 ;;  iSizeOfoText    1   19[BANK1 ] unsigned char 
  5318 ;;  iText           2   20[BANK1 ] PTR unsigned char 
  5319 ;;		 -> STR_12(7), STR_11(4), STR_10(4), STR_9(2), 
  5320 ;;		 -> STR_8(2), STR_7(5), STR_6(3), wHexTemp(20), 
  5321 ;;		 -> STR_4(3), STR_3(4), STR_2(5), STR_1(4), 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  oText           1   28[BANK1 ] PTR unsigned char 
  5324 ;;		 -> wInterruptText(75), 
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  1    wreg      void 
  5327 ;; Registers used:
  5328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5334 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
       0       0
  5335 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  5336 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
       0       0
  5337 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
       0       0
  5338 ;;Total ram usage:       10 bytes
  5339 ;; Hardware stack levels used:    1
  5340 ;; Hardware stack levels required when called:   11
  5341 ;; This function calls:
  5342 ;;		_strcat
  5343 ;;		_strlen
  5344 ;; This function is called by:
  5345 ;;		_main
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  5349                           	file	"161518_temp_main.c"
  5350                           	line	77
  5351                           global __ptext21
  5352                           __ptext21:	;psect for function _Add_Trace
  5353  0ED4                     psect	text21
  5354                           	file	"161518_temp_main.c"
  5355                           	line	77
  5356                           	global	__size_of_Add_Trace
  5357                           	__size_of_Add_Trace	equ	__end_of_Add_Trace-_Add_Trace
  5358  003A                     	
  5359                           _Add_Trace:	
  5360  0ED4                     ;incstack = 0
  5361                           	opt	stack 4
  5362                           ; Regs used in _Add_Trace: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5363                           ;Add_Trace@oText stored from wreg
  5364                           	movlb 1	; select bank1
  5365  0ED4  0021               	movwf	(Add_Trace@oText)^080h
  5366  0ED5  00BC               	line	79
  5367                           	
  5368                           l2191:	
  5369  0ED6                     	movf	(Add_Trace@oText)^080h,w
  5370  0ED6  083C               	movwf	(strlen@s)^080h
  5371  0ED7  00A0               	movlw	0x1
  5372  0ED8  3001               
  5373                           	movwf	(strlen@s+1)^080h
  5374  0ED9  00A1               	fcall	_strlen
  5375  0EDA  318D  2529  318E   	movlb 1	; select bank1
  5376  0EDD  0021               	comf	(0+(?_strlen))^080h,w
  5377  0EDE  0920               	movwf	(??_Add_Trace+0)^080h+0
  5378  0EDF  00B6               	comf	(1+(?_strlen))^080h,w
  5379  0EE0  0921               	movwf	((??_Add_Trace+0)^080h+0+1)
  5380  0EE1  00B7               	incf	(??_Add_Trace+0)^080h+0,f
  5381  0EE2  0AB6               	skipnz
  5382  0EE3  1903               	incf	((??_Add_Trace+0)^080h+0+1),f
  5383  0EE4  0AB7               	movf	(Add_Trace@iSizeOfoText)^080h,w
  5384  0EE5  0833               	addwf	0+(??_Add_Trace+0)^080h+0,w
  5385  0EE6  0736               	movwf	(??_Add_Trace+2)^080h+0
  5386  0EE7  00B8               	movf	1+(??_Add_Trace+0)^080h+0,w
  5387  0EE8  0837               	skipnc
  5388  0EE9  1803               	incf	1+(??_Add_Trace+0)^080h+0,w
  5389  0EEA  0A37               	movwf	((??_Add_Trace+2)^080h+0)+1
  5390  0EEB  00B9               	movf	0+(??_Add_Trace+2)^080h+0,w
  5391  0EEC  0838               	addlw	01h
  5392  0EED  3E01               	movwf	(??_Add_Trace+4)^080h+0
  5393  0EEE  00BA               	movlw	0
  5394  0EEF  3000               	addwfc	1+(??_Add_Trace+2)^080h+0,w
  5395  0EF0  3D39               	movwf	1+(??_Add_Trace+4)^080h+0
  5396  0EF1  00BB               	movf	(Add_Trace@iText+1)^080h,w
  5397  0EF2  0835               	movwf	(strlen@s+1)^080h
  5398  0EF3  00A1               	movf	(Add_Trace@iText)^080h,w
  5399  0EF4  0834               	movwf	(strlen@s)^080h
  5400  0EF5  00A0               	fcall	_strlen
  5401  0EF6  318D  2529  318E   	movlb 1	; select bank1
  5402  0EF9  0021               	movf	1+(??_Add_Trace+4)^080h+0,w
  5403  0EFA  083B               	subwf	(1+(?_strlen))^080h,w
  5404  0EFB  0221               	skipz
  5405  0EFC  1D03               	goto	u1645
  5406  0EFD  2F00               	movf	0+(??_Add_Trace+4)^080h+0,w
  5407  0EFE  083A               	subwf	(0+(?_strlen))^080h,w
  5408  0EFF  0220               u1645:
  5409  0F00                     	skipnc
  5410  0F00  1803               	goto	u1641
  5411  0F01  2F03               	goto	u1640
  5412  0F02  2F04               u1641:
  5413  0F03                     	goto	l103
  5414  0F03  2F0D               u1640:
  5415  0F04                     	line	81
  5416                           	
  5417                           l2193:	
  5418  0F04                     	movf	(Add_Trace@iText+1)^080h,w
  5419  0F04  0835               	movwf	(strcat@src+1)^080h
  5420  0F05  00AF               	movf	(Add_Trace@iText)^080h,w
  5421  0F06  0834               	movwf	(strcat@src)^080h
  5422  0F07  00AE               	movf	(Add_Trace@oText)^080h,w
  5423  0F08  083C               	fcall	_strcat
  5424  0F09  318C  2474  318E   	goto	l103
  5425  0F0C  2F0D               	line	82
  5426                           	
  5427                           l102:	
  5428  0F0D                     	line	83
  5429                           	
  5430                           l103:	
  5431  0F0D                     	return
  5432  0F0D  0008               	opt stack 0
  5433                           GLOBAL	__end_of_Add_Trace
  5434                           	__end_of_Add_Trace:
  5435  0F0E                     	signat	_Add_Trace,12409
  5436                           	global	_strcat
  5437                           
  5438 ;; *************** function _strcat *****************
  5439 ;; Defined at:
  5440 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  dest            1    wreg     PTR unsigned char 
  5443 ;;		 -> wInterruptText(75), 
  5444 ;;  src             2   14[BANK1 ] PTR const unsigned char 
  5445 ;;		 -> STR_12(7), STR_11(4), STR_10(4), STR_9(2), 
  5446 ;;		 -> STR_8(2), STR_7(5), STR_6(3), wHexTemp(20), 
  5447 ;;		 -> STR_4(3), STR_3(4), STR_2(5), STR_1(4), 
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;  dest            1   18[BANK1 ] PTR unsigned char 
  5450 ;;		 -> wInterruptText(75), 
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  1    wreg      PTR unsigned char 
  5453 ;; Registers used:
  5454 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5460 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  5461 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  5462 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  5463 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
       0       0
  5464 ;;Total ram usage:        5 bytes
  5465 ;; Hardware stack levels used:    1
  5466 ;; Hardware stack levels required when called:   10
  5467 ;; This function calls:
  5468 ;;		_strcpy
  5469 ;;		_strlen
  5470 ;; This function is called by:
  5471 ;;		_Add_Trace
  5472 ;; This function uses a non-reentrant model
  5473 ;;
  5474                           psect	text22,local,class=CODE,delta=2,merge=1,group=2
  5475                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  5476                           	line	3
  5477                           global __ptext22
  5478                           __ptext22:	;psect for function _strcat
  5479  0C74                     psect	text22
  5480                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  5481                           	line	3
  5482                           	global	__size_of_strcat
  5483                           	__size_of_strcat	equ	__end_of_strcat-_strcat
  5484  0019                     	
  5485                           _strcat:	
  5486  0C74                     ;incstack = 0
  5487                           	opt	stack 4
  5488                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5489                           ;strcat@dest stored from wreg
  5490                           	movlb 1	; select bank1
  5491  0C74  0021               	movwf	(strcat@dest)^080h
  5492  0C75  00B2               	line	5
  5493                           	
  5494                           l2101:	
  5495  0C76                     	movf	(strcat@src+1)^080h,w
  5496  0C76  082F               	movwf	(strcpy@src+1)^080h
  5497  0C77  00A7               	movf	(strcat@src)^080h,w
  5498  0C78  082E               	movwf	(strcpy@src)^080h
  5499  0C79  00A6               	movf	(strcat@dest)^080h,w
  5500  0C7A  0832               	movwf	(strlen@s)^080h
  5501  0C7B  00A0               	movlw	0x1
  5502  0C7C  3001               
  5503                           	movwf	(strlen@s+1)^080h
  5504  0C7D  00A1               	fcall	_strlen
  5505  0C7E  318D  2529  318C   	movlb 1	; select bank1
  5506  0C81  0021               	movf	(0+?_strlen)^080h,w
  5507  0C82  0820               	movwf	(??_strcat+0)^080h+0
  5508  0C83  00B0               	movf	(1+?_strlen)^080h,w
  5509  0C84  0821               	movwf	((??_strcat+0)^080h+0+1)
  5510  0C85  00B1               	movf	(strcat@dest)^080h,w
  5511  0C86  0832               	addwf	0+(??_strcat+0)^080h+0,w
  5512  0C87  0730               	fcall	_strcpy
  5513  0C88  318D  254D  318C   	goto	l851
  5514  0C8B  2C8C               	line	6
  5515                           	
  5516                           l2103:	
  5517  0C8C                     	line	7
  5518                           ;	Return value of _strcat is never used
  5519                           	
  5520                           l851:	
  5521  0C8C                     	return
  5522  0C8C  0008               	opt stack 0
  5523                           GLOBAL	__end_of_strcat
  5524                           	__end_of_strcat:
  5525  0C8D                     	signat	_strcat,8313
  5526                           	global	_strlen
  5527                           
  5528 ;; *************** function _strlen *****************
  5529 ;; Defined at:
  5530 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;  s               2    0[BANK1 ] PTR const unsigned char 
  5533 ;;		 -> dbuf(32), STR_12(7), STR_11(4), STR_10(4), 
  5534 ;;		 -> STR_9(2), STR_8(2), STR_7(5), STR_6(3), 
  5535 ;;		 -> wHexTemp(20), STR_4(3), STR_3(4), STR_2(5), 
  5536 ;;		 -> STR_1(4), wInterruptText(75), 
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;  a               2    4[BANK1 ] PTR const unsigned char 
  5539 ;;		 -> dbuf(32), STR_12(7), STR_11(4), STR_10(4), 
  5540 ;;		 -> STR_9(2), STR_8(2), STR_7(5), STR_6(3), 
  5541 ;;		 -> wHexTemp(20), STR_4(3), STR_3(4), STR_2(5), 
  5542 ;;		 -> STR_1(4), wInterruptText(75), 
  5543 ;; Return value:  Size  Location     Type
  5544 ;;                  2    0[BANK1 ] unsigned int 
  5545 ;; Registers used:
  5546 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/0
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5552 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  5553 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  5554 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  5555 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
       0       0
  5556 ;;Total ram usage:        6 bytes
  5557 ;; Hardware stack levels used:    1
  5558 ;; Hardware stack levels required when called:    9
  5559 ;; This function calls:
  5560 ;;		Nothing
  5561 ;; This function is called by:
  5562 ;;		_Add_Trace
  5563 ;;		_PrintLog
  5564 ;;		_strcat
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           psect	text23,local,class=CODE,delta=2,merge=1,group=2
  5568                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  5569                           	line	12
  5570                           global __ptext23
  5571                           __ptext23:	;psect for function _strlen
  5572  0D29                     psect	text23
  5573                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  5574                           	line	12
  5575                           	global	__size_of_strlen
  5576                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  5577  0024                     	
  5578                           _strlen:	
  5579  0D29                     ;incstack = 0
  5580                           	opt	stack 5
  5581                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  5582                           	line	14
  5583                           	
  5584                           l1995:	
  5585  0D29                     	movlb 1	; select bank1
  5586  0D29  0021               	movf	(strlen@s+1)^080h,w
  5587  0D2A  0821               	movwf	(strlen@a+1)^080h
  5588  0D2B  00A5               	movf	(strlen@s)^080h,w
  5589  0D2C  0820               	movwf	(strlen@a)^080h
  5590  0D2D  00A4               	line	16
  5591                           	goto	l1999
  5592  0D2E  2D34               	
  5593                           l861:	
  5594  0D2F                     	line	17
  5595                           	
  5596                           l1997:	
  5597  0D2F                     	movlw	01h
  5598  0D2F  3001               	addwf	(strlen@s)^080h,f
  5599  0D30  07A0               	movlw	0
  5600  0D31  3000               	addwfc	(strlen@s+1)^080h,f
  5601  0D32  3DA1               	goto	l1999
  5602  0D33  2D34               	line	18
  5603                           	
  5604                           l860:	
  5605  0D34                     	line	16
  5606                           	
  5607                           l1999:	
  5608  0D34                     	movf	(strlen@s)^080h,w
  5609  0D34  0820               	movwf	fsr0l
  5610  0D35  0084               	movf	((strlen@s+1)^080h),w
  5611  0D36  0821               	movwf	fsr0h
  5612  0D37  0085               	moviw	fsr0++
  5613  0D38  0012               	btfss	status,2
  5614  0D39  1D03               	goto	u1471
  5615  0D3A  2D3C               	goto	u1470
  5616  0D3B  2D3D               u1471:
  5617  0D3C                     	goto	l1997
  5618  0D3C  2D2F               u1470:
  5619  0D3D                     	goto	l2001
  5620  0D3D  2D3E               	
  5621                           l862:	
  5622  0D3E                     	line	25
  5623                           	
  5624                           l2001:	
  5625  0D3E                     	comf	(strlen@a)^080h,w
  5626  0D3E  0924               	movwf	(??_strlen+0)^080h+0
  5627  0D3F  00A2               	comf	(strlen@a+1)^080h,w
  5628  0D40  0925               	movwf	((??_strlen+0)^080h+0+1)
  5629  0D41  00A3               	incf	(??_strlen+0)^080h+0,f
  5630  0D42  0AA2               	skipnz
  5631  0D43  1903               	incf	((??_strlen+0)^080h+0+1),f
  5632  0D44  0AA3               	movf	(strlen@s)^080h,w
  5633  0D45  0820               	addwf	0+(??_strlen+0)^080h+0,w
  5634  0D46  0722               	movwf	(?_strlen)^080h
  5635  0D47  00A0               	movf	(strlen@s+1)^080h,w
  5636  0D48  0821               	addwfc	1+(??_strlen+0)^080h+0,w
  5637  0D49  3D23               	movwf	1+(?_strlen)^080h
  5638  0D4A  00A1               	goto	l863
  5639  0D4B  2D4C               	
  5640                           l2003:	
  5641  0D4C                     	line	26
  5642                           	
  5643                           l863:	
  5644  0D4C                     	return
  5645  0D4C  0008               	opt stack 0
  5646                           GLOBAL	__end_of_strlen
  5647                           	__end_of_strlen:
  5648  0D4D                     	signat	_strlen,4218
  5649                           	global	_strcpy
  5650                           
  5651 ;; *************** function _strcpy *****************
  5652 ;; Defined at:
  5653 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;  dest            1    wreg     PTR unsigned char 
  5656 ;;		 -> wInterruptText(75), 
  5657 ;;  src             2    6[BANK1 ] PTR const unsigned char 
  5658 ;;		 -> STR_12(7), STR_11(4), STR_10(4), STR_9(2), 
  5659 ;;		 -> STR_8(2), STR_7(5), STR_6(3), wHexTemp(20), 
  5660 ;;		 -> STR_4(3), STR_3(4), STR_2(5), STR_1(4), 
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;  dest            1   13[BANK1 ] PTR unsigned char 
  5663 ;;		 -> wInterruptText(75), 
  5664 ;;  s               2   10[BANK1 ] PTR const unsigned char 
  5665 ;;		 -> STR_12(7), STR_11(4), STR_10(4), STR_9(2), 
  5666 ;;		 -> STR_8(2), STR_7(5), STR_6(3), wHexTemp(20), 
  5667 ;;		 -> STR_4(3), STR_3(4), STR_2(5), STR_1(4), 
  5668 ;;  d               1   12[BANK1 ] PTR unsigned char 
  5669 ;;		 -> wInterruptText(75), 
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  1    wreg      PTR unsigned char 
  5672 ;; Registers used:
  5673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5679 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  5680 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
       0       0
  5681 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  5682 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
       0       0
  5683 ;;Total ram usage:        8 bytes
  5684 ;; Hardware stack levels used:    1
  5685 ;; Hardware stack levels required when called:    9
  5686 ;; This function calls:
  5687 ;;		Nothing
  5688 ;; This function is called by:
  5689 ;;		_strcat
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           psect	text24,local,class=CODE,delta=2,merge=1,group=2
  5693                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  5694                           	line	7
  5695                           global __ptext24
  5696                           __ptext24:	;psect for function _strcpy
  5697  0D4D                     psect	text24
  5698                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  5699                           	line	7
  5700                           	global	__size_of_strcpy
  5701                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  5702  0025                     	
  5703                           _strcpy:	
  5704  0D4D                     ;incstack = 0
  5705                           	opt	stack 4
  5706                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  5707                           ;strcpy@dest stored from wreg
  5708                           	movlb 1	; select bank1
  5709  0D4D  0021               	movwf	(strcpy@dest)^080h
  5710  0D4E  00AD               	line	13
  5711                           	
  5712                           l2093:	
  5713  0D4F                     	movf	(strcpy@src+1)^080h,w
  5714  0D4F  0827               	movwf	(strcpy@s+1)^080h
  5715  0D50  00AB               	movf	(strcpy@src)^080h,w
  5716  0D51  0826               	movwf	(strcpy@s)^080h
  5717  0D52  00AA               	line	14
  5718                           	movf	(strcpy@dest)^080h,w
  5719  0D53  082D               	movwf	(??_strcpy+0)^080h+0
  5720  0D54  00A8               	movf	(??_strcpy+0)^080h+0,w
  5721  0D55  0828               	movwf	(strcpy@d)^080h
  5722  0D56  00AC               	line	15
  5723                           	goto	l2095
  5724  0D57  2D59               	
  5725                           l855:	
  5726  0D58                     	goto	l2095
  5727  0D58  2D59               	
  5728                           l854:	
  5729  0D59                     	
  5730                           l2095:	
  5731  0D59                     	movf	(strcpy@d)^080h,w
  5732  0D59  082C               	movwf	fsr1l
  5733  0D5A  0086               	movlw 1	; select bank2/3
  5734  0D5B  3001               	movwf fsr1h	
  5735  0D5C  0087               	
  5736                           	incf	(strcpy@d)^080h,f
  5737  0D5D  0AAC               	movf	(strcpy@s+1)^080h,w
  5738  0D5E  082B               	movwf	(??_strcpy+0)^080h+0+1
  5739  0D5F  00A9               	movf	(strcpy@s)^080h,w
  5740  0D60  082A               	movwf	(??_strcpy+0)^080h+0
  5741  0D61  00A8               	incf	(strcpy@s)^080h,f
  5742  0D62  0AAA               	skipnz
  5743  0D63  1903               	incf	(strcpy@s+1)^080h,f
  5744  0D64  0AAB               	movf	0+(??_strcpy+0)^080h+0,w
  5745  0D65  0828               	movwf	fsr0l
  5746  0D66  0084               	movf	(1+(??_strcpy+0)^080h+0),w
  5747  0D67  0829               	movwf	fsr0h
  5748  0D68  0085               	movf	indf0,w ;code access
  5749  0D69  0800               	movwi	[0]fsr1
  5750  0D6A  3FC0               	movf	wreg
  5751  0D6B  0889               	btfss	status,2
  5752  0D6C  1D03               	goto	u1531
  5753  0D6D  2D6F               	goto	u1530
  5754  0D6E  2D70               u1531:
  5755  0D6F                     	goto	l2095
  5756  0D6F  2D59               u1530:
  5757  0D70                     	goto	l857
  5758  0D70  2D71               	
  5759                           l856:	
  5760  0D71                     	line	18
  5761                           ;	Return value of _strcpy is never used
  5762                           	
  5763                           l857:	
  5764  0D71                     	return
  5765  0D71  0008               	opt stack 0
  5766                           GLOBAL	__end_of_strcpy
  5767                           	__end_of_strcpy:
  5768  0D72                     	signat	_strcpy,8313
  5769                           	global	_myint
  5770                           
  5771 ;; *************** function _myint *****************
  5772 ;; Defined at:
  5773 ;;		line 242 in file "161518_temp_main.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;		None
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;		None
  5778 ;; Return value:  Size  Location     Type
  5779 ;;                  1    wreg      void 
  5780 ;; Registers used:
  5781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5782 ;; Tracked objects:
  5783 ;;		On entry : 0/0
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5789 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5790 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5791 ;;Total ram usage:        2 bytes
  5792 ;; Hardware stack levels used:    1
  5793 ;; Hardware stack levels required when called:    8
  5794 ;; This function calls:
  5795 ;;		_ToggleBitRB5
  5796 ;;		_sprintf
  5797 ;;		i1_Add_Trace
  5798 ;; This function is called by:
  5799 ;;		Interrupt level 1
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           psect	intentry,class=CODE,delta=2
  5803                           global __pintentry
  5804                           __pintentry:
  5805  0004                     psect	intentry
  5806                           	file	"161518_temp_main.c"
  5807                           	line	242
  5808                           	global	__size_of_myint
  5809                           	__size_of_myint	equ	__end_of_myint-_myint
  5810  0154                     	
  5811                           _myint:	
  5812  0004                     ;incstack = 0
  5813                           	opt	stack 1
  5814                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
  5815  0004  147E               ; Regs used in _myint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5816                           psect	intentry
  5817                           	pagesel	$
  5818  0005  3180               	line	245
  5819                           	
  5820                           i1l2411:	
  5821  0006                     	movlb 0	; select bank0
  5822  0006  0020               	btfss	(17),3	;volatile
  5823  0007  1D91               	goto	u171_21
  5824  0008  280A               	goto	u171_20
  5825  0009  280B               u171_21:
  5826  000A                     	goto	i1l2485
  5827  000A  293F               u171_20:
  5828  000B                     	line	247
  5829                           	
  5830                           i1l2413:	
  5831  000B                     	bcf	(17),3	;volatile
  5832  000B  1191               	line	248
  5833                           	
  5834                           i1l2415:	
  5835  000C                     	movlb 1	; select bank1
  5836  000C  0021               	movf	((_wI2CTxBufferSize)^080h),w
  5837  000D  0849               	btfsc	status,2
  5838  000E  1903               	goto	u172_21
  5839  000F  2811               	goto	u172_20
  5840  0010  2812               u172_21:
  5841  0011                     	goto	i1l2485
  5842  0011  293F               u172_20:
  5843  0012                     	line	250
  5844                           	
  5845                           i1l2417:	
  5846  0012                     	movlb 4	; select bank4
  5847  0012  0024               	btfss	(532)^0200h,4	;volatile
  5848  0013  1E14               	goto	u173_21
  5849  0014  2816               	goto	u173_20
  5850  0015  2817               u173_21:
  5851  0016                     	goto	i1l135
  5852  0016  282A               u173_20:
  5853  0017                     	line	252
  5854                           	
  5855                           i1l2419:	
  5856  0017                     	movlw	low(04Bh)
  5857  0017  304B               	movlb 0	; select bank0
  5858  0018  0020               	movwf	(??_myint+0)+0
  5859  0019  00E2               	movf	(??_myint+0)+0,w
  5860  001A  0862               	movwf	(i1Add_Trace@iSizeOfoText)
  5861  001B  00A5               	movlw	low(((STR_4)|8000h))
  5862  001C  3026               	movwf	(i1Add_Trace@iText)
  5863  001D  00A6               	movlw	high(((STR_4)|8000h))
  5864  001E  3090               	movwf	((i1Add_Trace@iText))+1
  5865  001F  00A7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  5866  0020  30A0               	fcall	i1_Add_Trace
  5867  0021  318E  269A  3180   	line	253
  5868                           	
  5869                           i1l2421:	
  5870  0024                     	movlb 1	; select bank1
  5871  0024  0021               	bcf	(145)^080h,3	;volatile
  5872  0025  1191               	line	254
  5873                           	
  5874                           i1l2423:	
  5875  0026                     	clrf	(_wI2CTxBufferSize)^080h
  5876  0026  01C9               	line	255
  5877                           	
  5878                           i1l2425:	
  5879  0027                     	movlb 0	; select bank0
  5880  0027  0020               	clrf	(_wI2CTxSendPos)
  5881  0028  01ED               	line	256
  5882                           	goto	i1l2485
  5883  0029  293F               	line	257
  5884                           	
  5885                           i1l135:	
  5886  002A                     	btfss	(532)^0200h,0	;volatile
  5887  002A  1C14               	goto	u174_21
  5888  002B  282D               	goto	u174_20
  5889  002C  282E               u174_21:
  5890  002D                     	goto	i1l137
  5891  002D  287B               u174_20:
  5892  002E                     	
  5893                           i1l2427:	
  5894  002E                     	movlb 1	; select bank1
  5895  002E  0021               	btfss	(_wI2CTxBuffer)^080h,(0)&7
  5896  002F  1C4D               	goto	u175_21
  5897  0030  2832               	goto	u175_20
  5898  0031  2833               u175_21:
  5899  0032                     	goto	i1l137
  5900  0032  287B               u175_20:
  5901  0033                     	line	259
  5902                           	
  5903                           i1l2429:	
  5904  0033                     	movlw	low(((STR_5)|8000h))
  5905  0033  3007               	movlb 0	; select bank0
  5906  0034  0020               	movwf	(sprintf@fmt)
  5907  0035  00D5               	movlw	high(((STR_5)|8000h))
  5908  0036  3090               	movwf	((sprintf@fmt))+1
  5909  0037  00D6               	movlb 4	; select bank4
  5910  0038  0024               	movf	(529)^0200h,w	;volatile
  5911  0039  0811               	movlb 0	; select bank0
  5912  003A  0020               	movwf	(??_myint+0)+0
  5913  003B  00E2               	clrf	(??_myint+0)+0+1
  5914  003C  01E3               	movf	0+(??_myint+0)+0,w
  5915  003D  0862               	movwf	0+(?_sprintf)+02h
  5916  003E  00D7               	movf	1+(??_myint+0)+0,w
  5917  003F  0863               	movwf	1+(?_sprintf)+02h
  5918  0040  00D8               	movlw	(low(_wHexTemp|((0x1)<<8)))&0ffh
  5919  0041  3040               	fcall	_sprintf
  5920  0042  318D  25C0  3180   	line	260
  5921                           	movlw	low(04Bh)
  5922  0045  304B               	movlb 0	; select bank0
  5923  0046  0020               	movwf	(??_myint+0)+0
  5924  0047  00E2               	movf	(??_myint+0)+0,w
  5925  0048  0862               	movwf	(i1Add_Trace@iSizeOfoText)
  5926  0049  00A5               	movlw	low(_wHexTemp)
  5927  004A  3040               	movwf	(i1Add_Trace@iText)
  5928  004B  00A6               	movlw	high(_wHexTemp)
  5929  004C  3001               	movwf	(i1Add_Trace@iText+1)
  5930  004D  00A7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  5931  004E  30A0               	fcall	i1_Add_Trace
  5932  004F  318E  269A  3180   	line	261
  5933                           	
  5934                           i1l2431:	
  5935  0052                     	movlb 4	; select bank4
  5936  0052  0024               	movf	(529)^0200h,w	;volatile
  5937  0053  0811               	movlb 0	; select bank0
  5938  0054  0020               	movwf	(??_myint+0)+0
  5939  0055  00E2               	movf	(_wReceptionBufferPosition),w
  5940  0056  086F               	addlw	low(_wReceptionBuffer|((0x2)<<8))&0ffh
  5941  0057  3E20               	movwf	fsr1l
  5942  0058  0086               	movlw 2	; select bank4/5
  5943  0059  3002               	movwf fsr1h	
  5944  005A  0087               	
  5945                           	movf	(??_myint+0)+0,w
  5946  005B  0862               	movwf	indf1
  5947  005C  0081               	line	262
  5948                           	
  5949                           i1l2433:	
  5950  005D                     	movf	((_wReceptionBufferPosition)),w
  5951  005D  086F               	btfss	status,2
  5952  005E  1D03               	goto	u176_21
  5953  005F  2861               	goto	u176_20
  5954  0060  2862               u176_21:
  5955  0061                     	goto	i1l2437
  5956  0061  2866               u176_20:
  5957  0062                     	line	264
  5958                           	
  5959                           i1l2435:	
  5960  0062                     	fcall	_ToggleBitRB5
  5961  0062  318C  2425  3180   	goto	i1l2437
  5962  0065  2866               	line	265
  5963                           	
  5964                           i1l138:	
  5965  0066                     	line	266
  5966                           	
  5967                           i1l2437:	
  5968  0066                     	movlw	low(01h)
  5969  0066  3001               	movlb 0	; select bank0
  5970  0067  0020               	movwf	(??_myint+0)+0
  5971  0068  00E2               	movf	(??_myint+0)+0,w
  5972  0069  0862               	addwf	(_wReceptionBufferPosition),f
  5973  006A  07EF               	line	268
  5974                           	
  5975                           i1l2439:	
  5976  006B                     	movlb 4	; select bank4
  5977  006B  0024               	bcf	(532)^0200h,0	;volatile
  5978  006C  1014               	line	269
  5979                           	
  5980                           i1l2441:	
  5981  006D                     	movlb 0	; select bank0
  5982  006D  0020               	movf	(_wI2CRxBufferSize),w
  5983  006E  086E               	subwf	(_wReceptionBufferPosition),w
  5984  006F  026F               	skipnc
  5985  0070  1803               	goto	u177_21
  5986  0071  2873               	goto	u177_20
  5987  0072  2874               u177_21:
  5988  0073                     	goto	i1l139
  5989  0073  2877               u177_20:
  5990  0074                     	line	271
  5991                           	
  5992                           i1l2443:	
  5993  0074                     	movlb 4	; select bank4
  5994  0074  0024               	bcf	(534)^0200h,5	;volatile
  5995  0075  1296               	line	272
  5996                           	goto	i1l140
  5997  0076  2879               	line	273
  5998                           	
  5999                           i1l139:	
  6000  0077                     	line	275
  6001                           	movlb 4	; select bank4
  6002  0077  0024               	bsf	(534)^0200h,5	;volatile
  6003  0078  1696               	line	276
  6004                           	
  6005                           i1l140:	
  6006  0079                     	line	277
  6007                           	bsf	(534)^0200h,4	;volatile
  6008  0079  1616               	line	278
  6009                           	goto	i1l2485
  6010  007A  293F               	line	279
  6011                           	
  6012                           i1l137:	
  6013  007B                     	movlb 4	; select bank4
  6014  007B  0024               	btfss	(532)^0200h,3	;volatile
  6015  007C  1D94               	goto	u178_21
  6016  007D  287F               	goto	u178_20
  6017  007E  2880               u178_21:
  6018  007F                     	goto	i1l142
  6019  007F  28B5               u178_20:
  6020  0080                     	
  6021                           i1l2445:	
  6022  0080                     	movlb 0	; select bank0
  6023  0080  0020               	movf	((_wI2CTxSendPos)),w
  6024  0081  086D               	btfss	status,2
  6025  0082  1D03               	goto	u179_21
  6026  0083  2885               	goto	u179_20
  6027  0084  2886               u179_21:
  6028  0085                     	goto	i1l142
  6029  0085  28B5               u179_20:
  6030  0086                     	line	281
  6031                           	
  6032                           i1l2447:	
  6033  0086                     	movlw	low(04Bh)
  6034  0086  304B               	movwf	(??_myint+0)+0
  6035  0087  00E2               	movf	(??_myint+0)+0,w
  6036  0088  0862               	movwf	(i1Add_Trace@iSizeOfoText)
  6037  0089  00A5               	movlw	low(((STR_6)|8000h))
  6038  008A  3029               	movwf	(i1Add_Trace@iText)
  6039  008B  00A6               	movlw	high(((STR_6)|8000h))
  6040  008C  3090               	movwf	((i1Add_Trace@iText))+1
  6041  008D  00A7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  6042  008E  30A0               	fcall	i1_Add_Trace
  6043  008F  318E  269A  3180   	line	282
  6044                           	
  6045                           i1l2449:	
  6046  0092                     	movlb 1	; select bank1
  6047  0092  0021               	movf	((_wI2CTxBufferSize)^080h),w
  6048  0093  0849               	btfsc	status,2
  6049  0094  1903               	goto	u180_21
  6050  0095  2897               	goto	u180_20
  6051  0096  2898               u180_21:
  6052  0097                     	goto	i1l2455
  6053  0097  28A6               u180_20:
  6054  0098                     	line	284
  6055                           	
  6056                           i1l2451:	
  6057  0098                     	movlb 0	; select bank0
  6058  0098  0020               	movf	(_wI2CTxSendPos),w
  6059  0099  086D               	addlw	low(_wI2CTxBuffer|((0x0)<<8))&0ffh
  6060  009A  3ECD               	movwf	fsr1l
  6061  009B  0086               	clrf fsr1h	
  6062  009C  0187               	
  6063                           	movf	indf1,w
  6064  009D  0801               	movlb 4	; select bank4
  6065  009E  0024               	movwf	(529)^0200h	;volatile
  6066  009F  0091               	line	285
  6067                           	
  6068                           i1l2453:	
  6069  00A0                     	movlw	low(01h)
  6070  00A0  3001               	movlb 0	; select bank0
  6071  00A1  0020               	movwf	(??_myint+0)+0
  6072  00A2  00E2               	movf	(??_myint+0)+0,w
  6073  00A3  0862               	addwf	(_wI2CTxSendPos),f
  6074  00A4  07ED               	line	286
  6075                           	goto	i1l2485
  6076  00A5  293F               	line	287
  6077                           	
  6078                           i1l143:	
  6079  00A6                     	line	289
  6080                           	
  6081                           i1l2455:	
  6082  00A6                     	movlw	low(04Bh)
  6083  00A6  304B               	movlb 0	; select bank0
  6084  00A7  0020               	movwf	(??_myint+0)+0
  6085  00A8  00E2               	movf	(??_myint+0)+0,w
  6086  00A9  0862               	movwf	(i1Add_Trace@iSizeOfoText)
  6087  00AA  00A5               	movlw	low(((STR_7)|8000h))
  6088  00AB  3011               	movwf	(i1Add_Trace@iText)
  6089  00AC  00A6               	movlw	high(((STR_7)|8000h))
  6090  00AD  3090               	movwf	((i1Add_Trace@iText))+1
  6091  00AE  00A7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  6092  00AF  30A0               	fcall	i1_Add_Trace
  6093  00B0  318E  269A  3180   	goto	i1l2485
  6094  00B3  293F               	line	290
  6095                           	
  6096                           i1l144:	
  6097  00B4                     	line	291
  6098                           	goto	i1l2485
  6099  00B4  293F               	line	292
  6100                           	
  6101                           i1l142:	
  6102  00B5                     	line	294
  6103                           	movlb 4	; select bank4
  6104  00B5  0024               	btfsc	(534)^0200h,6	;volatile
  6105  00B6  1B16               	goto	u181_21
  6106  00B7  28B9               	goto	u181_20
  6107  00B8  28BA               u181_21:
  6108  00B9                     	goto	i1l146
  6109  00B9  290A               u181_20:
  6110  00BA                     	
  6111                           i1l2457:	
  6112  00BA                     	movlb 0	; select bank0
  6113  00BA  0020               	movf	((_wI2CTxSendPos)),w
  6114  00BB  086D               	btfsc	status,2
  6115  00BC  1903               	goto	u182_21
  6116  00BD  28BF               	goto	u182_20
  6117  00BE  28C0               u182_21:
  6118  00BF                     	goto	i1l146
  6119  00BF  290A               u182_20:
  6120  00C0                     	line	296
  6121                           	
  6122                           i1l2459:	
  6123  00C0                     	movlw	low(04Bh)
  6124  00C0  304B               	movwf	(??_myint+0)+0
  6125  00C1  00E2               	movf	(??_myint+0)+0,w
  6126  00C2  0862               	movwf	(i1Add_Trace@iSizeOfoText)
  6127  00C3  00A5               	movlw	low(((STR_8)|8000h))
  6128  00C4  3024               	movwf	(i1Add_Trace@iText)
  6129  00C5  00A6               	movlw	high(((STR_8)|8000h))
  6130  00C6  3090               	movwf	((i1Add_Trace@iText))+1
  6131  00C7  00A7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  6132  00C8  30A0               	fcall	i1_Add_Trace
  6133  00C9  318E  269A  3180   	line	298
  6134                           	
  6135                           i1l2461:	
  6136  00CC                     	movlb 1	; select bank1
  6137  00CC  0021               	movf	(_wI2CTxBufferSize)^080h,w
  6138  00CD  0849               	movlb 0	; select bank0
  6139  00CE  0020               	subwf	(_wI2CTxSendPos),w
  6140  00CF  026D               	skipnc
  6141  00D0  1803               	goto	u183_21
  6142  00D1  28D3               	goto	u183_20
  6143  00D2  28D4               u183_21:
  6144  00D3                     	goto	i1l147
  6145  00D3  28E1               u183_20:
  6146  00D4                     	line	300
  6147                           	
  6148                           i1l2463:	
  6149  00D4                     	movf	(_wI2CTxSendPos),w
  6150  00D4  086D               	addlw	low(_wI2CTxBuffer|((0x0)<<8))&0ffh
  6151  00D5  3ECD               	movwf	fsr1l
  6152  00D6  0086               	clrf fsr1h	
  6153  00D7  0187               	
  6154                           	movf	indf1,w
  6155  00D8  0801               	movlb 4	; select bank4
  6156  00D9  0024               	movwf	(529)^0200h	;volatile
  6157  00DA  0091               	line	301
  6158                           	
  6159                           i1l2465:	
  6160  00DB                     	movlw	low(01h)
  6161  00DB  3001               	movlb 0	; select bank0
  6162  00DC  0020               	movwf	(??_myint+0)+0
  6163  00DD  00E2               	movf	(??_myint+0)+0,w
  6164  00DE  0862               	addwf	(_wI2CTxSendPos),f
  6165  00DF  07ED               	line	302
  6166                           	goto	i1l2485
  6167  00E0  293F               	line	303
  6168                           	
  6169                           i1l147:	
  6170  00E1                     	line	305
  6171                           	movlb 1	; select bank1
  6172  00E1  0021               	btfss	(_wI2CTxBuffer)^080h,(0)&7
  6173  00E2  1C4D               	goto	u184_21
  6174  00E3  28E5               	goto	u184_20
  6175  00E4  28E6               u184_21:
  6176  00E5                     	goto	i1l149
  6177  00E5  2905               u184_20:
  6178  00E6                     	line	307
  6179                           	
  6180                           i1l2467:	
  6181  00E6                     	movlb 0	; select bank0
  6182  00E6  0020               	movf	(_wI2CRxBufferSize),w
  6183  00E7  086E               	subwf	(_wReceptionBufferPosition),w
  6184  00E8  026F               	skipnc
  6185  00E9  1803               	goto	u185_21
  6186  00EA  28EC               	goto	u185_20
  6187  00EB  28ED               u185_21:
  6188  00EC                     	goto	i1l150
  6189  00EC  2901               u185_20:
  6190  00ED                     	line	309
  6191                           	
  6192                           i1l2469:	
  6193  00ED                     	opt asmopt_push
  6194                           opt asmopt_off
  6195                           	movlw	66
  6196  00ED  3042               u218_27:
  6197  00EE                     decfsz	wreg
  6198  00EE  0B89               	goto	u218_27
  6199  00EF  28EE               	nop2
  6200  00F0  3200               opt asmopt_pop
  6201                           
  6202                           	line	310
  6203                           	
  6204                           i1l2471:	
  6205  00F1                     	movlb 4	; select bank4
  6206  00F1  0024               	bsf	(534)^0200h,3	;volatile
  6207  00F2  1596               	line	311
  6208                           	
  6209                           i1l2473:	
  6210  00F3                     	movlw	low(04Bh)
  6211  00F3  304B               	movlb 0	; select bank0
  6212  00F4  0020               	movwf	(??_myint+0)+0
  6213  00F5  00E2               	movf	(??_myint+0)+0,w
  6214  00F6  0862               	movwf	(i1Add_Trace@iSizeOfoText)
  6215  00F7  00A5               	movlw	low(((STR_9)|8000h))
  6216  00F8  302C               	movwf	(i1Add_Trace@iText)
  6217  00F9  00A6               	movlw	high(((STR_9)|8000h))
  6218  00FA  3090               	movwf	((i1Add_Trace@iText))+1
  6219  00FB  00A7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  6220  00FC  30A0               	fcall	i1_Add_Trace
  6221  00FD  318E  269A  3180   	line	313
  6222                           	goto	i1l2485
  6223  0100  293F               	line	314
  6224                           	
  6225                           i1l150:	
  6226  0101                     	line	316
  6227                           	movlb 4	; select bank4
  6228  0101  0024               	bsf	(534)^0200h,2	;volatile
  6229  0102  1516               	goto	i1l2485
  6230  0103  293F               	line	317
  6231                           	
  6232                           i1l151:	
  6233  0104                     	line	318
  6234                           	goto	i1l2485
  6235  0104  293F               	line	319
  6236                           	
  6237                           i1l149:	
  6238  0105                     	line	321
  6239                           	movlb 4	; select bank4
  6240  0105  0024               	bsf	(534)^0200h,2	;volatile
  6241  0106  1516               	goto	i1l2485
  6242  0107  293F               	line	322
  6243                           	
  6244                           i1l152:	
  6245  0108                     	goto	i1l2485
  6246  0108  293F               	line	323
  6247                           	
  6248                           i1l148:	
  6249  0109                     	line	324
  6250                           	goto	i1l2485
  6251  0109  293F               	line	325
  6252                           	
  6253                           i1l146:	
  6254  010A                     	movlb 4	; select bank4
  6255  010A  0024               	btfss	(534)^0200h,6	;volatile
  6256  010B  1F16               	goto	u186_21
  6257  010C  290E               	goto	u186_20
  6258  010D  290F               u186_21:
  6259  010E                     	goto	i1l2483
  6260  010E  292B               u186_20:
  6261  010F                     	line	327
  6262                           	
  6263                           i1l2475:	
  6264  010F                     	movlw	low(04Bh)
  6265  010F  304B               	movlb 0	; select bank0
  6266  0110  0020               	movwf	(??_myint+0)+0
  6267  0111  00E2               	movf	(??_myint+0)+0,w
  6268  0112  0862               	movwf	(i1Add_Trace@iSizeOfoText)
  6269  0113  00A5               	movlw	low(((STR_10)|8000h))
  6270  0114  3022               	movwf	(i1Add_Trace@iText)
  6271  0115  00A6               	movlw	high(((STR_10)|8000h))
  6272  0116  3090               	movwf	((i1Add_Trace@iText))+1
  6273  0117  00A7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  6274  0118  30A0               	fcall	i1_Add_Trace
  6275  0119  318E  269A  3180   	line	328
  6276                           	
  6277                           i1l2477:	
  6278  011C                     	movlb 4	; select bank4
  6279  011C  0024               	bcf	(534)^0200h,6	;volatile
  6280  011D  1316               	line	329
  6281                           	
  6282                           i1l2479:	
  6283  011E                     	movlb 0	; select bank0
  6284  011E  0020               	movf	((_wI2CTxSendPos)),w
  6285  011F  086D               	btfsc	status,2
  6286  0120  1903               	goto	u187_21
  6287  0121  2923               	goto	u187_20
  6288  0122  2924               u187_21:
  6289  0123                     	goto	i1l155
  6290  0123  2927               u187_20:
  6291  0124                     	line	331
  6292                           	
  6293                           i1l2481:	
  6294  0124                     	movlb 4	; select bank4
  6295  0124  0024               	bsf	(534)^0200h,2	;volatile
  6296  0125  1516               	line	332
  6297                           	goto	i1l2485
  6298  0126  293F               	line	333
  6299                           	
  6300                           i1l155:	
  6301  0127                     	line	335
  6302                           	movlb 4	; select bank4
  6303  0127  0024               	bsf	(534)^0200h,2	;volatile
  6304  0128  1516               	goto	i1l2485
  6305  0129  293F               	line	336
  6306                           	
  6307                           i1l156:	
  6308  012A                     	line	337
  6309                           	goto	i1l2485
  6310  012A  293F               	line	338
  6311                           	
  6312                           i1l154:	
  6313  012B                     	line	340
  6314                           	
  6315                           i1l2483:	
  6316  012B                     	movlw	low(04Bh)
  6317  012B  304B               	movlb 0	; select bank0
  6318  012C  0020               	movwf	(??_myint+0)+0
  6319  012D  00E2               	movf	(??_myint+0)+0,w
  6320  012E  0862               	movwf	(i1Add_Trace@iSizeOfoText)
  6321  012F  00A5               	movlw	low(((STR_11)|8000h))
  6322  0130  3016               	movwf	(i1Add_Trace@iText)
  6323  0131  00A6               	movlw	high(((STR_11)|8000h))
  6324  0132  3090               	movwf	((i1Add_Trace@iText))+1
  6325  0133  00A7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  6326  0134  30A0               	fcall	i1_Add_Trace
  6327  0135  318E  269A  3180   	goto	i1l2485
  6328  0138  293F               	line	341
  6329                           	
  6330                           i1l157:	
  6331  0139                     	goto	i1l2485
  6332  0139  293F               	
  6333                           i1l153:	
  6334  013A                     	goto	i1l2485
  6335  013A  293F               	line	342
  6336                           	
  6337                           i1l145:	
  6338  013B                     	goto	i1l2485
  6339  013B  293F               	
  6340                           i1l141:	
  6341  013C                     	goto	i1l2485
  6342  013C  293F               	
  6343                           i1l136:	
  6344  013D                     	goto	i1l2485
  6345  013D  293F               	line	343
  6346                           	
  6347                           i1l134:	
  6348  013E                     	goto	i1l2485
  6349  013E  293F               	line	344
  6350                           	
  6351                           i1l133:	
  6352  013F                     	line	345
  6353                           	
  6354                           i1l2485:	
  6355  013F                     	movlb 0	; select bank0
  6356  013F  0020               	btfss	(18),3	;volatile
  6357  0140  1D92               	goto	u188_21
  6358  0141  2943               	goto	u188_20
  6359  0142  2944               u188_21:
  6360  0143                     	goto	i1l159
  6361  0143  2956               u188_20:
  6362  0144                     	line	347
  6363                           	
  6364                           i1l2487:	
  6365  0144                     	fcall	_ToggleBitRB5
  6366  0144  318C  2425  3180   	line	348
  6367                           	
  6368                           i1l2489:	
  6369  0147                     	movlb 0	; select bank0
  6370  0147  0020               	bcf	(18),3	;volatile
  6371  0148  1192               	line	349
  6372                           	
  6373                           i1l2491:	
  6374  0149                     	movlw	low(04Bh)
  6375  0149  304B               	movwf	(??_myint+0)+0
  6376  014A  00E2               	movf	(??_myint+0)+0,w
  6377  014B  0862               	movwf	(i1Add_Trace@iSizeOfoText)
  6378  014C  00A5               	movlw	low(((STR_12)|8000h))
  6379  014D  3000               	movwf	(i1Add_Trace@iText)
  6380  014E  00A6               	movlw	high(((STR_12)|8000h))
  6381  014F  3090               	movwf	((i1Add_Trace@iText))+1
  6382  0150  00A7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  6383  0151  30A0               	fcall	i1_Add_Trace
  6384  0152  318E  269A  3180   	goto	i1l159
  6385  0155  2956               	line	350
  6386                           	
  6387                           i1l158:	
  6388  0156                     	line	351
  6389                           	
  6390                           i1l159:	
  6391  0156                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  6392  0156  107E               	retfie
  6393  0157  0009               	opt stack 0
  6394                           GLOBAL	__end_of_myint
  6395                           	__end_of_myint:
  6396  0158                     	signat	_myint,89
  6397                           	global	i1_Add_Trace
  6398                           
  6399 ;; *************** function i1_Add_Trace *****************
  6400 ;; Defined at:
  6401 ;;		line 77 in file "161518_temp_main.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;  oText           1    wreg     PTR unsigned char 
  6404 ;;		 -> wInterruptText(75), 
  6405 ;;  iSizeOfoText    1    5[BANK0 ] unsigned char 
  6406 ;;  iText           2    6[BANK0 ] PTR unsigned char 
  6407 ;;		 -> STR_12(7), STR_11(4), STR_10(4), STR_9(2), 
  6408 ;;		 -> STR_8(2), STR_7(5), STR_6(3), wHexTemp(20), 
  6409 ;;		 -> STR_4(3), STR_3(4), STR_2(5), STR_1(4), 
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;  oText           1   14[BANK0 ] PTR unsigned char 
  6412 ;;		 -> wInterruptText(75), 
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1    wreg      void 
  6415 ;; Registers used:
  6416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6422 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  6423 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6424 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  6425 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  6426 ;;Total ram usage:       10 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:    2
  6429 ;; This function calls:
  6430 ;;		i1_strcat
  6431 ;;		i1_strlen
  6432 ;; This function is called by:
  6433 ;;		_myint
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  6437                           	line	77
  6438                           global __ptext26
  6439                           __ptext26:	;psect for function i1_Add_Trace
  6440  0E9A                     psect	text26
  6441                           	file	"161518_temp_main.c"
  6442                           	line	77
  6443                           	global	__size_ofi1_Add_Trace
  6444                           	__size_ofi1_Add_Trace	equ	__end_ofi1_Add_Trace-i1_Add_Trace
  6445  003A                     	
  6446                           i1_Add_Trace:	
  6447  0E9A                     ;incstack = 0
  6448                           	opt	stack 6
  6449                           ; Regs used in i1_Add_Trace: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6450                           ;i1Add_Trace@oText stored from wreg
  6451                           	movlb 0	; select bank0
  6452  0E9A  0020               	movwf	(i1Add_Trace@oText)
  6453  0E9B  00AE               	line	79
  6454                           	
  6455                           i1l2279:	
  6456  0E9C                     	movf	(i1Add_Trace@oText),w
  6457  0E9C  082E               	movwf	(i1strlen@s)
  6458  0E9D  00F0               	movlw	0x1
  6459  0E9E  3001               
  6460                           	movwf	(i1strlen@s+1)
  6461  0E9F  00F1               	fcall	i1_strlen
  6462  0EA0  318C  24E2  318E   	comf	(0+(?i1_strlen)),w
  6463  0EA3  0970               	movlb 0	; select bank0
  6464  0EA4  0020               	movwf	(??i1_Add_Trace+0)+0
  6465  0EA5  00A8               	comf	(1+(?i1_strlen)),w
  6466  0EA6  0971               	movwf	((??i1_Add_Trace+0)+0+1)
  6467  0EA7  00A9               	incf	(??i1_Add_Trace+0)+0,f
  6468  0EA8  0AA8               	skipnz
  6469  0EA9  1903               	incf	((??i1_Add_Trace+0)+0+1),f
  6470  0EAA  0AA9               	movf	(i1Add_Trace@iSizeOfoText),w
  6471  0EAB  0825               	addwf	0+(??i1_Add_Trace+0)+0,w
  6472  0EAC  0728               	movwf	(??i1_Add_Trace+2)+0
  6473  0EAD  00AA               	movf	1+(??i1_Add_Trace+0)+0,w
  6474  0EAE  0829               	skipnc
  6475  0EAF  1803               	incf	1+(??i1_Add_Trace+0)+0,w
  6476  0EB0  0A29               	movwf	((??i1_Add_Trace+2)+0)+1
  6477  0EB1  00AB               	movf	0+(??i1_Add_Trace+2)+0,w
  6478  0EB2  082A               	addlw	01h
  6479  0EB3  3E01               	movwf	(??i1_Add_Trace+4)+0
  6480  0EB4  00AC               	movlw	0
  6481  0EB5  3000               	addwfc	1+(??i1_Add_Trace+2)+0,w
  6482  0EB6  3D2B               	movwf	1+(??i1_Add_Trace+4)+0
  6483  0EB7  00AD               	movf	(i1Add_Trace@iText+1),w
  6484  0EB8  0827               	movwf	(i1strlen@s+1)
  6485  0EB9  00F1               	movf	(i1Add_Trace@iText),w
  6486  0EBA  0826               	movwf	(i1strlen@s)
  6487  0EBB  00F0               	fcall	i1_strlen
  6488  0EBC  318C  24E2  318E   	movlb 0	; select bank0
  6489  0EBF  0020               	movf	1+(??i1_Add_Trace+4)+0,w
  6490  0EC0  082D               	subwf	(1+(?i1_strlen)),w
  6491  0EC1  0271               	skipz
  6492  0EC2  1D03               	goto	u168_25
  6493  0EC3  2EC6               	movf	0+(??i1_Add_Trace+4)+0,w
  6494  0EC4  082C               	subwf	(0+(?i1_strlen)),w
  6495  0EC5  0270               u168_25:
  6496  0EC6                     	skipnc
  6497  0EC6  1803               	goto	u168_21
  6498  0EC7  2EC9               	goto	u168_20
  6499  0EC8  2ECA               u168_21:
  6500  0EC9                     	goto	i1l103
  6501  0EC9  2ED3               u168_20:
  6502  0ECA                     	line	81
  6503                           	
  6504                           i1l2281:	
  6505  0ECA                     	movf	(i1Add_Trace@iText+1),w
  6506  0ECA  0827               	movwf	(i1strcat@src+1)
  6507  0ECB  00A1               	movf	(i1Add_Trace@iText),w
  6508  0ECC  0826               	movwf	(i1strcat@src)
  6509  0ECD  00A0               	movf	(i1Add_Trace@oText),w
  6510  0ECE  082E               	fcall	i1_strcat
  6511  0ECF  318C  245B  318E   	goto	i1l103
  6512  0ED2  2ED3               	line	82
  6513                           	
  6514                           i1l102:	
  6515  0ED3                     	line	83
  6516                           	
  6517                           i1l103:	
  6518  0ED3                     	return
  6519  0ED3  0008               	opt stack 0
  6520                           GLOBAL	__end_ofi1_Add_Trace
  6521                           	__end_ofi1_Add_Trace:
  6522  0ED4                     	signat	i1_Add_Trace,89
  6523                           	global	i1_strcat
  6524                           
  6525 ;; *************** function i1_strcat *****************
  6526 ;; Defined at:
  6527 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;  dest            1    wreg     PTR unsigned char 
  6530 ;;		 -> wInterruptText(75), 
  6531 ;;  src             2    0[BANK0 ] PTR const unsigned char 
  6532 ;;		 -> STR_12(7), STR_11(4), STR_10(4), STR_9(2), 
  6533 ;;		 -> STR_8(2), STR_7(5), STR_6(3), wHexTemp(20), 
  6534 ;;		 -> STR_4(3), STR_3(4), STR_2(5), STR_1(4), 
  6535 ;; Auto vars:     Size  Location     Type
  6536 ;;  dest            1    4[BANK0 ] PTR unsigned char 
  6537 ;;		 -> wInterruptText(75), 
  6538 ;; Return value:  Size  Location     Type
  6539 ;;                  1    wreg      PTR unsigned char 
  6540 ;; Registers used:
  6541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6547 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6548 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6549 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6550 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  6551 ;;Total ram usage:        5 bytes
  6552 ;; Hardware stack levels used:    1
  6553 ;; Hardware stack levels required when called:    1
  6554 ;; This function calls:
  6555 ;;		i1_strcpy
  6556 ;;		i1_strlen
  6557 ;; This function is called by:
  6558 ;;		i1_Add_Trace
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
  6562                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  6563                           	line	3
  6564                           global __ptext27
  6565                           __ptext27:	;psect for function i1_strcat
  6566  0C5B                     psect	text27
  6567                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  6568                           	line	3
  6569                           	global	__size_ofi1_strcat
  6570                           	__size_ofi1_strcat	equ	__end_ofi1_strcat-i1_strcat
  6571  0019                     	
  6572                           i1_strcat:	
  6573  0C5B                     ;incstack = 0
  6574                           	opt	stack 6
  6575                           ; Regs used in i1_strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6576                           ;i1strcat@dest stored from wreg
  6577                           	movlb 0	; select bank0
  6578  0C5B  0020               	movwf	(i1strcat@dest)
  6579  0C5C  00A4               	line	5
  6580                           	
  6581                           i1l2169:	
  6582  0C5D                     	movf	(i1strcat@src+1),w
  6583  0C5D  0821               	movwf	(i1strcpy@src+1)
  6584  0C5E  00F7               	movf	(i1strcat@src),w
  6585  0C5F  0820               	movwf	(i1strcpy@src)
  6586  0C60  00F6               	movf	(i1strcat@dest),w
  6587  0C61  0824               	movwf	(i1strlen@s)
  6588  0C62  00F0               	movlw	0x1
  6589  0C63  3001               
  6590                           	movwf	(i1strlen@s+1)
  6591  0C64  00F1               	fcall	i1_strlen
  6592  0C65  318C  24E2  318C   	movf	(0+?i1_strlen),w
  6593  0C68  0870               	movlb 0	; select bank0
  6594  0C69  0020               	movwf	(??i1_strcat+0)+0
  6595  0C6A  00A2               	movf	(1+?i1_strlen),w
  6596  0C6B  0871               	movwf	((??i1_strcat+0)+0+1)
  6597  0C6C  00A3               	movf	(i1strcat@dest),w
  6598  0C6D  0824               	addwf	0+(??i1_strcat+0)+0,w
  6599  0C6E  0722               	fcall	i1_strcpy
  6600  0C6F  318D  2505  318C   	goto	i1l851
  6601  0C72  2C73               	line	6
  6602                           	
  6603                           i1l2171:	
  6604  0C73                     	line	7
  6605                           ;	Return value of i1_strcat is never used
  6606                           	
  6607                           i1l851:	
  6608  0C73                     	return
  6609  0C73  0008               	opt stack 0
  6610                           GLOBAL	__end_ofi1_strcat
  6611                           	__end_ofi1_strcat:
  6612  0C74                     	signat	i1_strcat,89
  6613                           	global	i1_strcpy
  6614                           
  6615 ;; *************** function i1_strcpy *****************
  6616 ;; Defined at:
  6617 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;  dest            1    wreg     PTR unsigned char 
  6620 ;;		 -> wInterruptText(75), 
  6621 ;;  src             2    6[COMMON] PTR const unsigned char 
  6622 ;;		 -> STR_12(7), STR_11(4), STR_10(4), STR_9(2), 
  6623 ;;		 -> STR_8(2), STR_7(5), STR_6(3), wHexTemp(20), 
  6624 ;;		 -> STR_4(3), STR_3(4), STR_2(5), STR_1(4), 
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;  dest            1   12[COMMON] PTR unsigned char 
  6627 ;;		 -> wInterruptText(75), 
  6628 ;;  strcpy          2   10[COMMON] PTR const unsigned char 
  6629 ;;		 -> STR_12(7), STR_11(4), STR_10(4), STR_9(2), 
  6630 ;;		 -> STR_8(2), STR_7(5), STR_6(3), wHexTemp(20), 
  6631 ;;		 -> STR_4(3), STR_3(4), STR_2(5), STR_1(4), 
  6632 ;;  strcpy          1   13[COMMON] PTR unsigned char 
  6633 ;;		 -> wInterruptText(75), 
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  1    wreg      PTR unsigned char 
  6636 ;; Registers used:
  6637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6644 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6645 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6646 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6647 ;;Total ram usage:        8 bytes
  6648 ;; Hardware stack levels used:    1
  6649 ;; This function calls:
  6650 ;;		Nothing
  6651 ;; This function is called by:
  6652 ;;		i1_strcat
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
  6656                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  6657                           	line	7
  6658                           global __ptext28
  6659                           __ptext28:	;psect for function i1_strcpy
  6660  0D05                     psect	text28
  6661                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  6662                           	line	7
  6663                           	global	__size_ofi1_strcpy
  6664                           	__size_ofi1_strcpy	equ	__end_ofi1_strcpy-i1_strcpy
  6665  0024                     	
  6666                           i1_strcpy:	
  6667  0D05                     ;incstack = 0
  6668                           	opt	stack 6
  6669                           ; Regs used in i1_strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  6670                           ;i1strcpy@dest stored from wreg
  6671                           	movwf	(i1strcpy@dest)
  6672  0D05  00FC               	line	13
  6673                           	
  6674                           i1l2097:	
  6675  0D06                     	movf	(i1strcpy@src+1),w
  6676  0D06  0877               	movwf	(i1strcpy@s+1)
  6677  0D07  00FB               	movf	(i1strcpy@src),w
  6678  0D08  0876               	movwf	(i1strcpy@s)
  6679  0D09  00FA               	line	14
  6680                           	movf	(i1strcpy@dest),w
  6681  0D0A  087C               	movwf	(??i1_strcpy+0)+0
  6682  0D0B  00F8               	movf	(??i1_strcpy+0)+0,w
  6683  0D0C  0878               	movwf	(i1strcpy@d)
  6684  0D0D  00FD               	line	15
  6685                           	goto	i1l2099
  6686  0D0E  2D10               	
  6687                           i1l855:	
  6688  0D0F                     	goto	i1l2099
  6689  0D0F  2D10               	
  6690                           i1l854:	
  6691  0D10                     	
  6692                           i1l2099:	
  6693  0D10                     	movf	(i1strcpy@d),w
  6694  0D10  087D               	movwf	fsr1l
  6695  0D11  0086               	movlw 1	; select bank2/3
  6696  0D12  3001               	movwf fsr1h	
  6697  0D13  0087               	
  6698                           	incf	(i1strcpy@d),f
  6699  0D14  0AFD               	movf	(i1strcpy@s+1),w
  6700  0D15  087B               	movwf	(??i1_strcpy+0)+0+1
  6701  0D16  00F9               	movf	(i1strcpy@s),w
  6702  0D17  087A               	movwf	(??i1_strcpy+0)+0
  6703  0D18  00F8               	incf	(i1strcpy@s),f
  6704  0D19  0AFA               	skipnz
  6705  0D1A  1903               	incf	(i1strcpy@s+1),f
  6706  0D1B  0AFB               	movf	0+(??i1_strcpy+0)+0,w
  6707  0D1C  0878               	movwf	fsr0l
  6708  0D1D  0084               	movf	(1+(??i1_strcpy+0)+0),w
  6709  0D1E  0879               	movwf	fsr0h
  6710  0D1F  0085               	movf	indf0,w ;code access
  6711  0D20  0800               	movwi	[0]fsr1
  6712  0D21  3FC0               	movf	wreg
  6713  0D22  0889               	btfss	status,2
  6714  0D23  1D03               	goto	u154_21
  6715  0D24  2D26               	goto	u154_20
  6716  0D25  2D27               u154_21:
  6717  0D26                     	goto	i1l2099
  6718  0D26  2D10               u154_20:
  6719  0D27                     	goto	i1l857
  6720  0D27  2D28               	
  6721                           i1l856:	
  6722  0D28                     	line	18
  6723                           ;	Return value of i1_strcpy is never used
  6724                           	
  6725                           i1l857:	
  6726  0D28                     	return
  6727  0D28  0008               	opt stack 0
  6728                           GLOBAL	__end_ofi1_strcpy
  6729                           	__end_ofi1_strcpy:
  6730  0D29                     	signat	i1_strcpy,89
  6731                           	global	_sprintf
  6732                           
  6733 ;; *************** function _sprintf *****************
  6734 ;; Defined at:
  6735 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;  s               1    wreg     PTR unsigned char 
  6738 ;;		 -> wHexTemp(20), 
  6739 ;;  fmt             2   53[BANK0 ] PTR const unsigned char 
  6740 ;;		 -> STR_5(5), 
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;  s               1   60[BANK0 ] PTR unsigned char 
  6743 ;;		 -> wHexTemp(20), 
  6744 ;;  f               5   61[BANK0 ] struct _IO_FILE
  6745 ;;  ret             2   57[BANK0 ] int 
  6746 ;;  ap              1   59[BANK0 ] PTR void [1]
  6747 ;;		 -> ?_sprintf(2), 
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  2   53[BANK0 ] int 
  6750 ;; Registers used:
  6751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6757 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6758 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0
  6759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6760 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
       0       0
  6761 ;;Total ram usage:       14 bytes
  6762 ;; Hardware stack levels used:    1
  6763 ;; Hardware stack levels required when called:    7
  6764 ;; This function calls:
  6765 ;;		_vfprintf
  6766 ;; This function is called by:
  6767 ;;		_myint
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           psect	text29,local,class=CODE,delta=2,merge=1,group=2
  6771                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  6772                           	line	9
  6773                           global __ptext29
  6774                           __ptext29:	;psect for function _sprintf
  6775  0DC0                     psect	text29
  6776                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  6777                           	line	9
  6778                           	global	__size_of_sprintf
  6779                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  6780  0029                     	
  6781                           _sprintf:	
  6782  0DC0                     ;incstack = 0
  6783                           	opt	stack 1
  6784                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6785                           ;sprintf@s stored from wreg
  6786                           	movlb 0	; select bank0
  6787  0DC0  0020               	movwf	(sprintf@s)
  6788  0DC1  00DC               	line	15
  6789                           	
  6790                           i1l2267:	
  6791  0DC2                     	movlw	(low(?_sprintf|((0x0)<<8)+02h))&0ffh
  6792  0DC2  3057               	movwf	(??_sprintf+0)+0
  6793  0DC3  00FD               	movf	(??_sprintf+0)+0,w
  6794  0DC4  087D               	movwf	(sprintf@ap)
  6795  0DC5  00DB               	line	16
  6796                           	movf	(sprintf@s),w
  6797  0DC6  085C               	movwf	(??_sprintf+0)+0
  6798  0DC7  00FD               	movf	(??_sprintf+0)+0,w
  6799  0DC8  087D               	movwf	(sprintf@f)
  6800  0DC9  00DD               	line	17
  6801                           	
  6802                           i1l2269:	
  6803  0DCA                     	clrf	0+(sprintf@f)+01h
  6804  0DCA  01DE               	clrf	1+(sprintf@f)+01h
  6805  0DCB  01DF               	line	18
  6806                           	
  6807                           i1l2271:	
  6808  0DCC                     	clrf	0+(sprintf@f)+03h
  6809  0DCC  01E0               	clrf	1+(sprintf@f)+03h
  6810  0DCD  01E1               	line	19
  6811                           	
  6812                           i1l2273:	
  6813  0DCE                     	movf	(sprintf@fmt+1),w
  6814  0DCE  0856               	movwf	(vfprintf@fmt+1)
  6815  0DCF  00CE               	movf	(sprintf@fmt),w
  6816  0DD0  0855               	movwf	(vfprintf@fmt)
  6817  0DD1  00CD               	movlw	(low(sprintf@ap|((0x0)<<8)))&0ffh
  6818  0DD2  305B               	movwf	(??_sprintf+0)+0
  6819  0DD3  00FD               	movf	(??_sprintf+0)+0,w
  6820  0DD4  087D               	movwf	(vfprintf@ap)
  6821  0DD5  00CF               	movlw	(low(sprintf@f|((0x0)<<8)))&0ffh
  6822  0DD6  305D               	fcall	_vfprintf
  6823  0DD7  318E  2614  318D   	movlb 0	; select bank0
  6824  0DDA  0020               	movf	(1+(?_vfprintf)),w
  6825  0DDB  084E               	movwf	(sprintf@ret+1)
  6826  0DDC  00DA               	movf	(0+(?_vfprintf)),w
  6827  0DDD  084D               	movwf	(sprintf@ret)
  6828  0DDE  00D9               	line	20
  6829                           	
  6830                           i1l2275:	
  6831  0DDF                     	movf	0+(sprintf@f)+01h,w
  6832  0DDF  085E               	addwf	(sprintf@s),w
  6833  0DE0  075C               	movwf	(??_sprintf+0)+0
  6834  0DE1  00FD               	movf	0+(??_sprintf+0)+0,w
  6835  0DE2  087D               	movwf	fsr1l
  6836  0DE3  0086               	movlw 1	; select bank2/3
  6837  0DE4  3001               	movwf fsr1h	
  6838  0DE5  0087               	
  6839                           	clrf	indf1
  6840  0DE6  0181               	goto	i1l841
  6841  0DE7  2DE8               	line	22
  6842                           	
  6843                           i1l2277:	
  6844  0DE8                     	line	23
  6845                           ;	Return value of _sprintf is never used
  6846                           	
  6847                           i1l841:	
  6848  0DE8                     	return
  6849  0DE8  0008               	opt stack 0
  6850                           GLOBAL	__end_of_sprintf
  6851                           	__end_of_sprintf:
  6852  0DE9                     	signat	_sprintf,4698
  6853                           	global	_vfprintf
  6854                           
  6855 ;; *************** function _vfprintf *****************
  6856 ;; Defined at:
  6857 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;  fp              1    wreg     PTR struct _IO_FILE
  6860 ;;		 -> sprintf@f(5), 
  6861 ;;  fmt             2   45[BANK0 ] PTR const unsigned char 
  6862 ;;		 -> STR_5(5), 
  6863 ;;  ap              1   47[BANK0 ] PTR PTR void 
  6864 ;;		 -> sprintf@ap(1), 
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;  fp              1   50[BANK0 ] PTR struct _IO_FILE
  6867 ;;		 -> sprintf@f(5), 
  6868 ;;  cfmt            2   51[BANK0 ] PTR unsigned char 
  6869 ;;		 -> STR_5(5), 
  6870 ;; Return value:  Size  Location     Type
  6871 ;;                  2   45[BANK0 ] int 
  6872 ;; Registers used:
  6873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6874 ;; Tracked objects:
  6875 ;;		On entry : 0/0
  6876 ;;		On exit  : 0/0
  6877 ;;		Unchanged: 0/0
  6878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6879 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  6880 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  6881 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6882 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
  6883 ;;Total ram usage:        8 bytes
  6884 ;; Hardware stack levels used:    1
  6885 ;; Hardware stack levels required when called:    6
  6886 ;; This function calls:
  6887 ;;		_vfpfcnvrt
  6888 ;; This function is called by:
  6889 ;;		_sprintf
  6890 ;; This function uses a non-reentrant model
  6891 ;;
  6892                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
  6893                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  6894                           	line	1368
  6895                           global __ptext30
  6896                           __ptext30:	;psect for function _vfprintf
  6897  0E14                     psect	text30
  6898                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  6899                           	line	1368
  6900                           	global	__size_of_vfprintf
  6901                           	__size_of_vfprintf	equ	__end_of_vfprintf-_vfprintf
  6902  002B                     	
  6903                           _vfprintf:	
  6904  0E14                     ;incstack = 0
  6905                           	opt	stack 1
  6906                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6907                           ;vfprintf@fp stored from wreg
  6908                           	movlb 0	; select bank0
  6909  0E14  0020               	movwf	(vfprintf@fp)
  6910  0E15  00D2               	line	1373
  6911                           	
  6912                           i1l2157:	
  6913  0E16                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1368: int v
                                 fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
                                 0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pi
                                 c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
                                 8\v2.00\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6914                           	movf	(vfprintf@fmt+1),w
  6915  0E16  084E               	movwf	(vfprintf@cfmt+1)
  6916  0E17  00D4               	movf	(vfprintf@fmt),w
  6917  0E18  084D               	movwf	(vfprintf@cfmt)
  6918  0E19  00D3               	line	1374
  6919                           	
  6920                           i1l2159:	
  6921  0E1A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1374:     n
                                 out = 0;
  6922                           	clrf	(_nout)
  6923  0E1A  01E4               	clrf	(_nout+1)
  6924  0E1B  01E5               	line	1375
  6925                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  6926                           	goto	i1l2163
  6927  0E1C  2E2F               	
  6928                           i1l360:	
  6929  0E1D                     	line	1376
  6930                           	
  6931                           i1l2161:	
  6932  0E1D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1376:      
                                    nout += vfpfcnvrt(fp, &cfmt, ap);
  6933                           	movlw	(low(vfprintf@cfmt|((0x0)<<8)))&0ffh
  6934  0E1D  3053               	movwf	(??_vfprintf+0)+0
  6935  0E1E  00D0               	movf	(??_vfprintf+0)+0,w
  6936  0E1F  0850               	movwf	(vfpfcnvrt@fmt)
  6937  0E20  00C1               	movf	(vfprintf@ap),w
  6938  0E21  084F               	movwf	(??_vfprintf+1)+0
  6939  0E22  00D1               	movf	(??_vfprintf+1)+0,w
  6940  0E23  0851               	movwf	(vfpfcnvrt@ap)
  6941  0E24  00C2               	movf	(vfprintf@fp),w
  6942  0E25  0852               	fcall	_vfpfcnvrt
  6943  0E26  3184  2409  318E   	movlb 0	; select bank0
  6944  0E29  0020               	movf	(0+(?_vfpfcnvrt)),w
  6945  0E2A  0841               	addwf	(_nout),f
  6946  0E2B  07E4               	movf	(1+(?_vfpfcnvrt)),w
  6947  0E2C  0842               	addwfc	(_nout+1),f
  6948  0E2D  3DE5               	goto	i1l2163
  6949  0E2E  2E2F               	line	1377
  6950                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1377:     }
                                 
  6951                           	
  6952                           i1l359:	
  6953  0E2F                     	line	1375
  6954                           	
  6955                           i1l2163:	
  6956  0E2F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  6957                           	movf	(vfprintf@cfmt),w
  6958  0E2F  0853               	movwf	fsr0l
  6959  0E30  0084               	movf	((vfprintf@cfmt+1)),w
  6960  0E31  0854               	movwf	fsr0h
  6961  0E32  0085               	moviw	fsr0++
  6962  0E33  0012               	btfss	status,2
  6963  0E34  1D03               	goto	u161_21
  6964  0E35  2E37               	goto	u161_20
  6965  0E36  2E38               u161_21:
  6966  0E37                     	goto	i1l2161
  6967  0E37  2E1D               u161_20:
  6968  0E38                     	goto	i1l2165
  6969  0E38  2E39               	
  6970                           i1l361:	
  6971  0E39                     	line	1378
  6972                           	
  6973                           i1l2165:	
  6974  0E39                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1378:     r
                                 eturn nout;
  6975                           	movf	(_nout+1),w
  6976  0E39  0865               	movwf	(?_vfprintf+1)
  6977  0E3A  00CE               	movf	(_nout),w
  6978  0E3B  0864               	movwf	(?_vfprintf)
  6979  0E3C  00CD               	goto	i1l362
  6980  0E3D  2E3E               	
  6981                           i1l2167:	
  6982  0E3E                     	line	1382
  6983                           	
  6984                           i1l362:	
  6985  0E3E                     	return
  6986  0E3E  0008               	opt stack 0
  6987                           GLOBAL	__end_of_vfprintf
  6988                           	__end_of_vfprintf:
  6989  0E3F                     	signat	_vfprintf,12410
  6990                           	global	_vfpfcnvrt
  6991                           
  6992 ;; *************** function _vfpfcnvrt *****************
  6993 ;; Defined at:
  6994 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  6995 ;; Parameters:    Size  Location     Type
  6996 ;;  fp              1    wreg     PTR struct _IO_FILE
  6997 ;;		 -> sprintf@f(5), 
  6998 ;;  fmt             1   33[BANK0 ] PTR PTR unsigned char 
  6999 ;;		 -> vfprintf@cfmt(2), 
  7000 ;;  ap              1   34[BANK0 ] PTR PTR void 
  7001 ;;		 -> sprintf@ap(1), 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  7004 ;;		 -> sprintf@f(5), 
  7005 ;;  ll              4   40[BANK0 ] long 
  7006 ;;  f               4    0        long 
  7007 ;;  llu             4    0        unsigned long 
  7008 ;;  ct              3    0        unsigned char [3]
  7009 ;;  vp              2    0        PTR void 
  7010 ;;  i               2    0        int 
  7011 ;;  done            2    0        int 
  7012 ;;  cp              2    0        PTR unsigned char 
  7013 ;;  c               1    0        unsigned char 
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  2   33[BANK0 ] int 
  7016 ;; Registers used:
  7017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7023 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7024 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7025 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7026 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0
  7027 ;;Total ram usage:       12 bytes
  7028 ;; Hardware stack levels used:    1
  7029 ;; Hardware stack levels required when called:    5
  7030 ;; This function calls:
  7031 ;;		_dtoa
  7032 ;;		_fputc
  7033 ;; This function is called by:
  7034 ;;		_vfprintf
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
  7038                           	line	670
  7039                           global __ptext31
  7040                           __ptext31:	;psect for function _vfpfcnvrt
  7041  0409                     psect	text31
  7042                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  7043                           	line	670
  7044                           	global	__size_of_vfpfcnvrt
  7045                           	__size_of_vfpfcnvrt	equ	__end_of_vfpfcnvrt-_vfpfcnvrt
  7046  00D5                     	
  7047                           _vfpfcnvrt:	
  7048  0409                     ;incstack = 0
  7049                           	opt	stack 1
  7050                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7051                           ;vfpfcnvrt@fp stored from wreg
  7052                           	movlb 0	; select bank0
  7053  0409  0020               	movwf	(vfpfcnvrt@fp)
  7054  040A  00CC               	line	680
  7055                           	
  7056                           i1l2049:	
  7057  040B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 670: static
                                  int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
                                 2.00\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.00\
                                 pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
                                 rochip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
                                  (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  7058                           	movf	(vfpfcnvrt@fmt),w
  7059  040B  0841               	movwf	fsr1l
  7060  040C  0086               	clrf fsr1h	
  7061  040D  0187               	
  7062                           	moviw	[0]fsr1
  7063  040E  3F40               	movwf	(??_vfpfcnvrt+0)+0
  7064  040F  00C3               	moviw	[1]fsr1
  7065  0410  3F41               	movwf	(??_vfpfcnvrt+0)+0+1
  7066  0411  00C4               	movf	0+(??_vfpfcnvrt+0)+0,w
  7067  0412  0843               	movwf	fsr0l
  7068  0413  0084               	movf	(1+(??_vfpfcnvrt+0)+0),w
  7069  0414  0844               	movwf	fsr0h
  7070  0415  0085               	moviw	fsr0++
  7071  0416  0012               xorlw	37
  7072  0417  3A25               	btfss	status,2
  7073  0418  1D03               	goto	u149_21
  7074  0419  2C1B               	goto	u149_20
  7075  041A  2C1C               u149_21:
  7076  041B                     	goto	i1l2085
  7077  041B  2CB6               u149_20:
  7078  041C                     	line	681
  7079                           	
  7080                           i1l2051:	
  7081  041C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 681:       
                                   ++*fmt;
  7082                           	movf	(vfpfcnvrt@fmt),w
  7083  041C  0841               	movwf	fsr1l
  7084  041D  0086               	clrf fsr1h	
  7085  041E  0187               	
  7086                           	movlw	01h
  7087  041F  3001               	addwf	indf1,f
  7088  0420  0781               	addfsr	fsr1,1
  7089  0421  3141               	skipnc
  7090  0422  1803               	incf	indf1,f
  7091  0423  0A81               	line	683
  7092                           	
  7093                           i1l2053:	
  7094  0424                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 683:       
                                   flags = width = 0;
  7095                           	clrf	(_width)
  7096  0424  01E6               	clrf	(_width+1)
  7097  0425  01E7               	clrf	(_flags)
  7098  0426  01EA               	clrf	(_flags+1)
  7099  0427  01EB               	line	684
  7100                           	
  7101                           i1l2055:	
  7102  0428                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 684:       
                                   prec = -1;
  7103                           	movlw	0FFh
  7104  0428  30FF               	movwf	(_prec)
  7105  0429  00E8               	movlw	0FFh
  7106  042A  30FF               	movwf	((_prec))+1
  7107  042B  00E9               	line	825
  7108                           	
  7109                           i1l2057:	
  7110  042C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 825:       
                                   if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7111                           	movf	(vfpfcnvrt@fmt),w
  7112  042C  0841               	movwf	fsr1l
  7113  042D  0086               	clrf fsr1h	
  7114  042E  0187               	
  7115                           	moviw	[0]fsr1
  7116  042F  3F40               	movwf	(??_vfpfcnvrt+0)+0
  7117  0430  00C3               	moviw	[1]fsr1
  7118  0431  3F41               	movwf	(??_vfpfcnvrt+0)+0+1
  7119  0432  00C4               	movf	0+(??_vfpfcnvrt+0)+0,w
  7120  0433  0843               	movwf	fsr0l
  7121  0434  0084               	movf	(1+(??_vfpfcnvrt+0)+0),w
  7122  0435  0844               	movwf	fsr0h
  7123  0436  0085               	moviw	fsr0++
  7124  0437  0012               xorlw	100
  7125  0438  3A64               	btfsc	status,2
  7126  0439  1903               	goto	u150_21
  7127  043A  2C3C               	goto	u150_20
  7128  043B  2C3D               u150_21:
  7129  043C                     	goto	i1l2061
  7130  043C  2C4F               u150_20:
  7131  043D                     	
  7132                           i1l2059:	
  7133  043D                     	movf	(vfpfcnvrt@fmt),w
  7134  043D  0841               	movwf	fsr1l
  7135  043E  0086               	clrf fsr1h	
  7136  043F  0187               	
  7137                           	moviw	[0]fsr1
  7138  0440  3F40               	movwf	(??_vfpfcnvrt+0)+0
  7139  0441  00C3               	moviw	[1]fsr1
  7140  0442  3F41               	movwf	(??_vfpfcnvrt+0)+0+1
  7141  0443  00C4               	movf	0+(??_vfpfcnvrt+0)+0,w
  7142  0444  0843               	movwf	fsr0l
  7143  0445  0084               	movf	(1+(??_vfpfcnvrt+0)+0),w
  7144  0446  0844               	movwf	fsr0h
  7145  0447  0085               	moviw	fsr0++
  7146  0448  0012               xorlw	105
  7147  0449  3A69               	btfss	status,2
  7148  044A  1D03               	goto	u151_21
  7149  044B  2C4D               	goto	u151_20
  7150  044C  2C4E               u151_21:
  7151  044D                     	goto	i1l2069
  7152  044D  2C7F               u151_20:
  7153  044E                     	goto	i1l2061
  7154  044E  2C4F               	
  7155                           i1l354:	
  7156  044F                     	line	827
  7157                           	
  7158                           i1l2061:	
  7159  044F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 827:       
                                       ++*fmt;
  7160                           	movf	(vfpfcnvrt@fmt),w
  7161  044F  0841               	movwf	fsr1l
  7162  0450  0086               	clrf fsr1h	
  7163  0451  0187               	
  7164                           	movlw	01h
  7165  0452  3001               	addwf	indf1,f
  7166  0453  0781               	addfsr	fsr1,1
  7167  0454  3141               	skipnc
  7168  0455  1803               	incf	indf1,f
  7169  0456  0A81               	line	828
  7170                           	
  7171                           i1l2063:	
  7172  0457                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 828:       
                                       ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7173                           	movf	(vfpfcnvrt@ap),w
  7174  0457  0842               	movwf	fsr1l
  7175  0458  0086               	clrf fsr1h	
  7176  0459  0187               	
  7177                           	movf	indf1,w
  7178  045A  0801               	movwf	fsr0l
  7179  045B  0084               	clrf fsr0h	
  7180  045C  0185               	
  7181                           	movlw	02h
  7182  045D  3002               	addwf	indf1,f
  7183  045E  0781               	moviw	[0]fsr0
  7184  045F  3F00               	movwf	(??_vfpfcnvrt+0)+0
  7185  0460  00C3               	moviw	[1]fsr0
  7186  0461  3F01               	movwf	(??_vfpfcnvrt+0)+0+1
  7187  0462  00C4               	movf	0+(??_vfpfcnvrt+0)+0,w
  7188  0463  0843               	movwf	(vfpfcnvrt@ll)
  7189  0464  00C8               	movf	1+(??_vfpfcnvrt+0)+0,w
  7190  0465  0844               	movwf	(vfpfcnvrt@ll+1)
  7191  0466  00C9               	rlf	wreg,f
  7192  0467  0D89               	subwfb	wreg,f
  7193  0468  3B89               	comf	wreg,f
  7194  0469  0989               	movwf	(vfpfcnvrt@ll+2)
  7195  046A  00CA               	movwf	(vfpfcnvrt@ll+3)
  7196  046B  00CB               	line	830
  7197                           	
  7198                           i1l2065:	
  7199  046C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 830:       
                                       return dtoa(fp, ll);
  7200                           	movf	(vfpfcnvrt@ll+3),w
  7201  046C  084B               	movwf	(dtoa@d+3)
  7202  046D  00AF               	movf	(vfpfcnvrt@ll+2),w
  7203  046E  084A               	movwf	(dtoa@d+2)
  7204  046F  00AE               	movf	(vfpfcnvrt@ll+1),w
  7205  0470  0849               	movwf	(dtoa@d+1)
  7206  0471  00AD               	movf	(vfpfcnvrt@ll),w
  7207  0472  0848               	movwf	(dtoa@d)
  7208  0473  00AC               
  7209                           	movf	(vfpfcnvrt@fp),w
  7210  0474  084C               	fcall	_dtoa
  7211  0475  3182  22DE  3184   	movlb 0	; select bank0
  7212  0478  0020               	movf	(1+(?_dtoa)),w
  7213  0479  082D               	movwf	(?_vfpfcnvrt+1)
  7214  047A  00C2               	movf	(0+(?_dtoa)),w
  7215  047B  082C               	movwf	(?_vfpfcnvrt)
  7216  047C  00C1               	goto	i1l355
  7217  047D  2CDD               	
  7218                           i1l2067:	
  7219  047E                     	goto	i1l355
  7220  047E  2CDD               	line	831
  7221                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 831:       
                                   }
  7222                           	
  7223                           i1l352:	
  7224  047F                     	line	1350
  7225                           	
  7226                           i1l2069:	
  7227  047F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1350:      
                                    if ((*fmt)[0] == '%') {
  7228                           	movf	(vfpfcnvrt@fmt),w
  7229  047F  0841               	movwf	fsr1l
  7230  0480  0086               	clrf fsr1h	
  7231  0481  0187               	
  7232                           	moviw	[0]fsr1
  7233  0482  3F40               	movwf	(??_vfpfcnvrt+0)+0
  7234  0483  00C3               	moviw	[1]fsr1
  7235  0484  3F41               	movwf	(??_vfpfcnvrt+0)+0+1
  7236  0485  00C4               	movf	0+(??_vfpfcnvrt+0)+0,w
  7237  0486  0843               	movwf	fsr0l
  7238  0487  0084               	movf	(1+(??_vfpfcnvrt+0)+0),w
  7239  0488  0844               	movwf	fsr0h
  7240  0489  0085               	moviw	fsr0++
  7241  048A  0012               xorlw	37
  7242  048B  3A25               	btfss	status,2
  7243  048C  1D03               	goto	u152_21
  7244  048D  2C8F               	goto	u152_20
  7245  048E  2C90               u152_21:
  7246  048F                     	goto	i1l2079
  7247  048F  2CAA               u152_20:
  7248  0490                     	line	1351
  7249                           	
  7250                           i1l2071:	
  7251  0490                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1351:      
                                        ++*fmt;
  7252                           	movf	(vfpfcnvrt@fmt),w
  7253  0490  0841               	movwf	fsr1l
  7254  0491  0086               	clrf fsr1h	
  7255  0492  0187               	
  7256                           	movlw	01h
  7257  0493  3001               	addwf	indf1,f
  7258  0494  0781               	addfsr	fsr1,1
  7259  0495  3141               	skipnc
  7260  0496  1803               	incf	indf1,f
  7261  0497  0A81               	line	1352
  7262                           	
  7263                           i1l2073:	
  7264  0498                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1352:      
                                        fputc((int)'%', fp);
  7265                           	movlw	025h
  7266  0498  3025               	movwf	(fputc@c)
  7267  0499  00F0               	movlw	0
  7268  049A  3000               	movwf	((fputc@c))+1
  7269  049B  00F1               	movf	(vfpfcnvrt@fp),w
  7270  049C  084C               	movwf	(??_vfpfcnvrt+0)+0
  7271  049D  00C3               	movf	(??_vfpfcnvrt+0)+0,w
  7272  049E  0843               	movwf	(fputc@fp)
  7273  049F  00F2               	fcall	_fputc
  7274  04A0  318F  27AB  3184   	line	1353
  7275                           	
  7276                           i1l2075:	
  7277  04A3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1353:      
                                        return 1;
  7278                           	movlw	01h
  7279  04A3  3001               	movlb 0	; select bank0
  7280  04A4  0020               	movwf	(?_vfpfcnvrt)
  7281  04A5  00C1               	movlw	0
  7282  04A6  3000               	movwf	((?_vfpfcnvrt))+1
  7283  04A7  00C2               	goto	i1l355
  7284  04A8  2CDD               	
  7285                           i1l2077:	
  7286  04A9                     	goto	i1l355
  7287  04A9  2CDD               	line	1354
  7288                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1354:      
                                    }
  7289                           	
  7290                           i1l356:	
  7291  04AA                     	line	1357
  7292                           	
  7293                           i1l2079:	
  7294  04AA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1357:      
                                    ++*fmt;
  7295                           	movf	(vfpfcnvrt@fmt),w
  7296  04AA  0841               	movwf	fsr1l
  7297  04AB  0086               	clrf fsr1h	
  7298  04AC  0187               	
  7299                           	movlw	01h
  7300  04AD  3001               	addwf	indf1,f
  7301  04AE  0781               	addfsr	fsr1,1
  7302  04AF  3141               	skipnc
  7303  04B0  1803               	incf	indf1,f
  7304  04B1  0A81               	line	1358
  7305                           	
  7306                           i1l2081:	
  7307  04B2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1358:      
                                    return 0;
  7308                           	clrf	(?_vfpfcnvrt)
  7309  04B2  01C1               	clrf	(?_vfpfcnvrt+1)
  7310  04B3  01C2               	goto	i1l355
  7311  04B4  2CDD               	
  7312                           i1l2083:	
  7313  04B5                     	goto	i1l355
  7314  04B5  2CDD               	line	1359
  7315                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1359:     }
                                 
  7316                           	
  7317                           i1l351:	
  7318  04B6                     	line	1362
  7319                           	
  7320                           i1l2085:	
  7321  04B6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1362:     f
                                 putc((int)(*fmt)[0], fp);
  7322                           	movf	(vfpfcnvrt@fmt),w
  7323  04B6  0841               	movwf	fsr1l
  7324  04B7  0086               	clrf fsr1h	
  7325  04B8  0187               	
  7326                           	moviw	[0]fsr1
  7327  04B9  3F40               	movwf	(??_vfpfcnvrt+0)+0
  7328  04BA  00C3               	moviw	[1]fsr1
  7329  04BB  3F41               	movwf	(??_vfpfcnvrt+0)+0+1
  7330  04BC  00C4               	movf	0+(??_vfpfcnvrt+0)+0,w
  7331  04BD  0843               	movwf	fsr0l
  7332  04BE  0084               	movf	(1+(??_vfpfcnvrt+0)+0),w
  7333  04BF  0844               	movwf	fsr0h
  7334  04C0  0085               	movf	indf0,w ;code access
  7335  04C1  0800               	movwf	(??_vfpfcnvrt+2)+0
  7336  04C2  00C5               	clrf	(??_vfpfcnvrt+2)+0+1
  7337  04C3  01C6               	movf	0+(??_vfpfcnvrt+2)+0,w
  7338  04C4  0845               	movwf	(fputc@c)
  7339  04C5  00F0               	movf	1+(??_vfpfcnvrt+2)+0,w
  7340  04C6  0846               	movwf	(fputc@c+1)
  7341  04C7  00F1               	movf	(vfpfcnvrt@fp),w
  7342  04C8  084C               	movwf	(??_vfpfcnvrt+4)+0
  7343  04C9  00C7               	movf	(??_vfpfcnvrt+4)+0,w
  7344  04CA  0847               	movwf	(fputc@fp)
  7345  04CB  00F2               	fcall	_fputc
  7346  04CC  318F  27AB  3184   	line	1363
  7347                           	
  7348                           i1l2087:	
  7349  04CF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1363:     +
                                 +*fmt;
  7350                           	movlb 0	; select bank0
  7351  04CF  0020               	movf	(vfpfcnvrt@fmt),w
  7352  04D0  0841               	movwf	fsr1l
  7353  04D1  0086               	clrf fsr1h	
  7354  04D2  0187               	
  7355                           	movlw	01h
  7356  04D3  3001               	addwf	indf1,f
  7357  04D4  0781               	addfsr	fsr1,1
  7358  04D5  3141               	skipnc
  7359  04D6  1803               	incf	indf1,f
  7360  04D7  0A81               	line	1364
  7361                           	
  7362                           i1l2089:	
  7363  04D8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1364:     r
                                 eturn 1;
  7364                           	movlw	01h
  7365  04D8  3001               	movwf	(?_vfpfcnvrt)
  7366  04D9  00C1               	movlw	0
  7367  04DA  3000               	movwf	((?_vfpfcnvrt))+1
  7368  04DB  00C2               	goto	i1l355
  7369  04DC  2CDD               	
  7370                           i1l2091:	
  7371  04DD                     	line	1365
  7372                           	
  7373                           i1l355:	
  7374  04DD                     	return
  7375  04DD  0008               	opt stack 0
  7376                           GLOBAL	__end_of_vfpfcnvrt
  7377                           	__end_of_vfpfcnvrt:
  7378  04DE                     	signat	_vfpfcnvrt,12410
  7379                           	global	_dtoa
  7380                           
  7381 ;; *************** function _dtoa *****************
  7382 ;; Defined at:
  7383 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;  fp              1    wreg     PTR struct _IO_FILE
  7386 ;;		 -> sprintf@f(5), 
  7387 ;;  d               4   12[BANK0 ] long 
  7388 ;; Auto vars:     Size  Location     Type
  7389 ;;  fp              1   20[BANK0 ] PTR struct _IO_FILE
  7390 ;;		 -> sprintf@f(5), 
  7391 ;;  n               4   27[BANK0 ] long 
  7392 ;;  i               2   31[BANK0 ] int 
  7393 ;;  s               2   25[BANK0 ] int 
  7394 ;;  w               2   23[BANK0 ] int 
  7395 ;;  p               2   21[BANK0 ] int 
  7396 ;; Return value:  Size  Location     Type
  7397 ;;                  2   12[BANK0 ] int 
  7398 ;; Registers used:
  7399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7400 ;; Tracked objects:
  7401 ;;		On entry : 0/0
  7402 ;;		On exit  : 0/0
  7403 ;;		Unchanged: 0/0
  7404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7405 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  7406 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
       0       0
  7407 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7408 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
       0       0
  7409 ;;Total ram usage:       21 bytes
  7410 ;; Hardware stack levels used:    1
  7411 ;; Hardware stack levels required when called:    4
  7412 ;; This function calls:
  7413 ;;		___aldiv
  7414 ;;		___almod
  7415 ;;		_abs
  7416 ;;		_pad
  7417 ;; This function is called by:
  7418 ;;		_vfpfcnvrt
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
  7422                           	line	274
  7423                           global __ptext32
  7424                           __ptext32:	;psect for function _dtoa
  7425  02DE                     psect	text32
  7426                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  7427                           	line	274
  7428                           	global	__size_of_dtoa
  7429                           	__size_of_dtoa	equ	__end_of_dtoa-_dtoa
  7430  012B                     	
  7431                           _dtoa:	
  7432  02DE                     ;incstack = 0
  7433                           	opt	stack 1
  7434                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7435                           ;dtoa@fp stored from wreg
  7436                           	movlb 0	; select bank0
  7437  02DE  0020               	movwf	(dtoa@fp)
  7438  02DF  00B4               	line	280
  7439                           	
  7440                           i1l1937:	
  7441  02E0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 274: static
                                  int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\
                                 c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\c
                                 ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\
                                 sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
                                 v2.00\pic\sources\c99\common\doprnt.c: 280:     n = d;
  7442                           	movf	(dtoa@d+3),w
  7443  02E0  082F               	movwf	(dtoa@n+3)
  7444  02E1  00BE               	movf	(dtoa@d+2),w
  7445  02E2  082E               	movwf	(dtoa@n+2)
  7446  02E3  00BD               	movf	(dtoa@d+1),w
  7447  02E4  082D               	movwf	(dtoa@n+1)
  7448  02E5  00BC               	movf	(dtoa@d),w
  7449  02E6  082C               	movwf	(dtoa@n)
  7450  02E7  00BB               
  7451                           	line	281
  7452                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 281:     s 
                                 = n < 0 ? 1 : 0;
  7453                           	btfsc	(dtoa@n+3),7
  7454  02E8  1BBE               	goto	u132_21
  7455  02E9  2AEB               	goto	u132_20
  7456  02EA  2AED               u132_21:
  7457  02EB                     	movlw	1
  7458  02EB  3001               	goto	u133_20
  7459  02EC  2AEE               u132_20:
  7460  02ED                     	movlw	0
  7461  02ED  3000               u133_20:
  7462  02EE                     	movwf	(??_dtoa+0)+0
  7463  02EE  00B0               	clrf	(??_dtoa+0)+0+1
  7464  02EF  01B1               	movf	0+(??_dtoa+0)+0,w
  7465  02F0  0830               	movwf	(dtoa@s)
  7466  02F1  00B9               	movf	1+(??_dtoa+0)+0,w
  7467  02F2  0831               	movwf	(dtoa@s+1)
  7468  02F3  00BA               	line	282
  7469                           	
  7470                           i1l1939:	
  7471  02F4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 282:     if
                                  (s) {
  7472                           	movf	((dtoa@s)),w
  7473  02F4  0839               iorwf	((dtoa@s+1)),w
  7474  02F5  043A               	btfsc	status,2
  7475  02F6  1903               	goto	u134_21
  7476  02F7  2AF9               	goto	u134_20
  7477  02F8  2AFA               u134_21:
  7478  02F9                     	goto	i1l325
  7479  02F9  2B05               u134_20:
  7480  02FA                     	line	283
  7481                           	
  7482                           i1l1941:	
  7483  02FA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 283:       
                                   n = -n;
  7484                           	comf	(dtoa@n),f
  7485  02FA  09BB               	comf	(dtoa@n+1),f
  7486  02FB  09BC               	comf	(dtoa@n+2),f
  7487  02FC  09BD               	comf	(dtoa@n+3),f
  7488  02FD  09BE               	incf	(dtoa@n),f
  7489  02FE  0ABB               	skipnz
  7490  02FF  1903               	incf	(dtoa@n+1),f
  7491  0300  0ABC               	skipnz
  7492  0301  1903               	incf	(dtoa@n+2),f
  7493  0302  0ABD               	skipnz
  7494  0303  1903               	incf	(dtoa@n+3),f
  7495  0304  0ABE               	line	284
  7496                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 284:     }

  7497                           	
  7498                           i1l325:	
  7499  0305                     	line	287
  7500                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 287:     if
                                  (!(prec < 0)) {
  7501                           	btfsc	(_prec+1),7
  7502  0305  1BE9               	goto	u135_21
  7503  0306  2B08               	goto	u135_20
  7504  0307  2B09               u135_21:
  7505  0308                     	goto	i1l326
  7506  0308  2B0D               u135_20:
  7507  0309                     	line	288
  7508                           	
  7509                           i1l1943:	
  7510  0309                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 288:       
                                   flags &= ~(1 << 1);
  7511                           	movlw	0FDh
  7512  0309  30FD               	andwf	(_flags),f
  7513  030A  05EA               	movlw	0FFh
  7514  030B  30FF               	andwf	(_flags+1),f
  7515  030C  05EB               	line	289
  7516                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 289:     }

  7517                           	
  7518                           i1l326:	
  7519  030D                     	line	290
  7520                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 290:     p 
                                 = (0 < prec) ? prec : 1;
  7521                           	movf	(_prec+1),w
  7522  030D  0869               	xorlw	80h
  7523  030E  3A80               	movwf	(??_dtoa+0)+0
  7524  030F  00B0               	movlw	(0)^80h
  7525  0310  3080               	subwf	(??_dtoa+0)+0,w
  7526  0311  0230               	skipz
  7527  0312  1D03               	goto	u136_25
  7528  0313  2B16               	movlw	01h
  7529  0314  3001               	subwf	(_prec),w
  7530  0315  0268               u136_25:
  7531  0316                     
  7532                           	skipnc
  7533  0316  1803               	goto	u136_21
  7534  0317  2B19               	goto	u136_20
  7535  0318  2B1A               u136_21:
  7536  0319                     	goto	i1l1947
  7537  0319  2B20               u136_20:
  7538  031A                     	
  7539                           i1l1945:	
  7540  031A                     	movlw	01h
  7541  031A  3001               	movlb 0	; select bank0
  7542  031B  0020               	movwf	(dtoa@p)
  7543  031C  00B5               	movlw	0
  7544  031D  3000               	movwf	((dtoa@p))+1
  7545  031E  00B6               	goto	i1l330
  7546  031F  2B25               	
  7547                           i1l328:	
  7548  0320                     	
  7549                           i1l1947:	
  7550  0320                     	movlb 0	; select bank0
  7551  0320  0020               	movf	(_prec+1),w
  7552  0321  0869               	movwf	(dtoa@p+1)
  7553  0322  00B6               	movf	(_prec),w
  7554  0323  0868               	movwf	(dtoa@p)
  7555  0324  00B5               	
  7556                           i1l330:	
  7557  0325                     	line	291
  7558                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 291:     w 
                                 = width;
  7559                           	movf	(_width+1),w
  7560  0325  0867               	movwf	(dtoa@w+1)
  7561  0326  00B8               	movf	(_width),w
  7562  0327  0866               	movwf	(dtoa@w)
  7563  0328  00B7               	line	292
  7564                           	
  7565                           i1l1949:	
  7566  0329                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 292:     if
                                  (s || (flags & (1 << 2))) {
  7567                           	movf	((dtoa@s)),w
  7568  0329  0839               iorwf	((dtoa@s+1)),w
  7569  032A  043A               	btfss	status,2
  7570  032B  1D03               	goto	u137_21
  7571  032C  2B2E               	goto	u137_20
  7572  032D  2B2F               u137_21:
  7573  032E                     	goto	i1l1953
  7574  032E  2B34               u137_20:
  7575  032F                     	
  7576                           i1l1951:	
  7577  032F                     	btfss	(_flags),(2)&7
  7578  032F  1D6A               	goto	u138_21
  7579  0330  2B32               	goto	u138_20
  7580  0331  2B33               u138_21:
  7581  0332                     	goto	i1l331
  7582  0332  2B38               u138_20:
  7583  0333                     	goto	i1l1953
  7584  0333  2B34               	
  7585                           i1l333:	
  7586  0334                     	line	293
  7587                           	
  7588                           i1l1953:	
  7589  0334                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 293:       
                                   --w;
  7590                           	movlw	0FFh
  7591  0334  30FF               	addwf	(dtoa@w),f
  7592  0335  07B7               	movlw	0FFh
  7593  0336  30FF               	addwfc	(dtoa@w+1),f
  7594  0337  3DB8               	line	294
  7595                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 294:     }

  7596                           	
  7597                           i1l331:	
  7598  0338                     	line	297
  7599                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 297:     i 
                                 = sizeof(dbuf) - 1;
  7600                           	movlw	01Fh
  7601  0338  301F               	movwf	(dtoa@i)
  7602  0339  00BF               	movlw	0
  7603  033A  3000               	movwf	((dtoa@i))+1
  7604  033B  00C0               	line	298
  7605                           	
  7606                           i1l1955:	
  7607  033C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 298:     db
                                 uf[i] = '\0';
  7608                           	movf	(dtoa@i),w
  7609  033C  083F               	addlw	low(_dbuf|((0x1)<<8))&0ffh
  7610  033D  3E20               	movwf	fsr1l
  7611  033E  0086               	movlw 1	; select bank2/3
  7612  033F  3001               	movwf fsr1h	
  7613  0340  0087               	
  7614                           	clrf	indf1
  7615  0341  0181               	line	299
  7616                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 299:     wh
                                 ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7617                           	goto	i1l1967
  7618  0342  2B92               	
  7619                           i1l335:	
  7620  0343                     	line	300
  7621                           	
  7622                           i1l1957:	
  7623  0343                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 300:       
                                   --i;
  7624                           	movlw	0FFh
  7625  0343  30FF               	movlb 0	; select bank0
  7626  0344  0020               	addwf	(dtoa@i),f
  7627  0345  07BF               	movlw	0FFh
  7628  0346  30FF               	addwfc	(dtoa@i+1),f
  7629  0347  3DC0               	line	301
  7630                           	
  7631                           i1l1959:	
  7632  0348                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 301:       
                                   dbuf[i] = '0' + abs(n % 10);
  7633                           	movlw	0
  7634  0348  3000               	movwf	(___almod@divisor+3)
  7635  0349  00F3               	movlw	0
  7636  034A  3000               	movwf	(___almod@divisor+2)
  7637  034B  00F2               	movlw	0
  7638  034C  3000               	movwf	(___almod@divisor+1)
  7639  034D  00F1               	movlw	0Ah
  7640  034E  300A               	movwf	(___almod@divisor)
  7641  034F  00F0               
  7642                           	movf	(dtoa@n+3),w
  7643  0350  083E               	movwf	(___almod@dividend+3)
  7644  0351  00F7               	movf	(dtoa@n+2),w
  7645  0352  083D               	movwf	(___almod@dividend+2)
  7646  0353  00F6               	movf	(dtoa@n+1),w
  7647  0354  083C               	movwf	(___almod@dividend+1)
  7648  0355  00F5               	movf	(dtoa@n),w
  7649  0356  083B               	movwf	(___almod@dividend)
  7650  0357  00F4               
  7651                           	fcall	___almod
  7652  0358  3186  2648  3182   	movf	(1+(?___almod)),w
  7653  035B  0871               	movwf	(abs@a+1)
  7654  035C  00FC               	movf	(0+(?___almod)),w
  7655  035D  0870               	movwf	(abs@a)
  7656  035E  00FB               	fcall	_abs
  7657  035F  318C  24A6  3182   	movf	(0+(?_abs)),w
  7658  0362  087B               	addlw	030h
  7659  0363  3E30               	movlb 0	; select bank0
  7660  0364  0020               	movwf	(??_dtoa+0)+0
  7661  0365  00B0               	movf	(dtoa@i),w
  7662  0366  083F               	addlw	low(_dbuf|((0x1)<<8))&0ffh
  7663  0367  3E20               	movwf	fsr1l
  7664  0368  0086               	movlw 1	; select bank2/3
  7665  0369  3001               	movwf fsr1h	
  7666  036A  0087               	
  7667                           	movf	(??_dtoa+0)+0,w
  7668  036B  0830               	movwf	indf1
  7669  036C  0081               	line	302
  7670                           	
  7671                           i1l1961:	
  7672  036D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 302:       
                                   --p;
  7673                           	movlw	0FFh
  7674  036D  30FF               	addwf	(dtoa@p),f
  7675  036E  07B5               	movlw	0FFh
  7676  036F  30FF               	addwfc	(dtoa@p+1),f
  7677  0370  3DB6               	line	303
  7678                           	
  7679                           i1l1963:	
  7680  0371                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 303:       
                                   --w;
  7681                           	movlw	0FFh
  7682  0371  30FF               	addwf	(dtoa@w),f
  7683  0372  07B7               	movlw	0FFh
  7684  0373  30FF               	addwfc	(dtoa@w+1),f
  7685  0374  3DB8               	line	304
  7686                           	
  7687                           i1l1965:	
  7688  0375                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 304:       
                                   n = n / 10;
  7689                           	movlw	0
  7690  0375  3000               	movwf	(___aldiv@divisor+3)
  7691  0376  00F3               	movlw	0
  7692  0377  3000               	movwf	(___aldiv@divisor+2)
  7693  0378  00F2               	movlw	0
  7694  0379  3000               	movwf	(___aldiv@divisor+1)
  7695  037A  00F1               	movlw	0Ah
  7696  037B  300A               	movwf	(___aldiv@divisor)
  7697  037C  00F0               
  7698                           	movf	(dtoa@n+3),w
  7699  037D  083E               	movwf	(___aldiv@dividend+3)
  7700  037E  00F7               	movf	(dtoa@n+2),w
  7701  037F  083D               	movwf	(___aldiv@dividend+2)
  7702  0380  00F6               	movf	(dtoa@n+1),w
  7703  0381  083C               	movwf	(___aldiv@dividend+1)
  7704  0382  00F5               	movf	(dtoa@n),w
  7705  0383  083B               	movwf	(___aldiv@dividend)
  7706  0384  00F4               
  7707                           	fcall	___aldiv
  7708  0385  3185  25AF  3182   	movf	(3+(?___aldiv)),w
  7709  0388  0873               	movlb 0	; select bank0
  7710  0389  0020               	movwf	(dtoa@n+3)
  7711  038A  00BE               	movf	(2+(?___aldiv)),w
  7712  038B  0872               	movwf	(dtoa@n+2)
  7713  038C  00BD               	movf	(1+(?___aldiv)),w
  7714  038D  0871               	movwf	(dtoa@n+1)
  7715  038E  00BC               	movf	(0+(?___aldiv)),w
  7716  038F  0870               	movwf	(dtoa@n)
  7717  0390  00BB               
  7718                           	goto	i1l1967
  7719  0391  2B92               	line	305
  7720                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 305:     }

  7721                           	
  7722                           i1l334:	
  7723  0392                     	line	299
  7724                           	
  7725                           i1l1967:	
  7726  0392                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 299:     wh
                                 ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7727                           	movf	(dtoa@i+1),w
  7728  0392  0840               	xorlw	80h
  7729  0393  3A80               	movwf	(??_dtoa+0)+0
  7730  0394  00B0               	movlw	(0)^80h
  7731  0395  3080               	subwf	(??_dtoa+0)+0,w
  7732  0396  0230               	skipz
  7733  0397  1D03               	goto	u139_25
  7734  0398  2B9B               	movlw	01h
  7735  0399  3001               	subwf	(dtoa@i),w
  7736  039A  023F               u139_25:
  7737  039B                     
  7738                           	skipc
  7739  039B  1C03               	goto	u139_21
  7740  039C  2B9E               	goto	u139_20
  7741  039D  2B9F               u139_21:
  7742  039E                     	goto	i1l1977
  7743  039E  2BCB               u139_20:
  7744  039F                     	
  7745                           i1l1969:	
  7746  039F                     	movlb 0	; select bank0
  7747  039F  0020               	movf	(dtoa@n+3),w
  7748  03A0  083E               	iorwf	(dtoa@n+2),w
  7749  03A1  043D               	iorwf	(dtoa@n+1),w
  7750  03A2  043C               	iorwf	(dtoa@n),w
  7751  03A3  043B               	skipz
  7752  03A4  1D03               	goto	u140_21
  7753  03A5  2BA7               	goto	u140_20
  7754  03A6  2BA8               u140_21:
  7755  03A7                     	goto	i1l1957
  7756  03A7  2B43               u140_20:
  7757  03A8                     	
  7758                           i1l1971:	
  7759  03A8                     	movf	(dtoa@p+1),w
  7760  03A8  0836               	xorlw	80h
  7761  03A9  3A80               	movwf	(??_dtoa+0)+0
  7762  03AA  00B0               	movlw	(0)^80h
  7763  03AB  3080               	subwf	(??_dtoa+0)+0,w
  7764  03AC  0230               	skipz
  7765  03AD  1D03               	goto	u141_25
  7766  03AE  2BB1               	movlw	01h
  7767  03AF  3001               	subwf	(dtoa@p),w
  7768  03B0  0235               u141_25:
  7769  03B1                     
  7770                           	skipnc
  7771  03B1  1803               	goto	u141_21
  7772  03B2  2BB4               	goto	u141_20
  7773  03B3  2BB5               u141_21:
  7774  03B4                     	goto	i1l1957
  7775  03B4  2B43               u141_20:
  7776  03B5                     	
  7777                           i1l1973:	
  7778  03B5                     	movlb 0	; select bank0
  7779  03B5  0020               	movf	(dtoa@w+1),w
  7780  03B6  0838               	xorlw	80h
  7781  03B7  3A80               	movwf	(??_dtoa+0)+0
  7782  03B8  00B0               	movlw	(0)^80h
  7783  03B9  3080               	subwf	(??_dtoa+0)+0,w
  7784  03BA  0230               	skipz
  7785  03BB  1D03               	goto	u142_25
  7786  03BC  2BBF               	movlw	01h
  7787  03BD  3001               	subwf	(dtoa@w),w
  7788  03BE  0237               u142_25:
  7789  03BF                     
  7790                           	skipc
  7791  03BF  1C03               	goto	u142_21
  7792  03C0  2BC2               	goto	u142_20
  7793  03C1  2BC3               u142_21:
  7794  03C2                     	goto	i1l1977
  7795  03C2  2BCB               u142_20:
  7796  03C3                     	
  7797                           i1l1975:	
  7798  03C3                     	movlb 0	; select bank0
  7799  03C3  0020               	btfsc	(_flags),(1)&7
  7800  03C4  18EA               	goto	u143_21
  7801  03C5  2BC7               	goto	u143_20
  7802  03C6  2BC8               u143_21:
  7803  03C7                     	goto	i1l1957
  7804  03C7  2B43               u143_20:
  7805  03C8                     	goto	i1l1977
  7806  03C8  2BCB               	
  7807                           i1l339:	
  7808  03C9                     	goto	i1l1977
  7809  03C9  2BCB               	
  7810                           i1l337:	
  7811  03CA                     	goto	i1l1977
  7812  03CA  2BCB               	
  7813                           i1l340:	
  7814  03CB                     	line	308
  7815                           	
  7816                           i1l1977:	
  7817  03CB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 308:     if
                                  (s || (flags & (1 << 2))) {
  7818                           	movlb 0	; select bank0
  7819  03CB  0020               	movf	((dtoa@s)),w
  7820  03CC  0839               iorwf	((dtoa@s+1)),w
  7821  03CD  043A               	btfss	status,2
  7822  03CE  1D03               	goto	u144_21
  7823  03CF  2BD1               	goto	u144_20
  7824  03D0  2BD2               u144_21:
  7825  03D1                     	goto	i1l1981
  7826  03D1  2BD7               u144_20:
  7827  03D2                     	
  7828                           i1l1979:	
  7829  03D2                     	btfss	(_flags),(2)&7
  7830  03D2  1D6A               	goto	u145_21
  7831  03D3  2BD5               	goto	u145_20
  7832  03D4  2BD6               u145_21:
  7833  03D5                     	goto	i1l1991
  7834  03D5  2BF5               u145_20:
  7835  03D6                     	goto	i1l1981
  7836  03D6  2BD7               	
  7837                           i1l343:	
  7838  03D7                     	line	309
  7839                           	
  7840                           i1l1981:	
  7841  03D7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 309:       
                                   --i;
  7842                           	movlw	0FFh
  7843  03D7  30FF               	addwf	(dtoa@i),f
  7844  03D8  07BF               	movlw	0FFh
  7845  03D9  30FF               	addwfc	(dtoa@i+1),f
  7846  03DA  3DC0               	line	310
  7847                           	
  7848                           i1l1983:	
  7849  03DB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 310:       
                                   dbuf[i] = s ? '-' : '+';
  7850                           	movf	((dtoa@s)),w
  7851  03DB  0839               iorwf	((dtoa@s+1)),w
  7852  03DC  043A               	btfss	status,2
  7853  03DD  1D03               	goto	u146_21
  7854  03DE  2BE0               	goto	u146_20
  7855  03DF  2BE1               u146_21:
  7856  03E0                     	goto	i1l1987
  7857  03E0  2BE6               u146_20:
  7858  03E1                     	
  7859                           i1l1985:	
  7860  03E1                     	movlw	02Bh
  7861  03E1  302B               	movwf	(_dtoa$672)
  7862  03E2  00B2               	movlw	0
  7863  03E3  3000               	movwf	((_dtoa$672))+1
  7864  03E4  00B3               	goto	i1l1989
  7865  03E5  2BEB               	
  7866                           i1l345:	
  7867  03E6                     	
  7868                           i1l1987:	
  7869  03E6                     	movlw	02Dh
  7870  03E6  302D               	movwf	(_dtoa$672)
  7871  03E7  00B2               	movlw	0
  7872  03E8  3000               	movwf	((_dtoa$672))+1
  7873  03E9  00B3               	goto	i1l1989
  7874  03EA  2BEB               	
  7875                           i1l347:	
  7876  03EB                     	
  7877                           i1l1989:	
  7878  03EB                     	movf	(_dtoa$672),w
  7879  03EB  0832               	movwf	(??_dtoa+0)+0
  7880  03EC  00B0               	movf	(dtoa@i),w
  7881  03ED  083F               	addlw	low(_dbuf|((0x1)<<8))&0ffh
  7882  03EE  3E20               	movwf	fsr1l
  7883  03EF  0086               	movlw 1	; select bank2/3
  7884  03F0  3001               	movwf fsr1h	
  7885  03F1  0087               	
  7886                           	movf	(??_dtoa+0)+0,w
  7887  03F2  0830               	movwf	indf1
  7888  03F3  0081               	goto	i1l1991
  7889  03F4  2BF5               	line	311
  7890                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 311:     }

  7891                           	
  7892                           i1l341:	
  7893  03F5                     	line	314
  7894                           	
  7895                           i1l1991:	
  7896  03F5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 314:     re
                                 turn pad(fp, &dbuf[i], w);
  7897                           	movf	(dtoa@i),w
  7898  03F5  083F               	addlw	low(_dbuf|((0x1)<<8))&0ffh
  7899  03F6  3E20               	movwf	(??_dtoa+0)+0
  7900  03F7  00B0               	movf	(??_dtoa+0)+0,w
  7901  03F8  0830               	movwf	(pad@buf)
  7902  03F9  00A4               	movf	(dtoa@w+1),w
  7903  03FA  0838               	movwf	(pad@p+1)
  7904  03FB  00A6               	movf	(dtoa@w),w
  7905  03FC  0837               	movwf	(pad@p)
  7906  03FD  00A5               	movf	(dtoa@fp),w
  7907  03FE  0834               	fcall	_pad
  7908  03FF  3187  278E  3182   	movlb 0	; select bank0
  7909  0402  0020               	movf	(1+(?_pad)),w
  7910  0403  0825               	movwf	(?_dtoa+1)
  7911  0404  00AD               	movf	(0+(?_pad)),w
  7912  0405  0824               	movwf	(?_dtoa)
  7913  0406  00AC               	goto	i1l348
  7914  0407  2C08               	
  7915                           i1l1993:	
  7916  0408                     	line	315
  7917                           	
  7918                           i1l348:	
  7919  0408                     	return
  7920  0408  0008               	opt stack 0
  7921                           GLOBAL	__end_of_dtoa
  7922                           	__end_of_dtoa:
  7923  0409                     	signat	_dtoa,8314
  7924                           	global	_pad
  7925                           
  7926 ;; *************** function _pad *****************
  7927 ;; Defined at:
  7928 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  7929 ;; Parameters:    Size  Location     Type
  7930 ;;  fp              1    wreg     PTR struct _IO_FILE
  7931 ;;		 -> sprintf@f(5), 
  7932 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  7933 ;;		 -> dbuf(32), 
  7934 ;;  p               2    5[BANK0 ] int 
  7935 ;; Auto vars:     Size  Location     Type
  7936 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  7937 ;;		 -> sprintf@f(5), 
  7938 ;;  w               2    9[BANK0 ] int 
  7939 ;;  i               2    7[BANK0 ] int 
  7940 ;; Return value:  Size  Location     Type
  7941 ;;                  2    4[BANK0 ] int 
  7942 ;; Registers used:
  7943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7944 ;; Tracked objects:
  7945 ;;		On entry : 0/0
  7946 ;;		On exit  : 0/0
  7947 ;;		Unchanged: 0/0
  7948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7949 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  7950 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7951 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7952 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
       0       0
  7953 ;;Total ram usage:        9 bytes
  7954 ;; Hardware stack levels used:    1
  7955 ;; Hardware stack levels required when called:    3
  7956 ;; This function calls:
  7957 ;;		_fputc
  7958 ;;		_fputs
  7959 ;;		i1_strlen
  7960 ;; This function is called by:
  7961 ;;		_dtoa
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
  7965                           	line	72
  7966                           global __ptext33
  7967                           __ptext33:	;psect for function _pad
  7968  078E                     psect	text33
  7969                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  7970                           	line	72
  7971                           	global	__size_of_pad
  7972                           	__size_of_pad	equ	__end_of_pad-_pad
  7973  005D                     	
  7974                           _pad:	
  7975  078E                     ;incstack = 0
  7976                           	opt	stack 1
  7977                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7978                           ;pad@fp stored from wreg
  7979                           	movlb 0	; select bank0
  7980  078E  0020               	movwf	(pad@fp)
  7981  078F  00AB               	line	77
  7982                           	
  7983                           i1l1799:	
  7984  0790                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 72: static 
                                 int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99
                                 \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  7985                           	btfss	(_flags),(0)&7
  7986  0790  1C6A               	goto	u106_21
  7987  0791  2F93               	goto	u106_20
  7988  0792  2F94               u106_21:
  7989  0793                     	goto	i1l1803
  7990  0793  2F9D               u106_20:
  7991  0794                     	line	78
  7992                           	
  7993                           i1l1801:	
  7994  0794                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 78:        
                                  fputs((const char *)buf, fp);
  7995                           	movf	(pad@fp),w
  7996  0794  082B               	movwf	(??_pad+0)+0
  7997  0795  00FC               	movf	(??_pad+0)+0,w
  7998  0796  087C               	movwf	(fputs@fp)
  7999  0797  00F8               	movf	(pad@buf),w
  8000  0798  0824               	fcall	_fputs
  8001  0799  318D  25E9  3187   	goto	i1l1803
  8002  079C  2F9D               	line	79
  8003                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 79:     }
  8004                           	
  8005                           i1l313:	
  8006  079D                     	line	82
  8007                           	
  8008                           i1l1803:	
  8009  079D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 82:     w =
                                  (p < 0) ? 0 : p;
  8010                           	movlb 0	; select bank0
  8011  079D  0020               	btfsc	(pad@p+1),7
  8012  079E  1BA6               	goto	u107_21
  8013  079F  2FA1               	goto	u107_20
  8014  07A0  2FA2               u107_21:
  8015  07A1                     	goto	i1l1807
  8016  07A1  2FA7               u107_20:
  8017  07A2                     	
  8018                           i1l1805:	
  8019  07A2                     	movf	(pad@p+1),w
  8020  07A2  0826               	movwf	(pad@w+1)
  8021  07A3  00AA               	movf	(pad@p),w
  8022  07A4  0825               	movwf	(pad@w)
  8023  07A5  00A9               	goto	i1l317
  8024  07A6  2FA9               	
  8025                           i1l315:	
  8026  07A7                     	
  8027                           i1l1807:	
  8028  07A7                     	clrf	(pad@w)
  8029  07A7  01A9               	clrf	(pad@w+1)
  8030  07A8  01AA               	
  8031                           i1l317:	
  8032  07A9                     	line	83
  8033                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 83:     i =
                                  0;
  8034                           	clrf	(pad@i)
  8035  07A9  01A7               	clrf	(pad@i+1)
  8036  07AA  01A8               	line	84
  8037                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  8038                           	goto	i1l1813
  8039  07AB  2FBE               	
  8040                           i1l319:	
  8041  07AC                     	line	85
  8042                           	
  8043                           i1l1809:	
  8044  07AC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 85:        
                                  fputc(' ', fp);
  8045                           	movlw	020h
  8046  07AC  3020               	movwf	(fputc@c)
  8047  07AD  00F0               	movlw	0
  8048  07AE  3000               	movwf	((fputc@c))+1
  8049  07AF  00F1               	movlb 0	; select bank0
  8050  07B0  0020               	movf	(pad@fp),w
  8051  07B1  082B               	movwf	(??_pad+0)+0
  8052  07B2  00FC               	movf	(??_pad+0)+0,w
  8053  07B3  087C               	movwf	(fputc@fp)
  8054  07B4  00F2               	fcall	_fputc
  8055  07B5  318F  27AB  3187   	line	86
  8056                           	
  8057                           i1l1811:	
  8058  07B8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 86:        
                                  ++i;
  8059                           	movlw	01h
  8060  07B8  3001               	movlb 0	; select bank0
  8061  07B9  0020               	addwf	(pad@i),f
  8062  07BA  07A7               	movlw	0
  8063  07BB  3000               	addwfc	(pad@i+1),f
  8064  07BC  3DA8               	goto	i1l1813
  8065  07BD  2FBE               	line	87
  8066                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 87:     }
  8067                           	
  8068                           i1l318:	
  8069  07BE                     	line	84
  8070                           	
  8071                           i1l1813:	
  8072  07BE                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  8073                           	movf	(pad@i+1),w
  8074  07BE  0828               	xorlw	80h
  8075  07BF  3A80               	movwf	(??_pad+0)+0
  8076  07C0  00FC               	movf	(pad@w+1),w
  8077  07C1  082A               	xorlw	80h
  8078  07C2  3A80               	subwf	(??_pad+0)+0,w
  8079  07C3  027C               	skipz
  8080  07C4  1D03               	goto	u108_25
  8081  07C5  2FC8               	movf	(pad@w),w
  8082  07C6  0829               	subwf	(pad@i),w
  8083  07C7  0227               u108_25:
  8084  07C8                     
  8085                           	skipc
  8086  07C8  1C03               	goto	u108_21
  8087  07C9  2FCB               	goto	u108_20
  8088  07CA  2FCC               u108_21:
  8089  07CB                     	goto	i1l1809
  8090  07CB  2FAC               u108_20:
  8091  07CC                     	
  8092                           i1l320:	
  8093  07CC                     	line	90
  8094                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 90:     if 
                                 (!(flags & (1 << 0))) {
  8095                           	movlb 0	; select bank0
  8096  07CC  0020               	btfsc	(_flags),(0)&7
  8097  07CD  186A               	goto	u109_21
  8098  07CE  2FD0               	goto	u109_20
  8099  07CF  2FD1               u109_21:
  8100  07D0                     	goto	i1l1817
  8101  07D0  2FDA               u109_20:
  8102  07D1                     	line	91
  8103                           	
  8104                           i1l1815:	
  8105  07D1                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 91:        
                                  fputs((const char *)buf, fp);
  8106                           	movf	(pad@fp),w
  8107  07D1  082B               	movwf	(??_pad+0)+0
  8108  07D2  00FC               	movf	(??_pad+0)+0,w
  8109  07D3  087C               	movwf	(fputs@fp)
  8110  07D4  00F8               	movf	(pad@buf),w
  8111  07D5  0824               	fcall	_fputs
  8112  07D6  318D  25E9  3187   	goto	i1l1817
  8113  07D9  2FDA               	line	92
  8114                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 92:     }
  8115                           	
  8116                           i1l321:	
  8117  07DA                     	line	94
  8118                           	
  8119                           i1l1817:	
  8120  07DA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 94:     ret
                                 urn strlen(buf) + w;
  8121                           	movlb 0	; select bank0
  8122  07DA  0020               	movf	(pad@buf),w
  8123  07DB  0824               	movwf	(i1strlen@s)
  8124  07DC  00F0               	movlw	0x1
  8125  07DD  3001               
  8126                           	movwf	(i1strlen@s+1)
  8127  07DE  00F1               	fcall	i1_strlen
  8128  07DF  318C  24E2  3187   	movlb 0	; select bank0
  8129  07E2  0020               	movf	(pad@w),w
  8130  07E3  0829               	addwf	(0+(?i1_strlen)),w
  8131  07E4  0770               	movwf	(?_pad)
  8132  07E5  00A4               	movf	(pad@w+1),w
  8133  07E6  082A               	addwfc	(1+(?i1_strlen)),w
  8134  07E7  3D71               	movwf	1+(?_pad)
  8135  07E8  00A5               	goto	i1l322
  8136  07E9  2FEA               	
  8137                           i1l1819:	
  8138  07EA                     	line	95
  8139                           	
  8140                           i1l322:	
  8141  07EA                     	return
  8142  07EA  0008               	opt stack 0
  8143                           GLOBAL	__end_of_pad
  8144                           	__end_of_pad:
  8145  07EB                     	signat	_pad,12410
  8146                           	global	i1_strlen
  8147                           
  8148 ;; *************** function i1_strlen *****************
  8149 ;; Defined at:
  8150 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;  s               2    0[COMMON] PTR const unsigned char 
  8153 ;;		 -> dbuf(32), STR_12(7), STR_11(4), STR_10(4), 
  8154 ;;		 -> STR_9(2), STR_8(2), STR_7(5), STR_6(3), 
  8155 ;;		 -> wHexTemp(20), STR_4(3), STR_3(4), STR_2(5), 
  8156 ;;		 -> STR_1(4), wInterruptText(75), 
  8157 ;; Auto vars:     Size  Location     Type
  8158 ;;  strlen          2    4[COMMON] PTR const unsigned char 
  8159 ;;		 -> dbuf(32), STR_12(7), STR_11(4), STR_10(4), 
  8160 ;;		 -> STR_9(2), STR_8(2), STR_7(5), STR_6(3), 
  8161 ;;		 -> wHexTemp(20), STR_4(3), STR_3(4), STR_2(5), 
  8162 ;;		 -> STR_1(4), wInterruptText(75), 
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  2    0[COMMON] unsigned int 
  8165 ;; Registers used:
  8166 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8173 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8174 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8175 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8176 ;;Total ram usage:        6 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; This function calls:
  8179 ;;		Nothing
  8180 ;; This function is called by:
  8181 ;;		_pad
  8182 ;;		i1_Add_Trace
  8183 ;;		i1_strcat
  8184 ;; This function uses a non-reentrant model
  8185 ;;
  8186                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
  8187                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  8188                           	line	12
  8189                           global __ptext34
  8190                           __ptext34:	;psect for function i1_strlen
  8191  0CE2                     psect	text34
  8192                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  8193                           	line	12
  8194                           	global	__size_ofi1_strlen
  8195                           	__size_ofi1_strlen	equ	__end_ofi1_strlen-i1_strlen
  8196  0023                     	
  8197                           i1_strlen:	
  8198  0CE2                     ;incstack = 0
  8199                           	opt	stack 7
  8200                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
  8201                           	line	14
  8202                           	
  8203                           i1l1761:	
  8204  0CE2                     	movf	(i1strlen@s+1),w
  8205  0CE2  0871               	movwf	(i1strlen@a+1)
  8206  0CE3  00F5               	movf	(i1strlen@s),w
  8207  0CE4  0870               	movwf	(i1strlen@a)
  8208  0CE5  00F4               	line	16
  8209                           	goto	i1l1765
  8210  0CE6  2CEC               	
  8211                           i1l861:	
  8212  0CE7                     	line	17
  8213                           	
  8214                           i1l1763:	
  8215  0CE7                     	movlw	01h
  8216  0CE7  3001               	addwf	(i1strlen@s),f
  8217  0CE8  07F0               	movlw	0
  8218  0CE9  3000               	addwfc	(i1strlen@s+1),f
  8219  0CEA  3DF1               	goto	i1l1765
  8220  0CEB  2CEC               	line	18
  8221                           	
  8222                           i1l860:	
  8223  0CEC                     	line	16
  8224                           	
  8225                           i1l1765:	
  8226  0CEC                     	movf	(i1strlen@s),w
  8227  0CEC  0870               	movwf	fsr0l
  8228  0CED  0084               	movf	((i1strlen@s+1)),w
  8229  0CEE  0871               	movwf	fsr0h
  8230  0CEF  0085               	moviw	fsr0++
  8231  0CF0  0012               	btfss	status,2
  8232  0CF1  1D03               	goto	u102_21
  8233  0CF2  2CF4               	goto	u102_20
  8234  0CF3  2CF5               u102_21:
  8235  0CF4                     	goto	i1l1763
  8236  0CF4  2CE7               u102_20:
  8237  0CF5                     	goto	i1l1767
  8238  0CF5  2CF6               	
  8239                           i1l862:	
  8240  0CF6                     	line	25
  8241                           	
  8242                           i1l1767:	
  8243  0CF6                     	comf	(i1strlen@a),w
  8244  0CF6  0974               	movwf	(??i1_strlen+0)+0
  8245  0CF7  00F2               	comf	(i1strlen@a+1),w
  8246  0CF8  0975               	movwf	((??i1_strlen+0)+0+1)
  8247  0CF9  00F3               	incf	(??i1_strlen+0)+0,f
  8248  0CFA  0AF2               	skipnz
  8249  0CFB  1903               	incf	((??i1_strlen+0)+0+1),f
  8250  0CFC  0AF3               	movf	(i1strlen@s),w
  8251  0CFD  0870               	addwf	0+(??i1_strlen+0)+0,w
  8252  0CFE  0772               	movwf	(?i1_strlen)
  8253  0CFF  00F0               	movf	(i1strlen@s+1),w
  8254  0D00  0871               	addwfc	1+(??i1_strlen+0)+0,w
  8255  0D01  3D73               	movwf	1+(?i1_strlen)
  8256  0D02  00F1               	goto	i1l863
  8257  0D03  2D04               	
  8258                           i1l1769:	
  8259  0D04                     	line	26
  8260                           	
  8261                           i1l863:	
  8262  0D04                     	return
  8263  0D04  0008               	opt stack 0
  8264                           GLOBAL	__end_ofi1_strlen
  8265                           	__end_ofi1_strlen:
  8266  0D05                     	signat	i1_strlen,90
  8267                           	global	_fputs
  8268                           
  8269 ;; *************** function _fputs *****************
  8270 ;; Defined at:
  8271 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  s               1    wreg     PTR const unsigned char 
  8274 ;;		 -> dbuf(32), 
  8275 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  8276 ;;		 -> sprintf@f(5), 
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  8279 ;;		 -> dbuf(32), 
  8280 ;;  i               2    1[BANK0 ] int 
  8281 ;;  c               1    0[BANK0 ] unsigned char 
  8282 ;; Return value:  Size  Location     Type
  8283 ;;                  2    8[COMMON] int 
  8284 ;; Registers used:
  8285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8286 ;; Tracked objects:
  8287 ;;		On entry : 0/0
  8288 ;;		On exit  : 0/0
  8289 ;;		Unchanged: 0/0
  8290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8291 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8292 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  8293 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8294 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  8295 ;;Total ram usage:        8 bytes
  8296 ;; Hardware stack levels used:    1
  8297 ;; Hardware stack levels required when called:    2
  8298 ;; This function calls:
  8299 ;;		_fputc
  8300 ;; This function is called by:
  8301 ;;		_pad
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           psect	text35,local,class=CODE,delta=2,merge=1,group=2
  8305                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  8306                           	line	8
  8307                           global __ptext35
  8308                           __ptext35:	;psect for function _fputs
  8309  0DE9                     psect	text35
  8310                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  8311                           	line	8
  8312                           	global	__size_of_fputs
  8313                           	__size_of_fputs	equ	__end_of_fputs-_fputs
  8314  002B                     	
  8315                           _fputs:	
  8316  0DE9                     ;incstack = 0
  8317                           	opt	stack 1
  8318                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8319                           ;fputs@s stored from wreg
  8320                           	movlb 0	; select bank0
  8321  0DE9  0020               	movwf	(fputs@s)
  8322  0DEA  00A3               	line	13
  8323                           	
  8324                           i1l1753:	
  8325  0DEB                     	clrf	(fputs@i)
  8326  0DEB  01A1               	clrf	(fputs@i+1)
  8327  0DEC  01A2               	line	14
  8328                           	goto	i1l1759
  8329  0DED  2E02               	
  8330                           i1l832:	
  8331  0DEE                     	line	15
  8332                           	
  8333                           i1l1755:	
  8334  0DEE                     	movf	(fputs@c),w
  8335  0DEE  0820               	movwf	(??_fputs+0)+0
  8336  0DEF  00F9               	clrf	(??_fputs+0)+0+1
  8337  0DF0  01FA               	movf	0+(??_fputs+0)+0,w
  8338  0DF1  0879               	movwf	(fputc@c)
  8339  0DF2  00F0               	movf	1+(??_fputs+0)+0,w
  8340  0DF3  087A               	movwf	(fputc@c+1)
  8341  0DF4  00F1               	movf	(fputs@fp),w
  8342  0DF5  0878               	movwf	(??_fputs+2)+0
  8343  0DF6  00FB               	movf	(??_fputs+2)+0,w
  8344  0DF7  087B               	movwf	(fputc@fp)
  8345  0DF8  00F2               	fcall	_fputc
  8346  0DF9  318F  27AB  318D   	line	16
  8347                           	
  8348                           i1l1757:	
  8349  0DFC                     	movlw	01h
  8350  0DFC  3001               	movlb 0	; select bank0
  8351  0DFD  0020               	addwf	(fputs@i),f
  8352  0DFE  07A1               	movlw	0
  8353  0DFF  3000               	addwfc	(fputs@i+1),f
  8354  0E00  3DA2               	goto	i1l1759
  8355  0E01  2E02               	line	17
  8356                           	
  8357                           i1l831:	
  8358  0E02                     	line	14
  8359                           	
  8360                           i1l1759:	
  8361  0E02                     	movf	(fputs@i),w
  8362  0E02  0821               	addwf	(fputs@s),w
  8363  0E03  0723               	movwf	(??_fputs+0)+0
  8364  0E04  00F9               	movf	0+(??_fputs+0)+0,w
  8365  0E05  0879               	movwf	fsr1l
  8366  0E06  0086               	movlw 1	; select bank2/3
  8367  0E07  3001               	movwf fsr1h	
  8368  0E08  0087               	
  8369                           	movf	indf1,w
  8370  0E09  0801               	movwf	(??_fputs+1)+0
  8371  0E0A  00FA               	movf	(??_fputs+1)+0,w
  8372  0E0B  087A               	movwf	(fputs@c)
  8373  0E0C  00A0               	movf	(((fputs@c))),w
  8374  0E0D  0820               	btfss	status,2
  8375  0E0E  1D03               	goto	u101_21
  8376  0E0F  2E11               	goto	u101_20
  8377  0E10  2E12               u101_21:
  8378  0E11                     	goto	i1l1755
  8379  0E11  2DEE               u101_20:
  8380  0E12                     	goto	i1l834
  8381  0E12  2E13               	
  8382                           i1l833:	
  8383  0E13                     	line	19
  8384                           ;	Return value of _fputs is never used
  8385                           	
  8386                           i1l834:	
  8387  0E13                     	return
  8388  0E13  0008               	opt stack 0
  8389                           GLOBAL	__end_of_fputs
  8390                           	__end_of_fputs:
  8391  0E14                     	signat	_fputs,8314
  8392                           	global	_fputc
  8393                           
  8394 ;; *************** function _fputc *****************
  8395 ;; Defined at:
  8396 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  8397 ;; Parameters:    Size  Location     Type
  8398 ;;  c               2    0[COMMON] int 
  8399 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  8400 ;;		 -> sprintf@f(5), 
  8401 ;; Auto vars:     Size  Location     Type
  8402 ;;		None
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  2    0[COMMON] int 
  8405 ;; Registers used:
  8406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8407 ;; Tracked objects:
  8408 ;;		On entry : 0/0
  8409 ;;		On exit  : 0/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8412 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8414 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8415 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8416 ;;Total ram usage:        8 bytes
  8417 ;; Hardware stack levels used:    1
  8418 ;; Hardware stack levels required when called:    1
  8419 ;; This function calls:
  8420 ;;		_putch
  8421 ;; This function is called by:
  8422 ;;		_pad
  8423 ;;		_vfpfcnvrt
  8424 ;;		_fputs
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           psect	text36,local,class=CODE,delta=2,merge=1,group=2
  8428                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  8429                           	line	8
  8430                           global __ptext36
  8431                           __ptext36:	;psect for function _fputc
  8432  0FAB                     psect	text36
  8433                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  8434                           	line	8
  8435                           	global	__size_of_fputc
  8436                           	__size_of_fputc	equ	__end_of_fputc-_fputc
  8437  0055                     	
  8438                           _fputc:	
  8439  0FAB                     ;incstack = 0
  8440                           	opt	stack 4
  8441                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8442                           	line	12
  8443                           	
  8444                           i1l1735:	
  8445  0FAB                     	movf	((fputc@fp)),w
  8446  0FAB  0872               	btfsc	status,2
  8447  0FAC  1903               	goto	u97_21
  8448  0FAD  2FAF               	goto	u97_20
  8449  0FAE  2FB0               u97_21:
  8450  0FAF                     	goto	i1l1739
  8451  0FAF  2FB6               u97_20:
  8452  0FB0                     	
  8453                           i1l1737:	
  8454  0FB0                     	movf	((fputc@fp)),w
  8455  0FB0  0872               	btfss	status,2
  8456  0FB1  1D03               	goto	u98_21
  8457  0FB2  2FB4               	goto	u98_20
  8458  0FB3  2FB5               u98_21:
  8459  0FB4                     	goto	i1l1741
  8460  0FB4  2FBB               u98_20:
  8461  0FB5                     	goto	i1l1739
  8462  0FB5  2FB6               	
  8463                           i1l821:	
  8464  0FB6                     	line	13
  8465                           	
  8466                           i1l1739:	
  8467  0FB6                     	movf	(fputc@c),w
  8468  0FB6  0870               	fcall	_putch
  8469  0FB7  3180  2003  318F   	line	14
  8470                           	goto	i1l826
  8471  0FBA  2FFF               	
  8472                           i1l819:	
  8473  0FBB                     	line	15
  8474                           	
  8475                           i1l1741:	
  8476  0FBB                     	movf	(fputc@fp),w
  8477  0FBB  0872               	addlw	03h
  8478  0FBC  3E03               	movwf	fsr1l
  8479  0FBD  0086               	clrf fsr1h	
  8480  0FBE  0187               	
  8481                           		moviw	fsr1++
  8482  0FBF  0016               	iorwf	indf1,w
  8483  0FC0  0401               	btfsc	status,2
  8484  0FC1  1903               	goto	u99_21
  8485  0FC2  2FC4               	goto	u99_20
  8486  0FC3  2FC5               
  8487                           u99_21:
  8488  0FC4                     	goto	i1l1745
  8489  0FC4  2FE3               u99_20:
  8490  0FC5                     	
  8491                           i1l1743:	
  8492  0FC5                     	movf	(fputc@fp),w
  8493  0FC5  0872               	addlw	03h
  8494  0FC6  3E03               	movwf	fsr1l
  8495  0FC7  0086               	clrf fsr1h	
  8496  0FC8  0187               	
  8497                           	moviw	[0]fsr1
  8498  0FC9  3F40               	movwf	(??_fputc+0)+0
  8499  0FCA  00F3               	moviw	[1]fsr1
  8500  0FCB  3F41               	movwf	(??_fputc+0)+0+1
  8501  0FCC  00F4               	incf	(fputc@fp),w
  8502  0FCD  0A72               	movwf	fsr1l
  8503  0FCE  0086               	clrf fsr1h	
  8504  0FCF  0187               	
  8505                           	moviw	[0]fsr1
  8506  0FD0  3F40               	movwf	(??_fputc+2)+0
  8507  0FD1  00F5               	moviw	[1]fsr1
  8508  0FD2  3F41               	movwf	(??_fputc+2)+0+1
  8509  0FD3  00F6               	movf	1+(??_fputc+2)+0,w
  8510  0FD4  0876               	xorlw	80h
  8511  0FD5  3A80               	movwf	(??_fputc+4)+0
  8512  0FD6  00F7               	movf	1+(??_fputc+0)+0,w
  8513  0FD7  0874               	xorlw	80h
  8514  0FD8  3A80               	subwf	(??_fputc+4)+0,w
  8515  0FD9  0277               	skipz
  8516  0FDA  1D03               	goto	u100_25
  8517  0FDB  2FDE               	movf	0+(??_fputc+0)+0,w
  8518  0FDC  0873               	subwf	0+(??_fputc+2)+0,w
  8519  0FDD  0275               u100_25:
  8520  0FDE                     
  8521                           	skipnc
  8522  0FDE  1803               	goto	u100_21
  8523  0FDF  2FE1               	goto	u100_20
  8524  0FE0  2FE2               u100_21:
  8525  0FE1                     	goto	i1l826
  8526  0FE1  2FFF               u100_20:
  8527  0FE2                     	goto	i1l1745
  8528  0FE2  2FE3               	
  8529                           i1l825:	
  8530  0FE3                     	line	16
  8531                           	
  8532                           i1l1745:	
  8533  0FE3                     	movf	(fputc@c),w
  8534  0FE3  0870               	movwf	(??_fputc+0)+0
  8535  0FE4  00F3               	movf	(fputc@fp),w
  8536  0FE5  0872               	movwf	fsr1l
  8537  0FE6  0086               	clrf fsr1h	
  8538  0FE7  0187               	
  8539                           	incf	(fputc@fp),w
  8540  0FE8  0A72               	movwf	fsr0l
  8541  0FE9  0084               	clrf fsr0h	
  8542  0FEA  0185               	
  8543                           	movf	indf0,w
  8544  0FEB  0800               	addwf	indf1,w
  8545  0FEC  0701               	movwf	(??_fputc+1)+0
  8546  0FED  00F4               	movf	0+(??_fputc+1)+0,w
  8547  0FEE  0874               	movwf	fsr1l
  8548  0FEF  0086               	movlw 1	; select bank2/3
  8549  0FF0  3001               	movwf fsr1h	
  8550  0FF1  0087               	
  8551                           	movf	(??_fputc+0)+0,w
  8552  0FF2  0873               	movwf	indf1
  8553  0FF3  0081               	line	17
  8554                           	
  8555                           i1l1747:	
  8556  0FF4                     	incf	(fputc@fp),w
  8557  0FF4  0A72               	movwf	fsr1l
  8558  0FF5  0086               	clrf fsr1h	
  8559  0FF6  0187               	
  8560                           	movlw	01h
  8561  0FF7  3001               	addwf	indf1,f
  8562  0FF8  0781               	addfsr	fsr1,1
  8563  0FF9  3141               	skipnc
  8564  0FFA  1803               	incf	indf1,f
  8565  0FFB  0A81               	goto	i1l826
  8566  0FFC  2FFF               	line	18
  8567                           	
  8568                           i1l823:	
  8569  0FFD                     	goto	i1l826
  8570  0FFD  2FFF               	line	19
  8571                           	
  8572                           i1l822:	
  8573  0FFE                     	goto	i1l826
  8574  0FFE  2FFF               	line	20
  8575                           	
  8576                           i1l1749:	
  8577  0FFF                     	line	21
  8578                           ;	Return value of _fputc is never used
  8579                           	
  8580                           i1l826:	
  8581  0FFF                     	return
  8582  0FFF  0008               	opt stack 0
  8583                           GLOBAL	__end_of_fputc
  8584                           	__end_of_fputc:
  8585  1000                     	signat	_fputc,8314
  8586                           	global	_putch
  8587                           
  8588 ;; *************** function _putch *****************
  8589 ;; Defined at:
  8590 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;  c               1    wreg     unsigned char 
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;  c               1    0[COMMON] unsigned char 
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  1    wreg      void 
  8597 ;; Registers used:
  8598 ;;		wreg
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8608 ;;Total ram usage:        0 bytes
  8609 ;; Hardware stack levels used:    1
  8610 ;; This function calls:
  8611 ;;		Nothing
  8612 ;; This function is called by:
  8613 ;;		_fputc
  8614 ;; This function uses a non-reentrant model
  8615 ;;
  8616                           psect	text37,local,class=CODE,delta=2,merge=1,group=2
  8617                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  8618                           	line	7
  8619                           global __ptext37
  8620                           __ptext37:	;psect for function _putch
  8621  0003                     psect	text37
  8622                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  8623                           	line	7
  8624                           	global	__size_of_putch
  8625                           	__size_of_putch	equ	__end_of_putch-_putch
  8626  0001                     	
  8627                           _putch:	
  8628  0003                     ;incstack = 0
  8629                           	opt	stack 4
  8630                           ; Regs used in _putch: [wreg]
  8631                           	line	9
  8632                           	
  8633                           i1l844:	
  8634  0003                     	return
  8635  0003  0008               	opt stack 0
  8636                           GLOBAL	__end_of_putch
  8637                           	__end_of_putch:
  8638  0004                     	signat	_putch,4217
  8639                           	global	_abs
  8640                           
  8641 ;; *************** function _abs *****************
  8642 ;; Defined at:
  8643 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;  a               2   11[COMMON] int 
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;		None
  8648 ;; Return value:  Size  Location     Type
  8649 ;;                  2   11[COMMON] int 
  8650 ;; Registers used:
  8651 ;;		wreg, status,2, status,0
  8652 ;; Tracked objects:
  8653 ;;		On entry : 0/0
  8654 ;;		On exit  : 0/0
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8659 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8660 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8661 ;;Total ram usage:        4 bytes
  8662 ;; Hardware stack levels used:    1
  8663 ;; This function calls:
  8664 ;;		Nothing
  8665 ;; This function is called by:
  8666 ;;		_dtoa
  8667 ;; This function uses a non-reentrant model
  8668 ;;
  8669                           psect	text38,local,class=CODE,delta=2,merge=1,group=2
  8670                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  8671                           	line	1
  8672                           global __ptext38
  8673                           __ptext38:	;psect for function _abs
  8674  0CA6                     psect	text38
  8675                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  8676                           	line	1
  8677                           	global	__size_of_abs
  8678                           	__size_of_abs	equ	__end_of_abs-_abs
  8679  001D                     	
  8680                           _abs:	
  8681  0CA6                     ;incstack = 0
  8682                           	opt	stack 4
  8683                           ; Regs used in _abs: [wreg+status,2+status,0]
  8684                           	line	3
  8685                           	
  8686                           i1l1821:	
  8687  0CA6                     	movf	(abs@a+1),w
  8688  0CA6  087C               	xorlw	80h
  8689  0CA7  3A80               	movlb 0	; select bank0
  8690  0CA8  0020               	movwf	(??_abs+0)+0
  8691  0CA9  00A0               	movlw	(0)^80h
  8692  0CAA  3080               	subwf	(??_abs+0)+0,w
  8693  0CAB  0220               	skipz
  8694  0CAC  1D03               	goto	u110_25
  8695  0CAD  2CB0               	movlw	01h
  8696  0CAE  3001               	subwf	(abs@a),w
  8697  0CAF  027B               u110_25:
  8698  0CB0                     
  8699                           	skipnc
  8700  0CB0  1803               	goto	u110_21
  8701  0CB1  2CB3               	goto	u110_20
  8702  0CB2  2CB4               u110_21:
  8703  0CB3                     	goto	i1l801
  8704  0CB3  2CC1               u110_20:
  8705  0CB4                     	
  8706                           i1l1823:	
  8707  0CB4                     	comf	(abs@a),w
  8708  0CB4  097B               	movlb 0	; select bank0
  8709  0CB5  0020               	movwf	(??_abs+0)+0
  8710  0CB6  00A0               	comf	(abs@a+1),w
  8711  0CB7  097C               	movwf	((??_abs+0)+0+1)
  8712  0CB8  00A1               	incf	(??_abs+0)+0,f
  8713  0CB9  0AA0               	skipnz
  8714  0CBA  1903               	incf	((??_abs+0)+0+1),f
  8715  0CBB  0AA1               	movf	0+(??_abs+0)+0,w
  8716  0CBC  0820               	movwf	(?_abs)
  8717  0CBD  00FB               	movf	1+(??_abs+0)+0,w
  8718  0CBE  0821               	movwf	(?_abs+1)
  8719  0CBF  00FC               	goto	i1l804
  8720  0CC0  2CC2               	
  8721                           i1l801:	
  8722  0CC1                     	goto	i1l804
  8723  0CC1  2CC2               	
  8724                           i1l803:	
  8725  0CC2                     	line	4
  8726                           	
  8727                           i1l804:	
  8728  0CC2                     	return
  8729  0CC2  0008               	opt stack 0
  8730                           GLOBAL	__end_of_abs
  8731                           	__end_of_abs:
  8732  0CC3                     	signat	_abs,4218
  8733                           	global	___almod
  8734                           
  8735 ;; *************** function ___almod *****************
  8736 ;; Defined at:
  8737 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\almod.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;  divisor         4    0[COMMON] long 
  8740 ;;  dividend        4    4[COMMON] long 
  8741 ;; Auto vars:     Size  Location     Type
  8742 ;;  sign            1   10[COMMON] unsigned char 
  8743 ;;  counter         1    9[COMMON] unsigned char 
  8744 ;; Return value:  Size  Location     Type
  8745 ;;                  4    0[COMMON] long 
  8746 ;; Registers used:
  8747 ;;		wreg, status,2, status,0
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8753 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8755 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8756 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8757 ;;Total ram usage:       11 bytes
  8758 ;; Hardware stack levels used:    1
  8759 ;; This function calls:
  8760 ;;		Nothing
  8761 ;; This function is called by:
  8762 ;;		_dtoa
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           psect	text39,local,class=CODE,delta=2,merge=1,group=1
  8766                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\almod.c"
  8767                           	line	5
  8768                           global __ptext39
  8769                           __ptext39:	;psect for function ___almod
  8770  0648                     psect	text39
  8771                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\almod.c"
  8772                           	line	5
  8773                           	global	__size_of___almod
  8774                           	__size_of___almod	equ	__end_of___almod-___almod
  8775  0084                     	
  8776                           ___almod:	
  8777  0648                     ;incstack = 0
  8778                           	opt	stack 4
  8779                           ; Regs used in ___almod: [wreg+status,2+status,0]
  8780                           	line	12
  8781                           	
  8782                           i1l1865:	
  8783  0648                     	clrf	(___almod@sign)
  8784  0648  01FA               	line	13
  8785                           	
  8786                           i1l1867:	
  8787  0649                     	btfss	(___almod@dividend+3),7
  8788  0649  1FF7               	goto	u121_21
  8789  064A  2E4C               	goto	u121_20
  8790  064B  2E4D               u121_21:
  8791  064C                     	goto	i1l444
  8792  064C  2E5A               u121_20:
  8793  064D                     	line	14
  8794                           	
  8795                           i1l1869:	
  8796  064D                     	comf	(___almod@dividend),f
  8797  064D  09F4               	comf	(___almod@dividend+1),f
  8798  064E  09F5               	comf	(___almod@dividend+2),f
  8799  064F  09F6               	comf	(___almod@dividend+3),f
  8800  0650  09F7               	incf	(___almod@dividend),f
  8801  0651  0AF4               	skipnz
  8802  0652  1903               	incf	(___almod@dividend+1),f
  8803  0653  0AF5               	skipnz
  8804  0654  1903               	incf	(___almod@dividend+2),f
  8805  0655  0AF6               	skipnz
  8806  0656  1903               	incf	(___almod@dividend+3),f
  8807  0657  0AF7               	line	15
  8808                           	clrf	(___almod@sign)
  8809  0658  01FA               	incf	(___almod@sign),f
  8810  0659  0AFA               	line	16
  8811                           	
  8812                           i1l444:	
  8813  065A                     	line	17
  8814                           	btfss	(___almod@divisor+3),7
  8815  065A  1FF3               	goto	u122_21
  8816  065B  2E5D               	goto	u122_20
  8817  065C  2E5E               u122_21:
  8818  065D                     	goto	i1l1873
  8819  065D  2E6A               u122_20:
  8820  065E                     	line	18
  8821                           	
  8822                           i1l1871:	
  8823  065E                     	comf	(___almod@divisor),f
  8824  065E  09F0               	comf	(___almod@divisor+1),f
  8825  065F  09F1               	comf	(___almod@divisor+2),f
  8826  0660  09F2               	comf	(___almod@divisor+3),f
  8827  0661  09F3               	incf	(___almod@divisor),f
  8828  0662  0AF0               	skipnz
  8829  0663  1903               	incf	(___almod@divisor+1),f
  8830  0664  0AF1               	skipnz
  8831  0665  1903               	incf	(___almod@divisor+2),f
  8832  0666  0AF2               	skipnz
  8833  0667  1903               	incf	(___almod@divisor+3),f
  8834  0668  0AF3               	goto	i1l1873
  8835  0669  2E6A               	
  8836                           i1l445:	
  8837  066A                     	line	19
  8838                           	
  8839                           i1l1873:	
  8840  066A                     	movf	(___almod@divisor+3),w
  8841  066A  0873               	iorwf	(___almod@divisor+2),w
  8842  066B  0472               	iorwf	(___almod@divisor+1),w
  8843  066C  0471               	iorwf	(___almod@divisor),w
  8844  066D  0470               	skipnz
  8845  066E  1903               	goto	u123_21
  8846  066F  2E71               	goto	u123_20
  8847  0670  2E72               u123_21:
  8848  0671                     	goto	i1l1889
  8849  0671  2EB1               u123_20:
  8850  0672                     	line	20
  8851                           	
  8852                           i1l1875:	
  8853  0672                     	clrf	(___almod@counter)
  8854  0672  01F9               	incf	(___almod@counter),f
  8855  0673  0AF9               	line	21
  8856                           	goto	i1l1879
  8857  0674  2E81               	
  8858                           i1l448:	
  8859  0675                     	line	22
  8860                           	
  8861                           i1l1877:	
  8862  0675                     	movlw	01h
  8863  0675  3001               u124_25:
  8864  0676                     	lslf	(___almod@divisor),f
  8865  0676  35F0               	rlf	(___almod@divisor+1),f
  8866  0677  0DF1               	rlf	(___almod@divisor+2),f
  8867  0678  0DF2               	rlf	(___almod@divisor+3),f
  8868  0679  0DF3               	decfsz	wreg,f
  8869  067A  0B89               	goto	u124_25
  8870  067B  2E76               	line	23
  8871                           	movlw	low(01h)
  8872  067C  3001               	movwf	(??___almod+0)+0
  8873  067D  00F8               	movf	(??___almod+0)+0,w
  8874  067E  0878               	addwf	(___almod@counter),f
  8875  067F  07F9               	goto	i1l1879
  8876  0680  2E81               	line	24
  8877                           	
  8878                           i1l447:	
  8879  0681                     	line	21
  8880                           	
  8881                           i1l1879:	
  8882  0681                     	btfss	(___almod@divisor+3),(31)&7
  8883  0681  1FF3               	goto	u125_21
  8884  0682  2E84               	goto	u125_20
  8885  0683  2E85               u125_21:
  8886  0684                     	goto	i1l1877
  8887  0684  2E75               u125_20:
  8888  0685                     	goto	i1l1881
  8889  0685  2E87               	
  8890                           i1l449:	
  8891  0686                     	goto	i1l1881
  8892  0686  2E87               	line	25
  8893                           	
  8894                           i1l450:	
  8895  0687                     	line	26
  8896                           	
  8897                           i1l1881:	
  8898  0687                     	movf	(___almod@divisor+3),w
  8899  0687  0873               	subwf	(___almod@dividend+3),w
  8900  0688  0277               	skipz
  8901  0689  1D03               	goto	u126_25
  8902  068A  2E95               	movf	(___almod@divisor+2),w
  8903  068B  0872               	subwf	(___almod@dividend+2),w
  8904  068C  0276               	skipz
  8905  068D  1D03               	goto	u126_25
  8906  068E  2E95               	movf	(___almod@divisor+1),w
  8907  068F  0871               	subwf	(___almod@dividend+1),w
  8908  0690  0275               	skipz
  8909  0691  1D03               	goto	u126_25
  8910  0692  2E95               	movf	(___almod@divisor),w
  8911  0693  0870               	subwf	(___almod@dividend),w
  8912  0694  0274               u126_25:
  8913  0695                     	skipc
  8914  0695  1C03               	goto	u126_21
  8915  0696  2E98               	goto	u126_20
  8916  0697  2E99               u126_21:
  8917  0698                     	goto	i1l1885
  8918  0698  2EA2               u126_20:
  8919  0699                     	line	27
  8920                           	
  8921                           i1l1883:	
  8922  0699                     	movf	(___almod@divisor),w
  8923  0699  0870               	subwf	(___almod@dividend),f
  8924  069A  02F4               	movf	(___almod@divisor+1),w
  8925  069B  0871               	subwfb	(___almod@dividend+1),f
  8926  069C  3BF5               	movf	(___almod@divisor+2),w
  8927  069D  0872               	subwfb	(___almod@dividend+2),f
  8928  069E  3BF6               	movf	(___almod@divisor+3),w
  8929  069F  0873               	subwfb	(___almod@dividend+3),f
  8930  06A0  3BF7               	goto	i1l1885
  8931  06A1  2EA2               	
  8932                           i1l451:	
  8933  06A2                     	line	28
  8934                           	
  8935                           i1l1885:	
  8936  06A2                     	movlw	01h
  8937  06A2  3001               u127_25:
  8938  06A3                     	lsrf	(___almod@divisor+3),f
  8939  06A3  36F3               	rrf	(___almod@divisor+2),f
  8940  06A4  0CF2               	rrf	(___almod@divisor+1),f
  8941  06A5  0CF1               	rrf	(___almod@divisor),f
  8942  06A6  0CF0               	decfsz	wreg,f
  8943  06A7  0B89               	goto	u127_25
  8944  06A8  2EA3               
  8945                           	line	29
  8946                           	
  8947                           i1l1887:	
  8948  06A9                     	movlw	01h
  8949  06A9  3001               	subwf	(___almod@counter),f
  8950  06AA  02F9               	btfss	status,2
  8951  06AB  1D03               	goto	u128_21
  8952  06AC  2EAE               	goto	u128_20
  8953  06AD  2EAF               u128_21:
  8954  06AE                     	goto	i1l1881
  8955  06AE  2E87               u128_20:
  8956  06AF                     	goto	i1l1889
  8957  06AF  2EB1               	
  8958                           i1l452:	
  8959  06B0                     	goto	i1l1889
  8960  06B0  2EB1               	line	30
  8961                           	
  8962                           i1l446:	
  8963  06B1                     	line	31
  8964                           	
  8965                           i1l1889:	
  8966  06B1                     	movf	((___almod@sign)),w
  8967  06B1  087A               	btfsc	status,2
  8968  06B2  1903               	goto	u129_21
  8969  06B3  2EB5               	goto	u129_20
  8970  06B4  2EB6               u129_21:
  8971  06B5                     	goto	i1l1893
  8972  06B5  2EC2               u129_20:
  8973  06B6                     	line	32
  8974                           	
  8975                           i1l1891:	
  8976  06B6                     	comf	(___almod@dividend),f
  8977  06B6  09F4               	comf	(___almod@dividend+1),f
  8978  06B7  09F5               	comf	(___almod@dividend+2),f
  8979  06B8  09F6               	comf	(___almod@dividend+3),f
  8980  06B9  09F7               	incf	(___almod@dividend),f
  8981  06BA  0AF4               	skipnz
  8982  06BB  1903               	incf	(___almod@dividend+1),f
  8983  06BC  0AF5               	skipnz
  8984  06BD  1903               	incf	(___almod@dividend+2),f
  8985  06BE  0AF6               	skipnz
  8986  06BF  1903               	incf	(___almod@dividend+3),f
  8987  06C0  0AF7               	goto	i1l1893
  8988  06C1  2EC2               	
  8989                           i1l453:	
  8990  06C2                     	line	33
  8991                           	
  8992                           i1l1893:	
  8993  06C2                     	movf	(___almod@dividend+3),w
  8994  06C2  0877               	movwf	(?___almod+3)
  8995  06C3  00F3               	movf	(___almod@dividend+2),w
  8996  06C4  0876               	movwf	(?___almod+2)
  8997  06C5  00F2               	movf	(___almod@dividend+1),w
  8998  06C6  0875               	movwf	(?___almod+1)
  8999  06C7  00F1               	movf	(___almod@dividend),w
  9000  06C8  0874               	movwf	(?___almod)
  9001  06C9  00F0               
  9002                           	goto	i1l454
  9003  06CA  2ECB               	
  9004                           i1l1895:	
  9005  06CB                     	line	34
  9006                           	
  9007                           i1l454:	
  9008  06CB                     	return
  9009  06CB  0008               	opt stack 0
  9010                           GLOBAL	__end_of___almod
  9011                           	__end_of___almod:
  9012  06CC                     	signat	___almod,8316
  9013                           	global	___aldiv
  9014                           
  9015 ;; *************** function ___aldiv *****************
  9016 ;; Defined at:
  9017 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  9018 ;; Parameters:    Size  Location     Type
  9019 ;;  divisor         4    0[COMMON] long 
  9020 ;;  dividend        4    4[COMMON] long 
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;  quotient        4    2[BANK0 ] long 
  9023 ;;  sign            1    1[BANK0 ] unsigned char 
  9024 ;;  counter         1    0[BANK0 ] unsigned char 
  9025 ;; Return value:  Size  Location     Type
  9026 ;;                  4    0[COMMON] long 
  9027 ;; Registers used:
  9028 ;;		wreg, status,2, status,0
  9029 ;; Tracked objects:
  9030 ;;		On entry : 0/0
  9031 ;;		On exit  : 0/0
  9032 ;;		Unchanged: 0/0
  9033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9034 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9035 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  9036 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9037 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  9038 ;;Total ram usage:       15 bytes
  9039 ;; Hardware stack levels used:    1
  9040 ;; This function calls:
  9041 ;;		Nothing
  9042 ;; This function is called by:
  9043 ;;		_dtoa
  9044 ;; This function uses a non-reentrant model
  9045 ;;
  9046                           psect	text40,local,class=CODE,delta=2,merge=1,group=1
  9047                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  9048                           	line	5
  9049                           global __ptext40
  9050                           __ptext40:	;psect for function ___aldiv
  9051  05AF                     psect	text40
  9052                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  9053                           	line	5
  9054                           	global	__size_of___aldiv
  9055                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  9056  0099                     	
  9057                           ___aldiv:	
  9058  05AF                     ;incstack = 0
  9059                           	opt	stack 4
  9060                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9061                           	line	13
  9062                           	
  9063                           i1l1825:	
  9064  05AF                     	movlb 0	; select bank0
  9065  05AF  0020               	clrf	(___aldiv@sign)
  9066  05B0  01A1               	line	14
  9067                           	
  9068                           i1l1827:	
  9069  05B1                     	btfss	(___aldiv@divisor+3),7
  9070  05B1  1FF3               	goto	u111_21
  9071  05B2  2DB4               	goto	u111_20
  9072  05B3  2DB5               u111_21:
  9073  05B4                     	goto	i1l431
  9074  05B4  2DC2               u111_20:
  9075  05B5                     	line	15
  9076                           	
  9077                           i1l1829:	
  9078  05B5                     	comf	(___aldiv@divisor),f
  9079  05B5  09F0               	comf	(___aldiv@divisor+1),f
  9080  05B6  09F1               	comf	(___aldiv@divisor+2),f
  9081  05B7  09F2               	comf	(___aldiv@divisor+3),f
  9082  05B8  09F3               	incf	(___aldiv@divisor),f
  9083  05B9  0AF0               	skipnz
  9084  05BA  1903               	incf	(___aldiv@divisor+1),f
  9085  05BB  0AF1               	skipnz
  9086  05BC  1903               	incf	(___aldiv@divisor+2),f
  9087  05BD  0AF2               	skipnz
  9088  05BE  1903               	incf	(___aldiv@divisor+3),f
  9089  05BF  0AF3               	line	16
  9090                           	clrf	(___aldiv@sign)
  9091  05C0  01A1               	incf	(___aldiv@sign),f
  9092  05C1  0AA1               	line	17
  9093                           	
  9094                           i1l431:	
  9095  05C2                     	line	18
  9096                           	btfss	(___aldiv@dividend+3),7
  9097  05C2  1FF7               	goto	u112_21
  9098  05C3  2DC5               	goto	u112_20
  9099  05C4  2DC6               u112_21:
  9100  05C5                     	goto	i1l1835
  9101  05C5  2DD6               u112_20:
  9102  05C6                     	line	19
  9103                           	
  9104                           i1l1831:	
  9105  05C6                     	comf	(___aldiv@dividend),f
  9106  05C6  09F4               	comf	(___aldiv@dividend+1),f
  9107  05C7  09F5               	comf	(___aldiv@dividend+2),f
  9108  05C8  09F6               	comf	(___aldiv@dividend+3),f
  9109  05C9  09F7               	incf	(___aldiv@dividend),f
  9110  05CA  0AF4               	skipnz
  9111  05CB  1903               	incf	(___aldiv@dividend+1),f
  9112  05CC  0AF5               	skipnz
  9113  05CD  1903               	incf	(___aldiv@dividend+2),f
  9114  05CE  0AF6               	skipnz
  9115  05CF  1903               	incf	(___aldiv@dividend+3),f
  9116  05D0  0AF7               	line	20
  9117                           	
  9118                           i1l1833:	
  9119  05D1                     	movlw	low(01h)
  9120  05D1  3001               	movwf	(??___aldiv+0)+0
  9121  05D2  00F8               	movf	(??___aldiv+0)+0,w
  9122  05D3  0878               	xorwf	(___aldiv@sign),f
  9123  05D4  06A1               	goto	i1l1835
  9124  05D5  2DD6               	line	21
  9125                           	
  9126                           i1l432:	
  9127  05D6                     	line	22
  9128                           	
  9129                           i1l1835:	
  9130  05D6                     	movlw	high highword(0)
  9131  05D6  3000               	movwf	(___aldiv@quotient+3)
  9132  05D7  00A5               	movlw	low highword(0)
  9133  05D8  3000               	movwf	(___aldiv@quotient+2)
  9134  05D9  00A4               	movlw	high(0)
  9135  05DA  3000               	movwf	(___aldiv@quotient+1)
  9136  05DB  00A3               	movlw	low(0)
  9137  05DC  3000               	movwf	(___aldiv@quotient)
  9138  05DD  00A2               
  9139                           	line	23
  9140                           	
  9141                           i1l1837:	
  9142  05DE                     	movf	(___aldiv@divisor+3),w
  9143  05DE  0873               	iorwf	(___aldiv@divisor+2),w
  9144  05DF  0472               	iorwf	(___aldiv@divisor+1),w
  9145  05E0  0471               	iorwf	(___aldiv@divisor),w
  9146  05E1  0470               	skipnz
  9147  05E2  1903               	goto	u113_21
  9148  05E3  2DE5               	goto	u113_20
  9149  05E4  2DE6               u113_21:
  9150  05E5                     	goto	i1l1857
  9151  05E5  2E2D               u113_20:
  9152  05E6                     	line	24
  9153                           	
  9154                           i1l1839:	
  9155  05E6                     	clrf	(___aldiv@counter)
  9156  05E6  01A0               	incf	(___aldiv@counter),f
  9157  05E7  0AA0               	line	25
  9158                           	goto	i1l1843
  9159  05E8  2DF5               	
  9160                           i1l435:	
  9161  05E9                     	line	26
  9162                           	
  9163                           i1l1841:	
  9164  05E9                     	movlw	01h
  9165  05E9  3001               u114_25:
  9166  05EA                     	lslf	(___aldiv@divisor),f
  9167  05EA  35F0               	rlf	(___aldiv@divisor+1),f
  9168  05EB  0DF1               	rlf	(___aldiv@divisor+2),f
  9169  05EC  0DF2               	rlf	(___aldiv@divisor+3),f
  9170  05ED  0DF3               	decfsz	wreg,f
  9171  05EE  0B89               	goto	u114_25
  9172  05EF  2DEA               	line	27
  9173                           	movlw	low(01h)
  9174  05F0  3001               	movwf	(??___aldiv+0)+0
  9175  05F1  00F8               	movf	(??___aldiv+0)+0,w
  9176  05F2  0878               	addwf	(___aldiv@counter),f
  9177  05F3  07A0               	goto	i1l1843
  9178  05F4  2DF5               	line	28
  9179                           	
  9180                           i1l434:	
  9181  05F5                     	line	25
  9182                           	
  9183                           i1l1843:	
  9184  05F5                     	btfss	(___aldiv@divisor+3),(31)&7
  9185  05F5  1FF3               	goto	u115_21
  9186  05F6  2DF8               	goto	u115_20
  9187  05F7  2DF9               u115_21:
  9188  05F8                     	goto	i1l1841
  9189  05F8  2DE9               u115_20:
  9190  05F9                     	goto	i1l1845
  9191  05F9  2DFB               	
  9192                           i1l436:	
  9193  05FA                     	goto	i1l1845
  9194  05FA  2DFB               	line	29
  9195                           	
  9196                           i1l437:	
  9197  05FB                     	line	30
  9198                           	
  9199                           i1l1845:	
  9200  05FB                     	movlw	01h
  9201  05FB  3001               u116_25:
  9202  05FC                     	lslf	(___aldiv@quotient),f
  9203  05FC  35A2               	rlf	(___aldiv@quotient+1),f
  9204  05FD  0DA3               	rlf	(___aldiv@quotient+2),f
  9205  05FE  0DA4               	rlf	(___aldiv@quotient+3),f
  9206  05FF  0DA5               	decfsz	wreg,f
  9207  0600  0B89               	goto	u116_25
  9208  0601  2DFC               	line	31
  9209                           	
  9210                           i1l1847:	
  9211  0602                     	movf	(___aldiv@divisor+3),w
  9212  0602  0873               	subwf	(___aldiv@dividend+3),w
  9213  0603  0277               	skipz
  9214  0604  1D03               	goto	u117_25
  9215  0605  2E10               	movf	(___aldiv@divisor+2),w
  9216  0606  0872               	subwf	(___aldiv@dividend+2),w
  9217  0607  0276               	skipz
  9218  0608  1D03               	goto	u117_25
  9219  0609  2E10               	movf	(___aldiv@divisor+1),w
  9220  060A  0871               	subwf	(___aldiv@dividend+1),w
  9221  060B  0275               	skipz
  9222  060C  1D03               	goto	u117_25
  9223  060D  2E10               	movf	(___aldiv@divisor),w
  9224  060E  0870               	subwf	(___aldiv@dividend),w
  9225  060F  0274               u117_25:
  9226  0610                     	skipc
  9227  0610  1C03               	goto	u117_21
  9228  0611  2E13               	goto	u117_20
  9229  0612  2E14               u117_21:
  9230  0613                     	goto	i1l1853
  9231  0613  2E1E               u117_20:
  9232  0614                     	line	32
  9233                           	
  9234                           i1l1849:	
  9235  0614                     	movf	(___aldiv@divisor),w
  9236  0614  0870               	subwf	(___aldiv@dividend),f
  9237  0615  02F4               	movf	(___aldiv@divisor+1),w
  9238  0616  0871               	subwfb	(___aldiv@dividend+1),f
  9239  0617  3BF5               	movf	(___aldiv@divisor+2),w
  9240  0618  0872               	subwfb	(___aldiv@dividend+2),f
  9241  0619  3BF6               	movf	(___aldiv@divisor+3),w
  9242  061A  0873               	subwfb	(___aldiv@dividend+3),f
  9243  061B  3BF7               	line	33
  9244                           	
  9245                           i1l1851:	
  9246  061C                     	bsf	(___aldiv@quotient)+(0/8),(0)&7
  9247  061C  1422               	goto	i1l1853
  9248  061D  2E1E               	line	34
  9249                           	
  9250                           i1l438:	
  9251  061E                     	line	35
  9252                           	
  9253                           i1l1853:	
  9254  061E                     	movlw	01h
  9255  061E  3001               u118_25:
  9256  061F                     	lsrf	(___aldiv@divisor+3),f
  9257  061F  36F3               	rrf	(___aldiv@divisor+2),f
  9258  0620  0CF2               	rrf	(___aldiv@divisor+1),f
  9259  0621  0CF1               	rrf	(___aldiv@divisor),f
  9260  0622  0CF0               	decfsz	wreg,f
  9261  0623  0B89               	goto	u118_25
  9262  0624  2E1F               
  9263                           	line	36
  9264                           	
  9265                           i1l1855:	
  9266  0625                     	movlw	01h
  9267  0625  3001               	subwf	(___aldiv@counter),f
  9268  0626  02A0               	btfss	status,2
  9269  0627  1D03               	goto	u119_21
  9270  0628  2E2A               	goto	u119_20
  9271  0629  2E2B               u119_21:
  9272  062A                     	goto	i1l1845
  9273  062A  2DFB               u119_20:
  9274  062B                     	goto	i1l1857
  9275  062B  2E2D               	
  9276                           i1l439:	
  9277  062C                     	goto	i1l1857
  9278  062C  2E2D               	line	37
  9279                           	
  9280                           i1l433:	
  9281  062D                     	line	38
  9282                           	
  9283                           i1l1857:	
  9284  062D                     	movf	((___aldiv@sign)),w
  9285  062D  0821               	btfsc	status,2
  9286  062E  1903               	goto	u120_21
  9287  062F  2E31               	goto	u120_20
  9288  0630  2E32               u120_21:
  9289  0631                     	goto	i1l1861
  9290  0631  2E3E               u120_20:
  9291  0632                     	line	39
  9292                           	
  9293                           i1l1859:	
  9294  0632                     	comf	(___aldiv@quotient),f
  9295  0632  09A2               	comf	(___aldiv@quotient+1),f
  9296  0633  09A3               	comf	(___aldiv@quotient+2),f
  9297  0634  09A4               	comf	(___aldiv@quotient+3),f
  9298  0635  09A5               	incf	(___aldiv@quotient),f
  9299  0636  0AA2               	skipnz
  9300  0637  1903               	incf	(___aldiv@quotient+1),f
  9301  0638  0AA3               	skipnz
  9302  0639  1903               	incf	(___aldiv@quotient+2),f
  9303  063A  0AA4               	skipnz
  9304  063B  1903               	incf	(___aldiv@quotient+3),f
  9305  063C  0AA5               	goto	i1l1861
  9306  063D  2E3E               	
  9307                           i1l440:	
  9308  063E                     	line	40
  9309                           	
  9310                           i1l1861:	
  9311  063E                     	movf	(___aldiv@quotient+3),w
  9312  063E  0825               	movwf	(?___aldiv+3)
  9313  063F  00F3               	movf	(___aldiv@quotient+2),w
  9314  0640  0824               	movwf	(?___aldiv+2)
  9315  0641  00F2               	movf	(___aldiv@quotient+1),w
  9316  0642  0823               	movwf	(?___aldiv+1)
  9317  0643  00F1               	movf	(___aldiv@quotient),w
  9318  0644  0822               	movwf	(?___aldiv)
  9319  0645  00F0               
  9320                           	goto	i1l441
  9321  0646  2E47               	
  9322                           i1l1863:	
  9323  0647                     	line	41
  9324                           	
  9325                           i1l441:	
  9326  0647                     	return
  9327  0647  0008               	opt stack 0
  9328                           GLOBAL	__end_of___aldiv
  9329                           	__end_of___aldiv:
  9330  0648                     	signat	___aldiv,8316
  9331                           	global	_ToggleBitRB5
  9332                           
  9333 ;; *************** function _ToggleBitRB5 *****************
  9334 ;; Defined at:
  9335 ;;		line 51 in file "161518_temp_main.c"
  9336 ;; Parameters:    Size  Location     Type
  9337 ;;		None
  9338 ;; Auto vars:     Size  Location     Type
  9339 ;;		None
  9340 ;; Return value:  Size  Location     Type
  9341 ;;                  1    wreg      void 
  9342 ;; Registers used:
  9343 ;;		None
  9344 ;; Tracked objects:
  9345 ;;		On entry : 0/0
  9346 ;;		On exit  : 0/0
  9347 ;;		Unchanged: 0/0
  9348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9353 ;;Total ram usage:        0 bytes
  9354 ;; Hardware stack levels used:    1
  9355 ;; This function calls:
  9356 ;;		Nothing
  9357 ;; This function is called by:
  9358 ;;		_myint
  9359 ;; This function uses a non-reentrant model
  9360 ;;
  9361                           psect	text41,local,class=CODE,delta=2,merge=1,group=0
  9362                           	file	"161518_temp_main.c"
  9363                           	line	51
  9364                           global __ptext41
  9365                           __ptext41:	;psect for function _ToggleBitRB5
  9366  0C25                     psect	text41
  9367                           	file	"161518_temp_main.c"
  9368                           	line	51
  9369                           	global	__size_of_ToggleBitRB5
  9370                           	__size_of_ToggleBitRB5	equ	__end_of_ToggleBitRB5-_ToggleBitRB5
  9371  000A                     	
  9372                           _ToggleBitRB5:	
  9373  0C25                     ;incstack = 0
  9374                           	opt	stack 8
  9375                           ; Regs used in _ToggleBitRB5: []
  9376                           	line	53
  9377                           	
  9378                           i1l2173:	
  9379  0C25                     	movlb 0	; select bank0
  9380  0C25  0020               	btfss	(13),5	;volatile
  9381  0C26  1E8D               	goto	u162_21
  9382  0C27  2C29               	goto	u162_20
  9383  0C28  2C2A               u162_21:
  9384  0C29                     	goto	i1l93
  9385  0C29  2C2C               u162_20:
  9386  0C2A                     	line	55
  9387                           	
  9388                           i1l2175:	
  9389  0C2A                     	bcf	(13),5	;volatile
  9390  0C2A  128D               	line	56
  9391                           	goto	i1l95
  9392  0C2B  2C2E               	line	57
  9393                           	
  9394                           i1l93:	
  9395  0C2C                     	line	59
  9396                           	bsf	(13),5	;volatile
  9397  0C2C  168D               	goto	i1l95
  9398  0C2D  2C2E               	line	60
  9399                           	
  9400                           i1l94:	
  9401  0C2E                     	line	61
  9402                           	
  9403                           i1l95:	
  9404  0C2E                     	return
  9405  0C2E  0008               	opt stack 0
  9406                           GLOBAL	__end_of_ToggleBitRB5
  9407                           	__end_of_ToggleBitRB5:
  9408  0C2F                     	signat	_ToggleBitRB5,89
  9409                           global	___latbits
  9410                           ___latbits	equ	3
  9411  0003                     	global	btemp
  9412                           	btemp set 07Eh
  9413  007E                     
  9414                           	DABS	1,126,2	;btemp
  9415                           	global	int$flags
  9416                           	int$flags	set btemp
  9417  007E                     	global	wtemp0
  9418                           	wtemp0 set btemp+0
  9419  007E                     	end


Data Sizes:
    Strings     46
    Constant    0
    Data        4
    BSS         195
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     68      80
    BANK1            80     39      69
    BANK2            80      0      52
    BANK3            80      0      75
    BANK4            80      0      30
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 75
		 -> dbuf(BANK2[32]), STR_12(CODE[7]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[3]), 
		 -> wHexTemp(BANK2[20]), STR_4(CODE[3]), STR_3(CODE[4]), STR_2(CODE[5]), 
		 -> STR_1(CODE[4]), wInterruptText(BANK3[75]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 75
		 -> dbuf(BANK2[32]), STR_12(CODE[7]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[3]), 
		 -> wHexTemp(BANK2[20]), STR_4(CODE[3]), STR_3(CODE[4]), STR_2(CODE[5]), 
		 -> STR_1(CODE[4]), wInterruptText(BANK3[75]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_12(CODE[7]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[3]), wHexTemp(BANK2[20]), 
		 -> STR_4(CODE[3]), STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_12(CODE[7]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[3]), wHexTemp(BANK2[20]), 
		 -> STR_4(CODE[3]), STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_12(CODE[7]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[3]), wHexTemp(BANK2[20]), 
		 -> STR_4(CODE[3]), STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 

    strcat@dest	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> wHexTemp(BANK2[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> wHexTemp(BANK2[20]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[5]), 

    S973_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> wHexTemp(BANK2[20]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> wHexTemp(BANK2[20]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[5]), 

    memset@dest	PTR void  size(2) Largest target is 75
		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK4[30]), wI2CTxBuffer(BANK1[20]), 

    memset@s	PTR unsigned char  size(2) Largest target is 75
		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK4[30]), wI2CTxBuffer(BANK1[20]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
		 -> main@wConv(BANK1[4]), wInterruptText(BANK3[75]), 

    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    sp__memset	PTR void  size(2) Largest target is 75
		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK4[30]), wI2CTxBuffer(BANK1[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    Add_Trace@iText	PTR unsigned char  size(2) Largest target is 20
		 -> STR_12(CODE[7]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[3]), wHexTemp(BANK2[20]), 
		 -> STR_4(CODE[3]), STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 

    Add_Trace@oText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myint in COMMON

    _myint->_sprintf
    i1_strcat->i1_strcpy
    i1_strcpy->i1_strlen
    _dtoa->_abs
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___almod

Critical Paths under _main in BANK0

    None.

Critical Paths under _myint in BANK0

    _myint->_sprintf
    i1_Add_Trace->i1_strcat
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs

Critical Paths under _main in BANK1

    _main->_Add_Trace
    _setNotBlinkingCursor->_writeInsChk
    _setCursorOff->_writeInsChk
    _powerOnLcd->_writeInsChk
    _moveCursorToHome->_writeInsChk
    _initLCD->_writeInsChk
    _clearDisplay->_writeInsChk
    _writeInsChk->_waitLCDBusy
    _writeInsChk->_writeInsNoChk
    _writeInsNoChk->_setData
    _PrintLog->_lcdWriteText
    _lcdWriteText->_writeTxtChk
    _writeTxtChk->_setCursorPosition
    _setCursorPosition->_waitLCDBusy
    _GetTemp->_memset
    _Add_Trace->_strcat
    _strcat->_strcpy
    _strcpy->_strlen

Critical Paths under _myint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myint in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myint in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myint in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myint in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myint in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myint in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   13043
                                             29 BANK1     10    10      0
                          _Add_Trace
                            _GetTemp
                           _PrintLog
                       _SetToGetTemp
                           _WakeTemp
                       _clearDisplay
                            _initLCD
                       _lcdWriteText
                             _memset
                   _moveCursorToHome
                         _powerOnLcd
                       _setCursorOff
               _setNotBlinkingCursor
 ---------------------------------------------------------------------------------
 (1) _setNotBlinkingCursor                                 1     1      0     178
                                              6 BANK1      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _setCursorOff                                         1     1      0     178
                                              6 BANK1      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _powerOnLcd                                           1     1      0     178
                                              6 BANK1      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _moveCursorToHome                                     0     0      0     178
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     444
                                              6 BANK1      1     1      0
                       _clearDisplay
                            _setData
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _clearDisplay                                         0     0      0     178
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _writeInsChk                                          1     1      0     178
                                              5 BANK1      1     1      0
                        _waitLCDBusy
                      _writeInsNoChk
 ---------------------------------------------------------------------------------
 (3) _writeInsNoChk                                        2     2      0     132
                                              3 BANK1      2     2      0
                 _SetToSendDataToLCD
                            _setData
 ---------------------------------------------------------------------------------
 (1) _WakeTemp                                             1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SetToGetTemp                                         1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PrintLog                                             3     3      0    3605
                                             18 BANK1      3     3      0
                       _lcdWriteText
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _lcdWriteText                                         5     3      2    1029
                                             13 BANK1      5     3      2
                        _writeTxtChk
 ---------------------------------------------------------------------------------
 (2) _writeTxtChk                                          3     3      0     819
                                             10 BANK1      3     3      0
                 _SetToSendDataToLCD
                  _setCursorPosition
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (3) _setCursorPosition                                    5     4      1     663
                                              5 BANK1      5     4      1
                 _SetToSendDataToLCD
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (3) _waitLCDBusy                                          5     5      0      24
                                              0 BANK1      5     5      0
               _SetToReadDataFromLCD
 ---------------------------------------------------------------------------------
 (4) _SetToReadDataFromLCD                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setData                                              3     3      0      88
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _SetToSendDataToLCD                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetTemp                                              1     1      0    1897
                                             14 BANK1      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                              14     8      6    1897
                                              0 BANK1     14     8      6
 ---------------------------------------------------------------------------------
 (1) _Add_Trace                                           10     7      3    3136
                                             19 BANK1     10     7      3
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcat                                               5     3      2     830
                                             14 BANK1      5     3      2
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     444
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     6      2     205
                                              6 BANK1      8     6      2
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _myint                                                2     2      0    7369
                                             66 BANK0      2     2      0
                       _ToggleBitRB5
                            _sprintf
                        i1_Add_Trace
 ---------------------------------------------------------------------------------
 (8) i1_Add_Trace                                         10     7      3    1186
                                              5 BANK0     10     7      3
                           i1_strcat
                           i1_strlen
 ---------------------------------------------------------------------------------
 (9) i1_strcat                                             5     3      2     414
                                              0 BANK0      5     3      2
                           i1_strcpy
                           i1_strlen
 ---------------------------------------------------------------------------------
 (10) i1_strcpy                                            8     6      2     122
                                              6 COMMON     8     6      2
                           i1_strlen (ARG)
 ---------------------------------------------------------------------------------
 (8) _sprintf                                             14    10      4    6183
                                             13 COMMON     1     1      0
                                             53 BANK0     13     9      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (9) _vfprintf                                             8     5      3    5875
                                             45 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (10) _vfpfcnvrt                                          32    30      2    5564
                                             33 BANK0     12    10      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (11) _dtoa                                               21    17      4    4214
                                             12 BANK0     21    17      4
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (12) _pad                                                 9     6      3    2608
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                           i1_strlen
 ---------------------------------------------------------------------------------
 (9) i1_strlen                                             6     4      2     194
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (13) _fputs                                               8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (11) _fputc                                               8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (12) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (12) _abs                                                 4     2      2     142
                                             11 COMMON     2     0      2
                                              0 BANK0      2     2      0
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (12) ___almod                                            11     3      8     448
                                              0 COMMON    11     3      8
 ---------------------------------------------------------------------------------
 (12) ___aldiv                                            15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (8) _ToggleBitRB5                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Add_Trace
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _GetTemp
     _memset
   _PrintLog
     _lcdWriteText
       _writeTxtChk
         _SetToSendDataToLCD
         _setCursorPosition
           _SetToSendDataToLCD
           _setData
           _waitLCDBusy
             _SetToReadDataFromLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
     _memset
     _strlen
   _SetToGetTemp
   _WakeTemp
   _clearDisplay
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _initLCD
     _clearDisplay
       _writeInsChk
         _waitLCDBusy
           _SetToReadDataFromLCD
         _writeInsNoChk
           _SetToSendDataToLCD
           _setData
     _setData
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _lcdWriteText
     _writeTxtChk
       _SetToSendDataToLCD
       _setCursorPosition
         _SetToSendDataToLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
       _setData
       _waitLCDBusy
         _SetToReadDataFromLCD
   _memset
   _moveCursorToHome
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _powerOnLcd
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _setCursorOff
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _setNotBlinkingCursor
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData

 _myint (ROOT)
   _ToggleBitRB5
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aldiv
           ___almod
           _abs
             ___almod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             i1_strlen
         _fputc
           _putch
   i1_Add_Trace
     i1_strcat
       i1_strcpy
         i1_strlen (ARG)
       i1_strlen
     i1_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     44      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     27      45       7       86.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      34       9       65.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4B      11       93.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      1E      13       37.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     140      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     140      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Jan 10 00:11:58 2019

                  __CFG_CP$OFF 0000                    _SSPSTATbits 0214                             l98 0CE1  
                           l99 0CE1             _SetToSendDataToLCD 0C0B                            l102 0F0D  
                          l110 07FB                            l103 0F0D                            l111 07FB  
                          l106 0DBF                            l210 0F5A                            l114 0E69  
                          l122 02D7                            l107 0DBF                            l115 0E69  
                          l123 0240                            l220 072C                            l124 02BE  
                          l213 06F5                            l125 02DC                            l214 06D5  
                          l126 02DC                            l215 070C                            l223 0C39  
                          l232 0C10                            l216 06DC                            l217 06E3  
                          l218 06EA                            l226 0CA5                            l250 0C5A  
                          l235 0E91                            l219 06F3                            l236 0E76  
                          l244 0C44                            l229 0C16                            l237 0E99  
                          l253 0C4F                            l238 0E99                            l192 0FAA  
                          l280 0C24                            l290 078D                            l283 075D  
                          l195 0D88                            l284 0731                            l196 0D75  
                          l285 0773                            l197 0D97                            l277 0C0A  
                          l286 073A                            l198 0D97                            l287 0745  
                          l288 0750                            l289 075B                            l810 0555  
                          l811 057E                            l812 05A7                            l813 0598  
                          l814 05AE                            l807 04EB                            l808 05AE  
                          l809 050E                            l851 0C8C                            l860 0D34  
                          l861 0D2F                            l854 0D59                            l862 0D3E  
                          l855 0D58                            l863 0D4C                            l856 0D71  
                          l857 0D71                            _abs 0CA6                            _pad 078E  
                 __CFG_BORV$LO 0000                            wreg 0009            ?_SetToSendDataToLCD 0070  
                 __CFG_LVP$OFF 0000                 ??_lcdWriteText 00AF                           l2001 0D3E  
                         l2003 0D4C                           l2011 06D3                           ?_abs 007B  
                         l2101 0C76                           l2021 06F0                           l2013 06D5  
                         l2005 0C31                           l2103 0C8C                           l2031 0712  
                         l2023 06F4                           l2015 06DC                           l2007 06CE  
                         l2041 0727                           l2033 0714                           l2017 06E3  
                         l2025 06F5                           l2009 06D1                           l2035 0715  
                         l2019 06EA                           l2027 070C                           l2211 07EB  
                         l2037 0720                           l2029 070F                           l2213 07ED  
                         l2039 0725                           l2215 07F2                           l2231 0F63  
                         l2217 07F6                           l2241 0F87                           l2233 0F6B  
                         l2219 07F8                           l2155 0C06                           l2243 0F8B  
                         l2235 0F6F                           l2251 0C3A                           l2093 0D4F  
                         l2181 0CCC                           l2245 0F93                           l2237 0F7C  
                         l2229 0F5B                           l2261 0C21                           l2253 0C40  
                         l2095 0D59                           l2191 0ED6                           l2183 0CD5  
                         l2247 0F98                           l2239 0F7F                           l2255 0C45  
                         l2263 0C50                           l2193 0F04                           l2601 04EB  
                         l2185 0CD6                           l2177 0CC3                           l2249 0FA7  
                         l2257 0C4B                           l2265 0C56                           l2611 054A  
                         l2603 04F1                           l2187 0CDA                           l2179 0CC9  
                         l2259 0C1D                           l2621 057E                           l2613 0554  
                         l2605 0503                           l1901 073A                           l2189 0CDE  
                         l2701 01CF                           l2631 059E                           l2623 058B  
                         l2615 0555                           l2607 050D                           l1751 0C11  
                         l1903 0745                           l1911 0773                           l2711 01D9  
                         l2703 01D4                           l2633 05A2                           l2625 058F  
                         l2617 0573                           l2609 050E                           l1921 0788  
                         l1913 0776                           l1905 0750                           l2641 0D82  
                         l2721 01DE                           l2713 01DA                           l2705 01D6  
                         l2635 05A7                           l2627 0593                           l2619 057D  
                         l2651 0DAD                           l1771 0F10                           l1915 0779  
                         l1907 075C                           l2643 0D88                           l1931 0C94  
                         l2731 01E4                           l2723 01DF                           l2715 01DB  
                         l2707 01D7                           l2629 0598                           l2653 0DAF  
                         l2645 0D98                           l1781 0C0B                           l1773 0F12  
                         l1917 077B                           l1909 075D                           l2637 0D72  
                         l2661 0E41                           l1933 0C95                           l2741 0205  
                         l2733 01E7                           l2725 01E0                           l2717 01DC  
                         l2709 01D8                           l2655 0DB4                           l2647 0D9E  
                         l1775 0F54                           l1791 0E87                           l1783 0E6A  
                         l1919 077C                           l2639 0D75                           l2663 0E4D  
                         l1935 0CA0                           l1927 0C8F                           l2751 0226  
                         l2743 0208                           l2735 01EA                           l2727 01E2  
                         l2719 01DD                           l2671 01A6                           l2657 0DB9  
                         l2649 0D9F                           l1777 0F56                           l1793 0E89  
                         l1785 0E6D                           l2665 0E52                           l1929 0C92  
                         l2761 0246                           l2753 0232                           l2745 0214  
                         l2737 01F6                           l2729 01E3                           l2681 01AF  
                         l2673 01A9                           l2595 04DE                           l2659 0DBC  
                         l1779 0F58                           l1795 0E8D                           l1787 0E70  
                         l2667 0E59                           l2771 0280                           l2763 0253  
                         l2755 0235                           l2747 0217                           l2739 01F9  
                         l2691 01C7                           l2683 01B1                           l2675 01AB  
                         l2597 04E3                           l1797 0E8F                           l1789 0E7A  
                         l2781 02A9                           l2773 0289                           l2765 0260  
                         l2757 023D                           l2749 0223                           l2693 01C9  
                         l2685 01C1                           l2677 01AC                           l2669 0197  
                         ?_pad 0024                           l2599 04EA                           l2847 06FE  
                         l2791 02C6                           l2783 02AD                           l2775 028D  
                         l2767 0263                           l2759 0240                           l2695 01CA  
                         l2687 01C3                           l2679 01AE                           l2849 0765  
                         l1897 072F                           l2793 02D3                           l2785 02B4  
                         l2777 029A                           l2769 027D                           l2697 01CC  
                         l2689 01C5                           l1995 0D29                           l1899 0731  
                         l2787 02BB                           l2779 029D                           l2795 02D7  
                         l2699 01CE                           l1997 0D2F                           l2789 02BE  
                         l1999 0D34                           STR_1 101E                           STR_2 100C  
                         STR_3 101A                           STR_4 1026                           STR_5 1007  
                         STR_6 1029                           STR_7 1011                           STR_8 1024  
                         STR_9 102C                           u2000 0E52                           u2001 0E51  
                         u1050 0E98                           u2010 02BB                           u1035 0F16  
                         u1051 0E97                           u2011 02BA                           u2020 02DB  
                         u1045 0F2B                           u2021 02DA                           u1305 0780  
                         u1315 0C99                           u2107 0284                           u2117 02A3  
                         u2037 01F0                           u2127 02CC                           u2047 01FF  
                         u2137 0F67                           u2057 020E                           u1530 0D70  
                         u1531 0D6F                           u2147 0F73                           u2067 021D  
                         u2157 0F7D                           u2077 022C                           u1470 0D3D  
                         u1630 0CC9                           u1471 0D3C                           u1631 0CC8  
                         u2167 0F84                           u2087 024C                           u1640 0F04  
                         u1641 0F03                           u2177 0F8C                           u2097 0267  
                         u1660 07F2                           u1645 0F00                           u1485 0719  
                         u1661 07F1                           u1930 04E9                           u1931 04E8  
                         u1940 050C                           u1941 050B                           u1950 0553  
                         u1951 0552                           u1960 057C                           u1961 057B  
                         u1970 05AD                           u1971 05AC                           u1980 0D96  
                         u1981 0D95                           u1990 0D9E                           u1991 0D9D  
                         i1l93 0C2C                           i1l94 0C2E                           i1l95 0C2E  
                 __CFG_WRT$OFF 0000                           abs@a 007B                           _dbuf 0120  
                         _main 0197                           _dtoa 02DE                           _prec 0068  
                         _nout 0064                           _test 00C7                           pad@i 0027  
                         pad@p 0025                           fsr0h 0005                           fsr1h 0007  
                         indf0 0000                           fsr0l 0004                           indf1 0001  
                         fsr1l 0006                           pad@w 0029                           btemp 007E  
                __CFG_BOREN$ON 0000                           start 0158                  __CFG_IESO$OFF 0000  
         ??_SetToSendDataToLCD 00A0                __end_of_GetTemp 0DC0           __end_of_clearDisplay 0C0B  
                        ??_abs 0020                          ??_pad 007C                   main@wCounter 00C5  
              __end_of___aldiv 0648                __end_of___almod 06CC                          ?_main 0070  
                        ?_dtoa 002C                    _writeInsChk 0C2F                          STR_10 1022  
                        STR_11 1016                          STR_12 1000                  __CFG_WDTE$OFF 0000  
                        i1l102 0ED3                          i1l103 0ED3                          i1l140 0079  
                        i1l133 013F                          i1l141 013C                          i1l134 013E  
                        i1l150 0101                          i1l142 00B5                          i1l151 0104  
                        i1l143 00A6                          i1l135 002A                          i1l320 07CC  
                        i1l136 013D                          i1l152 0108                          i1l144 00B4  
                        i1l321 07DA                          i1l313 079D                          i1l145 013B  
                        i1l153 013A                          i1l137 007B                          i1l322 07EA  
                        i1l330 0325                          i1l154 012B                          i1l146 010A  
                        i1l138 0066                          i1l315 07A7                          i1l331 0338  
                        i1l155 0127                          i1l147 00E1                          i1l139 0077  
                        i1l340 03CB                          i1l156 012A                          i1l148 0109  
                        i1l317 07A9                          i1l341 03F5                          i1l333 0334  
                        i1l325 0305                          i1l157 0139                          i1l149 0105  
                        i1l318 07BE                          i1l334 0392                          i1l326 030D  
                        i1l158 0156                          i1l431 05C2                          i1l319 07AC  
                        i1l343 03D7                          i1l335 0343                          i1l351 04B6  
                        i1l159 0156                          i1l440 063E                          i1l432 05D6  
                        i1l328 0320                          i1l352 047F                          i1l360 0E1D  
                        i1l441 0647                          i1l433 062D                          i1l345 03E6  
                        i1l337 03CA                          i1l361 0E39                          i1l434 05F5  
                        i1l450 0687                          i1l354 044F                          i1l362 0E3E  
                        i1l435 05E9                          i1l451 06A2                          i1l347 03EB  
                        i1l339 03C9                          i1l355 04DD                          i1l436 05FA  
                        i1l452 06B0                          i1l444 065A                          i1l348 0408  
                        i1l356 04AA                          i1l437 05FB                          i1l453 06C2  
                        i1l445 066A                          i1l438 061E                          i1l454 06CB  
                        i1l446 06B1                          i1l439 062C                          i1l447 0681  
                        i1l359 0E2F                          i1l448 0675                          i1l449 0686  
                        i1l801 0CC1                          i1l803 0CC2                          i1l804 0CC2  
                        i1l821 0FB6                          i1l822 0FFE                          i1l823 0FFD  
                        i1l831 0E02                          i1l832 0DEE                          i1l825 0FE3  
                        i1l833 0E13                          i1l841 0DE8                          i1l826 0FFF  
                        i1l834 0E13                          i1l819 0FBB                          i1l851 0C73  
                        i1l844 0003                          i1l860 0CEC                          i1l861 0CE7  
                        i1l862 0CF6                          i1l854 0D10                          i1l863 0D04  
                        i1l855 0D0F                          i1l856 0D28                          i1l857 0D28  
                 vfpfcnvrt@fmt 0041                          _PORTA 000C                          _PORTB 000D  
                        _TRISA 008C                          _TRISB 008D                          _TRISC 008E  
                        u97_20 0FB0                          u97_21 0FAF                          u98_20 0FB5  
                        u98_21 0FB4                          u99_20 0FC5                          u99_21 0FC4  
                  _writeTxtChk 06CC                  __CFG_PWRTE$ON 0000                 __CFG_FCMEN$OFF 0000  
              __end_of_initLCD 0FAB                          _flags 006A         ??_SetToReadDataFromLCD 00A0  
                        _fputc 0FAB                          _fputs 0DE9                          pad@fp 002B  
                        _myint 0004                __end_of_setData 0F5B                          _width 0066  
                        _putch 0003                          dtoa@d 002C                          dtoa@i 003F  
                        dtoa@n 003B                          dtoa@p 0035                          dtoa@s 0039  
                        dtoa@w 0037             __size_of_Add_Trace 003A                          status 0003  
                        wtemp0 007E                __end_of_sprintf 0DE9         ??_setNotBlinkingCursor 00A6  
             __end_ofi1_strcat 0C74               __end_ofi1_strcpy 0D29               __end_ofi1_strlen 0D05  
               __CFG_MCLRE$OFF 0000                __initialization 015A                   __end_of_main 02DE  
                 __end_of_dtoa 0409                 __CFG_LPBOR$OFF 0000                   ?i1_Add_Trace 0025  
                       ??_main 00BD                         ??_dtoa 0030               _wReceptionBuffer 0220  
             __end_of_WakeTemp 07FC               __end_of_PrintLog 0E6A                   ?_waitLCDBusy 0070  
                       ?_fputc 0070                         ?_fputs 0078                         ?_myint 0070  
                       _ANSELA 018C                         ?_putch 0070                         _ANSELB 018D  
                       u100_20 0FE2                         u100_21 0FE1                         u100_25 0FDE  
                       u101_20 0E12                         u101_21 0E11                         u110_20 0CB4  
                       u102_20 0CF5                         u110_21 0CB3                         u102_21 0CF4  
                       u110_25 0CB0                         u111_20 05B5                         u111_21 05B4  
                       i1l2051 041C                         i1l2061 044F                         i1l2053 0424  
                       i1l2071 0490                         i1l2063 0457                         i1l2055 0428  
                       u120_20 0632                         u112_20 05C6                         u120_21 0631  
                       u112_21 05C5                         i1l2081 04B2                         i1l2073 0498  
                       i1l2065 046C                         i1l2057 042C                         i1l2049 040B  
                       i1l2161 0E1D                         i1l2091 04DD                         i1l2083 04B5  
                       i1l2075 04A3                         i1l2067 047E                         i1l2059 043D  
                       i1l2163 0E2F                         i1l2171 0C73                         i1l2411 0006  
                       i1l2173 0C25                         i1l2077 04A9                         i1l2069 047F  
                       i1l2085 04B6                         i1l2165 0E39                         i1l2157 0E16  
                       i1l2421 0024                         i1l2413 000B                         i1l2175 0C2A  
                       i1l2087 04CF                         i1l2079 04AA                         i1l2167 0E3E  
                       i1l2159 0E1A                         i1l2271 0DCC                         i1l2431 0052  
                       i1l2423 0026                         i1l2415 000C                         u113_20 05E6  
                       u121_20 064D                         u113_21 05E5                         u121_21 064C  
                       i1l1801 0794                         i1l2089 04D8                         i1l2273 0DCE  
                       i1l2097 0D06                         i1l2169 0C5D                         i1l2281 0ECA  
                       i1l2441 006D                         i1l2433 005D                         i1l2425 0027  
                       i1l2417 0012                         i1l1811 07B8                         i1l1803 079D  
                       i1l2275 0DDF                         i1l2267 0DC2                         i1l2099 0D10  
                       i1l2451 0098                         i1l2443 0074                         i1l2435 0062  
                       i1l2427 002E                         i1l2419 0017                         i1l1821 0CA6  
                       i1l1741 0FBB                         i1l1813 07BE                         i1l1805 07A2  
                       i1l2277 0DE8                         i1l2269 0DCA                         i1l2461 00CC  
                       i1l2453 00A0                         i1l2445 0080                         i1l2437 0066  
                       i1l2429 0033                         i1l1831 05C6                         i1l1823 0CB4  
                       i1l1743 0FC5                         i1l1735 0FAB                         i1l1815 07D1  
                       i1l1807 07A7                         i1l2279 0E9C                         i1l2471 00F1  
                       i1l2463 00D4                         i1l2455 00A6                         i1l2447 0086  
                       i1l2439 006B                         u122_20 065E                         u106_20 0794  
                       i1l1841 05E9                         i1l1833 05D1                         i1l1825 05AF  
                       u122_21 065D                         i1l1745 0FE3                         i1l1737 0FB0  
                       i1l1753 0DEB                         i1l1761 0CE2                         i1l1817 07DA  
                       i1l1809 07AC                         u106_21 0793                         i1l2481 0124  
                       i1l2473 00F3                         i1l2465 00DB                         i1l2457 00BA  
                       i1l2449 0092                         i1l1851 061C                         i1l1843 05F5  
                       i1l1835 05D6                         i1l1827 05B1                         i1l1747 0FF4  
                       i1l1739 0FB6                         i1l1755 0DEE                         i1l1763 0CE7  
                       i1l1819 07EA                         i1l2491 0149                         i1l2475 010F  
                       i1l2483 012B                         i1l2467 00E6                         i1l2459 00C0  
                       i1l1861 063E                         i1l1853 061E                         i1l1845 05FB  
                       u114_25 05EA                         i1l1837 05DE                         i1l1829 05B5  
                       i1l1749 0FFF                         i1l1757 0DFC                         i1l1765 0CEC  
                       i1l1941 02FA                         i1l2477 011C                         i1l2469 00ED  
                       i1l2485 013F                         i1l1863 0647                         i1l1855 0625  
                       i1l1847 0602                         i1l1839 05E6                         i1l1871 065E  
                       i1l1759 0E02                         i1l1767 0CF6                         i1l1951 032F  
                       i1l1943 0309                         i1l2487 0144                         i1l2479 011E  
                       u115_20 05F9                         u123_20 0672                         u107_20 07A2  
                       i1l1849 0614                         u115_21 05F8                         i1l1857 062D  
                       i1l1881 0687                         u123_21 0671                         i1l1873 066A  
                       i1l1865 0648                         i1l1769 0D04                         u107_21 07A1  
                       i1l1961 036D                         i1l1953 0334                         i1l1945 031A  
                       i1l1937 02E0                         i1l2489 0147                         i1l1859 0632  
                       i1l1891 06B6                         i1l1883 0699                         i1l1875 0672  
                       i1l1867 0649                         i1l1971 03A8                         i1l1963 0371  
                       i1l1955 033C                         i1l1947 0320                         i1l1939 02F4  
                       i1l1893 06C2                         i1l1885 06A2                         i1l1877 0675  
                       i1l1869 064D                         i1l1981 03D7                         i1l1973 03B5  
                       i1l1965 0375                         i1l1957 0343                         i1l1949 0329  
                       i1l1895 06CB                         i1l1887 06A9                         i1l1879 0681  
                       i1l1799 0790                         i1l1983 03DB                         i1l1991 03F5  
                       i1l1975 03C3                         i1l1959 0348                         i1l1967 0392  
                       u108_20 07CC                         u140_20 03A8                         u132_20 02ED  
                       i1l1889 06B1                         u108_21 07CB                         i1l1993 0408  
                       i1l1985 03E1                         u140_21 03A7                         i1l1969 039F  
                       i1l1977 03CB                         u132_21 02EB                         i1l1987 03E6  
                       i1l1979 03D2                         u116_25 05FC                         u124_25 0676  
                       u108_25 07C8                         i1l1989 03EB                         u117_20 0614  
                       u125_20 0685                         u109_20 07D1                         u141_20 03B5  
                       u133_20 02EE                         u117_21 0613                         u125_21 0684  
                       u109_21 07D0                         u141_21 03B4                         u117_25 0610  
                       u141_25 03B1                         u126_20 0699                         u142_20 03C3  
                       u134_20 02FA                         u150_20 043D                         u126_21 0698  
                       u142_21 03C2                         u134_21 02F9                         u150_21 043C  
                       u118_25 061F                         u126_25 0695                         u142_25 03BF  
                       u119_20 062B                         u143_20 03C8                         u135_20 0309  
                       u151_20 044E                         u119_21 062A                         u143_21 03C7  
                       u135_21 0308                         u151_21 044D                         u127_25 06A3  
                setData@iValue 00A2                         u128_20 06AF                         u144_20 03D2  
                       u136_20 031A                         u152_20 0490                         u128_21 06AE  
                       u144_21 03D1                         u136_21 0319                         u152_21 048F  
                       u136_25 0316                         u129_20 06B6                         u145_20 03D6  
                       u137_20 032F                         u161_20 0E38                         u129_21 06B5  
                       u145_21 03D5                         u137_21 032E                         u161_21 0E37  
                       u162_20 0C2A                         u146_20 03E1                         u138_20 0333  
                       u154_20 0D27                         u162_21 0C29                         u146_21 03E0  
                       u138_21 0332                         u154_21 0D26                         u218_27 00EE  
                       u139_20 039F                         u171_20 000B                         u139_21 039E  
                       u171_21 000A                         u139_25 039B                         u180_20 0098  
                       u172_20 0012                         u180_21 0097                         u172_21 0011  
                       u149_20 041C                         u181_20 00BA                         u173_20 0017  
                       u149_21 041B                         u181_21 00B9                         u173_21 0016  
                       u182_20 00C0                         u174_20 002E                         u182_21 00BF  
                       u174_21 002D                         u183_20 00D4                         u175_20 0033  
                       u183_21 00D3                         u175_21 0032                         u168_20 0ECA  
                       u184_20 00E6                         u176_20 0062                         u168_21 0EC9  
                       u184_21 00E5                         u176_21 0061                         u168_25 0EC6  
                       u185_20 00ED                         u177_20 0074                         u185_21 00EC  
                       u177_21 0073              _setCursorPosition 072D                         u186_20 010F  
                       u178_20 0080                         u186_21 010E                         u178_21 007F  
                       u187_20 0124                         u179_20 0086                         u187_21 0123  
                       u179_21 0085                         u188_20 0144                         u188_21 0143  
                    ??_GetTemp 00AE                         _SSPADD 0212                         _SSPBUF 0211  
           ?_setCursorPosition 00A5                   vfprintf@cfmt 0053                      ??___aldiv 0078  
                    ??___almod 0078            ??_setCursorPosition 00A6           __end_of_lcdWriteText 0D98  
                       _memset 04DE              __end_of_Add_Trace 0F0E                         pad@buf 0024  
                       _strcat 0C74                         dtoa@fp 0034                         _strcpy 0D4D  
                       _strlen 0D29                      ??_initLCD 00A6                         fputc@c 0070  
                       fputs@c 0020                         fputs@i 0021                         fputs@s 0023  
                    ??_setData 00A0       __end_of_moveCursorToHome 0C25                         putch@c 0070  
             __end_of_vfprintf 0E3F                  ?_SetToGetTemp 0070                      ??_sprintf 007D  
    __end_of_setCursorPosition 078E         __size_of_writeInsNoChk 0019        __end_of__initialization 0193  
        __size_of_clearDisplay 0005     setCursorPosition@wLCDIndex 00A9                 __pcstackCOMMON 0070  
                 __pidataBANK1 07FC                  __end_of_fputc 1000                  __end_of_fputs 0E14  
                __end_of_myint 0158                  __end_of_putch 0004           writeInsNoChk@iOpCode 00A4  
   setCursorPosition@iPosition 00A5                 _wInterruptText 01A0                    i1strcat@src 0020  
                    ?i1_strcat 0020                      ?i1_strcpy 0076                      ?i1_strlen 0070  
               ??_SetToGetTemp 00A0                   _clearDisplay 0C06                        ??_fputc 0073  
                      ??_fputs 0079                    i1strcpy@src 0076                        ??_myint 0062  
                      ??_putch 0070                     __pbssBANK0 0064                     __pbssBANK1 00C7  
                   __pbssBANK2 0120                     __pbssBANK3 01A0                     __pbssBANK4 0220  
                ?_setCursorOff 0070                __CFG_VCAPEN$OFF 0000                      ?_WakeTemp 0070  
                   __pmaintext 0197                 Add_Trace@iText 00B4                 Add_Trace@oText 00BC  
                    ?_PrintLog 0070                     __pintentry 0004                  _writeInsNoChk 0C8D  
                      ?_memset 00A0                   ?_writeInsChk 0070                        ?_strcat 00AE  
                      ?_strcpy 00A6                        ?_strlen 00A0           __size_ofi1_Add_Trace 003A  
                 ?_writeTxtChk 0070             __size_of_vfpfcnvrt 00D5                     ??i1_strcat 0022  
                   ??i1_strcpy 0078                     ??i1_strlen 0072     __size_of_setCursorPosition 0061  
         __size_of_waitLCDBusy 0030                 ??_setCursorOff 00A6                        _GetTemp 0D98  
        __size_of_lcdWriteText 0026                     ??_WakeTemp 00A0    __size_of_SetToSendDataToLCD 0006  
                   ??_PrintLog 00B2                        ___aldiv 05AF                        ___almod 0648  
               ?_writeInsNoChk 0070                      ?_vfprintf 004D                __CFG_STVREN$OFF 0000  
              __size_of_memset 00D1                  ?_ToggleBitRB5 0070                        __ptext1 0C50  
                      __ptext2 0C45                        __ptext3 0C3A                        __ptext4 0C1D  
                      __ptext5 0F5B                        __ptext6 0C06                        __ptext7 0C2F  
                      __ptext8 0C8D                        __ptext9 07EB                __size_of_strcat 0019  
              __size_of_strcpy 0025                __size_of_strlen 0024                        _initLCD 0F5B  
                 __size_of_abs 001D                   __size_of_pad 005D                        _setData 0F0E  
             ___aldiv@dividend 0074                        _sprintf 0DC0                        clrloop0 0C18  
         end_of_initialization 0193                   _lcdWriteText 0D72  __size_of_SetToReadDataFromLCD 0006  
                      fputc@fp 0072                        memset@c 00A2                        memset@k 00AA  
                      memset@n 00A4                        memset@s 00AC                        fputs@fp 0078  
             __CFG_CLKOUTEN$ON 0000  __size_of_setNotBlinkingCursor 000B              __end_of_vfpfcnvrt 04DE  
             ___aldiv@quotient 0022           __end_of_SetToGetTemp 0CE2                     ??_vfprintf 0050  
                      strcpy@d 00AC                        strlen@a 00A4                 ??_ToggleBitRB5 0070  
                      strcpy@s 00AA                        strlen@s 00A0                      _PORTAbits 000C  
                    _PORTBbits 000D                     _powerOnLcd 0C3A               __CFG_FOSC$INTOSC 0000  
                    _Add_Trace 0ED4                      _TRISAbits 008C              ?_moveCursorToHome 0070  
           ??_moveCursorToHome 00A6            waitLCDBusy@busyFlag 00A3                ??_writeInsNoChk 00A3  
                  vfpfcnvrt@ap 0042                    vfpfcnvrt@fp 004C                    vfpfcnvrt@ll 0048  
             _mWritingPosition 00CA           __end_of_setCursorOff 0C50                 __end_of_memset 05AF  
               __end_of_strcat 0C8D                 __end_of_strcpy 0D72                 __end_of_strlen 0D4D  
         __size_of_writeInsChk 000B            start_initialization 015A                     ?_Add_Trace 00B3  
                  __end_of_abs 0CC3                    __end_of_pad 07EB           __size_of_writeTxtChk 0061  
                    i1strcpy@d 007D                      i1strlen@a 0074                      i1strcpy@s 007A  
                    i1strlen@s 0070              __size_ofi1_strcat 0019              __size_ofi1_strcpy 0024  
            __size_ofi1_strlen 0023                   i1strcat@dest 0024                    vfprintf@fmt 004D  
            __size_of_WakeTemp 0011                    __pdataBANK1 00E1                  _wI2CTxSendPos 006D  
            __size_of_PrintLog 002B                       ??_memset 00A6                   i1strcpy@dest 007C  
                   memset@dest 00A0                       ??_strcat 00B0                       ??_strcpy 00A8  
                     ??_strlen 00A2                    ?_powerOnLcd 0070               i1Add_Trace@iText 0026  
                    ___latbits 0003               i1Add_Trace@oText 002E                  __pcstackBANK0 0020  
                __pcstackBANK1 00A0           __end_of_ToggleBitRB5 0C2F                       ?_GetTemp 0070  
        __size_of_SetToGetTemp 001F        i1Add_Trace@iSizeOfoText 0025             writeInsChk@iOpCode 00A5  
                     ?___aldiv 0070                       ?___almod 0070                  ??i1_Add_Trace 0028  
             ___almod@dividend 0074                      _wCounter2 006C              __size_of_vfprintf 002B  
                     ?_initLCD 0070                       ?_setData 0070                    ??_Add_Trace 00B6  
                ??_waitLCDBusy 00A0                  PrintLog@iText 00B4                       ?_sprintf 0055  
               __size_of_fputc 0055                 __size_of_fputs 002B                   _SetToGetTemp 0CC3  
               __size_of_myint 0154                 __size_of_putch 0001                ___aldiv@divisor 0070  
             _mDisplayOnOffReg 00CC                ___aldiv@counter 0020     __end_of_SetToSendDataToLCD 0C11  
                    clear_ram0 0C17                       _PIE1bits 0091                       _PIE2bits 0092  
          __size_of_powerOnLcd 000B                       _PIR1bits 0011                       _PIR2bits 0012  
        __size_of_setCursorOff 000B                      main@F2190 00E1       _wReceptionBufferPosition 006F  
 __end_of_SetToReadDataFromLCD 0C17                      _vfpfcnvrt 0409    lcdWriteText@wCharReadingPos 00B1  
             _wI2CRxBufferSize 006E                      main@wConv 00C1   __end_of_setNotBlinkingCursor 0C5B  
                    main@wTemp 00BF            __end_ofi1_Add_Trace 0ED4                       i1_strcat 0C5B  
                     i1_strcpy 0D05                       i1_strlen 0CE2              lcdWriteText@iText 00AD  
          __end_of_waitLCDBusy 0E9A                   _setCursorOff 0C45               __size_of_GetTemp 0028  
                     _WakeTemp 07EB      __size_of_moveCursorToHome 0008                     vfprintf@ap 004F  
                   vfprintf@fp 0052          Add_Trace@iSizeOfoText 00B3                   _wI2CTxBuffer 00CD  
                     _PrintLog 0E3F               __size_of___aldiv 0099               __size_of___almod 0084  
                   ?_vfpfcnvrt 0041               _wI2CTxBufferSize 00C9                     _ANSELCbits 018E  
                   sprintf@fmt 0055                     sprintf@ret 0059               __size_of_initLCD 0050  
                   strcat@dest 00B2      PrintLog@wInterruptTextLen 00B3                       _dtoa$672 0032  
             __size_of_setData 004D                  ?_clearDisplay 0070          __size_of_ToggleBitRB5 000A  
                     __ptext10 0CC3                       __ptext11 0E3F                       __ptext20 04DE  
                     __ptext12 0D72                       __ptext21 0ED4                       __ptext13 06CC  
                     __ptext30 0E14                       __ptext22 0C74                       __ptext14 072D  
                     __ptext31 0409                       __ptext23 0D29                       __ptext15 0E6A  
                     __ptext40 05AF                       __ptext32 02DE                       __ptext24 0D4D  
                     __ptext16 0C11                       __ptext41 0C25                       __ptext33 078E  
                     __ptext17 0F0E                       __ptext34 0CE2                       __ptext26 0E9A  
                     __ptext18 0C0B                       __ptext35 0DE9                       __ptext27 0C5B  
                     __ptext19 0D98                       __ptext36 0FAB                       __ptext28 0D05  
                     __ptext37 0003                       __ptext29 0DC0                       __ptext38 0CA6  
                     __ptext39 0648                       _wHexTemp 0140                ___almod@divisor 0070  
             __size_of_sprintf 0029                ___almod@counter 0079                     strcpy@dest 00AD  
                __size_of_main 0147                  __size_of_dtoa 012B             writeTxtChk@iOpCode 00AC  
                     int$flags 007E          __end_of_writeInsNoChk 0CA6                       _vfprintf 0E14  
                  i1_Add_Trace 0E9A                  ??_writeInsChk 00A5                   _ToggleBitRB5 0C25  
                 ??_powerOnLcd 00A6                  ??_writeTxtChk 00AA                     _INTCONbits 000B  
                  _waitLCDBusy 0E6A                 ??_clearDisplay 00A6                 __pstringtext10 1029  
               __pstringtext11 102C                 __pstringtext12 0000         setCursorPosition@iLine 00A8  
                     intlevel1 0000                      sprintf@ap 005B           _SetToReadDataFromLCD 0C11  
                    strcat@src 00AE                      strcpy@src 00A6                     _OSCCONbits 0099  
         _setNotBlinkingCursor 0C50             __end_of_powerOnLcd 0C45                    ??_vfpfcnvrt 0043  
                __pstringtext1 1000                  __pstringtext2 1007                  __pstringtext3 100C  
                __pstringtext4 1011                  __pstringtext5 1016                  __pstringtext6 101A  
                __pstringtext7 101E                  __pstringtext8 1022                  __pstringtext9 1026  
                     sprintf@f 005D                       sprintf@s 005C                   ___aldiv@sign 0021  
          __end_of_writeInsChk 0C3A                    _SSPCON1bits 0215                    _SSPCON2bits 0216  
                  _SSPCON3bits 0217                  ?_lcdWriteText 00AD            __end_of_writeTxtChk 072D  
        ?_SetToReadDataFromLCD 0070                   ___almod@sign 007A          ?_setNotBlinkingCursor 0070  
             _moveCursorToHome 0C1D         _mCursorDisplayShiftReg 00CB  
