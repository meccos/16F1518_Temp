

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jan 23 00:16:54 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F1518 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   120                           PORTB equ 0Dh ;# 
   121  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   122                           PORTC equ 0Eh ;# 
   123  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   124                           PORTE equ 010h ;# 
   125  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   126                           PIR1 equ 011h ;# 
   127  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   128                           PIR2 equ 012h ;# 
   129  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   130                           TMR0 equ 015h ;# 
   131  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   132                           TMR1 equ 016h ;# 
   133  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   134                           TMR1L equ 016h ;# 
   135  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   136                           TMR1H equ 017h ;# 
   137  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   138                           T1CON equ 018h ;# 
   139  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   140                           T1GCON equ 019h ;# 
   141  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   142                           TMR2 equ 01Ah ;# 
   143  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   144                           PR2 equ 01Bh ;# 
   145  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   146                           T2CON equ 01Ch ;# 
   147  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   148                           TRISA equ 08Ch ;# 
   149  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   150                           TRISB equ 08Dh ;# 
   151  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   152                           TRISC equ 08Eh ;# 
   153  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   154                           TRISE equ 090h ;# 
   155  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   156                           PIE1 equ 091h ;# 
   157  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   158                           PIE2 equ 092h ;# 
   159  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   160                           OPTION_REG equ 095h ;# 
   161  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   162                           PCON equ 096h ;# 
   163  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   164                           WDTCON equ 097h ;# 
   165  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   166                           OSCCON equ 099h ;# 
   167  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   168                           OSCSTAT equ 09Ah ;# 
   169  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   170                           ADRES equ 09Bh ;# 
   171  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   172                           ADRESL equ 09Bh ;# 
   173  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   174                           ADRESH equ 09Ch ;# 
   175  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   176                           ADCON0 equ 09Dh ;# 
   177  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   178                           ADCON1 equ 09Eh ;# 
   179  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   180                           LATA equ 010Ch ;# 
   181  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   182                           LATB equ 010Dh ;# 
   183  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   184                           LATC equ 010Eh ;# 
   185  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   186                           BORCON equ 0116h ;# 
   187  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   188                           FVRCON equ 0117h ;# 
   189  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   190                           APFCON equ 011Dh ;# 
   191  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   192                           ANSELA equ 018Ch ;# 
   193  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   194                           ANSELB equ 018Dh ;# 
   195  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   196                           ANSELC equ 018Eh ;# 
   197  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   198                           PMADR equ 0191h ;# 
   199  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   200                           PMADRL equ 0191h ;# 
   201  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   202                           PMADRH equ 0192h ;# 
   203  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   204                           PMDAT equ 0193h ;# 
   205  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   206                           PMDATL equ 0193h ;# 
   207  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   208                           PMDATH equ 0194h ;# 
   209  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   210                           PMCON1 equ 0195h ;# 
   211  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   212                           PMCON2 equ 0196h ;# 
   213  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   214                           VREGCON equ 0197h ;# 
   215  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   216                           RCREG equ 0199h ;# 
   217  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   218                           TXREG equ 019Ah ;# 
   219  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   220                           SP1BRG equ 019Bh ;# 
   221  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   222                           SP1BRGL equ 019Bh ;# 
   223  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   224                           SPBRG equ 019Bh ;# 
   225  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   226                           SPBRGL equ 019Bh ;# 
   227  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   228                           SP1BRGH equ 019Ch ;# 
   229  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   230                           SPBRGH equ 019Ch ;# 
   231  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   232                           RCSTA equ 019Dh ;# 
   233  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   234                           TXSTA equ 019Eh ;# 
   235  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   236                           BAUDCON equ 019Fh ;# 
   237  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   238                           WPUB equ 020Dh ;# 
   239  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   240                           WPUE equ 0210h ;# 
   241  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   242                           SSPBUF equ 0211h ;# 
   243  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   244                           SSP1BUF equ 0211h ;# 
   245  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   246                           SSPADD equ 0212h ;# 
   247  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   248                           SSP1ADD equ 0212h ;# 
   249  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   250                           SSPMSK equ 0213h ;# 
   251  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   252                           SSP1MSK equ 0213h ;# 
   253  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   254                           SSPSTAT equ 0214h ;# 
   255  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   256                           SSP1STAT equ 0214h ;# 
   257  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   258                           SSPCON1 equ 0215h ;# 
   259  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   260                           SSPCON equ 0215h ;# 
   261  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   262                           SSP1CON1 equ 0215h ;# 
   263  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   264                           SSPCON2 equ 0216h ;# 
   265  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   266                           SSP1CON2 equ 0216h ;# 
   267  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   268                           SSPCON3 equ 0217h ;# 
   269  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   270                           SSP1CON3 equ 0217h ;# 
   271  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   272                           CCPR1 equ 0291h ;# 
   273  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   274                           CCPR1L equ 0291h ;# 
   275  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   276                           CCPR1H equ 0292h ;# 
   277  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   278                           CCP1CON equ 0293h ;# 
   279  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   280                           CCPR2 equ 0298h ;# 
   281  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   282                           CCPR2L equ 0298h ;# 
   283  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   284                           CCPR2H equ 0299h ;# 
   285  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   286                           CCP2CON equ 029Ah ;# 
   287  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   288                           IOCBP equ 0394h ;# 
   289  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   290                           IOCBN equ 0395h ;# 
   291  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   292                           IOCBF equ 0396h ;# 
   293  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   294                           STATUS_SHAD equ 0FE4h ;# 
   295  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   296                           WREG_SHAD equ 0FE5h ;# 
   297  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   298                           BSR_SHAD equ 0FE6h ;# 
   299  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   300                           PCLATH_SHAD equ 0FE7h ;# 
   301  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   302                           FSR0L_SHAD equ 0FE8h ;# 
   303  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   304                           FSR0H_SHAD equ 0FE9h ;# 
   305  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   306                           FSR1L_SHAD equ 0FEAh ;# 
   307  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   308                           FSR1H_SHAD equ 0FEBh ;# 
   309  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   310                           STKPTR equ 0FEDh ;# 
   311  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   312                           TOSL equ 0FEEh ;# 
   313  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   314                           TOSH equ 0FEFh ;# 
   315  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   316                           INDF0 equ 00h ;# 
   317  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   318                           INDF1 equ 01h ;# 
   319  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   320                           PCL equ 02h ;# 
   321  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   322                           STATUS equ 03h ;# 
   323  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   324                           FSR0L equ 04h ;# 
   325  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   326                           FSR0H equ 05h ;# 
   327  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   328                           FSR1L equ 06h ;# 
   329  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   330                           FSR1H equ 07h ;# 
   331  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   332                           BSR equ 08h ;# 
   333  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   334                           WREG equ 09h ;# 
   335  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   336                           PCLATH equ 0Ah ;# 
   337  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   338                           INTCON equ 0Bh ;# 
   339  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   340                           PORTA equ 0Ch ;# 
   341  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   342                           PORTB equ 0Dh ;# 
   343  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   344                           PORTC equ 0Eh ;# 
   345  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   346                           PORTE equ 010h ;# 
   347  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   348                           PIR1 equ 011h ;# 
   349  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   350                           PIR2 equ 012h ;# 
   351  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   352                           TMR0 equ 015h ;# 
   353  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   354                           TMR1 equ 016h ;# 
   355  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   356                           TMR1L equ 016h ;# 
   357  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   358                           TMR1H equ 017h ;# 
   359  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   360                           T1CON equ 018h ;# 
   361  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   362                           T1GCON equ 019h ;# 
   363  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   364                           TMR2 equ 01Ah ;# 
   365  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   366                           PR2 equ 01Bh ;# 
   367  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   368                           T2CON equ 01Ch ;# 
   369  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   370                           TRISA equ 08Ch ;# 
   371  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   372                           TRISB equ 08Dh ;# 
   373  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   374                           TRISC equ 08Eh ;# 
   375  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   376                           TRISE equ 090h ;# 
   377  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   378                           PIE1 equ 091h ;# 
   379  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   380                           PIE2 equ 092h ;# 
   381  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   382                           OPTION_REG equ 095h ;# 
   383  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   384                           PCON equ 096h ;# 
   385  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   386                           WDTCON equ 097h ;# 
   387  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   388                           OSCCON equ 099h ;# 
   389  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   390                           OSCSTAT equ 09Ah ;# 
   391  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   392                           ADRES equ 09Bh ;# 
   393  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   394                           ADRESL equ 09Bh ;# 
   395  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   396                           ADRESH equ 09Ch ;# 
   397  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   398                           ADCON0 equ 09Dh ;# 
   399  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   400                           ADCON1 equ 09Eh ;# 
   401  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   402                           LATA equ 010Ch ;# 
   403  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   404                           LATB equ 010Dh ;# 
   405  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   406                           LATC equ 010Eh ;# 
   407  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   408                           BORCON equ 0116h ;# 
   409  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   410                           FVRCON equ 0117h ;# 
   411  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   412                           APFCON equ 011Dh ;# 
   413  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   414                           ANSELA equ 018Ch ;# 
   415  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   416                           ANSELB equ 018Dh ;# 
   417  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   418                           ANSELC equ 018Eh ;# 
   419  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   420                           PMADR equ 0191h ;# 
   421  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   422                           PMADRL equ 0191h ;# 
   423  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   424                           PMADRH equ 0192h ;# 
   425  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   426                           PMDAT equ 0193h ;# 
   427  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   428                           PMDATL equ 0193h ;# 
   429  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   430                           PMDATH equ 0194h ;# 
   431  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   432                           PMCON1 equ 0195h ;# 
   433  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   434                           PMCON2 equ 0196h ;# 
   435  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   436                           VREGCON equ 0197h ;# 
   437  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   438                           RCREG equ 0199h ;# 
   439  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   440                           TXREG equ 019Ah ;# 
   441  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   442                           SP1BRG equ 019Bh ;# 
   443  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   444                           SP1BRGL equ 019Bh ;# 
   445  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   446                           SPBRG equ 019Bh ;# 
   447  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   448                           SPBRGL equ 019Bh ;# 
   449  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   450                           SP1BRGH equ 019Ch ;# 
   451  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   452                           SPBRGH equ 019Ch ;# 
   453  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   454                           RCSTA equ 019Dh ;# 
   455  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   456                           TXSTA equ 019Eh ;# 
   457  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   458                           BAUDCON equ 019Fh ;# 
   459  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   460                           WPUB equ 020Dh ;# 
   461  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   462                           WPUE equ 0210h ;# 
   463  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   464                           SSPBUF equ 0211h ;# 
   465  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   466                           SSP1BUF equ 0211h ;# 
   467  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   468                           SSPADD equ 0212h ;# 
   469  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   470                           SSP1ADD equ 0212h ;# 
   471  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   472                           SSPMSK equ 0213h ;# 
   473  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   474                           SSP1MSK equ 0213h ;# 
   475  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   476                           SSPSTAT equ 0214h ;# 
   477  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   478                           SSP1STAT equ 0214h ;# 
   479  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   480                           SSPCON1 equ 0215h ;# 
   481  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   482                           SSPCON equ 0215h ;# 
   483  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   484                           SSP1CON1 equ 0215h ;# 
   485  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   486                           SSPCON2 equ 0216h ;# 
   487  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   488                           SSP1CON2 equ 0216h ;# 
   489  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   490                           SSPCON3 equ 0217h ;# 
   491  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   492                           SSP1CON3 equ 0217h ;# 
   493  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   494                           CCPR1 equ 0291h ;# 
   495  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   496                           CCPR1L equ 0291h ;# 
   497  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   498                           CCPR1H equ 0292h ;# 
   499  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   500                           CCP1CON equ 0293h ;# 
   501  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   502                           CCPR2 equ 0298h ;# 
   503  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   504                           CCPR2L equ 0298h ;# 
   505  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   506                           CCPR2H equ 0299h ;# 
   507  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   508                           CCP2CON equ 029Ah ;# 
   509  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   510                           IOCBP equ 0394h ;# 
   511  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   512                           IOCBN equ 0395h ;# 
   513  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   514                           IOCBF equ 0396h ;# 
   515  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   516                           STATUS_SHAD equ 0FE4h ;# 
   517  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   518                           WREG_SHAD equ 0FE5h ;# 
   519  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   520                           BSR_SHAD equ 0FE6h ;# 
   521  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   522                           PCLATH_SHAD equ 0FE7h ;# 
   523  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   524                           FSR0L_SHAD equ 0FE8h ;# 
   525  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   526                           FSR0H_SHAD equ 0FE9h ;# 
   527  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   528                           FSR1L_SHAD equ 0FEAh ;# 
   529  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   530                           FSR1H_SHAD equ 0FEBh ;# 
   531  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   532                           STKPTR equ 0FEDh ;# 
   533  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   534                           TOSL equ 0FEEh ;# 
   535  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   536                           TOSH equ 0FEFh ;# 
   537  0FEF                     	FNCALL	_main,_Add_Trace
   538                           	FNCALL	_main,_Debounce
   539                           	FNCALL	_main,_GetTemp
   540                           	FNCALL	_main,_PrintLog
   541                           	FNCALL	_main,_SetToGetTemp
   542                           	FNCALL	_main,_ToggleBitRB5
   543                           	FNCALL	_main,_clearDisplay
   544                           	FNCALL	_main,_initLCD
   545                           	FNCALL	_main,_lcdWriteText
   546                           	FNCALL	_main,_memset
   547                           	FNCALL	_main,_moveCursorToHome
   548                           	FNCALL	_main,_powerOnLcd
   549                           	FNCALL	_main,_printEM1812
   550                           	FNCALL	_main,_setCursorOff
   551                           	FNCALL	_main,_setCursorPosition
   552                           	FNCALL	_main,_setNotBlinkingCursor
   553                           	FNCALL	_setNotBlinkingCursor,_writeInsChk
   554                           	FNCALL	_setCursorOff,_writeInsChk
   555                           	FNCALL	_printEM1812,___awdiv
   556                           	FNCALL	_printEM1812,___awmod
   557                           	FNCALL	_powerOnLcd,_writeInsChk
   558                           	FNCALL	_moveCursorToHome,_writeInsChk
   559                           	FNCALL	_initLCD,_clearDisplay
   560                           	FNCALL	_initLCD,_setData
   561                           	FNCALL	_initLCD,_writeInsChk
   562                           	FNCALL	_clearDisplay,_writeInsChk
   563                           	FNCALL	_writeInsChk,_waitLCDBusy
   564                           	FNCALL	_writeInsChk,_writeInsNoChk
   565                           	FNCALL	_writeInsNoChk,_SetToSendDataToLCD
   566                           	FNCALL	_writeInsNoChk,_setData
   567                           	FNCALL	_PrintLog,_lcdWriteText
   568                           	FNCALL	_PrintLog,_memset
   569                           	FNCALL	_PrintLog,_strlen
   570                           	FNCALL	_lcdWriteText,_writeTxtChk
   571                           	FNCALL	_writeTxtChk,_SetToSendDataToLCD
   572                           	FNCALL	_writeTxtChk,_setCursorPosition
   573                           	FNCALL	_writeTxtChk,_setData
   574                           	FNCALL	_writeTxtChk,_waitLCDBusy
   575                           	FNCALL	_setCursorPosition,_SetToSendDataToLCD
   576                           	FNCALL	_setCursorPosition,_setData
   577                           	FNCALL	_setCursorPosition,_waitLCDBusy
   578                           	FNCALL	_waitLCDBusy,_SetToReadDataFromLCD
   579                           	FNCALL	_GetTemp,_memset
   580                           	FNCALL	_Add_Trace,_strcat
   581                           	FNCALL	_Add_Trace,_strlen
   582                           	FNCALL	_strcat,_strcpy
   583                           	FNCALL	_strcat,_strlen
   584                           	FNROOT	_main
   585                           	FNCALL	_myint,i1_Add_Trace
   586                           	FNCALL	i1_Add_Trace,i1_strcat
   587                           	FNCALL	i1_Add_Trace,i1_strlen
   588                           	FNCALL	i1_strcat,i1_strcpy
   589                           	FNCALL	i1_strcat,i1_strlen
   590                           	FNCALL	intlevel1,_myint
   591                           	global	intlevel1
   592                           	FNROOT	intlevel1
   593                           	global	main@F2250
   594                           psect	idataBANK1,class=CODE,space=0,delta=2,noexec
   595                           global __pidataBANK1
   596                           __pidataBANK1:
   597  0C9E                     	file	"161518_temp_main.c"
   598                           	line	323
   599                           
   600                           ;initializer for main@F2250
   601                           	retlw	02Bh
   602  0C9E  342B               	retlw	low(0)
   603  0C9F  3400               	retlw	078h
   604  0CA0  3478               	retlw	low(0)
   605  0CA1  3400               	global	_wTimer1IntCounter
   606                           	global	_wTempUpdate
   607                           	global	_wTrial
   608                           	global	_wI2CTxSendPos
   609                           	global	_wI2CRxBufferSize
   610                           	global	_wI2CTxBufferSize
   611                           	global	_wReceptionCounter
   612                           	global	_wReceptionBufferPosition
   613                           	global	_mWritingPosition
   614                           	global	_mCursorDisplayShiftReg
   615                           	global	_mDisplayOnOffReg
   616                           	global	_wTemperature
   617                           	global	_wHumidity
   618                           	global	_wTempState
   619                           	global	_wTimer0Counter
   620                           	global	_wI2CCommandState
   621                           	global	_wI2CTxBuffer
   622                           	global	_wReceptionBuffer
   623                           	global	_wInterruptText
   624                           	global	_PORTAbits
   625                           _PORTAbits	set	0xC
   626  000C                     	global	_TMR1L
   627                           _TMR1L	set	0x16
   628  0016                     	global	_TMR1H
   629                           _TMR1H	set	0x17
   630  0017                     	global	_PIR2bits
   631                           _PIR2bits	set	0x12
   632  0012                     	global	_PIR1bits
   633                           _PIR1bits	set	0x11
   634  0011                     	global	_TMR0
   635                           _TMR0	set	0x15
   636  0015                     	global	_PORTB
   637                           _PORTB	set	0xD
   638  000D                     	global	_T1CONbits
   639                           _T1CONbits	set	0x18
   640  0018                     	global	_PORTA
   641                           _PORTA	set	0xC
   642  000C                     	global	_INTCONbits
   643                           _INTCONbits	set	0xB
   644  000B                     	global	_PORTBbits
   645                           _PORTBbits	set	0xD
   646  000D                     	global	_TRISAbits
   647                           _TRISAbits	set	0x8C
   648  008C                     	global	_PIE2bits
   649                           _PIE2bits	set	0x92
   650  0092                     	global	_TRISC
   651                           _TRISC	set	0x8E
   652  008E                     	global	_TRISA
   653                           _TRISA	set	0x8C
   654  008C                     	global	_TRISB
   655                           _TRISB	set	0x8D
   656  008D                     	global	_OPTION_REGbits
   657                           _OPTION_REGbits	set	0x95
   658  0095                     	global	_OSCCONbits
   659                           _OSCCONbits	set	0x99
   660  0099                     	global	_PIE1bits
   661                           _PIE1bits	set	0x91
   662  0091                     	global	_ANSELCbits
   663                           _ANSELCbits	set	0x18E
   664  018E                     	global	_ANSELA
   665                           _ANSELA	set	0x18C
   666  018C                     	global	_ANSELB
   667                           _ANSELB	set	0x18D
   668  018D                     	global	_SSPBUF
   669                           _SSPBUF	set	0x211
   670  0211                     	global	_SSPSTATbits
   671                           _SSPSTATbits	set	0x214
   672  0214                     	global	_SSPADD
   673                           _SSPADD	set	0x212
   674  0212                     	global	_SSPCON1bits
   675                           _SSPCON1bits	set	0x215
   676  0215                     	global	_WPUB
   677                           _WPUB	set	0x20D
   678  020D                     	global	_SSPCON2bits
   679                           _SSPCON2bits	set	0x216
   680  0216                     	global	_SSPCON3bits
   681                           _SSPCON3bits	set	0x217
   682  0217                     psect	stringtext1,class=STRCODE,delta=2,noexec
   683                           global __pstringtext1
   684                           __pstringtext1:
   685  1000                     	
   686                           STR_6:	
   687  1000                     	retlw	87	;'W'
   688  1000  3457               	retlw	84	;'T'
   689  1001  3454               	retlw	70	;'F'
   690  1002  3446               	retlw	32	;' '
   691  1003  3420               	retlw	32	;' '
   692  1004  3420               	retlw	32	;' '
   693  1005  3420               	retlw	32	;' '
   694  1006  3420               	retlw	32	;' '
   695  1007  3420               	retlw	32	;' '
   696  1008  3420               	retlw	32	;' '
   697  1009  3420               	retlw	32	;' '
   698  100A  3420               	retlw	32	;' '
   699  100B  3420               	retlw	32	;' '
   700  100C  3420               	retlw	32	;' '
   701  100D  3420               	retlw	32	;' '
   702  100E  3420               	retlw	0
   703  100F  3400               psect	stringtext2,class=STRCODE,delta=2,noexec
   704                           global __pstringtext2
   705                           __pstringtext2:
   706  1010                     	
   707                           STR_3:	
   708  1010                     	retlw	72	;'H'
   709  1010  3448               	retlw	111	;'o'
   710  1011  346F               	retlw	109	;'m'
   711  1012  346D               	retlw	101	;'e'
   712  1013  3465               	retlw	32	;' '
   713  1014  3420               	retlw	32	;' '
   714  1015  3420               	retlw	32	;' '
   715  1016  3420               	retlw	32	;' '
   716  1017  3420               	retlw	32	;' '
   717  1018  3420               	retlw	32	;' '
   718  1019  3420               	retlw	32	;' '
   719  101A  3420               	retlw	32	;' '
   720  101B  3420               	retlw	32	;' '
   721  101C  3420               	retlw	32	;' '
   722  101D  3420               	retlw	32	;' '
   723  101E  3420               	retlw	0
   724  101F  3400               psect	stringtext3,class=STRCODE,delta=2,noexec
   725                           global __pstringtext3
   726                           __pstringtext3:
   727  1020                     	
   728                           STR_5:	
   729  1020                     	retlw	83	;'S'
   730  1020  3453               	retlw	101	;'e'
   731  1021  3465               	retlw	116	;'t'
   732  1022  3474               	retlw	32	;' '
   733  1023  3420               	retlw	77	;'M'
   734  1024  344D               	retlw	111	;'o'
   735  1025  346F               	retlw	100	;'d'
   736  1026  3464               	retlw	101	;'e'
   737  1027  3465               	retlw	58	;':'
   738  1028  343A               	retlw	32	;' '
   739  1029  3420               	retlw	32	;' '
   740  102A  3420               	retlw	32	;' '
   741  102B  3420               	retlw	32	;' '
   742  102C  3420               	retlw	32	;' '
   743  102D  3420               	retlw	32	;' '
   744  102E  3420               	retlw	0
   745  102F  3400               psect	stringtext4,class=STRCODE,delta=2,noexec
   746                           global __pstringtext4
   747                           __pstringtext4:
   748  1030                     	
   749                           STR_4:	
   750  1030                     	retlw	83	;'S'
   751  1030  3453               	retlw	101	;'e'
   752  1031  3465               	retlw	116	;'t'
   753  1032  3474               	retlw	32	;' '
   754  1033  3420               	retlw	84	;'T'
   755  1034  3454               	retlw	101	;'e'
   756  1035  3465               	retlw	109	;'m'
   757  1036  346D               	retlw	112	;'p'
   758  1037  3470               	retlw	58	;':'
   759  1038  343A               	retlw	32	;' '
   760  1039  3420               	retlw	32	;' '
   761  103A  3420               	retlw	32	;' '
   762  103B  3420               	retlw	32	;' '
   763  103C  3420               	retlw	32	;' '
   764  103D  3420               	retlw	32	;' '
   765  103E  3420               	retlw	0
   766  103F  3400               psect	stringtext5,class=STRCODE,delta=2,noexec
   767                           global __pstringtext5
   768                           __pstringtext5:
   769  1040                     	
   770                           STR_1:	
   771  1040                     	retlw	72	;'H'
   772  1040  3448               	retlw	117	;'u'
   773  1041  3475               	retlw	109	;'m'
   774  1042  346D               	retlw	105	;'i'
   775  1043  3469               	retlw	100	;'d'
   776  1044  3464               	retlw	105	;'i'
   777  1045  3469               	retlw	116	;'t'
   778  1046  3474               	retlw	121	;'y'
   779  1047  3479               	retlw	32	;' '
   780  1048  3420               	retlw	58	;':'
   781  1049  343A               	retlw	32	;' '
   782  104A  3420               	retlw	0
   783  104B  3400               psect	stringtext6,class=STRCODE,delta=2,noexec
   784                           global __pstringtext6
   785                           __pstringtext6:
   786  104C                     	
   787                           STR_2:	
   788  104C                     	retlw	10
   789  104C  340A               	retlw	84	;'T'
   790  104D  3454               	retlw	101	;'e'
   791  104E  3465               	retlw	109	;'m'
   792  104F  346D               	retlw	112	;'p'
   793  1050  3470               	retlw	32	;' '
   794  1051  3420               	retlw	58	;':'
   795  1052  343A               	retlw	32	;' '
   796  1053  3420               	retlw	0
   797  1054  3400               psect	stringtext7,class=STRCODE,delta=2,noexec
   798                           global __pstringtext7
   799                           __pstringtext7:
   800  1055                     	
   801                           STR_8:	
   802  1055                     	retlw	44	;','
   803  1055  342C               	retlw	66	;'B'
   804  1056  3442               	retlw	67	;'C'
   805  1057  3443               	retlw	76	;'L'
   806  1058  344C               	retlw	73	;'I'
   807  1059  3449               	retlw	70	;'F'
   808  105A  3446               	retlw	0
   809  105B  3400               psect	stringtext8,class=STRCODE,delta=2,noexec
   810                           global __pstringtext8
   811                           __pstringtext8:
   812  105C                     	
   813                           STR_7:	
   814  105C                     	retlw	44	;','
   815  105C  342C               	retlw	78	;'N'
   816  105D  344E               	retlw	56	;'8'
   817  105E  3438               	retlw	0
   818  105F  3400               psect	stringtext9,class=STRCODE,delta=2,noexec
   819                           global __pstringtext9
   820                           __pstringtext9:
   821  0000                     ; #config settings
   822                           global __CFG_FOSC$INTOSC
   823                           __CFG_FOSC$INTOSC equ 0x0
   824  0000                     global __CFG_WDTE$OFF
   825                           __CFG_WDTE$OFF equ 0x0
   826  0000                     global __CFG_PWRTE$ON
   827                           __CFG_PWRTE$ON equ 0x0
   828  0000                     global __CFG_MCLRE$OFF
   829                           __CFG_MCLRE$OFF equ 0x0
   830  0000                     global __CFG_CP$OFF
   831                           __CFG_CP$OFF equ 0x0
   832  0000                     global __CFG_BOREN$ON
   833                           __CFG_BOREN$ON equ 0x0
   834  0000                     global __CFG_CLKOUTEN$ON
   835                           __CFG_CLKOUTEN$ON equ 0x0
   836  0000                     global __CFG_IESO$OFF
   837                           __CFG_IESO$OFF equ 0x0
   838  0000                     global __CFG_FCMEN$OFF
   839                           __CFG_FCMEN$OFF equ 0x0
   840  0000                     global __CFG_WRT$OFF
   841                           __CFG_WRT$OFF equ 0x0
   842  0000                     global __CFG_VCAPEN$OFF
   843                           __CFG_VCAPEN$OFF equ 0x0
   844  0000                     global __CFG_STVREN$OFF
   845                           __CFG_STVREN$OFF equ 0x0
   846  0000                     global __CFG_BORV$LO
   847                           __CFG_BORV$LO equ 0x0
   848  0000                     global __CFG_LPBOR$OFF
   849                           __CFG_LPBOR$OFF equ 0x0
   850  0000                     global __CFG_LVP$OFF
   851                           __CFG_LVP$OFF equ 0x0
   852  0000                     	file	"C:\Users\dell\AppData\Local\Temp\sbc0."
   853                           	line	#
   854                           psect cinit,class=CODE,delta=2
   855                           global start_initialization
   856                           start_initialization:
   857  0188                     
   858                           global __initialization
   859                           __initialization:
   860  0188                     psect	bssBANK0,class=BANK0,space=1,noexec
   861                           global __pbssBANK0
   862                           __pbssBANK0:
   863  004D                     _test:
   864  004D                            ds      2
   865  004D                     
   866                           _wCounter2:
   867  004F                            ds      1
   868  004F                     
   869                           _wTimer1IntCounter:
   870  0050                            ds      1
   871  0050                     
   872                           _wTempUpdate:
   873  0051                            ds      1
   874  0051                     
   875                           _wTrial:
   876  0052                            ds      1
   877  0052                     
   878                           _wI2CTxSendPos:
   879  0053                            ds      1
   880  0053                     
   881                           _wI2CRxBufferSize:
   882  0054                            ds      1
   883  0054                     
   884                           _wI2CTxBufferSize:
   885  0055                            ds      1
   886  0055                     
   887                           _wReceptionCounterPrev:
   888  0056                            ds      1
   889  0056                     
   890                           _wReceptionCounter:
   891  0057                            ds      1
   892  0057                     
   893                           _wReceptionBufferPosition:
   894  0058                            ds      1
   895  0058                     
   896                           _mWritingPosition:
   897  0059                            ds      1
   898  0059                     
   899                           _mCursorDisplayShiftReg:
   900  005A                            ds      1
   901  005A                     
   902                           _mDisplayOnOffReg:
   903  005B                            ds      1
   904  005B                     
   905                           psect	bssBANK1,class=BANK1,space=1,noexec
   906                           global __pbssBANK1
   907                           __pbssBANK1:
   908  00A0                     _wTemperature:
   909  00A0                            ds      2
   910  00A0                     
   911                           _wHumidity:
   912  00A2                            ds      2
   913  00A2                     
   914                           _wTempState:
   915  00A4                            ds      1
   916  00A4                     
   917                           _wTimer0Counter:
   918  00A5                            ds      1
   919  00A5                     
   920                           _wI2CCommandState:
   921  00A6                            ds      1
   922  00A6                     
   923                           _wI2CTxBuffer:
   924  00A7                            ds      20
   925  00A7                     
   926                           psect	dataBANK1,class=BANK1,space=1,noexec
   927                           global __pdataBANK1
   928                           __pdataBANK1:
   929  00C1                     	file	"161518_temp_main.c"
   930                           	line	323
   931                           main@F2250:
   932  00C1                            ds      4
   933  00C1                     
   934                           psect	bssBANK2,class=BANK2,space=1,noexec
   935                           global __pbssBANK2
   936                           __pbssBANK2:
   937  0120                     _wHexTemp:
   938  0120                            ds      20
   939  0120                     
   940                           _wReceptionBuffer:
   941  0134                            ds      30
   942  0134                     
   943                           psect	bssBANK3,class=BANK3,space=1,noexec
   944                           global __pbssBANK3
   945                           __pbssBANK3:
   946  01A0                     _wInterruptText:
   947  01A0                            ds      75
   948  01A0                     
   949                           	file	"C:\Users\dell\AppData\Local\Temp\sbc0."
   950                           	line	#
   951                           ; Initialize objects allocated to BANK1
   952                           	global __pidataBANK1,__pdataBANK1
   953                           psect cinit,class=CODE,delta=2,merge=1
   954                           	movlb 1	; select bank1
   955  0188  0021               	fcall	__pidataBANK1+0		;fetch initializer
   956  0189  318C  249E  3181   	movwf	__pdataBANK1+0&07fh		
   957  018C  00C1               	fcall	__pidataBANK1+1		;fetch initializer
   958  018D  318C  249F  3181   	movwf	__pdataBANK1+1&07fh		
   959  0190  00C2               	fcall	__pidataBANK1+2		;fetch initializer
   960  0191  318C  24A0  3181   	movwf	__pdataBANK1+2&07fh		
   961  0194  00C3               	fcall	__pidataBANK1+3		;fetch initializer
   962  0195  318C  24A1  3181   	movwf	__pdataBANK1+3&07fh		
   963  0198  00C4               	line	#
   964                           psect clrtext,class=CODE,delta=2
   965                           global clear_ram0
   966                           ;	Called with FSR0 containing the base address, and
   967                           ;	WREG with the size to clear
   968                           clear_ram0:
   969  0CB3                     	clrwdt			;clear the watchdog before getting into this loop
   970  0CB3  0064               clrloop0:
   971  0CB4                     	clrf	indf0		;clear RAM location pointed to by FSR
   972  0CB4  0180               	addfsr	0,1
   973  0CB5  3101               	decfsz wreg		;Have we reached the end of clearing yet?
   974  0CB6  0B89               	goto clrloop0	;have we reached the end yet?
   975  0CB7  2CB4               	retlw	0		;all done for this memory range, return
   976  0CB8  3400               ; Clear objects allocated to BANK0
   977                           psect cinit,class=CODE,delta=2,merge=1
   978                           	global __pbssBANK0
   979                           	movlw	low(__pbssBANK0)
   980  0199  304D               	movwf	fsr0l
   981  019A  0084               	movlw	high(__pbssBANK0)
   982  019B  3000               	movwf	fsr0h
   983  019C  0085               	movlw	0Fh
   984  019D  300F               	fcall	clear_ram0
   985  019E  318C  24B3  3181   ; Clear objects allocated to BANK1
   986                           psect cinit,class=CODE,delta=2,merge=1
   987                           	global __pbssBANK1
   988                           	movlw	low(__pbssBANK1)
   989  01A1  30A0               	movwf	fsr0l
   990  01A2  0084               	movlw	high(__pbssBANK1)
   991  01A3  3000               	movwf	fsr0h
   992  01A4  0085               	movlw	01Bh
   993  01A5  301B               	fcall	clear_ram0
   994  01A6  318C  24B3  3181   ; Clear objects allocated to BANK2
   995                           psect cinit,class=CODE,delta=2,merge=1
   996                           	global __pbssBANK2
   997                           	movlw	low(__pbssBANK2)
   998  01A9  3020               	movwf	fsr0l
   999  01AA  0084               	movlw	high(__pbssBANK2)
  1000  01AB  3001               	movwf	fsr0h
  1001  01AC  0085               	movlw	032h
  1002  01AD  3032               	fcall	clear_ram0
  1003  01AE  318C  24B3  3181   ; Clear objects allocated to BANK3
  1004                           psect cinit,class=CODE,delta=2,merge=1
  1005                           	global __pbssBANK3
  1006                           	movlw	low(__pbssBANK3)
  1007  01B1  30A0               	movwf	fsr0l
  1008  01B2  0084               	movlw	high(__pbssBANK3)
  1009  01B3  3001               	movwf	fsr0h
  1010  01B4  0085               	movlw	04Bh
  1011  01B5  304B               	fcall	clear_ram0
  1012  01B6  318C  24B3  3181   psect cinit,class=CODE,delta=2,merge=1
  1013                           global end_of_initialization,__end_of__initialization
  1014                           
  1015                           ;End of C runtime variable initialization code
  1016                           
  1017                           end_of_initialization:
  1018  01B9                     __end_of__initialization:
  1019  01B9                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  1020  01B9  107E               movlb 0
  1021  01BA  0020               ljmp _main	;jump to C main() function
  1022  01BB  3181  29BD         psect	cstackBANK4,class=BANK4,space=1,noexec
  1023                           global __pcstackBANK4
  1024                           __pcstackBANK4:
  1025  0220                     	global	main@wTemp
  1026                           main@wTemp:	; 2 bytes @ 0x0
  1027  0220                     	ds	2
  1028  0220                     	global	main@wConv
  1029                           main@wConv:	; 4 bytes @ 0x2
  1030  0222                     	ds	4
  1031  0222                     	global	main@wReadout
  1032                           main@wReadout:	; 20 bytes @ 0x6
  1033  0226                     	ds	20
  1034  0226                     	global	main@wIterationCounter
  1035                           main@wIterationCounter:	; 2 bytes @ 0x1A
  1036  023A                     	ds	2
  1037  023A                     	global	main@wMenuPrev
  1038                           main@wMenuPrev:	; 1 bytes @ 0x1C
  1039  023C                     	ds	1
  1040  023C                     	global	main@wHumidityPrev
  1041                           main@wHumidityPrev:	; 2 bytes @ 0x1D
  1042  023D                     	ds	2
  1043  023D                     	global	main@wTemperaturePrev
  1044                           main@wTemperaturePrev:	; 2 bytes @ 0x1F
  1045  023F                     	ds	2
  1046  023F                     	global	main@wEnterBottonPressed
  1047                           main@wEnterBottonPressed:	; 1 bytes @ 0x21
  1048  0241                     	ds	1
  1049  0241                     	global	main@wDebounceEnter
  1050                           main@wDebounceEnter:	; 2 bytes @ 0x22
  1051  0242                     	ds	2
  1052  0242                     	global	main@wDebounceUp
  1053                           main@wDebounceUp:	; 2 bytes @ 0x24
  1054  0244                     	ds	2
  1055  0244                     	global	main@wDebounceDown
  1056                           main@wDebounceDown:	; 2 bytes @ 0x26
  1057  0246                     	ds	2
  1058  0246                     	global	main@wCounter
  1059                           main@wCounter:	; 2 bytes @ 0x28
  1060  0248                     	ds	2
  1061  0248                     	global	main@wUpBottonPressed
  1062                           main@wUpBottonPressed:	; 1 bytes @ 0x2A
  1063  024A                     	ds	1
  1064  024A                     	global	main@wDownBottonPressed
  1065                           main@wDownBottonPressed:	; 1 bytes @ 0x2B
  1066  024B                     	ds	1
  1067  024B                     	global	main@wMenu
  1068                           main@wMenu:	; 1 bytes @ 0x2C
  1069  024C                     	ds	1
  1070  024C                     psect	cstackBANK1,class=BANK1,space=1,noexec
  1071                           global __pcstackBANK1
  1072                           __pcstackBANK1:
  1073  00BB                     ??_Add_Trace:	; 1 bytes @ 0x0
  1074  00BB                     	ds	6
  1075  00BB                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  1076                           global __pcstackCOMMON
  1077                           __pcstackCOMMON:
  1078  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1079  0070                     ?_clearDisplay:	; 1 bytes @ 0x0
  1080  0070                     ?_powerOnLcd:	; 1 bytes @ 0x0
  1081  0070                     ?_setCursorOff:	; 1 bytes @ 0x0
  1082  0070                     ?_moveCursorToHome:	; 1 bytes @ 0x0
  1083  0070                     ?_setNotBlinkingCursor:	; 1 bytes @ 0x0
  1084  0070                     ?_setData:	; 1 bytes @ 0x0
  1085  0070                     ?_writeInsChk:	; 1 bytes @ 0x0
  1086  0070                     ?_writeTxtChk:	; 1 bytes @ 0x0
  1087  0070                     ?_SetToSendDataToLCD:	; 1 bytes @ 0x0
  1088  0070                     ?_waitLCDBusy:	; 1 bytes @ 0x0
  1089  0070                     ?_writeInsNoChk:	; 1 bytes @ 0x0
  1090  0070                     ?_ToggleBitRB5:	; 1 bytes @ 0x0
  1091  0070                     ?_SetToGetTemp:	; 1 bytes @ 0x0
  1092  0070                     ?_GetTemp:	; 1 bytes @ 0x0
  1093  0070                     ?_PrintLog:	; 1 bytes @ 0x0
  1094  0070                     ?_main:	; 1 bytes @ 0x0
  1095  0070                     ?_myint:	; 1 bytes @ 0x0
  1096  0070                     ?_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  1097  0070                     	global	?i1_strlen
  1098                           ?i1_strlen:	; 2 bytes @ 0x0
  1099  0070                     	global	i1strlen@s
  1100                           i1strlen@s:	; 2 bytes @ 0x0
  1101  0070                     	ds	2
  1102  0070                     ??i1_strlen:	; 1 bytes @ 0x2
  1103  0072                     	ds	2
  1104  0072                     	global	i1strlen@a
  1105                           i1strlen@a:	; 2 bytes @ 0x4
  1106  0074                     	ds	2
  1107  0074                     ?i1_strcpy:	; 1 bytes @ 0x6
  1108  0076                     	global	i1strcpy@src
  1109                           i1strcpy@src:	; 2 bytes @ 0x6
  1110  0076                     	ds	2
  1111  0076                     ??i1_strcpy:	; 1 bytes @ 0x8
  1112  0078                     	ds	2
  1113  0078                     	global	i1strcpy@s
  1114                           i1strcpy@s:	; 2 bytes @ 0xA
  1115  007A                     	ds	2
  1116  007A                     	global	i1strcpy@dest
  1117                           i1strcpy@dest:	; 1 bytes @ 0xC
  1118  007C                     	ds	1
  1119  007C                     	global	i1strcpy@d
  1120                           i1strcpy@d:	; 1 bytes @ 0xD
  1121  007D                     	ds	1
  1122  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1123                           global __pcstackBANK0
  1124                           __pcstackBANK0:
  1125  0020                     ?i1_strcat:	; 1 bytes @ 0x0
  1126  0020                     	global	i1strcat@src
  1127                           i1strcat@src:	; 2 bytes @ 0x0
  1128  0020                     	ds	2
  1129  0020                     ??i1_strcat:	; 1 bytes @ 0x2
  1130  0022                     	ds	2
  1131  0022                     	global	i1strcat@dest
  1132                           i1strcat@dest:	; 1 bytes @ 0x4
  1133  0024                     	ds	1
  1134  0024                     ?i1_Add_Trace:	; 1 bytes @ 0x5
  1135  0025                     	global	i1Add_Trace@iSizeOfoText
  1136                           i1Add_Trace@iSizeOfoText:	; 1 bytes @ 0x5
  1137  0025                     	ds	1
  1138  0025                     	global	i1Add_Trace@iText
  1139                           i1Add_Trace@iText:	; 2 bytes @ 0x6
  1140  0026                     	ds	2
  1141  0026                     ??i1_Add_Trace:	; 1 bytes @ 0x8
  1142  0028                     	ds	6
  1143  0028                     	global	i1Add_Trace@oText
  1144                           i1Add_Trace@oText:	; 1 bytes @ 0xE
  1145  002E                     	ds	1
  1146  002E                     ??_myint:	; 1 bytes @ 0xF
  1147  002F                     	ds	5
  1148  002F                     ??_setData:	; 1 bytes @ 0x14
  1149  0034                     ??_SetToSendDataToLCD:	; 1 bytes @ 0x14
  1150  0034                     ??_waitLCDBusy:	; 1 bytes @ 0x14
  1151  0034                     ??_ToggleBitRB5:	; 1 bytes @ 0x14
  1152  0034                     ??_SetToGetTemp:	; 1 bytes @ 0x14
  1153  0034                     ?_Debounce:	; 1 bytes @ 0x14
  1154  0034                     ??_SetToReadDataFromLCD:	; 1 bytes @ 0x14
  1155  0034                     	global	?_strlen
  1156                           ?_strlen:	; 2 bytes @ 0x14
  1157  0034                     ?_memset:	; 2 bytes @ 0x14
  1158  0034                     	global	?___awdiv
  1159                           ?___awdiv:	; 2 bytes @ 0x14
  1160  0034                     	global	?___awmod
  1161                           ?___awmod:	; 2 bytes @ 0x14
  1162  0034                     	global	Debounce@ioTimer
  1163                           Debounce@ioTimer:	; 1 bytes @ 0x14
  1164  0034                     	global	___awdiv@divisor
  1165                           ___awdiv@divisor:	; 2 bytes @ 0x14
  1166  0034                     	global	___awmod@divisor
  1167                           ___awmod@divisor:	; 2 bytes @ 0x14
  1168  0034                     	global	memset@dest
  1169                           memset@dest:	; 2 bytes @ 0x14
  1170  0034                     	global	strlen@s
  1171                           strlen@s:	; 2 bytes @ 0x14
  1172  0034                     	ds	1
  1173  0034                     	global	Debounce@swPressed
  1174                           Debounce@swPressed:	; 1 bytes @ 0x15
  1175  0035                     	ds	1
  1176  0035                     ??_strlen:	; 1 bytes @ 0x16
  1177  0036                     ??_Debounce:	; 1 bytes @ 0x16
  1178  0036                     	global	setData@iValue
  1179                           setData@iValue:	; 1 bytes @ 0x16
  1180  0036                     	global	___awdiv@dividend
  1181                           ___awdiv@dividend:	; 2 bytes @ 0x16
  1182  0036                     	global	___awmod@dividend
  1183                           ___awmod@dividend:	; 2 bytes @ 0x16
  1184  0036                     	global	memset@c
  1185                           memset@c:	; 2 bytes @ 0x16
  1186  0036                     	ds	1
  1187  0036                     ??_writeInsNoChk:	; 1 bytes @ 0x17
  1188  0037                     	global	waitLCDBusy@busyFlag
  1189                           waitLCDBusy@busyFlag:	; 2 bytes @ 0x17
  1190  0037                     	ds	1
  1191  0037                     ??___awdiv:	; 1 bytes @ 0x18
  1192  0038                     ??___awmod:	; 1 bytes @ 0x18
  1193  0038                     	global	Debounce@iSwitch
  1194                           Debounce@iSwitch:	; 1 bytes @ 0x18
  1195  0038                     	global	writeInsNoChk@iOpCode
  1196                           writeInsNoChk@iOpCode:	; 1 bytes @ 0x18
  1197  0038                     	global	memset@n
  1198                           memset@n:	; 2 bytes @ 0x18
  1199  0038                     	global	strlen@a
  1200                           strlen@a:	; 2 bytes @ 0x18
  1201  0038                     	ds	1
  1202  0038                     ?_setCursorPosition:	; 1 bytes @ 0x19
  1203  0039                     ??_writeInsChk:	; 1 bytes @ 0x19
  1204  0039                     	global	writeInsChk@iOpCode
  1205                           writeInsChk@iOpCode:	; 1 bytes @ 0x19
  1206  0039                     	global	setCursorPosition@iPosition
  1207                           setCursorPosition@iPosition:	; 1 bytes @ 0x19
  1208  0039                     	global	___awdiv@counter
  1209                           ___awdiv@counter:	; 1 bytes @ 0x19
  1210  0039                     	global	___awmod@counter
  1211                           ___awmod@counter:	; 1 bytes @ 0x19
  1212  0039                     	ds	1
  1213  0039                     ??_memset:	; 1 bytes @ 0x1A
  1214  003A                     ??_initLCD:	; 1 bytes @ 0x1A
  1215  003A                     ??_clearDisplay:	; 1 bytes @ 0x1A
  1216  003A                     ??_powerOnLcd:	; 1 bytes @ 0x1A
  1217  003A                     ??_setCursorOff:	; 1 bytes @ 0x1A
  1218  003A                     ??_moveCursorToHome:	; 1 bytes @ 0x1A
  1219  003A                     ??_setNotBlinkingCursor:	; 1 bytes @ 0x1A
  1220  003A                     ??_setCursorPosition:	; 1 bytes @ 0x1A
  1221  003A                     ?_strcpy:	; 1 bytes @ 0x1A
  1222  003A                     	global	___awdiv@sign
  1223                           ___awdiv@sign:	; 1 bytes @ 0x1A
  1224  003A                     	global	___awmod@sign
  1225                           ___awmod@sign:	; 1 bytes @ 0x1A
  1226  003A                     	global	strcpy@src
  1227                           strcpy@src:	; 2 bytes @ 0x1A
  1228  003A                     	ds	1
  1229  003A                     	global	___awdiv@quotient
  1230                           ___awdiv@quotient:	; 2 bytes @ 0x1B
  1231  003B                     	ds	1
  1232  003B                     ??_strcpy:	; 1 bytes @ 0x1C
  1233  003C                     	global	setCursorPosition@iLine
  1234                           setCursorPosition@iLine:	; 1 bytes @ 0x1C
  1235  003C                     	ds	1
  1236  003C                     ?_printEM1812:	; 1 bytes @ 0x1D
  1237  003D                     	global	setCursorPosition@wLCDIndex
  1238                           setCursorPosition@wLCDIndex:	; 1 bytes @ 0x1D
  1239  003D                     	global	printEM1812@wVariable
  1240                           printEM1812@wVariable:	; 2 bytes @ 0x1D
  1241  003D                     	ds	1
  1242  003D                     ??_writeTxtChk:	; 1 bytes @ 0x1E
  1243  003E                     	global	memset@k
  1244                           memset@k:	; 2 bytes @ 0x1E
  1245  003E                     	global	strcpy@s
  1246                           strcpy@s:	; 2 bytes @ 0x1E
  1247  003E                     	ds	1
  1248  003E                     	global	printEM1812@oTextOut
  1249                           printEM1812@oTextOut:	; 1 bytes @ 0x1F
  1250  003F                     	ds	1
  1251  003F                     ??_printEM1812:	; 1 bytes @ 0x20
  1252  0040                     	global	writeTxtChk@iOpCode
  1253                           writeTxtChk@iOpCode:	; 1 bytes @ 0x20
  1254  0040                     	global	strcpy@d
  1255                           strcpy@d:	; 1 bytes @ 0x20
  1256  0040                     	global	memset@s
  1257                           memset@s:	; 2 bytes @ 0x20
  1258  0040                     	ds	1
  1259  0040                     ?_lcdWriteText:	; 1 bytes @ 0x21
  1260  0041                     	global	printEM1812@wIsNegative
  1261                           printEM1812@wIsNegative:	; 1 bytes @ 0x21
  1262  0041                     	global	strcpy@dest
  1263                           strcpy@dest:	; 1 bytes @ 0x21
  1264  0041                     	global	lcdWriteText@iText
  1265                           lcdWriteText@iText:	; 2 bytes @ 0x21
  1266  0041                     	ds	1
  1267  0041                     ?_strcat:	; 1 bytes @ 0x22
  1268  0042                     ??_GetTemp:	; 1 bytes @ 0x22
  1269  0042                     	global	printEM1812@wTen
  1270                           printEM1812@wTen:	; 1 bytes @ 0x22
  1271  0042                     	global	strcat@src
  1272                           strcat@src:	; 2 bytes @ 0x22
  1273  0042                     	ds	1
  1274  0042                     ??_lcdWriteText:	; 1 bytes @ 0x23
  1275  0043                     	global	printEM1812@wUnity
  1276                           printEM1812@wUnity:	; 1 bytes @ 0x23
  1277  0043                     	ds	1
  1278  0043                     ??_strcat:	; 1 bytes @ 0x24
  1279  0044                     	global	printEM1812@wDecimal
  1280                           printEM1812@wDecimal:	; 1 bytes @ 0x24
  1281  0044                     	ds	2
  1282  0044                     	global	lcdWriteText@wCharReadingPos
  1283                           lcdWriteText@wCharReadingPos:	; 1 bytes @ 0x26
  1284  0046                     	global	strcat@dest
  1285                           strcat@dest:	; 1 bytes @ 0x26
  1286  0046                     	ds	1
  1287  0046                     ?_Add_Trace:	; 1 bytes @ 0x27
  1288  0047                     ??_PrintLog:	; 1 bytes @ 0x27
  1289  0047                     	global	Add_Trace@iSizeOfoText
  1290                           Add_Trace@iSizeOfoText:	; 1 bytes @ 0x27
  1291  0047                     	ds	1
  1292  0047                     	global	Add_Trace@iText
  1293                           Add_Trace@iText:	; 2 bytes @ 0x28
  1294  0048                     	ds	1
  1295  0048                     	global	PrintLog@wInterruptTextLen
  1296                           PrintLog@wInterruptTextLen:	; 1 bytes @ 0x29
  1297  0049                     	ds	1
  1298  0049                     	global	Add_Trace@oText
  1299                           Add_Trace@oText:	; 1 bytes @ 0x2A
  1300  004A                     	global	PrintLog@iText
  1301                           PrintLog@iText:	; 1 bytes @ 0x2A
  1302  004A                     	ds	1
  1303  004A                     ??_main:	; 1 bytes @ 0x2B
  1304  004B                     	ds	2
  1305  004B                     ;!
  1306                           ;!Data Sizes:
  1307                           ;!    Strings     96
  1308                           ;!    Constant    0
  1309                           ;!    Data        4
  1310                           ;!    BSS         167
  1311                           ;!    Persistent  0
  1312                           ;!    Stack       0
  1313                           ;!
  1314                           ;!Auto Spaces:
  1315                           ;!    Space          Size  Autos    Used
  1316                           ;!    COMMON           14     14      14
  1317                           ;!    BANK0            80     45      60
  1318                           ;!    BANK1            80      6      37
  1319                           ;!    BANK2            80      0      50
  1320                           ;!    BANK3            80      0      75
  1321                           ;!    BANK4            80     45      45
  1322                           ;!    BANK5            80      0       0
  1323                           ;!    BANK6            80      0       0
  1324                           ;!    BANK7            80      0       0
  1325                           ;!    BANK8            80      0       0
  1326                           ;!    BANK9            80      0       0
  1327                           ;!    BANK10           80      0       0
  1328                           ;!    BANK11           80      0       0
  1329                           ;!    BANK12           48      0       0
  1330                           
  1331                           ;!
  1332                           ;!Pointer List with Targets:
  1333                           ;!
  1334                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 75
  1335                           ;!		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1336                           ;!		 -> main@wReadout(BANK4[20]), wInterruptText(BANK3[75]), 
  1337                           ;!
  1338                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 75
  1339                           ;!		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1340                           ;!		 -> main@wReadout(BANK4[20]), wInterruptText(BANK3[75]), 
  1341                           ;!
  1342                           ;!    strcpy@dest	PTR unsigned char  size(1) Largest target is 75
  1343                           ;!		 -> wInterruptText(BANK3[75]), 
  1344                           ;!
  1345                           ;!    strcpy@d	PTR unsigned char  size(1) Largest target is 75
  1346                           ;!		 -> wInterruptText(BANK3[75]), 
  1347                           ;!
  1348                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
  1349                           ;!		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1350                           ;!		 -> main@wReadout(BANK4[20]), 
  1351                           ;!
  1352                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
  1353                           ;!		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1354                           ;!		 -> main@wReadout(BANK4[20]), 
  1355                           ;!
  1356                           ;!    sp__strcpy	PTR unsigned char  size(1) Largest target is 75
  1357                           ;!		 -> wInterruptText(BANK3[75]), 
  1358                           ;!
  1359                           ;!    strcat@src	PTR const unsigned char  size(2) Largest target is 20
  1360                           ;!		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1361                           ;!		 -> main@wReadout(BANK4[20]), 
  1362                           ;!
  1363                           ;!    strcat@dest	PTR unsigned char  size(1) Largest target is 75
  1364                           ;!		 -> wInterruptText(BANK3[75]), 
  1365                           ;!
  1366                           ;!    memset@dest	PTR void  size(2) Largest target is 75
  1367                           ;!		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]),
                                  
  1368                           ;!
  1369                           ;!    memset@s	PTR unsigned char  size(2) Largest target is 75
  1370                           ;!		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]),
                                  
  1371                           ;!
  1372                           ;!    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
  1373                           ;!		 -> STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[16]), STR_3(CODE[16]), 
  1374                           ;!		 -> main@wConv(BANK4[4]), wInterruptText(BANK3[75]), 
  1375                           ;!
  1376                           ;!    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
  1377                           ;!		 -> main@wEnterBottonPressed(BANK4[1]), main@wDownBottonPressed(BANK4[1]), main@wUpB
                                 ottonPressed(BANK4[1]), 
  1378                           ;!
  1379                           ;!    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
  1380                           ;!		 -> main@wDebounceDown(BANK4[2]), main@wDebounceUp(BANK4[2]), main@wDebounceEnter(BA
                                 NK4[2]), 
  1381                           ;!
  1382                           ;!    printEM1812@oTextOut	PTR unsigned char  size(1) Largest target is 20
  1383                           ;!		 -> main@wReadout(BANK4[20]), 
  1384                           ;!
  1385                           ;!    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
  1386                           ;!		 -> wInterruptText(BANK3[75]), 
  1387                           ;!
  1388                           ;!    sp__memset	PTR void  size(2) Largest target is 75
  1389                           ;!		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]),
                                  
  1390                           ;!
  1391                           ;!    sp__strcat	PTR unsigned char  size(1) Largest target is 75
  1392                           ;!		 -> wInterruptText(BANK3[75]), 
  1393                           ;!
  1394                           ;!    Add_Trace@iText	PTR unsigned char  size(2) Largest target is 20
  1395                           ;!		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1396                           ;!		 -> main@wReadout(BANK4[20]), 
  1397                           ;!
  1398                           ;!    Add_Trace@oText	PTR unsigned char  size(1) Largest target is 75
  1399                           ;!		 -> wInterruptText(BANK3[75]), 
  1400                           ;!
  1401                           
  1402                           
  1403                           ;!
  1404                           ;!Critical Paths under _main in COMMON
  1405                           ;!
  1406                           ;!    None.
  1407                           ;!
  1408                           ;!Critical Paths under _myint in COMMON
  1409                           ;!
  1410                           ;!    i1_strcat->i1_strcpy
  1411                           ;!    i1_strcpy->i1_strlen
  1412                           ;!
  1413                           ;!Critical Paths under _main in BANK0
  1414                           ;!
  1415                           ;!    _main->_Add_Trace
  1416                           ;!    _main->_PrintLog
  1417                           ;!    _setNotBlinkingCursor->_writeInsChk
  1418                           ;!    _setCursorOff->_writeInsChk
  1419                           ;!    _printEM1812->___awdiv
  1420                           ;!    _powerOnLcd->_writeInsChk
  1421                           ;!    _moveCursorToHome->_writeInsChk
  1422                           ;!    _initLCD->_writeInsChk
  1423                           ;!    _clearDisplay->_writeInsChk
  1424                           ;!    _writeInsChk->_waitLCDBusy
  1425                           ;!    _writeInsChk->_writeInsNoChk
  1426                           ;!    _writeInsNoChk->_setData
  1427                           ;!    _PrintLog->_lcdWriteText
  1428                           ;!    _lcdWriteText->_writeTxtChk
  1429                           ;!    _writeTxtChk->_setCursorPosition
  1430                           ;!    _setCursorPosition->_waitLCDBusy
  1431                           ;!    _GetTemp->_memset
  1432                           ;!    _Add_Trace->_strcat
  1433                           ;!    _strcat->_strcpy
  1434                           ;!    _strcpy->_strlen
  1435                           ;!
  1436                           ;!Critical Paths under _myint in BANK0
  1437                           ;!
  1438                           ;!    _myint->i1_Add_Trace
  1439                           ;!    i1_Add_Trace->i1_strcat
  1440                           ;!
  1441                           ;!Critical Paths under _main in BANK1
  1442                           ;!
  1443                           ;!    _main->_Add_Trace
  1444                           ;!
  1445                           ;!Critical Paths under _myint in BANK1
  1446                           ;!
  1447                           ;!    None.
  1448                           ;!
  1449                           ;!Critical Paths under _main in BANK2
  1450                           ;!
  1451                           ;!    None.
  1452                           ;!
  1453                           ;!Critical Paths under _myint in BANK2
  1454                           ;!
  1455                           ;!    None.
  1456                           ;!
  1457                           ;!Critical Paths under _main in BANK3
  1458                           ;!
  1459                           ;!    None.
  1460                           ;!
  1461                           ;!Critical Paths under _myint in BANK3
  1462                           ;!
  1463                           ;!    None.
  1464                           ;!
  1465                           ;!Critical Paths under _main in BANK4
  1466                           ;!
  1467                           ;!    None.
  1468                           ;!
  1469                           ;!Critical Paths under _myint in BANK4
  1470                           ;!
  1471                           ;!    None.
  1472                           ;!
  1473                           ;!Critical Paths under _main in BANK5
  1474                           ;!
  1475                           ;!    None.
  1476                           ;!
  1477                           ;!Critical Paths under _myint in BANK5
  1478                           ;!
  1479                           ;!    None.
  1480                           ;!
  1481                           ;!Critical Paths under _main in BANK6
  1482                           ;!
  1483                           ;!    None.
  1484                           ;!
  1485                           ;!Critical Paths under _myint in BANK6
  1486                           ;!
  1487                           ;!    None.
  1488                           ;!
  1489                           ;!Critical Paths under _main in BANK7
  1490                           ;!
  1491                           ;!    None.
  1492                           ;!
  1493                           ;!Critical Paths under _myint in BANK7
  1494                           ;!
  1495                           ;!    None.
  1496                           ;!
  1497                           ;!Critical Paths under _main in BANK8
  1498                           ;!
  1499                           ;!    None.
  1500                           ;!
  1501                           ;!Critical Paths under _myint in BANK8
  1502                           ;!
  1503                           ;!    None.
  1504                           ;!
  1505                           ;!Critical Paths under _main in BANK9
  1506                           ;!
  1507                           ;!    None.
  1508                           ;!
  1509                           ;!Critical Paths under _myint in BANK9
  1510                           ;!
  1511                           ;!    None.
  1512                           ;!
  1513                           ;!Critical Paths under _main in BANK10
  1514                           ;!
  1515                           ;!    None.
  1516                           ;!
  1517                           ;!Critical Paths under _myint in BANK10
  1518                           ;!
  1519                           ;!    None.
  1520                           ;!
  1521                           ;!Critical Paths under _main in BANK11
  1522                           ;!
  1523                           ;!    None.
  1524                           ;!
  1525                           ;!Critical Paths under _myint in BANK11
  1526                           ;!
  1527                           ;!    None.
  1528                           ;!
  1529                           ;!Critical Paths under _main in BANK12
  1530                           ;!
  1531                           ;!    None.
  1532                           ;!
  1533                           ;!Critical Paths under _myint in BANK12
  1534                           ;!
  1535                           ;!    None.
  1536                           
  1537 ;;
  1538 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1539 ;;
  1540                           
  1541                           ;!
  1542                           ;!Call Graph Tables:
  1543                           ;!
  1544                           ;! ---------------------------------------------------------------------------------
  1545                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1546                           ;! ---------------------------------------------------------------------------------
  1547                           ;! (0) _main                                                47    47      0   22857
  1548                           ;!                                             43 BANK0      2     2      0
  1549                           ;!                                              0 BANK4     45    45      0
  1550                           ;!                          _Add_Trace
  1551                           ;!                           _Debounce
  1552                           ;!                            _GetTemp
  1553                           ;!                           _PrintLog
  1554                           ;!                       _SetToGetTemp
  1555                           ;!                       _ToggleBitRB5
  1556                           ;!                       _clearDisplay
  1557                           ;!                            _initLCD
  1558                           ;!                       _lcdWriteText
  1559                           ;!                             _memset
  1560                           ;!                   _moveCursorToHome
  1561                           ;!                         _powerOnLcd
  1562                           ;!                        _printEM1812
  1563                           ;!                       _setCursorOff
  1564                           ;!                  _setCursorPosition
  1565                           ;!               _setNotBlinkingCursor
  1566                           ;! ---------------------------------------------------------------------------------
  1567                           ;! (1) _setNotBlinkingCursor                                 1     1      0     254
  1568                           ;!                                             26 BANK0      1     1      0
  1569                           ;!                        _writeInsChk
  1570                           ;! ---------------------------------------------------------------------------------
  1571                           ;! (1) _setCursorOff                                         1     1      0     254
  1572                           ;!                                             26 BANK0      1     1      0
  1573                           ;!                        _writeInsChk
  1574                           ;! ---------------------------------------------------------------------------------
  1575                           ;! (1) _printEM1812                                          8     5      3    2757
  1576                           ;!                                             29 BANK0      8     5      3
  1577                           ;!                            ___awdiv
  1578                           ;!                            ___awmod
  1579                           ;! ---------------------------------------------------------------------------------
  1580                           ;! (2) ___awmod                                              7     3      4     793
  1581                           ;!                                             20 BANK0      7     3      4
  1582                           ;! ---------------------------------------------------------------------------------
  1583                           ;! (2) ___awdiv                                              9     5      4     805
  1584                           ;!                                             20 BANK0      9     5      4
  1585                           ;! ---------------------------------------------------------------------------------
  1586                           ;! (1) _powerOnLcd                                           1     1      0     254
  1587                           ;!                                             26 BANK0      1     1      0
  1588                           ;!                        _writeInsChk
  1589                           ;! ---------------------------------------------------------------------------------
  1590                           ;! (1) _moveCursorToHome                                     0     0      0     254
  1591                           ;!                        _writeInsChk
  1592                           ;! ---------------------------------------------------------------------------------
  1593                           ;! (1) _initLCD                                              1     1      0     632
  1594                           ;!                                             26 BANK0      1     1      0
  1595                           ;!                       _clearDisplay
  1596                           ;!                            _setData
  1597                           ;!                        _writeInsChk
  1598                           ;! ---------------------------------------------------------------------------------
  1599                           ;! (2) _clearDisplay                                         0     0      0     254
  1600                           ;!                        _writeInsChk
  1601                           ;! ---------------------------------------------------------------------------------
  1602                           ;! (2) _writeInsChk                                          1     1      0     254
  1603                           ;!                                             25 BANK0      1     1      0
  1604                           ;!                        _waitLCDBusy
  1605                           ;!                      _writeInsNoChk
  1606                           ;! ---------------------------------------------------------------------------------
  1607                           ;! (3) _writeInsNoChk                                        2     2      0     186
  1608                           ;!                                             23 BANK0      2     2      0
  1609                           ;!                 _SetToSendDataToLCD
  1610                           ;!                            _setData
  1611                           ;! ---------------------------------------------------------------------------------
  1612                           ;! (1) _ToggleBitRB5                                         0     0      0       0
  1613                           ;! ---------------------------------------------------------------------------------
  1614                           ;! (1) _SetToGetTemp                                         1     1      0       0
  1615                           ;!                                             20 BANK0      1     1      0
  1616                           ;! ---------------------------------------------------------------------------------
  1617                           ;! (1) _PrintLog                                             4     4      0    5282
  1618                           ;!                                             39 BANK0      4     4      0
  1619                           ;!                       _lcdWriteText
  1620                           ;!                             _memset
  1621                           ;!                             _strlen
  1622                           ;! ---------------------------------------------------------------------------------
  1623                           ;! (1) _lcdWriteText                                         6     4      2    2701
  1624                           ;!                                             33 BANK0      6     4      2
  1625                           ;!                        _writeTxtChk
  1626                           ;! ---------------------------------------------------------------------------------
  1627                           ;! (2) _writeTxtChk                                          3     3      0    2031
  1628                           ;!                                             30 BANK0      3     3      0
  1629                           ;!                 _SetToSendDataToLCD
  1630                           ;!                  _setCursorPosition
  1631                           ;!                            _setData
  1632                           ;!                        _waitLCDBusy
  1633                           ;! ---------------------------------------------------------------------------------
  1634                           ;! (1) _setCursorPosition                                    5     4      1    1777
  1635                           ;!                                             25 BANK0      5     4      1
  1636                           ;!                 _SetToSendDataToLCD
  1637                           ;!                            _setData
  1638                           ;!                        _waitLCDBusy
  1639                           ;! ---------------------------------------------------------------------------------
  1640                           ;! (3) _waitLCDBusy                                          5     5      0      37
  1641                           ;!                                             20 BANK0      5     5      0
  1642                           ;!               _SetToReadDataFromLCD
  1643                           ;! ---------------------------------------------------------------------------------
  1644                           ;! (4) _SetToReadDataFromLCD                                 0     0      0       0
  1645                           ;! ---------------------------------------------------------------------------------
  1646                           ;! (4) _setData                                              3     3      0     124
  1647                           ;!                                             20 BANK0      3     3      0
  1648                           ;! ---------------------------------------------------------------------------------
  1649                           ;! (4) _SetToSendDataToLCD                                   0     0      0       0
  1650                           ;! ---------------------------------------------------------------------------------
  1651                           ;! (1) _GetTemp                                              1     1      0    1897
  1652                           ;!                                             34 BANK0      1     1      0
  1653                           ;!                             _memset
  1654                           ;! ---------------------------------------------------------------------------------
  1655                           ;! (1) _memset                                              14     8      6    1897
  1656                           ;!                                             20 BANK0     14     8      6
  1657                           ;! ---------------------------------------------------------------------------------
  1658                           ;! (1) _Debounce                                             5     3      2     788
  1659                           ;!                                             20 BANK0      5     3      2
  1660                           ;! ---------------------------------------------------------------------------------
  1661                           ;! (1) _Add_Trace                                           10     7      3    2780
  1662                           ;!                                             39 BANK0      4     1      3
  1663                           ;!                                              0 BANK1      6     6      0
  1664                           ;!                             _strcat
  1665                           ;!                             _strlen
  1666                           ;! ---------------------------------------------------------------------------------
  1667                           ;! (2) _strcat                                               5     3      2     979
  1668                           ;!                                             34 BANK0      5     3      2
  1669                           ;!                             _strcpy
  1670                           ;!                             _strlen
  1671                           ;! ---------------------------------------------------------------------------------
  1672                           ;! (2) _strlen                                               6     4      2     490
  1673                           ;!                                             20 BANK0      6     4      2
  1674                           ;! ---------------------------------------------------------------------------------
  1675                           ;! (3) _strcpy                                               8     6      2     263
  1676                           ;!                                             26 BANK0      8     6      2
  1677                           ;!                             _strlen (ARG)
  1678                           ;! ---------------------------------------------------------------------------------
  1679                           ;! Estimated maximum stack depth 4
  1680                           ;! ---------------------------------------------------------------------------------
  1681                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1682                           ;! ---------------------------------------------------------------------------------
  1683                           ;! (7) _myint                                                5     5      0    1072
  1684                           ;!                                             15 BANK0      5     5      0
  1685                           ;!                        i1_Add_Trace
  1686                           ;! ---------------------------------------------------------------------------------
  1687                           ;! (8) i1_Add_Trace                                         10     7      3    1072
  1688                           ;!                                              5 BANK0     10     7      3
  1689                           ;!                           i1_strcat
  1690                           ;!                           i1_strlen
  1691                           ;! ---------------------------------------------------------------------------------
  1692                           ;! (9) i1_strcat                                             5     3      2     542
  1693                           ;!                                              0 BANK0      5     3      2
  1694                           ;!                           i1_strcpy
  1695                           ;!                           i1_strlen
  1696                           ;! ---------------------------------------------------------------------------------
  1697                           ;! (9) i1_strlen                                             6     4      2     235
  1698                           ;!                                              0 COMMON     6     4      2
  1699                           ;! ---------------------------------------------------------------------------------
  1700                           ;! (10) i1_strcpy                                            8     6      2     172
  1701                           ;!                                              6 COMMON     8     6      2
  1702                           ;!                           i1_strlen (ARG)
  1703                           ;! ---------------------------------------------------------------------------------
  1704                           ;! Estimated maximum stack depth 10
  1705                           ;! ---------------------------------------------------------------------------------
  1706                           ;!
  1707                           ;! Call Graph Graphs:
  1708                           ;!
  1709                           ;! _main (ROOT)
  1710                           ;!   _Add_Trace
  1711                           ;!     _strcat
  1712                           ;!       _strcpy
  1713                           ;!         _strlen (ARG)
  1714                           ;!       _strlen
  1715                           ;!     _strlen
  1716                           ;!   _Debounce
  1717                           ;!   _GetTemp
  1718                           ;!     _memset
  1719                           ;!   _PrintLog
  1720                           ;!     _lcdWriteText
  1721                           ;!       _writeTxtChk
  1722                           ;!         _SetToSendDataToLCD
  1723                           ;!         _setCursorPosition
  1724                           ;!           _SetToSendDataToLCD
  1725                           ;!           _setData
  1726                           ;!           _waitLCDBusy
  1727                           ;!             _SetToReadDataFromLCD
  1728                           ;!         _setData
  1729                           ;!         _waitLCDBusy
  1730                           ;!           _SetToReadDataFromLCD
  1731                           ;!     _memset
  1732                           ;!     _strlen
  1733                           ;!   _SetToGetTemp
  1734                           ;!   _ToggleBitRB5
  1735                           ;!   _clearDisplay
  1736                           ;!     _writeInsChk
  1737                           ;!       _waitLCDBusy
  1738                           ;!         _SetToReadDataFromLCD
  1739                           ;!       _writeInsNoChk
  1740                           ;!         _SetToSendDataToLCD
  1741                           ;!         _setData
  1742                           ;!   _initLCD
  1743                           ;!     _clearDisplay
  1744                           ;!       _writeInsChk
  1745                           ;!         _waitLCDBusy
  1746                           ;!           _SetToReadDataFromLCD
  1747                           ;!         _writeInsNoChk
  1748                           ;!           _SetToSendDataToLCD
  1749                           ;!           _setData
  1750                           ;!     _setData
  1751                           ;!     _writeInsChk
  1752                           ;!       _waitLCDBusy
  1753                           ;!         _SetToReadDataFromLCD
  1754                           ;!       _writeInsNoChk
  1755                           ;!         _SetToSendDataToLCD
  1756                           ;!         _setData
  1757                           ;!   _lcdWriteText
  1758                           ;!     _writeTxtChk
  1759                           ;!       _SetToSendDataToLCD
  1760                           ;!       _setCursorPosition
  1761                           ;!         _SetToSendDataToLCD
  1762                           ;!         _setData
  1763                           ;!         _waitLCDBusy
  1764                           ;!           _SetToReadDataFromLCD
  1765                           ;!       _setData
  1766                           ;!       _waitLCDBusy
  1767                           ;!         _SetToReadDataFromLCD
  1768                           ;!   _memset
  1769                           ;!   _moveCursorToHome
  1770                           ;!     _writeInsChk
  1771                           ;!       _waitLCDBusy
  1772                           ;!         _SetToReadDataFromLCD
  1773                           ;!       _writeInsNoChk
  1774                           ;!         _SetToSendDataToLCD
  1775                           ;!         _setData
  1776                           ;!   _powerOnLcd
  1777                           ;!     _writeInsChk
  1778                           ;!       _waitLCDBusy
  1779                           ;!         _SetToReadDataFromLCD
  1780                           ;!       _writeInsNoChk
  1781                           ;!         _SetToSendDataToLCD
  1782                           ;!         _setData
  1783                           ;!   _printEM1812
  1784                           ;!     ___awdiv
  1785                           ;!     ___awmod
  1786                           ;!   _setCursorOff
  1787                           ;!     _writeInsChk
  1788                           ;!       _waitLCDBusy
  1789                           ;!         _SetToReadDataFromLCD
  1790                           ;!       _writeInsNoChk
  1791                           ;!         _SetToSendDataToLCD
  1792                           ;!         _setData
  1793                           ;!   _setCursorPosition
  1794                           ;!     _SetToSendDataToLCD
  1795                           ;!     _setData
  1796                           ;!     _waitLCDBusy
  1797                           ;!       _SetToReadDataFromLCD
  1798                           ;!   _setNotBlinkingCursor
  1799                           ;!     _writeInsChk
  1800                           ;!       _waitLCDBusy
  1801                           ;!         _SetToReadDataFromLCD
  1802                           ;!       _writeInsNoChk
  1803                           ;!         _SetToSendDataToLCD
  1804                           ;!         _setData
  1805                           ;!
  1806                           ;! _myint (ROOT)
  1807                           ;!   i1_Add_Trace
  1808                           ;!     i1_strcat
  1809                           ;!       i1_strcpy
  1810                           ;!         i1_strlen (ARG)
  1811                           ;!       i1_strlen
  1812                           ;!     i1_strlen
  1813                           ;!
  1814                           
  1815                           ;! Address spaces:
  1816                           
  1817                           ;!Name               Size   Autos  Total    Cost      Usage
  1818                           ;!BIGRAM             3F0      0       0       0        0.0%
  1819                           ;!NULL                 0      0       0       0        0.0%
  1820                           ;!CODE                 0      0       0       0        0.0%
  1821                           ;!BITCOMMON            E      0       0       1        0.0%
  1822                           ;!BITSFR0              0      0       0       1        0.0%
  1823                           ;!SFR0                 0      0       0       1        0.0%
  1824                           ;!COMMON               E      E       E       2      100.0%
  1825                           ;!BITSFR1              0      0       0       2        0.0%
  1826                           ;!SFR1                 0      0       0       2        0.0%
  1827                           ;!BITSFR2              0      0       0       3        0.0%
  1828                           ;!SFR2                 0      0       0       3        0.0%
  1829                           ;!STACK                0      0       0       3        0.0%
  1830                           ;!BITBANK0            50      0       0       4        0.0%
  1831                           ;!BITSFR3              0      0       0       4        0.0%
  1832                           ;!SFR3                 0      0       0       4        0.0%
  1833                           ;!BANK0               50     2D      3C       5       75.0%
  1834                           ;!BITSFR4              0      0       0       5        0.0%
  1835                           ;!SFR4                 0      0       0       5        0.0%
  1836                           ;!BITBANK1            50      0       0       6        0.0%
  1837                           ;!BITSFR5              0      0       0       6        0.0%
  1838                           ;!SFR5                 0      0       0       6        0.0%
  1839                           ;!BANK1               50      6      25       7       46.3%
  1840                           ;!BITSFR6              0      0       0       7        0.0%
  1841                           ;!SFR6                 0      0       0       7        0.0%
  1842                           ;!BITBANK2            50      0       0       8        0.0%
  1843                           ;!BITSFR7              0      0       0       8        0.0%
  1844                           ;!SFR7                 0      0       0       8        0.0%
  1845                           ;!BANK2               50      0      32       9       62.5%
  1846                           ;!BITSFR8              0      0       0       9        0.0%
  1847                           ;!SFR8                 0      0       0       9        0.0%
  1848                           ;!BITBANK3            50      0       0      10        0.0%
  1849                           ;!BITSFR9              0      0       0      10        0.0%
  1850                           ;!SFR9                 0      0       0      10        0.0%
  1851                           ;!BANK3               50      0      4B      11       93.8%
  1852                           ;!BITSFR10             0      0       0      11        0.0%
  1853                           ;!SFR10                0      0       0      11        0.0%
  1854                           ;!BITBANK4            50      0       0      12        0.0%
  1855                           ;!BITSFR11             0      0       0      12        0.0%
  1856                           ;!SFR11                0      0       0      12        0.0%
  1857                           ;!BANK4               50     2D      2D      13       56.3%
  1858                           ;!BITSFR12             0      0       0      13        0.0%
  1859                           ;!SFR12                0      0       0      13        0.0%
  1860                           ;!BITBANK5            50      0       0      14        0.0%
  1861                           ;!BITSFR13             0      0       0      14        0.0%
  1862                           ;!SFR13                0      0       0      14        0.0%
  1863                           ;!BANK5               50      0       0      15        0.0%
  1864                           ;!BITSFR14             0      0       0      15        0.0%
  1865                           ;!SFR14                0      0       0      15        0.0%
  1866                           ;!BITBANK6            50      0       0      16        0.0%
  1867                           ;!BITSFR15             0      0       0      16        0.0%
  1868                           ;!SFR15                0      0       0      16        0.0%
  1869                           ;!BANK6               50      0       0      17        0.0%
  1870                           ;!BITSFR16             0      0       0      17        0.0%
  1871                           ;!SFR16                0      0       0      17        0.0%
  1872                           ;!BITBANK7            50      0       0      18        0.0%
  1873                           ;!BITSFR17             0      0       0      18        0.0%
  1874                           ;!SFR17                0      0       0      18        0.0%
  1875                           ;!BANK7               50      0       0      19        0.0%
  1876                           ;!BITSFR18             0      0       0      19        0.0%
  1877                           ;!SFR18                0      0       0      19        0.0%
  1878                           ;!BITSFR19             0      0       0      20        0.0%
  1879                           ;!SFR19                0      0       0      20        0.0%
  1880                           ;!ABS                  0      0     119      20        0.0%
  1881                           ;!BITBANK8            50      0       0      21        0.0%
  1882                           ;!BITSFR20             0      0       0      21        0.0%
  1883                           ;!SFR20                0      0       0      21        0.0%
  1884                           ;!BANK8               50      0       0      22        0.0%
  1885                           ;!BITSFR21             0      0       0      22        0.0%
  1886                           ;!SFR21                0      0       0      22        0.0%
  1887                           ;!BITBANK9            50      0       0      23        0.0%
  1888                           ;!BITSFR22             0      0       0      23        0.0%
  1889                           ;!SFR22                0      0       0      23        0.0%
  1890                           ;!BANK9               50      0       0      24        0.0%
  1891                           ;!BITSFR23             0      0       0      24        0.0%
  1892                           ;!SFR23                0      0       0      24        0.0%
  1893                           ;!BITBANK10           50      0       0      25        0.0%
  1894                           ;!BITSFR24             0      0       0      25        0.0%
  1895                           ;!SFR24                0      0       0      25        0.0%
  1896                           ;!BANK10              50      0       0      26        0.0%
  1897                           ;!BITSFR25             0      0       0      26        0.0%
  1898                           ;!SFR25                0      0       0      26        0.0%
  1899                           ;!BITBANK11           50      0       0      27        0.0%
  1900                           ;!BITSFR26             0      0       0      27        0.0%
  1901                           ;!SFR26                0      0       0      27        0.0%
  1902                           ;!BANK11              50      0       0      28        0.0%
  1903                           ;!BITSFR27             0      0       0      28        0.0%
  1904                           ;!SFR27                0      0       0      28        0.0%
  1905                           ;!BITBANK12           30      0       0      29        0.0%
  1906                           ;!BITSFR28             0      0       0      29        0.0%
  1907                           ;!SFR28                0      0       0      29        0.0%
  1908                           ;!BANK12              30      0       0      30        0.0%
  1909                           ;!BITSFR29             0      0       0      30        0.0%
  1910                           ;!SFR29                0      0       0      30        0.0%
  1911                           ;!BITSFR30             0      0       0      31        0.0%
  1912                           ;!SFR30                0      0       0      31        0.0%
  1913                           ;!DATA                 0      0     119      31        0.0%
  1914                           ;!BITSFR31             0      0       0      32        0.0%
  1915                           ;!SFR31                0      0       0      32        0.0%
  1916                           
  1917                           	global	_main
  1918                           
  1919 ;; *************** function _main *****************
  1920 ;; Defined at:
  1921 ;;		line 203 in file "161518_temp_main.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;		None
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  wReadout       20    6[BANK4 ] unsigned char [20]
  1926 ;;  wConv           4    2[BANK4 ] unsigned char [4]
  1927 ;;  wCounter        2   40[BANK4 ] int 
  1928 ;;  wDebounceDow    2   38[BANK4 ] unsigned short 
  1929 ;;  wDebounceUp     2   36[BANK4 ] unsigned short 
  1930 ;;  wDebounceEnt    2   34[BANK4 ] unsigned short 
  1931 ;;  wTemperature    2   31[BANK4 ] short 
  1932 ;;  wHumidityPre    2   29[BANK4 ] short 
  1933 ;;  wIterationCo    2   26[BANK4 ] unsigned short 
  1934 ;;  wTemp           2    0[BANK4 ] int 
  1935 ;;  wMenu           1   44[BANK4 ] unsigned char 
  1936 ;;  wDownBottonP    1   43[BANK4 ] unsigned char 
  1937 ;;  wUpBottonPre    1   42[BANK4 ] unsigned char 
  1938 ;;  wEnterBotton    1   33[BANK4 ] unsigned char 
  1939 ;;  wMenuPrev       1   28[BANK4 ] unsigned char 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1944 ;; Tracked objects:
  1945 ;;		On entry : B1F/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  1949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1950 ;;      Locals:         0       0       0       0       0      45       0       0       0       0       0       0       
       0       0
  1951 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  1952 ;;      Totals:         0       2       0       0       0      45       0       0       0       0       0       0       
       0       0
  1953 ;;Total ram usage:       47 bytes
  1954 ;; Hardware stack levels required when called:   10
  1955 ;; This function calls:
  1956 ;;		_Add_Trace
  1957 ;;		_Debounce
  1958 ;;		_GetTemp
  1959 ;;		_PrintLog
  1960 ;;		_SetToGetTemp
  1961 ;;		_ToggleBitRB5
  1962 ;;		_clearDisplay
  1963 ;;		_initLCD
  1964 ;;		_lcdWriteText
  1965 ;;		_memset
  1966 ;;		_moveCursorToHome
  1967 ;;		_powerOnLcd
  1968 ;;		_printEM1812
  1969 ;;		_setCursorOff
  1970 ;;		_setCursorPosition
  1971 ;;		_setNotBlinkingCursor
  1972 ;; This function is called by:
  1973 ;;		Startup code after reset
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  1977                           	file	"161518_temp_main.c"
  1978                           	line	203
  1979                           global __pmaintext
  1980                           __pmaintext:	;psect for function _main
  1981  01BD                     psect	maintext
  1982                           	file	"161518_temp_main.c"
  1983                           	line	203
  1984                           	global	__size_of_main
  1985                           	__size_of_main	equ	__end_of_main-_main
  1986  02E9                     	
  1987                           _main:	
  1988  01BD                     ;incstack = 0
  1989                           	opt	stack 6
  1990                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1991                           	line	206
  1992                           	
  1993                           l3389:	
  1994  01BD                     	movlb 4	; select bank4
  1995  01BD  0024               	clrf	(main@wHumidityPrev)^0200h
  1996  01BE  01BD               	clrf	(main@wHumidityPrev+1)^0200h
  1997  01BF  01BE               	line	207
  1998                           	clrf	(main@wTemperaturePrev)^0200h
  1999  01C0  01BF               	clrf	(main@wTemperaturePrev+1)^0200h
  2000  01C1  01C0               	line	208
  2001                           	
  2002                           l3391:	
  2003  01C2                     	movlw	low(_wInterruptText)
  2004  01C2  30A0               	movlb 0	; select bank0
  2005  01C3  0020               	movwf	(memset@dest)
  2006  01C4  00B4               	movlw	high(_wInterruptText)
  2007  01C5  3001               	movwf	(memset@dest+1)
  2008  01C6  00B5               	movlw	0
  2009  01C7  3000               	movwf	(memset@c)
  2010  01C8  00B6               	movwf	(memset@c+1)
  2011  01C9  00B7               	movlw	04Bh
  2012  01CA  304B               	movwf	(memset@n)
  2013  01CB  00B8               	movlw	0
  2014  01CC  3000               	movwf	((memset@n))+1
  2015  01CD  00B9               	fcall	_memset
  2016  01CE  3184  24A6  3181   	line	210
  2017                           	
  2018                           l3393:	
  2019  01D1                     	movlw	(0Fh & ((1<<4)-1))<<3
  2020  01D1  3078               	movlb 1	; select bank1
  2021  01D2  0021               	iorwf	(153)^080h,f	;volatile
  2022  01D3  0499               	line	211
  2023                           	
  2024                           l3395:	
  2025  01D4                     	movlw	(03h & ((1<<2)-1))<<0
  2026  01D4  3003               	iorwf	(153)^080h,f	;volatile
  2027  01D5  0499               	line	212
  2028                           	
  2029                           l3397:	
  2030  01D6                     	bcf	(11),7	;volatile
  2031  01D6  138B               	line	214
  2032                           	
  2033                           l3399:	
  2034  01D7                     	movlb 4	; select bank4
  2035  01D7  0024               	clrf	(main@wUpBottonPressed)^0200h
  2036  01D8  01CA               	line	215
  2037                           	
  2038                           l3401:	
  2039  01D9                     	clrf	(main@wDownBottonPressed)^0200h
  2040  01D9  01CB               	line	216
  2041                           	
  2042                           l3403:	
  2043  01DA                     	clrf	(main@wEnterBottonPressed)^0200h
  2044  01DA  01C1               	line	218
  2045                           	
  2046                           l3405:	
  2047  01DB                     	clrf	(main@wMenu)^0200h
  2048  01DB  01CC               	line	219
  2049                           	
  2050                           l3407:	
  2051  01DC                     	clrf	(main@wMenuPrev)^0200h
  2052  01DC  01BC               	incf	(main@wMenuPrev)^0200h,f
  2053  01DD  0ABC               	line	221
  2054                           	
  2055                           l3409:	
  2056  01DE                     	clrf	(main@wIterationCounter)^0200h
  2057  01DE  01BA               	clrf	(main@wIterationCounter+1)^0200h
  2058  01DF  01BB               	line	222
  2059                           	
  2060                           l3411:	
  2061  01E0                     	clrf	(main@wDebounceEnter)^0200h
  2062  01E0  01C2               	clrf	(main@wDebounceEnter+1)^0200h
  2063  01E1  01C3               	line	223
  2064                           	
  2065                           l3413:	
  2066  01E2                     	clrf	(main@wDebounceUp)^0200h
  2067  01E2  01C4               	clrf	(main@wDebounceUp+1)^0200h
  2068  01E3  01C5               	line	224
  2069                           	
  2070                           l3415:	
  2071  01E4                     	clrf	(main@wDebounceDown)^0200h
  2072  01E4  01C6               	clrf	(main@wDebounceDown+1)^0200h
  2073  01E5  01C7               	line	226
  2074                           	
  2075                           l3417:	
  2076  01E6                     	movlb 0	; select bank0
  2077  01E6  0020               	clrf	(12)	;volatile
  2078  01E7  018C               	line	230
  2079                           	
  2080                           l3419:	
  2081  01E8                     	movlw	((0 & ((1<<2)-1))<<6)|not (((1<<2)-1)<<6)
  2082  01E8  303F               	andwf	(24),f	;volatile
  2083  01E9  0598               	line	231
  2084                           	
  2085                           l3421:	
  2086  01EA                     	bcf	(24),3	;volatile
  2087  01EA  1198               	line	232
  2088                           	
  2089                           l3423:	
  2090  01EB                     	movlw	(03h & ((1<<2)-1))<<4
  2091  01EB  3030               	iorwf	(24),f	;volatile
  2092  01EC  0498               	line	233
  2093                           	
  2094                           l3425:	
  2095  01ED                     	bcf	(24),2	;volatile
  2096  01ED  1118               	line	234
  2097                           	
  2098                           l3427:	
  2099  01EE                     	bsf	(24),0	;volatile
  2100  01EE  1418               	line	235
  2101                           	
  2102                           l3429:	
  2103  01EF                     	movlb 1	; select bank1
  2104  01EF  0021               	bsf	(145)^080h,0	;volatile
  2105  01F0  1411               	line	239
  2106                           	
  2107                           l3431:	
  2108  01F1                     	movf	(149)^080h,w	;volatile
  2109  01F1  0815               	andlw	not (((1<<3)-1)<<0)
  2110  01F2  39F8               	iorlw	(02h & ((1<<3)-1))<<0
  2111  01F3  3802               	movwf	(149)^080h	;volatile
  2112  01F4  0095               	line	240
  2113                           	
  2114                           l3433:	
  2115  01F5                     	bcf	(149)^080h,5	;volatile
  2116  01F5  1295               	line	241
  2117                           	
  2118                           l3435:	
  2119  01F6                     	bcf	(149)^080h,3	;volatile
  2120  01F6  1195               	line	242
  2121                           	
  2122                           l3437:	
  2123  01F7                     	bcf	(11),5	;volatile
  2124  01F7  128B               	line	246
  2125                           	
  2126                           l3439:	
  2127  01F8                     	movlb 0	; select bank0
  2128  01F8  0020               	clrf	(13)	;volatile
  2129  01F9  018D               	line	247
  2130                           	
  2131                           l3441:	
  2132  01FA                     	movlb 3	; select bank3
  2133  01FA  0023               	clrf	(397)^0180h	;volatile
  2134  01FB  018D               	line	248
  2135                           	
  2136                           l3443:	
  2137  01FC                     	movlw	low(0Fh)
  2138  01FC  300F               	movlb 1	; select bank1
  2139  01FD  0021               	movwf	(141)^080h	;volatile
  2140  01FE  008D               	line	249
  2141                           	
  2142                           l3445:	
  2143  01FF                     	movlw	low(0Fh)
  2144  01FF  300F               	movlb 4	; select bank4
  2145  0200  0024               	movwf	(525)^0200h	;volatile
  2146  0201  008D               	line	250
  2147                           	
  2148                           l3447:	
  2149  0202                     	movlb 1	; select bank1
  2150  0202  0021               	bcf	(149)^080h,7	;volatile
  2151  0203  1395               	line	253
  2152                           	
  2153                           l3449:	
  2154  0204                     	movlw	low(_wI2CTxBuffer)
  2155  0204  30A7               	movlb 0	; select bank0
  2156  0205  0020               	movwf	(memset@dest)
  2157  0206  00B4               	movlw	high(_wI2CTxBuffer)
  2158  0207  3000               	movwf	(memset@dest+1)
  2159  0208  00B5               	movlw	0
  2160  0209  3000               	movwf	(memset@c)
  2161  020A  00B6               	movwf	(memset@c+1)
  2162  020B  00B7               	movlw	014h
  2163  020C  3014               	movwf	(memset@n)
  2164  020D  00B8               	movlw	0
  2165  020E  3000               	movwf	((memset@n))+1
  2166  020F  00B9               	fcall	_memset
  2167  0210  3184  24A6  3181   	line	254
  2168                           	
  2169                           l3451:	
  2170  0213                     	movlb 0	; select bank0
  2171  0213  0020               	clrf	(_wI2CTxBufferSize)
  2172  0214  01D5               	line	255
  2173                           	
  2174                           l3453:	
  2175  0215                     	clrf	(_wI2CTxSendPos)
  2176  0215  01D3               	line	257
  2177                           	
  2178                           l3455:	
  2179  0216                     	movlb 3	; select bank3
  2180  0216  0023               	clrf	(396)^0180h	;volatile
  2181  0217  018C               	line	258
  2182                           	
  2183                           l3457:	
  2184  0218                     	movlb 1	; select bank1
  2185  0218  0021               	clrf	(140)^080h	;volatile
  2186  0219  018C               	line	260
  2187                           	
  2188                           l3459:	
  2189  021A                     	clrf	(142)^080h	;volatile
  2190  021A  018E               	line	261
  2191                           	
  2192                           l3461:	
  2193  021B                     	movlw	low(0FFh)
  2194  021B  30FF               	movwf	(142)^080h	;volatile
  2195  021C  008E               	line	262
  2196                           	
  2197                           l3463:	
  2198  021D                     	movlb 3	; select bank3
  2199  021D  0023               	bcf	(398)^0180h,3	;volatile
  2200  021E  118E               	line	263
  2201                           	
  2202                           l3465:	
  2203  021F                     	bcf	(398)^0180h,4	;volatile
  2204  021F  120E               	line	268
  2205                           	
  2206                           l3467:	
  2207  0220                     	movlb 4	; select bank4
  2208  0220  0024               	movf	(533)^0200h,w	;volatile
  2209  0221  0815               	andlw	not (((1<<4)-1)<<0)
  2210  0222  39F0               	iorlw	(08h & ((1<<4)-1))<<0
  2211  0223  3808               	movwf	(533)^0200h	;volatile
  2212  0224  0095               	line	269
  2213                           	
  2214                           l3469:	
  2215  0225                     	movlw	low(01Fh)
  2216  0225  301F               	movwf	(530)^0200h	;volatile
  2217  0226  0092               	line	270
  2218                           	
  2219                           l3471:	
  2220  0227                     	bsf	(533)^0200h,5	;volatile
  2221  0227  1695               	line	271
  2222                           	
  2223                           l3473:	
  2224  0228                     	bcf	(534)^0200h,7	;volatile
  2225  0228  1396               	line	272
  2226                           	
  2227                           l3475:	
  2228  0229                     	bsf	(534)^0200h,4	;volatile
  2229  0229  1616               	line	273
  2230                           	
  2231                           l3477:	
  2232  022A                     	bsf	(535)^0200h,6	;volatile
  2233  022A  1717               	line	274
  2234                           	
  2235                           l3479:	
  2236  022B                     	bsf	(535)^0200h,5	;volatile
  2237  022B  1697               	line	275
  2238                           	
  2239                           l3481:	
  2240  022C                     	bsf	(535)^0200h,3	;volatile
  2241  022C  1597               	line	276
  2242                           	
  2243                           l3483:	
  2244  022D                     	bcf	(535)^0200h,1	;volatile
  2245  022D  1097               	line	277
  2246                           	
  2247                           l3485:	
  2248  022E                     	bcf	(535)^0200h,0	;volatile
  2249  022E  1017               	line	278
  2250                           	
  2251                           l3487:	
  2252  022F                     	bcf	(532)^0200h,6	;volatile
  2253  022F  1314               	line	280
  2254                           	
  2255                           l3489:	
  2256  0230                     	bsf	(11),6	;volatile
  2257  0230  170B               	line	281
  2258                           	
  2259                           l3491:	
  2260  0231                     	movlb 1	; select bank1
  2261  0231  0021               	bsf	(145)^080h,3	;volatile
  2262  0232  1591               	line	282
  2263                           	
  2264                           l3493:	
  2265  0233                     	bsf	(146)^080h,3	;volatile
  2266  0233  1592               	line	284
  2267                           	
  2268                           l3495:	
  2269  0234                     	bsf	(11),7	;volatile
  2270  0234  178B               	line	287
  2271                           	
  2272                           l3497:	
  2273  0235                     	fcall	_initLCD
  2274  0235  318F  27B0  3181   	line	288
  2275                           	
  2276                           l3499:	
  2277  0238                     	fcall	_clearDisplay
  2278  0238  318C  24A2  3181   	line	289
  2279                           	
  2280                           l3501:	
  2281  023B                     	opt asmopt_push
  2282                           opt asmopt_off
  2283                           movlw  3
  2284  023B  3003               	movlb 0	; select bank0
  2285  023C  0020               movwf	((??_main+0)+0+1),f
  2286  023D  00CC               movlw	8
  2287  023E  3008               movwf	((??_main+0)+0),f
  2288  023F  00CB               	movlw	119
  2289  0240  3077               u2857:
  2290  0241                     decfsz	wreg
  2291  0241  0B89               	goto	u2857
  2292  0242  2A41               	decfsz	((??_main+0)+0),f
  2293  0243  0BCB               	goto	u2857
  2294  0244  2A41               	decfsz	((??_main+0)+0+1),f
  2295  0245  0BCC               	goto	u2857
  2296  0246  2A41               opt asmopt_pop
  2297                           
  2298                           	line	290
  2299                           	
  2300                           l3503:	
  2301  0247                     	fcall	_powerOnLcd
  2302  0247  318C  24D6  3181   	line	291
  2303                           	
  2304                           l3505:	
  2305  024A                     	opt asmopt_push
  2306                           opt asmopt_off
  2307                           movlw  3
  2308  024A  3003               	movlb 0	; select bank0
  2309  024B  0020               movwf	((??_main+0)+0+1),f
  2310  024C  00CC               movlw	8
  2311  024D  3008               movwf	((??_main+0)+0),f
  2312  024E  00CB               	movlw	119
  2313  024F  3077               u2867:
  2314  0250                     decfsz	wreg
  2315  0250  0B89               	goto	u2867
  2316  0251  2A50               	decfsz	((??_main+0)+0),f
  2317  0252  0BCB               	goto	u2867
  2318  0253  2A50               	decfsz	((??_main+0)+0+1),f
  2319  0254  0BCC               	goto	u2867
  2320  0255  2A50               opt asmopt_pop
  2321                           
  2322                           	line	292
  2323                           	
  2324                           l3507:	
  2325  0256                     	fcall	_setCursorOff
  2326  0256  318C  24E1  3181   	line	293
  2327                           	
  2328                           l3509:	
  2329  0259                     	opt asmopt_push
  2330                           opt asmopt_off
  2331                           movlw  3
  2332  0259  3003               	movlb 0	; select bank0
  2333  025A  0020               movwf	((??_main+0)+0+1),f
  2334  025B  00CC               movlw	8
  2335  025C  3008               movwf	((??_main+0)+0),f
  2336  025D  00CB               	movlw	119
  2337  025E  3077               u2877:
  2338  025F                     decfsz	wreg
  2339  025F  0B89               	goto	u2877
  2340  0260  2A5F               	decfsz	((??_main+0)+0),f
  2341  0261  0BCB               	goto	u2877
  2342  0262  2A5F               	decfsz	((??_main+0)+0+1),f
  2343  0263  0BCC               	goto	u2877
  2344  0264  2A5F               opt asmopt_pop
  2345                           
  2346                           	line	294
  2347                           	
  2348                           l3511:	
  2349  0265                     	fcall	_moveCursorToHome
  2350  0265  318C  24B9  3181   	line	295
  2351                           	
  2352                           l3513:	
  2353  0268                     	opt asmopt_push
  2354                           opt asmopt_off
  2355                           movlw  3
  2356  0268  3003               	movlb 0	; select bank0
  2357  0269  0020               movwf	((??_main+0)+0+1),f
  2358  026A  00CC               movlw	8
  2359  026B  3008               movwf	((??_main+0)+0),f
  2360  026C  00CB               	movlw	119
  2361  026D  3077               u2887:
  2362  026E                     decfsz	wreg
  2363  026E  0B89               	goto	u2887
  2364  026F  2A6E               	decfsz	((??_main+0)+0),f
  2365  0270  0BCB               	goto	u2887
  2366  0271  2A6E               	decfsz	((??_main+0)+0+1),f
  2367  0272  0BCC               	goto	u2887
  2368  0273  2A6E               opt asmopt_pop
  2369                           
  2370                           	line	296
  2371                           	
  2372                           l3515:	
  2373  0274                     	fcall	_setNotBlinkingCursor
  2374  0274  318C  24EC  3181   	line	297
  2375                           	
  2376                           l3517:	
  2377  0277                     	opt asmopt_push
  2378                           opt asmopt_off
  2379                           movlw  3
  2380  0277  3003               	movlb 0	; select bank0
  2381  0278  0020               movwf	((??_main+0)+0+1),f
  2382  0279  00CC               movlw	8
  2383  027A  3008               movwf	((??_main+0)+0),f
  2384  027B  00CB               	movlw	119
  2385  027C  3077               u2897:
  2386  027D                     decfsz	wreg
  2387  027D  0B89               	goto	u2897
  2388  027E  2A7D               	decfsz	((??_main+0)+0),f
  2389  027F  0BCB               	goto	u2897
  2390  0280  2A7D               	decfsz	((??_main+0)+0+1),f
  2391  0281  0BCC               	goto	u2897
  2392  0282  2A7D               opt asmopt_pop
  2393                           
  2394                           	line	323
  2395                           	
  2396                           l3519:	
  2397  0283                     	movlb 4	; select bank4
  2398  0283  0024               	clrf	(main@wCounter)^0200h
  2399  0284  01C8               	clrf	(main@wCounter+1)^0200h
  2400  0285  01C9               	line	324
  2401                           	movlb 1	; select bank1
  2402  0286  0021               	movf	(main@F2250+3)^080h,w
  2403  0287  0844               	movlb 4	; select bank4
  2404  0288  0024               	movwf	(main@wConv+3)^0200h
  2405  0289  00A5               	movlb 1	; select bank1
  2406  028A  0021               	movf	(main@F2250+2)^080h,w
  2407  028B  0843               	movlb 4	; select bank4
  2408  028C  0024               	movwf	(main@wConv+2)^0200h
  2409  028D  00A4               	movlb 1	; select bank1
  2410  028E  0021               	movf	(main@F2250+1)^080h,w
  2411  028F  0842               	movlb 4	; select bank4
  2412  0290  0024               	movwf	(main@wConv+1)^0200h
  2413  0291  00A3               	movlb 1	; select bank1
  2414  0292  0021               	movf	(main@F2250)^080h,w
  2415  0293  0841               	movlb 4	; select bank4
  2416  0294  0024               	movwf	(main@wConv)^0200h
  2417  0295  00A2               
  2418                           	line	325
  2419                           	
  2420                           l3521:	
  2421  0296                     	clrf	(main@wTemp)^0200h
  2422  0296  01A0               	clrf	(main@wTemp+1)^0200h
  2423  0297  01A1               	line	328
  2424                           	
  2425                           l3523:	
  2426  0298                     	fcall	_clearDisplay
  2427  0298  318C  24A2  3181   	line	329
  2428                           	
  2429                           l3525:	
  2430  029B                     	fcall	_moveCursorToHome
  2431  029B  318C  24B9  3181   	line	330
  2432                           	
  2433                           l3527:	
  2434  029E                     	opt asmopt_push
  2435                           opt asmopt_off
  2436                           movlw	156
  2437  029E  309C               	movlb 0	; select bank0
  2438  029F  0020               movwf	((??_main+0)+0),f
  2439  02A0  00CB               	movlw	215
  2440  02A1  30D7               u2907:
  2441  02A2                     decfsz	wreg
  2442  02A2  0B89               	goto	u2907
  2443  02A3  2AA2               	decfsz	((??_main+0)+0),f
  2444  02A4  0BCB               	goto	u2907
  2445  02A5  2AA2               opt asmopt_pop
  2446                           
  2447                           	goto	l3529
  2448  02A6  2AA7               	line	331
  2449                           	
  2450                           l167:	
  2451  02A7                     	line	334
  2452                           	
  2453                           l3529:	
  2454  02A7                     	movlb 1	; select bank1
  2455  02A7  0021               	movf	(_wHumidity+1)^080h,w
  2456  02A8  0823               	movlb 4	; select bank4
  2457  02A9  0024               	xorwf	(main@wHumidityPrev+1)^0200h,w
  2458  02AA  063E               	skipz
  2459  02AB  1D03               	goto	u2415
  2460  02AC  2AB1               	movlb 1	; select bank1
  2461  02AD  0021               	movf	(_wHumidity)^080h,w
  2462  02AE  0822               	movlb 4	; select bank4
  2463  02AF  0024               	xorwf	(main@wHumidityPrev)^0200h,w
  2464  02B0  063D               u2415:
  2465  02B1                     
  2466                           	skipz
  2467  02B1  1D03               	goto	u2411
  2468  02B2  2AB4               	goto	u2410
  2469  02B3  2AB5               u2411:
  2470  02B4                     	goto	l3533
  2471  02B4  2AC4               u2410:
  2472  02B5                     	
  2473                           l3531:	
  2474  02B5                     	movlb 1	; select bank1
  2475  02B5  0021               	movf	(_wTemperature+1)^080h,w
  2476  02B6  0821               	movlb 4	; select bank4
  2477  02B7  0024               	xorwf	(main@wTemperaturePrev+1)^0200h,w
  2478  02B8  0640               	skipz
  2479  02B9  1D03               	goto	u2425
  2480  02BA  2ABF               	movlb 1	; select bank1
  2481  02BB  0021               	movf	(_wTemperature)^080h,w
  2482  02BC  0820               	movlb 4	; select bank4
  2483  02BD  0024               	xorwf	(main@wTemperaturePrev)^0200h,w
  2484  02BE  063F               u2425:
  2485  02BF                     
  2486                           	skipnz
  2487  02BF  1903               	goto	u2421
  2488  02C0  2AC2               	goto	u2420
  2489  02C1  2AC3               u2421:
  2490  02C2                     	goto	l3551
  2491  02C2  2B31               u2420:
  2492  02C3                     	goto	l3533
  2493  02C3  2AC4               	
  2494                           l170:	
  2495  02C4                     	line	336
  2496                           	
  2497                           l3533:	
  2498  02C4                     	movlb 1	; select bank1
  2499  02C4  0021               	movf	(_wHumidity+1)^080h,w
  2500  02C5  0823               	movlb 4	; select bank4
  2501  02C6  0024               	movwf	(main@wHumidityPrev+1)^0200h
  2502  02C7  00BE               	movlb 1	; select bank1
  2503  02C8  0021               	movf	(_wHumidity)^080h,w
  2504  02C9  0822               	movlb 4	; select bank4
  2505  02CA  0024               	movwf	(main@wHumidityPrev)^0200h
  2506  02CB  00BD               	line	337
  2507                           	movlb 1	; select bank1
  2508  02CC  0021               	movf	(_wTemperature+1)^080h,w
  2509  02CD  0821               	movlb 4	; select bank4
  2510  02CE  0024               	movwf	(main@wTemperaturePrev+1)^0200h
  2511  02CF  00C0               	movlb 1	; select bank1
  2512  02D0  0021               	movf	(_wTemperature)^080h,w
  2513  02D1  0820               	movlb 4	; select bank4
  2514  02D2  0024               	movwf	(main@wTemperaturePrev)^0200h
  2515  02D3  00BF               	line	338
  2516                           	
  2517                           l3535:	
  2518  02D4                     	movlb 0	; select bank0
  2519  02D4  0020               	clrf	(setCursorPosition@iPosition)
  2520  02D5  01B9               	movlw	low(02h)
  2521  02D6  3002               	fcall	_setCursorPosition
  2522  02D7  3187  2731  3181   	line	339
  2523                           	
  2524                           l3537:	
  2525  02DA                     	movlb 4	; select bank4
  2526  02DA  0024               	movf	(main@wHumidityPrev+1)^0200h,w
  2527  02DB  083E               	movlb 0	; select bank0
  2528  02DC  0020               	movwf	(printEM1812@wVariable+1)
  2529  02DD  00BE               	movlb 4	; select bank4
  2530  02DE  0024               	movf	(main@wHumidityPrev)^0200h,w
  2531  02DF  083D               	movlb 0	; select bank0
  2532  02E0  0020               	movwf	(printEM1812@wVariable)
  2533  02E1  00BD               	movlw	(low(main@wReadout|((0x2)<<8)))&0ffh
  2534  02E2  3026               	movwf	(??_main+0)+0
  2535  02E3  00CB               	movf	(??_main+0)+0,w
  2536  02E4  084B               	movwf	(printEM1812@oTextOut)
  2537  02E5  00BF               	fcall	_printEM1812
  2538  02E6  3185  2577  3181   	line	340
  2539                           	
  2540                           l3539:	
  2541  02E9                     	movlw	low(04Bh)
  2542  02E9  304B               	movlb 0	; select bank0
  2543  02EA  0020               	movwf	(??_main+0)+0
  2544  02EB  00CB               	movf	(??_main+0)+0,w
  2545  02EC  084B               	movwf	(Add_Trace@iSizeOfoText)
  2546  02ED  00C7               	movlw	low(((STR_1)|8000h))
  2547  02EE  3040               	movwf	(Add_Trace@iText)
  2548  02EF  00C8               	movlw	high(((STR_1)|8000h))
  2549  02F0  3090               	movwf	((Add_Trace@iText))+1
  2550  02F1  00C9               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2551  02F2  30A0               	fcall	_Add_Trace
  2552  02F3  318F  2721  3181   	line	341
  2553                           	
  2554                           l3541:	
  2555  02F6                     	movlw	low(04Bh)
  2556  02F6  304B               	movlb 0	; select bank0
  2557  02F7  0020               	movwf	(??_main+0)+0
  2558  02F8  00CB               	movf	(??_main+0)+0,w
  2559  02F9  084B               	movwf	(Add_Trace@iSizeOfoText)
  2560  02FA  00C7               	movlw	low(main@wReadout)
  2561  02FB  3026               	movwf	(Add_Trace@iText)
  2562  02FC  00C8               	movlw	high(main@wReadout)
  2563  02FD  3002               	movwf	(Add_Trace@iText+1)
  2564  02FE  00C9               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2565  02FF  30A0               	fcall	_Add_Trace
  2566  0300  318F  2721  3181   	line	342
  2567                           	
  2568                           l3543:	
  2569  0303                     	movlb 4	; select bank4
  2570  0303  0024               	movf	(main@wTemperaturePrev+1)^0200h,w
  2571  0304  0840               	movlb 0	; select bank0
  2572  0305  0020               	movwf	(printEM1812@wVariable+1)
  2573  0306  00BE               	movlb 4	; select bank4
  2574  0307  0024               	movf	(main@wTemperaturePrev)^0200h,w
  2575  0308  083F               	movlb 0	; select bank0
  2576  0309  0020               	movwf	(printEM1812@wVariable)
  2577  030A  00BD               	movlw	(low(main@wReadout|((0x2)<<8)))&0ffh
  2578  030B  3026               	movwf	(??_main+0)+0
  2579  030C  00CB               	movf	(??_main+0)+0,w
  2580  030D  084B               	movwf	(printEM1812@oTextOut)
  2581  030E  00BF               	fcall	_printEM1812
  2582  030F  3185  2577  3181   	line	343
  2583                           	
  2584                           l3545:	
  2585  0312                     	movlw	low(04Bh)
  2586  0312  304B               	movlb 0	; select bank0
  2587  0313  0020               	movwf	(??_main+0)+0
  2588  0314  00CB               	movf	(??_main+0)+0,w
  2589  0315  084B               	movwf	(Add_Trace@iSizeOfoText)
  2590  0316  00C7               	movlw	low(((STR_2)|8000h))
  2591  0317  304C               	movwf	(Add_Trace@iText)
  2592  0318  00C8               	movlw	high(((STR_2)|8000h))
  2593  0319  3090               	movwf	((Add_Trace@iText))+1
  2594  031A  00C9               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2595  031B  30A0               	fcall	_Add_Trace
  2596  031C  318F  2721  3181   	line	344
  2597                           	
  2598                           l3547:	
  2599  031F                     	movlw	low(04Bh)
  2600  031F  304B               	movlb 0	; select bank0
  2601  0320  0020               	movwf	(??_main+0)+0
  2602  0321  00CB               	movf	(??_main+0)+0,w
  2603  0322  084B               	movwf	(Add_Trace@iSizeOfoText)
  2604  0323  00C7               	movlw	low(main@wReadout)
  2605  0324  3026               	movwf	(Add_Trace@iText)
  2606  0325  00C8               	movlw	high(main@wReadout)
  2607  0326  3002               	movwf	(Add_Trace@iText+1)
  2608  0327  00C9               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2609  0328  30A0               	fcall	_Add_Trace
  2610  0329  318F  2721  3181   	line	345
  2611                           	
  2612                           l3549:	
  2613  032C                     	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2614  032C  30A0               	fcall	_PrintLog
  2615  032D  318E  267D  3181   	goto	l3551
  2616  0330  2B31               	line	346
  2617                           	
  2618                           l168:	
  2619  0331                     	line	348
  2620                           	
  2621                           l3551:	
  2622  0331                     	movlb 4	; select bank4
  2623  0331  0024               	movf	(main@wMenu)^0200h,w
  2624  0332  084C               	xorwf	(main@wMenuPrev)^0200h,w
  2625  0333  063C               	skipnz
  2626  0334  1903               	goto	u2431
  2627  0335  2B37               	goto	u2430
  2628  0336  2B38               u2431:
  2629  0337                     	goto	l3635
  2630  0337  2C33               u2430:
  2631  0338                     	line	350
  2632                           	
  2633                           l3553:	
  2634  0338                     	movf	(main@wMenu)^0200h,w
  2635  0338  084C               	movlb 0	; select bank0
  2636  0339  0020               	movwf	(??_main+0)+0
  2637  033A  00CB               	movf	(??_main+0)+0,w
  2638  033B  084B               	movlb 4	; select bank4
  2639  033C  0024               	movwf	(main@wMenuPrev)^0200h
  2640  033D  00BC               	line	351
  2641                           	goto	l3565
  2642  033E  2B7C               	line	353
  2643                           	
  2644                           l173:	
  2645  033F                     	line	354
  2646                           	
  2647                           l3555:	
  2648  033F                     	movlb 0	; select bank0
  2649  033F  0020               	clrf	(setCursorPosition@iPosition)
  2650  0340  01B9               	movlw	low(0)
  2651  0341  3000               	fcall	_setCursorPosition
  2652  0342  3187  2731  3181   	line	355
  2653                           	movlw	low(((STR_3)|8000h))
  2654  0345  3010               	movlb 0	; select bank0
  2655  0346  0020               	movwf	(lcdWriteText@iText)
  2656  0347  00C1               	movlw	high(((STR_3)|8000h))
  2657  0348  3090               	movwf	((lcdWriteText@iText))+1
  2658  0349  00C2               	fcall	_lcdWriteText
  2659  034A  318D  25FA  3181   	line	356
  2660                           	goto	l3635
  2661  034D  2C33               	line	357
  2662                           	
  2663                           l175:	
  2664  034E                     	line	358
  2665                           	
  2666                           l3557:	
  2667  034E                     	movlb 0	; select bank0
  2668  034E  0020               	clrf	(setCursorPosition@iPosition)
  2669  034F  01B9               	movlw	low(0)
  2670  0350  3000               	fcall	_setCursorPosition
  2671  0351  3187  2731  3181   	line	359
  2672                           	movlw	low(((STR_4)|8000h))
  2673  0354  3030               	movlb 0	; select bank0
  2674  0355  0020               	movwf	(lcdWriteText@iText)
  2675  0356  00C1               	movlw	high(((STR_4)|8000h))
  2676  0357  3090               	movwf	((lcdWriteText@iText))+1
  2677  0358  00C2               	fcall	_lcdWriteText
  2678  0359  318D  25FA  3181   	line	360
  2679                           	goto	l3635
  2680  035C  2C33               	line	361
  2681                           	
  2682                           l176:	
  2683  035D                     	line	362
  2684                           	
  2685                           l3559:	
  2686  035D                     	movlb 0	; select bank0
  2687  035D  0020               	clrf	(setCursorPosition@iPosition)
  2688  035E  01B9               	movlw	low(0)
  2689  035F  3000               	fcall	_setCursorPosition
  2690  0360  3187  2731  3181   	line	363
  2691                           	movlw	low(((STR_5)|8000h))
  2692  0363  3020               	movlb 0	; select bank0
  2693  0364  0020               	movwf	(lcdWriteText@iText)
  2694  0365  00C1               	movlw	high(((STR_5)|8000h))
  2695  0366  3090               	movwf	((lcdWriteText@iText))+1
  2696  0367  00C2               	fcall	_lcdWriteText
  2697  0368  318D  25FA  3181   	line	364
  2698                           	goto	l3635
  2699  036B  2C33               	line	365
  2700                           	
  2701                           l177:	
  2702  036C                     	line	366
  2703                           	
  2704                           l3561:	
  2705  036C                     	movlb 0	; select bank0
  2706  036C  0020               	clrf	(setCursorPosition@iPosition)
  2707  036D  01B9               	movlw	low(0)
  2708  036E  3000               	fcall	_setCursorPosition
  2709  036F  3187  2731  3181   	line	367
  2710                           	movlw	low(((STR_6)|8000h))
  2711  0372  3000               	movlb 0	; select bank0
  2712  0373  0020               	movwf	(lcdWriteText@iText)
  2713  0374  00C1               	movlw	high(((STR_6)|8000h))
  2714  0375  3090               	movwf	((lcdWriteText@iText))+1
  2715  0376  00C2               	fcall	_lcdWriteText
  2716  0377  318D  25FA  3181   	line	368
  2717                           	goto	l3635
  2718  037A  2C33               	line	369
  2719                           	
  2720                           l3563:	
  2721  037B                     	goto	l3635
  2722  037B  2C33               	
  2723                           l172:	
  2724  037C                     	
  2725                           l3565:	
  2726  037C                     	movlb 4	; select bank4
  2727  037C  0024               	movf	(main@wMenu)^0200h,w
  2728  037D  084C               	movlb 0	; select bank0
  2729  037E  0020               	movwf	(??_main+0)+0
  2730  037F  00CB               	clrf	(??_main+0)+0+1
  2731  0380  01CC               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2732                           ; Switch size 1, requested type "space"
  2733                           ; Number of cases is 1, Range of values is 0 to 0
  2734                           ; switch strategies available:
  2735                           ; Name         Instructions Cycles
  2736                           ; simple_byte            4     3 (average)
  2737                           ; direct_byte            8     6 (fixed)
  2738                           ; jumptable            260     6 (fixed)
  2739                           ;	Chosen strategy is simple_byte
  2740                           
  2741                           	movf 1+(??_main+0)+0,w
  2742  0381  084C               	opt asmopt_push
  2743                           	opt asmopt_off
  2744                           	xorlw	0^0	; case 0
  2745  0382  3A00               	skipnz
  2746  0383  1903               	goto	l3975
  2747  0384  2B86               	goto	l3561
  2748  0385  2B6C               	opt asmopt_pop
  2749                           	
  2750                           l3975:	
  2751  0386                     ; Switch size 1, requested type "space"
  2752                           ; Number of cases is 3, Range of values is 0 to 2
  2753                           ; switch strategies available:
  2754                           ; Name         Instructions Cycles
  2755                           ; simple_byte           10     6 (average)
  2756                           ; direct_byte           12     6 (fixed)
  2757                           ; jumptable            260     6 (fixed)
  2758                           ;	Chosen strategy is simple_byte
  2759                           
  2760                           	movf 0+(??_main+0)+0,w
  2761  0386  084B               	opt asmopt_push
  2762                           	opt asmopt_off
  2763                           	xorlw	0^0	; case 0
  2764  0387  3A00               	skipnz
  2765  0388  1903               	goto	l3555
  2766  0389  2B3F               	xorlw	1^0	; case 1
  2767  038A  3A01               	skipnz
  2768  038B  1903               	goto	l3557
  2769  038C  2B4E               	xorlw	2^1	; case 2
  2770  038D  3A03               	skipnz
  2771  038E  1903               	goto	l3559
  2772  038F  2B5D               	goto	l3561
  2773  0390  2B6C               	opt asmopt_pop
  2774                           
  2775                           	
  2776                           l174:	
  2777  0391                     	goto	l3635
  2778  0391  2C33               	line	370
  2779                           	
  2780                           l171:	
  2781  0392                     	line	372
  2782                           	goto	l3635
  2783  0392  2C33               	line	374
  2784                           	
  2785                           l179:	
  2786  0393                     	line	375
  2787                           	
  2788                           l3567:	
  2789  0393                     	fcall	_SetToGetTemp
  2790  0393  318D  25D1  3181   	line	376
  2791                           	
  2792                           l3569:	
  2793  0396                     	fcall	_ToggleBitRB5
  2794  0396  318C  24C1  3181   	line	377
  2795                           	
  2796                           l3571:	
  2797  0399                     	movlw	low(01h)
  2798  0399  3001               	movlb 0	; select bank0
  2799  039A  0020               	movwf	(??_main+0)+0
  2800  039B  00CB               	movf	(??_main+0)+0,w
  2801  039C  084B               	movlb 1	; select bank1
  2802  039D  0021               	addwf	(_wTempState)^080h,f
  2803  039E  07A4               	line	378
  2804                           	
  2805                           l3573:	
  2806  039F                     	bcf	(11),5	;volatile
  2807  039F  128B               	line	379
  2808                           	
  2809                           l3575:	
  2810  03A0                     	movlb 0	; select bank0
  2811  03A0  0020               	clrf	(21)	;volatile
  2812  03A1  0195               	line	380
  2813                           	
  2814                           l3577:	
  2815  03A2                     	movlb 1	; select bank1
  2816  03A2  0021               	clrf	(_wTimer0Counter)^080h
  2817  03A3  01A5               	line	381
  2818                           	
  2819                           l3579:	
  2820  03A4                     	bsf	(11),5	;volatile
  2821  03A4  168B               	line	382
  2822                           	goto	l3637
  2823  03A5  2C47               	line	383
  2824                           	
  2825                           l181:	
  2826  03A6                     	line	384
  2827                           	
  2828                           l3581:	
  2829  03A6                     		movlw	2
  2830  03A6  3002               	movlb 1	; select bank1
  2831  03A7  0021               	xorwf	((_wTimer0Counter)^080h),w
  2832  03A8  0625               	btfss	status,2
  2833  03A9  1D03               	goto	u2441
  2834  03AA  2BAC               	goto	u2440
  2835  03AB  2BAD               u2441:
  2836  03AC                     	goto	l3637
  2837  03AC  2C47               u2440:
  2838  03AD                     	line	386
  2839                           	
  2840                           l3583:	
  2841  03AD                     	movlw	low(01h)
  2842  03AD  3001               	movlb 0	; select bank0
  2843  03AE  0020               	movwf	(??_main+0)+0
  2844  03AF  00CB               	movf	(??_main+0)+0,w
  2845  03B0  084B               	movlb 1	; select bank1
  2846  03B1  0021               	addwf	(_wTempState)^080h,f
  2847  03B2  07A4               	line	387
  2848                           	
  2849                           l3585:	
  2850  03B3                     	bcf	(11),5	;volatile
  2851  03B3  128B               	goto	l3637
  2852  03B4  2C47               	line	388
  2853                           	
  2854                           l182:	
  2855  03B5                     	line	389
  2856                           	goto	l3637
  2857  03B5  2C47               	line	390
  2858                           	
  2859                           l183:	
  2860  03B6                     	line	391
  2861                           	
  2862                           l3587:	
  2863  03B6                     		movlw	3
  2864  03B6  3003               	movlb 1	; select bank1
  2865  03B7  0021               	xorwf	((_wI2CCommandState)^080h),w
  2866  03B8  0626               	btfss	status,2
  2867  03B9  1D03               	goto	u2451
  2868  03BA  2BBC               	goto	u2450
  2869  03BB  2BBD               u2451:
  2870  03BC                     	goto	l3591
  2871  03BC  2BBF               u2450:
  2872  03BD                     	line	393
  2873                           	
  2874                           l3589:	
  2875  03BD                     	clrf	(_wTempState)^080h
  2876  03BD  01A4               	line	394
  2877                           	goto	l3637
  2878  03BE  2C47               	line	395
  2879                           	
  2880                           l184:	
  2881  03BF                     	
  2882                           l3591:	
  2883  03BF                     		movlw	2
  2884  03BF  3002               	xorwf	((_wI2CCommandState)^080h),w
  2885  03C0  0626               	btfss	status,2
  2886  03C1  1D03               	goto	u2461
  2887  03C2  2BC4               	goto	u2460
  2888  03C3  2BC5               u2461:
  2889  03C4                     	goto	l3637
  2890  03C4  2C47               u2460:
  2891  03C5                     	line	397
  2892                           	
  2893                           l3593:	
  2894  03C5                     	fcall	_ToggleBitRB5
  2895  03C5  318C  24C1  3181   	line	398
  2896                           	
  2897                           l3595:	
  2898  03C8                     	fcall	_GetTemp
  2899  03C8  318E  2624  3181   	line	399
  2900                           	
  2901                           l3597:	
  2902  03CB                     	fcall	_ToggleBitRB5
  2903  03CB  318C  24C1  3181   	line	400
  2904                           	
  2905                           l3599:	
  2906  03CE                     	movlw	low(01h)
  2907  03CE  3001               	movlb 0	; select bank0
  2908  03CF  0020               	movwf	(??_main+0)+0
  2909  03D0  00CB               	movf	(??_main+0)+0,w
  2910  03D1  084B               	movlb 1	; select bank1
  2911  03D2  0021               	addwf	(_wTempState)^080h,f
  2912  03D3  07A4               	line	401
  2913                           	
  2914                           l3601:	
  2915  03D4                     	bcf	(11),5	;volatile
  2916  03D4  128B               	line	402
  2917                           	
  2918                           l3603:	
  2919  03D5                     	movlb 0	; select bank0
  2920  03D5  0020               	clrf	(21)	;volatile
  2921  03D6  0195               	line	403
  2922                           	
  2923                           l3605:	
  2924  03D7                     	movlb 1	; select bank1
  2925  03D7  0021               	clrf	(_wTimer0Counter)^080h
  2926  03D8  01A5               	line	404
  2927                           	
  2928                           l3607:	
  2929  03D9                     	bsf	(11),5	;volatile
  2930  03D9  168B               	goto	l3637
  2931  03DA  2C47               	line	405
  2932                           	
  2933                           l186:	
  2934  03DB                     	goto	l3637
  2935  03DB  2C47               	
  2936                           l185:	
  2937  03DC                     	line	406
  2938                           	goto	l3637
  2939  03DC  2C47               	line	407
  2940                           	
  2941                           l187:	
  2942  03DD                     	line	408
  2943                           	
  2944                           l3609:	
  2945  03DD                     		movlw	2
  2946  03DD  3002               	movlb 1	; select bank1
  2947  03DE  0021               	xorwf	((_wTimer0Counter)^080h),w
  2948  03DF  0625               	btfss	status,2
  2949  03E0  1D03               	goto	u2471
  2950  03E1  2BE3               	goto	u2470
  2951  03E2  2BE4               u2471:
  2952  03E3                     	goto	l3637
  2953  03E3  2C47               u2470:
  2954  03E4                     	line	410
  2955                           	
  2956                           l3611:	
  2957  03E4                     	movlw	low(01h)
  2958  03E4  3001               	movlb 0	; select bank0
  2959  03E5  0020               	movwf	(??_main+0)+0
  2960  03E6  00CB               	movf	(??_main+0)+0,w
  2961  03E7  084B               	movlb 1	; select bank1
  2962  03E8  0021               	addwf	(_wTempState)^080h,f
  2963  03E9  07A4               	line	411
  2964                           	
  2965                           l3613:	
  2966  03EA                     	bcf	(11),5	;volatile
  2967  03EA  128B               	goto	l3637
  2968  03EB  2C47               	line	412
  2969                           	
  2970                           l188:	
  2971  03EC                     	line	413
  2972                           	goto	l3637
  2973  03EC  2C47               	line	414
  2974                           	
  2975                           l189:	
  2976  03ED                     	line	415
  2977                           	
  2978                           l3615:	
  2979  03ED                     		movlw	3
  2980  03ED  3003               	movlb 1	; select bank1
  2981  03EE  0021               	xorwf	((_wI2CCommandState)^080h),w
  2982  03EF  0626               	btfss	status,2
  2983  03F0  1D03               	goto	u2481
  2984  03F1  2BF3               	goto	u2480
  2985  03F2  2BF4               u2481:
  2986  03F3                     	goto	l3619
  2987  03F3  2BF6               u2480:
  2988  03F4                     	line	417
  2989                           	
  2990                           l3617:	
  2991  03F4                     	clrf	(_wTempState)^080h
  2992  03F4  01A4               	line	418
  2993                           	goto	l3637
  2994  03F5  2C47               	line	419
  2995                           	
  2996                           l190:	
  2997  03F6                     	
  2998                           l3619:	
  2999  03F6                     		movlw	2
  3000  03F6  3002               	xorwf	((_wI2CCommandState)^080h),w
  3001  03F7  0626               	btfss	status,2
  3002  03F8  1D03               	goto	u2491
  3003  03F9  2BFB               	goto	u2490
  3004  03FA  2BFC               u2491:
  3005  03FB                     	goto	l3637
  3006  03FB  2C47               u2490:
  3007  03FC                     	line	421
  3008                           	
  3009                           l3621:	
  3010  03FC                     	movlw	low(01h)
  3011  03FC  3001               	movlb 0	; select bank0
  3012  03FD  0020               	movwf	(??_main+0)+0
  3013  03FE  00CB               	movf	(??_main+0)+0,w
  3014  03FF  084B               	movlb 1	; select bank1
  3015  0400  0021               	addwf	(_wTempState)^080h,f
  3016  0401  07A4               	goto	l3637
  3017  0402  2C47               	line	422
  3018                           	
  3019                           l192:	
  3020  0403                     	goto	l3637
  3021  0403  2C47               	
  3022                           l191:	
  3023  0404                     	line	423
  3024                           	goto	l3637
  3025  0404  2C47               	line	424
  3026                           	
  3027                           l193:	
  3028  0405                     	line	425
  3029                           	
  3030                           l3623:	
  3031  0405                     	movlb 4	; select bank4
  3032  0405  0024               	movf	(main@wCounter)^0200h,w
  3033  0406  0848               	addlw	02h
  3034  0407  3E02               	movwf	(main@wCounter)^0200h
  3035  0408  00C8               	movlw	0
  3036  0409  3000               	addwfc	(main@wCounter+1)^0200h,w
  3037  040A  3D49               	movwf	1+(main@wCounter)^0200h
  3038  040B  00C9               	line	426
  3039                           		movlw	4
  3040  040C  3004               	xorwf	((main@wCounter)^0200h),w
  3041  040D  0648               iorwf	((main@wCounter+1)^0200h),w
  3042  040E  0449               	btfss	status,2
  3043  040F  1D03               	goto	u2501
  3044  0410  2C12               	goto	u2500
  3045  0411  2C13               u2501:
  3046  0412                     	goto	l3627
  3047  0412  2C16               u2500:
  3048  0413                     	line	428
  3049                           	
  3050                           l3625:	
  3051  0413                     	clrf	(main@wCounter)^0200h
  3052  0413  01C8               	clrf	(main@wCounter+1)^0200h
  3053  0414  01C9               	goto	l3627
  3054  0415  2C16               	line	429
  3055                           	
  3056                           l194:	
  3057  0416                     	line	430
  3058                           	
  3059                           l3627:	
  3060  0416                     	movlw	low(013h)
  3061  0416  3013               	movlb 0	; select bank0
  3062  0417  0020               	movwf	(??_main+0)+0
  3063  0418  00CB               	movf	(??_main+0)+0,w
  3064  0419  084B               	movwf	(setCursorPosition@iPosition)
  3065  041A  00B9               	movlw	low(03h)
  3066  041B  3003               	fcall	_setCursorPosition
  3067  041C  3187  2731  3181   	line	431
  3068                           	
  3069                           l3629:	
  3070  041F                     	movlb 4	; select bank4
  3071  041F  0024               	movf	(main@wCounter)^0200h,w
  3072  0420  0848               	addlw	low(main@wConv|((0x2)<<8))&0ffh
  3073  0421  3E22               	movlb 0	; select bank0
  3074  0422  0020               	movwf	(lcdWriteText@iText)
  3075  0423  00C1               	movlw	0x2
  3076  0424  3002               
  3077                           	movwf	(lcdWriteText@iText+1)
  3078  0425  00C2               	fcall	_lcdWriteText
  3079  0426  318D  25FA  3181   	line	432
  3080                           	
  3081                           l3631:	
  3082  0429                     	movlw	low(01h)
  3083  0429  3001               	movlb 0	; select bank0
  3084  042A  0020               	movwf	(??_main+0)+0
  3085  042B  00CB               	movf	(??_main+0)+0,w
  3086  042C  084B               	movlb 1	; select bank1
  3087  042D  0021               	addwf	(_wTempState)^080h,f
  3088  042E  07A4               	line	433
  3089                           	goto	l3637
  3090  042F  2C47               	line	434
  3091                           	
  3092                           l195:	
  3093  0430                     	line	435
  3094                           	goto	l3637
  3095  0430  2C47               	line	436
  3096                           	
  3097                           l196:	
  3098  0431                     	line	437
  3099                           	goto	l3637
  3100  0431  2C47               	line	438
  3101                           	
  3102                           l3633:	
  3103  0432                     	goto	l3637
  3104  0432  2C47               	
  3105                           l178:	
  3106  0433                     	
  3107                           l3635:	
  3108  0433                     	movlb 1	; select bank1
  3109  0433  0021               	movf	(_wTempState)^080h,w
  3110  0434  0824               	movlb 0	; select bank0
  3111  0435  0020               	movwf	(??_main+0)+0
  3112  0436  00CB               	clrf	(??_main+0)+0+1
  3113  0437  01CC               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3114                           ; Switch size 1, requested type "space"
  3115                           ; Number of cases is 1, Range of values is 0 to 0
  3116                           ; switch strategies available:
  3117                           ; Name         Instructions Cycles
  3118                           ; simple_byte            4     3 (average)
  3119                           ; direct_byte            8     6 (fixed)
  3120                           ; jumptable            260     6 (fixed)
  3121                           ;	Chosen strategy is simple_byte
  3122                           
  3123                           	movf 1+(??_main+0)+0,w
  3124  0438  084C               	opt asmopt_push
  3125                           	opt asmopt_off
  3126                           	xorlw	0^0	; case 0
  3127  0439  3A00               	skipnz
  3128  043A  1903               	goto	l3977
  3129  043B  2C3D               	goto	l3637
  3130  043C  2C47               	opt asmopt_pop
  3131                           	
  3132                           l3977:	
  3133  043D                     ; Switch size 1, requested type "space"
  3134                           ; Number of cases is 7, Range of values is 0 to 6
  3135                           ; switch strategies available:
  3136                           ; Name         Instructions Cycles
  3137                           ; direct_byte           20     6 (fixed)
  3138                           ; simple_byte           22    12 (average)
  3139                           ; jumptable            260     6 (fixed)
  3140                           ;	Chosen strategy is direct_byte
  3141                           
  3142                           	movf 0+(??_main+0)+0,w
  3143  043D  084B               	movwf fsr0l
  3144  043E  0084               	movlw	7
  3145  043F  3007               	subwf	fsr0l,w
  3146  0440  0204               skipnc
  3147  0441  1803               goto l3637
  3148  0442  2C47               movlp high(S3979)
  3149  0443  3187               	lslf fsr0l,w
  3150  0444  3504               	addlw low(S3979)
  3151  0445  3EEF               	movwf pc
  3152  0446  0082               psect	swtext1,local,class=CONST,delta=2
  3153                           global __pswtext1
  3154                           __pswtext1:
  3155  07EF                     S3979:
  3156  07EF                     	ljmp	l3567
  3157  07EF  3183  2B93         	ljmp	l3581
  3158  07F1  3183  2BA6         	ljmp	l3587
  3159  07F3  3183  2BB6         	ljmp	l3609
  3160  07F5  3183  2BDD         	ljmp	l3615
  3161  07F7  3183  2BED         	ljmp	l3623
  3162  07F9  3184  2C05         	ljmp	l3637
  3163  07FB  3184  2C47         psect	maintext
  3164                           
  3165                           	
  3166                           l180:	
  3167  0447                     	line	460
  3168                           	
  3169                           l3637:	
  3170  0447                     	movlw	01h
  3171  0447  3001               	movlb 4	; select bank4
  3172  0448  0024               	addwf	(main@wIterationCounter)^0200h,f
  3173  0449  07BA               	movlw	0
  3174  044A  3000               	addwfc	(main@wIterationCounter+1)^0200h,f
  3175  044B  3DBB               	line	463
  3176                           	
  3177                           l3639:	
  3178  044C                     	movlw	(low(main@wDebounceEnter|((0x2)<<8)))&0ffh
  3179  044C  3042               	movlb 0	; select bank0
  3180  044D  0020               	movwf	(??_main+0)+0
  3181  044E  00CB               	movf	(??_main+0)+0,w
  3182  044F  084B               	movwf	(Debounce@ioTimer)
  3183  0450  00B4               	movlw	(low(main@wEnterBottonPressed|((0x2)<<8)))&0ffh
  3184  0451  3041               	movwf	(??_main+1)+0
  3185  0452  00CC               	movf	(??_main+1)+0,w
  3186  0453  084C               	movwf	(Debounce@swPressed)
  3187  0454  00B5               	movf	(13),w	;volatile
  3188  0455  080D               	andlw	(1<<1)-1
  3189  0456  3901               	fcall	_Debounce
  3190  0457  318F  2764  3181   	line	464
  3191                           	
  3192                           l3641:	
  3193  045A                     	movlw	(low(main@wDebounceUp|((0x2)<<8)))&0ffh
  3194  045A  3044               	movlb 0	; select bank0
  3195  045B  0020               	movwf	(??_main+0)+0
  3196  045C  00CB               	movf	(??_main+0)+0,w
  3197  045D  084B               	movwf	(Debounce@ioTimer)
  3198  045E  00B4               	movlw	(low(main@wUpBottonPressed|((0x2)<<8)))&0ffh
  3199  045F  304A               	movwf	(??_main+1)+0
  3200  0460  00CC               	movf	(??_main+1)+0,w
  3201  0461  084C               	movwf	(Debounce@swPressed)
  3202  0462  00B5               	rrf	(13),w	;volatile
  3203  0463  0C0D               	andlw	(1<<1)-1
  3204  0464  3901               	fcall	_Debounce
  3205  0465  318F  2764  3181   	line	465
  3206                           	
  3207                           l3643:	
  3208  0468                     	movlw	(low(main@wDebounceDown|((0x2)<<8)))&0ffh
  3209  0468  3046               	movlb 0	; select bank0
  3210  0469  0020               	movwf	(??_main+0)+0
  3211  046A  00CB               	movf	(??_main+0)+0,w
  3212  046B  084B               	movwf	(Debounce@ioTimer)
  3213  046C  00B4               	movlw	(low(main@wDownBottonPressed|((0x2)<<8)))&0ffh
  3214  046D  304B               	movwf	(??_main+1)+0
  3215  046E  00CC               	movf	(??_main+1)+0,w
  3216  046F  084C               	movwf	(Debounce@swPressed)
  3217  0470  00B5               	rrf	(13),w	;volatile
  3218  0471  0C0D               	rrf	wreg,f
  3219  0472  0C89               	andlw	(1<<1)-1
  3220  0473  3901               	fcall	_Debounce
  3221  0474  318F  2764  3181   	line	468
  3222                           	
  3223                           l3645:	
  3224  0477                     	movlb 4	; select bank4
  3225  0477  0024               		decf	((main@wUpBottonPressed)^0200h),w
  3226  0478  034A               	btfss	status,2
  3227  0479  1D03               	goto	u2511
  3228  047A  2C7C               	goto	u2510
  3229  047B  2C7D               u2511:
  3230  047C                     	goto	l3651
  3231  047C  2C85               u2510:
  3232  047D                     	line	470
  3233                           	
  3234                           l3647:	
  3235  047D                     	clrf	(main@wUpBottonPressed)^0200h
  3236  047D  01CA               	line	471
  3237                           	
  3238                           l3649:	
  3239  047E                     	movlw	low(01h)
  3240  047E  3001               	movlb 0	; select bank0
  3241  047F  0020               	movwf	(??_main+0)+0
  3242  0480  00CB               	movf	(??_main+0)+0,w
  3243  0481  084B               	movlb 4	; select bank4
  3244  0482  0024               	addwf	(main@wMenu)^0200h,f
  3245  0483  07CC               	goto	l3651
  3246  0484  2C85               	line	472
  3247                           	
  3248                           l197:	
  3249  0485                     	line	473
  3250                           	
  3251                           l3651:	
  3252  0485                     		decf	((main@wDownBottonPressed)^0200h),w
  3253  0485  034B               	btfss	status,2
  3254  0486  1D03               	goto	u2521
  3255  0487  2C89               	goto	u2520
  3256  0488  2C8A               u2521:
  3257  0489                     	goto	l3657
  3258  0489  2C8E               u2520:
  3259  048A                     	line	475
  3260                           	
  3261                           l3653:	
  3262  048A                     	clrf	(main@wDownBottonPressed)^0200h
  3263  048A  01CB               	line	476
  3264                           	
  3265                           l3655:	
  3266  048B                     	movlw	01h
  3267  048B  3001               	subwf	(main@wMenu)^0200h,f
  3268  048C  02CC               	goto	l3657
  3269  048D  2C8E               	line	477
  3270                           	
  3271                           l198:	
  3272  048E                     	line	479
  3273                           	
  3274                           l3657:	
  3275  048E                     		incf	((main@wMenu)^0200h),w
  3276  048E  0A4C               	btfss	status,2
  3277  048F  1D03               	goto	u2531
  3278  0490  2C92               	goto	u2530
  3279  0491  2C93               u2531:
  3280  0492                     	goto	l3661
  3281  0492  2C9A               u2530:
  3282  0493                     	line	481
  3283                           	
  3284                           l3659:	
  3285  0493                     	movlw	low(02h)
  3286  0493  3002               	movlb 0	; select bank0
  3287  0494  0020               	movwf	(??_main+0)+0
  3288  0495  00CB               	movf	(??_main+0)+0,w
  3289  0496  084B               	movlb 4	; select bank4
  3290  0497  0024               	movwf	(main@wMenu)^0200h
  3291  0498  00CC               	goto	l3661
  3292  0499  2C9A               	line	482
  3293                           	
  3294                           l199:	
  3295  049A                     	line	483
  3296                           	
  3297                           l3661:	
  3298  049A                     		movlw	3
  3299  049A  3003               	xorwf	((main@wMenu)^0200h),w
  3300  049B  064C               	btfss	status,2
  3301  049C  1D03               	goto	u2541
  3302  049D  2C9F               	goto	u2540
  3303  049E  2CA0               u2541:
  3304  049F                     	goto	l3529
  3305  049F  2AA7               u2540:
  3306  04A0                     	line	485
  3307                           	
  3308                           l3663:	
  3309  04A0                     	clrf	(main@wMenu)^0200h
  3310  04A0  01CC               	goto	l3529
  3311  04A1  2AA7               	line	486
  3312                           	
  3313                           l200:	
  3314  04A2                     	goto	l3529
  3315  04A2  2AA7               	line	489
  3316                           	
  3317                           l201:	
  3318  04A3                     	goto	l3529
  3319  04A3  2AA7               	
  3320                           l202:	
  3321  04A4                     	line	491
  3322                           	
  3323                           l203:	
  3324  04A4                     	global	start
  3325                           	ljmp	start
  3326  04A4  3181  2986         	opt stack 0
  3327                           GLOBAL	__end_of_main
  3328                           	__end_of_main:
  3329  04A6                     	signat	_main,89
  3330                           	global	_setNotBlinkingCursor
  3331                           
  3332 ;; *************** function _setNotBlinkingCursor *****************
  3333 ;; Defined at:
  3334 ;;		line 198 in file "LCD_hd44780u_qy_2004a.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;		None
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;		None
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		wreg, status,2, status,0, pclath, cstack
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3350 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3351 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3352 ;;Total ram usage:        1 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; Hardware stack levels required when called:    7
  3355 ;; This function calls:
  3356 ;;		_writeInsChk
  3357 ;; This function is called by:
  3358 ;;		_main
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  3362                           	file	"LCD_hd44780u_qy_2004a.c"
  3363                           	line	198
  3364                           global __ptext1
  3365                           __ptext1:	;psect for function _setNotBlinkingCursor
  3366  0CEC                     psect	text1
  3367                           	file	"LCD_hd44780u_qy_2004a.c"
  3368                           	line	198
  3369                           	global	__size_of_setNotBlinkingCursor
  3370                           	__size_of_setNotBlinkingCursor	equ	__end_of_setNotBlinkingCursor-_setNotBlinkingCursor

  3371  000B                     	
  3372                           _setNotBlinkingCursor:	
  3373  0CEC                     ;incstack = 0
  3374                           	opt	stack 8
  3375                           ; Regs used in _setNotBlinkingCursor: [wreg+status,2+status,0+pclath+cstack]
  3376                           	line	200
  3377                           	
  3378                           l3381:	
  3379  0CEC                     ;LCD_hd44780u_qy_2004a.c: 200:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFE;
  3380                           	movlb 0	; select bank0
  3381  0CEC  0020               	movf	(_mDisplayOnOffReg),w
  3382  0CED  085B               	andlw	0FEh
  3383  0CEE  39FE               	movwf	(??_setNotBlinkingCursor+0)+0
  3384  0CEF  00BA               	movf	(??_setNotBlinkingCursor+0)+0,w
  3385  0CF0  083A               	movwf	(_mDisplayOnOffReg)
  3386  0CF1  00DB               	line	201
  3387                           	
  3388                           l3383:	
  3389  0CF2                     ;LCD_hd44780u_qy_2004a.c: 201:   writeInsChk(mDisplayOnOffReg);
  3390                           	movf	(_mDisplayOnOffReg),w
  3391  0CF2  085B               	fcall	_writeInsChk
  3392  0CF3  318C  24CB  318C   	line	202
  3393                           	
  3394                           l345:	
  3395  0CF6                     	return
  3396  0CF6  0008               	opt stack 0
  3397                           GLOBAL	__end_of_setNotBlinkingCursor
  3398                           	__end_of_setNotBlinkingCursor:
  3399  0CF7                     	signat	_setNotBlinkingCursor,89
  3400                           	global	_setCursorOff
  3401                           
  3402 ;; *************** function _setCursorOff *****************
  3403 ;; Defined at:
  3404 ;;		line 203 in file "LCD_hd44780u_qy_2004a.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;		None
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg, status,2, status,0, pclath, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3420 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3421 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3422 ;;Total ram usage:        1 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; Hardware stack levels required when called:    7
  3425 ;; This function calls:
  3426 ;;		_writeInsChk
  3427 ;; This function is called by:
  3428 ;;		_main
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  3432                           	line	203
  3433                           global __ptext2
  3434                           __ptext2:	;psect for function _setCursorOff
  3435  0CE1                     psect	text2
  3436                           	file	"LCD_hd44780u_qy_2004a.c"
  3437                           	line	203
  3438                           	global	__size_of_setCursorOff
  3439                           	__size_of_setCursorOff	equ	__end_of_setCursorOff-_setCursorOff
  3440  000B                     	
  3441                           _setCursorOff:	
  3442  0CE1                     ;incstack = 0
  3443                           	opt	stack 8
  3444                           ; Regs used in _setCursorOff: [wreg+status,2+status,0+pclath+cstack]
  3445                           	line	205
  3446                           	
  3447                           l3373:	
  3448  0CE1                     ;LCD_hd44780u_qy_2004a.c: 205:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFD;
  3449                           	movlb 0	; select bank0
  3450  0CE1  0020               	movf	(_mDisplayOnOffReg),w
  3451  0CE2  085B               	andlw	0FDh
  3452  0CE3  39FD               	movwf	(??_setCursorOff+0)+0
  3453  0CE4  00BA               	movf	(??_setCursorOff+0)+0,w
  3454  0CE5  083A               	movwf	(_mDisplayOnOffReg)
  3455  0CE6  00DB               	line	206
  3456                           	
  3457                           l3375:	
  3458  0CE7                     ;LCD_hd44780u_qy_2004a.c: 206:   writeInsChk(mDisplayOnOffReg);
  3459                           	movf	(_mDisplayOnOffReg),w
  3460  0CE7  085B               	fcall	_writeInsChk
  3461  0CE8  318C  24CB  318C   	line	207
  3462                           	
  3463                           l348:	
  3464  0CEB                     	return
  3465  0CEB  0008               	opt stack 0
  3466                           GLOBAL	__end_of_setCursorOff
  3467                           	__end_of_setCursorOff:
  3468  0CEC                     	signat	_setCursorOff,89
  3469                           	global	_printEM1812
  3470                           
  3471 ;; *************** function _printEM1812 *****************
  3472 ;; Defined at:
  3473 ;;		line 130 in file "161518_temp_main.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  wVariable       2   29[BANK0 ] short 
  3476 ;;  oTextOut        1   31[BANK0 ] PTR unsigned char 
  3477 ;;		 -> main@wReadout(20), 
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;  wDecimal        1   36[BANK0 ] unsigned char 
  3480 ;;  wUnity          1   35[BANK0 ] unsigned char 
  3481 ;;  wTen            1   34[BANK0 ] unsigned char 
  3482 ;;  wIsNegative     1   33[BANK0 ] unsigned char 
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  1    wreg      void 
  3485 ;; Registers used:
  3486 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3492 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  3493 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  3494 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3495 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
  3496 ;;Total ram usage:        8 bytes
  3497 ;; Hardware stack levels used:    1
  3498 ;; Hardware stack levels required when called:    5
  3499 ;; This function calls:
  3500 ;;		___awdiv
  3501 ;;		___awmod
  3502 ;; This function is called by:
  3503 ;;		_main
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3507                           	file	"161518_temp_main.c"
  3508                           	line	130
  3509                           global __ptext3
  3510                           __ptext3:	;psect for function _printEM1812
  3511  0577                     psect	text3
  3512                           	file	"161518_temp_main.c"
  3513                           	line	130
  3514                           	global	__size_of_printEM1812
  3515                           	__size_of_printEM1812	equ	__end_of_printEM1812-_printEM1812
  3516  00B9                     	
  3517                           _printEM1812:	
  3518  0577                     ;incstack = 0
  3519                           	opt	stack 10
  3520                           ; Regs used in _printEM1812: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3521                           	line	135
  3522                           	
  3523                           l3299:	
  3524  0577                     	movlb 0	; select bank0
  3525  0577  0020               	clrf	(printEM1812@wIsNegative)
  3526  0578  01C1               	line	137
  3527                           	
  3528                           l3301:	
  3529  0579                     	btfss	(printEM1812@wVariable+1),7
  3530  0579  1FBE               	goto	u2351
  3531  057A  2D7C               	goto	u2350
  3532  057B  2D7D               u2351:
  3533  057C                     	goto	l3307
  3534  057C  2D85               u2350:
  3535  057D                     	line	139
  3536                           	
  3537                           l3303:	
  3538  057D                     	clrf	(printEM1812@wIsNegative)
  3539  057D  01C1               	incf	(printEM1812@wIsNegative),f
  3540  057E  0AC1               	line	140
  3541                           	
  3542                           l3305:	
  3543  057F                     	comf	(printEM1812@wVariable),f
  3544  057F  09BD               	comf	(printEM1812@wVariable+1),f
  3545  0580  09BE               	incf	(printEM1812@wVariable),f
  3546  0581  0ABD               	skipnz
  3547  0582  1903               	incf	(printEM1812@wVariable+1),f
  3548  0583  0ABE               	goto	l3307
  3549  0584  2D85               	line	141
  3550                           	
  3551                           l138:	
  3552  0585                     	line	143
  3553                           	
  3554                           l3307:	
  3555  0585                     	movlw	064h
  3556  0585  3064               	movwf	(___awdiv@divisor)
  3557  0586  00B4               	movlw	0
  3558  0587  3000               	movwf	((___awdiv@divisor))+1
  3559  0588  00B5               	movf	(printEM1812@wVariable+1),w
  3560  0589  083E               	movwf	(___awdiv@dividend+1)
  3561  058A  00B7               	movf	(printEM1812@wVariable),w
  3562  058B  083D               	movwf	(___awdiv@dividend)
  3563  058C  00B6               	fcall	___awdiv
  3564  058D  3186  26C7  3185   	movlb 0	; select bank0
  3565  0590  0020               	movf	(0+(?___awdiv)),w
  3566  0591  0834               	movwf	(??_printEM1812+0)+0
  3567  0592  00C0               	movf	(??_printEM1812+0)+0,w
  3568  0593  0840               	movwf	(printEM1812@wTen)
  3569  0594  00C2               	line	144
  3570                           	
  3571                           l3309:	
  3572  0595                     	movlw	064h
  3573  0595  3064               	movwf	(___awmod@divisor)
  3574  0596  00B4               	movlw	0
  3575  0597  3000               	movwf	((___awmod@divisor))+1
  3576  0598  00B5               	movf	(printEM1812@wVariable+1),w
  3577  0599  083E               	movwf	(___awmod@dividend+1)
  3578  059A  00B7               	movf	(printEM1812@wVariable),w
  3579  059B  083D               	movwf	(___awmod@dividend)
  3580  059C  00B6               	fcall	___awmod
  3581  059D  3187  2791  3185   	movlb 0	; select bank0
  3582  05A0  0020               	movf	(1+(?___awmod)),w
  3583  05A1  0835               	movwf	(printEM1812@wVariable+1)
  3584  05A2  00BE               	movf	(0+(?___awmod)),w
  3585  05A3  0834               	movwf	(printEM1812@wVariable)
  3586  05A4  00BD               	line	145
  3587                           	
  3588                           l3311:	
  3589  05A5                     	movlw	0Ah
  3590  05A5  300A               	movwf	(___awdiv@divisor)
  3591  05A6  00B4               	movlw	0
  3592  05A7  3000               	movwf	((___awdiv@divisor))+1
  3593  05A8  00B5               	movf	(printEM1812@wVariable+1),w
  3594  05A9  083E               	movwf	(___awdiv@dividend+1)
  3595  05AA  00B7               	movf	(printEM1812@wVariable),w
  3596  05AB  083D               	movwf	(___awdiv@dividend)
  3597  05AC  00B6               	fcall	___awdiv
  3598  05AD  3186  26C7  3185   	movlb 0	; select bank0
  3599  05B0  0020               	movf	(0+(?___awdiv)),w
  3600  05B1  0834               	movwf	(??_printEM1812+0)+0
  3601  05B2  00C0               	movf	(??_printEM1812+0)+0,w
  3602  05B3  0840               	movwf	(printEM1812@wUnity)
  3603  05B4  00C3               	line	146
  3604                           	
  3605                           l3313:	
  3606  05B5                     	movlw	0Ah
  3607  05B5  300A               	movwf	(___awmod@divisor)
  3608  05B6  00B4               	movlw	0
  3609  05B7  3000               	movwf	((___awmod@divisor))+1
  3610  05B8  00B5               	movf	(printEM1812@wVariable+1),w
  3611  05B9  083E               	movwf	(___awmod@dividend+1)
  3612  05BA  00B7               	movf	(printEM1812@wVariable),w
  3613  05BB  083D               	movwf	(___awmod@dividend)
  3614  05BC  00B6               	fcall	___awmod
  3615  05BD  3187  2791  3185   	movlb 0	; select bank0
  3616  05C0  0020               	movf	(1+(?___awmod)),w
  3617  05C1  0835               	movwf	(printEM1812@wVariable+1)
  3618  05C2  00BE               	movf	(0+(?___awmod)),w
  3619  05C3  0834               	movwf	(printEM1812@wVariable)
  3620  05C4  00BD               	line	147
  3621                           	
  3622                           l3315:	
  3623  05C5                     	movf	(printEM1812@wVariable),w
  3624  05C5  083D               	movwf	(??_printEM1812+0)+0
  3625  05C6  00C0               	movf	(??_printEM1812+0)+0,w
  3626  05C7  0840               	movwf	(printEM1812@wDecimal)
  3627  05C8  00C4               	line	148
  3628                           	movf	((printEM1812@wIsNegative)),w
  3629  05C9  0841               	btfsc	status,2
  3630  05CA  1903               	goto	u2361
  3631  05CB  2DCD               	goto	u2360
  3632  05CC  2DCE               u2361:
  3633  05CD                     	goto	l3329
  3634  05CD  2E03               u2360:
  3635  05CE                     	line	150
  3636                           	
  3637                           l3317:	
  3638  05CE                     	movlw	low(02Dh)
  3639  05CE  302D               	movwf	(??_printEM1812+0)+0
  3640  05CF  00C0               	movf	(printEM1812@oTextOut),w
  3641  05D0  083F               	movwf	fsr1l
  3642  05D1  0086               	movlw 2	; select bank4/5
  3643  05D2  3002               	movwf fsr1h	
  3644  05D3  0087               	
  3645                           	movf	(??_printEM1812+0)+0,w
  3646  05D4  0840               	movwf	indf1
  3647  05D5  0081               	line	151
  3648                           	
  3649                           l3319:	
  3650  05D6                     	movf	(printEM1812@wTen),w
  3651  05D6  0842               	addlw	030h
  3652  05D7  3E30               	movwf	(??_printEM1812+0)+0
  3653  05D8  00C0               	incf	(printEM1812@oTextOut),w
  3654  05D9  0A3F               	movwf	fsr1l
  3655  05DA  0086               	movlw 2	; select bank4/5
  3656  05DB  3002               	movwf fsr1h	
  3657  05DC  0087               	
  3658                           	movf	(??_printEM1812+0)+0,w
  3659  05DD  0840               	movwf	indf1
  3660  05DE  0081               	line	152
  3661                           	
  3662                           l3321:	
  3663  05DF                     	movf	(printEM1812@wUnity),w
  3664  05DF  0843               	addlw	030h
  3665  05E0  3E30               	movwf	(??_printEM1812+0)+0
  3666  05E1  00C0               	movf	(printEM1812@oTextOut),w
  3667  05E2  083F               	addlw	02h
  3668  05E3  3E02               	movwf	fsr1l
  3669  05E4  0086               	movlw 2	; select bank4/5
  3670  05E5  3002               	movwf fsr1h	
  3671  05E6  0087               	
  3672                           	movf	(??_printEM1812+0)+0,w
  3673  05E7  0840               	movwf	indf1
  3674  05E8  0081               	line	153
  3675                           	
  3676                           l3323:	
  3677  05E9                     	movlw	low(02Ch)
  3678  05E9  302C               	movwf	(??_printEM1812+0)+0
  3679  05EA  00C0               	movf	(printEM1812@oTextOut),w
  3680  05EB  083F               	addlw	03h
  3681  05EC  3E03               	movwf	fsr1l
  3682  05ED  0086               	movlw 2	; select bank4/5
  3683  05EE  3002               	movwf fsr1h	
  3684  05EF  0087               	
  3685                           	movf	(??_printEM1812+0)+0,w
  3686  05F0  0840               	movwf	indf1
  3687  05F1  0081               	line	154
  3688                           	
  3689                           l3325:	
  3690  05F2                     	movf	(printEM1812@wDecimal),w
  3691  05F2  0844               	addlw	030h
  3692  05F3  3E30               	movwf	(??_printEM1812+0)+0
  3693  05F4  00C0               	movf	(printEM1812@oTextOut),w
  3694  05F5  083F               	addlw	04h
  3695  05F6  3E04               	movwf	fsr1l
  3696  05F7  0086               	movlw 2	; select bank4/5
  3697  05F8  3002               	movwf fsr1h	
  3698  05F9  0087               	
  3699                           	movf	(??_printEM1812+0)+0,w
  3700  05FA  0840               	movwf	indf1
  3701  05FB  0081               	line	155
  3702                           	
  3703                           l3327:	
  3704  05FC                     	movf	(printEM1812@oTextOut),w
  3705  05FC  083F               	addlw	05h
  3706  05FD  3E05               	movwf	fsr1l
  3707  05FE  0086               	movlw 2	; select bank4/5
  3708  05FF  3002               	movwf fsr1h	
  3709  0600  0087               	
  3710                           	clrf	indf1
  3711  0601  0181               	line	156
  3712                           	goto	l141
  3713  0602  2E2F               	line	157
  3714                           	
  3715                           l139:	
  3716  0603                     	line	159
  3717                           	
  3718                           l3329:	
  3719  0603                     	movf	(printEM1812@wTen),w
  3720  0603  0842               	addlw	030h
  3721  0604  3E30               	movwf	(??_printEM1812+0)+0
  3722  0605  00C0               	movf	(printEM1812@oTextOut),w
  3723  0606  083F               	movwf	fsr1l
  3724  0607  0086               	movlw 2	; select bank4/5
  3725  0608  3002               	movwf fsr1h	
  3726  0609  0087               	
  3727                           	movf	(??_printEM1812+0)+0,w
  3728  060A  0840               	movwf	indf1
  3729  060B  0081               	line	160
  3730                           	movf	(printEM1812@wUnity),w
  3731  060C  0843               	addlw	030h
  3732  060D  3E30               	movwf	(??_printEM1812+0)+0
  3733  060E  00C0               	incf	(printEM1812@oTextOut),w
  3734  060F  0A3F               	movwf	fsr1l
  3735  0610  0086               	movlw 2	; select bank4/5
  3736  0611  3002               	movwf fsr1h	
  3737  0612  0087               	
  3738                           	movf	(??_printEM1812+0)+0,w
  3739  0613  0840               	movwf	indf1
  3740  0614  0081               	line	161
  3741                           	movlw	low(02Ch)
  3742  0615  302C               	movwf	(??_printEM1812+0)+0
  3743  0616  00C0               	movf	(printEM1812@oTextOut),w
  3744  0617  083F               	addlw	02h
  3745  0618  3E02               	movwf	fsr1l
  3746  0619  0086               	movlw 2	; select bank4/5
  3747  061A  3002               	movwf fsr1h	
  3748  061B  0087               	
  3749                           	movf	(??_printEM1812+0)+0,w
  3750  061C  0840               	movwf	indf1
  3751  061D  0081               	line	162
  3752                           	movf	(printEM1812@wDecimal),w
  3753  061E  0844               	addlw	030h
  3754  061F  3E30               	movwf	(??_printEM1812+0)+0
  3755  0620  00C0               	movf	(printEM1812@oTextOut),w
  3756  0621  083F               	addlw	03h
  3757  0622  3E03               	movwf	fsr1l
  3758  0623  0086               	movlw 2	; select bank4/5
  3759  0624  3002               	movwf fsr1h	
  3760  0625  0087               	
  3761                           	movf	(??_printEM1812+0)+0,w
  3762  0626  0840               	movwf	indf1
  3763  0627  0081               	line	163
  3764                           	movf	(printEM1812@oTextOut),w
  3765  0628  083F               	addlw	04h
  3766  0629  3E04               	movwf	fsr1l
  3767  062A  0086               	movlw 2	; select bank4/5
  3768  062B  3002               	movwf fsr1h	
  3769  062C  0087               	
  3770                           	clrf	indf1
  3771  062D  0181               	goto	l141
  3772  062E  2E2F               	line	164
  3773                           	
  3774                           l140:	
  3775  062F                     	line	166
  3776                           	
  3777                           l141:	
  3778  062F                     	return
  3779  062F  0008               	opt stack 0
  3780                           GLOBAL	__end_of_printEM1812
  3781                           	__end_of_printEM1812:
  3782  0630                     	signat	_printEM1812,8313
  3783                           	global	___awmod
  3784                           
  3785 ;; *************** function ___awmod *****************
  3786 ;; Defined at:
  3787 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;  divisor         2   20[BANK0 ] int 
  3790 ;;  dividend        2   22[BANK0 ] int 
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;  sign            1   26[BANK0 ] unsigned char 
  3793 ;;  counter         1   25[BANK0 ] unsigned char 
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  2   20[BANK0 ] int 
  3796 ;; Registers used:
  3797 ;;		wreg, status,2, status,0
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3803 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  3804 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  3805 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3806 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
  3807 ;;Total ram usage:        7 bytes
  3808 ;; Hardware stack levels used:    1
  3809 ;; Hardware stack levels required when called:    4
  3810 ;; This function calls:
  3811 ;;		Nothing
  3812 ;; This function is called by:
  3813 ;;		_printEM1812
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  3817                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  3818                           	line	5
  3819                           global __ptext4
  3820                           __ptext4:	;psect for function ___awmod
  3821  0791                     psect	text4
  3822                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  3823                           	line	5
  3824                           	global	__size_of___awmod
  3825                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  3826  005E                     	
  3827                           ___awmod:	
  3828  0791                     ;incstack = 0
  3829                           	opt	stack 10
  3830                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3831                           	line	12
  3832                           	
  3833                           l3203:	
  3834  0791                     	movlb 0	; select bank0
  3835  0791  0020               	clrf	(___awmod@sign)
  3836  0792  01BA               	line	13
  3837                           	
  3838                           l3205:	
  3839  0793                     	btfss	(___awmod@dividend+1),7
  3840  0793  1FB7               	goto	u2211
  3841  0794  2F96               	goto	u2210
  3842  0795  2F97               u2211:
  3843  0796                     	goto	l3211
  3844  0796  2F9F               u2210:
  3845  0797                     	line	14
  3846                           	
  3847                           l3207:	
  3848  0797                     	comf	(___awmod@dividend),f
  3849  0797  09B6               	comf	(___awmod@dividend+1),f
  3850  0798  09B7               	incf	(___awmod@dividend),f
  3851  0799  0AB6               	skipnz
  3852  079A  1903               	incf	(___awmod@dividend+1),f
  3853  079B  0AB7               	line	15
  3854                           	
  3855                           l3209:	
  3856  079C                     	clrf	(___awmod@sign)
  3857  079C  01BA               	incf	(___awmod@sign),f
  3858  079D  0ABA               	goto	l3211
  3859  079E  2F9F               	line	16
  3860                           	
  3861                           l545:	
  3862  079F                     	line	17
  3863                           	
  3864                           l3211:	
  3865  079F                     	btfss	(___awmod@divisor+1),7
  3866  079F  1FB5               	goto	u2221
  3867  07A0  2FA2               	goto	u2220
  3868  07A1  2FA3               u2221:
  3869  07A2                     	goto	l3215
  3870  07A2  2FA9               u2220:
  3871  07A3                     	line	18
  3872                           	
  3873                           l3213:	
  3874  07A3                     	comf	(___awmod@divisor),f
  3875  07A3  09B4               	comf	(___awmod@divisor+1),f
  3876  07A4  09B5               	incf	(___awmod@divisor),f
  3877  07A5  0AB4               	skipnz
  3878  07A6  1903               	incf	(___awmod@divisor+1),f
  3879  07A7  0AB5               	goto	l3215
  3880  07A8  2FA9               	
  3881                           l546:	
  3882  07A9                     	line	19
  3883                           	
  3884                           l3215:	
  3885  07A9                     	movf	((___awmod@divisor)),w
  3886  07A9  0834               iorwf	((___awmod@divisor+1)),w
  3887  07AA  0435               	btfsc	status,2
  3888  07AB  1903               	goto	u2231
  3889  07AC  2FAE               	goto	u2230
  3890  07AD  2FAF               u2231:
  3891  07AE                     	goto	l3233
  3892  07AE  2FDE               u2230:
  3893  07AF                     	line	20
  3894                           	
  3895                           l3217:	
  3896  07AF                     	clrf	(___awmod@counter)
  3897  07AF  01B9               	incf	(___awmod@counter),f
  3898  07B0  0AB9               	line	21
  3899                           	goto	l3223
  3900  07B1  2FBC               	
  3901                           l549:	
  3902  07B2                     	line	22
  3903                           	
  3904                           l3219:	
  3905  07B2                     	movlw	01h
  3906  07B2  3001               	
  3907                           u2245:
  3908  07B3                     	lslf	(___awmod@divisor),f
  3909  07B3  35B4               	rlf	(___awmod@divisor+1),f
  3910  07B4  0DB5               	decfsz	wreg,f
  3911  07B5  0B89               	goto	u2245
  3912  07B6  2FB3               	line	23
  3913                           	
  3914                           l3221:	
  3915  07B7                     	movlw	low(01h)
  3916  07B7  3001               	movwf	(??___awmod+0)+0
  3917  07B8  00B8               	movf	(??___awmod+0)+0,w
  3918  07B9  0838               	addwf	(___awmod@counter),f
  3919  07BA  07B9               	goto	l3223
  3920  07BB  2FBC               	line	24
  3921                           	
  3922                           l548:	
  3923  07BC                     	line	21
  3924                           	
  3925                           l3223:	
  3926  07BC                     	btfss	(___awmod@divisor+1),(15)&7
  3927  07BC  1FB5               	goto	u2251
  3928  07BD  2FBF               	goto	u2250
  3929  07BE  2FC0               u2251:
  3930  07BF                     	goto	l3219
  3931  07BF  2FB2               u2250:
  3932  07C0                     	goto	l3225
  3933  07C0  2FC2               	
  3934                           l550:	
  3935  07C1                     	goto	l3225
  3936  07C1  2FC2               	line	25
  3937                           	
  3938                           l551:	
  3939  07C2                     	line	26
  3940                           	
  3941                           l3225:	
  3942  07C2                     	movf	(___awmod@divisor+1),w
  3943  07C2  0835               	subwf	(___awmod@dividend+1),w
  3944  07C3  0237               	skipz
  3945  07C4  1D03               	goto	u2265
  3946  07C5  2FC8               	movf	(___awmod@divisor),w
  3947  07C6  0834               	subwf	(___awmod@dividend),w
  3948  07C7  0236               u2265:
  3949  07C8                     	skipc
  3950  07C8  1C03               	goto	u2261
  3951  07C9  2FCB               	goto	u2260
  3952  07CA  2FCC               u2261:
  3953  07CB                     	goto	l3229
  3954  07CB  2FD1               u2260:
  3955  07CC                     	line	27
  3956                           	
  3957                           l3227:	
  3958  07CC                     	movf	(___awmod@divisor),w
  3959  07CC  0834               	subwf	(___awmod@dividend),f
  3960  07CD  02B6               	movf	(___awmod@divisor+1),w
  3961  07CE  0835               	subwfb	(___awmod@dividend+1),f
  3962  07CF  3BB7               	goto	l3229
  3963  07D0  2FD1               	
  3964                           l552:	
  3965  07D1                     	line	28
  3966                           	
  3967                           l3229:	
  3968  07D1                     	movlw	01h
  3969  07D1  3001               	
  3970                           u2275:
  3971  07D2                     	lsrf	(___awmod@divisor+1),f
  3972  07D2  36B5               	rrf	(___awmod@divisor),f
  3973  07D3  0CB4               	decfsz	wreg,f
  3974  07D4  0B89               	goto	u2275
  3975  07D5  2FD2               	line	29
  3976                           	
  3977                           l3231:	
  3978  07D6                     	movlw	01h
  3979  07D6  3001               	subwf	(___awmod@counter),f
  3980  07D7  02B9               	btfss	status,2
  3981  07D8  1D03               	goto	u2281
  3982  07D9  2FDB               	goto	u2280
  3983  07DA  2FDC               u2281:
  3984  07DB                     	goto	l3225
  3985  07DB  2FC2               u2280:
  3986  07DC                     	goto	l3233
  3987  07DC  2FDE               	
  3988                           l553:	
  3989  07DD                     	goto	l3233
  3990  07DD  2FDE               	line	30
  3991                           	
  3992                           l547:	
  3993  07DE                     	line	31
  3994                           	
  3995                           l3233:	
  3996  07DE                     	movf	((___awmod@sign)),w
  3997  07DE  083A               	btfsc	status,2
  3998  07DF  1903               	goto	u2291
  3999  07E0  2FE2               	goto	u2290
  4000  07E1  2FE3               u2291:
  4001  07E2                     	goto	l3237
  4002  07E2  2FE9               u2290:
  4003  07E3                     	line	32
  4004                           	
  4005                           l3235:	
  4006  07E3                     	comf	(___awmod@dividend),f
  4007  07E3  09B6               	comf	(___awmod@dividend+1),f
  4008  07E4  09B7               	incf	(___awmod@dividend),f
  4009  07E5  0AB6               	skipnz
  4010  07E6  1903               	incf	(___awmod@dividend+1),f
  4011  07E7  0AB7               	goto	l3237
  4012  07E8  2FE9               	
  4013                           l554:	
  4014  07E9                     	line	33
  4015                           	
  4016                           l3237:	
  4017  07E9                     	movf	(___awmod@dividend+1),w
  4018  07E9  0837               	movwf	(?___awmod+1)
  4019  07EA  00B5               	movf	(___awmod@dividend),w
  4020  07EB  0836               	movwf	(?___awmod)
  4021  07EC  00B4               	goto	l555
  4022  07ED  2FEE               	
  4023                           l3239:	
  4024  07EE                     	line	34
  4025                           	
  4026                           l555:	
  4027  07EE                     	return
  4028  07EE  0008               	opt stack 0
  4029                           GLOBAL	__end_of___awmod
  4030                           	__end_of___awmod:
  4031  07EF                     	signat	___awmod,8314
  4032                           	global	___awdiv
  4033                           
  4034 ;; *************** function ___awdiv *****************
  4035 ;; Defined at:
  4036 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  divisor         2   20[BANK0 ] int 
  4039 ;;  dividend        2   22[BANK0 ] int 
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;  quotient        2   27[BANK0 ] int 
  4042 ;;  sign            1   26[BANK0 ] unsigned char 
  4043 ;;  counter         1   25[BANK0 ] unsigned char 
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  2   20[BANK0 ] int 
  4046 ;; Registers used:
  4047 ;;		wreg, status,2, status,0
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4053 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4054 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4055 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4056 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0
  4057 ;;Total ram usage:        9 bytes
  4058 ;; Hardware stack levels used:    1
  4059 ;; Hardware stack levels required when called:    4
  4060 ;; This function calls:
  4061 ;;		Nothing
  4062 ;; This function is called by:
  4063 ;;		_printEM1812
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  4067                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  4068                           	line	5
  4069                           global __ptext5
  4070                           __ptext5:	;psect for function ___awdiv
  4071  06C7                     psect	text5
  4072                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  4073                           	line	5
  4074                           	global	__size_of___awdiv
  4075                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  4076  006A                     	
  4077                           ___awdiv:	
  4078  06C7                     ;incstack = 0
  4079                           	opt	stack 10
  4080                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4081                           	line	13
  4082                           	
  4083                           l3159:	
  4084  06C7                     	movlb 0	; select bank0
  4085  06C7  0020               	clrf	(___awdiv@sign)
  4086  06C8  01BA               	line	14
  4087                           	
  4088                           l3161:	
  4089  06C9                     	btfss	(___awdiv@divisor+1),7
  4090  06C9  1FB5               	goto	u2111
  4091  06CA  2ECC               	goto	u2110
  4092  06CB  2ECD               u2111:
  4093  06CC                     	goto	l3167
  4094  06CC  2ED5               u2110:
  4095  06CD                     	line	15
  4096                           	
  4097                           l3163:	
  4098  06CD                     	comf	(___awdiv@divisor),f
  4099  06CD  09B4               	comf	(___awdiv@divisor+1),f
  4100  06CE  09B5               	incf	(___awdiv@divisor),f
  4101  06CF  0AB4               	skipnz
  4102  06D0  1903               	incf	(___awdiv@divisor+1),f
  4103  06D1  0AB5               	line	16
  4104                           	
  4105                           l3165:	
  4106  06D2                     	clrf	(___awdiv@sign)
  4107  06D2  01BA               	incf	(___awdiv@sign),f
  4108  06D3  0ABA               	goto	l3167
  4109  06D4  2ED5               	line	17
  4110                           	
  4111                           l532:	
  4112  06D5                     	line	18
  4113                           	
  4114                           l3167:	
  4115  06D5                     	btfss	(___awdiv@dividend+1),7
  4116  06D5  1FB7               	goto	u2121
  4117  06D6  2ED8               	goto	u2120
  4118  06D7  2ED9               u2121:
  4119  06D8                     	goto	l3173
  4120  06D8  2EE3               u2120:
  4121  06D9                     	line	19
  4122                           	
  4123                           l3169:	
  4124  06D9                     	comf	(___awdiv@dividend),f
  4125  06D9  09B6               	comf	(___awdiv@dividend+1),f
  4126  06DA  09B7               	incf	(___awdiv@dividend),f
  4127  06DB  0AB6               	skipnz
  4128  06DC  1903               	incf	(___awdiv@dividend+1),f
  4129  06DD  0AB7               	line	20
  4130                           	
  4131                           l3171:	
  4132  06DE                     	movlw	low(01h)
  4133  06DE  3001               	movwf	(??___awdiv+0)+0
  4134  06DF  00B8               	movf	(??___awdiv+0)+0,w
  4135  06E0  0838               	xorwf	(___awdiv@sign),f
  4136  06E1  06BA               	goto	l3173
  4137  06E2  2EE3               	line	21
  4138                           	
  4139                           l533:	
  4140  06E3                     	line	22
  4141                           	
  4142                           l3173:	
  4143  06E3                     	clrf	(___awdiv@quotient)
  4144  06E3  01BB               	clrf	(___awdiv@quotient+1)
  4145  06E4  01BC               	line	23
  4146                           	
  4147                           l3175:	
  4148  06E5                     	movf	((___awdiv@divisor)),w
  4149  06E5  0834               iorwf	((___awdiv@divisor+1)),w
  4150  06E6  0435               	btfsc	status,2
  4151  06E7  1903               	goto	u2131
  4152  06E8  2EEA               	goto	u2130
  4153  06E9  2EEB               u2131:
  4154  06EA                     	goto	l3195
  4155  06EA  2F20               u2130:
  4156  06EB                     	line	24
  4157                           	
  4158                           l3177:	
  4159  06EB                     	clrf	(___awdiv@counter)
  4160  06EB  01B9               	incf	(___awdiv@counter),f
  4161  06EC  0AB9               	line	25
  4162                           	goto	l3183
  4163  06ED  2EF8               	
  4164                           l536:	
  4165  06EE                     	line	26
  4166                           	
  4167                           l3179:	
  4168  06EE                     	movlw	01h
  4169  06EE  3001               	
  4170                           u2145:
  4171  06EF                     	lslf	(___awdiv@divisor),f
  4172  06EF  35B4               	rlf	(___awdiv@divisor+1),f
  4173  06F0  0DB5               	decfsz	wreg,f
  4174  06F1  0B89               	goto	u2145
  4175  06F2  2EEF               	line	27
  4176                           	
  4177                           l3181:	
  4178  06F3                     	movlw	low(01h)
  4179  06F3  3001               	movwf	(??___awdiv+0)+0
  4180  06F4  00B8               	movf	(??___awdiv+0)+0,w
  4181  06F5  0838               	addwf	(___awdiv@counter),f
  4182  06F6  07B9               	goto	l3183
  4183  06F7  2EF8               	line	28
  4184                           	
  4185                           l535:	
  4186  06F8                     	line	25
  4187                           	
  4188                           l3183:	
  4189  06F8                     	btfss	(___awdiv@divisor+1),(15)&7
  4190  06F8  1FB5               	goto	u2151
  4191  06F9  2EFB               	goto	u2150
  4192  06FA  2EFC               u2151:
  4193  06FB                     	goto	l3179
  4194  06FB  2EEE               u2150:
  4195  06FC                     	goto	l3185
  4196  06FC  2EFE               	
  4197                           l537:	
  4198  06FD                     	goto	l3185
  4199  06FD  2EFE               	line	29
  4200                           	
  4201                           l538:	
  4202  06FE                     	line	30
  4203                           	
  4204                           l3185:	
  4205  06FE                     	movlw	01h
  4206  06FE  3001               	
  4207                           u2165:
  4208  06FF                     	lslf	(___awdiv@quotient),f
  4209  06FF  35BB               	rlf	(___awdiv@quotient+1),f
  4210  0700  0DBC               	decfsz	wreg,f
  4211  0701  0B89               	goto	u2165
  4212  0702  2EFF               	line	31
  4213                           	movf	(___awdiv@divisor+1),w
  4214  0703  0835               	subwf	(___awdiv@dividend+1),w
  4215  0704  0237               	skipz
  4216  0705  1D03               	goto	u2175
  4217  0706  2F09               	movf	(___awdiv@divisor),w
  4218  0707  0834               	subwf	(___awdiv@dividend),w
  4219  0708  0236               u2175:
  4220  0709                     	skipc
  4221  0709  1C03               	goto	u2171
  4222  070A  2F0C               	goto	u2170
  4223  070B  2F0D               u2171:
  4224  070C                     	goto	l3191
  4225  070C  2F13               u2170:
  4226  070D                     	line	32
  4227                           	
  4228                           l3187:	
  4229  070D                     	movf	(___awdiv@divisor),w
  4230  070D  0834               	subwf	(___awdiv@dividend),f
  4231  070E  02B6               	movf	(___awdiv@divisor+1),w
  4232  070F  0835               	subwfb	(___awdiv@dividend+1),f
  4233  0710  3BB7               	line	33
  4234                           	
  4235                           l3189:	
  4236  0711                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  4237  0711  143B               	goto	l3191
  4238  0712  2F13               	line	34
  4239                           	
  4240                           l539:	
  4241  0713                     	line	35
  4242                           	
  4243                           l3191:	
  4244  0713                     	movlw	01h
  4245  0713  3001               	
  4246                           u2185:
  4247  0714                     	lsrf	(___awdiv@divisor+1),f
  4248  0714  36B5               	rrf	(___awdiv@divisor),f
  4249  0715  0CB4               	decfsz	wreg,f
  4250  0716  0B89               	goto	u2185
  4251  0717  2F14               	line	36
  4252                           	
  4253                           l3193:	
  4254  0718                     	movlw	01h
  4255  0718  3001               	subwf	(___awdiv@counter),f
  4256  0719  02B9               	btfss	status,2
  4257  071A  1D03               	goto	u2191
  4258  071B  2F1D               	goto	u2190
  4259  071C  2F1E               u2191:
  4260  071D                     	goto	l3185
  4261  071D  2EFE               u2190:
  4262  071E                     	goto	l3195
  4263  071E  2F20               	
  4264                           l540:	
  4265  071F                     	goto	l3195
  4266  071F  2F20               	line	37
  4267                           	
  4268                           l534:	
  4269  0720                     	line	38
  4270                           	
  4271                           l3195:	
  4272  0720                     	movf	((___awdiv@sign)),w
  4273  0720  083A               	btfsc	status,2
  4274  0721  1903               	goto	u2201
  4275  0722  2F24               	goto	u2200
  4276  0723  2F25               u2201:
  4277  0724                     	goto	l3199
  4278  0724  2F2B               u2200:
  4279  0725                     	line	39
  4280                           	
  4281                           l3197:	
  4282  0725                     	comf	(___awdiv@quotient),f
  4283  0725  09BB               	comf	(___awdiv@quotient+1),f
  4284  0726  09BC               	incf	(___awdiv@quotient),f
  4285  0727  0ABB               	skipnz
  4286  0728  1903               	incf	(___awdiv@quotient+1),f
  4287  0729  0ABC               	goto	l3199
  4288  072A  2F2B               	
  4289                           l541:	
  4290  072B                     	line	40
  4291                           	
  4292                           l3199:	
  4293  072B                     	movf	(___awdiv@quotient+1),w
  4294  072B  083C               	movwf	(?___awdiv+1)
  4295  072C  00B5               	movf	(___awdiv@quotient),w
  4296  072D  083B               	movwf	(?___awdiv)
  4297  072E  00B4               	goto	l542
  4298  072F  2F30               	
  4299                           l3201:	
  4300  0730                     	line	41
  4301                           	
  4302                           l542:	
  4303  0730                     	return
  4304  0730  0008               	opt stack 0
  4305                           GLOBAL	__end_of___awdiv
  4306                           	__end_of___awdiv:
  4307  0731                     	signat	___awdiv,8314
  4308                           	global	_powerOnLcd
  4309                           
  4310 ;; *************** function _powerOnLcd *****************
  4311 ;; Defined at:
  4312 ;;		line 188 in file "LCD_hd44780u_qy_2004a.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;		None
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;		None
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  1    wreg      void 
  4319 ;; Registers used:
  4320 ;;		wreg, status,2, status,0, pclath, cstack
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4328 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4329 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4330 ;;Total ram usage:        1 bytes
  4331 ;; Hardware stack levels used:    1
  4332 ;; Hardware stack levels required when called:    7
  4333 ;; This function calls:
  4334 ;;		_writeInsChk
  4335 ;; This function is called by:
  4336 ;;		_main
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  4340                           	file	"LCD_hd44780u_qy_2004a.c"
  4341                           	line	188
  4342                           global __ptext6
  4343                           __ptext6:	;psect for function _powerOnLcd
  4344  0CD6                     psect	text6
  4345                           	file	"LCD_hd44780u_qy_2004a.c"
  4346                           	line	188
  4347                           	global	__size_of_powerOnLcd
  4348                           	__size_of_powerOnLcd	equ	__end_of_powerOnLcd-_powerOnLcd
  4349  000B                     	
  4350                           _powerOnLcd:	
  4351  0CD6                     ;incstack = 0
  4352                           	opt	stack 8
  4353                           ; Regs used in _powerOnLcd: [wreg+status,2+status,0+pclath+cstack]
  4354                           	line	190
  4355                           	
  4356                           l3369:	
  4357  0CD6                     ;LCD_hd44780u_qy_2004a.c: 190:   mDisplayOnOffReg = mDisplayOnOffReg | 0x04;
  4358                           	movlb 0	; select bank0
  4359  0CD6  0020               	movf	(_mDisplayOnOffReg),w
  4360  0CD7  085B               	iorlw	04h
  4361  0CD8  3804               	movwf	(??_powerOnLcd+0)+0
  4362  0CD9  00BA               	movf	(??_powerOnLcd+0)+0,w
  4363  0CDA  083A               	movwf	(_mDisplayOnOffReg)
  4364  0CDB  00DB               	line	191
  4365                           	
  4366                           l3371:	
  4367  0CDC                     ;LCD_hd44780u_qy_2004a.c: 191:   writeInsChk(mDisplayOnOffReg);
  4368                           	movf	(_mDisplayOnOffReg),w
  4369  0CDC  085B               	fcall	_writeInsChk
  4370  0CDD  318C  24CB  318C   	line	192
  4371                           	
  4372                           l339:	
  4373  0CE0                     	return
  4374  0CE0  0008               	opt stack 0
  4375                           GLOBAL	__end_of_powerOnLcd
  4376                           	__end_of_powerOnLcd:
  4377  0CE1                     	signat	_powerOnLcd,89
  4378                           	global	_moveCursorToHome
  4379                           
  4380 ;; *************** function _moveCursorToHome *****************
  4381 ;; Defined at:
  4382 ;;		line 249 in file "LCD_hd44780u_qy_2004a.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;		None
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2, status,0, pclath, cstack
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4400 ;;Total ram usage:        0 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    7
  4403 ;; This function calls:
  4404 ;;		_writeInsChk
  4405 ;; This function is called by:
  4406 ;;		_main
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  4410                           	line	249
  4411                           global __ptext7
  4412                           __ptext7:	;psect for function _moveCursorToHome
  4413  0CB9                     psect	text7
  4414                           	file	"LCD_hd44780u_qy_2004a.c"
  4415                           	line	249
  4416                           	global	__size_of_moveCursorToHome
  4417                           	__size_of_moveCursorToHome	equ	__end_of_moveCursorToHome-_moveCursorToHome
  4418  0008                     	
  4419                           _moveCursorToHome:	
  4420  0CB9                     ;incstack = 0
  4421                           	opt	stack 8
  4422                           ; Regs used in _moveCursorToHome: [wreg+status,2+status,0+pclath+cstack]
  4423                           	line	251
  4424                           	
  4425                           l3377:	
  4426  0CB9                     ;LCD_hd44780u_qy_2004a.c: 251:   writeInsChk(0x02);
  4427                           	movlw	low(02h)
  4428  0CB9  3002               	fcall	_writeInsChk
  4429  0CBA  318C  24CB  318C   	line	252
  4430                           	
  4431                           l3379:	
  4432  0CBD                     ;LCD_hd44780u_qy_2004a.c: 252:   mWritingPosition=1;
  4433                           	movlb 0	; select bank0
  4434  0CBD  0020               	clrf	(_mWritingPosition)
  4435  0CBE  01D9               	incf	(_mWritingPosition),f
  4436  0CBF  0AD9               	line	253
  4437                           	
  4438                           l375:	
  4439  0CC0                     	return
  4440  0CC0  0008               	opt stack 0
  4441                           GLOBAL	__end_of_moveCursorToHome
  4442                           	__end_of_moveCursorToHome:
  4443  0CC1                     	signat	_moveCursorToHome,89
  4444                           	global	_initLCD
  4445                           
  4446 ;; *************** function _initLCD *****************
  4447 ;; Defined at:
  4448 ;;		line 10 in file "LCD_hd44780u_qy_2004a.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;		None
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;		None
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      void 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0, pclath, cstack
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4464 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4465 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4466 ;;Total ram usage:        1 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; Hardware stack levels required when called:    8
  4469 ;; This function calls:
  4470 ;;		_clearDisplay
  4471 ;;		_setData
  4472 ;;		_writeInsChk
  4473 ;; This function is called by:
  4474 ;;		_main
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  4478                           	line	10
  4479                           global __ptext8
  4480                           __ptext8:	;psect for function _initLCD
  4481  0FB0                     psect	text8
  4482                           	file	"LCD_hd44780u_qy_2004a.c"
  4483                           	line	10
  4484                           	global	__size_of_initLCD
  4485                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  4486  0050                     	
  4487                           _initLCD:	
  4488  0FB0                     ;incstack = 0
  4489                           	opt	stack 7
  4490                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  4491                           	line	13
  4492                           	
  4493                           l3347:	
  4494  0FB0                     ;LCD_hd44780u_qy_2004a.c: 13:   TRISAbits.TRISA4 = 0;
  4495                           	movlb 1	; select bank1
  4496  0FB0  0021               	bcf	(140)^080h,4	;volatile
  4497  0FB1  120C               	line	14
  4498                           ;LCD_hd44780u_qy_2004a.c: 14:   TRISAbits.TRISA7 = 0;
  4499                           	bcf	(140)^080h,7	;volatile
  4500  0FB2  138C               	line	15
  4501                           ;LCD_hd44780u_qy_2004a.c: 15:   TRISAbits.TRISA5 = 0;
  4502                           	bcf	(140)^080h,5	;volatile
  4503  0FB3  128C               	line	16
  4504                           ;LCD_hd44780u_qy_2004a.c: 16:   PORTAbits.RA4 = 0;
  4505                           	movlb 0	; select bank0
  4506  0FB4  0020               	bcf	(12),4	;volatile
  4507  0FB5  120C               	line	17
  4508                           ;LCD_hd44780u_qy_2004a.c: 17:   PORTAbits.RA7 = 0;
  4509                           	bcf	(12),7	;volatile
  4510  0FB6  138C               	line	18
  4511                           ;LCD_hd44780u_qy_2004a.c: 18:   PORTAbits.RA5 = 0;
  4512                           	bcf	(12),5	;volatile
  4513  0FB7  128C               	line	21
  4514                           	
  4515                           l3349:	
  4516  0FB8                     ;LCD_hd44780u_qy_2004a.c: 21:   _delay((unsigned long)((15)*(16000000/4000.0)));
  4517                           	opt asmopt_push
  4518                           opt asmopt_off
  4519                           movlw	78
  4520  0FB8  304E               	movlb 0	; select bank0
  4521  0FB9  0020               movwf	((??_initLCD+0)+0),f
  4522  0FBA  00BA               	movlw	235
  4523  0FBB  30EB               u2917:
  4524  0FBC                     decfsz	wreg
  4525  0FBC  0B89               	goto	u2917
  4526  0FBD  2FBC               	decfsz	((??_initLCD+0)+0),f
  4527  0FBE  0BBA               	goto	u2917
  4528  0FBF  2FBC               opt asmopt_pop
  4529                           
  4530                           	line	22
  4531                           	
  4532                           l3351:	
  4533  0FC0                     ;LCD_hd44780u_qy_2004a.c: 22:   setData(0x3);
  4534                           	movlw	low(03h)
  4535  0FC0  3003               	fcall	_setData
  4536  0FC1  318E  26E5  318F   	line	23
  4537                           	
  4538                           l3353:	
  4539  0FC4                     ;LCD_hd44780u_qy_2004a.c: 23:   _delay((unsigned long)((5)*(16000000/4000.0)));
  4540                           	opt asmopt_push
  4541                           opt asmopt_off
  4542                           movlw	26
  4543  0FC4  301A               	movlb 0	; select bank0
  4544  0FC5  0020               movwf	((??_initLCD+0)+0),f
  4545  0FC6  00BA               	movlw	248
  4546  0FC7  30F8               u2927:
  4547  0FC8                     decfsz	wreg
  4548  0FC8  0B89               	goto	u2927
  4549  0FC9  2FC8               	decfsz	((??_initLCD+0)+0),f
  4550  0FCA  0BBA               	goto	u2927
  4551  0FCB  2FC8               	nop
  4552  0FCC  0000               opt asmopt_pop
  4553                           
  4554                           	line	24
  4555                           ;LCD_hd44780u_qy_2004a.c: 24:   setData(0x3);
  4556                           	movlw	low(03h)
  4557  0FCD  3003               	fcall	_setData
  4558  0FCE  318E  26E5  318F   	line	25
  4559                           	
  4560                           l3355:	
  4561  0FD1                     ;LCD_hd44780u_qy_2004a.c: 25:   _delay((unsigned long)((150)*(16000000/4000000.0)));
  4562                           	opt asmopt_push
  4563                           opt asmopt_off
  4564                           	movlw	200
  4565  0FD1  30C8               u2937:
  4566  0FD2                     decfsz	wreg
  4567  0FD2  0B89               	goto	u2937
  4568  0FD3  2FD2               opt asmopt_pop
  4569                           
  4570                           	line	26
  4571                           	
  4572                           l3357:	
  4573  0FD4                     ;LCD_hd44780u_qy_2004a.c: 26:   setData(0x3);
  4574                           	movlw	low(03h)
  4575  0FD4  3003               	fcall	_setData
  4576  0FD5  318E  26E5  318F   	line	27
  4577                           ;LCD_hd44780u_qy_2004a.c: 27:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  4578                           	opt asmopt_push
  4579                           opt asmopt_off
  4580                           	movlw	13
  4581  0FD8  300D               u2947:
  4582  0FD9                     decfsz	wreg
  4583  0FD9  0B89               	goto	u2947
  4584  0FDA  2FD9               	nop
  4585  0FDB  0000               opt asmopt_pop
  4586                           
  4587                           	line	28
  4588                           	
  4589                           l3359:	
  4590  0FDC                     ;LCD_hd44780u_qy_2004a.c: 28:   setData(0x2);
  4591                           	movlw	low(02h)
  4592  0FDC  3002               	fcall	_setData
  4593  0FDD  318E  26E5  318F   	line	29
  4594                           	
  4595                           l3361:	
  4596  0FE0                     ;LCD_hd44780u_qy_2004a.c: 29:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  4597                           	opt asmopt_push
  4598                           opt asmopt_off
  4599                           	movlw	13
  4600  0FE0  300D               u2957:
  4601  0FE1                     decfsz	wreg
  4602  0FE1  0B89               	goto	u2957
  4603  0FE2  2FE1               	nop
  4604  0FE3  0000               opt asmopt_pop
  4605                           
  4606                           	line	30
  4607                           ;LCD_hd44780u_qy_2004a.c: 30:   writeInsChk(0x28);
  4608                           	movlw	low(028h)
  4609  0FE4  3028               	fcall	_writeInsChk
  4610  0FE5  318C  24CB  318F   	line	31
  4611                           	
  4612                           l3363:	
  4613  0FE8                     ;LCD_hd44780u_qy_2004a.c: 31:   mDisplayOnOffReg = 0x0F;
  4614                           	movlw	low(0Fh)
  4615  0FE8  300F               	movlb 0	; select bank0
  4616  0FE9  0020               	movwf	(??_initLCD+0)+0
  4617  0FEA  00BA               	movf	(??_initLCD+0)+0,w
  4618  0FEB  083A               	movwf	(_mDisplayOnOffReg)
  4619  0FEC  00DB               	line	32
  4620                           	
  4621                           l3365:	
  4622  0FED                     ;LCD_hd44780u_qy_2004a.c: 32:   mCursorDisplayShiftReg= 0x06;
  4623                           	movlw	low(06h)
  4624  0FED  3006               	movwf	(??_initLCD+0)+0
  4625  0FEE  00BA               	movf	(??_initLCD+0)+0,w
  4626  0FEF  083A               	movwf	(_mCursorDisplayShiftReg)
  4627  0FF0  00DA               	line	33
  4628                           ;LCD_hd44780u_qy_2004a.c: 33:   writeInsChk(mDisplayOnOffReg);
  4629                           	movf	(_mDisplayOnOffReg),w
  4630  0FF1  085B               	fcall	_writeInsChk
  4631  0FF2  318C  24CB  318F   	line	35
  4632                           ;LCD_hd44780u_qy_2004a.c: 35:   clearDisplay();
  4633                           	fcall	_clearDisplay
  4634  0FF5  318C  24A2  318F   	line	36
  4635                           ;LCD_hd44780u_qy_2004a.c: 36:   writeInsChk(0x06);
  4636                           	movlw	low(06h)
  4637  0FF8  3006               	fcall	_writeInsChk
  4638  0FF9  318C  24CB  318F   	line	37
  4639                           	
  4640                           l3367:	
  4641  0FFC                     ;LCD_hd44780u_qy_2004a.c: 37:   mWritingPosition=1;
  4642                           	movlb 0	; select bank0
  4643  0FFC  0020               	clrf	(_mWritingPosition)
  4644  0FFD  01D9               	incf	(_mWritingPosition),f
  4645  0FFE  0AD9               	line	39
  4646                           	
  4647                           l280:	
  4648  0FFF                     	return
  4649  0FFF  0008               	opt stack 0
  4650                           GLOBAL	__end_of_initLCD
  4651                           	__end_of_initLCD:
  4652  1000                     	signat	_initLCD,89
  4653                           	global	_clearDisplay
  4654                           
  4655 ;; *************** function _clearDisplay *****************
  4656 ;; Defined at:
  4657 ;;		line 245 in file "LCD_hd44780u_qy_2004a.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;		None
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;		None
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  1    wreg      void 
  4664 ;; Registers used:
  4665 ;;		wreg, status,2, status,0, pclath, cstack
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4675 ;;Total ram usage:        0 bytes
  4676 ;; Hardware stack levels used:    1
  4677 ;; Hardware stack levels required when called:    7
  4678 ;; This function calls:
  4679 ;;		_writeInsChk
  4680 ;; This function is called by:
  4681 ;;		_main
  4682 ;;		_initLCD
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4686                           	line	245
  4687                           global __ptext9
  4688                           __ptext9:	;psect for function _clearDisplay
  4689  0CA2                     psect	text9
  4690                           	file	"LCD_hd44780u_qy_2004a.c"
  4691                           	line	245
  4692                           	global	__size_of_clearDisplay
  4693                           	__size_of_clearDisplay	equ	__end_of_clearDisplay-_clearDisplay
  4694  0005                     	
  4695                           _clearDisplay:	
  4696  0CA2                     ;incstack = 0
  4697                           	opt	stack 7
  4698                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  4699                           	line	247
  4700                           	
  4701                           l3157:	
  4702  0CA2                     ;LCD_hd44780u_qy_2004a.c: 247:   writeInsChk(0x01);
  4703                           	movlw	low(01h)
  4704  0CA2  3001               	fcall	_writeInsChk
  4705  0CA3  318C  24CB  318C   	line	248
  4706                           	
  4707                           l372:	
  4708  0CA6                     	return
  4709  0CA6  0008               	opt stack 0
  4710                           GLOBAL	__end_of_clearDisplay
  4711                           	__end_of_clearDisplay:
  4712  0CA7                     	signat	_clearDisplay,89
  4713                           	global	_writeInsChk
  4714                           
  4715 ;; *************** function _writeInsChk *****************
  4716 ;; Defined at:
  4717 ;;		line 132 in file "LCD_hd44780u_qy_2004a.c"
  4718 ;; Parameters:    Size  Location     Type
  4719 ;;  iOpCode         1    wreg     unsigned char 
  4720 ;; Auto vars:     Size  Location     Type
  4721 ;;  iOpCode         1   25[BANK0 ] unsigned char 
  4722 ;; Return value:  Size  Location     Type
  4723 ;;                  1    wreg      void 
  4724 ;; Registers used:
  4725 ;;		wreg, status,2, status,0, pclath, cstack
  4726 ;; Tracked objects:
  4727 ;;		On entry : 0/0
  4728 ;;		On exit  : 0/0
  4729 ;;		Unchanged: 0/0
  4730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4732 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4734 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4735 ;;Total ram usage:        1 bytes
  4736 ;; Hardware stack levels used:    1
  4737 ;; Hardware stack levels required when called:    6
  4738 ;; This function calls:
  4739 ;;		_waitLCDBusy
  4740 ;;		_writeInsNoChk
  4741 ;; This function is called by:
  4742 ;;		_initLCD
  4743 ;;		_powerOnLcd
  4744 ;;		_setNotBlinkingCursor
  4745 ;;		_setCursorOff
  4746 ;;		_clearDisplay
  4747 ;;		_moveCursorToHome
  4748 ;;		_powerOffLcd
  4749 ;;		_setBlinkingCursor
  4750 ;;		_setCursorOn
  4751 ;;		_setCursorMovingLeft
  4752 ;;		_setCursorMovingRight
  4753 ;;		_setDisplayMovingRight
  4754 ;;		_setDisplayMovingLeft
  4755 ;;		_moveCursorRight
  4756 ;;		_moveCursorLeft
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  4760                           	line	132
  4761                           global __ptext10
  4762                           __ptext10:	;psect for function _writeInsChk
  4763  0CCB                     psect	text10
  4764                           	file	"LCD_hd44780u_qy_2004a.c"
  4765                           	line	132
  4766                           	global	__size_of_writeInsChk
  4767                           	__size_of_writeInsChk	equ	__end_of_writeInsChk-_writeInsChk
  4768  000B                     	
  4769                           _writeInsChk:	
  4770  0CCB                     ;incstack = 0
  4771                           	opt	stack 8
  4772                           ; Regs used in _writeInsChk: [wreg+status,2+status,0+pclath+cstack]
  4773                           ;writeInsChk@iOpCode stored from wreg
  4774                           	movlb 0	; select bank0
  4775  0CCB  0020               	movwf	(writeInsChk@iOpCode)
  4776  0CCC  00B9               	line	134
  4777                           	
  4778                           l3025:	
  4779  0CCD                     ;LCD_hd44780u_qy_2004a.c: 132: void writeInsChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 33: {;LCD_hd44780u_qy_2004a.c: 134:   waitLCDBusy();
  4780                           	fcall	_waitLCDBusy
  4781  0CCD  318E  2650  318C   	line	135
  4782                           ;LCD_hd44780u_qy_2004a.c: 135:   writeInsNoChk(iOpCode);
  4783                           	movlb 0	; select bank0
  4784  0CD0  0020               	movf	(writeInsChk@iOpCode),w
  4785  0CD1  0839               	fcall	_writeInsNoChk
  4786  0CD2  318C  24F7  318C   	line	136
  4787                           	
  4788                           l318:	
  4789  0CD5                     	return
  4790  0CD5  0008               	opt stack 0
  4791                           GLOBAL	__end_of_writeInsChk
  4792                           	__end_of_writeInsChk:
  4793  0CD6                     	signat	_writeInsChk,4217
  4794                           	global	_writeInsNoChk
  4795                           
  4796 ;; *************** function _writeInsNoChk *****************
  4797 ;; Defined at:
  4798 ;;		line 138 in file "LCD_hd44780u_qy_2004a.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;  iOpCode         1    wreg     unsigned char 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;  iOpCode         1   24[BANK0 ] unsigned char 
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2, status,0, pclath, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4813 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4814 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4815 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  4816 ;;Total ram usage:        2 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:    5
  4819 ;; This function calls:
  4820 ;;		_SetToSendDataToLCD
  4821 ;;		_setData
  4822 ;; This function is called by:
  4823 ;;		_writeInsChk
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4827                           	line	138
  4828                           global __ptext11
  4829                           __ptext11:	;psect for function _writeInsNoChk
  4830  0CF7                     psect	text11
  4831                           	file	"LCD_hd44780u_qy_2004a.c"
  4832                           	line	138
  4833                           	global	__size_of_writeInsNoChk
  4834                           	__size_of_writeInsNoChk	equ	__end_of_writeInsNoChk-_writeInsNoChk
  4835  0018                     	
  4836                           _writeInsNoChk:	
  4837  0CF7                     ;incstack = 0
  4838                           	opt	stack 8
  4839                           ; Regs used in _writeInsNoChk: [wreg+status,2+status,0+pclath+cstack]
  4840                           ;writeInsNoChk@iOpCode stored from wreg
  4841                           	movlb 0	; select bank0
  4842  0CF7  0020               	movwf	(writeInsNoChk@iOpCode)
  4843  0CF8  00B8               	line	140
  4844                           	
  4845                           l3005:	
  4846  0CF9                     ;LCD_hd44780u_qy_2004a.c: 138: void writeInsNoChk(char iOpCode);LCD_hd44780u_qy_2004a.c:
                                  139: {;LCD_hd44780u_qy_2004a.c: 140:   SetToSendDataToLCD();
  4847                           	fcall	_SetToSendDataToLCD
  4848  0CF9  318C  24A7  318C   	line	141
  4849                           	
  4850                           l3007:	
  4851  0CFC                     ;LCD_hd44780u_qy_2004a.c: 141:   PORTAbits.RA4 = 0;
  4852                           	movlb 0	; select bank0
  4853  0CFC  0020               	bcf	(12),4	;volatile
  4854  0CFD  120C               	line	142
  4855                           	
  4856                           l3009:	
  4857  0CFE                     ;LCD_hd44780u_qy_2004a.c: 142:   PORTAbits.RA7 = 0;
  4858                           	bcf	(12),7	;volatile
  4859  0CFE  138C               	line	143
  4860                           	
  4861                           l3011:	
  4862  0CFF                     ;LCD_hd44780u_qy_2004a.c: 143:   setData(iOpCode >> 4);
  4863                           	movf	(writeInsNoChk@iOpCode),w
  4864  0CFF  0838               	movwf	(??_writeInsNoChk+0)+0
  4865  0D00  00B7               	movlw	04h
  4866  0D01  3004               u1955:
  4867  0D02                     	lsrf	(??_writeInsNoChk+0)+0,f
  4868  0D02  36B7               	decfsz	wreg,f
  4869  0D03  0B89               	goto	u1955
  4870  0D04  2D02               	movf	0+(??_writeInsNoChk+0)+0,w
  4871  0D05  0837               	fcall	_setData
  4872  0D06  318E  26E5  318C   	line	144
  4873                           	
  4874                           l3013:	
  4875  0D09                     ;LCD_hd44780u_qy_2004a.c: 144:   setData(iOpCode);
  4876                           	movlb 0	; select bank0
  4877  0D09  0020               	movf	(writeInsNoChk@iOpCode),w
  4878  0D0A  0838               	fcall	_setData
  4879  0D0B  318E  26E5  318C   	line	145
  4880                           	
  4881                           l321:	
  4882  0D0E                     	return
  4883  0D0E  0008               	opt stack 0
  4884                           GLOBAL	__end_of_writeInsNoChk
  4885                           	__end_of_writeInsNoChk:
  4886  0D0F                     	signat	_writeInsNoChk,4217
  4887                           	global	_ToggleBitRB5
  4888                           
  4889 ;; *************** function _ToggleBitRB5 *****************
  4890 ;; Defined at:
  4891 ;;		line 55 in file "161518_temp_main.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;		None
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;		None
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1    wreg      void 
  4898 ;; Registers used:
  4899 ;;		None
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4909 ;;Total ram usage:        0 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:    4
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_main
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  4919                           	file	"161518_temp_main.c"
  4920                           	line	55
  4921                           global __ptext12
  4922                           __ptext12:	;psect for function _ToggleBitRB5
  4923  0CC1                     psect	text12
  4924                           	file	"161518_temp_main.c"
  4925                           	line	55
  4926                           	global	__size_of_ToggleBitRB5
  4927                           	__size_of_ToggleBitRB5	equ	__end_of_ToggleBitRB5-_ToggleBitRB5
  4928  000A                     	
  4929                           _ToggleBitRB5:	
  4930  0CC1                     ;incstack = 0
  4931                           	opt	stack 11
  4932                           ; Regs used in _ToggleBitRB5: []
  4933                           	line	57
  4934                           	
  4935                           l3245:	
  4936  0CC1                     	movlb 0	; select bank0
  4937  0CC1  0020               	btfss	(13),5	;volatile
  4938  0CC2  1E8D               	goto	u2301
  4939  0CC3  2CC5               	goto	u2300
  4940  0CC4  2CC6               u2301:
  4941  0CC5                     	goto	l111
  4942  0CC5  2CC8               u2300:
  4943  0CC6                     	line	59
  4944                           	
  4945                           l3247:	
  4946  0CC6                     	bcf	(13),5	;volatile
  4947  0CC6  128D               	line	60
  4948                           	goto	l113
  4949  0CC7  2CCA               	line	61
  4950                           	
  4951                           l111:	
  4952  0CC8                     	line	63
  4953                           	bsf	(13),5	;volatile
  4954  0CC8  168D               	goto	l113
  4955  0CC9  2CCA               	line	64
  4956                           	
  4957                           l112:	
  4958  0CCA                     	line	65
  4959                           	
  4960                           l113:	
  4961  0CCA                     	return
  4962  0CCA  0008               	opt stack 0
  4963                           GLOBAL	__end_of_ToggleBitRB5
  4964                           	__end_of_ToggleBitRB5:
  4965  0CCB                     	signat	_ToggleBitRB5,89
  4966                           	global	_SetToGetTemp
  4967                           
  4968 ;; *************** function _SetToGetTemp *****************
  4969 ;; Defined at:
  4970 ;;		line 68 in file "161518_temp_main.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;		None
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;		None
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  1    wreg      void 
  4977 ;; Registers used:
  4978 ;;		wreg, status,2, status,0
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4986 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4987 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4988 ;;Total ram usage:        1 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; Hardware stack levels required when called:    4
  4991 ;; This function calls:
  4992 ;;		Nothing
  4993 ;; This function is called by:
  4994 ;;		_main
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4998                           	line	68
  4999                           global __ptext13
  5000                           __ptext13:	;psect for function _SetToGetTemp
  5001  0DD1                     psect	text13
  5002                           	file	"161518_temp_main.c"
  5003                           	line	68
  5004                           	global	__size_of_SetToGetTemp
  5005                           	__size_of_SetToGetTemp	equ	__end_of_SetToGetTemp-_SetToGetTemp
  5006  0029                     	
  5007                           _SetToGetTemp:	
  5008  0DD1                     ;incstack = 0
  5009                           	opt	stack 11
  5010                           ; Regs used in _SetToGetTemp: [wreg+status,2+status,0]
  5011                           	line	70
  5012                           	
  5013                           l3249:	
  5014  0DD1                     	movlb 0	; select bank0
  5015  0DD1  0020               	clrf	(_wTrial)
  5016  0DD2  01D2               	line	71
  5017                           	
  5018                           l3251:	
  5019  0DD3                     	movf	((_wI2CTxBufferSize)),w
  5020  0DD3  0855               	btfss	status,2
  5021  0DD4  1D03               	goto	u2311
  5022  0DD5  2DD7               	goto	u2310
  5023  0DD6  2DD8               u2311:
  5024  0DD7                     	goto	l119
  5025  0DD7  2DF9               u2310:
  5026  0DD8                     	line	73
  5027                           	
  5028                           l3253:	
  5029  0DD8                     	movlb 1	; select bank1
  5030  0DD8  0021               	bsf	(145)^080h,3	;volatile
  5031  0DD9  1591               	line	74
  5032                           	movlb 4	; select bank4
  5033  0DDA  0024               	bsf	(535)^0200h,7	;volatile
  5034  0DDB  1797               	line	75
  5035                           	
  5036                           l3255:	
  5037  0DDC                     	movlw	low(0B8h)
  5038  0DDC  30B8               	movlb 0	; select bank0
  5039  0DDD  0020               	movwf	(??_SetToGetTemp+0)+0
  5040  0DDE  00B4               	movf	(??_SetToGetTemp+0)+0,w
  5041  0DDF  0834               	movlb 1	; select bank1
  5042  0DE0  0021               	movwf	(_wI2CTxBuffer)^080h
  5043  0DE1  00A7               	line	76
  5044                           	movlw	low(03h)
  5045  0DE2  3003               	movlb 0	; select bank0
  5046  0DE3  0020               	movwf	(??_SetToGetTemp+0)+0
  5047  0DE4  00B4               	movf	(??_SetToGetTemp+0)+0,w
  5048  0DE5  0834               	movlb 1	; select bank1
  5049  0DE6  0021               	movwf	0+(_wI2CTxBuffer)^080h+01h
  5050  0DE7  00A8               	line	77
  5051                           	
  5052                           l3257:	
  5053  0DE8                     	clrf	0+(_wI2CTxBuffer)^080h+02h
  5054  0DE8  01A9               	line	78
  5055                           	
  5056                           l3259:	
  5057  0DE9                     	movlw	low(04h)
  5058  0DE9  3004               	movlb 0	; select bank0
  5059  0DEA  0020               	movwf	(??_SetToGetTemp+0)+0
  5060  0DEB  00B4               	movf	(??_SetToGetTemp+0)+0,w
  5061  0DEC  0834               	movlb 1	; select bank1
  5062  0DED  0021               	movwf	0+(_wI2CTxBuffer)^080h+03h
  5063  0DEE  00AA               	line	79
  5064                           	
  5065                           l3261:	
  5066  0DEF                     	movlw	low(04h)
  5067  0DEF  3004               	movlb 0	; select bank0
  5068  0DF0  0020               	movwf	(??_SetToGetTemp+0)+0
  5069  0DF1  00B4               	movf	(??_SetToGetTemp+0)+0,w
  5070  0DF2  0834               	movwf	(_wI2CTxBufferSize)
  5071  0DF3  00D5               	line	80
  5072                           	
  5073                           l3263:	
  5074  0DF4                     	movlb 1	; select bank1
  5075  0DF4  0021               	clrf	(_wI2CCommandState)^080h
  5076  0DF5  01A6               	line	81
  5077                           	
  5078                           l3265:	
  5079  0DF6                     	movlb 4	; select bank4
  5080  0DF6  0024               	bsf	(534)^0200h,0	;volatile
  5081  0DF7  1416               	goto	l119
  5082  0DF8  2DF9               	line	83
  5083                           	
  5084                           l118:	
  5085  0DF9                     	line	84
  5086                           	
  5087                           l119:	
  5088  0DF9                     	return
  5089  0DF9  0008               	opt stack 0
  5090                           GLOBAL	__end_of_SetToGetTemp
  5091                           	__end_of_SetToGetTemp:
  5092  0DFA                     	signat	_SetToGetTemp,89
  5093                           	global	_PrintLog
  5094                           
  5095 ;; *************** function _PrintLog *****************
  5096 ;; Defined at:
  5097 ;;		line 120 in file "161518_temp_main.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;  iText           1    wreg     PTR unsigned char 
  5100 ;;		 -> wInterruptText(75), 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  iText           1   42[BANK0 ] PTR unsigned char 
  5103 ;;		 -> wInterruptText(75), 
  5104 ;;  wInterruptTe    1   41[BANK0 ] unsigned char 
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  1    wreg      void 
  5107 ;; Registers used:
  5108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5109 ;; Tracked objects:
  5110 ;;		On entry : 0/0
  5111 ;;		On exit  : 0/0
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5115 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5116 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5117 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  5118 ;;Total ram usage:        4 bytes
  5119 ;; Hardware stack levels used:    1
  5120 ;; Hardware stack levels required when called:    9
  5121 ;; This function calls:
  5122 ;;		_lcdWriteText
  5123 ;;		_memset
  5124 ;;		_strlen
  5125 ;; This function is called by:
  5126 ;;		_main
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5130                           	line	120
  5131                           global __ptext14
  5132                           __ptext14:	;psect for function _PrintLog
  5133  0E7D                     psect	text14
  5134                           	file	"161518_temp_main.c"
  5135                           	line	120
  5136                           	global	__size_of_PrintLog
  5137                           	__size_of_PrintLog	equ	__end_of_PrintLog-_PrintLog
  5138  002E                     	
  5139                           _PrintLog:	
  5140  0E7D                     ;incstack = 0
  5141                           	opt	stack 6
  5142                           ; Regs used in _PrintLog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5143                           ;PrintLog@iText stored from wreg
  5144                           	movlb 0	; select bank0
  5145  0E7D  0020               	movwf	(PrintLog@iText)
  5146  0E7E  00CA               	line	122
  5147                           	
  5148                           l3291:	
  5149  0E7F                     	movf	(PrintLog@iText),w
  5150  0E7F  084A               	movwf	(strlen@s)
  5151  0E80  00B4               	movlw	0x1
  5152  0E81  3001               
  5153                           	movwf	(strlen@s+1)
  5154  0E82  00B5               	fcall	_strlen
  5155  0E83  318D  2588  318E   	movlb 0	; select bank0
  5156  0E86  0020               	movf	(0+(?_strlen)),w
  5157  0E87  0834               	movwf	(??_PrintLog+0)+0
  5158  0E88  00C7               	movf	(??_PrintLog+0)+0,w
  5159  0E89  0847               	movwf	(PrintLog@wInterruptTextLen)
  5160  0E8A  00C9               	line	124
  5161                           	
  5162                           l3293:	
  5163  0E8B                     	movf	((PrintLog@wInterruptTextLen)),w
  5164  0E8B  0849               	btfsc	status,2
  5165  0E8C  1903               	goto	u2341
  5166  0E8D  2E8F               	goto	u2340
  5167  0E8E  2E90               u2341:
  5168  0E8F                     	goto	l135
  5169  0E8F  2EAA               u2340:
  5170  0E90                     	line	126
  5171                           	
  5172                           l3295:	
  5173  0E90                     	movf	(PrintLog@iText),w
  5174  0E90  084A               	movwf	(lcdWriteText@iText)
  5175  0E91  00C1               	movlw	0x1
  5176  0E92  3001               
  5177                           	movwf	(lcdWriteText@iText+1)
  5178  0E93  00C2               	fcall	_lcdWriteText
  5179  0E94  318D  25FA  318E   	line	127
  5180                           	
  5181                           l3297:	
  5182  0E97                     	movlb 0	; select bank0
  5183  0E97  0020               	movf	(PrintLog@iText),w
  5184  0E98  084A               	movwf	(memset@dest)
  5185  0E99  00B4               	movlw	0x1
  5186  0E9A  3001               
  5187                           	movwf	(memset@dest+1)
  5188  0E9B  00B5               	movlw	0
  5189  0E9C  3000               	movwf	(memset@c)
  5190  0E9D  00B6               	movwf	(memset@c+1)
  5191  0E9E  00B7               	movf	(PrintLog@wInterruptTextLen),w
  5192  0E9F  0849               	movwf	(??_PrintLog+0)+0
  5193  0EA0  00C7               	clrf	(??_PrintLog+0)+0+1
  5194  0EA1  01C8               	movf	0+(??_PrintLog+0)+0,w
  5195  0EA2  0847               	movwf	(memset@n)
  5196  0EA3  00B8               	movf	1+(??_PrintLog+0)+0,w
  5197  0EA4  0848               	movwf	(memset@n+1)
  5198  0EA5  00B9               	fcall	_memset
  5199  0EA6  3184  24A6  318E   	goto	l135
  5200  0EA9  2EAA               	line	128
  5201                           	
  5202                           l134:	
  5203  0EAA                     	line	129
  5204                           	
  5205                           l135:	
  5206  0EAA                     	return
  5207  0EAA  0008               	opt stack 0
  5208                           GLOBAL	__end_of_PrintLog
  5209                           	__end_of_PrintLog:
  5210  0EAB                     	signat	_PrintLog,4217
  5211                           	global	_lcdWriteText
  5212                           
  5213 ;; *************** function _lcdWriteText *****************
  5214 ;; Defined at:
  5215 ;;		line 41 in file "LCD_hd44780u_qy_2004a.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  iText           2   33[BANK0 ] PTR unsigned char 
  5218 ;;		 -> STR_6(16), STR_5(16), STR_4(16), STR_3(16), 
  5219 ;;		 -> main@wConv(4), wInterruptText(75), 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;  wCharReading    1   38[BANK0 ] unsigned char 
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  1    wreg      void 
  5224 ;; Registers used:
  5225 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5231 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5232 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5233 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  5234 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  5235 ;;Total ram usage:        6 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; Hardware stack levels required when called:    8
  5238 ;; This function calls:
  5239 ;;		_writeTxtChk
  5240 ;; This function is called by:
  5241 ;;		_PrintLog
  5242 ;;		_main
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5246                           	file	"LCD_hd44780u_qy_2004a.c"
  5247                           	line	41
  5248                           global __ptext15
  5249                           __ptext15:	;psect for function _lcdWriteText
  5250  0DFA                     psect	text15
  5251                           	file	"LCD_hd44780u_qy_2004a.c"
  5252                           	line	41
  5253                           	global	__size_of_lcdWriteText
  5254                           	__size_of_lcdWriteText	equ	__end_of_lcdWriteText-_lcdWriteText
  5255  002A                     	
  5256                           _lcdWriteText:	
  5257  0DFA                     ;incstack = 0
  5258                           	opt	stack 7
  5259                           ; Regs used in _lcdWriteText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5260                           	line	43
  5261                           	
  5262                           l3149:	
  5263  0DFA                     ;LCD_hd44780u_qy_2004a.c: 41: void lcdWriteText(char *iText);LCD_hd44780u_qy_2004a.c: 42
                                 :  {;LCD_hd44780u_qy_2004a.c: 43:   unsigned char wCharReadingPos = 0;
  5264                           	movlb 0	; select bank0
  5265  0DFA  0020               	clrf	(lcdWriteText@wCharReadingPos)
  5266  0DFB  01C6               	line	44
  5267                           ;LCD_hd44780u_qy_2004a.c: 44:   while( iText[wCharReadingPos] != 0)
  5268                           	goto	l3155
  5269  0DFC  2E12               	
  5270                           l284:	
  5271  0DFD                     	line	46
  5272                           	
  5273                           l3151:	
  5274  0DFD                     ;LCD_hd44780u_qy_2004a.c: 45:   {;LCD_hd44780u_qy_2004a.c: 46:     writeTxtChk(iText[wCh
                                 arReadingPos]);
  5275                           	movf	(lcdWriteText@iText+1),w
  5276  0DFD  0842               	movwf	(??_lcdWriteText+0)+0+1
  5277  0DFE  00C4               	movf	(lcdWriteText@iText),w
  5278  0DFF  0841               	movwf	(??_lcdWriteText+0)+0
  5279  0E00  00C3               	movf	(lcdWriteText@wCharReadingPos),w
  5280  0E01  0846               	addwf	(??_lcdWriteText+0)+0,w
  5281  0E02  0743               	movwf	fsr0l
  5282  0E03  0084               	movf	(??_lcdWriteText+0)+1,w
  5283  0E04  0844               	skipnc
  5284  0E05  1803               	incf	(??_lcdWriteText+0)+1,w
  5285  0E06  0A44               	movwf	fsr0h
  5286  0E07  0085               
  5287                           	movf	indf0,w ;code access
  5288  0E08  0800               	fcall	_writeTxtChk
  5289  0E09  3186  2630  318D   	line	47
  5290                           	
  5291                           l3153:	
  5292  0E0C                     ;LCD_hd44780u_qy_2004a.c: 47:     wCharReadingPos++;
  5293                           	movlw	low(01h)
  5294  0E0C  3001               	movlb 0	; select bank0
  5295  0E0D  0020               	movwf	(??_lcdWriteText+0)+0
  5296  0E0E  00C3               	movf	(??_lcdWriteText+0)+0,w
  5297  0E0F  0843               	addwf	(lcdWriteText@wCharReadingPos),f
  5298  0E10  07C6               	goto	l3155
  5299  0E11  2E12               	line	48
  5300                           ;LCD_hd44780u_qy_2004a.c: 48:   }
  5301                           	
  5302                           l283:	
  5303  0E12                     	line	44
  5304                           	
  5305                           l3155:	
  5306  0E12                     ;LCD_hd44780u_qy_2004a.c: 44:   while( iText[wCharReadingPos] != 0)
  5307                           	movf	(lcdWriteText@iText+1),w
  5308  0E12  0842               	movwf	(??_lcdWriteText+0)+0+1
  5309  0E13  00C4               	movf	(lcdWriteText@iText),w
  5310  0E14  0841               	movwf	(??_lcdWriteText+0)+0
  5311  0E15  00C3               	movf	(lcdWriteText@wCharReadingPos),w
  5312  0E16  0846               	addwf	(??_lcdWriteText+0)+0,w
  5313  0E17  0743               	movwf	fsr0l
  5314  0E18  0084               	movf	(??_lcdWriteText+0)+1,w
  5315  0E19  0844               	skipnc
  5316  0E1A  1803               	incf	(??_lcdWriteText+0)+1,w
  5317  0E1B  0A44               	movwf	fsr0h
  5318  0E1C  0085               
  5319                           	moviw	fsr0++
  5320  0E1D  0012               	btfss	status,2
  5321  0E1E  1D03               	goto	u2101
  5322  0E1F  2E21               	goto	u2100
  5323  0E20  2E22               u2101:
  5324  0E21                     	goto	l3151
  5325  0E21  2DFD               u2100:
  5326  0E22                     	goto	l286
  5327  0E22  2E23               	
  5328                           l285:	
  5329  0E23                     	line	50
  5330                           	
  5331                           l286:	
  5332  0E23                     	return
  5333  0E23  0008               	opt stack 0
  5334                           GLOBAL	__end_of_lcdWriteText
  5335                           	__end_of_lcdWriteText:
  5336  0E24                     	signat	_lcdWriteText,4217
  5337                           	global	_writeTxtChk
  5338                           
  5339 ;; *************** function _writeTxtChk *****************
  5340 ;; Defined at:
  5341 ;;		line 79 in file "LCD_hd44780u_qy_2004a.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;  iOpCode         1    wreg     unsigned char 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  iOpCode         1   32[BANK0 ] unsigned char 
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  1    wreg      void 
  5348 ;; Registers used:
  5349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5356 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5357 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5358 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  5359 ;;Total ram usage:        3 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; Hardware stack levels required when called:    7
  5362 ;; This function calls:
  5363 ;;		_SetToSendDataToLCD
  5364 ;;		_setCursorPosition
  5365 ;;		_setData
  5366 ;;		_waitLCDBusy
  5367 ;; This function is called by:
  5368 ;;		_lcdWriteText
  5369 ;;		_lcdWriteRotText
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5373                           	line	79
  5374                           global __ptext16
  5375                           __ptext16:	;psect for function _writeTxtChk
  5376  0630                     psect	text16
  5377                           	file	"LCD_hd44780u_qy_2004a.c"
  5378                           	line	79
  5379                           	global	__size_of_writeTxtChk
  5380                           	__size_of_writeTxtChk	equ	__end_of_writeTxtChk-_writeTxtChk
  5381  0097                     	
  5382                           _writeTxtChk:	
  5383  0630                     ;incstack = 0
  5384                           	opt	stack 7
  5385                           ; Regs used in _writeTxtChk: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5386                           ;writeTxtChk@iOpCode stored from wreg
  5387                           	movlb 0	; select bank0
  5388  0630  0020               	movwf	(writeTxtChk@iOpCode)
  5389  0631  00C0               	line	81
  5390                           	
  5391                           l3027:	
  5392  0632                     ;LCD_hd44780u_qy_2004a.c: 79: void writeTxtChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 80
                                 : {;LCD_hd44780u_qy_2004a.c: 81:   SetToSendDataToLCD();
  5393                           	fcall	_SetToSendDataToLCD
  5394  0632  318C  24A7  3186   	line	82
  5395                           	
  5396                           l3029:	
  5397  0635                     ;LCD_hd44780u_qy_2004a.c: 82:   PORTAbits.RA4 = 1;
  5398                           	movlb 0	; select bank0
  5399  0635  0020               	bsf	(12),4	;volatile
  5400  0636  160C               	line	83
  5401                           	
  5402                           l3031:	
  5403  0637                     ;LCD_hd44780u_qy_2004a.c: 83:   PORTAbits.RA7 = 0;
  5404                           	bcf	(12),7	;volatile
  5405  0637  138C               	line	84
  5406                           	
  5407                           l3033:	
  5408  0638                     ;LCD_hd44780u_qy_2004a.c: 84:   if(iOpCode == '\n')
  5409                           		movlw	10
  5410  0638  300A               	xorwf	((writeTxtChk@iOpCode)),w
  5411  0639  0640               	btfss	status,2
  5412  063A  1D03               	goto	u1971
  5413  063B  2E3D               	goto	u1970
  5414  063C  2E3E               u1971:
  5415  063D                     	goto	l3063
  5416  063D  2E90               u1970:
  5417  063E                     	line	86
  5418                           	
  5419                           l3035:	
  5420  063E                     ;LCD_hd44780u_qy_2004a.c: 85:   {;LCD_hd44780u_qy_2004a.c: 86:    if(mWritingPosition < 
                                 20)
  5421                           	movlw	low(014h)
  5422  063E  3014               	subwf	(_mWritingPosition),w
  5423  063F  0259               	skipnc
  5424  0640  1803               	goto	u1981
  5425  0641  2E43               	goto	u1980
  5426  0642  2E44               u1981:
  5427  0643                     	goto	l3039
  5428  0643  2E4A               u1980:
  5429  0644                     	line	88
  5430                           	
  5431                           l3037:	
  5432  0644                     ;LCD_hd44780u_qy_2004a.c: 87:    {;LCD_hd44780u_qy_2004a.c: 88:        setCursorPosition
                                 (1,0);
  5433                           	clrf	(setCursorPosition@iPosition)
  5434  0644  01B9               	movlw	low(01h)
  5435  0645  3001               	fcall	_setCursorPosition
  5436  0646  3187  2731  3186   	line	89
  5437                           ;LCD_hd44780u_qy_2004a.c: 89:    }
  5438                           	goto	l308
  5439  0649  2EC6               	line	90
  5440                           ;LCD_hd44780u_qy_2004a.c: 90:    else if(mWritingPosition < 40)
  5441                           	
  5442                           l302:	
  5443  064A                     	
  5444                           l3039:	
  5445  064A                     	movlw	low(028h)
  5446  064A  3028               	movlb 0	; select bank0
  5447  064B  0020               	subwf	(_mWritingPosition),w
  5448  064C  0259               	skipnc
  5449  064D  1803               	goto	u1991
  5450  064E  2E50               	goto	u1990
  5451  064F  2E51               u1991:
  5452  0650                     	goto	l3043
  5453  0650  2E57               u1990:
  5454  0651                     	line	92
  5455                           	
  5456                           l3041:	
  5457  0651                     ;LCD_hd44780u_qy_2004a.c: 91:    {;LCD_hd44780u_qy_2004a.c: 92:        setCursorPosition
                                 (2,0);
  5458                           	clrf	(setCursorPosition@iPosition)
  5459  0651  01B9               	movlw	low(02h)
  5460  0652  3002               	fcall	_setCursorPosition
  5461  0653  3187  2731  3186   	line	93
  5462                           ;LCD_hd44780u_qy_2004a.c: 93:    }
  5463                           	goto	l308
  5464  0656  2EC6               	line	94
  5465                           ;LCD_hd44780u_qy_2004a.c: 94:    else if(mWritingPosition < 60)
  5466                           	
  5467                           l304:	
  5468  0657                     	
  5469                           l3043:	
  5470  0657                     	movlw	low(03Ch)
  5471  0657  303C               	movlb 0	; select bank0
  5472  0658  0020               	subwf	(_mWritingPosition),w
  5473  0659  0259               	skipnc
  5474  065A  1803               	goto	u2001
  5475  065B  2E5D               	goto	u2000
  5476  065C  2E5E               u2001:
  5477  065D                     	goto	l3047
  5478  065D  2E64               u2000:
  5479  065E                     	line	96
  5480                           	
  5481                           l3045:	
  5482  065E                     ;LCD_hd44780u_qy_2004a.c: 95:    {;LCD_hd44780u_qy_2004a.c: 96:        setCursorPosition
                                 (3,0);
  5483                           	clrf	(setCursorPosition@iPosition)
  5484  065E  01B9               	movlw	low(03h)
  5485  065F  3003               	fcall	_setCursorPosition
  5486  0660  3187  2731  3186   	line	97
  5487                           ;LCD_hd44780u_qy_2004a.c: 97:    }
  5488                           	goto	l308
  5489  0663  2EC6               	line	98
  5490                           ;LCD_hd44780u_qy_2004a.c: 98:    else
  5491                           	
  5492                           l306:	
  5493  0664                     	line	100
  5494                           	
  5495                           l3047:	
  5496  0664                     ;LCD_hd44780u_qy_2004a.c: 99:    {;LCD_hd44780u_qy_2004a.c: 100:        setCursorPositio
                                 n(0,0);
  5497                           	movlb 0	; select bank0
  5498  0664  0020               	clrf	(setCursorPosition@iPosition)
  5499  0665  01B9               	movlw	low(0)
  5500  0666  3000               	fcall	_setCursorPosition
  5501  0667  3187  2731  3186   	goto	l308
  5502  066A  2EC6               	line	101
  5503                           ;LCD_hd44780u_qy_2004a.c: 101:    }
  5504                           	
  5505                           l307:	
  5506  066B                     	goto	l308
  5507  066B  2EC6               	
  5508                           l305:	
  5509  066C                     	goto	l308
  5510  066C  2EC6               	
  5511                           l303:	
  5512  066D                     	goto	l308
  5513  066D  2EC6               	line	102
  5514                           	
  5515                           l3049:	
  5516  066E                     ;LCD_hd44780u_qy_2004a.c: 102:    return;
  5517                           	goto	l308
  5518  066E  2EC6               	line	103
  5519                           ;LCD_hd44780u_qy_2004a.c: 103:   }
  5520                           	
  5521                           l301:	
  5522  066F                     	line	104
  5523                           ;LCD_hd44780u_qy_2004a.c: 104:   switch(mWritingPosition)
  5524                           	goto	l3063
  5525  066F  2E90               	line	106
  5526                           ;LCD_hd44780u_qy_2004a.c: 105:   {;LCD_hd44780u_qy_2004a.c: 106:     case 20:
  5527                           	
  5528                           l310:	
  5529  0670                     	line	107
  5530                           	
  5531                           l3051:	
  5532  0670                     ;LCD_hd44780u_qy_2004a.c: 107:       setCursorPosition(1,0);
  5533                           	movlb 0	; select bank0
  5534  0670  0020               	clrf	(setCursorPosition@iPosition)
  5535  0671  01B9               	movlw	low(01h)
  5536  0672  3001               	fcall	_setCursorPosition
  5537  0673  3187  2731  3186   	line	108
  5538                           ;LCD_hd44780u_qy_2004a.c: 108:       break;
  5539                           	goto	l3065
  5540  0676  2EA7               	line	109
  5541                           ;LCD_hd44780u_qy_2004a.c: 109:     case 40:
  5542                           	
  5543                           l312:	
  5544  0677                     	line	110
  5545                           	
  5546                           l3053:	
  5547  0677                     ;LCD_hd44780u_qy_2004a.c: 110:       setCursorPosition(2,0);
  5548                           	movlb 0	; select bank0
  5549  0677  0020               	clrf	(setCursorPosition@iPosition)
  5550  0678  01B9               	movlw	low(02h)
  5551  0679  3002               	fcall	_setCursorPosition
  5552  067A  3187  2731  3186   	line	111
  5553                           ;LCD_hd44780u_qy_2004a.c: 111:       break;
  5554                           	goto	l3065
  5555  067D  2EA7               	line	112
  5556                           ;LCD_hd44780u_qy_2004a.c: 112:     case 60:
  5557                           	
  5558                           l313:	
  5559  067E                     	line	113
  5560                           	
  5561                           l3055:	
  5562  067E                     ;LCD_hd44780u_qy_2004a.c: 113:       setCursorPosition(3,0);
  5563                           	movlb 0	; select bank0
  5564  067E  0020               	clrf	(setCursorPosition@iPosition)
  5565  067F  01B9               	movlw	low(03h)
  5566  0680  3003               	fcall	_setCursorPosition
  5567  0681  3187  2731  3186   	line	114
  5568                           ;LCD_hd44780u_qy_2004a.c: 114:       break;
  5569                           	goto	l3065
  5570  0684  2EA7               	line	115
  5571                           ;LCD_hd44780u_qy_2004a.c: 115:     case 80:
  5572                           	
  5573                           l314:	
  5574  0685                     	line	116
  5575                           	
  5576                           l3057:	
  5577  0685                     ;LCD_hd44780u_qy_2004a.c: 116:       setCursorPosition(0,0);
  5578                           	movlb 0	; select bank0
  5579  0685  0020               	clrf	(setCursorPosition@iPosition)
  5580  0686  01B9               	movlw	low(0)
  5581  0687  3000               	fcall	_setCursorPosition
  5582  0688  3187  2731  3186   	line	117
  5583                           	
  5584                           l3059:	
  5585  068B                     ;LCD_hd44780u_qy_2004a.c: 117:       mWritingPosition = 0;
  5586                           	movlb 0	; select bank0
  5587  068B  0020               	clrf	(_mWritingPosition)
  5588  068C  01D9               	line	118
  5589                           ;LCD_hd44780u_qy_2004a.c: 118:       break;
  5590                           	goto	l3065
  5591  068D  2EA7               	line	119
  5592                           ;LCD_hd44780u_qy_2004a.c: 119:     default:
  5593                           	
  5594                           l315:	
  5595  068E                     	line	120
  5596                           ;LCD_hd44780u_qy_2004a.c: 120:       break;
  5597                           	goto	l3065
  5598  068E  2EA7               	line	121
  5599                           	
  5600                           l3061:	
  5601  068F                     ;LCD_hd44780u_qy_2004a.c: 121:   }
  5602                           	goto	l3065
  5603  068F  2EA7               	
  5604                           l309:	
  5605  0690                     	
  5606                           l3063:	
  5607  0690                     	movlb 0	; select bank0
  5608  0690  0020               	movf	(_mWritingPosition),w
  5609  0691  0859               	movwf	(??_writeTxtChk+0)+0
  5610  0692  00BE               	clrf	(??_writeTxtChk+0)+0+1
  5611  0693  01BF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5612                           ; Switch size 1, requested type "space"
  5613                           ; Number of cases is 1, Range of values is 0 to 0
  5614                           ; switch strategies available:
  5615                           ; Name         Instructions Cycles
  5616                           ; simple_byte            4     3 (average)
  5617                           ; direct_byte            8     6 (fixed)
  5618                           ; jumptable            260     6 (fixed)
  5619                           ;	Chosen strategy is simple_byte
  5620                           
  5621                           	movf 1+(??_writeTxtChk+0)+0,w
  5622  0694  083F               	opt asmopt_push
  5623                           	opt asmopt_off
  5624                           	xorlw	0^0	; case 0
  5625  0695  3A00               	skipnz
  5626  0696  1903               	goto	l3981
  5627  0697  2E99               	goto	l3065
  5628  0698  2EA7               	opt asmopt_pop
  5629                           	
  5630                           l3981:	
  5631  0699                     ; Switch size 1, requested type "space"
  5632                           ; Number of cases is 4, Range of values is 20 to 80
  5633                           ; switch strategies available:
  5634                           ; Name         Instructions Cycles
  5635                           ; simple_byte           13     7 (average)
  5636                           ; direct_byte          131     9 (fixed)
  5637                           ; jumptable            263     9 (fixed)
  5638                           ;	Chosen strategy is simple_byte
  5639                           
  5640                           	movf 0+(??_writeTxtChk+0)+0,w
  5641  0699  083E               	opt asmopt_push
  5642                           	opt asmopt_off
  5643                           	xorlw	20^0	; case 20
  5644  069A  3A14               	skipnz
  5645  069B  1903               	goto	l3051
  5646  069C  2E70               	xorlw	40^20	; case 40
  5647  069D  3A3C               	skipnz
  5648  069E  1903               	goto	l3053
  5649  069F  2E77               	xorlw	60^40	; case 60
  5650  06A0  3A14               	skipnz
  5651  06A1  1903               	goto	l3055
  5652  06A2  2E7E               	xorlw	80^60	; case 80
  5653  06A3  3A6C               	skipnz
  5654  06A4  1903               	goto	l3057
  5655  06A5  2E85               	goto	l3065
  5656  06A6  2EA7               	opt asmopt_pop
  5657                           
  5658                           	
  5659                           l311:	
  5660  06A7                     	line	122
  5661                           	
  5662                           l3065:	
  5663  06A7                     ;LCD_hd44780u_qy_2004a.c: 122:   waitLCDBusy();
  5664                           	fcall	_waitLCDBusy
  5665  06A7  318E  2650  3186   	line	123
  5666                           	
  5667                           l3067:	
  5668  06AA                     ;LCD_hd44780u_qy_2004a.c: 123:   SetToSendDataToLCD();
  5669                           	fcall	_SetToSendDataToLCD
  5670  06AA  318C  24A7  3186   	line	124
  5671                           	
  5672                           l3069:	
  5673  06AD                     ;LCD_hd44780u_qy_2004a.c: 124:   PORTAbits.RA4 = 1;
  5674                           	movlb 0	; select bank0
  5675  06AD  0020               	bsf	(12),4	;volatile
  5676  06AE  160C               	line	125
  5677                           	
  5678                           l3071:	
  5679  06AF                     ;LCD_hd44780u_qy_2004a.c: 125:   PORTAbits.RA7 = 0;
  5680                           	bcf	(12),7	;volatile
  5681  06AF  138C               	line	126
  5682                           	
  5683                           l3073:	
  5684  06B0                     ;LCD_hd44780u_qy_2004a.c: 126:   setData(iOpCode >> 4);
  5685                           	movf	(writeTxtChk@iOpCode),w
  5686  06B0  0840               	movwf	(??_writeTxtChk+0)+0
  5687  06B1  00BE               	movlw	04h
  5688  06B2  3004               u2015:
  5689  06B3                     	lsrf	(??_writeTxtChk+0)+0,f
  5690  06B3  36BE               	decfsz	wreg,f
  5691  06B4  0B89               	goto	u2015
  5692  06B5  2EB3               	movf	0+(??_writeTxtChk+0)+0,w
  5693  06B6  083E               	fcall	_setData
  5694  06B7  318E  26E5  3186   	line	127
  5695                           	
  5696                           l3075:	
  5697  06BA                     ;LCD_hd44780u_qy_2004a.c: 127:   setData(iOpCode);
  5698                           	movlb 0	; select bank0
  5699  06BA  0020               	movf	(writeTxtChk@iOpCode),w
  5700  06BB  0840               	fcall	_setData
  5701  06BC  318E  26E5  3186   	line	128
  5702                           	
  5703                           l3077:	
  5704  06BF                     ;LCD_hd44780u_qy_2004a.c: 128:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  5705                           		opt asmopt_push
  5706                           	opt asmopt_off
  5707                           	nop2	;2 cycle nop
  5708  06BF  3200               	nop2	;2 cycle nop
  5709  06C0  3200               	opt asmopt_pop
  5710                           
  5711                           	line	129
  5712                           	
  5713                           l3079:	
  5714  06C1                     ;LCD_hd44780u_qy_2004a.c: 129:   mWritingPosition++;
  5715                           	movlw	low(01h)
  5716  06C1  3001               	movlb 0	; select bank0
  5717  06C2  0020               	movwf	(??_writeTxtChk+0)+0
  5718  06C3  00BE               	movf	(??_writeTxtChk+0)+0,w
  5719  06C4  083E               	addwf	(_mWritingPosition),f
  5720  06C5  07D9               	line	130
  5721                           	
  5722                           l308:	
  5723  06C6                     	return
  5724  06C6  0008               	opt stack 0
  5725                           GLOBAL	__end_of_writeTxtChk
  5726                           	__end_of_writeTxtChk:
  5727  06C7                     	signat	_writeTxtChk,4217
  5728                           	global	_setCursorPosition
  5729                           
  5730 ;; *************** function _setCursorPosition *****************
  5731 ;; Defined at:
  5732 ;;		line 254 in file "LCD_hd44780u_qy_2004a.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;  iLine           1    wreg     unsigned char 
  5735 ;;  iPosition       1   25[BANK0 ] unsigned char 
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;  iLine           1   28[BANK0 ] unsigned char 
  5738 ;;  wLCDIndex       1   29[BANK0 ] unsigned char 
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  1    wreg      void 
  5741 ;; Registers used:
  5742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5748 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5749 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5750 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5751 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  5752 ;;Total ram usage:        5 bytes
  5753 ;; Hardware stack levels used:    1
  5754 ;; Hardware stack levels required when called:    6
  5755 ;; This function calls:
  5756 ;;		_SetToSendDataToLCD
  5757 ;;		_setData
  5758 ;;		_waitLCDBusy
  5759 ;; This function is called by:
  5760 ;;		_main
  5761 ;;		_writeTxtChk
  5762 ;; This function uses a non-reentrant model
  5763 ;;
  5764                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5765                           	line	254
  5766                           global __ptext17
  5767                           __ptext17:	;psect for function _setCursorPosition
  5768  0731                     psect	text17
  5769                           	file	"LCD_hd44780u_qy_2004a.c"
  5770                           	line	254
  5771                           	global	__size_of_setCursorPosition
  5772                           	__size_of_setCursorPosition	equ	__end_of_setCursorPosition-_setCursorPosition
  5773  0060                     	
  5774                           _setCursorPosition:	
  5775  0731                     ;incstack = 0
  5776                           	opt	stack 9
  5777                           ; Regs used in _setCursorPosition: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5778                           ;setCursorPosition@iLine stored from wreg
  5779                           	movlb 0	; select bank0
  5780  0731  0020               	movwf	(setCursorPosition@iLine)
  5781  0732  00BC               	line	256
  5782                           	
  5783                           l2975:	
  5784  0733                     ;LCD_hd44780u_qy_2004a.c: 254: void setCursorPosition(char iLine, char iPosition);LCD_hd
                                 44780u_qy_2004a.c: 255: {;LCD_hd44780u_qy_2004a.c: 256:   char wLCDIndex=0;
  5785                           	clrf	(setCursorPosition@wLCDIndex)
  5786  0733  01BD               	line	258
  5787                           ;LCD_hd44780u_qy_2004a.c: 258:   switch(iLine)
  5788                           	goto	l2987
  5789  0734  2F61               	line	260
  5790                           ;LCD_hd44780u_qy_2004a.c: 259:   {;LCD_hd44780u_qy_2004a.c: 260:       case 0:
  5791                           	
  5792                           l379:	
  5793  0735                     	line	261
  5794                           	
  5795                           l2977:	
  5796  0735                     ;LCD_hd44780u_qy_2004a.c: 261:           wLCDIndex = 0x00 + iPosition;
  5797                           	movf	(setCursorPosition@iPosition),w
  5798  0735  0839               	movwf	(??_setCursorPosition+0)+0
  5799  0736  00BA               	movf	(??_setCursorPosition+0)+0,w
  5800  0737  083A               	movwf	(setCursorPosition@wLCDIndex)
  5801  0738  00BD               	line	262
  5802                           ;LCD_hd44780u_qy_2004a.c: 262:           mWritingPosition = iPosition;
  5803                           	movf	(setCursorPosition@iPosition),w
  5804  0739  0839               	movwf	(??_setCursorPosition+0)+0
  5805  073A  00BA               	movf	(??_setCursorPosition+0)+0,w
  5806  073B  083A               	movwf	(_mWritingPosition)
  5807  073C  00D9               	line	263
  5808                           ;LCD_hd44780u_qy_2004a.c: 263:           break;
  5809                           	goto	l2989
  5810  073D  2F77               	line	264
  5811                           ;LCD_hd44780u_qy_2004a.c: 264:       case 1:
  5812                           	
  5813                           l381:	
  5814  073E                     	line	265
  5815                           	
  5816                           l2979:	
  5817  073E                     ;LCD_hd44780u_qy_2004a.c: 265:           wLCDIndex = 0x40 + iPosition;
  5818                           	movf	(setCursorPosition@iPosition),w
  5819  073E  0839               	addlw	040h
  5820  073F  3E40               	movwf	(??_setCursorPosition+0)+0
  5821  0740  00BA               	movf	(??_setCursorPosition+0)+0,w
  5822  0741  083A               	movwf	(setCursorPosition@wLCDIndex)
  5823  0742  00BD               	line	266
  5824                           ;LCD_hd44780u_qy_2004a.c: 266:           mWritingPosition = 20 + iPosition;
  5825                           	movf	(setCursorPosition@iPosition),w
  5826  0743  0839               	addlw	014h
  5827  0744  3E14               	movwf	(??_setCursorPosition+0)+0
  5828  0745  00BA               	movf	(??_setCursorPosition+0)+0,w
  5829  0746  083A               	movwf	(_mWritingPosition)
  5830  0747  00D9               	line	267
  5831                           ;LCD_hd44780u_qy_2004a.c: 267:           break;
  5832                           	goto	l2989
  5833  0748  2F77               	line	268
  5834                           ;LCD_hd44780u_qy_2004a.c: 268:       case 2:
  5835                           	
  5836                           l382:	
  5837  0749                     	line	269
  5838                           	
  5839                           l2981:	
  5840  0749                     ;LCD_hd44780u_qy_2004a.c: 269:           wLCDIndex = 0x14 + iPosition;
  5841                           	movf	(setCursorPosition@iPosition),w
  5842  0749  0839               	addlw	014h
  5843  074A  3E14               	movwf	(??_setCursorPosition+0)+0
  5844  074B  00BA               	movf	(??_setCursorPosition+0)+0,w
  5845  074C  083A               	movwf	(setCursorPosition@wLCDIndex)
  5846  074D  00BD               	line	270
  5847                           ;LCD_hd44780u_qy_2004a.c: 270:           mWritingPosition = 40 + iPosition;
  5848                           	movf	(setCursorPosition@iPosition),w
  5849  074E  0839               	addlw	028h
  5850  074F  3E28               	movwf	(??_setCursorPosition+0)+0
  5851  0750  00BA               	movf	(??_setCursorPosition+0)+0,w
  5852  0751  083A               	movwf	(_mWritingPosition)
  5853  0752  00D9               	line	271
  5854                           ;LCD_hd44780u_qy_2004a.c: 271:           break;
  5855                           	goto	l2989
  5856  0753  2F77               	line	272
  5857                           ;LCD_hd44780u_qy_2004a.c: 272:       case 3:
  5858                           	
  5859                           l383:	
  5860  0754                     	line	273
  5861                           	
  5862                           l2983:	
  5863  0754                     ;LCD_hd44780u_qy_2004a.c: 273:           wLCDIndex = 0x54 + iPosition;
  5864                           	movf	(setCursorPosition@iPosition),w
  5865  0754  0839               	addlw	054h
  5866  0755  3E54               	movwf	(??_setCursorPosition+0)+0
  5867  0756  00BA               	movf	(??_setCursorPosition+0)+0,w
  5868  0757  083A               	movwf	(setCursorPosition@wLCDIndex)
  5869  0758  00BD               	line	274
  5870                           ;LCD_hd44780u_qy_2004a.c: 274:           mWritingPosition = 60 + iPosition;
  5871                           	movf	(setCursorPosition@iPosition),w
  5872  0759  0839               	addlw	03Ch
  5873  075A  3E3C               	movwf	(??_setCursorPosition+0)+0
  5874  075B  00BA               	movf	(??_setCursorPosition+0)+0,w
  5875  075C  083A               	movwf	(_mWritingPosition)
  5876  075D  00D9               	line	275
  5877                           ;LCD_hd44780u_qy_2004a.c: 275:           break;
  5878                           	goto	l2989
  5879  075E  2F77               	line	276
  5880                           ;LCD_hd44780u_qy_2004a.c: 276:       default:
  5881                           	
  5882                           l384:	
  5883  075F                     	line	277
  5884                           ;LCD_hd44780u_qy_2004a.c: 277:       break;
  5885                           	goto	l2989
  5886  075F  2F77               	line	278
  5887                           	
  5888                           l2985:	
  5889  0760                     ;LCD_hd44780u_qy_2004a.c: 278:   }
  5890                           	goto	l2989
  5891  0760  2F77               	
  5892                           l378:	
  5893  0761                     	
  5894                           l2987:	
  5895  0761                     	movf	(setCursorPosition@iLine),w
  5896  0761  083C               	movwf	(??_setCursorPosition+0)+0
  5897  0762  00BA               	clrf	(??_setCursorPosition+0)+0+1
  5898  0763  01BB               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5899                           ; Switch size 1, requested type "space"
  5900                           ; Number of cases is 1, Range of values is 0 to 0
  5901                           ; switch strategies available:
  5902                           ; Name         Instructions Cycles
  5903                           ; simple_byte            4     3 (average)
  5904                           ; direct_byte            8     6 (fixed)
  5905                           ; jumptable            260     6 (fixed)
  5906                           ;	Chosen strategy is simple_byte
  5907                           
  5908                           	movf 1+(??_setCursorPosition+0)+0,w
  5909  0764  083B               	opt asmopt_push
  5910                           	opt asmopt_off
  5911                           	xorlw	0^0	; case 0
  5912  0765  3A00               	skipnz
  5913  0766  1903               	goto	l3983
  5914  0767  2F69               	goto	l2989
  5915  0768  2F77               	opt asmopt_pop
  5916                           	
  5917                           l3983:	
  5918  0769                     ; Switch size 1, requested type "space"
  5919                           ; Number of cases is 4, Range of values is 0 to 3
  5920                           ; switch strategies available:
  5921                           ; Name         Instructions Cycles
  5922                           ; simple_byte           13     7 (average)
  5923                           ; direct_byte           14     6 (fixed)
  5924                           ; jumptable            260     6 (fixed)
  5925                           ;	Chosen strategy is simple_byte
  5926                           
  5927                           	movf 0+(??_setCursorPosition+0)+0,w
  5928  0769  083A               	opt asmopt_push
  5929                           	opt asmopt_off
  5930                           	xorlw	0^0	; case 0
  5931  076A  3A00               	skipnz
  5932  076B  1903               	goto	l2977
  5933  076C  2F35               	xorlw	1^0	; case 1
  5934  076D  3A01               	skipnz
  5935  076E  1903               	goto	l2979
  5936  076F  2F3E               	xorlw	2^1	; case 2
  5937  0770  3A03               	skipnz
  5938  0771  1903               	goto	l2981
  5939  0772  2F49               	xorlw	3^2	; case 3
  5940  0773  3A01               	skipnz
  5941  0774  1903               	goto	l2983
  5942  0775  2F54               	goto	l2989
  5943  0776  2F77               	opt asmopt_pop
  5944                           
  5945                           	
  5946                           l380:	
  5947  0777                     	line	280
  5948                           	
  5949                           l2989:	
  5950  0777                     ;LCD_hd44780u_qy_2004a.c: 280:   waitLCDBusy();
  5951                           	fcall	_waitLCDBusy
  5952  0777  318E  2650  3187   	line	282
  5953                           	
  5954                           l2991:	
  5955  077A                     ;LCD_hd44780u_qy_2004a.c: 282:   SetToSendDataToLCD();
  5956                           	fcall	_SetToSendDataToLCD
  5957  077A  318C  24A7  3187   	line	283
  5958                           	
  5959                           l2993:	
  5960  077D                     ;LCD_hd44780u_qy_2004a.c: 283:   PORTAbits.RA4 = 0;
  5961                           	movlb 0	; select bank0
  5962  077D  0020               	bcf	(12),4	;volatile
  5963  077E  120C               	line	284
  5964                           	
  5965                           l2995:	
  5966  077F                     ;LCD_hd44780u_qy_2004a.c: 284:   PORTAbits.RA7 = 0;
  5967                           	bcf	(12),7	;volatile
  5968  077F  138C               	line	285
  5969                           	
  5970                           l2997:	
  5971  0780                     ;LCD_hd44780u_qy_2004a.c: 285:   setData((wLCDIndex >> 4) | 0x8 );
  5972                           	movf	(setCursorPosition@wLCDIndex),w
  5973  0780  083D               	movwf	(??_setCursorPosition+0)+0
  5974  0781  00BA               	movlw	04h
  5975  0782  3004               u1945:
  5976  0783                     	lsrf	(??_setCursorPosition+0)+0,f
  5977  0783  36BA               	decfsz	wreg,f
  5978  0784  0B89               	goto	u1945
  5979  0785  2F83               	movf	0+(??_setCursorPosition+0)+0,w
  5980  0786  083A               	iorlw	08h
  5981  0787  3808               	fcall	_setData
  5982  0788  318E  26E5  3187   	line	286
  5983                           	
  5984                           l2999:	
  5985  078B                     ;LCD_hd44780u_qy_2004a.c: 286:   setData(wLCDIndex);
  5986                           	movlb 0	; select bank0
  5987  078B  0020               	movf	(setCursorPosition@wLCDIndex),w
  5988  078C  083D               	fcall	_setData
  5989  078D  318E  26E5  3187   	line	288
  5990                           	
  5991                           l385:	
  5992  0790                     	return
  5993  0790  0008               	opt stack 0
  5994                           GLOBAL	__end_of_setCursorPosition
  5995                           	__end_of_setCursorPosition:
  5996  0791                     	signat	_setCursorPosition,8313
  5997                           	global	_waitLCDBusy
  5998                           
  5999 ;; *************** function _waitLCDBusy *****************
  6000 ;; Defined at:
  6001 ;;		line 162 in file "LCD_hd44780u_qy_2004a.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;		None
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;  busyFlag        2   23[BANK0 ] int 
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  1    wreg      void 
  6008 ;; Registers used:
  6009 ;;		wreg, status,2, status,0, pclath, cstack
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6016 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6017 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  6018 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  6019 ;;Total ram usage:        5 bytes
  6020 ;; Hardware stack levels used:    1
  6021 ;; Hardware stack levels required when called:    5
  6022 ;; This function calls:
  6023 ;;		_SetToReadDataFromLCD
  6024 ;; This function is called by:
  6025 ;;		_writeTxtChk
  6026 ;;		_writeInsChk
  6027 ;;		_setCursorPosition
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  6031                           	line	162
  6032                           global __ptext18
  6033                           __ptext18:	;psect for function _waitLCDBusy
  6034  0E50                     psect	text18
  6035                           	file	"LCD_hd44780u_qy_2004a.c"
  6036                           	line	162
  6037                           	global	__size_of_waitLCDBusy
  6038                           	__size_of_waitLCDBusy	equ	__end_of_waitLCDBusy-_waitLCDBusy
  6039  002D                     	
  6040                           _waitLCDBusy:	
  6041  0E50                     ;incstack = 0
  6042                           	opt	stack 8
  6043                           ; Regs used in _waitLCDBusy: [wreg+status,2+status,0+pclath+cstack]
  6044                           	line	164
  6045                           	
  6046                           l2959:	
  6047  0E50                     ;LCD_hd44780u_qy_2004a.c: 164:   PORTAbits.RA4 = 0;
  6048                           	movlb 0	; select bank0
  6049  0E50  0020               	bcf	(12),4	;volatile
  6050  0E51  120C               	line	165
  6051                           ;LCD_hd44780u_qy_2004a.c: 165:   PORTAbits.RA7 = 1;
  6052                           	bsf	(12),7	;volatile
  6053  0E52  178C               	line	167
  6054                           	
  6055                           l2961:	
  6056  0E53                     ;LCD_hd44780u_qy_2004a.c: 167:   SetToReadDataFromLCD();
  6057                           	fcall	_SetToReadDataFromLCD
  6058  0E53  318C  24AD  318E   	line	169
  6059                           	
  6060                           l2963:	
  6061  0E56                     ;LCD_hd44780u_qy_2004a.c: 169:   int busyFlag = 1;
  6062                           	movlw	01h
  6063  0E56  3001               	movlb 0	; select bank0
  6064  0E57  0020               	movwf	(waitLCDBusy@busyFlag)
  6065  0E58  00B7               	movlw	0
  6066  0E59  3000               	movwf	((waitLCDBusy@busyFlag))+1
  6067  0E5A  00B8               	line	170
  6068                           ;LCD_hd44780u_qy_2004a.c: 170:   while(busyFlag == 1)
  6069                           	goto	l330
  6070  0E5B  2E74               	
  6071                           l331:	
  6072  0E5C                     	line	173
  6073                           ;LCD_hd44780u_qy_2004a.c: 171:   {;LCD_hd44780u_qy_2004a.c: 173:     PORTAbits.RA5 = 1;

  6074                           	bsf	(12),5	;volatile
  6075  0E5C  168C               	line	174
  6076                           ;LCD_hd44780u_qy_2004a.c: 174:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  6077                           		opt asmopt_push
  6078                           	opt asmopt_off
  6079                           	nop2	;2 cycle nop
  6080  0E5D  3200               	nop2	;2 cycle nop
  6081  0E5E  3200               	opt asmopt_pop
  6082                           
  6083                           	line	175
  6084                           	
  6085                           l2965:	
  6086  0E5F                     ;LCD_hd44780u_qy_2004a.c: 175:     busyFlag = PORTAbits.RA3;
  6087                           	movlb 0	; select bank0
  6088  0E5F  0020               	rrf	(12),w	;volatile
  6089  0E60  0C0C               	movwf	(??_waitLCDBusy+0)+0
  6090  0E61  00B4               	rrf	(??_waitLCDBusy+0)+0,f
  6091  0E62  0CB4               	rrf	(??_waitLCDBusy+0)+0,w
  6092  0E63  0C34               	andlw	(1<<1)-1
  6093  0E64  3901               	movwf	(??_waitLCDBusy+1)+0
  6094  0E65  00B5               	clrf	(??_waitLCDBusy+1)+0+1
  6095  0E66  01B6               	movf	0+(??_waitLCDBusy+1)+0,w
  6096  0E67  0835               	movwf	(waitLCDBusy@busyFlag)
  6097  0E68  00B7               	movf	1+(??_waitLCDBusy+1)+0,w
  6098  0E69  0836               	movwf	(waitLCDBusy@busyFlag+1)
  6099  0E6A  00B8               	line	176
  6100                           	
  6101                           l2967:	
  6102  0E6B                     ;LCD_hd44780u_qy_2004a.c: 176:     PORTAbits.RA5 = 0;
  6103                           	bcf	(12),5	;volatile
  6104  0E6B  128C               	line	177
  6105                           	
  6106                           l2969:	
  6107  0E6C                     ;LCD_hd44780u_qy_2004a.c: 177:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  6108                           		opt asmopt_push
  6109                           	opt asmopt_off
  6110                           	nop2	;2 cycle nop
  6111  0E6C  3200               	nop2	;2 cycle nop
  6112  0E6D  3200               	nop2	;2 cycle nop
  6113  0E6E  3200               	nop2	;2 cycle nop
  6114  0E6F  3200               	opt asmopt_pop
  6115                           
  6116                           	line	179
  6117                           	
  6118                           l2971:	
  6119  0E70                     ;LCD_hd44780u_qy_2004a.c: 179:     PORTAbits.RA5 = 1;
  6120                           	movlb 0	; select bank0
  6121  0E70  0020               	bsf	(12),5	;volatile
  6122  0E71  168C               	line	180
  6123                           	
  6124                           l2973:	
  6125  0E72                     ;LCD_hd44780u_qy_2004a.c: 180:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  6126                           		opt asmopt_push
  6127                           	opt asmopt_off
  6128                           	nop2	;2 cycle nop
  6129  0E72  3200               	nop2	;2 cycle nop
  6130  0E73  3200               	opt asmopt_pop
  6131                           
  6132                           	line	181
  6133                           ;LCD_hd44780u_qy_2004a.c: 181:   }
  6134                           	
  6135                           l330:	
  6136  0E74                     	line	170
  6137                           ;LCD_hd44780u_qy_2004a.c: 170:   while(busyFlag == 1)
  6138                           	movlb 0	; select bank0
  6139  0E74  0020               		decf	((waitLCDBusy@busyFlag)),w
  6140  0E75  0337               iorwf	((waitLCDBusy@busyFlag+1)),w
  6141  0E76  0438               	btfsc	status,2
  6142  0E77  1903               	goto	u1931
  6143  0E78  2E7A               	goto	u1930
  6144  0E79  2E7B               u1931:
  6145  0E7A                     	goto	l331
  6146  0E7A  2E5C               u1930:
  6147  0E7B                     	goto	l333
  6148  0E7B  2E7C               	
  6149                           l332:	
  6150  0E7C                     	line	182
  6151                           	
  6152                           l333:	
  6153  0E7C                     	return
  6154  0E7C  0008               	opt stack 0
  6155                           GLOBAL	__end_of_waitLCDBusy
  6156                           	__end_of_waitLCDBusy:
  6157  0E7D                     	signat	_waitLCDBusy,89
  6158                           	global	_SetToReadDataFromLCD
  6159                           
  6160 ;; *************** function _SetToReadDataFromLCD *****************
  6161 ;; Defined at:
  6162 ;;		line 147 in file "LCD_hd44780u_qy_2004a.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;		None
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;		None
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  1    wreg      void 
  6169 ;; Registers used:
  6170 ;;		None
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6180 ;;Total ram usage:        0 bytes
  6181 ;; Hardware stack levels used:    1
  6182 ;; Hardware stack levels required when called:    4
  6183 ;; This function calls:
  6184 ;;		Nothing
  6185 ;; This function is called by:
  6186 ;;		_waitLCDBusy
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  6190                           	line	147
  6191                           global __ptext19
  6192                           __ptext19:	;psect for function _SetToReadDataFromLCD
  6193  0CAD                     psect	text19
  6194                           	file	"LCD_hd44780u_qy_2004a.c"
  6195                           	line	147
  6196                           	global	__size_of_SetToReadDataFromLCD
  6197                           	__size_of_SetToReadDataFromLCD	equ	__end_of_SetToReadDataFromLCD-_SetToReadDataFromLCD

  6198  0006                     	
  6199                           _SetToReadDataFromLCD:	
  6200  0CAD                     ;incstack = 0
  6201                           	opt	stack 8
  6202                           ; Regs used in _SetToReadDataFromLCD: []
  6203                           	line	149
  6204                           	
  6205                           l2945:	
  6206  0CAD                     ;LCD_hd44780u_qy_2004a.c: 149:   TRISAbits.TRISA3 = 1;
  6207                           	movlb 1	; select bank1
  6208  0CAD  0021               	bsf	(140)^080h,3	;volatile
  6209  0CAE  158C               	line	150
  6210                           ;LCD_hd44780u_qy_2004a.c: 150:   TRISAbits.TRISA2 = 1;
  6211                           	bsf	(140)^080h,2	;volatile
  6212  0CAF  150C               	line	151
  6213                           ;LCD_hd44780u_qy_2004a.c: 151:   TRISAbits.TRISA1 = 1;
  6214                           	bsf	(140)^080h,1	;volatile
  6215  0CB0  148C               	line	152
  6216                           ;LCD_hd44780u_qy_2004a.c: 152:   TRISAbits.TRISA0 = 1;
  6217                           	bsf	(140)^080h,0	;volatile
  6218  0CB1  140C               	line	153
  6219                           	
  6220                           l324:	
  6221  0CB2                     	return
  6222  0CB2  0008               	opt stack 0
  6223                           GLOBAL	__end_of_SetToReadDataFromLCD
  6224                           	__end_of_SetToReadDataFromLCD:
  6225  0CB3                     	signat	_SetToReadDataFromLCD,89
  6226                           	global	_setData
  6227                           
  6228 ;; *************** function _setData *****************
  6229 ;; Defined at:
  6230 ;;		line 67 in file "LCD_hd44780u_qy_2004a.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;  iValue          1    wreg     unsigned char 
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;  iValue          1   22[BANK0 ] unsigned char 
  6235 ;; Return value:  Size  Location     Type
  6236 ;;                  1    wreg      void 
  6237 ;; Registers used:
  6238 ;;		wreg, status,2, status,0
  6239 ;; Tracked objects:
  6240 ;;		On entry : 0/0
  6241 ;;		On exit  : 0/0
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6245 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6246 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6247 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  6248 ;;Total ram usage:        3 bytes
  6249 ;; Hardware stack levels used:    1
  6250 ;; Hardware stack levels required when called:    4
  6251 ;; This function calls:
  6252 ;;		Nothing
  6253 ;; This function is called by:
  6254 ;;		_initLCD
  6255 ;;		_writeTxtChk
  6256 ;;		_writeInsNoChk
  6257 ;;		_setCursorPosition
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6261                           	line	67
  6262                           global __ptext20
  6263                           __ptext20:	;psect for function _setData
  6264  0EE5                     psect	text20
  6265                           	file	"LCD_hd44780u_qy_2004a.c"
  6266                           	line	67
  6267                           	global	__size_of_setData
  6268                           	__size_of_setData	equ	__end_of_setData-_setData
  6269  003C                     	
  6270                           _setData:	
  6271  0EE5                     ;incstack = 0
  6272                           	opt	stack 8
  6273                           ; Regs used in _setData: [wreg+status,2+status,0]
  6274                           ;setData@iValue stored from wreg
  6275                           	movlb 0	; select bank0
  6276  0EE5  0020               	movwf	(setData@iValue)
  6277  0EE6  00B6               	line	69
  6278                           	
  6279                           l2947:	
  6280  0EE7                     ;LCD_hd44780u_qy_2004a.c: 67: void setData(char iValue);LCD_hd44780u_qy_2004a.c: 68: {;L
                                 CD_hd44780u_qy_2004a.c: 69:   PORTAbits.RA5 = 1;
  6281                           	bsf	(12),5	;volatile
  6282  0EE7  168C               	line	70
  6283                           	
  6284                           l2949:	
  6285  0EE8                     ;LCD_hd44780u_qy_2004a.c: 70:   PORTAbits.RA3 = (iValue & 0x8) >> 3;
  6286                           	movf	(setData@iValue),w
  6287  0EE8  0836               	movwf	(??_setData+0)+0
  6288  0EE9  00B4               	movlw	03h
  6289  0EEA  3003               u1915:
  6290  0EEB                     	lsrf	(??_setData+0)+0,f
  6291  0EEB  36B4               	decfsz	wreg,f
  6292  0EEC  0B89               	goto	u1915
  6293  0EED  2EEB               	movf	0+(??_setData+0)+0,w
  6294  0EEE  0834               	andlw	01h
  6295  0EEF  3901               	movwf	(??_setData+1)+0
  6296  0EF0  00B5               	rlf	(??_setData+1)+0,f
  6297  0EF1  0DB5               	rlf	(??_setData+1)+0,f
  6298  0EF2  0DB5               	rlf	(??_setData+1)+0,f
  6299  0EF3  0DB5               	movf	(12),w	;volatile
  6300  0EF4  080C               	xorwf	(??_setData+1)+0,w
  6301  0EF5  0635               	andlw	not (((1<<1)-1)<<3)
  6302  0EF6  39F7               	xorwf	(??_setData+1)+0,w
  6303  0EF7  0635               	movwf	(12)	;volatile
  6304  0EF8  008C               	line	71
  6305                           ;LCD_hd44780u_qy_2004a.c: 71:   PORTAbits.RA2 = (iValue & 0x4) >> 2;
  6306                           	movf	(setData@iValue),w
  6307  0EF9  0836               	movwf	(??_setData+0)+0
  6308  0EFA  00B4               	movlw	02h
  6309  0EFB  3002               u1925:
  6310  0EFC                     	lsrf	(??_setData+0)+0,f
  6311  0EFC  36B4               	decfsz	wreg,f
  6312  0EFD  0B89               	goto	u1925
  6313  0EFE  2EFC               	movf	0+(??_setData+0)+0,w
  6314  0EFF  0834               	andlw	01h
  6315  0F00  3901               	movwf	(??_setData+1)+0
  6316  0F01  00B5               	rlf	(??_setData+1)+0,f
  6317  0F02  0DB5               	rlf	(??_setData+1)+0,f
  6318  0F03  0DB5               	movf	(12),w	;volatile
  6319  0F04  080C               	xorwf	(??_setData+1)+0,w
  6320  0F05  0635               	andlw	not (((1<<1)-1)<<2)
  6321  0F06  39FB               	xorwf	(??_setData+1)+0,w
  6322  0F07  0635               	movwf	(12)	;volatile
  6323  0F08  008C               	line	72
  6324                           ;LCD_hd44780u_qy_2004a.c: 72:   PORTAbits.RA1 = (iValue & 0x2) >> 1;
  6325                           	lsrf	(setData@iValue),w
  6326  0F09  3636               	andlw	01h
  6327  0F0A  3901               	movwf	(??_setData+0)+0
  6328  0F0B  00B4               	rlf	(??_setData+0)+0,f
  6329  0F0C  0DB4               	movf	(12),w	;volatile
  6330  0F0D  080C               	xorwf	(??_setData+0)+0,w
  6331  0F0E  0634               	andlw	not (((1<<1)-1)<<1)
  6332  0F0F  39FD               	xorwf	(??_setData+0)+0,w
  6333  0F10  0634               	movwf	(12)	;volatile
  6334  0F11  008C               	line	73
  6335                           ;LCD_hd44780u_qy_2004a.c: 73:   PORTAbits.RA0 = (iValue & 0x1) ;
  6336                           	movlw	low(01h)
  6337  0F12  3001               	andwf	(setData@iValue),w
  6338  0F13  0536               	movwf	(??_setData+0)+0
  6339  0F14  00B4               	movf	(12),w	;volatile
  6340  0F15  080C               	xorwf	0+(??_setData+0)+0,w
  6341  0F16  0634               	andlw	not ((1<<1)-1)
  6342  0F17  39FE               	xorwf	0+(??_setData+0)+0,w
  6343  0F18  0634               	movwf	(12)	;volatile
  6344  0F19  008C               	line	74
  6345                           	
  6346                           l2951:	
  6347  0F1A                     ;LCD_hd44780u_qy_2004a.c: 74:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  6348                           		opt asmopt_push
  6349                           	opt asmopt_off
  6350                           	nop2	;2 cycle nop
  6351  0F1A  3200               	nop2	;2 cycle nop
  6352  0F1B  3200               	opt asmopt_pop
  6353                           
  6354                           	line	75
  6355                           	
  6356                           l2953:	
  6357  0F1C                     ;LCD_hd44780u_qy_2004a.c: 75:   PORTAbits.RA5 = 0;
  6358                           	movlb 0	; select bank0
  6359  0F1C  0020               	bcf	(12),5	;volatile
  6360  0F1D  128C               	line	76
  6361                           	
  6362                           l2955:	
  6363  0F1E                     ;LCD_hd44780u_qy_2004a.c: 76:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  6364                           		opt asmopt_push
  6365                           	opt asmopt_off
  6366                           	nop2	;2 cycle nop
  6367  0F1E  3200               	nop2	;2 cycle nop
  6368  0F1F  3200               	opt asmopt_pop
  6369                           
  6370                           	line	77
  6371                           	
  6372                           l298:	
  6373  0F20                     	return
  6374  0F20  0008               	opt stack 0
  6375                           GLOBAL	__end_of_setData
  6376                           	__end_of_setData:
  6377  0F21                     	signat	_setData,4217
  6378                           	global	_SetToSendDataToLCD
  6379                           
  6380 ;; *************** function _SetToSendDataToLCD *****************
  6381 ;; Defined at:
  6382 ;;		line 154 in file "LCD_hd44780u_qy_2004a.c"
  6383 ;; Parameters:    Size  Location     Type
  6384 ;;		None
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;		None
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  1    wreg      void 
  6389 ;; Registers used:
  6390 ;;		None
  6391 ;; Tracked objects:
  6392 ;;		On entry : 0/0
  6393 ;;		On exit  : 0/0
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6400 ;;Total ram usage:        0 bytes
  6401 ;; Hardware stack levels used:    1
  6402 ;; Hardware stack levels required when called:    4
  6403 ;; This function calls:
  6404 ;;		Nothing
  6405 ;; This function is called by:
  6406 ;;		_writeTxtChk
  6407 ;;		_writeInsNoChk
  6408 ;;		_setCursorPosition
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6412                           	line	154
  6413                           global __ptext21
  6414                           __ptext21:	;psect for function _SetToSendDataToLCD
  6415  0CA7                     psect	text21
  6416                           	file	"LCD_hd44780u_qy_2004a.c"
  6417                           	line	154
  6418                           	global	__size_of_SetToSendDataToLCD
  6419                           	__size_of_SetToSendDataToLCD	equ	__end_of_SetToSendDataToLCD-_SetToSendDataToLCD
  6420  0006                     	
  6421                           _SetToSendDataToLCD:	
  6422  0CA7                     ;incstack = 0
  6423                           	opt	stack 8
  6424                           ; Regs used in _SetToSendDataToLCD: []
  6425                           	line	156
  6426                           	
  6427                           l2957:	
  6428  0CA7                     ;LCD_hd44780u_qy_2004a.c: 156:   TRISAbits.TRISA3 = 0;;
  6429                           	movlb 1	; select bank1
  6430  0CA7  0021               	bcf	(140)^080h,3	;volatile
  6431  0CA8  118C               	line	157
  6432                           ;LCD_hd44780u_qy_2004a.c: 157:   TRISAbits.TRISA2 = 0;;
  6433                           	bcf	(140)^080h,2	;volatile
  6434  0CA9  110C               	line	158
  6435                           ;LCD_hd44780u_qy_2004a.c: 158:   TRISAbits.TRISA1 = 0;;
  6436                           	bcf	(140)^080h,1	;volatile
  6437  0CAA  108C               	line	159
  6438                           ;LCD_hd44780u_qy_2004a.c: 159:   TRISAbits.TRISA0 = 0;;
  6439                           	bcf	(140)^080h,0	;volatile
  6440  0CAB  100C               	line	160
  6441                           	
  6442                           l327:	
  6443  0CAC                     	return
  6444  0CAC  0008               	opt stack 0
  6445                           GLOBAL	__end_of_SetToSendDataToLCD
  6446                           	__end_of_SetToSendDataToLCD:
  6447  0CAD                     	signat	_SetToSendDataToLCD,89
  6448                           	global	_GetTemp
  6449                           
  6450 ;; *************** function _GetTemp *****************
  6451 ;; Defined at:
  6452 ;;		line 94 in file "161518_temp_main.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;		None
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;		None
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  1    wreg      void 
  6459 ;; Registers used:
  6460 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6468 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6469 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6470 ;;Total ram usage:        1 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; Hardware stack levels required when called:    5
  6473 ;; This function calls:
  6474 ;;		_memset
  6475 ;; This function is called by:
  6476 ;;		_main
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6480                           	file	"161518_temp_main.c"
  6481                           	line	94
  6482                           global __ptext22
  6483                           __ptext22:	;psect for function _GetTemp
  6484  0E24                     psect	text22
  6485                           	file	"161518_temp_main.c"
  6486                           	line	94
  6487                           	global	__size_of_GetTemp
  6488                           	__size_of_GetTemp	equ	__end_of_GetTemp-_GetTemp
  6489  002C                     	
  6490                           _GetTemp:	
  6491  0E24                     ;incstack = 0
  6492                           	opt	stack 10
  6493                           ; Regs used in _GetTemp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6494                           	line	96
  6495                           	
  6496                           l3271:	
  6497  0E24                     	movlb 0	; select bank0
  6498  0E24  0020               	clrf	(_wTrial)
  6499  0E25  01D2               	line	97
  6500                           	
  6501                           l3273:	
  6502  0E26                     	movf	((_wI2CTxBufferSize)),w
  6503  0E26  0855               	btfss	status,2
  6504  0E27  1D03               	goto	u2331
  6505  0E28  2E2A               	goto	u2330
  6506  0E29  2E2B               u2331:
  6507  0E2A                     	goto	l127
  6508  0E2A  2E4F               u2330:
  6509  0E2B                     	line	99
  6510                           	
  6511                           l3275:	
  6512  0E2B                     	movlb 1	; select bank1
  6513  0E2B  0021               	bsf	(145)^080h,3	;volatile
  6514  0E2C  1591               	line	100
  6515                           	
  6516                           l3277:	
  6517  0E2D                     	movlw	low(_wReceptionBuffer)
  6518  0E2D  3034               	movlb 0	; select bank0
  6519  0E2E  0020               	movwf	(memset@dest)
  6520  0E2F  00B4               	movlw	high(_wReceptionBuffer)
  6521  0E30  3001               	movwf	(memset@dest+1)
  6522  0E31  00B5               	movlw	0
  6523  0E32  3000               	movwf	(memset@c)
  6524  0E33  00B6               	movwf	(memset@c+1)
  6525  0E34  00B7               	movlw	01Eh
  6526  0E35  301E               	movwf	(memset@n)
  6527  0E36  00B8               	movlw	0
  6528  0E37  3000               	movwf	((memset@n))+1
  6529  0E38  00B9               	fcall	_memset
  6530  0E39  3184  24A6  318E   	line	101
  6531                           	
  6532                           l3279:	
  6533  0E3C                     	movlb 0	; select bank0
  6534  0E3C  0020               	clrf	(_wReceptionBufferPosition)
  6535  0E3D  01D8               	line	102
  6536                           	
  6537                           l3281:	
  6538  0E3E                     	movlw	low(0B9h)
  6539  0E3E  30B9               	movwf	(??_GetTemp+0)+0
  6540  0E3F  00C2               	movf	(??_GetTemp+0)+0,w
  6541  0E40  0842               	movlb 1	; select bank1
  6542  0E41  0021               	movwf	(_wI2CTxBuffer)^080h
  6543  0E42  00A7               	line	103
  6544                           	
  6545                           l3283:	
  6546  0E43                     	movlw	low(08h)
  6547  0E43  3008               	movlb 0	; select bank0
  6548  0E44  0020               	movwf	(??_GetTemp+0)+0
  6549  0E45  00C2               	movf	(??_GetTemp+0)+0,w
  6550  0E46  0842               	movwf	(_wI2CRxBufferSize)
  6551  0E47  00D4               	line	104
  6552                           	
  6553                           l3285:	
  6554  0E48                     	clrf	(_wI2CTxBufferSize)
  6555  0E48  01D5               	incf	(_wI2CTxBufferSize),f
  6556  0E49  0AD5               	line	105
  6557                           	
  6558                           l3287:	
  6559  0E4A                     	movlb 1	; select bank1
  6560  0E4A  0021               	clrf	(_wI2CCommandState)^080h
  6561  0E4B  01A6               	line	106
  6562                           	
  6563                           l3289:	
  6564  0E4C                     	movlb 4	; select bank4
  6565  0E4C  0024               	bsf	(534)^0200h,0	;volatile
  6566  0E4D  1416               	goto	l127
  6567  0E4E  2E4F               	line	107
  6568                           	
  6569                           l126:	
  6570  0E4F                     	line	108
  6571                           	
  6572                           l127:	
  6573  0E4F                     	return
  6574  0E4F  0008               	opt stack 0
  6575                           GLOBAL	__end_of_GetTemp
  6576                           	__end_of_GetTemp:
  6577  0E50                     	signat	_GetTemp,89
  6578                           	global	_memset
  6579                           
  6580 ;; *************** function _memset *****************
  6581 ;; Defined at:
  6582 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  dest            2   20[BANK0 ] PTR void 
  6585 ;;		 -> wInterruptText(75), wReceptionBuffer(30), wI2CTxBuffer(20), 
  6586 ;;  c               2   22[BANK0 ] int 
  6587 ;;  n               2   24[BANK0 ] unsigned int 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;  s               2   32[BANK0 ] PTR unsigned char 
  6590 ;;		 -> wInterruptText(75), wReceptionBuffer(30), wI2CTxBuffer(20), 
  6591 ;;  k               2   30[BANK0 ] unsigned int 
  6592 ;; Return value:  Size  Location     Type
  6593 ;;                  2   20[BANK0 ] PTR void 
  6594 ;; Registers used:
  6595 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6601 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  6602 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6603 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6604 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
  6605 ;;Total ram usage:       14 bytes
  6606 ;; Hardware stack levels used:    1
  6607 ;; Hardware stack levels required when called:    4
  6608 ;; This function calls:
  6609 ;;		Nothing
  6610 ;; This function is called by:
  6611 ;;		_GetTemp
  6612 ;;		_PrintLog
  6613 ;;		_main
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           psect	text23,local,class=CODE,delta=2,merge=1,group=2
  6617                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  6618                           	line	4
  6619                           global __ptext23
  6620                           __ptext23:	;psect for function _memset
  6621  04A6                     psect	text23
  6622                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  6623                           	line	4
  6624                           	global	__size_of_memset
  6625                           	__size_of_memset	equ	__end_of_memset-_memset
  6626  00D1                     	
  6627                           _memset:	
  6628  04A6                     ;incstack = 0
  6629                           	opt	stack 11
  6630                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6631                           	line	6
  6632                           	
  6633                           l3107:	
  6634  04A6                     	movlb 0	; select bank0
  6635  04A6  0020               	movf	(memset@dest+1),w
  6636  04A7  0835               	movwf	(memset@s+1)
  6637  04A8  00C1               	movf	(memset@dest),w
  6638  04A9  0834               	movwf	(memset@s)
  6639  04AA  00C0               	line	13
  6640                           	
  6641                           l3109:	
  6642  04AB                     	movf	((memset@n)),w
  6643  04AB  0838               iorwf	((memset@n+1)),w
  6644  04AC  0439               	btfss	status,2
  6645  04AD  1D03               	goto	u2051
  6646  04AE  2CB0               	goto	u2050
  6647  04AF  2CB1               u2051:
  6648  04B0                     	goto	l3113
  6649  04B0  2CB3               u2050:
  6650  04B1                     	goto	l824
  6651  04B1  2D76               	
  6652                           l3111:	
  6653  04B2                     ;	Return value of _memset is never used
  6654                           	goto	l824
  6655  04B2  2D76               	
  6656                           l823:	
  6657  04B3                     	line	14
  6658                           	
  6659                           l3113:	
  6660  04B3                     	movf	(memset@s),w
  6661  04B3  0840               	movwf	fsr1l
  6662  04B4  0086               	movf	(memset@s+1),w
  6663  04B5  0841               	movwf	fsr1h
  6664  04B6  0087               	movf	(memset@c),w
  6665  04B7  0836               	movwf	indf1
  6666  04B8  0081               	line	15
  6667                           	
  6668                           l3115:	
  6669  04B9                     	movf	(memset@n),w
  6670  04B9  0838               	addlw	0FFh
  6671  04BA  3EFF               	movwf	(??_memset+0)+0
  6672  04BB  00BA               	movlw	0FFh
  6673  04BC  30FF               	addwfc	(memset@n+1),w
  6674  04BD  3D39               	movwf	1+(??_memset+0)+0
  6675  04BE  00BB               	movf	0+(??_memset+0)+0,w
  6676  04BF  083A               	addwf	(memset@s),w
  6677  04C0  0740               	movwf	(??_memset+2)+0
  6678  04C1  00BC               	movf	1+(??_memset+0)+0,w
  6679  04C2  083B               	addwfc	(memset@s+1),w
  6680  04C3  3D41               	movwf	1+(??_memset+2)+0
  6681  04C4  00BD               	movf	0+(??_memset+2)+0,w
  6682  04C5  083C               	movwf	fsr1l
  6683  04C6  0086               	movf	1+(??_memset+2)+0,w
  6684  04C7  083D               	movwf	fsr1h
  6685  04C8  0087               	movf	(memset@c),w
  6686  04C9  0836               	movwf	indf1
  6687  04CA  0081               	line	16
  6688                           	
  6689                           l3117:	
  6690  04CB                     	movlw	0
  6691  04CB  3000               	subwf	(memset@n+1),w
  6692  04CC  0239               	movlw	03h
  6693  04CD  3003               	skipnz
  6694  04CE  1903               	subwf	(memset@n),w
  6695  04CF  0238               	skipnc
  6696  04D0  1803               	goto	u2061
  6697  04D1  2CD3               	goto	u2060
  6698  04D2  2CD4               u2061:
  6699  04D3                     	goto	l3121
  6700  04D3  2CD6               u2060:
  6701  04D4                     	goto	l824
  6702  04D4  2D76               	
  6703                           l3119:	
  6704  04D5                     ;	Return value of _memset is never used
  6705                           	goto	l824
  6706  04D5  2D76               	
  6707                           l825:	
  6708  04D6                     	line	17
  6709                           	
  6710                           l3121:	
  6711  04D6                     	movf	(memset@s),w
  6712  04D6  0840               	addlw	01h
  6713  04D7  3E01               	movwf	(??_memset+0)+0
  6714  04D8  00BA               	movlw	0
  6715  04D9  3000               	addwfc	(memset@s+1),w
  6716  04DA  3D41               	movwf	1+(??_memset+0)+0
  6717  04DB  00BB               	movf	0+(??_memset+0)+0,w
  6718  04DC  083A               	movwf	fsr1l
  6719  04DD  0086               	movf	1+(??_memset+0)+0,w
  6720  04DE  083B               	movwf	fsr1h
  6721  04DF  0087               	movf	(memset@c),w
  6722  04E0  0836               	movwf	indf1
  6723  04E1  0081               	line	18
  6724                           	movf	(memset@s),w
  6725  04E2  0840               	addlw	02h
  6726  04E3  3E02               	movwf	(??_memset+0)+0
  6727  04E4  00BA               	movlw	0
  6728  04E5  3000               	addwfc	(memset@s+1),w
  6729  04E6  3D41               	movwf	1+(??_memset+0)+0
  6730  04E7  00BB               	movf	0+(??_memset+0)+0,w
  6731  04E8  083A               	movwf	fsr1l
  6732  04E9  0086               	movf	1+(??_memset+0)+0,w
  6733  04EA  083B               	movwf	fsr1h
  6734  04EB  0087               	movf	(memset@c),w
  6735  04EC  0836               	movwf	indf1
  6736  04ED  0081               	line	19
  6737                           	movf	(memset@n),w
  6738  04EE  0838               	addlw	0FEh
  6739  04EF  3EFE               	movwf	(??_memset+0)+0
  6740  04F0  00BA               	movlw	0FFh
  6741  04F1  30FF               	addwfc	(memset@n+1),w
  6742  04F2  3D39               	movwf	1+(??_memset+0)+0
  6743  04F3  00BB               	movf	0+(??_memset+0)+0,w
  6744  04F4  083A               	addwf	(memset@s),w
  6745  04F5  0740               	movwf	(??_memset+2)+0
  6746  04F6  00BC               	movf	1+(??_memset+0)+0,w
  6747  04F7  083B               	addwfc	(memset@s+1),w
  6748  04F8  3D41               	movwf	1+(??_memset+2)+0
  6749  04F9  00BD               	movf	0+(??_memset+2)+0,w
  6750  04FA  083C               	movwf	fsr1l
  6751  04FB  0086               	movf	1+(??_memset+2)+0,w
  6752  04FC  083D               	movwf	fsr1h
  6753  04FD  0087               	movf	(memset@c),w
  6754  04FE  0836               	movwf	indf1
  6755  04FF  0081               	line	20
  6756                           	movf	(memset@n),w
  6757  0500  0838               	addlw	0FDh
  6758  0501  3EFD               	movwf	(??_memset+0)+0
  6759  0502  00BA               	movlw	0FFh
  6760  0503  30FF               	addwfc	(memset@n+1),w
  6761  0504  3D39               	movwf	1+(??_memset+0)+0
  6762  0505  00BB               	movf	0+(??_memset+0)+0,w
  6763  0506  083A               	addwf	(memset@s),w
  6764  0507  0740               	movwf	(??_memset+2)+0
  6765  0508  00BC               	movf	1+(??_memset+0)+0,w
  6766  0509  083B               	addwfc	(memset@s+1),w
  6767  050A  3D41               	movwf	1+(??_memset+2)+0
  6768  050B  00BD               	movf	0+(??_memset+2)+0,w
  6769  050C  083C               	movwf	fsr1l
  6770  050D  0086               	movf	1+(??_memset+2)+0,w
  6771  050E  083D               	movwf	fsr1h
  6772  050F  0087               	movf	(memset@c),w
  6773  0510  0836               	movwf	indf1
  6774  0511  0081               	line	21
  6775                           	
  6776                           l3123:	
  6777  0512                     	movlw	0
  6778  0512  3000               	subwf	(memset@n+1),w
  6779  0513  0239               	movlw	07h
  6780  0514  3007               	skipnz
  6781  0515  1903               	subwf	(memset@n),w
  6782  0516  0238               	skipnc
  6783  0517  1803               	goto	u2071
  6784  0518  2D1A               	goto	u2070
  6785  0519  2D1B               u2071:
  6786  051A                     	goto	l3127
  6787  051A  2D1D               u2070:
  6788  051B                     	goto	l824
  6789  051B  2D76               	
  6790                           l3125:	
  6791  051C                     ;	Return value of _memset is never used
  6792                           	goto	l824
  6793  051C  2D76               	
  6794                           l826:	
  6795  051D                     	line	22
  6796                           	
  6797                           l3127:	
  6798  051D                     	movf	(memset@s),w
  6799  051D  0840               	addlw	03h
  6800  051E  3E03               	movwf	(??_memset+0)+0
  6801  051F  00BA               	movlw	0
  6802  0520  3000               	addwfc	(memset@s+1),w
  6803  0521  3D41               	movwf	1+(??_memset+0)+0
  6804  0522  00BB               	movf	0+(??_memset+0)+0,w
  6805  0523  083A               	movwf	fsr1l
  6806  0524  0086               	movf	1+(??_memset+0)+0,w
  6807  0525  083B               	movwf	fsr1h
  6808  0526  0087               	movf	(memset@c),w
  6809  0527  0836               	movwf	indf1
  6810  0528  0081               	line	23
  6811                           	movf	(memset@n),w
  6812  0529  0838               	addlw	0FCh
  6813  052A  3EFC               	movwf	(??_memset+0)+0
  6814  052B  00BA               	movlw	0FFh
  6815  052C  30FF               	addwfc	(memset@n+1),w
  6816  052D  3D39               	movwf	1+(??_memset+0)+0
  6817  052E  00BB               	movf	0+(??_memset+0)+0,w
  6818  052F  083A               	addwf	(memset@s),w
  6819  0530  0740               	movwf	(??_memset+2)+0
  6820  0531  00BC               	movf	1+(??_memset+0)+0,w
  6821  0532  083B               	addwfc	(memset@s+1),w
  6822  0533  3D41               	movwf	1+(??_memset+2)+0
  6823  0534  00BD               	movf	0+(??_memset+2)+0,w
  6824  0535  083C               	movwf	fsr1l
  6825  0536  0086               	movf	1+(??_memset+2)+0,w
  6826  0537  083D               	movwf	fsr1h
  6827  0538  0087               	movf	(memset@c),w
  6828  0539  0836               	movwf	indf1
  6829  053A  0081               	line	24
  6830                           	
  6831                           l3129:	
  6832  053B                     	movlw	0
  6833  053B  3000               	subwf	(memset@n+1),w
  6834  053C  0239               	movlw	09h
  6835  053D  3009               	skipnz
  6836  053E  1903               	subwf	(memset@n),w
  6837  053F  0238               	skipnc
  6838  0540  1803               	goto	u2081
  6839  0541  2D43               	goto	u2080
  6840  0542  2D44               u2081:
  6841  0543                     	goto	l3133
  6842  0543  2D46               u2080:
  6843  0544                     	goto	l824
  6844  0544  2D76               	
  6845                           l3131:	
  6846  0545                     ;	Return value of _memset is never used
  6847                           	goto	l824
  6848  0545  2D76               	
  6849                           l827:	
  6850  0546                     	line	31
  6851                           	
  6852                           l3133:	
  6853  0546                     	comf	(memset@s),w
  6854  0546  0940               	movwf	(??_memset+0)+0
  6855  0547  00BA               	comf	(memset@s+1),w
  6856  0548  0941               	movwf	((??_memset+0)+0+1)
  6857  0549  00BB               	incf	(??_memset+0)+0,f
  6858  054A  0ABA               	skipnz
  6859  054B  1903               	incf	((??_memset+0)+0+1),f
  6860  054C  0ABB               	movlw	03h
  6861  054D  3003               	andwf	0+(??_memset+0)+0,w
  6862  054E  053A               	movwf	(memset@k)
  6863  054F  00BE               	movlw	0
  6864  0550  3000               	andwf	1+(??_memset+0)+0,w
  6865  0551  053B               	movwf	1+(memset@k)
  6866  0552  00BF               	line	32
  6867                           	
  6868                           l3135:	
  6869  0553                     	movf	(memset@k),w
  6870  0553  083E               	addwf	(memset@s),f
  6871  0554  07C0               	movf	(memset@k+1),w
  6872  0555  083F               	addwfc	(memset@s+1),f
  6873  0556  3DC1               	line	33
  6874                           	
  6875                           l3137:	
  6876  0557                     	movf	(memset@k),w
  6877  0557  083E               	subwf	(memset@n),f
  6878  0558  02B8               	movf	(memset@k+1),w
  6879  0559  083F               	subwfb	(memset@n+1),f
  6880  055A  3BB9               	line	34
  6881                           	
  6882                           l3139:	
  6883  055B                     	movlw	0FCh
  6884  055B  30FC               	andwf	(memset@n),f
  6885  055C  05B8               	movlw	0FFh
  6886  055D  30FF               	andwf	(memset@n+1),f
  6887  055E  05B9               	line	86
  6888                           	goto	l3147
  6889  055F  2D6F               	
  6890                           l829:	
  6891  0560                     	
  6892                           l3141:	
  6893  0560                     	movf	(memset@s),w
  6894  0560  0840               	movwf	fsr1l
  6895  0561  0086               	movf	(memset@s+1),w
  6896  0562  0841               	movwf	fsr1h
  6897  0563  0087               	movf	(memset@c),w
  6898  0564  0836               	movwf	indf1
  6899  0565  0081               	
  6900                           l3143:	
  6901  0566                     	movlw	01h
  6902  0566  3001               	subwf	(memset@n),f
  6903  0567  02B8               	movlw	0
  6904  0568  3000               	subwfb	(memset@n+1),f
  6905  0569  3BB9               	
  6906                           l3145:	
  6907  056A                     	movlw	01h
  6908  056A  3001               	addwf	(memset@s),f
  6909  056B  07C0               	movlw	0
  6910  056C  3000               	addwfc	(memset@s+1),f
  6911  056D  3DC1               	goto	l3147
  6912  056E  2D6F               	
  6913                           l828:	
  6914  056F                     	
  6915                           l3147:	
  6916  056F                     	movf	((memset@n)),w
  6917  056F  0838               iorwf	((memset@n+1)),w
  6918  0570  0439               	btfss	status,2
  6919  0571  1D03               	goto	u2091
  6920  0572  2D74               	goto	u2090
  6921  0573  2D75               u2091:
  6922  0574                     	goto	l3141
  6923  0574  2D60               u2090:
  6924  0575                     	goto	l824
  6925  0575  2D76               	
  6926                           l830:	
  6927  0576                     	line	90
  6928                           ;	Return value of _memset is never used
  6929                           	
  6930                           l824:	
  6931  0576                     	return
  6932  0576  0008               	opt stack 0
  6933                           GLOBAL	__end_of_memset
  6934                           	__end_of_memset:
  6935  0577                     	signat	_memset,12409
  6936                           	global	_Debounce
  6937                           
  6938 ;; *************** function _Debounce *****************
  6939 ;; Defined at:
  6940 ;;		line 168 in file "161518_temp_main.c"
  6941 ;; Parameters:    Size  Location     Type
  6942 ;;  iSwitch         1    wreg     unsigned char 
  6943 ;;  ioTimer         1   20[BANK0 ] PTR unsigned short 
  6944 ;;		 -> main@wDebounceDown(2), main@wDebounceUp(2), main@wDebounceEnter(2), 
  6945 ;;  swPressed       1   21[BANK0 ] PTR unsigned char 
  6946 ;;		 -> main@wEnterBottonPressed(1), main@wDownBottonPressed(1), main@wUpBottonPressed(1), 
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;  iSwitch         1   24[BANK0 ] unsigned char 
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  1    wreg      void 
  6951 ;; Registers used:
  6952 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6958 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6959 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6960 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6961 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  6962 ;;Total ram usage:        5 bytes
  6963 ;; Hardware stack levels used:    1
  6964 ;; Hardware stack levels required when called:    4
  6965 ;; This function calls:
  6966 ;;		Nothing
  6967 ;; This function is called by:
  6968 ;;		_main
  6969 ;; This function uses a non-reentrant model
  6970 ;;
  6971                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  6972                           	file	"161518_temp_main.c"
  6973                           	line	168
  6974                           global __ptext24
  6975                           __ptext24:	;psect for function _Debounce
  6976  0F64                     psect	text24
  6977                           	file	"161518_temp_main.c"
  6978                           	line	168
  6979                           	global	__size_of_Debounce
  6980                           	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
  6981  004C                     	
  6982                           _Debounce:	
  6983  0F64                     ;incstack = 0
  6984                           	opt	stack 11
  6985                           ; Regs used in _Debounce: [wreg+fsr1l+fsr1h+status,2+status,0]
  6986                           ;Debounce@iSwitch stored from wreg
  6987                           	movlb 0	; select bank0
  6988  0F64  0020               	movwf	(Debounce@iSwitch)
  6989  0F65  00B8               	line	170
  6990                           	
  6991                           l3331:	
  6992  0F66                     	movf	((Debounce@iSwitch)),w
  6993  0F66  0838               	btfss	status,2
  6994  0F67  1D03               	goto	u2371
  6995  0F68  2F6A               	goto	u2370
  6996  0F69  2F6B               u2371:
  6997  0F6A                     	goto	l3335
  6998  0F6A  2F75               u2370:
  6999  0F6B                     	line	172
  7000                           	
  7001                           l3333:	
  7002  0F6B                     	movf	(Debounce@ioTimer),w
  7003  0F6B  0834               	movwf	fsr1l
  7004  0F6C  0086               	movlw 2	; select bank4/5
  7005  0F6D  3002               	movwf fsr1h	
  7006  0F6E  0087               	
  7007                           	movlw	01h
  7008  0F6F  3001               	addwf	indf1,f
  7009  0F70  0781               	addfsr	fsr1,1
  7010  0F71  3141               	skipnc
  7011  0F72  1803               	incf	indf1,f
  7012  0F73  0A81               	line	173
  7013                           	goto	l3337
  7014  0F74  2F7D               	line	174
  7015                           	
  7016                           l144:	
  7017  0F75                     	line	176
  7018                           	
  7019                           l3335:	
  7020  0F75                     	movf	(Debounce@ioTimer),w
  7021  0F75  0834               	movwf	fsr1l
  7022  0F76  0086               	movlw 2	; select bank4/5
  7023  0F77  3002               	movwf fsr1h	
  7024  0F78  0087               	
  7025                           	movlw	0
  7026  0F79  3000               	movwi	[0]fsr1
  7027  0F7A  3FC0               	movwi	[1]fsr1
  7028  0F7B  3FC1               	goto	l3337
  7029  0F7C  2F7D               	line	177
  7030                           	
  7031                           l145:	
  7032  0F7D                     	line	178
  7033                           	
  7034                           l3337:	
  7035  0F7D                     	movf	(Debounce@ioTimer),w
  7036  0F7D  0834               	movwf	fsr1l
  7037  0F7E  0086               	movlw 2	; select bank4/5
  7038  0F7F  3002               	movwf fsr1h	
  7039  0F80  0087               	
  7040                           	moviw	fsr1++
  7041  0F81  0016               xorlw	208
  7042  0F82  3AD0               movwf	(??_Debounce+0)+0
  7043  0F83  00B6               moviw	fsr1++
  7044  0F84  0016               xorlw	7
  7045  0F85  3A07               iorwf	(??_Debounce+0)+0
  7046  0F86  04B6               	btfss	status,2
  7047  0F87  1D03               	goto	u2381
  7048  0F88  2F8A               	goto	u2380
  7049  0F89  2F8B               u2381:
  7050  0F8A                     	goto	l3341
  7051  0F8A  2F92               u2380:
  7052  0F8B                     	line	180
  7053                           	
  7054                           l3339:	
  7055  0F8B                     	movf	(Debounce@swPressed),w
  7056  0F8B  0835               	movwf	fsr1l
  7057  0F8C  0086               	movlw 2	; select bank4/5
  7058  0F8D  3002               	movwf fsr1h	
  7059  0F8E  0087               	
  7060                           	clrf	indf1
  7061  0F8F  0181               	incf	indf1,f
  7062  0F90  0A81               	goto	l3341
  7063  0F91  2F92               	line	181
  7064                           	
  7065                           l146:	
  7066  0F92                     	line	182
  7067                           	
  7068                           l3341:	
  7069  0F92                     	movf	(Debounce@ioTimer),w
  7070  0F92  0834               	movwf	fsr1l
  7071  0F93  0086               	movlw 2	; select bank4/5
  7072  0F94  3002               	movwf fsr1h	
  7073  0F95  0087               	
  7074                           	moviw	fsr1++
  7075  0F96  0016               xorlw	64
  7076  0F97  3A40               movwf	(??_Debounce+0)+0
  7077  0F98  00B6               moviw	fsr1++
  7078  0F99  0016               xorlw	31
  7079  0F9A  3A1F               iorwf	(??_Debounce+0)+0
  7080  0F9B  04B6               	btfss	status,2
  7081  0F9C  1D03               	goto	u2391
  7082  0F9D  2F9F               	goto	u2390
  7083  0F9E  2FA0               u2391:
  7084  0F9F                     	goto	l148
  7085  0F9F  2FAF               u2390:
  7086  0FA0                     	line	184
  7087                           	
  7088                           l3343:	
  7089  0FA0                     	movf	(Debounce@ioTimer),w
  7090  0FA0  0834               	movwf	fsr1l
  7091  0FA1  0086               	movlw 2	; select bank4/5
  7092  0FA2  3002               	movwf fsr1h	
  7093  0FA3  0087               	
  7094                           	movlw	0D1h
  7095  0FA4  30D1               	movwi	[0]fsr1
  7096  0FA5  3FC0               	movlw	07h
  7097  0FA6  3007               	movwi	[1]fsr1
  7098  0FA7  3FC1               	line	185
  7099                           	
  7100                           l3345:	
  7101  0FA8                     	movf	(Debounce@swPressed),w
  7102  0FA8  0835               	movwf	fsr1l
  7103  0FA9  0086               	movlw 2	; select bank4/5
  7104  0FAA  3002               	movwf fsr1h	
  7105  0FAB  0087               	
  7106                           	clrf	indf1
  7107  0FAC  0181               	incf	indf1,f
  7108  0FAD  0A81               	goto	l148
  7109  0FAE  2FAF               	line	186
  7110                           	
  7111                           l147:	
  7112  0FAF                     	line	187
  7113                           	
  7114                           l148:	
  7115  0FAF                     	return
  7116  0FAF  0008               	opt stack 0
  7117                           GLOBAL	__end_of_Debounce
  7118                           	__end_of_Debounce:
  7119  0FB0                     	signat	_Debounce,12409
  7120                           	global	_Add_Trace
  7121                           
  7122 ;; *************** function _Add_Trace *****************
  7123 ;; Defined at:
  7124 ;;		line 86 in file "161518_temp_main.c"
  7125 ;; Parameters:    Size  Location     Type
  7126 ;;  oText           1    wreg     PTR unsigned char 
  7127 ;;		 -> wInterruptText(75), 
  7128 ;;  iSizeOfoText    1   39[BANK0 ] unsigned char 
  7129 ;;  iText           2   40[BANK0 ] PTR unsigned char 
  7130 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  7131 ;;		 -> main@wReadout(20), 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  oText           1   42[BANK0 ] PTR unsigned char 
  7134 ;;		 -> wInterruptText(75), 
  7135 ;; Return value:  Size  Location     Type
  7136 ;;                  1    wreg      void 
  7137 ;; Registers used:
  7138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7139 ;; Tracked objects:
  7140 ;;		On entry : 0/0
  7141 ;;		On exit  : 0/0
  7142 ;;		Unchanged: 0/0
  7143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7144 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  7145 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7146 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
       0       0
  7147 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
       0       0
  7148 ;;Total ram usage:       10 bytes
  7149 ;; Hardware stack levels used:    1
  7150 ;; Hardware stack levels required when called:    6
  7151 ;; This function calls:
  7152 ;;		_strcat
  7153 ;;		_strlen
  7154 ;; This function is called by:
  7155 ;;		_main
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  7159                           	line	86
  7160                           global __ptext25
  7161                           __ptext25:	;psect for function _Add_Trace
  7162  0F21                     psect	text25
  7163                           	file	"161518_temp_main.c"
  7164                           	line	86
  7165                           	global	__size_of_Add_Trace
  7166                           	__size_of_Add_Trace	equ	__end_of_Add_Trace-_Add_Trace
  7167  0043                     	
  7168                           _Add_Trace:	
  7169  0F21                     ;incstack = 0
  7170                           	opt	stack 9
  7171                           ; Regs used in _Add_Trace: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7172                           ;Add_Trace@oText stored from wreg
  7173                           	movlb 0	; select bank0
  7174  0F21  0020               	movwf	(Add_Trace@oText)
  7175  0F22  00CA               	line	88
  7176                           	
  7177                           l3267:	
  7178  0F23                     	movf	(Add_Trace@oText),w
  7179  0F23  084A               	movwf	(strlen@s)
  7180  0F24  00B4               	movlw	0x1
  7181  0F25  3001               
  7182                           	movwf	(strlen@s+1)
  7183  0F26  00B5               	fcall	_strlen
  7184  0F27  318D  2588  318F   	movlb 0	; select bank0
  7185  0F2A  0020               	comf	(0+(?_strlen)),w
  7186  0F2B  0934               	movlb 1	; select bank1
  7187  0F2C  0021               	movwf	(??_Add_Trace+0)^080h+0
  7188  0F2D  00BB               	movlb 0	; select bank0
  7189  0F2E  0020               	comf	(1+(?_strlen)),w
  7190  0F2F  0935               	movlb 1	; select bank1
  7191  0F30  0021               	movwf	((??_Add_Trace+0)^080h+0+1)
  7192  0F31  00BC               	incf	(??_Add_Trace+0)^080h+0,f
  7193  0F32  0ABB               	skipnz
  7194  0F33  1903               	incf	((??_Add_Trace+0)^080h+0+1),f
  7195  0F34  0ABC               	movlb 0	; select bank0
  7196  0F35  0020               	movf	(Add_Trace@iSizeOfoText),w
  7197  0F36  0847               	movlb 1	; select bank1
  7198  0F37  0021               	addwf	0+(??_Add_Trace+0)^080h+0,w
  7199  0F38  073B               	movwf	(??_Add_Trace+2)^080h+0
  7200  0F39  00BD               	movf	1+(??_Add_Trace+0)^080h+0,w
  7201  0F3A  083C               	skipnc
  7202  0F3B  1803               	incf	1+(??_Add_Trace+0)^080h+0,w
  7203  0F3C  0A3C               	movwf	((??_Add_Trace+2)^080h+0)+1
  7204  0F3D  00BE               	movf	0+(??_Add_Trace+2)^080h+0,w
  7205  0F3E  083D               	addlw	0FFh
  7206  0F3F  3EFF               	movwf	(??_Add_Trace+4)^080h+0
  7207  0F40  00BF               	movlw	0FFh
  7208  0F41  30FF               	addwfc	1+(??_Add_Trace+2)^080h+0,w
  7209  0F42  3D3E               	movwf	1+(??_Add_Trace+4)^080h+0
  7210  0F43  00C0               	movlb 0	; select bank0
  7211  0F44  0020               	movf	(Add_Trace@iText+1),w
  7212  0F45  0849               	movwf	(strlen@s+1)
  7213  0F46  00B5               	movf	(Add_Trace@iText),w
  7214  0F47  0848               	movwf	(strlen@s)
  7215  0F48  00B4               	fcall	_strlen
  7216  0F49  318D  2588  318F   	movlb 1	; select bank1
  7217  0F4C  0021               	movf	1+(??_Add_Trace+4)^080h+0,w
  7218  0F4D  0840               	movlb 0	; select bank0
  7219  0F4E  0020               	subwf	(1+(?_strlen)),w
  7220  0F4F  0235               	skipz
  7221  0F50  1D03               	goto	u2325
  7222  0F51  2F56               	movlb 1	; select bank1
  7223  0F52  0021               	movf	0+(??_Add_Trace+4)^080h+0,w
  7224  0F53  083F               	movlb 0	; select bank0
  7225  0F54  0020               	subwf	(0+(?_strlen)),w
  7226  0F55  0234               u2325:
  7227  0F56                     	skipnc
  7228  0F56  1803               	goto	u2321
  7229  0F57  2F59               	goto	u2320
  7230  0F58  2F5A               u2321:
  7231  0F59                     	goto	l123
  7232  0F59  2F63               u2320:
  7233  0F5A                     	line	90
  7234                           	
  7235                           l3269:	
  7236  0F5A                     	movf	(Add_Trace@iText+1),w
  7237  0F5A  0849               	movwf	(strcat@src+1)
  7238  0F5B  00C3               	movf	(Add_Trace@iText),w
  7239  0F5C  0848               	movwf	(strcat@src)
  7240  0F5D  00C2               	movf	(Add_Trace@oText),w
  7241  0F5E  084A               	fcall	_strcat
  7242  0F5F  318D  2528  318F   	goto	l123
  7243  0F62  2F63               	line	91
  7244                           	
  7245                           l122:	
  7246  0F63                     	line	92
  7247                           	
  7248                           l123:	
  7249  0F63                     	return
  7250  0F63  0008               	opt stack 0
  7251                           GLOBAL	__end_of_Add_Trace
  7252                           	__end_of_Add_Trace:
  7253  0F64                     	signat	_Add_Trace,12409
  7254                           	global	_strcat
  7255                           
  7256 ;; *************** function _strcat *****************
  7257 ;; Defined at:
  7258 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  7259 ;; Parameters:    Size  Location     Type
  7260 ;;  dest            1    wreg     PTR unsigned char 
  7261 ;;		 -> wInterruptText(75), 
  7262 ;;  src             2   34[BANK0 ] PTR const unsigned char 
  7263 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  7264 ;;		 -> main@wReadout(20), 
  7265 ;; Auto vars:     Size  Location     Type
  7266 ;;  dest            1   38[BANK0 ] PTR unsigned char 
  7267 ;;		 -> wInterruptText(75), 
  7268 ;; Return value:  Size  Location     Type
  7269 ;;                  1    wreg      PTR unsigned char 
  7270 ;; Registers used:
  7271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7272 ;; Tracked objects:
  7273 ;;		On entry : 0/0
  7274 ;;		On exit  : 0/0
  7275 ;;		Unchanged: 0/0
  7276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7277 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7278 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7279 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7280 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7281 ;;Total ram usage:        5 bytes
  7282 ;; Hardware stack levels used:    1
  7283 ;; Hardware stack levels required when called:    5
  7284 ;; This function calls:
  7285 ;;		_strcpy
  7286 ;;		_strlen
  7287 ;; This function is called by:
  7288 ;;		_Add_Trace
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           psect	text26,local,class=CODE,delta=2,merge=1,group=2
  7292                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  7293                           	line	3
  7294                           global __ptext26
  7295                           __ptext26:	;psect for function _strcat
  7296  0D28                     psect	text26
  7297                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  7298                           	line	3
  7299                           	global	__size_of_strcat
  7300                           	__size_of_strcat	equ	__end_of_strcat-_strcat
  7301  0019                     	
  7302                           _strcat:	
  7303  0D28                     ;incstack = 0
  7304                           	opt	stack 9
  7305                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7306                           ;strcat@dest stored from wreg
  7307                           	movlb 0	; select bank0
  7308  0D28  0020               	movwf	(strcat@dest)
  7309  0D29  00C6               	line	5
  7310                           	
  7311                           l3103:	
  7312  0D2A                     	movf	(strcat@src+1),w
  7313  0D2A  0843               	movwf	(strcpy@src+1)
  7314  0D2B  00BB               	movf	(strcat@src),w
  7315  0D2C  0842               	movwf	(strcpy@src)
  7316  0D2D  00BA               	movf	(strcat@dest),w
  7317  0D2E  0846               	movwf	(strlen@s)
  7318  0D2F  00B4               	movlw	0x1
  7319  0D30  3001               
  7320                           	movwf	(strlen@s+1)
  7321  0D31  00B5               	fcall	_strlen
  7322  0D32  318D  2588  318D   	movlb 0	; select bank0
  7323  0D35  0020               	movf	(0+?_strlen),w
  7324  0D36  0834               	movwf	(??_strcat+0)+0
  7325  0D37  00C4               	movf	(1+?_strlen),w
  7326  0D38  0835               	movwf	((??_strcat+0)+0+1)
  7327  0D39  00C5               	movf	(strcat@dest),w
  7328  0D3A  0846               	addwf	0+(??_strcat+0)+0,w
  7329  0D3B  0744               	fcall	_strcpy
  7330  0D3C  318D  25AC  318D   	goto	l837
  7331  0D3F  2D40               	line	6
  7332                           	
  7333                           l3105:	
  7334  0D40                     	line	7
  7335                           ;	Return value of _strcat is never used
  7336                           	
  7337                           l837:	
  7338  0D40                     	return
  7339  0D40  0008               	opt stack 0
  7340                           GLOBAL	__end_of_strcat
  7341                           	__end_of_strcat:
  7342  0D41                     	signat	_strcat,8313
  7343                           	global	_strlen
  7344                           
  7345 ;; *************** function _strlen *****************
  7346 ;; Defined at:
  7347 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;  s               2   20[BANK0 ] PTR const unsigned char 
  7350 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  7351 ;;		 -> main@wReadout(20), wInterruptText(75), 
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;  a               2   24[BANK0 ] PTR const unsigned char 
  7354 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  7355 ;;		 -> main@wReadout(20), wInterruptText(75), 
  7356 ;; Return value:  Size  Location     Type
  7357 ;;                  2   20[BANK0 ] unsigned int 
  7358 ;; Registers used:
  7359 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7360 ;; Tracked objects:
  7361 ;;		On entry : 0/0
  7362 ;;		On exit  : 0/0
  7363 ;;		Unchanged: 0/0
  7364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7365 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7366 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7367 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7368 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  7369 ;;Total ram usage:        6 bytes
  7370 ;; Hardware stack levels used:    1
  7371 ;; Hardware stack levels required when called:    4
  7372 ;; This function calls:
  7373 ;;		Nothing
  7374 ;; This function is called by:
  7375 ;;		_Add_Trace
  7376 ;;		_PrintLog
  7377 ;;		_strcat
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           psect	text27,local,class=CODE,delta=2,merge=1,group=2
  7381                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  7382                           	line	12
  7383                           global __ptext27
  7384                           __ptext27:	;psect for function _strlen
  7385  0D88                     psect	text27
  7386                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  7387                           	line	12
  7388                           	global	__size_of_strlen
  7389                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  7390  0024                     	
  7391                           _strlen:	
  7392  0D88                     ;incstack = 0
  7393                           	opt	stack 10
  7394                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  7395                           	line	14
  7396                           	
  7397                           l3015:	
  7398  0D88                     	movlb 0	; select bank0
  7399  0D88  0020               	movf	(strlen@s+1),w
  7400  0D89  0835               	movwf	(strlen@a+1)
  7401  0D8A  00B9               	movf	(strlen@s),w
  7402  0D8B  0834               	movwf	(strlen@a)
  7403  0D8C  00B8               	line	16
  7404                           	goto	l3019
  7405  0D8D  2D93               	
  7406                           l847:	
  7407  0D8E                     	line	17
  7408                           	
  7409                           l3017:	
  7410  0D8E                     	movlw	01h
  7411  0D8E  3001               	addwf	(strlen@s),f
  7412  0D8F  07B4               	movlw	0
  7413  0D90  3000               	addwfc	(strlen@s+1),f
  7414  0D91  3DB5               	goto	l3019
  7415  0D92  2D93               	line	18
  7416                           	
  7417                           l846:	
  7418  0D93                     	line	16
  7419                           	
  7420                           l3019:	
  7421  0D93                     	movf	(strlen@s),w
  7422  0D93  0834               	movwf	fsr0l
  7423  0D94  0084               	movf	((strlen@s+1)),w
  7424  0D95  0835               	movwf	fsr0h
  7425  0D96  0085               	moviw	fsr0++
  7426  0D97  0012               	btfss	status,2
  7427  0D98  1D03               	goto	u1961
  7428  0D99  2D9B               	goto	u1960
  7429  0D9A  2D9C               u1961:
  7430  0D9B                     	goto	l3017
  7431  0D9B  2D8E               u1960:
  7432  0D9C                     	goto	l3021
  7433  0D9C  2D9D               	
  7434                           l848:	
  7435  0D9D                     	line	25
  7436                           	
  7437                           l3021:	
  7438  0D9D                     	comf	(strlen@a),w
  7439  0D9D  0938               	movwf	(??_strlen+0)+0
  7440  0D9E  00B6               	comf	(strlen@a+1),w
  7441  0D9F  0939               	movwf	((??_strlen+0)+0+1)
  7442  0DA0  00B7               	incf	(??_strlen+0)+0,f
  7443  0DA1  0AB6               	skipnz
  7444  0DA2  1903               	incf	((??_strlen+0)+0+1),f
  7445  0DA3  0AB7               	movf	(strlen@s),w
  7446  0DA4  0834               	addwf	0+(??_strlen+0)+0,w
  7447  0DA5  0736               	movwf	(?_strlen)
  7448  0DA6  00B4               	movf	(strlen@s+1),w
  7449  0DA7  0835               	addwfc	1+(??_strlen+0)+0,w
  7450  0DA8  3D37               	movwf	1+(?_strlen)
  7451  0DA9  00B5               	goto	l849
  7452  0DAA  2DAB               	
  7453                           l3023:	
  7454  0DAB                     	line	26
  7455                           	
  7456                           l849:	
  7457  0DAB                     	return
  7458  0DAB  0008               	opt stack 0
  7459                           GLOBAL	__end_of_strlen
  7460                           	__end_of_strlen:
  7461  0DAC                     	signat	_strlen,4218
  7462                           	global	_strcpy
  7463                           
  7464 ;; *************** function _strcpy *****************
  7465 ;; Defined at:
  7466 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;  dest            1    wreg     PTR unsigned char 
  7469 ;;		 -> wInterruptText(75), 
  7470 ;;  src             2   26[BANK0 ] PTR const unsigned char 
  7471 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  7472 ;;		 -> main@wReadout(20), 
  7473 ;; Auto vars:     Size  Location     Type
  7474 ;;  dest            1   33[BANK0 ] PTR unsigned char 
  7475 ;;		 -> wInterruptText(75), 
  7476 ;;  s               2   30[BANK0 ] PTR const unsigned char 
  7477 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  7478 ;;		 -> main@wReadout(20), 
  7479 ;;  d               1   32[BANK0 ] PTR unsigned char 
  7480 ;;		 -> wInterruptText(75), 
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  1    wreg      PTR unsigned char 
  7483 ;; Registers used:
  7484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7490 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7491 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  7492 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7493 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
  7494 ;;Total ram usage:        8 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; Hardware stack levels required when called:    4
  7497 ;; This function calls:
  7498 ;;		Nothing
  7499 ;; This function is called by:
  7500 ;;		_strcat
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           psect	text28,local,class=CODE,delta=2,merge=1,group=2
  7504                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  7505                           	line	7
  7506                           global __ptext28
  7507                           __ptext28:	;psect for function _strcpy
  7508  0DAC                     psect	text28
  7509                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  7510                           	line	7
  7511                           	global	__size_of_strcpy
  7512                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  7513  0025                     	
  7514                           _strcpy:	
  7515  0DAC                     ;incstack = 0
  7516                           	opt	stack 9
  7517                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  7518                           ;strcpy@dest stored from wreg
  7519                           	movlb 0	; select bank0
  7520  0DAC  0020               	movwf	(strcpy@dest)
  7521  0DAD  00C1               	line	13
  7522                           	
  7523                           l3085:	
  7524  0DAE                     	movf	(strcpy@src+1),w
  7525  0DAE  083B               	movwf	(strcpy@s+1)
  7526  0DAF  00BF               	movf	(strcpy@src),w
  7527  0DB0  083A               	movwf	(strcpy@s)
  7528  0DB1  00BE               	line	14
  7529                           	movf	(strcpy@dest),w
  7530  0DB2  0841               	movwf	(??_strcpy+0)+0
  7531  0DB3  00BC               	movf	(??_strcpy+0)+0,w
  7532  0DB4  083C               	movwf	(strcpy@d)
  7533  0DB5  00C0               	line	15
  7534                           	goto	l3087
  7535  0DB6  2DB8               	
  7536                           l841:	
  7537  0DB7                     	goto	l3087
  7538  0DB7  2DB8               	
  7539                           l840:	
  7540  0DB8                     	
  7541                           l3087:	
  7542  0DB8                     	movf	(strcpy@d),w
  7543  0DB8  0840               	movwf	fsr1l
  7544  0DB9  0086               	movlw 1	; select bank2/3
  7545  0DBA  3001               	movwf fsr1h	
  7546  0DBB  0087               	
  7547                           	incf	(strcpy@d),f
  7548  0DBC  0AC0               	movf	(strcpy@s+1),w
  7549  0DBD  083F               	movwf	(??_strcpy+0)+0+1
  7550  0DBE  00BD               	movf	(strcpy@s),w
  7551  0DBF  083E               	movwf	(??_strcpy+0)+0
  7552  0DC0  00BC               	incf	(strcpy@s),f
  7553  0DC1  0ABE               	skipnz
  7554  0DC2  1903               	incf	(strcpy@s+1),f
  7555  0DC3  0ABF               	movf	0+(??_strcpy+0)+0,w
  7556  0DC4  083C               	movwf	fsr0l
  7557  0DC5  0084               	movf	(1+(??_strcpy+0)+0),w
  7558  0DC6  083D               	movwf	fsr0h
  7559  0DC7  0085               	movf	indf0,w ;code access
  7560  0DC8  0800               	movwi	[0]fsr1
  7561  0DC9  3FC0               	movf	wreg
  7562  0DCA  0889               	btfss	status,2
  7563  0DCB  1D03               	goto	u2021
  7564  0DCC  2DCE               	goto	u2020
  7565  0DCD  2DCF               u2021:
  7566  0DCE                     	goto	l3087
  7567  0DCE  2DB8               u2020:
  7568  0DCF                     	goto	l843
  7569  0DCF  2DD0               	
  7570                           l842:	
  7571  0DD0                     	line	18
  7572                           ;	Return value of _strcpy is never used
  7573                           	
  7574                           l843:	
  7575  0DD0                     	return
  7576  0DD0  0008               	opt stack 0
  7577                           GLOBAL	__end_of_strcpy
  7578                           	__end_of_strcpy:
  7579  0DD1                     	signat	_strcpy,8313
  7580                           	global	_myint
  7581                           
  7582 ;; *************** function _myint *****************
  7583 ;; Defined at:
  7584 ;;		line 494 in file "161518_temp_main.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;		None
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;		None
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  1    wreg      void 
  7591 ;; Registers used:
  7592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7600 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7601 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7602 ;;Total ram usage:        5 bytes
  7603 ;; Hardware stack levels used:    1
  7604 ;; Hardware stack levels required when called:    3
  7605 ;; This function calls:
  7606 ;;		i1_Add_Trace
  7607 ;; This function is called by:
  7608 ;;		Interrupt level 1
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           psect	intentry,class=CODE,delta=2
  7612                           global __pintentry
  7613                           __pintentry:
  7614  0004                     psect	intentry
  7615                           	file	"161518_temp_main.c"
  7616                           	line	494
  7617                           	global	__size_of_myint
  7618                           	__size_of_myint	equ	__end_of_myint-_myint
  7619  0182                     	
  7620                           _myint:	
  7621  0004                     ;incstack = 0
  7622                           	opt	stack 6
  7623                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
  7624  0004  147E               ; Regs used in _myint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7625                           psect	intentry
  7626                           	pagesel	$
  7627  0005  3180               	line	497
  7628                           	
  7629                           i1l3683:	
  7630  0006                     	movlb 0	; select bank0
  7631  0006  0020               	btfss	(17),3	;volatile
  7632  0007  1D91               	goto	u255_21
  7633  0008  280A               	goto	u255_20
  7634  0009  280B               u255_21:
  7635  000A                     	goto	i1l210
  7636  000A  293C               u255_20:
  7637  000B                     	line	499
  7638                           	
  7639                           i1l3685:	
  7640  000B                     	bcf	(17),3	;volatile
  7641  000B  1191               	line	500
  7642                           	
  7643                           i1l3687:	
  7644  000C                     	movf	((_wI2CTxBufferSize)),w
  7645  000C  0855               	btfsc	status,2
  7646  000D  1903               	goto	u256_21
  7647  000E  2810               	goto	u256_20
  7648  000F  2811               u256_21:
  7649  0010                     	goto	i1l210
  7650  0010  293C               u256_20:
  7651  0011                     	line	502
  7652                           	
  7653                           i1l3689:	
  7654  0011                     	movlb 1	; select bank1
  7655  0011  0021               	btfss	(_wI2CTxBuffer)^080h,(0)&7
  7656  0012  1C27               	goto	u257_21
  7657  0013  2815               	goto	u257_20
  7658  0014  2816               u257_21:
  7659  0015                     	goto	i1l212
  7660  0015  28DA               u257_20:
  7661  0016                     	line	504
  7662                           	
  7663                           i1l3691:	
  7664  0016                     	movlb 4	; select bank4
  7665  0016  0024               	btfss	(532)^0200h,4	;volatile
  7666  0017  1E14               	goto	u258_21
  7667  0018  281A               	goto	u258_20
  7668  0019  281B               u258_21:
  7669  001A                     	goto	i1l213
  7670  001A  2821               u258_20:
  7671  001B                     	line	506
  7672                           	
  7673                           i1l3693:	
  7674  001B                     	movlb 1	; select bank1
  7675  001B  0021               	bcf	(145)^080h,3	;volatile
  7676  001C  1191               	line	507
  7677                           	
  7678                           i1l3695:	
  7679  001D                     	movlb 0	; select bank0
  7680  001D  0020               	clrf	(_wI2CTxBufferSize)
  7681  001E  01D5               	line	508
  7682                           	clrf	(_wI2CTxSendPos)
  7683  001F  01D3               	line	509
  7684                           	goto	i1l210
  7685  0020  293C               	line	510
  7686                           	
  7687                           i1l213:	
  7688  0021                     	btfss	(532)^0200h,3	;volatile
  7689  0021  1D94               	goto	u259_21
  7690  0022  2824               	goto	u259_20
  7691  0023  2825               u259_21:
  7692  0024                     	goto	i1l215
  7693  0024  283B               u259_20:
  7694  0025                     	
  7695                           i1l3697:	
  7696  0025                     	movlb 0	; select bank0
  7697  0025  0020               	movf	((_wI2CTxSendPos)),w
  7698  0026  0853               	btfss	status,2
  7699  0027  1D03               	goto	u260_21
  7700  0028  282A               	goto	u260_20
  7701  0029  282B               u260_21:
  7702  002A                     	goto	i1l215
  7703  002A  283B               u260_20:
  7704  002B                     	line	512
  7705                           	
  7706                           i1l3699:	
  7707  002B                     	movf	(_wI2CTxSendPos),w
  7708  002B  0853               	addlw	low(_wI2CTxBuffer|((0x0)<<8))&0ffh
  7709  002C  3EA7               	movwf	fsr1l
  7710  002D  0086               	clrf fsr1h	
  7711  002E  0187               	
  7712                           	movf	indf1,w
  7713  002F  0801               	movlb 4	; select bank4
  7714  0030  0024               	movwf	(529)^0200h	;volatile
  7715  0031  0091               	line	513
  7716                           	
  7717                           i1l3701:	
  7718  0032                     	movlb 1	; select bank1
  7719  0032  0021               	clrf	(_wI2CCommandState)^080h
  7720  0033  01A6               	incf	(_wI2CCommandState)^080h,f
  7721  0034  0AA6               	line	514
  7722                           	
  7723                           i1l3703:	
  7724  0035                     	movlw	low(01h)
  7725  0035  3001               	movlb 0	; select bank0
  7726  0036  0020               	movwf	(??_myint+0)+0
  7727  0037  00AF               	movf	(??_myint+0)+0,w
  7728  0038  082F               	addwf	(_wI2CTxSendPos),f
  7729  0039  07D3               	line	515
  7730                           	goto	i1l210
  7731  003A  293C               	line	516
  7732                           	
  7733                           i1l215:	
  7734  003B                     	movlb 4	; select bank4
  7735  003B  0024               	btfss	(532)^0200h,0	;volatile
  7736  003C  1C14               	goto	u261_21
  7737  003D  283F               	goto	u261_20
  7738  003E  2840               u261_21:
  7739  003F                     	goto	i1l217
  7740  003F  2897               u261_20:
  7741  0040                     	line	518
  7742                           	
  7743                           i1l3705:	
  7744  0040                     	movf	(529)^0200h,w	;volatile
  7745  0040  0811               	movlb 0	; select bank0
  7746  0041  0020               	movwf	(??_myint+0)+0
  7747  0042  00AF               	movf	(_wReceptionBufferPosition),w
  7748  0043  0858               	addlw	low(_wReceptionBuffer|((0x1)<<8))&0ffh
  7749  0044  3E34               	movwf	fsr1l
  7750  0045  0086               	movlw 1	; select bank2/3
  7751  0046  3001               	movwf fsr1h	
  7752  0047  0087               	
  7753                           	movf	(??_myint+0)+0,w
  7754  0048  082F               	movwf	indf1
  7755  0049  0081               	line	519
  7756                           	
  7757                           i1l3707:	
  7758  004A                     	movlw	low(01h)
  7759  004A  3001               	movwf	(??_myint+0)+0
  7760  004B  00AF               	movf	(??_myint+0)+0,w
  7761  004C  082F               	addwf	(_wReceptionBufferPosition),f
  7762  004D  07D8               	line	521
  7763                           	
  7764                           i1l3709:	
  7765  004E                     	movlb 4	; select bank4
  7766  004E  0024               	bcf	(532)^0200h,0	;volatile
  7767  004F  1014               	line	522
  7768                           	
  7769                           i1l3711:	
  7770  0050                     	movlb 0	; select bank0
  7771  0050  0020               	movf	(_wI2CRxBufferSize),w
  7772  0051  0854               	subwf	(_wReceptionBufferPosition),w
  7773  0052  0258               	skipnc
  7774  0053  1803               	goto	u262_21
  7775  0054  2856               	goto	u262_20
  7776  0055  2857               u262_21:
  7777  0056                     	goto	i1l218
  7778  0056  285A               u262_20:
  7779  0057                     	line	524
  7780                           	
  7781                           i1l3713:	
  7782  0057                     	movlb 4	; select bank4
  7783  0057  0024               	bcf	(534)^0200h,5	;volatile
  7784  0058  1296               	line	525
  7785                           	goto	i1l3723
  7786  0059  2894               	line	526
  7787                           	
  7788                           i1l218:	
  7789  005A                     	line	528
  7790                           	movlb 4	; select bank4
  7791  005A  0024               	bsf	(534)^0200h,5	;volatile
  7792  005B  1696               	line	529
  7793                           	
  7794                           i1l3715:	
  7795  005C                     	movlw	low(02h)
  7796  005C  3002               	movlb 0	; select bank0
  7797  005D  0020               	movwf	(??_myint+0)+0
  7798  005E  00AF               	movf	(??_myint+0)+0,w
  7799  005F  082F               	movlb 1	; select bank1
  7800  0060  0021               	movwf	(_wI2CCommandState)^080h
  7801  0061  00A6               	line	530
  7802                           	
  7803                           i1l3717:	
  7804  0062                     	movlb 2	; select bank2
  7805  0062  0022               	movf	0+(_wReceptionBuffer)^0100h+03h,w
  7806  0063  0837               	movlb 0	; select bank0
  7807  0064  0020               	movwf	(??_myint+0)+0
  7808  0065  00AF               	clrf	(??_myint+0)+0+1
  7809  0066  01B0               	movlb 2	; select bank2
  7810  0067  0022               	movf	0+(_wReceptionBuffer)^0100h+02h,w
  7811  0068  0836               	movlb 0	; select bank0
  7812  0069  0020               	movwf	(??_myint+2)+0
  7813  006A  00B1               	clrf	(??_myint+2)+0+1
  7814  006B  01B2               	movf	(??_myint+2)+0,w
  7815  006C  0831               	movwf	(??_myint+2)+1
  7816  006D  00B2               	clrf	(??_myint+2)+0
  7817  006E  01B1               	movf	0+(??_myint+0)+0,w
  7818  006F  082F               	addwf	0+(??_myint+2)+0,w
  7819  0070  0731               	movlb 1	; select bank1
  7820  0071  0021               	movwf	(_wHumidity)^080h
  7821  0072  00A2               	movlb 0	; select bank0
  7822  0073  0020               	movf	1+(??_myint+0)+0,w
  7823  0074  0830               	addwfc	1+(??_myint+2)+0,w
  7824  0075  3D32               	movlb 1	; select bank1
  7825  0076  0021               	movwf	1+(_wHumidity)^080h
  7826  0077  00A3               	line	531
  7827                           	
  7828                           i1l3719:	
  7829  0078                     	movlb 2	; select bank2
  7830  0078  0022               	movf	0+(_wReceptionBuffer)^0100h+05h,w
  7831  0079  0839               	movlb 0	; select bank0
  7832  007A  0020               	movwf	(??_myint+0)+0
  7833  007B  00AF               	clrf	(??_myint+0)+0+1
  7834  007C  01B0               	movlb 2	; select bank2
  7835  007D  0022               	movf	0+(_wReceptionBuffer)^0100h+04h,w
  7836  007E  0838               	movlb 0	; select bank0
  7837  007F  0020               	movwf	(??_myint+2)+0
  7838  0080  00B1               	clrf	(??_myint+2)+0+1
  7839  0081  01B2               	movf	(??_myint+2)+0,w
  7840  0082  0831               	movwf	(??_myint+2)+1
  7841  0083  00B2               	clrf	(??_myint+2)+0
  7842  0084  01B1               	movf	0+(??_myint+0)+0,w
  7843  0085  082F               	addwf	0+(??_myint+2)+0,w
  7844  0086  0731               	movlb 1	; select bank1
  7845  0087  0021               	movwf	(_wTemperature)^080h
  7846  0088  00A0               	movlb 0	; select bank0
  7847  0089  0020               	movf	1+(??_myint+0)+0,w
  7848  008A  0830               	addwfc	1+(??_myint+2)+0,w
  7849  008B  3D32               	movlb 1	; select bank1
  7850  008C  0021               	movwf	1+(_wTemperature)^080h
  7851  008D  00A1               	line	532
  7852                           	
  7853                           i1l3721:	
  7854  008E                     	movlw	low(01h)
  7855  008E  3001               	movlb 0	; select bank0
  7856  008F  0020               	movwf	(??_myint+0)+0
  7857  0090  00AF               	movf	(??_myint+0)+0,w
  7858  0091  082F               	addwf	(_wReceptionCounter),f
  7859  0092  07D7               	goto	i1l3723
  7860  0093  2894               	line	534
  7861                           	
  7862                           i1l219:	
  7863  0094                     	line	535
  7864                           	
  7865                           i1l3723:	
  7866  0094                     	movlb 4	; select bank4
  7867  0094  0024               	bsf	(534)^0200h,4	;volatile
  7868  0095  1616               	line	536
  7869                           	goto	i1l210
  7870  0096  293C               	line	537
  7871                           	
  7872                           i1l217:	
  7873  0097                     	line	539
  7874                           	btfsc	(534)^0200h,6	;volatile
  7875  0097  1B16               	goto	u263_21
  7876  0098  289A               	goto	u263_20
  7877  0099  289B               u263_21:
  7878  009A                     	goto	i1l221
  7879  009A  28AE               u263_20:
  7880  009B                     	
  7881                           i1l3725:	
  7882  009B                     	movlb 0	; select bank0
  7883  009B  0020               	movf	((_wI2CTxSendPos)),w
  7884  009C  0853               	btfsc	status,2
  7885  009D  1903               	goto	u264_21
  7886  009E  28A0               	goto	u264_20
  7887  009F  28A1               u264_21:
  7888  00A0                     	goto	i1l221
  7889  00A0  28AE               u264_20:
  7890  00A1                     	line	541
  7891                           	
  7892                           i1l3727:	
  7893  00A1                     	movf	(_wI2CRxBufferSize),w
  7894  00A1  0854               	subwf	(_wReceptionBufferPosition),w
  7895  00A2  0258               	skipnc
  7896  00A3  1803               	goto	u265_21
  7897  00A4  28A6               	goto	u265_20
  7898  00A5  28A7               u265_21:
  7899  00A6                     	goto	i1l222
  7900  00A6  28AA               u265_20:
  7901  00A7                     	line	544
  7902                           	
  7903                           i1l3729:	
  7904  00A7                     	movlb 4	; select bank4
  7905  00A7  0024               	bsf	(534)^0200h,3	;volatile
  7906  00A8  1596               	line	545
  7907                           	goto	i1l210
  7908  00A9  293C               	line	546
  7909                           	
  7910                           i1l222:	
  7911  00AA                     	line	548
  7912                           	movlb 4	; select bank4
  7913  00AA  0024               	bsf	(534)^0200h,2	;volatile
  7914  00AB  1516               	goto	i1l210
  7915  00AC  293C               	line	549
  7916                           	
  7917                           i1l223:	
  7918  00AD                     	line	550
  7919                           	goto	i1l210
  7920  00AD  293C               	line	551
  7921                           	
  7922                           i1l221:	
  7923  00AE                     	movlb 4	; select bank4
  7924  00AE  0024               	btfss	(534)^0200h,6	;volatile
  7925  00AF  1F16               	goto	u266_21
  7926  00B0  28B2               	goto	u266_20
  7927  00B1  28B3               u266_21:
  7928  00B2                     	goto	i1l3739
  7929  00B2  28C7               u266_20:
  7930  00B3                     	line	553
  7931                           	
  7932                           i1l3731:	
  7933  00B3                     	bcf	(534)^0200h,6	;volatile
  7934  00B3  1316               	line	554
  7935                           	
  7936                           i1l3733:	
  7937  00B4                     	movlw	low(03h)
  7938  00B4  3003               	movlb 0	; select bank0
  7939  00B5  0020               	movwf	(??_myint+0)+0
  7940  00B6  00AF               	movf	(??_myint+0)+0,w
  7941  00B7  082F               	movlb 1	; select bank1
  7942  00B8  0021               	movwf	(_wI2CCommandState)^080h
  7943  00B9  00A6               	line	555
  7944                           	
  7945                           i1l3735:	
  7946  00BA                     	movlb 0	; select bank0
  7947  00BA  0020               	movf	((_wI2CTxSendPos)),w
  7948  00BB  0853               	btfsc	status,2
  7949  00BC  1903               	goto	u267_21
  7950  00BD  28BF               	goto	u267_20
  7951  00BE  28C0               u267_21:
  7952  00BF                     	goto	i1l226
  7953  00BF  28C3               u267_20:
  7954  00C0                     	line	557
  7955                           	
  7956                           i1l3737:	
  7957  00C0                     	movlb 4	; select bank4
  7958  00C0  0024               	bsf	(534)^0200h,2	;volatile
  7959  00C1  1516               	line	558
  7960                           	goto	i1l210
  7961  00C2  293C               	line	559
  7962                           	
  7963                           i1l226:	
  7964  00C3                     	line	561
  7965                           	movlb 4	; select bank4
  7966  00C3  0024               	bsf	(534)^0200h,2	;volatile
  7967  00C4  1516               	goto	i1l210
  7968  00C5  293C               	line	562
  7969                           	
  7970                           i1l227:	
  7971  00C6                     	line	563
  7972                           	goto	i1l210
  7973  00C6  293C               	line	564
  7974                           	
  7975                           i1l225:	
  7976  00C7                     	line	566
  7977                           	
  7978                           i1l3739:	
  7979  00C7                     	movlw	low(04Bh)
  7980  00C7  304B               	movlb 0	; select bank0
  7981  00C8  0020               	movwf	(??_myint+0)+0
  7982  00C9  00AF               	movf	(??_myint+0)+0,w
  7983  00CA  082F               	movwf	(i1Add_Trace@iSizeOfoText)
  7984  00CB  00A5               	movlw	low(((STR_7)|8000h))
  7985  00CC  305C               	movwf	(i1Add_Trace@iText)
  7986  00CD  00A6               	movlw	high(((STR_7)|8000h))
  7987  00CE  3090               	movwf	((i1Add_Trace@iText))+1
  7988  00CF  00A7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  7989  00D0  30A0               	fcall	i1_Add_Trace
  7990  00D1  318E  26AB  3180   	goto	i1l210
  7991  00D4  293C               	line	567
  7992                           	
  7993                           i1l228:	
  7994  00D5                     	goto	i1l210
  7995  00D5  293C               	
  7996                           i1l224:	
  7997  00D6                     	goto	i1l210
  7998  00D6  293C               	line	568
  7999                           	
  8000                           i1l220:	
  8001  00D7                     	goto	i1l210
  8002  00D7  293C               	
  8003                           i1l216:	
  8004  00D8                     	goto	i1l210
  8005  00D8  293C               	
  8006                           i1l214:	
  8007  00D9                     	line	570
  8008                           	goto	i1l210
  8009  00D9  293C               	line	571
  8010                           	
  8011                           i1l212:	
  8012  00DA                     	line	573
  8013                           	movlb 4	; select bank4
  8014  00DA  0024               	btfss	(532)^0200h,4	;volatile
  8015  00DB  1E14               	goto	u268_21
  8016  00DC  28DE               	goto	u268_20
  8017  00DD  28DF               u268_21:
  8018  00DE                     	goto	i1l230
  8019  00DE  28E5               u268_20:
  8020  00DF                     	line	575
  8021                           	
  8022                           i1l3741:	
  8023  00DF                     	movlb 1	; select bank1
  8024  00DF  0021               	bcf	(145)^080h,3	;volatile
  8025  00E0  1191               	line	576
  8026                           	
  8027                           i1l3743:	
  8028  00E1                     	movlb 0	; select bank0
  8029  00E1  0020               	clrf	(_wI2CTxBufferSize)
  8030  00E2  01D5               	line	577
  8031                           	clrf	(_wI2CTxSendPos)
  8032  00E3  01D3               	line	578
  8033                           	goto	i1l210
  8034  00E4  293C               	line	579
  8035                           	
  8036                           i1l230:	
  8037  00E5                     	btfss	(532)^0200h,3	;volatile
  8038  00E5  1D94               	goto	u269_21
  8039  00E6  28E8               	goto	u269_20
  8040  00E7  28E9               u269_21:
  8041  00E8                     	goto	i1l232
  8042  00E8  2900               u269_20:
  8043  00E9                     	
  8044                           i1l3745:	
  8045  00E9                     	movlb 0	; select bank0
  8046  00E9  0020               	movf	((_wI2CTxSendPos)),w
  8047  00EA  0853               	btfss	status,2
  8048  00EB  1D03               	goto	u270_21
  8049  00EC  28EE               	goto	u270_20
  8050  00ED  28EF               u270_21:
  8051  00EE                     	goto	i1l232
  8052  00EE  2900               u270_20:
  8053  00EF                     	line	581
  8054                           	
  8055                           i1l3747:	
  8056  00EF                     	movlb 1	; select bank1
  8057  00EF  0021               	clrf	(_wI2CCommandState)^080h
  8058  00F0  01A6               	incf	(_wI2CCommandState)^080h,f
  8059  00F1  0AA6               	line	582
  8060                           	
  8061                           i1l3749:	
  8062  00F2                     	movlb 0	; select bank0
  8063  00F2  0020               	movf	(_wI2CTxSendPos),w
  8064  00F3  0853               	addlw	low(_wI2CTxBuffer|((0x0)<<8))&0ffh
  8065  00F4  3EA7               	movwf	fsr1l
  8066  00F5  0086               	clrf fsr1h	
  8067  00F6  0187               	
  8068                           	movf	indf1,w
  8069  00F7  0801               	movlb 4	; select bank4
  8070  00F8  0024               	movwf	(529)^0200h	;volatile
  8071  00F9  0091               	line	583
  8072                           	
  8073                           i1l3751:	
  8074  00FA                     	movlw	low(01h)
  8075  00FA  3001               	movlb 0	; select bank0
  8076  00FB  0020               	movwf	(??_myint+0)+0
  8077  00FC  00AF               	movf	(??_myint+0)+0,w
  8078  00FD  082F               	addwf	(_wI2CTxSendPos),f
  8079  00FE  07D3               	line	584
  8080                           	goto	i1l210
  8081  00FF  293C               	line	585
  8082                           	
  8083                           i1l232:	
  8084  0100                     	line	587
  8085                           	movlb 4	; select bank4
  8086  0100  0024               	btfsc	(534)^0200h,6	;volatile
  8087  0101  1B16               	goto	u271_21
  8088  0102  2904               	goto	u271_20
  8089  0103  2905               u271_21:
  8090  0104                     	goto	i1l234
  8091  0104  2928               u271_20:
  8092  0105                     	
  8093                           i1l3753:	
  8094  0105                     	movlb 0	; select bank0
  8095  0105  0020               	movf	((_wI2CTxSendPos)),w
  8096  0106  0853               	btfsc	status,2
  8097  0107  1903               	goto	u272_21
  8098  0108  290A               	goto	u272_20
  8099  0109  290B               u272_21:
  8100  010A                     	goto	i1l234
  8101  010A  2928               u272_20:
  8102  010B                     	line	589
  8103                           	
  8104                           i1l3755:	
  8105  010B                     	movf	(_wI2CTxBufferSize),w
  8106  010B  0855               	subwf	(_wI2CTxSendPos),w
  8107  010C  0253               	skipnc
  8108  010D  1803               	goto	u273_21
  8109  010E  2910               	goto	u273_20
  8110  010F  2911               u273_21:
  8111  0110                     	goto	i1l235
  8112  0110  291E               u273_20:
  8113  0111                     	line	591
  8114                           	
  8115                           i1l3757:	
  8116  0111                     	movf	(_wI2CTxSendPos),w
  8117  0111  0853               	addlw	low(_wI2CTxBuffer|((0x0)<<8))&0ffh
  8118  0112  3EA7               	movwf	fsr1l
  8119  0113  0086               	clrf fsr1h	
  8120  0114  0187               	
  8121                           	movf	indf1,w
  8122  0115  0801               	movlb 4	; select bank4
  8123  0116  0024               	movwf	(529)^0200h	;volatile
  8124  0117  0091               	line	592
  8125                           	
  8126                           i1l3759:	
  8127  0118                     	movlw	low(01h)
  8128  0118  3001               	movlb 0	; select bank0
  8129  0119  0020               	movwf	(??_myint+0)+0
  8130  011A  00AF               	movf	(??_myint+0)+0,w
  8131  011B  082F               	addwf	(_wI2CTxSendPos),f
  8132  011C  07D3               	line	593
  8133                           	goto	i1l210
  8134  011D  293C               	line	594
  8135                           	
  8136                           i1l235:	
  8137  011E                     	line	596
  8138                           	movlb 4	; select bank4
  8139  011E  0024               	bsf	(534)^0200h,2	;volatile
  8140  011F  1516               	line	597
  8141                           	
  8142                           i1l3761:	
  8143  0120                     	movlw	low(02h)
  8144  0120  3002               	movlb 0	; select bank0
  8145  0121  0020               	movwf	(??_myint+0)+0
  8146  0122  00AF               	movf	(??_myint+0)+0,w
  8147  0123  082F               	movlb 1	; select bank1
  8148  0124  0021               	movwf	(_wI2CCommandState)^080h
  8149  0125  00A6               	goto	i1l210
  8150  0126  293C               	line	598
  8151                           	
  8152                           i1l236:	
  8153  0127                     	line	599
  8154                           	goto	i1l210
  8155  0127  293C               	line	600
  8156                           	
  8157                           i1l234:	
  8158  0128                     	movlb 4	; select bank4
  8159  0128  0024               	btfss	(534)^0200h,6	;volatile
  8160  0129  1F16               	goto	u274_21
  8161  012A  292C               	goto	u274_20
  8162  012B  292D               u274_21:
  8163  012C                     	goto	i1l210
  8164  012C  293C               u274_20:
  8165  012D                     	line	602
  8166                           	
  8167                           i1l3763:	
  8168  012D                     	bcf	(534)^0200h,6	;volatile
  8169  012D  1316               	line	603
  8170                           	bsf	(534)^0200h,2	;volatile
  8171  012E  1516               	line	604
  8172                           	
  8173                           i1l3765:	
  8174  012F                     	movlw	low(03h)
  8175  012F  3003               	movlb 0	; select bank0
  8176  0130  0020               	movwf	(??_myint+0)+0
  8177  0131  00AF               	movf	(??_myint+0)+0,w
  8178  0132  082F               	movlb 1	; select bank1
  8179  0133  0021               	movwf	(_wI2CCommandState)^080h
  8180  0134  00A6               	line	605
  8181                           	goto	i1l210
  8182  0135  293C               	line	606
  8183                           	
  8184                           i1l238:	
  8185  0136                     	goto	i1l210
  8186  0136  293C               	line	609
  8187                           	
  8188                           i1l239:	
  8189  0137                     	goto	i1l210
  8190  0137  293C               	
  8191                           i1l237:	
  8192  0138                     	goto	i1l210
  8193  0138  293C               	line	610
  8194                           	
  8195                           i1l233:	
  8196  0139                     	goto	i1l210
  8197  0139  293C               	
  8198                           i1l231:	
  8199  013A                     	goto	i1l210
  8200  013A  293C               	line	611
  8201                           	
  8202                           i1l229:	
  8203  013B                     	goto	i1l210
  8204  013B  293C               	line	616
  8205                           	
  8206                           i1l211:	
  8207  013C                     	line	617
  8208                           	
  8209                           i1l210:	
  8210  013C                     	line	618
  8211                           	movlb 0	; select bank0
  8212  013C  0020               	btfss	(18),3	;volatile
  8213  013D  1D92               	goto	u275_21
  8214  013E  2940               	goto	u275_20
  8215  013F  2941               u275_21:
  8216  0140                     	goto	i1l3771
  8217  0140  294F               u275_20:
  8218  0141                     	line	620
  8219                           	
  8220                           i1l3767:	
  8221  0141                     	bcf	(18),3	;volatile
  8222  0141  1192               	line	621
  8223                           	
  8224                           i1l3769:	
  8225  0142                     	movlw	low(04Bh)
  8226  0142  304B               	movwf	(??_myint+0)+0
  8227  0143  00AF               	movf	(??_myint+0)+0,w
  8228  0144  082F               	movwf	(i1Add_Trace@iSizeOfoText)
  8229  0145  00A5               	movlw	low(((STR_8)|8000h))
  8230  0146  3055               	movwf	(i1Add_Trace@iText)
  8231  0147  00A6               	movlw	high(((STR_8)|8000h))
  8232  0148  3090               	movwf	((i1Add_Trace@iText))+1
  8233  0149  00A7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  8234  014A  30A0               	fcall	i1_Add_Trace
  8235  014B  318E  26AB  3180   	goto	i1l3771
  8236  014E  294F               	line	622
  8237                           	
  8238                           i1l240:	
  8239  014F                     	line	623
  8240                           	
  8241                           i1l3771:	
  8242  014F                     	movlb 0	; select bank0
  8243  014F  0020               	btfss	(17),0	;volatile
  8244  0150  1C11               	goto	u276_21
  8245  0151  2953               	goto	u276_20
  8246  0152  2954               u276_21:
  8247  0153                     	goto	i1l241
  8248  0153  2978               u276_20:
  8249  0154                     	line	625
  8250                           	
  8251                           i1l3773:	
  8252  0154                     	movlw	low(01h)
  8253  0154  3001               	movwf	(??_myint+0)+0
  8254  0155  00AF               	movf	(??_myint+0)+0,w
  8255  0156  082F               	addwf	(_wTimer1IntCounter),f
  8256  0157  07D0               	line	626
  8257                           	
  8258                           i1l3775:	
  8259  0158                     	bcf	(17),0	;volatile
  8260  0158  1011               	line	628
  8261                           		movlw	7
  8262  0159  3007               	xorwf	((_wTimer1IntCounter)),w
  8263  015A  0650               	btfss	status,2
  8264  015B  1D03               	goto	u277_21
  8265  015C  295E               	goto	u277_20
  8266  015D  295F               u277_21:
  8267  015E                     	goto	i1l3779
  8268  015E  2964               u277_20:
  8269  015F                     	line	630
  8270                           	
  8271                           i1l3777:	
  8272  015F                     	movlw	low(04Ch)
  8273  015F  304C               	movwf	(23)	;volatile
  8274  0160  0097               	line	631
  8275                           	movlw	low(083h)
  8276  0161  3083               	movwf	(22)	;volatile
  8277  0162  0096               	goto	i1l3779
  8278  0163  2964               	line	632
  8279                           	
  8280                           i1l242:	
  8281  0164                     	line	633
  8282                           	
  8283                           i1l3779:	
  8284  0164                     		movlw	8
  8285  0164  3008               	xorwf	((_wTimer1IntCounter)),w
  8286  0165  0650               	btfss	status,2
  8287  0166  1D03               	goto	u278_21
  8288  0167  2969               	goto	u278_20
  8289  0168  296A               u278_21:
  8290  0169                     	goto	i1l241
  8291  0169  2978               u278_20:
  8292  016A                     	line	635
  8293                           	
  8294                           i1l3781:	
  8295  016A                     	clrf	(_wTimer1IntCounter)
  8296  016A  01D0               	line	637
  8297                           	
  8298                           i1l3783:	
  8299  016B                     	clrf	(_wTempUpdate)
  8300  016B  01D1               	incf	(_wTempUpdate),f
  8301  016C  0AD1               	line	638
  8302                           	
  8303                           i1l3785:	
  8304  016D                     		movlw	6
  8305  016D  3006               	movlb 1	; select bank1
  8306  016E  0021               	xorwf	((_wTempState)^080h),w
  8307  016F  0624               	btfss	status,2
  8308  0170  1D03               	goto	u279_21
  8309  0171  2973               	goto	u279_20
  8310  0172  2974               u279_21:
  8311  0173                     	goto	i1l241
  8312  0173  2978               u279_20:
  8313  0174                     	line	640
  8314                           	
  8315                           i1l3787:	
  8316  0174                     	clrf	(_wTempState)^080h
  8317  0174  01A4               	line	641
  8318                           	goto	i1l241
  8319  0175  2978               	line	642
  8320                           	
  8321                           i1l244:	
  8322  0176                     	goto	i1l241
  8323  0176  2978               	line	645
  8324                           	
  8325                           i1l245:	
  8326  0177                     	goto	i1l241
  8327  0177  2978               	line	646
  8328                           	
  8329                           i1l243:	
  8330  0178                     	line	647
  8331                           	
  8332                           i1l241:	
  8333  0178                     	line	648
  8334                           	btfss	(11),2	;volatile
  8335  0178  1D0B               	goto	u280_21
  8336  0179  297B               	goto	u280_20
  8337  017A  297C               u280_21:
  8338  017B                     	goto	i1l247
  8339  017B  2984               u280_20:
  8340  017C                     	line	650
  8341                           	
  8342                           i1l3789:	
  8343  017C                     	bcf	(11),2	;volatile
  8344  017C  110B               	line	651
  8345                           	
  8346                           i1l3791:	
  8347  017D                     	movlw	low(01h)
  8348  017D  3001               	movlb 0	; select bank0
  8349  017E  0020               	movwf	(??_myint+0)+0
  8350  017F  00AF               	movf	(??_myint+0)+0,w
  8351  0180  082F               	movlb 1	; select bank1
  8352  0181  0021               	addwf	(_wTimer0Counter)^080h,f
  8353  0182  07A5               	goto	i1l247
  8354  0183  2984               	line	652
  8355                           	
  8356                           i1l246:	
  8357  0184                     	line	653
  8358                           	
  8359                           i1l247:	
  8360  0184                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  8361  0184  107E               	retfie
  8362  0185  0009               	opt stack 0
  8363                           GLOBAL	__end_of_myint
  8364                           	__end_of_myint:
  8365  0186                     	signat	_myint,89
  8366                           	global	i1_Add_Trace
  8367                           
  8368 ;; *************** function i1_Add_Trace *****************
  8369 ;; Defined at:
  8370 ;;		line 86 in file "161518_temp_main.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;  oText           1    wreg     PTR unsigned char 
  8373 ;;		 -> wInterruptText(75), 
  8374 ;;  iSizeOfoText    1    5[BANK0 ] unsigned char 
  8375 ;;  iText           2    6[BANK0 ] PTR unsigned char 
  8376 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  8377 ;;		 -> main@wReadout(20), 
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;  oText           1   14[BANK0 ] PTR unsigned char 
  8380 ;;		 -> wInterruptText(75), 
  8381 ;; Return value:  Size  Location     Type
  8382 ;;                  1    wreg      void 
  8383 ;; Registers used:
  8384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8385 ;; Tracked objects:
  8386 ;;		On entry : 0/0
  8387 ;;		On exit  : 0/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8390 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  8391 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8392 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  8393 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  8394 ;;Total ram usage:       10 bytes
  8395 ;; Hardware stack levels used:    1
  8396 ;; Hardware stack levels required when called:    2
  8397 ;; This function calls:
  8398 ;;		i1_strcat
  8399 ;;		i1_strlen
  8400 ;; This function is called by:
  8401 ;;		_myint
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
  8405                           	line	86
  8406                           global __ptext30
  8407                           __ptext30:	;psect for function i1_Add_Trace
  8408  0EAB                     psect	text30
  8409                           	file	"161518_temp_main.c"
  8410                           	line	86
  8411                           	global	__size_ofi1_Add_Trace
  8412                           	__size_ofi1_Add_Trace	equ	__end_ofi1_Add_Trace-i1_Add_Trace
  8413  003A                     	
  8414                           i1_Add_Trace:	
  8415  0EAB                     ;incstack = 0
  8416                           	opt	stack 6
  8417                           ; Regs used in i1_Add_Trace: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8418                           ;i1Add_Trace@oText stored from wreg
  8419                           	movlb 0	; select bank0
  8420  0EAB  0020               	movwf	(i1Add_Trace@oText)
  8421  0EAC  00AE               	line	88
  8422                           	
  8423                           i1l3385:	
  8424  0EAD                     	movf	(i1Add_Trace@oText),w
  8425  0EAD  082E               	movwf	(i1strlen@s)
  8426  0EAE  00F0               	movlw	0x1
  8427  0EAF  3001               
  8428                           	movwf	(i1strlen@s+1)
  8429  0EB0  00F1               	fcall	i1_strlen
  8430  0EB1  318D  2541  318E   	comf	(0+(?i1_strlen)),w
  8431  0EB4  0970               	movlb 0	; select bank0
  8432  0EB5  0020               	movwf	(??i1_Add_Trace+0)+0
  8433  0EB6  00A8               	comf	(1+(?i1_strlen)),w
  8434  0EB7  0971               	movwf	((??i1_Add_Trace+0)+0+1)
  8435  0EB8  00A9               	incf	(??i1_Add_Trace+0)+0,f
  8436  0EB9  0AA8               	skipnz
  8437  0EBA  1903               	incf	((??i1_Add_Trace+0)+0+1),f
  8438  0EBB  0AA9               	movf	(i1Add_Trace@iSizeOfoText),w
  8439  0EBC  0825               	addwf	0+(??i1_Add_Trace+0)+0,w
  8440  0EBD  0728               	movwf	(??i1_Add_Trace+2)+0
  8441  0EBE  00AA               	movf	1+(??i1_Add_Trace+0)+0,w
  8442  0EBF  0829               	skipnc
  8443  0EC0  1803               	incf	1+(??i1_Add_Trace+0)+0,w
  8444  0EC1  0A29               	movwf	((??i1_Add_Trace+2)+0)+1
  8445  0EC2  00AB               	movf	0+(??i1_Add_Trace+2)+0,w
  8446  0EC3  082A               	addlw	0FFh
  8447  0EC4  3EFF               	movwf	(??i1_Add_Trace+4)+0
  8448  0EC5  00AC               	movlw	0FFh
  8449  0EC6  30FF               	addwfc	1+(??i1_Add_Trace+2)+0,w
  8450  0EC7  3D2B               	movwf	1+(??i1_Add_Trace+4)+0
  8451  0EC8  00AD               	movf	(i1Add_Trace@iText+1),w
  8452  0EC9  0827               	movwf	(i1strlen@s+1)
  8453  0ECA  00F1               	movf	(i1Add_Trace@iText),w
  8454  0ECB  0826               	movwf	(i1strlen@s)
  8455  0ECC  00F0               	fcall	i1_strlen
  8456  0ECD  318D  2541  318E   	movlb 0	; select bank0
  8457  0ED0  0020               	movf	1+(??i1_Add_Trace+4)+0,w
  8458  0ED1  082D               	subwf	(1+(?i1_strlen)),w
  8459  0ED2  0271               	skipz
  8460  0ED3  1D03               	goto	u240_25
  8461  0ED4  2ED7               	movf	0+(??i1_Add_Trace+4)+0,w
  8462  0ED5  082C               	subwf	(0+(?i1_strlen)),w
  8463  0ED6  0270               u240_25:
  8464  0ED7                     	skipnc
  8465  0ED7  1803               	goto	u240_21
  8466  0ED8  2EDA               	goto	u240_20
  8467  0ED9  2EDB               u240_21:
  8468  0EDA                     	goto	i1l123
  8469  0EDA  2EE4               u240_20:
  8470  0EDB                     	line	90
  8471                           	
  8472                           i1l3387:	
  8473  0EDB                     	movf	(i1Add_Trace@iText+1),w
  8474  0EDB  0827               	movwf	(i1strcat@src+1)
  8475  0EDC  00A1               	movf	(i1Add_Trace@iText),w
  8476  0EDD  0826               	movwf	(i1strcat@src)
  8477  0EDE  00A0               	movf	(i1Add_Trace@oText),w
  8478  0EDF  082E               	fcall	i1_strcat
  8479  0EE0  318D  250F  318E   	goto	i1l123
  8480  0EE3  2EE4               	line	91
  8481                           	
  8482                           i1l122:	
  8483  0EE4                     	line	92
  8484                           	
  8485                           i1l123:	
  8486  0EE4                     	return
  8487  0EE4  0008               	opt stack 0
  8488                           GLOBAL	__end_ofi1_Add_Trace
  8489                           	__end_ofi1_Add_Trace:
  8490  0EE5                     	signat	i1_Add_Trace,89
  8491                           	global	i1_strcat
  8492                           
  8493 ;; *************** function i1_strcat *****************
  8494 ;; Defined at:
  8495 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;  dest            1    wreg     PTR unsigned char 
  8498 ;;		 -> wInterruptText(75), 
  8499 ;;  src             2    0[BANK0 ] PTR const unsigned char 
  8500 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  8501 ;;		 -> main@wReadout(20), 
  8502 ;; Auto vars:     Size  Location     Type
  8503 ;;  dest            1    4[BANK0 ] PTR unsigned char 
  8504 ;;		 -> wInterruptText(75), 
  8505 ;; Return value:  Size  Location     Type
  8506 ;;                  1    wreg      PTR unsigned char 
  8507 ;; Registers used:
  8508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8509 ;; Tracked objects:
  8510 ;;		On entry : 0/0
  8511 ;;		On exit  : 0/0
  8512 ;;		Unchanged: 0/0
  8513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8514 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8515 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8516 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8517 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  8518 ;;Total ram usage:        5 bytes
  8519 ;; Hardware stack levels used:    1
  8520 ;; Hardware stack levels required when called:    1
  8521 ;; This function calls:
  8522 ;;		i1_strcpy
  8523 ;;		i1_strlen
  8524 ;; This function is called by:
  8525 ;;		i1_Add_Trace
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
  8529                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  8530                           	line	3
  8531                           global __ptext31
  8532                           __ptext31:	;psect for function i1_strcat
  8533  0D0F                     psect	text31
  8534                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  8535                           	line	3
  8536                           	global	__size_ofi1_strcat
  8537                           	__size_ofi1_strcat	equ	__end_ofi1_strcat-i1_strcat
  8538  0019                     	
  8539                           i1_strcat:	
  8540  0D0F                     ;incstack = 0
  8541                           	opt	stack 6
  8542                           ; Regs used in i1_strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8543                           ;i1strcat@dest stored from wreg
  8544                           	movlb 0	; select bank0
  8545  0D0F  0020               	movwf	(i1strcat@dest)
  8546  0D10  00A4               	line	5
  8547                           	
  8548                           i1l3241:	
  8549  0D11                     	movf	(i1strcat@src+1),w
  8550  0D11  0821               	movwf	(i1strcpy@src+1)
  8551  0D12  00F7               	movf	(i1strcat@src),w
  8552  0D13  0820               	movwf	(i1strcpy@src)
  8553  0D14  00F6               	movf	(i1strcat@dest),w
  8554  0D15  0824               	movwf	(i1strlen@s)
  8555  0D16  00F0               	movlw	0x1
  8556  0D17  3001               
  8557                           	movwf	(i1strlen@s+1)
  8558  0D18  00F1               	fcall	i1_strlen
  8559  0D19  318D  2541  318D   	movf	(0+?i1_strlen),w
  8560  0D1C  0870               	movlb 0	; select bank0
  8561  0D1D  0020               	movwf	(??i1_strcat+0)+0
  8562  0D1E  00A2               	movf	(1+?i1_strlen),w
  8563  0D1F  0871               	movwf	((??i1_strcat+0)+0+1)
  8564  0D20  00A3               	movf	(i1strcat@dest),w
  8565  0D21  0824               	addwf	0+(??i1_strcat+0)+0,w
  8566  0D22  0722               	fcall	i1_strcpy
  8567  0D23  318D  2564  318D   	goto	i1l837
  8568  0D26  2D27               	line	6
  8569                           	
  8570                           i1l3243:	
  8571  0D27                     	line	7
  8572                           ;	Return value of i1_strcat is never used
  8573                           	
  8574                           i1l837:	
  8575  0D27                     	return
  8576  0D27  0008               	opt stack 0
  8577                           GLOBAL	__end_ofi1_strcat
  8578                           	__end_ofi1_strcat:
  8579  0D28                     	signat	i1_strcat,89
  8580                           	global	i1_strlen
  8581                           
  8582 ;; *************** function i1_strlen *****************
  8583 ;; Defined at:
  8584 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  8585 ;; Parameters:    Size  Location     Type
  8586 ;;  s               2    0[COMMON] PTR const unsigned char 
  8587 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  8588 ;;		 -> main@wReadout(20), wInterruptText(75), 
  8589 ;; Auto vars:     Size  Location     Type
  8590 ;;  strlen          2    4[COMMON] PTR const unsigned char 
  8591 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  8592 ;;		 -> main@wReadout(20), wInterruptText(75), 
  8593 ;; Return value:  Size  Location     Type
  8594 ;;                  2    0[COMMON] unsigned int 
  8595 ;; Registers used:
  8596 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8597 ;; Tracked objects:
  8598 ;;		On entry : 0/0
  8599 ;;		On exit  : 0/0
  8600 ;;		Unchanged: 0/0
  8601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8603 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8604 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8605 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8606 ;;Total ram usage:        6 bytes
  8607 ;; Hardware stack levels used:    1
  8608 ;; This function calls:
  8609 ;;		Nothing
  8610 ;; This function is called by:
  8611 ;;		i1_Add_Trace
  8612 ;;		i1_strcat
  8613 ;; This function uses a non-reentrant model
  8614 ;;
  8615                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
  8616                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  8617                           	line	12
  8618                           global __ptext32
  8619                           __ptext32:	;psect for function i1_strlen
  8620  0D41                     psect	text32
  8621                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  8622                           	line	12
  8623                           	global	__size_ofi1_strlen
  8624                           	__size_ofi1_strlen	equ	__end_ofi1_strlen-i1_strlen
  8625  0023                     	
  8626                           i1_strlen:	
  8627  0D41                     ;incstack = 0
  8628                           	opt	stack 7
  8629                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
  8630                           	line	14
  8631                           	
  8632                           i1l3093:	
  8633  0D41                     	movf	(i1strlen@s+1),w
  8634  0D41  0871               	movwf	(i1strlen@a+1)
  8635  0D42  00F5               	movf	(i1strlen@s),w
  8636  0D43  0870               	movwf	(i1strlen@a)
  8637  0D44  00F4               	line	16
  8638                           	goto	i1l3097
  8639  0D45  2D4B               	
  8640                           i1l847:	
  8641  0D46                     	line	17
  8642                           	
  8643                           i1l3095:	
  8644  0D46                     	movlw	01h
  8645  0D46  3001               	addwf	(i1strlen@s),f
  8646  0D47  07F0               	movlw	0
  8647  0D48  3000               	addwfc	(i1strlen@s+1),f
  8648  0D49  3DF1               	goto	i1l3097
  8649  0D4A  2D4B               	line	18
  8650                           	
  8651                           i1l846:	
  8652  0D4B                     	line	16
  8653                           	
  8654                           i1l3097:	
  8655  0D4B                     	movf	(i1strlen@s),w
  8656  0D4B  0870               	movwf	fsr0l
  8657  0D4C  0084               	movf	((i1strlen@s+1)),w
  8658  0D4D  0871               	movwf	fsr0h
  8659  0D4E  0085               	moviw	fsr0++
  8660  0D4F  0012               	btfss	status,2
  8661  0D50  1D03               	goto	u204_21
  8662  0D51  2D53               	goto	u204_20
  8663  0D52  2D54               u204_21:
  8664  0D53                     	goto	i1l3095
  8665  0D53  2D46               u204_20:
  8666  0D54                     	goto	i1l3099
  8667  0D54  2D55               	
  8668                           i1l848:	
  8669  0D55                     	line	25
  8670                           	
  8671                           i1l3099:	
  8672  0D55                     	comf	(i1strlen@a),w
  8673  0D55  0974               	movwf	(??i1_strlen+0)+0
  8674  0D56  00F2               	comf	(i1strlen@a+1),w
  8675  0D57  0975               	movwf	((??i1_strlen+0)+0+1)
  8676  0D58  00F3               	incf	(??i1_strlen+0)+0,f
  8677  0D59  0AF2               	skipnz
  8678  0D5A  1903               	incf	((??i1_strlen+0)+0+1),f
  8679  0D5B  0AF3               	movf	(i1strlen@s),w
  8680  0D5C  0870               	addwf	0+(??i1_strlen+0)+0,w
  8681  0D5D  0772               	movwf	(?i1_strlen)
  8682  0D5E  00F0               	movf	(i1strlen@s+1),w
  8683  0D5F  0871               	addwfc	1+(??i1_strlen+0)+0,w
  8684  0D60  3D73               	movwf	1+(?i1_strlen)
  8685  0D61  00F1               	goto	i1l849
  8686  0D62  2D63               	
  8687                           i1l3101:	
  8688  0D63                     	line	26
  8689                           	
  8690                           i1l849:	
  8691  0D63                     	return
  8692  0D63  0008               	opt stack 0
  8693                           GLOBAL	__end_ofi1_strlen
  8694                           	__end_ofi1_strlen:
  8695  0D64                     	signat	i1_strlen,90
  8696                           	global	i1_strcpy
  8697                           
  8698 ;; *************** function i1_strcpy *****************
  8699 ;; Defined at:
  8700 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  8701 ;; Parameters:    Size  Location     Type
  8702 ;;  dest            1    wreg     PTR unsigned char 
  8703 ;;		 -> wInterruptText(75), 
  8704 ;;  src             2    6[COMMON] PTR const unsigned char 
  8705 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  8706 ;;		 -> main@wReadout(20), 
  8707 ;; Auto vars:     Size  Location     Type
  8708 ;;  dest            1   12[COMMON] PTR unsigned char 
  8709 ;;		 -> wInterruptText(75), 
  8710 ;;  strcpy          2   10[COMMON] PTR const unsigned char 
  8711 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  8712 ;;		 -> main@wReadout(20), 
  8713 ;;  strcpy          1   13[COMMON] PTR unsigned char 
  8714 ;;		 -> wInterruptText(75), 
  8715 ;; Return value:  Size  Location     Type
  8716 ;;                  1    wreg      PTR unsigned char 
  8717 ;; Registers used:
  8718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8719 ;; Tracked objects:
  8720 ;;		On entry : 0/0
  8721 ;;		On exit  : 0/0
  8722 ;;		Unchanged: 0/0
  8723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8724 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8725 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8726 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8727 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8728 ;;Total ram usage:        8 bytes
  8729 ;; Hardware stack levels used:    1
  8730 ;; This function calls:
  8731 ;;		Nothing
  8732 ;; This function is called by:
  8733 ;;		i1_strcat
  8734 ;; This function uses a non-reentrant model
  8735 ;;
  8736                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
  8737                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  8738                           	line	7
  8739                           global __ptext33
  8740                           __ptext33:	;psect for function i1_strcpy
  8741  0D64                     psect	text33
  8742                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  8743                           	line	7
  8744                           	global	__size_ofi1_strcpy
  8745                           	__size_ofi1_strcpy	equ	__end_ofi1_strcpy-i1_strcpy
  8746  0024                     	
  8747                           i1_strcpy:	
  8748  0D64                     ;incstack = 0
  8749                           	opt	stack 6
  8750                           ; Regs used in i1_strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  8751                           ;i1strcpy@dest stored from wreg
  8752                           	movwf	(i1strcpy@dest)
  8753  0D64  00FC               	line	13
  8754                           	
  8755                           i1l3089:	
  8756  0D65                     	movf	(i1strcpy@src+1),w
  8757  0D65  0877               	movwf	(i1strcpy@s+1)
  8758  0D66  00FB               	movf	(i1strcpy@src),w
  8759  0D67  0876               	movwf	(i1strcpy@s)
  8760  0D68  00FA               	line	14
  8761                           	movf	(i1strcpy@dest),w
  8762  0D69  087C               	movwf	(??i1_strcpy+0)+0
  8763  0D6A  00F8               	movf	(??i1_strcpy+0)+0,w
  8764  0D6B  0878               	movwf	(i1strcpy@d)
  8765  0D6C  00FD               	line	15
  8766                           	goto	i1l3091
  8767  0D6D  2D6F               	
  8768                           i1l841:	
  8769  0D6E                     	goto	i1l3091
  8770  0D6E  2D6F               	
  8771                           i1l840:	
  8772  0D6F                     	
  8773                           i1l3091:	
  8774  0D6F                     	movf	(i1strcpy@d),w
  8775  0D6F  087D               	movwf	fsr1l
  8776  0D70  0086               	movlw 1	; select bank2/3
  8777  0D71  3001               	movwf fsr1h	
  8778  0D72  0087               	
  8779                           	incf	(i1strcpy@d),f
  8780  0D73  0AFD               	movf	(i1strcpy@s+1),w
  8781  0D74  087B               	movwf	(??i1_strcpy+0)+0+1
  8782  0D75  00F9               	movf	(i1strcpy@s),w
  8783  0D76  087A               	movwf	(??i1_strcpy+0)+0
  8784  0D77  00F8               	incf	(i1strcpy@s),f
  8785  0D78  0AFA               	skipnz
  8786  0D79  1903               	incf	(i1strcpy@s+1),f
  8787  0D7A  0AFB               	movf	0+(??i1_strcpy+0)+0,w
  8788  0D7B  0878               	movwf	fsr0l
  8789  0D7C  0084               	movf	(1+(??i1_strcpy+0)+0),w
  8790  0D7D  0879               	movwf	fsr0h
  8791  0D7E  0085               	movf	indf0,w ;code access
  8792  0D7F  0800               	movwi	[0]fsr1
  8793  0D80  3FC0               	movf	wreg
  8794  0D81  0889               	btfss	status,2
  8795  0D82  1D03               	goto	u203_21
  8796  0D83  2D85               	goto	u203_20
  8797  0D84  2D86               u203_21:
  8798  0D85                     	goto	i1l3091
  8799  0D85  2D6F               u203_20:
  8800  0D86                     	goto	i1l843
  8801  0D86  2D87               	
  8802                           i1l842:	
  8803  0D87                     	line	18
  8804                           ;	Return value of i1_strcpy is never used
  8805                           	
  8806                           i1l843:	
  8807  0D87                     	return
  8808  0D87  0008               	opt stack 0
  8809                           GLOBAL	__end_ofi1_strcpy
  8810                           	__end_ofi1_strcpy:
  8811  0D88                     	signat	i1_strcpy,89
  8812                           global	___latbits
  8813                           ___latbits	equ	3
  8814  0003                     	global	btemp
  8815                           	btemp set 07Eh
  8816  007E                     
  8817                           	DABS	1,126,2	;btemp
  8818                           	global	int$flags
  8819                           	int$flags	set btemp
  8820  007E                     	global	wtemp0
  8821                           	wtemp0 set btemp+0
  8822  007E                     	end


Data Sizes:
    Strings     96
    Constant    0
    Data        4
    BSS         167
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      60
    BANK1            80      6      37
    BANK2            80      0      50
    BANK3            80      0      75
    BANK4            80     45      45
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK4[20]), wInterruptText(BANK3[75]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK4[20]), wInterruptText(BANK3[75]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK4[20]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK4[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK4[20]), 

    strcat@dest	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    memset@dest	PTR void  size(2) Largest target is 75
		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]), 

    memset@s	PTR unsigned char  size(2) Largest target is 75
		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]), 

    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
		 -> STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[16]), STR_3(CODE[16]), 
		 -> main@wConv(BANK4[4]), wInterruptText(BANK3[75]), 

    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
		 -> main@wEnterBottonPressed(BANK4[1]), main@wDownBottonPressed(BANK4[1]), main@wUpBottonPressed(BANK4[1]), 

    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
		 -> main@wDebounceDown(BANK4[2]), main@wDebounceUp(BANK4[2]), main@wDebounceEnter(BANK4[2]), 

    printEM1812@oTextOut	PTR unsigned char  size(1) Largest target is 20
		 -> main@wReadout(BANK4[20]), 

    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    sp__memset	PTR void  size(2) Largest target is 75
		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    Add_Trace@iText	PTR unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK4[20]), 

    Add_Trace@oText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myint in COMMON

    i1_strcat->i1_strcpy
    i1_strcpy->i1_strlen

Critical Paths under _main in BANK0

    _main->_Add_Trace
    _main->_PrintLog
    _setNotBlinkingCursor->_writeInsChk
    _setCursorOff->_writeInsChk
    _printEM1812->___awdiv
    _powerOnLcd->_writeInsChk
    _moveCursorToHome->_writeInsChk
    _initLCD->_writeInsChk
    _clearDisplay->_writeInsChk
    _writeInsChk->_waitLCDBusy
    _writeInsChk->_writeInsNoChk
    _writeInsNoChk->_setData
    _PrintLog->_lcdWriteText
    _lcdWriteText->_writeTxtChk
    _writeTxtChk->_setCursorPosition
    _setCursorPosition->_waitLCDBusy
    _GetTemp->_memset
    _Add_Trace->_strcat
    _strcat->_strcpy
    _strcpy->_strlen

Critical Paths under _myint in BANK0

    _myint->i1_Add_Trace
    i1_Add_Trace->i1_strcat

Critical Paths under _main in BANK1

    _main->_Add_Trace

Critical Paths under _myint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myint in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myint in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myint in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myint in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myint in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myint in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                47    47      0   22857
                                             43 BANK0      2     2      0
                                              0 BANK4     45    45      0
                          _Add_Trace
                           _Debounce
                            _GetTemp
                           _PrintLog
                       _SetToGetTemp
                       _ToggleBitRB5
                       _clearDisplay
                            _initLCD
                       _lcdWriteText
                             _memset
                   _moveCursorToHome
                         _powerOnLcd
                        _printEM1812
                       _setCursorOff
                  _setCursorPosition
               _setNotBlinkingCursor
 ---------------------------------------------------------------------------------
 (1) _setNotBlinkingCursor                                 1     1      0     254
                                             26 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _setCursorOff                                         1     1      0     254
                                             26 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _printEM1812                                          8     5      3    2757
                                             29 BANK0      8     5      3
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                             20 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                             20 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _powerOnLcd                                           1     1      0     254
                                             26 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _moveCursorToHome                                     0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     632
                                             26 BANK0      1     1      0
                       _clearDisplay
                            _setData
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _clearDisplay                                         0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _writeInsChk                                          1     1      0     254
                                             25 BANK0      1     1      0
                        _waitLCDBusy
                      _writeInsNoChk
 ---------------------------------------------------------------------------------
 (3) _writeInsNoChk                                        2     2      0     186
                                             23 BANK0      2     2      0
                 _SetToSendDataToLCD
                            _setData
 ---------------------------------------------------------------------------------
 (1) _ToggleBitRB5                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetToGetTemp                                         1     1      0       0
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PrintLog                                             4     4      0    5282
                                             39 BANK0      4     4      0
                       _lcdWriteText
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _lcdWriteText                                         6     4      2    2701
                                             33 BANK0      6     4      2
                        _writeTxtChk
 ---------------------------------------------------------------------------------
 (2) _writeTxtChk                                          3     3      0    2031
                                             30 BANK0      3     3      0
                 _SetToSendDataToLCD
                  _setCursorPosition
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (1) _setCursorPosition                                    5     4      1    1777
                                             25 BANK0      5     4      1
                 _SetToSendDataToLCD
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (3) _waitLCDBusy                                          5     5      0      37
                                             20 BANK0      5     5      0
               _SetToReadDataFromLCD
 ---------------------------------------------------------------------------------
 (4) _SetToReadDataFromLCD                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setData                                              3     3      0     124
                                             20 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _SetToSendDataToLCD                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetTemp                                              1     1      0    1897
                                             34 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                              14     8      6    1897
                                             20 BANK0     14     8      6
 ---------------------------------------------------------------------------------
 (1) _Debounce                                             5     3      2     788
                                             20 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _Add_Trace                                           10     7      3    2780
                                             39 BANK0      4     1      3
                                              0 BANK1      6     6      0
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcat                                               5     3      2     979
                                             34 BANK0      5     3      2
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             20 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     6      2     263
                                             26 BANK0      8     6      2
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _myint                                                5     5      0    1072
                                             15 BANK0      5     5      0
                        i1_Add_Trace
 ---------------------------------------------------------------------------------
 (8) i1_Add_Trace                                         10     7      3    1072
                                              5 BANK0     10     7      3
                           i1_strcat
                           i1_strlen
 ---------------------------------------------------------------------------------
 (9) i1_strcat                                             5     3      2     542
                                              0 BANK0      5     3      2
                           i1_strcpy
                           i1_strlen
 ---------------------------------------------------------------------------------
 (9) i1_strlen                                             6     4      2     235
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (10) i1_strcpy                                            8     6      2     172
                                              6 COMMON     8     6      2
                           i1_strlen (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Add_Trace
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _Debounce
   _GetTemp
     _memset
   _PrintLog
     _lcdWriteText
       _writeTxtChk
         _SetToSendDataToLCD
         _setCursorPosition
           _SetToSendDataToLCD
           _setData
           _waitLCDBusy
             _SetToReadDataFromLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
     _memset
     _strlen
   _SetToGetTemp
   _ToggleBitRB5
   _clearDisplay
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _initLCD
     _clearDisplay
       _writeInsChk
         _waitLCDBusy
           _SetToReadDataFromLCD
         _writeInsNoChk
           _SetToSendDataToLCD
           _setData
     _setData
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _lcdWriteText
     _writeTxtChk
       _SetToSendDataToLCD
       _setCursorPosition
         _SetToSendDataToLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
       _setData
       _waitLCDBusy
         _SetToReadDataFromLCD
   _memset
   _moveCursorToHome
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _powerOnLcd
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _printEM1812
     ___awdiv
     ___awmod
   _setCursorOff
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _setCursorPosition
     _SetToSendDataToLCD
     _setData
     _waitLCDBusy
       _SetToReadDataFromLCD
   _setNotBlinkingCursor
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData

 _myint (ROOT)
   i1_Add_Trace
     i1_strcat
       i1_strcpy
         i1_strlen (ARG)
       i1_strlen
     i1_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      3C       5       75.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      6      25       7       46.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      32       9       62.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4B      11       93.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50     2D      2D      13       56.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     119      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     119      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jan 23 00:16:54 2019

                            pc 0002                    __CFG_CP$OFF 0000                    _SSPSTATbits 0214  
                 ___awdiv@sign 003A             _SetToSendDataToLCD 0CA7                            l111 0CC8  
                          l112 0CCA                            l200 04A2                            l113 0CCA  
                          l201 04A3                            l122 0F63                            l202 04A4  
                          l123 0F63                            l203 04A4                            l140 062F  
                          l301 066F                            l141 062F                            l126 0E4F  
                          l310 0670                            l302 064A                            l134 0EAA  
                          l118 0DF9                            l127 0E4F                            l311 06A7  
                          l303 066D                            l135 0EAA                            l119 0DF9  
                          l144 0F75                            l312 0677                            l304 0657  
                          l145 0F7D                            l313 067E                            l305 066C  
                          l321 0D0E                            l146 0F92                            l330 0E74  
                          l314 0685                            l306 0664                            l138 0585  
                          l170 02C4                            l147 0FAF                            l331 0E5C  
                          l315 068E                            l307 066B                            l139 0603  
                          l171 0392                            l148 0FAF                            l324 0CB2  
                          l332 0E7C                            l308 06C6                            l180 0447  
                          l172 037C                            l333 0E7C                            l309 0690  
                          l181 03A6                            l173 033F                            l318 0CD5  
                          l190 03F6                            l182 03B5                            l174 0391  
                          l327 0CAC                            l191 0404                            l183 03B6  
                          l175 034E                            l167 02A7                            l280 0FFF  
                          l192 0403                            l184 03BF                            l176 035D  
                          l168 0331                            l345 0CF6                            l193 0405  
                          l185 03DC                            l177 036C                            l178 0433  
                          l194 0416                            l186 03DB                            l283 0E12  
                          l339 0CE0                            l195 0430                            l187 03DD  
                          l179 0393                            l380 0777                            l284 0DFD  
                          l372 0CA6                            l540 071F                            l532 06D5  
                          l348 0CEB                            l196 0431                            l188 03EC  
                          l381 073E                            l285 0E23                            l541 072B  
                          l533 06E3                            l197 0485                            l189 03ED  
                          l382 0749                            l286 0E23                            l542 0730  
                          l534 0720                            l550 07C1                            l198 048E  
                          l383 0754                            l375 0CC0                            l535 06F8  
                          l551 07C2                            l199 049A                            l384 075F  
                          l536 06EE                            l552 07D1                            l385 0790  
                          l537 06FD                            l553 07DD                            l545 079F  
                          l298 0F20                            l378 0761                            l538 06FE  
                          l554 07E9                            l546 07A9                            l379 0735  
                          l539 0713                            l555 07EE                            l547 07DE  
                          l548 07BC                            l549 07B2                            l830 0576  
                          l823 04B3                            l840 0DB8                            l824 0576  
                          l841 0DB7                            l825 04D6                            l842 0DD0  
                          l826 051D                            l843 0DD0                            l827 0546  
                          l828 056F                            l837 0D40                            l829 0560  
                          l846 0D93                            l847 0D8E                            l848 0D9D  
                          l849 0DAB          _wReceptionCounterPrev 0056                   ___awmod@sign 003A  
                 __CFG_BORV$LO 0000                            wreg 0009            ?_SetToSendDataToLCD 0070  
                         S3979 07EF                   __CFG_LVP$OFF 0000                 ??_lcdWriteText 0043  
                         l3011 0CFF                           l3021 0D9D                           l3013 0D09  
                         l3005 0CF9                           l3023 0DAB                           l3015 0D88  
                         l3103 0D2A                           l3111 04B2                           l3031 0637  
                         l3007 0CFC                           l3017 0D8E                           l3105 0D40  
                         l3121 04D6                           l3113 04B3                           l3041 0651  
                         l3033 0638                           l3009 0CFE                           l3025 0CCD  
                         l3201 0730                           l3019 0D93                           l3131 0545  
                         l3123 0512                           l3115 04B9                           l3107 04A6  
                         l3051 0670                           l3043 0657                           l3035 063E  
                         l3027 0632                           l3211 079F                           l3203 0791  
                         l3141 0560                           l3133 0546                           l3125 051C  
                         l3117 04CB                           l3109 04AB                           l3061 068F  
                         l3053 0677                           l3045 065E                           l3037 0644  
                         l3029 0635                           l3221 07B7                           l3213 07A3  
                         l3205 0793                           l3301 0579                           l3143 0566  
                         l3135 0553                           l3127 051D                           l3119 04D5  
                         l3071 06AF                           l3055 067E                           l3047 0664  
                         l3039 064A                           l3063 0690                           l3151 0DFD  
                         l3231 07D6                           l3223 07BC                           l3215 07A9  
                         l3207 0797                           l3311 05A5                           l3303 057D  
                         l3145 056A                           l3137 0557                           l3129 053B  
                         l3073 06B0                           l3057 0685                           l3065 06A7  
                         l3049 066E                           l3153 0E0C                           l3161 06C9  
                         l3225 07C2                           l3217 07AF                           l3233 07DE  
                         l3209 079C                           l3321 05DF                           l3313 05B5  
                         l3305 057F                           l3401 01D9                           l3331 0F66  
                         l3147 056F                           l3139 055B                           l3075 06BA  
                         l3067 06AA                           l3059 068B                           l3155 0E12  
                         l3251 0DD3                           l3171 06DE                           l3163 06CD  
                         l3235 07E3                           l3227 07CC                           l3219 07B2  
                         l3323 05E9                           l3315 05C5                           l3307 0585  
                         l3411 01E0                           l3403 01DA                           l3085 0DAE  
                         l3341 0F92                           l3333 0F6B                           l3077 06BF  
                         l3069 06AD                           l3149 0DFA                           l3261 0DEF  
                         l3253 0DD8                           l3245 0CC1                           l3157 0CA2  
                         l3181 06F3                           l3173 06E3                           l3165 06D2  
                         l3237 07E9                           l3229 07D1                           l3325 05F2  
                         l3317 05CE                           l3309 0595                           l3501 023B  
                         l3421 01EA                           l3413 01E2                           l3405 01DB  
                         l3087 0DB8                           l3343 0FA0                           l3335 0F75  
                         l3271 0E24                           l3079 06C1                           l3263 0DF4  
                         l3255 0DDC                           l3247 0CC6                           l3351 0FC0  
                         l3191 0713                           l3183 06F8                           l3175 06E5  
                         l3167 06D5                           l3159 06C7                           l3239 07EE  
                         l3327 05FC                           l3319 05D6                           l3511 0265  
                         l3503 0247                           l3431 01F1                           l3423 01EB  
                         l3415 01E4                           l3407 01DC                           l3345 0FA8  
                         l3337 0F7D                           l3281 0E3E                           l3273 0E26  
                         l3265 0DF6                           l3257 0DE8                           l3249 0DD1  
                         l3361 0FE0                           l3353 0FC4                           l3193 0718  
                         l3185 06FE                           l3177 06EB                           l3169 06D9  
                         l3329 0603                           l3601 03D4                           l3521 0296  
                         l3513 0268                           l3505 024A                           l3441 01FA  
                         l3433 01F5                           l3425 01ED                           l3417 01E6  
                         l3409 01DE                           l3267 0F23                           l3339 0F8B  
                         l3283 0E43                           l3275 0E2B                           l3291 0E7F  
                         l3259 0DE9                           l3363 0FE8                           l3355 0FD1  
                         l3347 0FB0                           l3371 0CDC                           l3187 070D  
                         l3179 06EE                           l3195 0720                           l3611 03E4  
                         l3603 03D5                           l3531 02B5                           l3523 0298  
                         l3515 0274                           l3507 0256                           l3451 0213  
                         l3443 01FC                           l3435 01F6                           l3427 01EE  
                         l3419 01E8                           l3269 0F5A                           l3285 0E48  
                         l3277 0E2D                           l3293 0E8B                           l3365 0FED  
                         l3357 0FD4                           l3349 0FB8                           l3197 0725  
                         l3189 0711                           l3373 0CE1                           l3381 0CEC  
                         l3621 03FC                           l3613 03EA                           l3605 03D7  
                         l3541 02F6                           l3533 02C4                           l3525 029B  
                         l3517 0277                           l3509 0259                           l3461 021B  
                         l3453 0215                           l3445 01FF                           l3437 01F7  
                         l3429 01EF                           l3287 0E4A                           l3279 0E3C  
                         l3295 0E90                           l3367 0FFC                           l3359 0FDC  
                         l3199 072B                           l3375 0CE7                           l3383 0CF2  
                         l3631 0429                           l3623 0405                           l3615 03ED  
                         l3607 03D9                           l3543 0303                           l3535 02D4  
                         l3551 0331                           l3527 029E                           l3519 0283  
                         l3471 0227                           l3463 021D                           l3455 0216  
                         l3447 0202                           l3439 01F8                           l3391 01C2  
                         l3289 0E4C                           l3297 0E97                           l3377 0CB9  
                         l3369 0CD6                           l3641 045A                           l3633 0432  
                         l3625 0413                           l3617 03F4                           l3609 03DD  
                         l3561 036C                           l3553 0338                           l3545 0312  
                         l3537 02DA                           l3529 02A7                           l3481 022C  
                         l3473 0228                           l3465 021F                           l3457 0218  
                         l3449 0204                           l3393 01D1                           l3379 0CBD  
                         l3299 0577                           l3651 0485                           l3643 0468  
                         l3627 0416                           l3619 03F6                           l3571 0399  
                         l3563 037B                           l3555 033F                           l3635 0433  
                         l3547 031F                           l3539 02E9                           l3491 0231  
                         l3483 022D                           l3475 0229                           l3467 0220  
                         l3459 021A                           l3395 01D4                           l3661 049A  
                         l3653 048A                           l3645 0477                           l3629 041F  
                         l3581 03A6                           l3637 0447                           l3573 039F  
                         l3557 034E                           l3565 037C                           l3549 032C  
                         l3493 0233                           l3485 022E                           l3477 022A  
                         l3469 0225                           l3397 01D6                           l3389 01BD  
                         l2951 0F1A                           l3663 04A0                           l3655 048B  
                         l3647 047D                           l3639 044C                           l3591 03BF  
                         l3583 03AD                           l3575 03A0                           l3567 0393  
                         l3559 035D                           l3495 0234                           l3487 022F  
                         l3479 022B                           l3399 01D7                           l2953 0F1C  
                         l2945 0CAD                           l2961 0E53                           l3657 048E  
                         l3649 047E                           l3593 03C5                           l3585 03B3  
                         l3577 03A2                           l3569 0396                           l3497 0235  
                         l3489 0230                           l2955 0F1E                           l2947 0EE7  
                         l2971 0E70                           l2963 0E56                           l3659 0493  
                         l3595 03C8                           l3587 03B6                           l3579 03A4  
                         l3499 0238                           l2957 0CA7                           l2949 0EE8  
                         l2973 0E72                           l2965 0E5F                           l2981 0749  
                         l3597 03CB                           l3589 03BD                           l2967 0E6B  
                         l2959 0E50                           l2991 077A                           l2983 0754  
                         l2975 0733                           l3599 03CE                           l2969 0E6C  
                         l2993 077D                           l2985 0760                           l2977 0735  
                         l2995 077F                           l2979 073E                           l2987 0761  
                         l2997 0780                           l2989 0777                           l3981 0699  
                         l2999 078B                           l3983 0769                           l3975 0386  
                         l3977 043D                           STR_1 1040                           STR_2 104C  
                         STR_3 1010                           STR_4 1030                           STR_5 1020  
                         STR_6 1000                           STR_7 105C                           STR_8 1055  
                         u2000 065E                           u2001 065D                           u2020 0DCF  
                         u2100 0E22                           u2021 0DCE                           u2101 0E21  
                         u2110 06CD                           u2015 06B3                           u2111 06CC  
                         u2200 0725                           u2120 06D9                           u2201 0724  
                         u2121 06D8                           u2050 04B1                           u2130 06EB  
                         u2210 0797                           u2051 04B0                           u2131 06EA  
                         u2211 0796                           u2060 04D4                           u2300 0CC6  
                         u2220 07A3                           u2061 04D3                           u2301 0CC5  
                         u2221 07A2                           u2070 051B                           u2310 0DD8  
                         u2150 06FC                           u2230 07AF                           u2071 051A  
                         u2311 0DD7                           u2151 06FB                           u2231 07AE  
                         u2320 0F5A                           u2080 0544                           u2321 0F59  
                         u2081 0543                           u2145 06EF                           u2090 0575  
                         u2330 0E2B                           u2170 070D                           u2250 07C0  
                         u2410 02B5                           u2091 0574                           u2331 0E2A  
                         u2171 070C                           u2251 07BF                           u2411 02B4  
                         u2340 0E90                           u2260 07CC                           u2500 0413  
                         u2420 02C3                           u2325 0F56                           u2341 0E8F  
                         u2165 06FF                           u2261 07CB                           u2245 07B3  
                         u2501 0412                           u2421 02C2                           u2190 071E  
                         u2350 057D                           u2510 047D                           u2430 0338  
                         u2191 071D                           u2175 0709                           u2351 057C  
                         u2511 047C                           u2431 0337                           u2415 02B1  
                         u2280 07DC                           u2360 05CE                           u2520 048A  
                         u2440 03AD                           u2185 0714                           u2281 07DB  
                         u2265 07C8                           u2361 05CD                           u2521 0489  
                         u2441 03AC                           u2425 02BF                           u2370 0F6B  
                         u2290 07E3                           u2530 0493                           u2450 03BD  
                         u2371 0F6A                           u2291 07E2                           u2275 07D2  
                         u2531 0492                           u2451 03BC                           u2380 0F8B  
                         u2540 04A0                           u2460 03C5                           u2381 0F8A  
                         u2541 049F                           u2461 03C4                           u2390 0FA0  
                         u2470 03E4                           u2391 0F9F                           u2471 03E3  
                         u2480 03F4                           u2481 03F3                           u1930 0E7B  
                         u2490 03FC                           u1915 0EEB                           u1931 0E7A  
                         u2491 03FB                           u1925 0EFC                           u1960 0D9C  
                         u1961 0D9B                           u1945 0783                           u1970 063E  
                         u1971 063D                           u1955 0D02                           u2907 02A2  
                         u1980 0644                           u1981 0643                           u2917 0FBC  
                         u1990 0651                           u1991 0650                           u2927 0FC8  
                         u2937 0FD2                           u2857 0241                           u2947 0FD9  
                         u2867 0250                           u2957 0FE1                           u2877 025F  
                         u2887 026E                           u2897 027D                           _TMR0 0015  
                         _WPUB 020D                   __CFG_WRT$OFF 0000           printEM1812@wVariable 003D  
                         _main 01BD                           _test 004D                           fsr0h 0005  
                         fsr1h 0007                           indf0 0000                           fsr0l 0004  
                         indf1 0001                           fsr1l 0006                           btemp 007E  
                __CFG_BOREN$ON 0000                           start 0186                  __CFG_IESO$OFF 0000  
         ??_SetToSendDataToLCD 0034                __end_of_GetTemp 0E50           __end_of_clearDisplay 0CA7  
                 main@wCounter 0248                          ?_main 0070                    _writeInsChk 0CCB  
              __end_of___awdiv 0731                  __CFG_WDTE$OFF 0000                __end_of___awmod 07EF  
              ___awdiv@divisor 0034                   main@wReadout 0226                          i1l122 0EE4  
                        i1l210 013C                          i1l123 0EE4                          i1l211 013C  
                        i1l220 00D7                          i1l212 00DA                          i1l221 00AE  
                        i1l213 0021                          i1l230 00E5                          i1l214 00D9  
                        i1l222 00AA                          i1l231 013A                          i1l223 00AD  
                        i1l215 003B                          i1l240 014F                          i1l232 0100  
                        i1l216 00D8                          i1l224 00D6                          i1l241 0178  
                        i1l233 0139                          i1l225 00C7                          i1l217 0097  
                        i1l242 0164                          i1l234 0128                          i1l226 00C3  
                        i1l218 005A                          i1l243 0178                          i1l235 011E  
                        i1l227 00C6                          i1l219 0094                          i1l244 0176  
                        i1l236 0127                          i1l228 00D5                          i1l245 0177  
                        i1l229 013B                          i1l237 0138                          i1l246 0184  
                        i1l238 0136                          i1l247 0184                          i1l239 0137  
                        i1l840 0D6F                          i1l841 0D6E                          i1l842 0D87  
                        i1l843 0D87                          i1l837 0D27                          i1l846 0D4B  
                        i1l847 0D46                          i1l848 0D55                          i1l849 0D63  
              ___awdiv@counter 0039                          _TMR1H 0017                          _TMR1L 0016  
                        _PORTA 000C                          _PORTB 000D         printEM1812@wIsNegative 0041  
                        _TRISA 008C                          _TRISB 008D                          _TRISC 008E  
                  _writeTxtChk 0630                  __CFG_PWRTE$ON 0000                 __CFG_FCMEN$OFF 0000  
              __end_of_initLCD 1000         ??_SetToReadDataFromLCD 0034                          _myint 0004  
              __end_of_setData 0F21             __size_of_Add_Trace 0043                          status 0003  
                        wtemp0 007E               __end_of_Debounce 0FB0         ??_setNotBlinkingCursor 003A  
             __end_ofi1_strcat 0D28               __end_ofi1_strcpy 0D88               __end_ofi1_strlen 0D64  
               __CFG_MCLRE$OFF 0000                __initialization 0188                   __end_of_main 04A6  
               __CFG_LPBOR$OFF 0000                   ?i1_Add_Trace 0025                         ??_main 004B  
             _wReceptionBuffer 0134               __end_of_PrintLog 0EAB                   ?_waitLCDBusy 0070  
                main@wMenuPrev 023C               ___awdiv@dividend 0036                         ?_myint 0070  
                       _ANSELA 018C                         _ANSELB 018D                         i1l3101 0D63  
                       i1l3241 0D11                         i1l3091 0D6F                         i1l3243 0D27  
                       i1l3093 0D41                         i1l3095 0D46                         i1l3089 0D65  
                       i1l3097 0D4B                         i1l3099 0D55                         i1l3701 0032  
                       i1l3711 0050                         i1l3703 0035                         u203_20 0D86  
                       u203_21 0D85                         i1l3385 0EAD                         i1l3721 008E  
                       i1l3713 0057                         i1l3705 0040                         i1l3387 0EDB  
                       i1l3731 00B3                         i1l3715 005C                         i1l3723 0094  
                       i1l3707 004A                         i1l3741 00DF                         i1l3733 00B4  
                       i1l3725 009B                         i1l3717 0062                         i1l3709 004E  
                       i1l3751 00FA                         i1l3743 00E1                         i1l3735 00BA  
                       i1l3727 00A1                         i1l3719 0078                         u204_20 0D54  
                       u204_21 0D53                         i1l3761 0120                         i1l3753 0105  
                       i1l3745 00E9                         i1l3737 00C0                         i1l3729 00A7  
                       i1l3771 014F                         i1l3763 012D                         i1l3755 010B  
                       i1l3747 00EF                         i1l3739 00C7                         i1l3691 0016  
                       i1l3683 0006                         i1l3781 016A                         i1l3773 0154  
                       i1l3765 012F                         i1l3757 0111                         i1l3749 00F2  
                       i1l3693 001B                         i1l3685 000B                         i1l3791 017D  
                       i1l3783 016B                         i1l3775 0158                         i1l3767 0141  
                       i1l3759 0118                         i1l3695 001D                         i1l3687 000C  
                       i1l3785 016D                         i1l3777 015F                         i1l3769 0142  
                       i1l3697 0025                         i1l3689 0011                         i1l3787 0174  
                       i1l3779 0164                         i1l3699 002B                         i1l3789 017C  
                setData@iValue 0036                         u240_20 0EDB                         u240_21 0EDA  
                       u240_25 0ED7                         u260_20 002B                         u260_21 002A  
                       u261_20 0040                         u261_21 003F                         u270_20 00EF  
                       u262_20 0057                         u270_21 00EE                         u262_21 0056  
                       u271_20 0105                         u263_20 009B                         u255_20 000B  
                       u271_21 0104                         u263_21 009A                         u255_21 000A  
                       u280_20 017C                         u272_20 010B                         u264_20 00A1  
                       u256_20 0011                         u280_21 017B                         u272_21 010A  
                       u264_21 00A0                         u256_21 0010                         u273_20 0111  
                       u265_20 00A7                         u257_20 0016                         u273_21 0110  
                       u265_21 00A6                         u257_21 0015              _setCursorPosition 0731  
                       u274_20 012D                         u266_20 00B3                         u258_20 001B  
                       u274_21 012C                         u266_21 00B2                         u258_21 001A  
                       u275_20 0141                         u267_20 00C0                         u259_20 0025  
                       u275_21 0140                         u267_21 00BF                         u259_21 0024  
                       u276_20 0154                         u268_20 00DF                         u276_21 0153  
                       u268_21 00DE                         u277_20 015F                         u269_20 00E9  
                       u277_21 015E                         u269_21 00E8                         u278_20 016A  
                       u278_21 0169                         u279_20 0174                         u279_21 0173  
                    ??_GetTemp 0042                         _SSPADD 0212                         _SSPBUF 0211  
           ?_setCursorPosition 0039            ??_setCursorPosition 003A                      ??___awdiv 0038  
                    ??___awmod 0038           __end_of_lcdWriteText 0E24        main@wEnterBottonPressed 0241  
                 ?_printEM1812 003D                         _memset 04A6                         _wTrial 0052  
             ___awdiv@quotient 003B                ___awmod@divisor 0034              __end_of_Add_Trace 0F64  
              ___awmod@counter 0039                         _strcat 0D28                         _strcpy 0DAC  
                       _strlen 0D88                      ??_initLCD 003A                      ??_setData 0034  
     __end_of_moveCursorToHome 0CC1                  ?_SetToGetTemp 0070      __end_of_setCursorPosition 0791  
       __size_of_writeInsNoChk 0018        __end_of__initialization 01B9          __size_of_clearDisplay 0005  
   setCursorPosition@wLCDIndex 003D                 __pcstackCOMMON 0070                   __pidataBANK1 0C9E  
                __end_of_myint 0186           writeInsNoChk@iOpCode 0038     setCursorPosition@iPosition 0039  
               _wInterruptText 01A0                 _OPTION_REGbits 0095                      ?_Debounce 0034  
                  i1strcat@src 0020                      ?i1_strcat 0020                      ?i1_strcpy 0076  
                    ?i1_strlen 0070                 ??_SetToGetTemp 0034                   _clearDisplay 0CA2  
                  i1strcpy@src 0076                        ??_myint 002F                     __pbssBANK0 004D  
                   __pbssBANK1 00A0                     __pbssBANK2 0120                     __pbssBANK3 01A0  
            _wReceptionCounter 0057                  ?_setCursorOff 0070                __CFG_VCAPEN$OFF 0000  
                   __pmaintext 01BD                 Add_Trace@iText 0048                 Add_Trace@oText 004A  
                    ?_PrintLog 0070                     __pintentry 0004                  _writeInsNoChk 0CF7  
                      ?_memset 0034                   ?_writeInsChk 0070                        ?_strcat 0042  
                      ?_strcpy 003A                        ?_strlen 0034           __size_ofi1_Add_Trace 003A  
                 ?_writeTxtChk 0070                     ??_Debounce 0036                     ??i1_strcat 0022  
                   ??i1_strcpy 0078                     ??i1_strlen 0072     __size_of_setCursorPosition 0060  
         __size_of_waitLCDBusy 002D                 ??_setCursorOff 003A                        _GetTemp 0E24  
        __size_of_lcdWriteText 002A           main@wTemperaturePrev 023F    __size_of_SetToSendDataToLCD 0006  
                   ??_PrintLog 0047                        ___awdiv 06C7                        ___awmod 0791  
              printEM1812@wTen 0042                 ?_writeInsNoChk 0070                     _wTempState 00A4  
              __CFG_STVREN$OFF 0000                Debounce@iSwitch 0038               _wI2CCommandState 00A6  
              __size_of_memset 00D1                  ?_ToggleBitRB5 0070                        __ptext1 0CEC  
                      __ptext2 0CE1                        __ptext3 0577                        __ptext4 0791  
                      __ptext5 06C7                        __ptext6 0CD6                        __ptext7 0CB9  
                      __ptext8 0FB0                        __ptext9 0CA2                Debounce@ioTimer 0034  
              __size_of_strcat 0019           __size_of_printEM1812 00B9                __size_of_strcpy 0025  
              __size_of_strlen 0024                        _initLCD 0FB0                      _T1CONbits 0018  
             ___awmod@dividend 0036                        _setData 0EE5              main@wDebounceDown 0246  
                      clrloop0 0CB4           end_of_initialization 01B9                   _lcdWriteText 0DFA  
__size_of_SetToReadDataFromLCD 0006                        memset@c 0036                        memset@k 003E  
                      memset@n 0038                        memset@s 0040               __CFG_CLKOUTEN$ON 0000  
__size_of_setNotBlinkingCursor 000B           __end_of_SetToGetTemp 0DFA                        strcpy@d 0040  
                      strlen@a 0038                 ??_ToggleBitRB5 0034                        strcpy@s 003E  
                      strlen@s 0034                      _PORTAbits 000C                      _PORTBbits 000D  
                   _powerOnLcd 0CD6           main@wUpBottonPressed 024A               __CFG_FOSC$INTOSC 0000  
                    _Add_Trace 0F21                      _TRISAbits 008C              ?_moveCursorToHome 0070  
          printEM1812@wDecimal 0044              _wTimer1IntCounter 0050             ??_moveCursorToHome 003A  
          printEM1812@oTextOut 003F            waitLCDBusy@busyFlag 0037                ??_writeInsNoChk 0037  
             _mWritingPosition 0059           __end_of_setCursorOff 0CEC                 __end_of_memset 0577  
               __end_of_strcat 0D41                 _wTimer0Counter 00A5                 __end_of_strcpy 0DD1  
               __end_of_strlen 0DAC           __size_of_writeInsChk 000B            start_initialization 0188  
                   ?_Add_Trace 0047           __size_of_writeTxtChk 0097              __size_of_Debounce 004C  
                    i1strcpy@d 007D                      i1strlen@a 0074                      i1strcpy@s 007A  
                    i1strlen@s 0070              __size_ofi1_strcat 0019              __size_ofi1_strcpy 0024  
            __size_ofi1_strlen 0023                   i1strcat@dest 0024                main@wDebounceUp 0244  
                  __pdataBANK1 00C1                  _wI2CTxSendPos 0053              __size_of_PrintLog 002E  
                     ??_memset 003A                   i1strcpy@dest 007C                     memset@dest 0034  
                     ??_strcat 0044                       ??_strcpy 003C                       ??_strlen 0036  
                  ?_powerOnLcd 0070               i1Add_Trace@iText 0026                      ___latbits 0003  
             i1Add_Trace@oText 002E                  __pcstackBANK0 0020                  __pcstackBANK1 00BB  
                __pcstackBANK4 0220              printEM1812@wUnity 0043           __end_of_ToggleBitRB5 0CCB  
                     ?_GetTemp 0070          __size_of_SetToGetTemp 0029                   _wTemperature 00A0  
      i1Add_Trace@iSizeOfoText 0025             writeInsChk@iOpCode 0039                       ?___awdiv 0034  
                     ?___awmod 0034                  ??i1_Add_Trace 0028                      __pswtext1 07EF  
                    _wCounter2 004F                       ?_initLCD 0070                       ?_setData 0070  
                  ??_Add_Trace 00BB                  ??_waitLCDBusy 0034                      _wHumidity 00A2  
                PrintLog@iText 004A                   _SetToGetTemp 0DD1                 __size_of_myint 0182  
             _mDisplayOnOffReg 005B     __end_of_SetToSendDataToLCD 0CAD                      clear_ram0 0CB3  
                     _PIE1bits 0091                       _PIE2bits 0092            __size_of_powerOnLcd 000B  
                     _PIR1bits 0011                       _PIR2bits 0012          __size_of_setCursorOff 000B  
                    main@F2250 00C1       _wReceptionBufferPosition 0058              Debounce@swPressed 0035  
 __end_of_SetToReadDataFromLCD 0CB3                  ??_printEM1812 0040    lcdWriteText@wCharReadingPos 0046  
             _wI2CRxBufferSize 0054                      main@wConv 0222                      main@wMenu 024C  
 __end_of_setNotBlinkingCursor 0CF7                      main@wTemp 0220                       _Debounce 0F64  
          __end_ofi1_Add_Trace 0EE5                       i1_strcat 0D0F                       i1_strcpy 0D64  
                     i1_strlen 0D41              lcdWriteText@iText 0041            __end_of_waitLCDBusy 0E7D  
                 _setCursorOff 0CE1               __size_of_GetTemp 002C      __size_of_moveCursorToHome 0008  
        Add_Trace@iSizeOfoText 0047                   _wI2CTxBuffer 00A7                       _PrintLog 0E7D  
             __size_of___awdiv 006A               __size_of___awmod 005E                    _wTempUpdate 0051  
             _wI2CTxBufferSize 0055                     _ANSELCbits 018E               __size_of_initLCD 0050  
                   strcat@dest 0046            __end_of_printEM1812 0630      PrintLog@wInterruptTextLen 0049  
             __size_of_setData 003C                  ?_clearDisplay 0070          __size_of_ToggleBitRB5 000A  
                     __ptext10 0CCB                       __ptext11 0CF7                       __ptext20 0EE5  
                     __ptext12 0CC1                       __ptext21 0CA7                       __ptext13 0DD1  
                     __ptext30 0EAB                       __ptext22 0E24                       __ptext14 0E7D  
                     __ptext31 0D0F                       __ptext23 04A6                       __ptext15 0DFA  
                     __ptext32 0D41                       __ptext24 0F64                       __ptext16 0630  
                     __ptext33 0D64                       __ptext25 0F21                       __ptext17 0731  
                     __ptext26 0D28                       __ptext18 0E50                       __ptext27 0D88  
                     __ptext19 0CAD                       __ptext28 0DAC                       _wHexTemp 0120  
        main@wIterationCounter 023A                     strcpy@dest 0041                  __size_of_main 02E9  
           main@wDebounceEnter 0242             writeTxtChk@iOpCode 0040                       int$flags 007E  
        __end_of_writeInsNoChk 0D0F              main@wHumidityPrev 023D                    i1_Add_Trace 0EAB  
                ??_writeInsChk 0039                   _ToggleBitRB5 0CC1                   ??_powerOnLcd 003A  
                ??_writeTxtChk 003E                     _INTCONbits 000B                    _waitLCDBusy 0E50  
               ??_clearDisplay 003A         setCursorPosition@iLine 003C                       intlevel1 0000  
       main@wDownBottonPressed 024B           _SetToReadDataFromLCD 0CAD                      strcat@src 0042  
                    strcpy@src 003A                     _OSCCONbits 0099           _setNotBlinkingCursor 0CEC  
           __end_of_powerOnLcd 0CE1                    _printEM1812 0577                  __pstringtext1 1000  
                __pstringtext2 1010                  __pstringtext3 1020                  __pstringtext4 1030  
                __pstringtext5 1040                  __pstringtext6 104C                  __pstringtext7 1055  
                __pstringtext8 105C                  __pstringtext9 0000            __end_of_writeInsChk 0CD6  
                  _SSPCON1bits 0215                    _SSPCON2bits 0216                    _SSPCON3bits 0217  
                ?_lcdWriteText 0041            __end_of_writeTxtChk 06C7          ?_SetToReadDataFromLCD 0070  
        ?_setNotBlinkingCursor 0070               _moveCursorToHome 0CB9         _mCursorDisplayShiftReg 005A  
