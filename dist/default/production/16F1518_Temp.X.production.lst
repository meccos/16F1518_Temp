

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Feb 24 15:01:02 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F1518 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   120                           PORTB equ 0Dh ;# 
   121  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   122                           PORTC equ 0Eh ;# 
   123  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   124                           PORTE equ 010h ;# 
   125  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   126                           PIR1 equ 011h ;# 
   127  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   128                           PIR2 equ 012h ;# 
   129  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   130                           TMR0 equ 015h ;# 
   131  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   132                           TMR1 equ 016h ;# 
   133  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   134                           TMR1L equ 016h ;# 
   135  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   136                           TMR1H equ 017h ;# 
   137  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   138                           T1CON equ 018h ;# 
   139  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   140                           T1GCON equ 019h ;# 
   141  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   142                           TMR2 equ 01Ah ;# 
   143  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   144                           PR2 equ 01Bh ;# 
   145  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   146                           T2CON equ 01Ch ;# 
   147  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   148                           TRISA equ 08Ch ;# 
   149  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   150                           TRISB equ 08Dh ;# 
   151  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   152                           TRISC equ 08Eh ;# 
   153  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   154                           TRISE equ 090h ;# 
   155  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   156                           PIE1 equ 091h ;# 
   157  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   158                           PIE2 equ 092h ;# 
   159  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   160                           OPTION_REG equ 095h ;# 
   161  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   162                           PCON equ 096h ;# 
   163  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   164                           WDTCON equ 097h ;# 
   165  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   166                           OSCCON equ 099h ;# 
   167  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   168                           OSCSTAT equ 09Ah ;# 
   169  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   170                           ADRES equ 09Bh ;# 
   171  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   172                           ADRESL equ 09Bh ;# 
   173  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   174                           ADRESH equ 09Ch ;# 
   175  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   176                           ADCON0 equ 09Dh ;# 
   177  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   178                           ADCON1 equ 09Eh ;# 
   179  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   180                           LATA equ 010Ch ;# 
   181  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   182                           LATB equ 010Dh ;# 
   183  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   184                           LATC equ 010Eh ;# 
   185  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   186                           BORCON equ 0116h ;# 
   187  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   188                           FVRCON equ 0117h ;# 
   189  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   190                           APFCON equ 011Dh ;# 
   191  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   192                           ANSELA equ 018Ch ;# 
   193  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   194                           ANSELB equ 018Dh ;# 
   195  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   196                           ANSELC equ 018Eh ;# 
   197  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   198                           PMADR equ 0191h ;# 
   199  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   200                           PMADRL equ 0191h ;# 
   201  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   202                           PMADRH equ 0192h ;# 
   203  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   204                           PMDAT equ 0193h ;# 
   205  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   206                           PMDATL equ 0193h ;# 
   207  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   208                           PMDATH equ 0194h ;# 
   209  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   210                           PMCON1 equ 0195h ;# 
   211  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   212                           PMCON2 equ 0196h ;# 
   213  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   214                           VREGCON equ 0197h ;# 
   215  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   216                           RCREG equ 0199h ;# 
   217  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   218                           TXREG equ 019Ah ;# 
   219  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   220                           SP1BRG equ 019Bh ;# 
   221  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   222                           SP1BRGL equ 019Bh ;# 
   223  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   224                           SPBRG equ 019Bh ;# 
   225  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   226                           SPBRGL equ 019Bh ;# 
   227  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   228                           SP1BRGH equ 019Ch ;# 
   229  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   230                           SPBRGH equ 019Ch ;# 
   231  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   232                           RCSTA equ 019Dh ;# 
   233  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   234                           TXSTA equ 019Eh ;# 
   235  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   236                           BAUDCON equ 019Fh ;# 
   237  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   238                           WPUB equ 020Dh ;# 
   239  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   240                           WPUE equ 0210h ;# 
   241  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   242                           SSPBUF equ 0211h ;# 
   243  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   244                           SSP1BUF equ 0211h ;# 
   245  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   246                           SSPADD equ 0212h ;# 
   247  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   248                           SSP1ADD equ 0212h ;# 
   249  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   250                           SSPMSK equ 0213h ;# 
   251  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   252                           SSP1MSK equ 0213h ;# 
   253  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   254                           SSPSTAT equ 0214h ;# 
   255  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   256                           SSP1STAT equ 0214h ;# 
   257  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   258                           SSPCON1 equ 0215h ;# 
   259  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   260                           SSPCON equ 0215h ;# 
   261  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   262                           SSP1CON1 equ 0215h ;# 
   263  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   264                           SSPCON2 equ 0216h ;# 
   265  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   266                           SSP1CON2 equ 0216h ;# 
   267  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   268                           SSPCON3 equ 0217h ;# 
   269  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   270                           SSP1CON3 equ 0217h ;# 
   271  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   272                           CCPR1 equ 0291h ;# 
   273  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   274                           CCPR1L equ 0291h ;# 
   275  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   276                           CCPR1H equ 0292h ;# 
   277  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   278                           CCP1CON equ 0293h ;# 
   279  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   280                           CCPR2 equ 0298h ;# 
   281  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   282                           CCPR2L equ 0298h ;# 
   283  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   284                           CCPR2H equ 0299h ;# 
   285  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   286                           CCP2CON equ 029Ah ;# 
   287  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   288                           IOCBP equ 0394h ;# 
   289  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   290                           IOCBN equ 0395h ;# 
   291  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   292                           IOCBF equ 0396h ;# 
   293  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   294                           STATUS_SHAD equ 0FE4h ;# 
   295  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   296                           WREG_SHAD equ 0FE5h ;# 
   297  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   298                           BSR_SHAD equ 0FE6h ;# 
   299  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   300                           PCLATH_SHAD equ 0FE7h ;# 
   301  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   302                           FSR0L_SHAD equ 0FE8h ;# 
   303  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   304                           FSR0H_SHAD equ 0FE9h ;# 
   305  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   306                           FSR1L_SHAD equ 0FEAh ;# 
   307  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   308                           FSR1H_SHAD equ 0FEBh ;# 
   309  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   310                           STKPTR equ 0FEDh ;# 
   311  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   312                           TOSL equ 0FEEh ;# 
   313  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   314                           TOSH equ 0FEFh ;# 
   315  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   316                           INDF0 equ 00h ;# 
   317  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   318                           INDF1 equ 01h ;# 
   319  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   320                           PCL equ 02h ;# 
   321  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   322                           STATUS equ 03h ;# 
   323  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   324                           FSR0L equ 04h ;# 
   325  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   326                           FSR0H equ 05h ;# 
   327  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   328                           FSR1L equ 06h ;# 
   329  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   330                           FSR1H equ 07h ;# 
   331  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   332                           BSR equ 08h ;# 
   333  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   334                           WREG equ 09h ;# 
   335  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   336                           PCLATH equ 0Ah ;# 
   337  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   338                           INTCON equ 0Bh ;# 
   339  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   340                           PORTA equ 0Ch ;# 
   341  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   342                           PORTB equ 0Dh ;# 
   343  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   344                           PORTC equ 0Eh ;# 
   345  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   346                           PORTE equ 010h ;# 
   347  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   348                           PIR1 equ 011h ;# 
   349  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   350                           PIR2 equ 012h ;# 
   351  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   352                           TMR0 equ 015h ;# 
   353  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   354                           TMR1 equ 016h ;# 
   355  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   356                           TMR1L equ 016h ;# 
   357  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   358                           TMR1H equ 017h ;# 
   359  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   360                           T1CON equ 018h ;# 
   361  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   362                           T1GCON equ 019h ;# 
   363  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   364                           TMR2 equ 01Ah ;# 
   365  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   366                           PR2 equ 01Bh ;# 
   367  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   368                           T2CON equ 01Ch ;# 
   369  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   370                           TRISA equ 08Ch ;# 
   371  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   372                           TRISB equ 08Dh ;# 
   373  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   374                           TRISC equ 08Eh ;# 
   375  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   376                           TRISE equ 090h ;# 
   377  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   378                           PIE1 equ 091h ;# 
   379  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   380                           PIE2 equ 092h ;# 
   381  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   382                           OPTION_REG equ 095h ;# 
   383  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   384                           PCON equ 096h ;# 
   385  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   386                           WDTCON equ 097h ;# 
   387  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   388                           OSCCON equ 099h ;# 
   389  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   390                           OSCSTAT equ 09Ah ;# 
   391  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   392                           ADRES equ 09Bh ;# 
   393  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   394                           ADRESL equ 09Bh ;# 
   395  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   396                           ADRESH equ 09Ch ;# 
   397  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   398                           ADCON0 equ 09Dh ;# 
   399  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   400                           ADCON1 equ 09Eh ;# 
   401  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   402                           LATA equ 010Ch ;# 
   403  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   404                           LATB equ 010Dh ;# 
   405  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   406                           LATC equ 010Eh ;# 
   407  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   408                           BORCON equ 0116h ;# 
   409  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   410                           FVRCON equ 0117h ;# 
   411  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   412                           APFCON equ 011Dh ;# 
   413  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   414                           ANSELA equ 018Ch ;# 
   415  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   416                           ANSELB equ 018Dh ;# 
   417  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   418                           ANSELC equ 018Eh ;# 
   419  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   420                           PMADR equ 0191h ;# 
   421  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   422                           PMADRL equ 0191h ;# 
   423  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   424                           PMADRH equ 0192h ;# 
   425  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   426                           PMDAT equ 0193h ;# 
   427  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   428                           PMDATL equ 0193h ;# 
   429  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   430                           PMDATH equ 0194h ;# 
   431  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   432                           PMCON1 equ 0195h ;# 
   433  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   434                           PMCON2 equ 0196h ;# 
   435  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   436                           VREGCON equ 0197h ;# 
   437  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   438                           RCREG equ 0199h ;# 
   439  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   440                           TXREG equ 019Ah ;# 
   441  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   442                           SP1BRG equ 019Bh ;# 
   443  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   444                           SP1BRGL equ 019Bh ;# 
   445  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   446                           SPBRG equ 019Bh ;# 
   447  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   448                           SPBRGL equ 019Bh ;# 
   449  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   450                           SP1BRGH equ 019Ch ;# 
   451  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   452                           SPBRGH equ 019Ch ;# 
   453  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   454                           RCSTA equ 019Dh ;# 
   455  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   456                           TXSTA equ 019Eh ;# 
   457  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   458                           BAUDCON equ 019Fh ;# 
   459  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   460                           WPUB equ 020Dh ;# 
   461  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   462                           WPUE equ 0210h ;# 
   463  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   464                           SSPBUF equ 0211h ;# 
   465  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   466                           SSP1BUF equ 0211h ;# 
   467  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   468                           SSPADD equ 0212h ;# 
   469  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   470                           SSP1ADD equ 0212h ;# 
   471  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   472                           SSPMSK equ 0213h ;# 
   473  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   474                           SSP1MSK equ 0213h ;# 
   475  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   476                           SSPSTAT equ 0214h ;# 
   477  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   478                           SSP1STAT equ 0214h ;# 
   479  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   480                           SSPCON1 equ 0215h ;# 
   481  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   482                           SSPCON equ 0215h ;# 
   483  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   484                           SSP1CON1 equ 0215h ;# 
   485  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   486                           SSPCON2 equ 0216h ;# 
   487  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   488                           SSP1CON2 equ 0216h ;# 
   489  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   490                           SSPCON3 equ 0217h ;# 
   491  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   492                           SSP1CON3 equ 0217h ;# 
   493  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   494                           CCPR1 equ 0291h ;# 
   495  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   496                           CCPR1L equ 0291h ;# 
   497  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   498                           CCPR1H equ 0292h ;# 
   499  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   500                           CCP1CON equ 0293h ;# 
   501  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   502                           CCPR2 equ 0298h ;# 
   503  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   504                           CCPR2L equ 0298h ;# 
   505  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   506                           CCPR2H equ 0299h ;# 
   507  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   508                           CCP2CON equ 029Ah ;# 
   509  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   510                           IOCBP equ 0394h ;# 
   511  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   512                           IOCBN equ 0395h ;# 
   513  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   514                           IOCBF equ 0396h ;# 
   515  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   516                           STATUS_SHAD equ 0FE4h ;# 
   517  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   518                           WREG_SHAD equ 0FE5h ;# 
   519  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   520                           BSR_SHAD equ 0FE6h ;# 
   521  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   522                           PCLATH_SHAD equ 0FE7h ;# 
   523  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   524                           FSR0L_SHAD equ 0FE8h ;# 
   525  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   526                           FSR0H_SHAD equ 0FE9h ;# 
   527  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   528                           FSR1L_SHAD equ 0FEAh ;# 
   529  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   530                           FSR1H_SHAD equ 0FEBh ;# 
   531  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   532                           STKPTR equ 0FEDh ;# 
   533  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   534                           TOSL equ 0FEEh ;# 
   535  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   536                           TOSH equ 0FEFh ;# 
   537  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   538                           INDF0 equ 00h ;# 
   539  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   540                           INDF1 equ 01h ;# 
   541  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   542                           PCL equ 02h ;# 
   543  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   544                           STATUS equ 03h ;# 
   545  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   546                           FSR0L equ 04h ;# 
   547  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   548                           FSR0H equ 05h ;# 
   549  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   550                           FSR1L equ 06h ;# 
   551  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   552                           FSR1H equ 07h ;# 
   553  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   554                           BSR equ 08h ;# 
   555  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   556                           WREG equ 09h ;# 
   557  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   558                           PCLATH equ 0Ah ;# 
   559  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   560                           INTCON equ 0Bh ;# 
   561  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   562                           PORTA equ 0Ch ;# 
   563  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   564                           PORTB equ 0Dh ;# 
   565  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   566                           PORTC equ 0Eh ;# 
   567  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   568                           PORTE equ 010h ;# 
   569  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   570                           PIR1 equ 011h ;# 
   571  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   572                           PIR2 equ 012h ;# 
   573  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   574                           TMR0 equ 015h ;# 
   575  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   576                           TMR1 equ 016h ;# 
   577  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   578                           TMR1L equ 016h ;# 
   579  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   580                           TMR1H equ 017h ;# 
   581  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   582                           T1CON equ 018h ;# 
   583  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   584                           T1GCON equ 019h ;# 
   585  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   586                           TMR2 equ 01Ah ;# 
   587  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   588                           PR2 equ 01Bh ;# 
   589  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   590                           T2CON equ 01Ch ;# 
   591  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   592                           TRISA equ 08Ch ;# 
   593  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   594                           TRISB equ 08Dh ;# 
   595  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   596                           TRISC equ 08Eh ;# 
   597  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   598                           TRISE equ 090h ;# 
   599  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   600                           PIE1 equ 091h ;# 
   601  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   602                           PIE2 equ 092h ;# 
   603  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   604                           OPTION_REG equ 095h ;# 
   605  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   606                           PCON equ 096h ;# 
   607  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   608                           WDTCON equ 097h ;# 
   609  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   610                           OSCCON equ 099h ;# 
   611  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   612                           OSCSTAT equ 09Ah ;# 
   613  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   614                           ADRES equ 09Bh ;# 
   615  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   616                           ADRESL equ 09Bh ;# 
   617  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   618                           ADRESH equ 09Ch ;# 
   619  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   620                           ADCON0 equ 09Dh ;# 
   621  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   622                           ADCON1 equ 09Eh ;# 
   623  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   624                           LATA equ 010Ch ;# 
   625  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   626                           LATB equ 010Dh ;# 
   627  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   628                           LATC equ 010Eh ;# 
   629  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   630                           BORCON equ 0116h ;# 
   631  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   632                           FVRCON equ 0117h ;# 
   633  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   634                           APFCON equ 011Dh ;# 
   635  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   636                           ANSELA equ 018Ch ;# 
   637  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   638                           ANSELB equ 018Dh ;# 
   639  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   640                           ANSELC equ 018Eh ;# 
   641  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   642                           PMADR equ 0191h ;# 
   643  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   644                           PMADRL equ 0191h ;# 
   645  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   646                           PMADRH equ 0192h ;# 
   647  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   648                           PMDAT equ 0193h ;# 
   649  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   650                           PMDATL equ 0193h ;# 
   651  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   652                           PMDATH equ 0194h ;# 
   653  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   654                           PMCON1 equ 0195h ;# 
   655  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   656                           PMCON2 equ 0196h ;# 
   657  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   658                           VREGCON equ 0197h ;# 
   659  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   660                           RCREG equ 0199h ;# 
   661  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   662                           TXREG equ 019Ah ;# 
   663  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   664                           SP1BRG equ 019Bh ;# 
   665  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   666                           SP1BRGL equ 019Bh ;# 
   667  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   668                           SPBRG equ 019Bh ;# 
   669  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   670                           SPBRGL equ 019Bh ;# 
   671  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   672                           SP1BRGH equ 019Ch ;# 
   673  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   674                           SPBRGH equ 019Ch ;# 
   675  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   676                           RCSTA equ 019Dh ;# 
   677  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   678                           TXSTA equ 019Eh ;# 
   679  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   680                           BAUDCON equ 019Fh ;# 
   681  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   682                           WPUB equ 020Dh ;# 
   683  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   684                           WPUE equ 0210h ;# 
   685  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   686                           SSPBUF equ 0211h ;# 
   687  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   688                           SSP1BUF equ 0211h ;# 
   689  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   690                           SSPADD equ 0212h ;# 
   691  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   692                           SSP1ADD equ 0212h ;# 
   693  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   694                           SSPMSK equ 0213h ;# 
   695  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   696                           SSP1MSK equ 0213h ;# 
   697  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   698                           SSPSTAT equ 0214h ;# 
   699  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   700                           SSP1STAT equ 0214h ;# 
   701  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   702                           SSPCON1 equ 0215h ;# 
   703  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   704                           SSPCON equ 0215h ;# 
   705  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   706                           SSP1CON1 equ 0215h ;# 
   707  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   708                           SSPCON2 equ 0216h ;# 
   709  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   710                           SSP1CON2 equ 0216h ;# 
   711  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   712                           SSPCON3 equ 0217h ;# 
   713  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   714                           SSP1CON3 equ 0217h ;# 
   715  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   716                           CCPR1 equ 0291h ;# 
   717  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   718                           CCPR1L equ 0291h ;# 
   719  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   720                           CCPR1H equ 0292h ;# 
   721  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   722                           CCP1CON equ 0293h ;# 
   723  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   724                           CCPR2 equ 0298h ;# 
   725  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   726                           CCPR2L equ 0298h ;# 
   727  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   728                           CCPR2H equ 0299h ;# 
   729  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   730                           CCP2CON equ 029Ah ;# 
   731  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   732                           IOCBP equ 0394h ;# 
   733  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   734                           IOCBN equ 0395h ;# 
   735  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   736                           IOCBF equ 0396h ;# 
   737  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   738                           STATUS_SHAD equ 0FE4h ;# 
   739  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   740                           WREG_SHAD equ 0FE5h ;# 
   741  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   742                           BSR_SHAD equ 0FE6h ;# 
   743  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   744                           PCLATH_SHAD equ 0FE7h ;# 
   745  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   746                           FSR0L_SHAD equ 0FE8h ;# 
   747  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   748                           FSR0H_SHAD equ 0FE9h ;# 
   749  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   750                           FSR1L_SHAD equ 0FEAh ;# 
   751  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   752                           FSR1H_SHAD equ 0FEBh ;# 
   753  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   754                           STKPTR equ 0FEDh ;# 
   755  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   756                           TOSL equ 0FEEh ;# 
   757  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   758                           TOSH equ 0FEFh ;# 
   759  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   760                           INDF0 equ 00h ;# 
   761  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   762                           INDF1 equ 01h ;# 
   763  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   764                           PCL equ 02h ;# 
   765  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   766                           STATUS equ 03h ;# 
   767  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   768                           FSR0L equ 04h ;# 
   769  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   770                           FSR0H equ 05h ;# 
   771  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   772                           FSR1L equ 06h ;# 
   773  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   774                           FSR1H equ 07h ;# 
   775  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   776                           BSR equ 08h ;# 
   777  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   778                           WREG equ 09h ;# 
   779  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   780                           PCLATH equ 0Ah ;# 
   781  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   782                           INTCON equ 0Bh ;# 
   783  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   784                           PORTA equ 0Ch ;# 
   785  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   786                           PORTB equ 0Dh ;# 
   787  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   788                           PORTC equ 0Eh ;# 
   789  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   790                           PORTE equ 010h ;# 
   791  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   792                           PIR1 equ 011h ;# 
   793  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   794                           PIR2 equ 012h ;# 
   795  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   796                           TMR0 equ 015h ;# 
   797  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   798                           TMR1 equ 016h ;# 
   799  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   800                           TMR1L equ 016h ;# 
   801  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   802                           TMR1H equ 017h ;# 
   803  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   804                           T1CON equ 018h ;# 
   805  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   806                           T1GCON equ 019h ;# 
   807  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   808                           TMR2 equ 01Ah ;# 
   809  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   810                           PR2 equ 01Bh ;# 
   811  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   812                           T2CON equ 01Ch ;# 
   813  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   814                           TRISA equ 08Ch ;# 
   815  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   816                           TRISB equ 08Dh ;# 
   817  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   818                           TRISC equ 08Eh ;# 
   819  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   820                           TRISE equ 090h ;# 
   821  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   822                           PIE1 equ 091h ;# 
   823  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   824                           PIE2 equ 092h ;# 
   825  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   826                           OPTION_REG equ 095h ;# 
   827  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   828                           PCON equ 096h ;# 
   829  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   830                           WDTCON equ 097h ;# 
   831  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   832                           OSCCON equ 099h ;# 
   833  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   834                           OSCSTAT equ 09Ah ;# 
   835  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   836                           ADRES equ 09Bh ;# 
   837  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   838                           ADRESL equ 09Bh ;# 
   839  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   840                           ADRESH equ 09Ch ;# 
   841  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   842                           ADCON0 equ 09Dh ;# 
   843  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   844                           ADCON1 equ 09Eh ;# 
   845  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   846                           LATA equ 010Ch ;# 
   847  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   848                           LATB equ 010Dh ;# 
   849  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   850                           LATC equ 010Eh ;# 
   851  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   852                           BORCON equ 0116h ;# 
   853  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   854                           FVRCON equ 0117h ;# 
   855  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   856                           APFCON equ 011Dh ;# 
   857  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   858                           ANSELA equ 018Ch ;# 
   859  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   860                           ANSELB equ 018Dh ;# 
   861  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   862                           ANSELC equ 018Eh ;# 
   863  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   864                           PMADR equ 0191h ;# 
   865  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   866                           PMADRL equ 0191h ;# 
   867  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   868                           PMADRH equ 0192h ;# 
   869  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   870                           PMDAT equ 0193h ;# 
   871  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   872                           PMDATL equ 0193h ;# 
   873  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   874                           PMDATH equ 0194h ;# 
   875  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   876                           PMCON1 equ 0195h ;# 
   877  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   878                           PMCON2 equ 0196h ;# 
   879  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   880                           VREGCON equ 0197h ;# 
   881  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   882                           RCREG equ 0199h ;# 
   883  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   884                           TXREG equ 019Ah ;# 
   885  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   886                           SP1BRG equ 019Bh ;# 
   887  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   888                           SP1BRGL equ 019Bh ;# 
   889  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   890                           SPBRG equ 019Bh ;# 
   891  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   892                           SPBRGL equ 019Bh ;# 
   893  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   894                           SP1BRGH equ 019Ch ;# 
   895  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   896                           SPBRGH equ 019Ch ;# 
   897  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   898                           RCSTA equ 019Dh ;# 
   899  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   900                           TXSTA equ 019Eh ;# 
   901  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   902                           BAUDCON equ 019Fh ;# 
   903  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   904                           WPUB equ 020Dh ;# 
   905  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   906                           WPUE equ 0210h ;# 
   907  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   908                           SSPBUF equ 0211h ;# 
   909  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   910                           SSP1BUF equ 0211h ;# 
   911  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   912                           SSPADD equ 0212h ;# 
   913  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   914                           SSP1ADD equ 0212h ;# 
   915  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   916                           SSPMSK equ 0213h ;# 
   917  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   918                           SSP1MSK equ 0213h ;# 
   919  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   920                           SSPSTAT equ 0214h ;# 
   921  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   922                           SSP1STAT equ 0214h ;# 
   923  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   924                           SSPCON1 equ 0215h ;# 
   925  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   926                           SSPCON equ 0215h ;# 
   927  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   928                           SSP1CON1 equ 0215h ;# 
   929  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   930                           SSPCON2 equ 0216h ;# 
   931  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   932                           SSP1CON2 equ 0216h ;# 
   933  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   934                           SSPCON3 equ 0217h ;# 
   935  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   936                           SSP1CON3 equ 0217h ;# 
   937  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   938                           CCPR1 equ 0291h ;# 
   939  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   940                           CCPR1L equ 0291h ;# 
   941  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   942                           CCPR1H equ 0292h ;# 
   943  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   944                           CCP1CON equ 0293h ;# 
   945  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   946                           CCPR2 equ 0298h ;# 
   947  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   948                           CCPR2L equ 0298h ;# 
   949  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   950                           CCPR2H equ 0299h ;# 
   951  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   952                           CCP2CON equ 029Ah ;# 
   953  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   954                           IOCBP equ 0394h ;# 
   955  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   956                           IOCBN equ 0395h ;# 
   957  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   958                           IOCBF equ 0396h ;# 
   959  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   960                           STATUS_SHAD equ 0FE4h ;# 
   961  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   962                           WREG_SHAD equ 0FE5h ;# 
   963  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   964                           BSR_SHAD equ 0FE6h ;# 
   965  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   966                           PCLATH_SHAD equ 0FE7h ;# 
   967  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   968                           FSR0L_SHAD equ 0FE8h ;# 
   969  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   970                           FSR0H_SHAD equ 0FE9h ;# 
   971  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   972                           FSR1L_SHAD equ 0FEAh ;# 
   973  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   974                           FSR1H_SHAD equ 0FEBh ;# 
   975  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   976                           STKPTR equ 0FEDh ;# 
   977  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   978                           TOSL equ 0FEEh ;# 
   979  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   980                           TOSH equ 0FEFh ;# 
   981  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   982                           INDF0 equ 00h ;# 
   983  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   984                           INDF1 equ 01h ;# 
   985  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   986                           PCL equ 02h ;# 
   987  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   988                           STATUS equ 03h ;# 
   989  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   990                           FSR0L equ 04h ;# 
   991  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   992                           FSR0H equ 05h ;# 
   993  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   994                           FSR1L equ 06h ;# 
   995  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   996                           FSR1H equ 07h ;# 
   997  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   998                           BSR equ 08h ;# 
   999  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1000                           WREG equ 09h ;# 
  1001  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1002                           PCLATH equ 0Ah ;# 
  1003  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1004                           INTCON equ 0Bh ;# 
  1005  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1006                           PORTA equ 0Ch ;# 
  1007  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1008                           PORTB equ 0Dh ;# 
  1009  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1010                           PORTC equ 0Eh ;# 
  1011  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1012                           PORTE equ 010h ;# 
  1013  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1014                           PIR1 equ 011h ;# 
  1015  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1016                           PIR2 equ 012h ;# 
  1017  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1018                           TMR0 equ 015h ;# 
  1019  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1020                           TMR1 equ 016h ;# 
  1021  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1022                           TMR1L equ 016h ;# 
  1023  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1024                           TMR1H equ 017h ;# 
  1025  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1026                           T1CON equ 018h ;# 
  1027  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1028                           T1GCON equ 019h ;# 
  1029  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1030                           TMR2 equ 01Ah ;# 
  1031  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1032                           PR2 equ 01Bh ;# 
  1033  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1034                           T2CON equ 01Ch ;# 
  1035  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1036                           TRISA equ 08Ch ;# 
  1037  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1038                           TRISB equ 08Dh ;# 
  1039  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1040                           TRISC equ 08Eh ;# 
  1041  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1042                           TRISE equ 090h ;# 
  1043  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1044                           PIE1 equ 091h ;# 
  1045  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1046                           PIE2 equ 092h ;# 
  1047  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1048                           OPTION_REG equ 095h ;# 
  1049  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1050                           PCON equ 096h ;# 
  1051  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1052                           WDTCON equ 097h ;# 
  1053  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1054                           OSCCON equ 099h ;# 
  1055  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1056                           OSCSTAT equ 09Ah ;# 
  1057  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1058                           ADRES equ 09Bh ;# 
  1059  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1060                           ADRESL equ 09Bh ;# 
  1061  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1062                           ADRESH equ 09Ch ;# 
  1063  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1064                           ADCON0 equ 09Dh ;# 
  1065  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1066                           ADCON1 equ 09Eh ;# 
  1067  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1068                           LATA equ 010Ch ;# 
  1069  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1070                           LATB equ 010Dh ;# 
  1071  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1072                           LATC equ 010Eh ;# 
  1073  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1074                           BORCON equ 0116h ;# 
  1075  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1076                           FVRCON equ 0117h ;# 
  1077  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1078                           APFCON equ 011Dh ;# 
  1079  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1080                           ANSELA equ 018Ch ;# 
  1081  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1082                           ANSELB equ 018Dh ;# 
  1083  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1084                           ANSELC equ 018Eh ;# 
  1085  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1086                           PMADR equ 0191h ;# 
  1087  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1088                           PMADRL equ 0191h ;# 
  1089  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1090                           PMADRH equ 0192h ;# 
  1091  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1092                           PMDAT equ 0193h ;# 
  1093  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1094                           PMDATL equ 0193h ;# 
  1095  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1096                           PMDATH equ 0194h ;# 
  1097  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1098                           PMCON1 equ 0195h ;# 
  1099  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1100                           PMCON2 equ 0196h ;# 
  1101  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1102                           VREGCON equ 0197h ;# 
  1103  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1104                           RCREG equ 0199h ;# 
  1105  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1106                           TXREG equ 019Ah ;# 
  1107  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1108                           SP1BRG equ 019Bh ;# 
  1109  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1110                           SP1BRGL equ 019Bh ;# 
  1111  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1112                           SPBRG equ 019Bh ;# 
  1113  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1114                           SPBRGL equ 019Bh ;# 
  1115  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1116                           SP1BRGH equ 019Ch ;# 
  1117  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1118                           SPBRGH equ 019Ch ;# 
  1119  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1120                           RCSTA equ 019Dh ;# 
  1121  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1122                           TXSTA equ 019Eh ;# 
  1123  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1124                           BAUDCON equ 019Fh ;# 
  1125  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1126                           WPUB equ 020Dh ;# 
  1127  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1128                           WPUE equ 0210h ;# 
  1129  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1130                           SSPBUF equ 0211h ;# 
  1131  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1132                           SSP1BUF equ 0211h ;# 
  1133  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1134                           SSPADD equ 0212h ;# 
  1135  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1136                           SSP1ADD equ 0212h ;# 
  1137  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1138                           SSPMSK equ 0213h ;# 
  1139  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1140                           SSP1MSK equ 0213h ;# 
  1141  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1142                           SSPSTAT equ 0214h ;# 
  1143  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1144                           SSP1STAT equ 0214h ;# 
  1145  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1146                           SSPCON1 equ 0215h ;# 
  1147  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1148                           SSPCON equ 0215h ;# 
  1149  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1150                           SSP1CON1 equ 0215h ;# 
  1151  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1152                           SSPCON2 equ 0216h ;# 
  1153  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1154                           SSP1CON2 equ 0216h ;# 
  1155  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1156                           SSPCON3 equ 0217h ;# 
  1157  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1158                           SSP1CON3 equ 0217h ;# 
  1159  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1160                           CCPR1 equ 0291h ;# 
  1161  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1162                           CCPR1L equ 0291h ;# 
  1163  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1164                           CCPR1H equ 0292h ;# 
  1165  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1166                           CCP1CON equ 0293h ;# 
  1167  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1168                           CCPR2 equ 0298h ;# 
  1169  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1170                           CCPR2L equ 0298h ;# 
  1171  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1172                           CCPR2H equ 0299h ;# 
  1173  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1174                           CCP2CON equ 029Ah ;# 
  1175  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1176                           IOCBP equ 0394h ;# 
  1177  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1178                           IOCBN equ 0395h ;# 
  1179  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1180                           IOCBF equ 0396h ;# 
  1181  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1182                           STATUS_SHAD equ 0FE4h ;# 
  1183  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1184                           WREG_SHAD equ 0FE5h ;# 
  1185  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1186                           BSR_SHAD equ 0FE6h ;# 
  1187  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1188                           PCLATH_SHAD equ 0FE7h ;# 
  1189  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1190                           FSR0L_SHAD equ 0FE8h ;# 
  1191  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1192                           FSR0H_SHAD equ 0FE9h ;# 
  1193  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1194                           FSR1L_SHAD equ 0FEAh ;# 
  1195  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1196                           FSR1H_SHAD equ 0FEBh ;# 
  1197  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1198                           STKPTR equ 0FEDh ;# 
  1199  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1200                           TOSL equ 0FEEh ;# 
  1201  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1202                           TOSH equ 0FEFh ;# 
  1203  0FEF                     DABS 1,1568,48	;_gTxBuffer
  1204                           DABS 1,1440,80	;_gTxBuffer
  1205                           DABS 1,1312,80	;_gTxBuffer
  1206                           DABS 1,1216,48	;_gTxBuffer
  1207                           	FNCALL	_main,_AddTrace
  1208                           	FNCALL	_main,_Debounce
  1209                           	FNCALL	_main,_EM1812EntryPoint
  1210                           	FNCALL	_main,_I2CInit
  1211                           	FNCALL	_main,_PrintLog
  1212                           	FNCALL	_main,_Send_UART_Data
  1213                           	FNCALL	_main,_clearDisplay
  1214                           	FNCALL	_main,_initLCD
  1215                           	FNCALL	_main,_memcpy
  1216                           	FNCALL	_main,_memset
  1217                           	FNCALL	_main,_moveCursorToHome
  1218                           	FNCALL	_main,_powerOnLcd
  1219                           	FNCALL	_main,_printEM1812
  1220                           	FNCALL	_main,_setCursorOff
  1221                           	FNCALL	_main,_setCursorPosition
  1222                           	FNCALL	_main,_setNotBlinkingCursor
  1223                           	FNCALL	_setNotBlinkingCursor,_writeInsChk
  1224                           	FNCALL	_setCursorOff,_writeInsChk
  1225                           	FNCALL	_printEM1812,___awdiv
  1226                           	FNCALL	_printEM1812,___awmod
  1227                           	FNCALL	_powerOnLcd,_writeInsChk
  1228                           	FNCALL	_moveCursorToHome,_writeInsChk
  1229                           	FNCALL	_initLCD,_clearDisplay
  1230                           	FNCALL	_initLCD,_setData
  1231                           	FNCALL	_initLCD,_writeInsChk
  1232                           	FNCALL	_clearDisplay,_writeInsChk
  1233                           	FNCALL	_writeInsChk,_waitLCDBusy
  1234                           	FNCALL	_writeInsChk,_writeInsNoChk
  1235                           	FNCALL	_writeInsNoChk,_SetToSendDataToLCD
  1236                           	FNCALL	_writeInsNoChk,_setData
  1237                           	FNCALL	_Send_UART_Data,_memcpy
  1238                           	FNCALL	_PrintLog,_lcdWriteText
  1239                           	FNCALL	_PrintLog,_memset
  1240                           	FNCALL	_PrintLog,_strlen
  1241                           	FNCALL	_lcdWriteText,_writeTxtChk
  1242                           	FNCALL	_writeTxtChk,_SetToSendDataToLCD
  1243                           	FNCALL	_writeTxtChk,_setCursorPosition
  1244                           	FNCALL	_writeTxtChk,_setData
  1245                           	FNCALL	_writeTxtChk,_waitLCDBusy
  1246                           	FNCALL	_setCursorPosition,_SetToSendDataToLCD
  1247                           	FNCALL	_setCursorPosition,_setData
  1248                           	FNCALL	_setCursorPosition,_waitLCDBusy
  1249                           	FNCALL	_waitLCDBusy,_SetToReadDataFromLCD
  1250                           	FNCALL	_I2CInit,_memset
  1251                           	FNCALL	_EM1812EntryPoint,_GetI2CStatus
  1252                           	FNCALL	_EM1812EntryPoint,_GetNewReceivedData
  1253                           	FNCALL	_EM1812EntryPoint,_I2C_GetData
  1254                           	FNCALL	_EM1812EntryPoint,_I2C_SendData
  1255                           	FNCALL	_I2C_SendData,_memcpy
  1256                           	FNCALL	_GetNewReceivedData,_memcpy
  1257                           	FNCALL	_AddTrace,_strcat
  1258                           	FNCALL	_AddTrace,_strlen
  1259                           	FNCALL	_strcat,_strcpy
  1260                           	FNCALL	_strcat,_strlen
  1261                           	FNROOT	_main
  1262                           	FNCALL	_myint,_I2C_Interrupt
  1263                           	FNCALL	_myint,_TempUpdateRequest
  1264                           	FNCALL	_myint,i1_lcdWriteText
  1265                           	FNCALL	i1_lcdWriteText,i1_writeTxtChk
  1266                           	FNCALL	i1_writeTxtChk,i1_SetToSendDataToLCD
  1267                           	FNCALL	i1_writeTxtChk,i1_setCursorPosition
  1268                           	FNCALL	i1_writeTxtChk,i1_setData
  1269                           	FNCALL	i1_writeTxtChk,i1_waitLCDBusy
  1270                           	FNCALL	i1_setCursorPosition,i1_SetToSendDataToLCD
  1271                           	FNCALL	i1_setCursorPosition,i1_setData
  1272                           	FNCALL	i1_setCursorPosition,i1_waitLCDBusy
  1273                           	FNCALL	i1_waitLCDBusy,i1_SetToReadDataFromLCD
  1274                           	FNCALL	intlevel1,_myint
  1275                           	global	intlevel1
  1276                           	FNROOT	intlevel1
  1277                           	global	EM1812EntryPoint@F1953
  1278                           	global	_wI2CRxBufferSize
  1279                           	global	_wI2CTxBufferSize
  1280                           	global	_wI2CCommandState
  1281                           	global	main@F2305
  1282                           	global	_wTempSet
  1283                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1284                           global __pidataBANK0
  1285                           __pidataBANK0:
  1286  0998                     	file	"EM1812.c"
  1287                           	line	96
  1288                           
  1289                           ;initializer for EM1812EntryPoint@F1953
  1290                           	retlw	0B8h
  1291  0998  34B8               	retlw	03h
  1292  0999  3403               	retlw	low(0)
  1293  099A  3400               	retlw	04h
  1294  099B  3404               	file	"./I2C.h"
  1295                           	line	24
  1296                           
  1297                           ;initializer for _wI2CRxBufferSize
  1298                           	retlw	014h
  1299  099C  3414               	line	23
  1300                           
  1301                           ;initializer for _wI2CTxBufferSize
  1302                           	retlw	014h
  1303  099D  3414               	line	14
  1304                           
  1305                           ;initializer for _wI2CCommandState
  1306                           	retlw	03h
  1307  099E  3403               psect	idataBANK1,class=CODE,space=0,delta=2,noexec
  1308                           global __pidataBANK1
  1309                           __pidataBANK1:
  1310  0992                     	file	"161518_temp_main.c"
  1311                           	line	251
  1312                           
  1313                           ;initializer for main@F2305
  1314                           	retlw	02Bh
  1315  0992  342B               	retlw	low(0)
  1316  0993  3400               	retlw	078h
  1317  0994  3478               	retlw	low(0)
  1318  0995  3400               	line	135
  1319                           
  1320                           ;initializer for _wTempSet
  1321                           	retlw	0D2h
  1322  0996  34D2               	retlw	0
  1323  0997  3400               
  1324                           	global	EM1812EntryPoint@wTry
  1325                           	global	_gUartRXBufferIndex
  1326                           	global	_wTimer1IntCounter
  1327                           	global	_gTxReadingPosition
  1328                           	global	_gTxTransmitSize
  1329                           	global	_wI2CTxSendPos
  1330                           	global	_wNewI2CReception
  1331                           	global	_wI2CRxNbOfByteToReceived
  1332                           	global	_wI2CTxNbOfByteToSend
  1333                           	global	_wReceptionBufferPosition
  1334                           	global	_wTimer0Counter
  1335                           	global	_wTempState
  1336                           	global	_mWritingPosition
  1337                           	global	_mCursorDisplayShiftReg
  1338                           	global	_mDisplayOnOffReg
  1339                           	global	EM1812EntryPoint@F1955
  1340                           	global	_gErrorCode
  1341                           	global	_wTemperature
  1342                           	global	_wHumidity
  1343                           	global	_wI2CRxBuffer
  1344                           	global	_wI2CTxBuffer
  1345                           	global	_gUartTXBuffer
  1346                           	global	_wInterruptText
  1347                           	global	_gUartRXBuffer
  1348                           	global	_gTxBuffer
  1349                           	global	_PIR2bits
  1350                           _PIR2bits	set	0x12
  1351  0012                     	global	_TMR0
  1352                           _TMR0	set	0x15
  1353  0015                     	global	_PORTCbits
  1354                           _PORTCbits	set	0xE
  1355  000E                     	global	_PORTAbits
  1356                           _PORTAbits	set	0xC
  1357  000C                     	global	_TMR1L
  1358                           _TMR1L	set	0x16
  1359  0016                     	global	_TMR1H
  1360                           _TMR1H	set	0x17
  1361  0017                     	global	_PIR1bits
  1362                           _PIR1bits	set	0x11
  1363  0011                     	global	_PORTB
  1364                           _PORTB	set	0xD
  1365  000D                     	global	_T1CONbits
  1366                           _T1CONbits	set	0x18
  1367  0018                     	global	_PORTA
  1368                           _PORTA	set	0xC
  1369  000C                     	global	_INTCONbits
  1370                           _INTCONbits	set	0xB
  1371  000B                     	global	_PORTBbits
  1372                           _PORTBbits	set	0xD
  1373  000D                     	global	_TRISAbits
  1374                           _TRISAbits	set	0x8C
  1375  008C                     	global	_PIE2bits
  1376                           _PIE2bits	set	0x92
  1377  0092                     	global	_TRISCbits
  1378                           _TRISCbits	set	0x8E
  1379  008E                     	global	_TRISB
  1380                           _TRISB	set	0x8D
  1381  008D                     	global	_OPTION_REGbits
  1382                           _OPTION_REGbits	set	0x95
  1383  0095                     	global	_OSCCONbits
  1384                           _OSCCONbits	set	0x99
  1385  0099                     	global	_PIE1bits
  1386                           _PIE1bits	set	0x91
  1387  0091                     	global	_ANSELAbits
  1388                           _ANSELAbits	set	0x18C
  1389  018C                     	global	_RCREG
  1390                           _RCREG	set	0x199
  1391  0199                     	global	_TXREG
  1392                           _TXREG	set	0x19A
  1393  019A                     	global	_ANSELB
  1394                           _ANSELB	set	0x18D
  1395  018D                     	global	_RCSTAbits
  1396                           _RCSTAbits	set	0x19D
  1397  019D                     	global	_TXSTAbits
  1398                           _TXSTAbits	set	0x19E
  1399  019E                     	global	_ANSELCbits
  1400                           _ANSELCbits	set	0x18E
  1401  018E                     	global	_SPBRGL
  1402                           _SPBRGL	set	0x19B
  1403  019B                     	global	_SPBRGH
  1404                           _SPBRGH	set	0x19C
  1405  019C                     	global	_SSPBUF
  1406                           _SSPBUF	set	0x211
  1407  0211                     	global	_SSPSTATbits
  1408                           _SSPSTATbits	set	0x214
  1409  0214                     	global	_SSPCON3bits
  1410                           _SSPCON3bits	set	0x217
  1411  0217                     	global	_SSPCON2bits
  1412                           _SSPCON2bits	set	0x216
  1413  0216                     	global	_SSPADD
  1414                           _SSPADD	set	0x212
  1415  0212                     	global	_SSPCON1bits
  1416                           _SSPCON1bits	set	0x215
  1417  0215                     	global	_WPUB
  1418                           _WPUB	set	0x20D
  1419  020D                     psect	stringtext1,class=STRCODE,delta=2,noexec
  1420                           global __pstringtext1
  1421                           __pstringtext1:
  1422  1000                     	
  1423                           STR_4:	
  1424  1000                     	retlw	65	;'A'
  1425  1000  3441               	retlw	84	;'T'
  1426  1001  3454               	retlw	43	;'+'
  1427  1002  342B               	retlw	67	;'C'
  1428  1003  3443               	retlw	87	;'W'
  1429  1004  3457               	retlw	83	;'S'
  1430  1005  3453               	retlw	65	;'A'
  1431  1006  3441               	retlw	80	;'P'
  1432  1007  3450               	retlw	61	;'='
  1433  1008  343D               	retlw	34	;'"'
  1434  1009  3422               	retlw	69	;'E'
  1435  100A  3445               	retlw	83	;'S'
  1436  100B  3453               	retlw	80	;'P'
  1437  100C  3450               	retlw	95	;'_'
  1438  100D  345F               	retlw	57	;'9'
  1439  100E  3439               	retlw	57	;'9'
  1440  100F  3439               	retlw	52	;'4'
  1441  1010  3434               	retlw	53	;'5'
  1442  1011  3435               	retlw	66	;'B'
  1443  1012  3442               	retlw	53	;'5'
  1444  1013  3435               	retlw	34	;'"'
  1445  1014  3422               	retlw	44	;','
  1446  1015  342C               	retlw	34	;'"'
  1447  1016  3422               	retlw	49	;'1'
  1448  1017  3431               	retlw	50	;'2'
  1449  1018  3432               	retlw	51	;'3'
  1450  1019  3433               	retlw	52	;'4'
  1451  101A  3434               	retlw	53	;'5'
  1452  101B  3435               	retlw	54	;'6'
  1453  101C  3436               	retlw	55	;'7'
  1454  101D  3437               	retlw	56	;'8'
  1455  101E  3438               	retlw	34	;'"'
  1456  101F  3422               	retlw	44	;','
  1457  1020  342C               	retlw	49	;'1'
  1458  1021  3431               	retlw	49	;'1'
  1459  1022  3431               	retlw	44	;','
  1460  1023  342C               	retlw	48	;'0'
  1461  1024  3430               	retlw	0
  1462  1025  3400               psect	stringtext2,class=STRCODE,delta=2,noexec
  1463                           global __pstringtext2
  1464                           __pstringtext2:
  1465  1026                     	
  1466                           STR_1:	
  1467  1026                     	retlw	72	;'H'
  1468  1026  3448               	retlw	117	;'u'
  1469  1027  3475               	retlw	109	;'m'
  1470  1028  346D               	retlw	105	;'i'
  1471  1029  3469               	retlw	100	;'d'
  1472  102A  3464               	retlw	105	;'i'
  1473  102B  3469               	retlw	116	;'t'
  1474  102C  3474               	retlw	121	;'y'
  1475  102D  3479               	retlw	32	;' '
  1476  102E  3420               	retlw	58	;':'
  1477  102F  343A               	retlw	32	;' '
  1478  1030  3420               	retlw	0
  1479  1031  3400               psect	stringtext3,class=STRCODE,delta=2,noexec
  1480                           global __pstringtext3
  1481                           __pstringtext3:
  1482  1032                     	
  1483                           STR_3:	
  1484  1032                     	retlw	65	;'A'
  1485  1032  3441               	retlw	84	;'T'
  1486  1033  3454               	retlw	43	;'+'
  1487  1034  342B               	retlw	67	;'C'
  1488  1035  3443               	retlw	87	;'W'
  1489  1036  3457               	retlw	77	;'M'
  1490  1037  344D               	retlw	79	;'O'
  1491  1038  344F               	retlw	68	;'D'
  1492  1039  3444               	retlw	69	;'E'
  1493  103A  3445               	retlw	61	;'='
  1494  103B  343D               	retlw	51	;'3'
  1495  103C  3433               	retlw	0
  1496  103D  3400               psect	stringtext4,class=STRCODE,delta=2,noexec
  1497                           global __pstringtext4
  1498                           __pstringtext4:
  1499  103E                     	
  1500                           STR_2:	
  1501  103E                     	retlw	10
  1502  103E  340A               	retlw	84	;'T'
  1503  103F  3454               	retlw	101	;'e'
  1504  1040  3465               	retlw	109	;'m'
  1505  1041  346D               	retlw	112	;'p'
  1506  1042  3470               	retlw	32	;' '
  1507  1043  3420               	retlw	58	;':'
  1508  1044  343A               	retlw	32	;' '
  1509  1045  3420               	retlw	0
  1510  1046  3400               psect	stringtext5,class=STRCODE,delta=2,noexec
  1511                           global __pstringtext5
  1512                           __pstringtext5:
  1513  0000                     ; #config settings
  1514                           global __CFG_FOSC$
  1515                           __CFG_FOSC$ equ 0x2
  1516  0002                     global __CFG_WDTE$OFF
  1517                           __CFG_WDTE$OFF equ 0x0
  1518  0000                     global __CFG_PWRTE$ON
  1519                           __CFG_PWRTE$ON equ 0x0
  1520  0000                     global __CFG_MCLRE$OFF
  1521                           __CFG_MCLRE$OFF equ 0x0
  1522  0000                     global __CFG_CP$OFF
  1523                           __CFG_CP$OFF equ 0x0
  1524  0000                     global __CFG_BOREN$ON
  1525                           __CFG_BOREN$ON equ 0x0
  1526  0000                     global __CFG_CLKOUTEN$ON
  1527                           __CFG_CLKOUTEN$ON equ 0x0
  1528  0000                     global __CFG_IESO$OFF
  1529                           __CFG_IESO$OFF equ 0x0
  1530  0000                     global __CFG_FCMEN$OFF
  1531                           __CFG_FCMEN$OFF equ 0x0
  1532  0000                     global __CFG_WRT$OFF
  1533                           __CFG_WRT$OFF equ 0x0
  1534  0000                     global __CFG_VCAPEN$OFF
  1535                           __CFG_VCAPEN$OFF equ 0x0
  1536  0000                     global __CFG_STVREN$OFF
  1537                           __CFG_STVREN$OFF equ 0x0
  1538  0000                     global __CFG_BORV$LO
  1539                           __CFG_BORV$LO equ 0x0
  1540  0000                     global __CFG_LPBOR$OFF
  1541                           __CFG_LPBOR$OFF equ 0x0
  1542  0000                     global __CFG_LVP$OFF
  1543                           __CFG_LVP$OFF equ 0x0
  1544  0000                     	file	"C:\Users\dell\AppData\Local\Temp\s2o4."
  1545                           	line	#
  1546                           psect cinit,class=CODE,delta=2
  1547                           global start_initialization
  1548                           start_initialization:
  1549  00B3                     
  1550                           global __initialization
  1551                           __initialization:
  1552  00B3                     DABS 1,8944,0,_gTxBuffer	;BIGRAM
  1553                           psect	bssBANK0,class=BANK0,space=1,noexec
  1554                           global __pbssBANK0
  1555                           __pbssBANK0:
  1556  0049                     _test:
  1557  0049                            ds      2
  1558  0049                     
  1559                           EM1812EntryPoint@wTry:
  1560  004B                            ds      1
  1561  004B                     
  1562                           _wCounter2:
  1563  004C                            ds      1
  1564  004C                     
  1565                           _gUartRXBufferIndex:
  1566  004D                            ds      1
  1567  004D                     
  1568                           _wTimer1IntCounter:
  1569  004E                            ds      1
  1570  004E                     
  1571                           _gTxReadingPosition:
  1572  004F                            ds      1
  1573  004F                     
  1574                           _gTxTransmitSize:
  1575  0050                            ds      1
  1576  0050                     
  1577                           _wTrial:
  1578  0051                            ds      1
  1579  0051                     
  1580                           _wI2CTxSendPos:
  1581  0052                            ds      1
  1582  0052                     
  1583                           _wNewI2CReception:
  1584  0053                            ds      1
  1585  0053                     
  1586                           _wI2CRxNbOfByteToReceived:
  1587  0054                            ds      1
  1588  0054                     
  1589                           _wI2CTxNbOfByteToSend:
  1590  0055                            ds      1
  1591  0055                     
  1592                           _wReceptionCounterPrev:
  1593  0056                            ds      1
  1594  0056                     
  1595                           _wReceptionCounter:
  1596  0057                            ds      1
  1597  0057                     
  1598                           _wReceptionBufferPosition:
  1599  0058                            ds      1
  1600  0058                     
  1601                           _wTimer0Counter:
  1602  0059                            ds      1
  1603  0059                     
  1604                           _wTempState:
  1605  005A                            ds      1
  1606  005A                     
  1607                           _mWritingPosition:
  1608  005B                            ds      1
  1609  005B                     
  1610                           _mCursorDisplayShiftReg:
  1611  005C                            ds      1
  1612  005C                     
  1613                           _mDisplayOnOffReg:
  1614  005D                            ds      1
  1615  005D                     
  1616                           psect	dataBANK0,class=BANK0,space=1,noexec
  1617                           global __pdataBANK0
  1618                           __pdataBANK0:
  1619  005E                     	file	"EM1812.c"
  1620                           	line	96
  1621                           EM1812EntryPoint@F1953:
  1622  005E                            ds      4
  1623  005E                     
  1624                           psect	dataBANK0
  1625                           	file	"./I2C.h"
  1626                           	line	24
  1627                           _wI2CRxBufferSize:
  1628  0062                            ds      1
  1629  0062                     
  1630                           psect	dataBANK0
  1631                           	file	"./I2C.h"
  1632                           	line	23
  1633                           _wI2CTxBufferSize:
  1634  0063                            ds      1
  1635  0063                     
  1636                           psect	dataBANK0
  1637                           	file	"./I2C.h"
  1638                           	line	14
  1639                           _wI2CCommandState:
  1640  0064                            ds      1
  1641  0064                     
  1642                           psect	bssBANK1,class=BANK1,space=1,noexec
  1643                           global __pbssBANK1
  1644                           __pbssBANK1:
  1645  00DB                     EM1812EntryPoint@F1955:
  1646  00DB                            ds      8
  1647  00DB                     
  1648                           _gErrorCode:
  1649  00E3                            ds      1
  1650  00E3                     
  1651                           _wTemperature:
  1652  00E4                            ds      2
  1653  00E4                     
  1654                           _wHumidity:
  1655  00E6                            ds      2
  1656  00E6                     
  1657                           psect	dataBANK1,class=BANK1,space=1,noexec
  1658                           global __pdataBANK1
  1659                           __pdataBANK1:
  1660  00E8                     	file	"161518_temp_main.c"
  1661                           	line	251
  1662                           main@F2305:
  1663  00E8                            ds      4
  1664  00E8                     
  1665                           psect	dataBANK1
  1666                           	file	"161518_temp_main.c"
  1667                           	line	135
  1668                           _wTempSet:
  1669  00EC                            ds      2
  1670  00EC                     
  1671                           psect	bssBANK2,class=BANK2,space=1,noexec
  1672                           global __pbssBANK2
  1673                           __pbssBANK2:
  1674  0120                     _wHexTemp:
  1675  0120                            ds      20
  1676  0120                     
  1677                           _wI2CRxBuffer:
  1678  0134                            ds      20
  1679  0134                     
  1680                           _wI2CTxBuffer:
  1681  0148                            ds      20
  1682  0148                     
  1683                           psect	bssBANK3,class=BANK3,space=1,noexec
  1684                           global __pbssBANK3
  1685                           __pbssBANK3:
  1686  01A0                     _gUartTXBuffer:
  1687  01A0                            ds      50
  1688  01A0                     
  1689                           psect	bssBANK4,class=BANK4,space=1,noexec
  1690                           global __pbssBANK4
  1691                           __pbssBANK4:
  1692  0220                     _wInterruptText:
  1693  0220                            ds      75
  1694  0220                     
  1695                           psect	bssBANK5,class=BANK5,space=1,noexec
  1696                           global __pbssBANK5
  1697                           __pbssBANK5:
  1698  02A0                     _gUartRXBuffer:
  1699  02A0                            ds      50
  1700  02A0                     
  1701                           	file	"C:\Users\dell\AppData\Local\Temp\s2o4."
  1702                           	line	#
  1703                           psect inittext,class=CODE,delta=2
  1704                           global init_ram,btemp
  1705                           init_ram:
  1706  09E9                     	movwf btemp,f
  1707  09E9  00FE               initloop:
  1708  09EA                     	moviw fsr0++
  1709  09EA  0012               	movwi fsr1++
  1710  09EB  001E               	movlw 1
  1711  09EC  3001               subwf btemp,f
  1712  09ED  02FE               movlw 0
  1713  09EE  3000               subwfb btemp+1,f
  1714  09EF  3BFF               	movf btemp+1,w
  1715  09F0  087F               	iorwf btemp,w
  1716  09F1  047E               	skipz
  1717  09F2  1D03               	goto initloop
  1718  09F3  29EA               	retlw 0
  1719  09F4  3400               ; Initialize objects allocated to BANK0
  1720                           	global __pidataBANK0,__pdataBANK0
  1721                           psect cinit,class=CODE,delta=2,merge=1
  1722                           	movlw low(__pidataBANK0)
  1723  00B3  3098               	movwf fsr0l
  1724  00B4  0084               	movlw high(__pidataBANK0)|80h
  1725  00B5  3089               	movwf fsr0h
  1726  00B6  0085               	movlw low(__pdataBANK0)
  1727  00B7  305E               	movwf fsr1l
  1728  00B8  0086               	movlw high(__pdataBANK0)
  1729  00B9  3000               	movwf fsr1h
  1730  00BA  0087               	movlw high(07h)
  1731  00BB  3000               	movwf btemp+1
  1732  00BC  00FF               	movlw low(07h)
  1733  00BD  3007               	fcall init_ram
  1734  00BE  3189  21E9  3180   ; Initialize objects allocated to BANK1
  1735                           	global __pidataBANK1,__pdataBANK1
  1736                           psect cinit,class=CODE,delta=2,merge=1
  1737                           	movlw low(__pidataBANK1)
  1738  00C1  3092               	movwf fsr0l
  1739  00C2  0084               	movlw high(__pidataBANK1)|80h
  1740  00C3  3089               	movwf fsr0h
  1741  00C4  0085               	movlw low(__pdataBANK1)
  1742  00C5  30E8               	movwf fsr1l
  1743  00C6  0086               	movlw high(__pdataBANK1)
  1744  00C7  3000               	movwf fsr1h
  1745  00C8  0087               	movlw high(06h)
  1746  00C9  3000               	movwf btemp+1
  1747  00CA  00FF               	movlw low(06h)
  1748  00CB  3006               	fcall init_ram
  1749  00CC  3189  21E9  3180   	line	#
  1750                           psect clrtext,class=CODE,delta=2
  1751                           global clear_ram0
  1752                           ;	Called with FSR0 containing the base address, and
  1753                           ;	btemp/btemp+1 has the size to clear
  1754                           clear_ram0:
  1755  09DD                     	clrwdt			;clear the watchdog before getting into this loop
  1756  09DD  0064               clrloop0:
  1757  09DE                     	clrf	indf0		;clear RAM location pointed to by FSR
  1758  09DE  0180               	addfsr	0,1
  1759  09DF  3101               	movlw	1
  1760  09E0  3001               	subwf	btemp,f
  1761  09E1  02FE               	movlw	0
  1762  09E2  3000               	subwfb btemp+1,f
  1763  09E3  3BFF               	movf btemp+1,w
  1764  09E4  087F               	iorwf btemp,w
  1765  09E5  047E               	skipz
  1766  09E6  1D03               	goto clrloop0	;have we reached the end yet?
  1767  09E7  29DE               	retlw	0		;all done for this memory range, return
  1768  09E8  3400               ; Clear objects allocated to BIGRAM
  1769                           psect cinit,class=CODE,delta=2,merge=1
  1770                           	global __pbssBIGRAM
  1771                           	movlw	low(__pbssBIGRAM)
  1772  00CF  30F0               	movwf	fsr0l
  1773  00D0  0084               	movlw	high(__pbssBIGRAM)
  1774  00D1  3022               	movwf	fsr0h
  1775  00D2  0085               	movlw	low(0100h)
  1776  00D3  3000               	movwf	btemp
  1777  00D4  00FE               	movlw	high(0100h)
  1778  00D5  3001               	movwf	btemp+1
  1779  00D6  00FF               	fcall	clear_ram0
  1780  00D7  3189  21DD  3180   ; Clear objects allocated to BANK0
  1781                           psect cinit,class=CODE,delta=2,merge=1
  1782                           	global __pbssBANK0
  1783                           	movlw	low(__pbssBANK0)
  1784  00DA  3049               	movwf	fsr0l
  1785  00DB  0084               	movlw	high(__pbssBANK0)
  1786  00DC  3000               	movwf	fsr0h
  1787  00DD  0085               	movlw	low(015h)
  1788  00DE  3015               	movwf	btemp
  1789  00DF  00FE               	movlw	high(015h)
  1790  00E0  3000               	movwf	btemp+1
  1791  00E1  00FF               	fcall	clear_ram0
  1792  00E2  3189  21DD  3180   ; Clear objects allocated to BANK1
  1793                           psect cinit,class=CODE,delta=2,merge=1
  1794                           	global __pbssBANK1
  1795                           	movlw	low(__pbssBANK1)
  1796  00E5  30DB               	movwf	fsr0l
  1797  00E6  0084               	movlw	high(__pbssBANK1)
  1798  00E7  3000               	movwf	fsr0h
  1799  00E8  0085               	movlw	low(0Dh)
  1800  00E9  300D               	movwf	btemp
  1801  00EA  00FE               	movlw	high(0Dh)
  1802  00EB  3000               	movwf	btemp+1
  1803  00EC  00FF               	fcall	clear_ram0
  1804  00ED  3189  21DD  3180   ; Clear objects allocated to BANK2
  1805                           psect cinit,class=CODE,delta=2,merge=1
  1806                           	global __pbssBANK2
  1807                           	movlw	low(__pbssBANK2)
  1808  00F0  3020               	movwf	fsr0l
  1809  00F1  0084               	movlw	high(__pbssBANK2)
  1810  00F2  3001               	movwf	fsr0h
  1811  00F3  0085               	movlw	low(03Ch)
  1812  00F4  303C               	movwf	btemp
  1813  00F5  00FE               	movlw	high(03Ch)
  1814  00F6  3000               	movwf	btemp+1
  1815  00F7  00FF               	fcall	clear_ram0
  1816  00F8  3189  21DD  3180   ; Clear objects allocated to BANK3
  1817                           psect cinit,class=CODE,delta=2,merge=1
  1818                           	global __pbssBANK3
  1819                           	movlw	low(__pbssBANK3)
  1820  00FB  30A0               	movwf	fsr0l
  1821  00FC  0084               	movlw	high(__pbssBANK3)
  1822  00FD  3001               	movwf	fsr0h
  1823  00FE  0085               	movlw	low(032h)
  1824  00FF  3032               	movwf	btemp
  1825  0100  00FE               	movlw	high(032h)
  1826  0101  3000               	movwf	btemp+1
  1827  0102  00FF               	fcall	clear_ram0
  1828  0103  3189  21DD  3180   ; Clear objects allocated to BANK4
  1829                           psect cinit,class=CODE,delta=2,merge=1
  1830                           	global __pbssBANK4
  1831                           	movlw	low(__pbssBANK4)
  1832  0106  3020               	movwf	fsr0l
  1833  0107  0084               	movlw	high(__pbssBANK4)
  1834  0108  3002               	movwf	fsr0h
  1835  0109  0085               	movlw	low(04Bh)
  1836  010A  304B               	movwf	btemp
  1837  010B  00FE               	movlw	high(04Bh)
  1838  010C  3000               	movwf	btemp+1
  1839  010D  00FF               	fcall	clear_ram0
  1840  010E  3189  21DD  3180   ; Clear objects allocated to BANK5
  1841                           psect cinit,class=CODE,delta=2,merge=1
  1842                           	global __pbssBANK5
  1843                           	movlw	low(__pbssBANK5)
  1844  0111  30A0               	movwf	fsr0l
  1845  0112  0084               	movlw	high(__pbssBANK5)
  1846  0113  3002               	movwf	fsr0h
  1847  0114  0085               	movlw	low(032h)
  1848  0115  3032               	movwf	btemp
  1849  0116  00FE               	movlw	high(032h)
  1850  0117  3000               	movwf	btemp+1
  1851  0118  00FF               	fcall	clear_ram0
  1852  0119  3189  21DD  3180   psect cinit,class=CODE,delta=2,merge=1
  1853                           global end_of_initialization,__end_of__initialization
  1854                           
  1855                           ;End of C runtime variable initialization code
  1856                           
  1857                           end_of_initialization:
  1858  011C                     __end_of__initialization:
  1859  011C                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  1860  011C  107E               movlb 0
  1861  011D  0020               ljmp _main	;jump to C main() function
  1862  011E  3181  2920         psect	cstackBANK1,class=BANK1,space=1,noexec
  1863                           global __pcstackBANK1
  1864                           __pcstackBANK1:
  1865  00A0                     	global	EM1812EntryPoint@SetGetTempCommand
  1866                           EM1812EntryPoint@SetGetTempCommand:	; 4 bytes @ 0x0
  1867  00A0                     	ds	4
  1868  00A0                     	global	EM1812EntryPoint@ReceptionBuffer
  1869                           EM1812EntryPoint@ReceptionBuffer:	; 8 bytes @ 0x4
  1870  00A4                     	ds	8
  1871  00A4                     	global	EM1812EntryPoint@oHumidity
  1872                           EM1812EntryPoint@oHumidity:	; 1 bytes @ 0xC
  1873  00AC                     	ds	1
  1874  00AC                     	global	main@wConv
  1875                           main@wConv:	; 4 bytes @ 0xD
  1876  00AD                     	ds	4
  1877  00AD                     	global	main@wReadout
  1878                           main@wReadout:	; 20 bytes @ 0x11
  1879  00B1                     	ds	20
  1880  00B1                     	global	main@wCounter
  1881                           main@wCounter:	; 2 bytes @ 0x25
  1882  00C5                     	ds	2
  1883  00C5                     	global	main@wTemp
  1884                           main@wTemp:	; 2 bytes @ 0x27
  1885  00C7                     	ds	2
  1886  00C7                     	global	main@wIterationCounter
  1887                           main@wIterationCounter:	; 2 bytes @ 0x29
  1888  00C9                     	ds	2
  1889  00C9                     	global	main@wUpdateMenu
  1890                           main@wUpdateMenu:	; 1 bytes @ 0x2B
  1891  00CB                     	ds	1
  1892  00CB                     	global	main@wEditingMode
  1893                           main@wEditingMode:	; 1 bytes @ 0x2C
  1894  00CC                     	ds	1
  1895  00CC                     	global	main@wHumidityPrev
  1896                           main@wHumidityPrev:	; 2 bytes @ 0x2D
  1897  00CD                     	ds	2
  1898  00CD                     	global	main@wTemperaturePrev
  1899                           main@wTemperaturePrev:	; 2 bytes @ 0x2F
  1900  00CF                     	ds	2
  1901  00CF                     	global	main@wDebounceEnter
  1902                           main@wDebounceEnter:	; 2 bytes @ 0x31
  1903  00D1                     	ds	2
  1904  00D1                     	global	main@wDebounceUp
  1905                           main@wDebounceUp:	; 2 bytes @ 0x33
  1906  00D3                     	ds	2
  1907  00D3                     	global	main@wDebounceDown
  1908                           main@wDebounceDown:	; 2 bytes @ 0x35
  1909  00D5                     	ds	2
  1910  00D5                     	global	main@wUpBottonPressed
  1911                           main@wUpBottonPressed:	; 1 bytes @ 0x37
  1912  00D7                     	ds	1
  1913  00D7                     	global	main@wDownBottonPressed
  1914                           main@wDownBottonPressed:	; 1 bytes @ 0x38
  1915  00D8                     	ds	1
  1916  00D8                     	global	main@wEnterBottonPressed
  1917                           main@wEnterBottonPressed:	; 1 bytes @ 0x39
  1918  00D9                     	ds	1
  1919  00D9                     	global	main@wMenu
  1920                           main@wMenu:	; 1 bytes @ 0x3A
  1921  00DA                     	ds	1
  1922  00DA                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  1923                           global __pcstackCOMMON
  1924                           __pcstackCOMMON:
  1925  0070                     ?_I2CInit:	; 1 bytes @ 0x0
  1926  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1927  0070                     ?_clearDisplay:	; 1 bytes @ 0x0
  1928  0070                     ?_powerOnLcd:	; 1 bytes @ 0x0
  1929  0070                     ?_setCursorOff:	; 1 bytes @ 0x0
  1930  0070                     ?_moveCursorToHome:	; 1 bytes @ 0x0
  1931  0070                     ?_setNotBlinkingCursor:	; 1 bytes @ 0x0
  1932  0070                     ??_TempUpdateRequest:	; 1 bytes @ 0x0
  1933  0070                     ?_setData:	; 1 bytes @ 0x0
  1934  0070                     ?_writeInsChk:	; 1 bytes @ 0x0
  1935  0070                     ?_writeTxtChk:	; 1 bytes @ 0x0
  1936  0070                     ?_SetToSendDataToLCD:	; 1 bytes @ 0x0
  1937  0070                     ?_waitLCDBusy:	; 1 bytes @ 0x0
  1938  0070                     ?_writeInsNoChk:	; 1 bytes @ 0x0
  1939  0070                     ?_PrintLog:	; 1 bytes @ 0x0
  1940  0070                     ?_main:	; 1 bytes @ 0x0
  1941  0070                     ?_myint:	; 1 bytes @ 0x0
  1942  0070                     ?_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  1943  0070                     ?i1_setData:	; 1 bytes @ 0x0
  1944  0070                     ??i1_setData:	; 1 bytes @ 0x0
  1945  0070                     ?i1_writeTxtChk:	; 1 bytes @ 0x0
  1946  0070                     ?i1_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  1947  0070                     ??i1_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  1948  0070                     ?i1_SetToSendDataToLCD:	; 1 bytes @ 0x0
  1949  0070                     ??i1_SetToSendDataToLCD:	; 1 bytes @ 0x0
  1950  0070                     ?i1_waitLCDBusy:	; 1 bytes @ 0x0
  1951  0070                     ??i1_waitLCDBusy:	; 1 bytes @ 0x0
  1952  0070                     	global	?_I2C_Interrupt
  1953                           ?_I2C_Interrupt:	; 2 bytes @ 0x0
  1954  0070                     ?_TempUpdateRequest:	; 2 bytes @ 0x0
  1955  0070                     	ds	2
  1956  0070                     ??_I2C_Interrupt:	; 1 bytes @ 0x2
  1957  0072                     	global	i1setData@iValue
  1958                           i1setData@iValue:	; 1 bytes @ 0x2
  1959  0072                     	ds	1
  1960  0072                     	global	i1waitLCDBusy@busyFlag
  1961                           i1waitLCDBusy@busyFlag:	; 2 bytes @ 0x3
  1962  0073                     	ds	1
  1963  0073                     	global	I2C_Interrupt@oErrorCode
  1964                           I2C_Interrupt@oErrorCode:	; 1 bytes @ 0x4
  1965  0074                     	ds	1
  1966  0074                     ?i1_setCursorPosition:	; 1 bytes @ 0x5
  1967  0075                     	global	i1setCursorPosition@iPosition
  1968                           i1setCursorPosition@iPosition:	; 1 bytes @ 0x5
  1969  0075                     	ds	1
  1970  0075                     ??i1_setCursorPosition:	; 1 bytes @ 0x6
  1971  0076                     	ds	2
  1972  0076                     	global	i1setCursorPosition@iLine
  1973                           i1setCursorPosition@iLine:	; 1 bytes @ 0x8
  1974  0078                     	ds	1
  1975  0078                     	global	i1setCursorPosition@wLCDIndex
  1976                           i1setCursorPosition@wLCDIndex:	; 1 bytes @ 0x9
  1977  0079                     	ds	1
  1978  0079                     ??i1_writeTxtChk:	; 1 bytes @ 0xA
  1979  007A                     	ds	2
  1980  007A                     	global	i1writeTxtChk@iOpCode
  1981                           i1writeTxtChk@iOpCode:	; 1 bytes @ 0xC
  1982  007C                     	ds	1
  1983  007C                     	global	i1lcdWriteText@wCharReadingPos
  1984                           i1lcdWriteText@wCharReadingPos:	; 1 bytes @ 0xD
  1985  007D                     	ds	1
  1986  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1987                           global __pcstackBANK0
  1988                           __pcstackBANK0:
  1989  0020                     ?i1_lcdWriteText:	; 1 bytes @ 0x0
  1990  0020                     	global	i1lcdWriteText@iText
  1991                           i1lcdWriteText@iText:	; 2 bytes @ 0x0
  1992  0020                     	ds	2
  1993  0020                     ??i1_lcdWriteText:	; 1 bytes @ 0x2
  1994  0022                     	ds	2
  1995  0022                     ??_myint:	; 1 bytes @ 0x4
  1996  0024                     	ds	2
  1997  0024                     	global	myint@wText
  1998                           myint@wText:	; 2 bytes @ 0x6
  1999  0026                     	ds	2
  2000  0026                     	global	myint@wI2CError
  2001                           myint@wI2CError:	; 2 bytes @ 0x8
  2002  0028                     	ds	2
  2003  0028                     ??_setData:	; 1 bytes @ 0xA
  2004  002A                     ??_SetToSendDataToLCD:	; 1 bytes @ 0xA
  2005  002A                     ??_waitLCDBusy:	; 1 bytes @ 0xA
  2006  002A                     ?_Debounce:	; 1 bytes @ 0xA
  2007  002A                     ??_SetToReadDataFromLCD:	; 1 bytes @ 0xA
  2008  002A                     	global	?_strlen
  2009                           ?_strlen:	; 2 bytes @ 0xA
  2010  002A                     ?_memset:	; 2 bytes @ 0xA
  2011  002A                     ?_memcpy:	; 2 bytes @ 0xA
  2012  002A                     	global	?_GetI2CStatus
  2013                           ?_GetI2CStatus:	; 2 bytes @ 0xA
  2014  002A                     	global	?_I2C_GetData
  2015                           ?_I2C_GetData:	; 2 bytes @ 0xA
  2016  002A                     	global	?___awdiv
  2017                           ?___awdiv:	; 2 bytes @ 0xA
  2018  002A                     	global	?___awmod
  2019                           ?___awmod:	; 2 bytes @ 0xA
  2020  002A                     	global	Debounce@ioTimer
  2021                           Debounce@ioTimer:	; 1 bytes @ 0xA
  2022  002A                     	global	I2C_GetData@iRxNumberOfByteExpected
  2023                           I2C_GetData@iRxNumberOfByteExpected:	; 1 bytes @ 0xA
  2024  002A                     	global	___awdiv@divisor
  2025                           ___awdiv@divisor:	; 2 bytes @ 0xA
  2026  002A                     	global	___awmod@divisor
  2027                           ___awmod@divisor:	; 2 bytes @ 0xA
  2028  002A                     	global	memcpy@d1
  2029                           memcpy@d1:	; 2 bytes @ 0xA
  2030  002A                     	global	memset@dest
  2031                           memset@dest:	; 2 bytes @ 0xA
  2032  002A                     	global	strlen@s
  2033                           strlen@s:	; 2 bytes @ 0xA
  2034  002A                     	ds	1
  2035  002A                     	global	Debounce@swPressed
  2036                           Debounce@swPressed:	; 1 bytes @ 0xB
  2037  002B                     	ds	1
  2038  002B                     ??_strlen:	; 1 bytes @ 0xC
  2039  002C                     ??_GetI2CStatus:	; 1 bytes @ 0xC
  2040  002C                     ??_I2C_GetData:	; 1 bytes @ 0xC
  2041  002C                     ??_Debounce:	; 1 bytes @ 0xC
  2042  002C                     	global	setData@iValue
  2043                           setData@iValue:	; 1 bytes @ 0xC
  2044  002C                     	global	___awdiv@dividend
  2045                           ___awdiv@dividend:	; 2 bytes @ 0xC
  2046  002C                     	global	___awmod@dividend
  2047                           ___awmod@dividend:	; 2 bytes @ 0xC
  2048  002C                     	global	memcpy@s1
  2049                           memcpy@s1:	; 2 bytes @ 0xC
  2050  002C                     	global	memset@c
  2051                           memset@c:	; 2 bytes @ 0xC
  2052  002C                     	ds	1
  2053  002C                     ??_writeInsNoChk:	; 1 bytes @ 0xD
  2054  002D                     	global	I2C_GetData@iAdress
  2055                           I2C_GetData@iAdress:	; 1 bytes @ 0xD
  2056  002D                     	global	waitLCDBusy@busyFlag
  2057                           waitLCDBusy@busyFlag:	; 2 bytes @ 0xD
  2058  002D                     	ds	1
  2059  002D                     ??___awdiv:	; 1 bytes @ 0xE
  2060  002E                     ??___awmod:	; 1 bytes @ 0xE
  2061  002E                     	global	Debounce@iSwitch
  2062                           Debounce@iSwitch:	; 1 bytes @ 0xE
  2063  002E                     	global	writeInsNoChk@iOpCode
  2064                           writeInsNoChk@iOpCode:	; 1 bytes @ 0xE
  2065  002E                     	global	memcpy@n
  2066                           memcpy@n:	; 2 bytes @ 0xE
  2067  002E                     	global	memset@n
  2068                           memset@n:	; 2 bytes @ 0xE
  2069  002E                     	global	strlen@a
  2070                           strlen@a:	; 2 bytes @ 0xE
  2071  002E                     	ds	1
  2072  002E                     ?_setCursorPosition:	; 1 bytes @ 0xF
  2073  002F                     ??_writeInsChk:	; 1 bytes @ 0xF
  2074  002F                     	global	writeInsChk@iOpCode
  2075                           writeInsChk@iOpCode:	; 1 bytes @ 0xF
  2076  002F                     	global	setCursorPosition@iPosition
  2077                           setCursorPosition@iPosition:	; 1 bytes @ 0xF
  2078  002F                     	global	___awdiv@counter
  2079                           ___awdiv@counter:	; 1 bytes @ 0xF
  2080  002F                     	global	___awmod@counter
  2081                           ___awmod@counter:	; 1 bytes @ 0xF
  2082  002F                     	ds	1
  2083  002F                     ??_memset:	; 1 bytes @ 0x10
  2084  0030                     ??_memcpy:	; 1 bytes @ 0x10
  2085  0030                     ??_initLCD:	; 1 bytes @ 0x10
  2086  0030                     ??_clearDisplay:	; 1 bytes @ 0x10
  2087  0030                     ??_powerOnLcd:	; 1 bytes @ 0x10
  2088  0030                     ??_setCursorOff:	; 1 bytes @ 0x10
  2089  0030                     ??_moveCursorToHome:	; 1 bytes @ 0x10
  2090  0030                     ??_setNotBlinkingCursor:	; 1 bytes @ 0x10
  2091  0030                     ??_setCursorPosition:	; 1 bytes @ 0x10
  2092  0030                     ?_strcpy:	; 1 bytes @ 0x10
  2093  0030                     	global	___awdiv@sign
  2094                           ___awdiv@sign:	; 1 bytes @ 0x10
  2095  0030                     	global	___awmod@sign
  2096                           ___awmod@sign:	; 1 bytes @ 0x10
  2097  0030                     	global	strcpy@src
  2098                           strcpy@src:	; 2 bytes @ 0x10
  2099  0030                     	ds	1
  2100  0030                     	global	memcpy@tmp
  2101                           memcpy@tmp:	; 1 bytes @ 0x11
  2102  0031                     	global	___awdiv@quotient
  2103                           ___awdiv@quotient:	; 2 bytes @ 0x11
  2104  0031                     	ds	1
  2105  0031                     ??_strcpy:	; 1 bytes @ 0x12
  2106  0032                     	global	setCursorPosition@iLine
  2107                           setCursorPosition@iLine:	; 1 bytes @ 0x12
  2108  0032                     	global	memcpy@d
  2109                           memcpy@d:	; 2 bytes @ 0x12
  2110  0032                     	ds	1
  2111  0032                     ?_printEM1812:	; 1 bytes @ 0x13
  2112  0033                     	global	setCursorPosition@wLCDIndex
  2113                           setCursorPosition@wLCDIndex:	; 1 bytes @ 0x13
  2114  0033                     	global	printEM1812@wVariable
  2115                           printEM1812@wVariable:	; 2 bytes @ 0x13
  2116  0033                     	ds	1
  2117  0033                     ??_writeTxtChk:	; 1 bytes @ 0x14
  2118  0034                     	global	memcpy@s
  2119                           memcpy@s:	; 2 bytes @ 0x14
  2120  0034                     	global	memset@k
  2121                           memset@k:	; 2 bytes @ 0x14
  2122  0034                     	global	strcpy@s
  2123                           strcpy@s:	; 2 bytes @ 0x14
  2124  0034                     	ds	1
  2125  0034                     	global	printEM1812@oTextOut
  2126                           printEM1812@oTextOut:	; 1 bytes @ 0x15
  2127  0035                     	ds	1
  2128  0035                     ??_printEM1812:	; 1 bytes @ 0x16
  2129  0036                     ?_Send_UART_Data:	; 1 bytes @ 0x16
  2130  0036                     	global	?_I2C_SendData
  2131                           ?_I2C_SendData:	; 2 bytes @ 0x16
  2132  0036                     ?_GetNewReceivedData:	; 2 bytes @ 0x16
  2133  0036                     	global	Send_UART_Data@iData_Length
  2134                           Send_UART_Data@iData_Length:	; 1 bytes @ 0x16
  2135  0036                     	global	writeTxtChk@iOpCode
  2136                           writeTxtChk@iOpCode:	; 1 bytes @ 0x16
  2137  0036                     	global	I2C_SendData@iNumberofByte
  2138                           I2C_SendData@iNumberofByte:	; 1 bytes @ 0x16
  2139  0036                     	global	GetNewReceivedData@oDataSize
  2140                           GetNewReceivedData@oDataSize:	; 1 bytes @ 0x16
  2141  0036                     	global	strcpy@d
  2142                           strcpy@d:	; 1 bytes @ 0x16
  2143  0036                     	global	memset@s
  2144                           memset@s:	; 2 bytes @ 0x16
  2145  0036                     	ds	1
  2146  0036                     ?_lcdWriteText:	; 1 bytes @ 0x17
  2147  0037                     ??_GetNewReceivedData:	; 1 bytes @ 0x17
  2148  0037                     ??_Send_UART_Data:	; 1 bytes @ 0x17
  2149  0037                     	global	strcpy@dest
  2150                           strcpy@dest:	; 1 bytes @ 0x17
  2151  0037                     	global	lcdWriteText@iText
  2152                           lcdWriteText@iText:	; 2 bytes @ 0x17
  2153  0037                     	ds	1
  2154  0037                     ??_I2CInit:	; 1 bytes @ 0x18
  2155  0038                     ??_I2C_SendData:	; 1 bytes @ 0x18
  2156  0038                     ?_strcat:	; 1 bytes @ 0x18
  2157  0038                     	global	printEM1812@wUnity
  2158                           printEM1812@wUnity:	; 1 bytes @ 0x18
  2159  0038                     	global	strcat@src
  2160                           strcat@src:	; 2 bytes @ 0x18
  2161  0038                     	ds	1
  2162  0038                     ??_lcdWriteText:	; 1 bytes @ 0x19
  2163  0039                     	global	Send_UART_Data@iData
  2164                           Send_UART_Data@iData:	; 1 bytes @ 0x19
  2165  0039                     	global	printEM1812@wDecimal
  2166                           printEM1812@wDecimal:	; 1 bytes @ 0x19
  2167  0039                     	global	GetNewReceivedData@oData
  2168                           GetNewReceivedData@oData:	; 1 bytes @ 0x19
  2169  0039                     	ds	1
  2170  0039                     ??_strcat:	; 1 bytes @ 0x1A
  2171  003A                     	global	printEM1812@wIsNegative
  2172                           printEM1812@wIsNegative:	; 1 bytes @ 0x1A
  2173  003A                     	global	I2C_SendData@iData
  2174                           I2C_SendData@iData:	; 1 bytes @ 0x1A
  2175  003A                     	ds	1
  2176  003A                     	global	?_EM1812EntryPoint
  2177                           ?_EM1812EntryPoint:	; 2 bytes @ 0x1B
  2178  003B                     	global	lcdWriteText@wCharReadingPos
  2179                           lcdWriteText@wCharReadingPos:	; 1 bytes @ 0x1B
  2180  003B                     	global	printEM1812@wTen
  2181                           printEM1812@wTen:	; 1 bytes @ 0x1B
  2182  003B                     	global	EM1812EntryPoint@oTemperature
  2183                           EM1812EntryPoint@oTemperature:	; 1 bytes @ 0x1B
  2184  003B                     	ds	1
  2185  003B                     ??_PrintLog:	; 1 bytes @ 0x1C
  2186  003C                     	global	printEM1812@wWritingPosition
  2187                           printEM1812@wWritingPosition:	; 1 bytes @ 0x1C
  2188  003C                     	global	strcat@dest
  2189                           strcat@dest:	; 1 bytes @ 0x1C
  2190  003C                     	ds	1
  2191  003C                     ??_EM1812EntryPoint:	; 1 bytes @ 0x1D
  2192  003D                     ?_AddTrace:	; 1 bytes @ 0x1D
  2193  003D                     	global	AddTrace@iSizeOfoText
  2194                           AddTrace@iSizeOfoText:	; 1 bytes @ 0x1D
  2195  003D                     	ds	1
  2196  003D                     	global	PrintLog@wInterruptTextLen
  2197                           PrintLog@wInterruptTextLen:	; 1 bytes @ 0x1E
  2198  003E                     	global	AddTrace@iText
  2199                           AddTrace@iText:	; 2 bytes @ 0x1E
  2200  003E                     	ds	1
  2201  003E                     	global	PrintLog@iText
  2202                           PrintLog@iText:	; 1 bytes @ 0x1F
  2203  003F                     	ds	1
  2204  003F                     ??_AddTrace:	; 1 bytes @ 0x20
  2205  0040                     	ds	6
  2206  0040                     	global	AddTrace@oText
  2207                           AddTrace@oText:	; 1 bytes @ 0x26
  2208  0046                     	ds	1
  2209  0046                     ??_main:	; 1 bytes @ 0x27
  2210  0047                     	ds	2
  2211  0047                     ;!
  2212                           ;!Data Sizes:
  2213                           ;!    Strings     71
  2214                           ;!    Constant    0
  2215                           ;!    Data        13
  2216                           ;!    BSS         269
  2217                           ;!    Persistent  0
  2218                           ;!    Stack       0
  2219                           ;!
  2220                           ;!Auto Spaces:
  2221                           ;!    Space          Size  Autos    Used
  2222                           ;!    COMMON           14     14      14
  2223                           ;!    BANK0            80     41      69
  2224                           ;!    BANK1            80     59      78
  2225                           ;!    BANK2            80      0      60
  2226                           ;!    BANK3            80      0      50
  2227                           ;!    BANK4            80      0      75
  2228                           ;!    BANK5            80      0      50
  2229                           ;!    BANK6            80      0       0
  2230                           ;!    BANK7            80      0       0
  2231                           ;!    BANK8            80      0       0
  2232                           ;!    BANK9            32      0       0
  2233                           ;!    BANK10            0      0       0
  2234                           ;!    BANK11            0      0       0
  2235                           ;!    BANK12            0      0       0
  2236                           
  2237                           ;!
  2238                           ;!Pointer List with Targets:
  2239                           ;!
  2240                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 75
  2241                           ;!		 -> STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), wInterruptText(BANK4[
                                 75]), 
  2242                           ;!
  2243                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 75
  2244                           ;!		 -> STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), wInterruptText(BANK4[
                                 75]), 
  2245                           ;!
  2246                           ;!    strcpy@dest	PTR unsigned char  size(1) Largest target is 75
  2247                           ;!		 -> wInterruptText(BANK4[75]), 
  2248                           ;!
  2249                           ;!    strcpy@d	PTR unsigned char  size(1) Largest target is 75
  2250                           ;!		 -> wInterruptText(BANK4[75]), 
  2251                           ;!
  2252                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
  2253                           ;!		 -> STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), 
  2254                           ;!
  2255                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
  2256                           ;!		 -> STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), 
  2257                           ;!
  2258                           ;!    sp__strcpy	PTR unsigned char  size(1) Largest target is 75
  2259                           ;!		 -> wInterruptText(BANK4[75]), 
  2260                           ;!
  2261                           ;!    strcat@src	PTR const unsigned char  size(2) Largest target is 20
  2262                           ;!		 -> STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), 
  2263                           ;!
  2264                           ;!    strcat@dest	PTR unsigned char  size(1) Largest target is 75
  2265                           ;!		 -> wInterruptText(BANK4[75]), 
  2266                           ;!
  2267                           ;!    memset@dest	PTR void  size(2) Largest target is 75
  2268                           ;!		 -> wI2CTxBuffer(BANK2[20]), wInterruptText(BANK4[75]), 
  2269                           ;!
  2270                           ;!    memset@s	PTR unsigned char  size(2) Largest target is 75
  2271                           ;!		 -> wI2CTxBuffer(BANK2[20]), wInterruptText(BANK4[75]), 
  2272                           ;!
  2273                           ;!    memcpy@d1	PTR void  size(2) Largest target is 256
  2274                           ;!		 -> wI2CTxBuffer(BANK2[20]), EM1812EntryPoint@ReceptionBuffer(BANK1[8]), gUartTXBuff
                                 er(BANK3[50]), gTxBuffer(BIGRAM[256]), 
  2275                           ;!
  2276                           ;!    memcpy@d	PTR unsigned char  size(2) Largest target is 256
  2277                           ;!		 -> wI2CTxBuffer(BANK2[20]), EM1812EntryPoint@ReceptionBuffer(BANK1[8]), gUartTXBuff
                                 er(BANK3[50]), gTxBuffer(BIGRAM[256]), 
  2278                           ;!
  2279                           ;!    memcpy@s1	PTR const void  size(2) Largest target is 50
  2280                           ;!		 -> wI2CRxBuffer(BANK2[20]), EM1812EntryPoint@SetGetTempCommand(BANK1[4]), STR_4(COD
                                 E[38]), STR_3(CODE[12]), 
  2281                           ;!		 -> gUartTXBuffer(BANK3[50]), 
  2282                           ;!
  2283                           ;!    memcpy@s	PTR const unsigned char  size(2) Largest target is 50
  2284                           ;!		 -> wI2CRxBuffer(BANK2[20]), EM1812EntryPoint@SetGetTempCommand(BANK1[4]), STR_4(COD
                                 E[38]), STR_3(CODE[12]), 
  2285                           ;!		 -> gUartTXBuffer(BANK3[50]), 
  2286                           ;!
  2287                           ;!    sp__strcat	PTR unsigned char  size(1) Largest target is 75
  2288                           ;!		 -> wInterruptText(BANK4[75]), 
  2289                           ;!
  2290                           ;!    AddTrace@iText	PTR unsigned char  size(2) Largest target is 20
  2291                           ;!		 -> STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), 
  2292                           ;!
  2293                           ;!    AddTrace@oText	PTR unsigned char  size(1) Largest target is 75
  2294                           ;!		 -> wInterruptText(BANK4[75]), 
  2295                           ;!
  2296                           ;!    GetNewReceivedData@oData	PTR unsigned char  size(1) Largest target is 8
  2297                           ;!		 -> EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 
  2298                           ;!
  2299                           ;!    I2C_SendData@iData	PTR unsigned char  size(1) Largest target is 4
  2300                           ;!		 -> EM1812EntryPoint@SetGetTempCommand(BANK1[4]), 
  2301                           ;!
  2302                           ;!    EM1812EntryPoint@oTemperature	PTR short  size(1) Largest target is 2
  2303                           ;!		 -> wTemperature(BANK1[2]), 
  2304                           ;!
  2305                           ;!    EM1812EntryPoint@oHumidity	PTR short  size(1) Largest target is 2
  2306                           ;!		 -> wHumidity(BANK1[2]), 
  2307                           ;!
  2308                           ;!    printEM1812@oTextOut	PTR unsigned char  size(1) Largest target is 20
  2309                           ;!		 -> main@wReadout(BANK1[20]), 
  2310                           ;!
  2311                           ;!    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
  2312                           ;!		 -> myint@wText(BANK0[2]), wInterruptText(BANK4[75]), 
  2313                           ;!
  2314                           ;!    sp__memcpy	PTR void  size(2) Largest target is 256
  2315                           ;!		 -> wI2CTxBuffer(BANK2[20]), EM1812EntryPoint@ReceptionBuffer(BANK1[8]), gUartTXBuff
                                 er(BANK3[50]), gTxBuffer(BIGRAM[256]), 
  2316                           ;!
  2317                           ;!    Send_UART_Data@iData	PTR unsigned char  size(1) Largest target is 50
  2318                           ;!		 -> gUartTXBuffer(BANK3[50]), 
  2319                           ;!
  2320                           ;!    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
  2321                           ;!		 -> main@wEnterBottonPressed(BANK1[1]), main@wDownBottonPressed(BANK1[1]), main@wUpB
                                 ottonPressed(BANK1[1]), 
  2322                           ;!
  2323                           ;!    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
  2324                           ;!		 -> main@wDebounceDown(BANK1[2]), main@wDebounceUp(BANK1[2]), main@wDebounceEnter(BA
                                 NK1[2]), 
  2325                           ;!
  2326                           ;!    sp__memset	PTR void  size(2) Largest target is 75
  2327                           ;!		 -> wI2CTxBuffer(BANK2[20]), wInterruptText(BANK4[75]), 
  2328                           ;!
  2329                           ;!    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
  2330                           ;!		 -> wInterruptText(BANK4[75]), 
  2331                           ;!
  2332                           
  2333                           
  2334                           ;!
  2335                           ;!Critical Paths under _main in COMMON
  2336                           ;!
  2337                           ;!    None.
  2338                           ;!
  2339                           ;!Critical Paths under _myint in COMMON
  2340                           ;!
  2341                           ;!    _myint->i1_lcdWriteText
  2342                           ;!    i1_lcdWriteText->i1_writeTxtChk
  2343                           ;!    i1_writeTxtChk->i1_setCursorPosition
  2344                           ;!    i1_setCursorPosition->i1_waitLCDBusy
  2345                           ;!
  2346                           ;!Critical Paths under _main in BANK0
  2347                           ;!
  2348                           ;!    _main->_AddTrace
  2349                           ;!    _setNotBlinkingCursor->_writeInsChk
  2350                           ;!    _setCursorOff->_writeInsChk
  2351                           ;!    _printEM1812->___awdiv
  2352                           ;!    _powerOnLcd->_writeInsChk
  2353                           ;!    _moveCursorToHome->_writeInsChk
  2354                           ;!    _initLCD->_writeInsChk
  2355                           ;!    _clearDisplay->_writeInsChk
  2356                           ;!    _writeInsChk->_waitLCDBusy
  2357                           ;!    _writeInsChk->_writeInsNoChk
  2358                           ;!    _writeInsNoChk->_setData
  2359                           ;!    _Send_UART_Data->_memcpy
  2360                           ;!    _PrintLog->_lcdWriteText
  2361                           ;!    _lcdWriteText->_writeTxtChk
  2362                           ;!    _writeTxtChk->_setCursorPosition
  2363                           ;!    _setCursorPosition->_waitLCDBusy
  2364                           ;!    _I2CInit->_memset
  2365                           ;!    _EM1812EntryPoint->_I2C_SendData
  2366                           ;!    _I2C_SendData->_memcpy
  2367                           ;!    _GetNewReceivedData->_memcpy
  2368                           ;!    _AddTrace->_strcat
  2369                           ;!    _strcat->_strcpy
  2370                           ;!    _strcpy->_strlen
  2371                           ;!
  2372                           ;!Critical Paths under _myint in BANK0
  2373                           ;!
  2374                           ;!    _myint->i1_lcdWriteText
  2375                           ;!
  2376                           ;!Critical Paths under _main in BANK1
  2377                           ;!
  2378                           ;!    _main->_EM1812EntryPoint
  2379                           ;!
  2380                           ;!Critical Paths under _myint in BANK1
  2381                           ;!
  2382                           ;!    None.
  2383                           ;!
  2384                           ;!Critical Paths under _main in BANK2
  2385                           ;!
  2386                           ;!    None.
  2387                           ;!
  2388                           ;!Critical Paths under _myint in BANK2
  2389                           ;!
  2390                           ;!    None.
  2391                           ;!
  2392                           ;!Critical Paths under _main in BANK3
  2393                           ;!
  2394                           ;!    None.
  2395                           ;!
  2396                           ;!Critical Paths under _myint in BANK3
  2397                           ;!
  2398                           ;!    None.
  2399                           ;!
  2400                           ;!Critical Paths under _main in BANK4
  2401                           ;!
  2402                           ;!    None.
  2403                           ;!
  2404                           ;!Critical Paths under _myint in BANK4
  2405                           ;!
  2406                           ;!    None.
  2407                           ;!
  2408                           ;!Critical Paths under _main in BANK5
  2409                           ;!
  2410                           ;!    None.
  2411                           ;!
  2412                           ;!Critical Paths under _myint in BANK5
  2413                           ;!
  2414                           ;!    None.
  2415                           ;!
  2416                           ;!Critical Paths under _main in BANK6
  2417                           ;!
  2418                           ;!    None.
  2419                           ;!
  2420                           ;!Critical Paths under _myint in BANK6
  2421                           ;!
  2422                           ;!    None.
  2423                           ;!
  2424                           ;!Critical Paths under _main in BANK7
  2425                           ;!
  2426                           ;!    None.
  2427                           ;!
  2428                           ;!Critical Paths under _myint in BANK7
  2429                           ;!
  2430                           ;!    None.
  2431                           ;!
  2432                           ;!Critical Paths under _main in BANK8
  2433                           ;!
  2434                           ;!    None.
  2435                           ;!
  2436                           ;!Critical Paths under _myint in BANK8
  2437                           ;!
  2438                           ;!    None.
  2439                           ;!
  2440                           ;!Critical Paths under _main in BANK9
  2441                           ;!
  2442                           ;!    None.
  2443                           ;!
  2444                           ;!Critical Paths under _myint in BANK9
  2445                           ;!
  2446                           ;!    None.
  2447                           ;!
  2448                           ;!Critical Paths under _main in BANK10
  2449                           ;!
  2450                           ;!    None.
  2451                           ;!
  2452                           ;!Critical Paths under _myint in BANK10
  2453                           ;!
  2454                           ;!    None.
  2455                           ;!
  2456                           ;!Critical Paths under _main in BANK11
  2457                           ;!
  2458                           ;!    None.
  2459                           ;!
  2460                           ;!Critical Paths under _myint in BANK11
  2461                           ;!
  2462                           ;!    None.
  2463                           ;!
  2464                           ;!Critical Paths under _main in BANK12
  2465                           ;!
  2466                           ;!    None.
  2467                           ;!
  2468                           ;!Critical Paths under _myint in BANK12
  2469                           ;!
  2470                           ;!    None.
  2471                           
  2472 ;;
  2473 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2474 ;;
  2475                           
  2476                           ;!
  2477                           ;!Call Graph Tables:
  2478                           ;!
  2479                           ;! ---------------------------------------------------------------------------------
  2480                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2481                           ;! ---------------------------------------------------------------------------------
  2482                           ;! (0) _main                                                48    48      0   22956
  2483                           ;!                                             39 BANK0      2     2      0
  2484                           ;!                                             13 BANK1     46    46      0
  2485                           ;!                           _AddTrace
  2486                           ;!                           _Debounce
  2487                           ;!                   _EM1812EntryPoint
  2488                           ;!                            _I2CInit
  2489                           ;!                           _PrintLog
  2490                           ;!                     _Send_UART_Data
  2491                           ;!                       _clearDisplay
  2492                           ;!                            _initLCD
  2493                           ;!                             _memcpy
  2494                           ;!                             _memset
  2495                           ;!                   _moveCursorToHome
  2496                           ;!                         _powerOnLcd
  2497                           ;!                        _printEM1812
  2498                           ;!                       _setCursorOff
  2499                           ;!                  _setCursorPosition
  2500                           ;!               _setNotBlinkingCursor
  2501                           ;! ---------------------------------------------------------------------------------
  2502                           ;! (1) _setNotBlinkingCursor                                 1     1      0     178
  2503                           ;!                                             16 BANK0      1     1      0
  2504                           ;!                        _writeInsChk
  2505                           ;! ---------------------------------------------------------------------------------
  2506                           ;! (1) _setCursorOff                                         1     1      0     178
  2507                           ;!                                             16 BANK0      1     1      0
  2508                           ;!                        _writeInsChk
  2509                           ;! ---------------------------------------------------------------------------------
  2510                           ;! (1) _printEM1812                                         10     7      3    2050
  2511                           ;!                                             19 BANK0     10     7      3
  2512                           ;!                            ___awdiv
  2513                           ;!                            ___awmod
  2514                           ;! ---------------------------------------------------------------------------------
  2515                           ;! (2) ___awmod                                              7     3      4     600
  2516                           ;!                                             10 BANK0      7     3      4
  2517                           ;! ---------------------------------------------------------------------------------
  2518                           ;! (2) ___awdiv                                              9     5      4     604
  2519                           ;!                                             10 BANK0      9     5      4
  2520                           ;! ---------------------------------------------------------------------------------
  2521                           ;! (1) _powerOnLcd                                           1     1      0     178
  2522                           ;!                                             16 BANK0      1     1      0
  2523                           ;!                        _writeInsChk
  2524                           ;! ---------------------------------------------------------------------------------
  2525                           ;! (1) _moveCursorToHome                                     0     0      0     178
  2526                           ;!                        _writeInsChk
  2527                           ;! ---------------------------------------------------------------------------------
  2528                           ;! (1) _initLCD                                              1     1      0     444
  2529                           ;!                                             16 BANK0      1     1      0
  2530                           ;!                       _clearDisplay
  2531                           ;!                            _setData
  2532                           ;!                        _writeInsChk
  2533                           ;! ---------------------------------------------------------------------------------
  2534                           ;! (2) _clearDisplay                                         0     0      0     178
  2535                           ;!                        _writeInsChk
  2536                           ;! ---------------------------------------------------------------------------------
  2537                           ;! (2) _writeInsChk                                          1     1      0     178
  2538                           ;!                                             15 BANK0      1     1      0
  2539                           ;!                        _waitLCDBusy
  2540                           ;!                      _writeInsNoChk
  2541                           ;! ---------------------------------------------------------------------------------
  2542                           ;! (3) _writeInsNoChk                                        2     2      0     132
  2543                           ;!                                             13 BANK0      2     2      0
  2544                           ;!                 _SetToSendDataToLCD
  2545                           ;!                            _setData
  2546                           ;! ---------------------------------------------------------------------------------
  2547                           ;! (1) _Send_UART_Data                                       4     3      1    1903
  2548                           ;!                                             22 BANK0      4     3      1
  2549                           ;!                             _memcpy
  2550                           ;! ---------------------------------------------------------------------------------
  2551                           ;! (1) _PrintLog                                             4     4      0    3692
  2552                           ;!                                             28 BANK0      4     4      0
  2553                           ;!                       _lcdWriteText
  2554                           ;!                             _memset
  2555                           ;!                             _strlen
  2556                           ;! ---------------------------------------------------------------------------------
  2557                           ;! (2) _lcdWriteText                                         5     3      2    1427
  2558                           ;!                                             23 BANK0      5     3      2
  2559                           ;!                        _writeTxtChk
  2560                           ;! ---------------------------------------------------------------------------------
  2561                           ;! (3) _writeTxtChk                                          3     3      0    1221
  2562                           ;!                                             20 BANK0      3     3      0
  2563                           ;!                 _SetToSendDataToLCD
  2564                           ;!                  _setCursorPosition
  2565                           ;!                            _setData
  2566                           ;!                        _waitLCDBusy
  2567                           ;! ---------------------------------------------------------------------------------
  2568                           ;! (1) _setCursorPosition                                    5     4      1    1043
  2569                           ;!                                             15 BANK0      5     4      1
  2570                           ;!                 _SetToSendDataToLCD
  2571                           ;!                            _setData
  2572                           ;!                        _waitLCDBusy
  2573                           ;! ---------------------------------------------------------------------------------
  2574                           ;! (3) _waitLCDBusy                                          5     5      0      24
  2575                           ;!                                             10 BANK0      5     5      0
  2576                           ;!               _SetToReadDataFromLCD
  2577                           ;! ---------------------------------------------------------------------------------
  2578                           ;! (4) _SetToReadDataFromLCD                                 0     0      0       0
  2579                           ;! ---------------------------------------------------------------------------------
  2580                           ;! (4) _setData                                              3     3      0      88
  2581                           ;!                                             10 BANK0      3     3      0
  2582                           ;! ---------------------------------------------------------------------------------
  2583                           ;! (4) _SetToSendDataToLCD                                   0     0      0       0
  2584                           ;! ---------------------------------------------------------------------------------
  2585                           ;! (1) _I2CInit                                              0     0      0    1677
  2586                           ;!                             _memset
  2587                           ;! ---------------------------------------------------------------------------------
  2588                           ;! (1) _memset                                              14     8      6    1677
  2589                           ;!                                             10 BANK0     14     8      6
  2590                           ;! ---------------------------------------------------------------------------------
  2591                           ;! (1) _EM1812EntryPoint                                    20    18      2    4404
  2592                           ;!                                             27 BANK0      7     5      2
  2593                           ;!                                              0 BANK1     13    13      0
  2594                           ;!                       _GetI2CStatus
  2595                           ;!                 _GetNewReceivedData
  2596                           ;!                        _I2C_GetData
  2597                           ;!                       _I2C_SendData
  2598                           ;! ---------------------------------------------------------------------------------
  2599                           ;! (2) _I2C_SendData                                         5     3      2    1808
  2600                           ;!                                             22 BANK0      5     3      2
  2601                           ;!                             _memcpy
  2602                           ;! ---------------------------------------------------------------------------------
  2603                           ;! (2) _I2C_GetData                                          4     2      2     183
  2604                           ;!                                             10 BANK0      4     2      2
  2605                           ;! ---------------------------------------------------------------------------------
  2606                           ;! (2) _GetNewReceivedData                                   4     3      1    1746
  2607                           ;!                                             22 BANK0      4     3      1
  2608                           ;!                             _memcpy
  2609                           ;! ---------------------------------------------------------------------------------
  2610                           ;! (1) _memcpy                                              12     6      6    1558
  2611                           ;!                                             10 BANK0     12     6      6
  2612                           ;! ---------------------------------------------------------------------------------
  2613                           ;! (2) _GetI2CStatus                                         4     2      2       0
  2614                           ;!                                             10 BANK0      4     2      2
  2615                           ;! ---------------------------------------------------------------------------------
  2616                           ;! (1) _Debounce                                             5     3      2     632
  2617                           ;!                                             10 BANK0      5     3      2
  2618                           ;! ---------------------------------------------------------------------------------
  2619                           ;! (1) _AddTrace                                            10     7      3    2024
  2620                           ;!                                             29 BANK0     10     7      3
  2621                           ;!                             _strcat
  2622                           ;!                             _strlen
  2623                           ;! ---------------------------------------------------------------------------------
  2624                           ;! (2) _strcat                                               5     3      2     780
  2625                           ;!                                             24 BANK0      5     3      2
  2626                           ;!                             _strcpy
  2627                           ;!                             _strlen
  2628                           ;! ---------------------------------------------------------------------------------
  2629                           ;! (2) _strlen                                               6     4      2     394
  2630                           ;!                                             10 BANK0      6     4      2
  2631                           ;! ---------------------------------------------------------------------------------
  2632                           ;! (3) _strcpy                                               8     6      2     205
  2633                           ;!                                             16 BANK0      8     6      2
  2634                           ;!                             _strlen (ARG)
  2635                           ;! ---------------------------------------------------------------------------------
  2636                           ;! Estimated maximum stack depth 4
  2637                           ;! ---------------------------------------------------------------------------------
  2638                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2639                           ;! ---------------------------------------------------------------------------------
  2640                           ;! (7) _myint                                                6     6      0    1359
  2641                           ;!                                              4 BANK0      6     6      0
  2642                           ;!                      _I2C_Interrupt
  2643                           ;!                  _TempUpdateRequest
  2644                           ;!                     i1_lcdWriteText
  2645                           ;! ---------------------------------------------------------------------------------
  2646                           ;! (8) i1_lcdWriteText                                       5     3      2    1185
  2647                           ;!                                             13 COMMON     1     1      0
  2648                           ;!                                              0 BANK0      4     2      2
  2649                           ;!                      i1_writeTxtChk
  2650                           ;! ---------------------------------------------------------------------------------
  2651                           ;! (9) i1_writeTxtChk                                        3     3      0    1051
  2652                           ;!                                             10 COMMON     3     3      0
  2653                           ;!               i1_SetToSendDataToLCD
  2654                           ;!                i1_setCursorPosition
  2655                           ;!                          i1_setData
  2656                           ;!                      i1_waitLCDBusy
  2657                           ;! ---------------------------------------------------------------------------------
  2658                           ;! (10) i1_setCursorPosition                                 5     4      1     797
  2659                           ;!                                              5 COMMON     5     4      1
  2660                           ;!               i1_SetToSendDataToLCD
  2661                           ;!                          i1_setData
  2662                           ;!                      i1_waitLCDBusy
  2663                           ;! ---------------------------------------------------------------------------------
  2664                           ;! (10) i1_waitLCDBusy                                       5     5      0      37
  2665                           ;!                                              0 COMMON     5     5      0
  2666                           ;!             i1_SetToReadDataFromLCD
  2667                           ;! ---------------------------------------------------------------------------------
  2668                           ;! (11) i1_SetToReadDataFromLCD                              0     0      0       0
  2669                           ;! ---------------------------------------------------------------------------------
  2670                           ;! (10) i1_setData                                           3     3      0     124
  2671                           ;!                                              0 COMMON     3     3      0
  2672                           ;! ---------------------------------------------------------------------------------
  2673                           ;! (11) i1_SetToSendDataToLCD                                0     0      0       0
  2674                           ;! ---------------------------------------------------------------------------------
  2675                           ;! (8) _TempUpdateRequest                                    0     0      0       0
  2676                           ;! ---------------------------------------------------------------------------------
  2677                           ;! (8) _I2C_Interrupt                                        5     3      2      26
  2678                           ;!                                              0 COMMON     5     3      2
  2679                           ;! ---------------------------------------------------------------------------------
  2680                           ;! Estimated maximum stack depth 11
  2681                           ;! ---------------------------------------------------------------------------------
  2682                           ;!
  2683                           ;! Call Graph Graphs:
  2684                           ;!
  2685                           ;! _main (ROOT)
  2686                           ;!   _AddTrace
  2687                           ;!     _strcat
  2688                           ;!       _strcpy
  2689                           ;!         _strlen (ARG)
  2690                           ;!       _strlen
  2691                           ;!     _strlen
  2692                           ;!   _Debounce
  2693                           ;!   _EM1812EntryPoint
  2694                           ;!     _GetI2CStatus
  2695                           ;!     _GetNewReceivedData
  2696                           ;!       _memcpy
  2697                           ;!     _I2C_GetData
  2698                           ;!     _I2C_SendData
  2699                           ;!       _memcpy
  2700                           ;!   _I2CInit
  2701                           ;!     _memset
  2702                           ;!   _PrintLog
  2703                           ;!     _lcdWriteText
  2704                           ;!       _writeTxtChk
  2705                           ;!         _SetToSendDataToLCD
  2706                           ;!         _setCursorPosition
  2707                           ;!           _SetToSendDataToLCD
  2708                           ;!           _setData
  2709                           ;!           _waitLCDBusy
  2710                           ;!             _SetToReadDataFromLCD
  2711                           ;!         _setData
  2712                           ;!         _waitLCDBusy
  2713                           ;!           _SetToReadDataFromLCD
  2714                           ;!     _memset
  2715                           ;!     _strlen
  2716                           ;!   _Send_UART_Data
  2717                           ;!     _memcpy
  2718                           ;!   _clearDisplay
  2719                           ;!     _writeInsChk
  2720                           ;!       _waitLCDBusy
  2721                           ;!         _SetToReadDataFromLCD
  2722                           ;!       _writeInsNoChk
  2723                           ;!         _SetToSendDataToLCD
  2724                           ;!         _setData
  2725                           ;!   _initLCD
  2726                           ;!     _clearDisplay
  2727                           ;!       _writeInsChk
  2728                           ;!         _waitLCDBusy
  2729                           ;!           _SetToReadDataFromLCD
  2730                           ;!         _writeInsNoChk
  2731                           ;!           _SetToSendDataToLCD
  2732                           ;!           _setData
  2733                           ;!     _setData
  2734                           ;!     _writeInsChk
  2735                           ;!       _waitLCDBusy
  2736                           ;!         _SetToReadDataFromLCD
  2737                           ;!       _writeInsNoChk
  2738                           ;!         _SetToSendDataToLCD
  2739                           ;!         _setData
  2740                           ;!   _memcpy
  2741                           ;!   _memset
  2742                           ;!   _moveCursorToHome
  2743                           ;!     _writeInsChk
  2744                           ;!       _waitLCDBusy
  2745                           ;!         _SetToReadDataFromLCD
  2746                           ;!       _writeInsNoChk
  2747                           ;!         _SetToSendDataToLCD
  2748                           ;!         _setData
  2749                           ;!   _powerOnLcd
  2750                           ;!     _writeInsChk
  2751                           ;!       _waitLCDBusy
  2752                           ;!         _SetToReadDataFromLCD
  2753                           ;!       _writeInsNoChk
  2754                           ;!         _SetToSendDataToLCD
  2755                           ;!         _setData
  2756                           ;!   _printEM1812
  2757                           ;!     ___awdiv
  2758                           ;!     ___awmod
  2759                           ;!   _setCursorOff
  2760                           ;!     _writeInsChk
  2761                           ;!       _waitLCDBusy
  2762                           ;!         _SetToReadDataFromLCD
  2763                           ;!       _writeInsNoChk
  2764                           ;!         _SetToSendDataToLCD
  2765                           ;!         _setData
  2766                           ;!   _setCursorPosition
  2767                           ;!     _SetToSendDataToLCD
  2768                           ;!     _setData
  2769                           ;!     _waitLCDBusy
  2770                           ;!       _SetToReadDataFromLCD
  2771                           ;!   _setNotBlinkingCursor
  2772                           ;!     _writeInsChk
  2773                           ;!       _waitLCDBusy
  2774                           ;!         _SetToReadDataFromLCD
  2775                           ;!       _writeInsNoChk
  2776                           ;!         _SetToSendDataToLCD
  2777                           ;!         _setData
  2778                           ;!
  2779                           ;! _myint (ROOT)
  2780                           ;!   _I2C_Interrupt
  2781                           ;!   _TempUpdateRequest
  2782                           ;!   i1_lcdWriteText
  2783                           ;!     i1_writeTxtChk
  2784                           ;!       i1_SetToSendDataToLCD
  2785                           ;!       i1_setCursorPosition
  2786                           ;!         i1_SetToSendDataToLCD
  2787                           ;!         i1_setData
  2788                           ;!         i1_waitLCDBusy
  2789                           ;!           i1_SetToReadDataFromLCD
  2790                           ;!       i1_setData
  2791                           ;!       i1_waitLCDBusy
  2792                           ;!         i1_SetToReadDataFromLCD
  2793                           ;!
  2794                           
  2795                           ;! Address spaces:
  2796                           
  2797                           ;!Name               Size   Autos  Total    Cost      Usage
  2798                           ;!BIGRAM             3F0      0       0       0        0.0%
  2799                           ;!NULL                 0      0       0       0        0.0%
  2800                           ;!CODE                 0      0       0       0        0.0%
  2801                           ;!BITCOMMON            E      0       0       1        0.0%
  2802                           ;!BITSFR0              0      0       0       1        0.0%
  2803                           ;!SFR0                 0      0       0       1        0.0%
  2804                           ;!COMMON               E      E       E       2      100.0%
  2805                           ;!BITSFR1              0      0       0       2        0.0%
  2806                           ;!SFR1                 0      0       0       2        0.0%
  2807                           ;!BITSFR2              0      0       0       3        0.0%
  2808                           ;!SFR2                 0      0       0       3        0.0%
  2809                           ;!STACK                0      0       0       3        0.0%
  2810                           ;!BITBANK0            50      0       0       4        0.0%
  2811                           ;!BITSFR3              0      0       0       4        0.0%
  2812                           ;!SFR3                 0      0       0       4        0.0%
  2813                           ;!BANK0               50     29      45       5       86.3%
  2814                           ;!BITSFR4              0      0       0       5        0.0%
  2815                           ;!SFR4                 0      0       0       5        0.0%
  2816                           ;!BITBANK1            50      0       0       6        0.0%
  2817                           ;!BITSFR5              0      0       0       6        0.0%
  2818                           ;!SFR5                 0      0       0       6        0.0%
  2819                           ;!BANK1               50     3B      4E       7       97.5%
  2820                           ;!BITSFR6              0      0       0       7        0.0%
  2821                           ;!SFR6                 0      0       0       7        0.0%
  2822                           ;!BITBANK2            50      0       0       8        0.0%
  2823                           ;!BITSFR7              0      0       0       8        0.0%
  2824                           ;!SFR7                 0      0       0       8        0.0%
  2825                           ;!BANK2               50      0      3C       9       75.0%
  2826                           ;!BITSFR8              0      0       0       9        0.0%
  2827                           ;!SFR8                 0      0       0       9        0.0%
  2828                           ;!BITBANK3            50      0       0      10        0.0%
  2829                           ;!BITSFR9              0      0       0      10        0.0%
  2830                           ;!SFR9                 0      0       0      10        0.0%
  2831                           ;!BANK3               50      0      32      11       62.5%
  2832                           ;!BITSFR10             0      0       0      11        0.0%
  2833                           ;!SFR10                0      0       0      11        0.0%
  2834                           ;!BITBANK4            50      0       0      12        0.0%
  2835                           ;!BITSFR11             0      0       0      12        0.0%
  2836                           ;!SFR11                0      0       0      12        0.0%
  2837                           ;!BANK4               50      0      4B      13       93.8%
  2838                           ;!BITSFR12             0      0       0      13        0.0%
  2839                           ;!SFR12                0      0       0      13        0.0%
  2840                           ;!BITBANK5            50      0       0      14        0.0%
  2841                           ;!BITSFR13             0      0       0      14        0.0%
  2842                           ;!SFR13                0      0       0      14        0.0%
  2843                           ;!BANK5               50      0      32      15       62.5%
  2844                           ;!BITSFR14             0      0       0      15        0.0%
  2845                           ;!SFR14                0      0       0      15        0.0%
  2846                           ;!BITBANK6            50      0       0      16        0.0%
  2847                           ;!BITSFR15             0      0       0      16        0.0%
  2848                           ;!SFR15                0      0       0      16        0.0%
  2849                           ;!BANK6               50      0       0      17        0.0%
  2850                           ;!BITSFR16             0      0       0      17        0.0%
  2851                           ;!SFR16                0      0       0      17        0.0%
  2852                           ;!BITBANK7            50      0       0      18        0.0%
  2853                           ;!BITSFR17             0      0       0      18        0.0%
  2854                           ;!SFR17                0      0       0      18        0.0%
  2855                           ;!BANK7               50      0       0      19        0.0%
  2856                           ;!BITSFR18             0      0       0      19        0.0%
  2857                           ;!SFR18                0      0       0      19        0.0%
  2858                           ;!BITSFR19             0      0       0      20        0.0%
  2859                           ;!SFR19                0      0       0      20        0.0%
  2860                           ;!ABS                  0      0     18C      20        0.0%
  2861                           ;!BITBANK8            50      0       0      21        0.0%
  2862                           ;!BITSFR20             0      0       0      21        0.0%
  2863                           ;!SFR20                0      0       0      21        0.0%
  2864                           ;!BANK8               50      0       0      22        0.0%
  2865                           ;!BITSFR21             0      0       0      22        0.0%
  2866                           ;!SFR21                0      0       0      22        0.0%
  2867                           ;!BITBANK9            50      0       0      23        0.0%
  2868                           ;!BITSFR22             0      0       0      23        0.0%
  2869                           ;!SFR22                0      0       0      23        0.0%
  2870                           ;!BANK9               20      0       0      24        0.0%
  2871                           ;!BITSFR23             0      0       0      24        0.0%
  2872                           ;!SFR23                0      0       0      24        0.0%
  2873                           ;!BITBANK10           50      0       0      25        0.0%
  2874                           ;!BITSFR24             0      0       0      25        0.0%
  2875                           ;!SFR24                0      0       0      25        0.0%
  2876                           ;!BITSFR25             0      0       0      26        0.0%
  2877                           ;!SFR25                0      0       0      26        0.0%
  2878                           ;!BANK10               0      0       0      26        0.0%
  2879                           ;!BITBANK11           50      0       0      27        0.0%
  2880                           ;!BITSFR26             0      0       0      27        0.0%
  2881                           ;!SFR26                0      0       0      27        0.0%
  2882                           ;!BITSFR27             0      0       0      28        0.0%
  2883                           ;!SFR27                0      0       0      28        0.0%
  2884                           ;!BANK11               0      0       0      28        0.0%
  2885                           ;!BITBANK12           30      0       0      29        0.0%
  2886                           ;!BITSFR28             0      0       0      29        0.0%
  2887                           ;!SFR28                0      0       0      29        0.0%
  2888                           ;!BITSFR29             0      0       0      30        0.0%
  2889                           ;!SFR29                0      0       0      30        0.0%
  2890                           ;!BANK12               0      0       0      30        0.0%
  2891                           ;!BITSFR30             0      0       0      31        0.0%
  2892                           ;!SFR30                0      0       0      31        0.0%
  2893                           ;!DATA                 0      0     18C      31        0.0%
  2894                           ;!BITSFR31             0      0       0      32        0.0%
  2895                           ;!SFR31                0      0       0      32        0.0%
  2896                           
  2897                           	global	_main
  2898                           
  2899 ;; *************** function _main *****************
  2900 ;; Defined at:
  2901 ;;		line 147 in file "161518_temp_main.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;		None
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  wReadout       20   17[BANK1 ] unsigned char [20]
  2906 ;;  wConv           4   13[BANK1 ] unsigned char [4]
  2907 ;;  wDebounceDow    2   53[BANK1 ] unsigned short 
  2908 ;;  wDebounceUp     2   51[BANK1 ] unsigned short 
  2909 ;;  wDebounceEnt    2   49[BANK1 ] unsigned short 
  2910 ;;  wTemperature    2   47[BANK1 ] short 
  2911 ;;  wHumidityPre    2   45[BANK1 ] short 
  2912 ;;  wIterationCo    2   41[BANK1 ] unsigned short 
  2913 ;;  wTemp           2   39[BANK1 ] int 
  2914 ;;  wCounter        2   37[BANK1 ] int 
  2915 ;;  wMenu           1   58[BANK1 ] unsigned char 
  2916 ;;  wEnterBotton    1   57[BANK1 ] unsigned char 
  2917 ;;  wDownBottonP    1   56[BANK1 ] unsigned char 
  2918 ;;  wUpBottonPre    1   55[BANK1 ] unsigned char 
  2919 ;;  wEditingMode    1   44[BANK1 ] unsigned char 
  2920 ;;  wUpdateMenu     1   43[BANK1 ] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : B1F/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2931 ;;      Locals:         0       0      46       0       0       0       0       0       0       0       0       0       
       0       0
  2932 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  2933 ;;      Totals:         0       2      46       0       0       0       0       0       0       0       0       0       
       0       0
  2934 ;;Total ram usage:       48 bytes
  2935 ;; Hardware stack levels required when called:   12
  2936 ;; This function calls:
  2937 ;;		_AddTrace
  2938 ;;		_Debounce
  2939 ;;		_EM1812EntryPoint
  2940 ;;		_I2CInit
  2941 ;;		_PrintLog
  2942 ;;		_Send_UART_Data
  2943 ;;		_clearDisplay
  2944 ;;		_initLCD
  2945 ;;		_memcpy
  2946 ;;		_memset
  2947 ;;		_moveCursorToHome
  2948 ;;		_powerOnLcd
  2949 ;;		_printEM1812
  2950 ;;		_setCursorOff
  2951 ;;		_setCursorPosition
  2952 ;;		_setNotBlinkingCursor
  2953 ;; This function is called by:
  2954 ;;		Startup code after reset
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  2958                           	file	"161518_temp_main.c"
  2959                           	line	147
  2960                           global __pmaintext
  2961                           __pmaintext:	;psect for function _main
  2962  0120                     psect	maintext
  2963                           	file	"161518_temp_main.c"
  2964                           	line	147
  2965                           	global	__size_of_main
  2966                           	__size_of_main	equ	__end_of_main-_main
  2967  0289                     	
  2968                           _main:	
  2969  0120                     ;incstack = 0
  2970                           	opt	stack 4
  2971                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2972                           	line	150
  2973                           	
  2974                           l4235:	
  2975  0120                     	movlb 1	; select bank1
  2976  0120  0021               	clrf	(_gErrorCode)^080h
  2977  0121  01E3               	line	153
  2978                           	clrf	(main@wHumidityPrev)^080h
  2979  0122  01CD               	clrf	(main@wHumidityPrev+1)^080h
  2980  0123  01CE               	line	154
  2981                           	clrf	(main@wTemperaturePrev)^080h
  2982  0124  01CF               	clrf	(main@wTemperaturePrev+1)^080h
  2983  0125  01D0               	line	155
  2984                           	
  2985                           l4237:	
  2986  0126                     	movlw	low(_wInterruptText)
  2987  0126  3020               	movlb 0	; select bank0
  2988  0127  0020               	movwf	(memset@dest)
  2989  0128  00AA               	movlw	high(_wInterruptText)
  2990  0129  3002               	movwf	(memset@dest+1)
  2991  012A  00AB               	movlw	0
  2992  012B  3000               	movwf	(memset@c)
  2993  012C  00AC               	movwf	(memset@c+1)
  2994  012D  00AD               	movlw	04Bh
  2995  012E  304B               	movwf	(memset@n)
  2996  012F  00AE               	movlw	0
  2997  0130  3000               	movwf	((memset@n))+1
  2998  0131  00AF               	fcall	_memset
  2999  0132  3186  2607  3181   	line	158
  3000                           	
  3001                           l4239:	
  3002  0135                     	movlw	(0Fh & ((1<<4)-1))<<3
  3003  0135  3078               	movlb 1	; select bank1
  3004  0136  0021               	iorwf	(153)^080h,f	;volatile
  3005  0137  0499               	line	159
  3006                           	
  3007                           l4241:	
  3008  0138                     	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
  3009  0138  30FC               	andwf	(153)^080h,f	;volatile
  3010  0139  0599               	line	160
  3011                           	
  3012                           l4243:	
  3013  013A                     	bcf	(11),7	;volatile
  3014  013A  138B               	line	162
  3015                           	
  3016                           l4245:	
  3017  013B                     	clrf	(main@wUpBottonPressed)^080h
  3018  013B  01D7               	line	163
  3019                           	
  3020                           l4247:	
  3021  013C                     	clrf	(main@wDownBottonPressed)^080h
  3022  013C  01D8               	line	164
  3023                           	
  3024                           l4249:	
  3025  013D                     	clrf	(main@wEnterBottonPressed)^080h
  3026  013D  01D9               	line	166
  3027                           	
  3028                           l4251:	
  3029  013E                     	clrf	(main@wEditingMode)^080h
  3030  013E  01CC               	line	167
  3031                           	
  3032                           l4253:	
  3033  013F                     	clrf	(main@wMenu)^080h
  3034  013F  01DA               	line	168
  3035                           	
  3036                           l4255:	
  3037  0140                     	clrf	(main@wUpdateMenu)^080h
  3038  0140  01CB               	incf	(main@wUpdateMenu)^080h,f
  3039  0141  0ACB               	line	170
  3040                           	
  3041                           l4257:	
  3042  0142                     	clrf	(main@wIterationCounter)^080h
  3043  0142  01C9               	clrf	(main@wIterationCounter+1)^080h
  3044  0143  01CA               	line	171
  3045                           	
  3046                           l4259:	
  3047  0144                     	clrf	(main@wDebounceEnter)^080h
  3048  0144  01D1               	clrf	(main@wDebounceEnter+1)^080h
  3049  0145  01D2               	line	172
  3050                           	
  3051                           l4261:	
  3052  0146                     	clrf	(main@wDebounceUp)^080h
  3053  0146  01D3               	clrf	(main@wDebounceUp+1)^080h
  3054  0147  01D4               	line	173
  3055                           	
  3056                           l4263:	
  3057  0148                     	clrf	(main@wDebounceDown)^080h
  3058  0148  01D5               	clrf	(main@wDebounceDown+1)^080h
  3059  0149  01D6               	line	175
  3060                           	
  3061                           l4265:	
  3062  014A                     	movlb 0	; select bank0
  3063  014A  0020               	clrf	(12)	;volatile
  3064  014B  018C               	line	179
  3065                           	
  3066                           l4267:	
  3067  014C                     	movlw	((0 & ((1<<2)-1))<<6)|not (((1<<2)-1)<<6)
  3068  014C  303F               	andwf	(24),f	;volatile
  3069  014D  0598               	line	180
  3070                           	
  3071                           l4269:	
  3072  014E                     	bcf	(24),3	;volatile
  3073  014E  1198               	line	181
  3074                           	
  3075                           l4271:	
  3076  014F                     	movlw	(03h & ((1<<2)-1))<<4
  3077  014F  3030               	iorwf	(24),f	;volatile
  3078  0150  0498               	line	182
  3079                           	
  3080                           l4273:	
  3081  0151                     	bcf	(24),2	;volatile
  3082  0151  1118               	line	183
  3083                           	
  3084                           l4275:	
  3085  0152                     	bsf	(24),0	;volatile
  3086  0152  1418               	line	184
  3087                           	
  3088                           l4277:	
  3089  0153                     	movlb 1	; select bank1
  3090  0153  0021               	bsf	(145)^080h,0	;volatile
  3091  0154  1411               	line	188
  3092                           	
  3093                           l4279:	
  3094  0155                     	movf	(149)^080h,w	;volatile
  3095  0155  0815               	andlw	not (((1<<3)-1)<<0)
  3096  0156  39F8               	iorlw	(02h & ((1<<3)-1))<<0
  3097  0157  3802               	movwf	(149)^080h	;volatile
  3098  0158  0095               	line	189
  3099                           	
  3100                           l4281:	
  3101  0159                     	bcf	(149)^080h,5	;volatile
  3102  0159  1295               	line	190
  3103                           	
  3104                           l4283:	
  3105  015A                     	bcf	(149)^080h,3	;volatile
  3106  015A  1195               	line	191
  3107                           	
  3108                           l4285:	
  3109  015B                     	bcf	(11),5	;volatile
  3110  015B  128B               	line	195
  3111                           	
  3112                           l4287:	
  3113  015C                     	movlb 0	; select bank0
  3114  015C  0020               	clrf	(13)	;volatile
  3115  015D  018D               	line	196
  3116                           	
  3117                           l4289:	
  3118  015E                     	movlb 3	; select bank3
  3119  015E  0023               	clrf	(397)^0180h	;volatile
  3120  015F  018D               	line	197
  3121                           	
  3122                           l4291:	
  3123  0160                     	movlw	low(0Fh)
  3124  0160  300F               	movlb 1	; select bank1
  3125  0161  0021               	movwf	(141)^080h	;volatile
  3126  0162  008D               	line	198
  3127                           	
  3128                           l4293:	
  3129  0163                     	movlw	low(0Fh)
  3130  0163  300F               	movlb 4	; select bank4
  3131  0164  0024               	movwf	(525)^0200h	;volatile
  3132  0165  008D               	line	199
  3133                           	
  3134                           l4295:	
  3135  0166                     	movlb 1	; select bank1
  3136  0166  0021               	bcf	(149)^080h,7	;volatile
  3137  0167  1395               	line	203
  3138                           	
  3139                           l4297:	
  3140  0168                     	fcall	_I2CInit
  3141  0168  318A  2202  3181   	line	208
  3142                           	
  3143                           l4299:	
  3144  016B                     	movlb 3	; select bank3
  3145  016B  0023               	bcf	(398)^0180h,6	;volatile
  3146  016C  130E               	line	209
  3147                           	
  3148                           l4301:	
  3149  016D                     	bcf	(398)^0180h,7	;volatile
  3150  016D  138E               	line	210
  3151                           	
  3152                           l4303:	
  3153  016E                     	movlb 1	; select bank1
  3154  016E  0021               	bcf	(142)^080h,6	;volatile
  3155  016F  130E               	line	211
  3156                           	
  3157                           l4305:	
  3158  0170                     	bsf	(142)^080h,7	;volatile
  3159  0170  178E               	line	212
  3160                           	
  3161                           l4307:	
  3162  0171                     	movlb 0	; select bank0
  3163  0171  0020               	clrf	(_gUartRXBufferIndex)
  3164  0172  01CD               	line	215
  3165                           	
  3166                           l4309:	
  3167  0173                     	movlb 1	; select bank1
  3168  0173  0021               	bsf	(145)^080h,5	;volatile
  3169  0174  1691               	line	219
  3170                           	movlb 4	; select bank4
  3171  0175  0024               	movf	(533)^0200h,w	;volatile
  3172  0176  0815               	andlw	not (((1<<4)-1)<<0)
  3173  0177  39F0               	iorlw	(08h & ((1<<4)-1))<<0
  3174  0178  3808               	movwf	(533)^0200h	;volatile
  3175  0179  0095               	line	220
  3176                           	
  3177                           l4311:	
  3178  017A                     	movlw	low(01Fh)
  3179  017A  301F               	movwf	(530)^0200h	;volatile
  3180  017B  0092               	line	221
  3181                           	
  3182                           l4313:	
  3183  017C                     	bsf	(533)^0200h,5	;volatile
  3184  017C  1695               	line	222
  3185                           	
  3186                           l4315:	
  3187  017D                     	bcf	(534)^0200h,7	;volatile
  3188  017D  1396               	line	223
  3189                           	
  3190                           l4317:	
  3191  017E                     	bsf	(534)^0200h,4	;volatile
  3192  017E  1616               	line	224
  3193                           	
  3194                           l4319:	
  3195  017F                     	bsf	(535)^0200h,6	;volatile
  3196  017F  1717               	line	225
  3197                           	
  3198                           l4321:	
  3199  0180                     	bsf	(535)^0200h,5	;volatile
  3200  0180  1697               	line	226
  3201                           	
  3202                           l4323:	
  3203  0181                     	bsf	(535)^0200h,3	;volatile
  3204  0181  1597               	line	227
  3205                           	
  3206                           l4325:	
  3207  0182                     	bcf	(535)^0200h,1	;volatile
  3208  0182  1097               	line	228
  3209                           	
  3210                           l4327:	
  3211  0183                     	bcf	(535)^0200h,0	;volatile
  3212  0183  1017               	line	229
  3213                           	
  3214                           l4329:	
  3215  0184                     	bcf	(532)^0200h,6	;volatile
  3216  0184  1314               	line	231
  3217                           	
  3218                           l4331:	
  3219  0185                     	bsf	(11),6	;volatile
  3220  0185  170B               	line	232
  3221                           	
  3222                           l4333:	
  3223  0186                     	movlb 1	; select bank1
  3224  0186  0021               	bsf	(145)^080h,3	;volatile
  3225  0187  1591               	line	233
  3226                           	
  3227                           l4335:	
  3228  0188                     	bsf	(146)^080h,3	;volatile
  3229  0188  1592               	line	235
  3230                           	
  3231                           l4337:	
  3232  0189                     	bsf	(11),7	;volatile
  3233  0189  178B               	line	238
  3234                           	
  3235                           l4339:	
  3236  018A                     	fcall	_initLCD
  3237  018A  318E  2675  3181   	line	239
  3238                           	
  3239                           l4341:	
  3240  018D                     	fcall	_clearDisplay
  3241  018D  3189  2175  3181   	line	240
  3242                           	
  3243                           l4343:	
  3244  0190                     	opt asmopt_push
  3245                           opt asmopt_off
  3246                           movlw  3
  3247  0190  3003               	movlb 0	; select bank0
  3248  0191  0020               movwf	((??_main+0)+0+1),f
  3249  0192  00C8               movlw	8
  3250  0193  3008               movwf	((??_main+0)+0),f
  3251  0194  00C7               	movlw	119
  3252  0195  3077               u3147:
  3253  0196                     decfsz	wreg
  3254  0196  0B89               	goto	u3147
  3255  0197  2996               	decfsz	((??_main+0)+0),f
  3256  0198  0BC7               	goto	u3147
  3257  0199  2996               	decfsz	((??_main+0)+0+1),f
  3258  019A  0BC8               	goto	u3147
  3259  019B  2996               opt asmopt_pop
  3260                           
  3261                           	line	241
  3262                           	
  3263                           l4345:	
  3264  019C                     	fcall	_powerOnLcd
  3265  019C  3189  21BC  3181   	line	242
  3266                           	
  3267                           l4347:	
  3268  019F                     	opt asmopt_push
  3269                           opt asmopt_off
  3270                           movlw  3
  3271  019F  3003               	movlb 0	; select bank0
  3272  01A0  0020               movwf	((??_main+0)+0+1),f
  3273  01A1  00C8               movlw	8
  3274  01A2  3008               movwf	((??_main+0)+0),f
  3275  01A3  00C7               	movlw	119
  3276  01A4  3077               u3157:
  3277  01A5                     decfsz	wreg
  3278  01A5  0B89               	goto	u3157
  3279  01A6  29A5               	decfsz	((??_main+0)+0),f
  3280  01A7  0BC7               	goto	u3157
  3281  01A8  29A5               	decfsz	((??_main+0)+0+1),f
  3282  01A9  0BC8               	goto	u3157
  3283  01AA  29A5               opt asmopt_pop
  3284                           
  3285                           	line	243
  3286                           	
  3287                           l4349:	
  3288  01AB                     	fcall	_setCursorOff
  3289  01AB  3189  21C7  3181   	line	244
  3290                           	
  3291                           l4351:	
  3292  01AE                     	opt asmopt_push
  3293                           opt asmopt_off
  3294                           movlw  3
  3295  01AE  3003               	movlb 0	; select bank0
  3296  01AF  0020               movwf	((??_main+0)+0+1),f
  3297  01B0  00C8               movlw	8
  3298  01B1  3008               movwf	((??_main+0)+0),f
  3299  01B2  00C7               	movlw	119
  3300  01B3  3077               u3167:
  3301  01B4                     decfsz	wreg
  3302  01B4  0B89               	goto	u3167
  3303  01B5  29B4               	decfsz	((??_main+0)+0),f
  3304  01B6  0BC7               	goto	u3167
  3305  01B7  29B4               	decfsz	((??_main+0)+0+1),f
  3306  01B8  0BC8               	goto	u3167
  3307  01B9  29B4               opt asmopt_pop
  3308                           
  3309                           	line	245
  3310                           	
  3311                           l4353:	
  3312  01BA                     	fcall	_moveCursorToHome
  3313  01BA  3189  219F  3181   	line	246
  3314                           	
  3315                           l4355:	
  3316  01BD                     	opt asmopt_push
  3317                           opt asmopt_off
  3318                           movlw  3
  3319  01BD  3003               	movlb 0	; select bank0
  3320  01BE  0020               movwf	((??_main+0)+0+1),f
  3321  01BF  00C8               movlw	8
  3322  01C0  3008               movwf	((??_main+0)+0),f
  3323  01C1  00C7               	movlw	119
  3324  01C2  3077               u3177:
  3325  01C3                     decfsz	wreg
  3326  01C3  0B89               	goto	u3177
  3327  01C4  29C3               	decfsz	((??_main+0)+0),f
  3328  01C5  0BC7               	goto	u3177
  3329  01C6  29C3               	decfsz	((??_main+0)+0+1),f
  3330  01C7  0BC8               	goto	u3177
  3331  01C8  29C3               opt asmopt_pop
  3332                           
  3333                           	line	247
  3334                           	
  3335                           l4357:	
  3336  01C9                     	fcall	_setNotBlinkingCursor
  3337  01C9  3189  21D2  3181   	line	248
  3338                           	
  3339                           l4359:	
  3340  01CC                     	opt asmopt_push
  3341                           opt asmopt_off
  3342                           movlw  3
  3343  01CC  3003               	movlb 0	; select bank0
  3344  01CD  0020               movwf	((??_main+0)+0+1),f
  3345  01CE  00C8               movlw	8
  3346  01CF  3008               movwf	((??_main+0)+0),f
  3347  01D0  00C7               	movlw	119
  3348  01D1  3077               u3187:
  3349  01D2                     decfsz	wreg
  3350  01D2  0B89               	goto	u3187
  3351  01D3  29D2               	decfsz	((??_main+0)+0),f
  3352  01D4  0BC7               	goto	u3187
  3353  01D5  29D2               	decfsz	((??_main+0)+0+1),f
  3354  01D6  0BC8               	goto	u3187
  3355  01D7  29D2               opt asmopt_pop
  3356                           
  3357                           	line	251
  3358                           	
  3359                           l4361:	
  3360  01D8                     	movlb 1	; select bank1
  3361  01D8  0021               	clrf	(main@wCounter)^080h
  3362  01D9  01C5               	clrf	(main@wCounter+1)^080h
  3363  01DA  01C6               	line	252
  3364                           	
  3365                           l4363:	
  3366  01DB                     	movf	(main@F2305+3)^080h,w
  3367  01DB  086B               	movwf	(main@wConv+3)^080h
  3368  01DC  00B0               	movf	(main@F2305+2)^080h,w
  3369  01DD  086A               	movwf	(main@wConv+2)^080h
  3370  01DE  00AF               	movf	(main@F2305+1)^080h,w
  3371  01DF  0869               	movwf	(main@wConv+1)^080h
  3372  01E0  00AE               	movf	(main@F2305)^080h,w
  3373  01E1  0868               	movwf	(main@wConv)^080h
  3374  01E2  00AD               
  3375                           	line	253
  3376                           	
  3377                           l4365:	
  3378  01E3                     	clrf	(main@wTemp)^080h
  3379  01E3  01C7               	clrf	(main@wTemp+1)^080h
  3380  01E4  01C8               	line	256
  3381                           	
  3382                           l4367:	
  3383  01E5                     	fcall	_clearDisplay
  3384  01E5  3189  2175  3181   	line	257
  3385                           	
  3386                           l4369:	
  3387  01E8                     	fcall	_moveCursorToHome
  3388  01E8  3189  219F  3181   	line	258
  3389                           	
  3390                           l4371:	
  3391  01EB                     	opt asmopt_push
  3392                           opt asmopt_off
  3393                           movlw	156
  3394  01EB  309C               	movlb 0	; select bank0
  3395  01EC  0020               movwf	((??_main+0)+0),f
  3396  01ED  00C7               	movlw	215
  3397  01EE  30D7               u3197:
  3398  01EF                     decfsz	wreg
  3399  01EF  0B89               	goto	u3197
  3400  01F0  29EF               	decfsz	((??_main+0)+0),f
  3401  01F1  0BC7               	goto	u3197
  3402  01F2  29EF               opt asmopt_pop
  3403                           
  3404                           	line	266
  3405                           	
  3406                           l4373:	
  3407  01F3                     	opt asmopt_push
  3408                           opt asmopt_off
  3409                           movlw  21
  3410  01F3  3015               	movlb 0	; select bank0
  3411  01F4  0020               movwf	((??_main+0)+0+1),f
  3412  01F5  00C8               movlw	75
  3413  01F6  304B               movwf	((??_main+0)+0),f
  3414  01F7  00C7               	movlw	190
  3415  01F8  30BE               u3207:
  3416  01F9                     decfsz	wreg
  3417  01F9  0B89               	goto	u3207
  3418  01FA  29F9               	decfsz	((??_main+0)+0),f
  3419  01FB  0BC7               	goto	u3207
  3420  01FC  29F9               	decfsz	((??_main+0)+0+1),f
  3421  01FD  0BC8               	goto	u3207
  3422  01FE  29F9               	nop
  3423  01FF  0000               opt asmopt_pop
  3424                           
  3425                           	goto	l4375
  3426  0200  2A01               	line	267
  3427                           	
  3428                           l183:	
  3429  0201                     	line	418
  3430                           	
  3431                           l4375:	
  3432  0201                     	movlw	(low(_wTemperature|((0x0)<<8)))&0ffh
  3433  0201  30E4               	movlb 0	; select bank0
  3434  0202  0020               	movwf	(??_main+0)+0
  3435  0203  00C7               	movf	(??_main+0)+0,w
  3436  0204  0847               	movwf	(EM1812EntryPoint@oTemperature)
  3437  0205  00BB               	movlw	(low(_wHumidity|((0x0)<<8)))&0ffh
  3438  0206  30E6               	fcall	_EM1812EntryPoint
  3439  0207  3183  23A9  3181   	movlb 0	; select bank0
  3440  020A  0020               		decf	((0+(?_EM1812EntryPoint))),w
  3441  020B  033B               iorwf	((1+(?_EM1812EntryPoint))),w
  3442  020C  043C               	btfss	status,2
  3443  020D  1D03               	goto	u2931
  3444  020E  2A10               	goto	u2930
  3445  020F  2A11               u2931:
  3446  0210                     	goto	l4399
  3447  0210  2A8D               u2930:
  3448  0211                     	line	421
  3449                           	
  3450                           l4377:	
  3451  0211                     	movlb 1	; select bank1
  3452  0211  0021               	movf	(_wHumidity+1)^080h,w
  3453  0212  0867               	xorwf	(main@wHumidityPrev+1)^080h,w
  3454  0213  064E               	skipz
  3455  0214  1D03               	goto	u2945
  3456  0215  2A18               	movf	(_wHumidity)^080h,w
  3457  0216  0866               	xorwf	(main@wHumidityPrev)^080h,w
  3458  0217  064D               u2945:
  3459  0218                     
  3460                           	skipz
  3461  0218  1D03               	goto	u2941
  3462  0219  2A1B               	goto	u2940
  3463  021A  2A1C               u2941:
  3464  021B                     	goto	l4381
  3465  021B  2A27               u2940:
  3466  021C                     	
  3467                           l4379:	
  3468  021C                     	movf	(_wTemperature+1)^080h,w
  3469  021C  0865               	xorwf	(main@wTemperaturePrev+1)^080h,w
  3470  021D  0650               	skipz
  3471  021E  1D03               	goto	u2955
  3472  021F  2A22               	movf	(_wTemperature)^080h,w
  3473  0220  0864               	xorwf	(main@wTemperaturePrev)^080h,w
  3474  0221  064F               u2955:
  3475  0222                     
  3476                           	skipnz
  3477  0222  1903               	goto	u2951
  3478  0223  2A25               	goto	u2950
  3479  0224  2A26               u2951:
  3480  0225                     	goto	l4399
  3481  0225  2A8D               u2950:
  3482  0226                     	goto	l4381
  3483  0226  2A27               	
  3484                           l187:	
  3485  0227                     	line	423
  3486                           	
  3487                           l4381:	
  3488  0227                     	movf	(_wHumidity+1)^080h,w
  3489  0227  0867               	movwf	(main@wHumidityPrev+1)^080h
  3490  0228  00CE               	movf	(_wHumidity)^080h,w
  3491  0229  0866               	movwf	(main@wHumidityPrev)^080h
  3492  022A  00CD               	line	424
  3493                           	movf	(_wTemperature+1)^080h,w
  3494  022B  0865               	movwf	(main@wTemperaturePrev+1)^080h
  3495  022C  00D0               	movf	(_wTemperature)^080h,w
  3496  022D  0864               	movwf	(main@wTemperaturePrev)^080h
  3497  022E  00CF               	line	425
  3498                           	
  3499                           l4383:	
  3500  022F                     	movlb 0	; select bank0
  3501  022F  0020               	clrf	(setCursorPosition@iPosition)
  3502  0230  01AF               	movlw	low(02h)
  3503  0231  3002               	fcall	_setCursorPosition
  3504  0232  318D  25B3  3181   	line	426
  3505                           	
  3506                           l4385:	
  3507  0235                     	movlb 1	; select bank1
  3508  0235  0021               	movf	(main@wHumidityPrev+1)^080h,w
  3509  0236  084E               	movlb 0	; select bank0
  3510  0237  0020               	movwf	(printEM1812@wVariable+1)
  3511  0238  00B4               	movlb 1	; select bank1
  3512  0239  0021               	movf	(main@wHumidityPrev)^080h,w
  3513  023A  084D               	movlb 0	; select bank0
  3514  023B  0020               	movwf	(printEM1812@wVariable)
  3515  023C  00B3               	movlw	(low(main@wReadout|((0x0)<<8)))&0ffh
  3516  023D  30B1               	movwf	(??_main+0)+0
  3517  023E  00C7               	movf	(??_main+0)+0,w
  3518  023F  0847               	movwf	(printEM1812@oTextOut)
  3519  0240  00B5               	fcall	_printEM1812
  3520  0241  3186  26D8  3181   	line	427
  3521                           	
  3522                           l4387:	
  3523  0244                     	movlw	low(04Bh)
  3524  0244  304B               	movlb 0	; select bank0
  3525  0245  0020               	movwf	(??_main+0)+0
  3526  0246  00C7               	movf	(??_main+0)+0,w
  3527  0247  0847               	movwf	(AddTrace@iSizeOfoText)
  3528  0248  00BD               	movlw	low(((STR_1)|8000h))
  3529  0249  3026               	movwf	(AddTrace@iText)
  3530  024A  00BE               	movlw	high(((STR_1)|8000h))
  3531  024B  3090               	movwf	((AddTrace@iText))+1
  3532  024C  00BF               	movlw	(low(_wInterruptText|((0x2)<<8)))&0ffh
  3533  024D  3020               	fcall	_AddTrace
  3534  024E  318C  2419  3181   	line	428
  3535                           	
  3536                           l4389:	
  3537  0251                     	movlw	low(04Bh)
  3538  0251  304B               	movlb 0	; select bank0
  3539  0252  0020               	movwf	(??_main+0)+0
  3540  0253  00C7               	movf	(??_main+0)+0,w
  3541  0254  0847               	movwf	(AddTrace@iSizeOfoText)
  3542  0255  00BD               	movlw	low(main@wReadout)
  3543  0256  30B1               	movwf	(AddTrace@iText)
  3544  0257  00BE               	movlw	high(main@wReadout)
  3545  0258  3000               	movwf	(AddTrace@iText+1)
  3546  0259  00BF               	movlw	(low(_wInterruptText|((0x2)<<8)))&0ffh
  3547  025A  3020               	fcall	_AddTrace
  3548  025B  318C  2419  3181   	line	429
  3549                           	
  3550                           l4391:	
  3551  025E                     	movlb 1	; select bank1
  3552  025E  0021               	movf	(main@wTemperaturePrev+1)^080h,w
  3553  025F  0850               	movlb 0	; select bank0
  3554  0260  0020               	movwf	(printEM1812@wVariable+1)
  3555  0261  00B4               	movlb 1	; select bank1
  3556  0262  0021               	movf	(main@wTemperaturePrev)^080h,w
  3557  0263  084F               	movlb 0	; select bank0
  3558  0264  0020               	movwf	(printEM1812@wVariable)
  3559  0265  00B3               	movlw	(low(main@wReadout|((0x0)<<8)))&0ffh
  3560  0266  30B1               	movwf	(??_main+0)+0
  3561  0267  00C7               	movf	(??_main+0)+0,w
  3562  0268  0847               	movwf	(printEM1812@oTextOut)
  3563  0269  00B5               	fcall	_printEM1812
  3564  026A  3186  26D8  3181   	line	430
  3565                           	
  3566                           l4393:	
  3567  026D                     	movlw	low(04Bh)
  3568  026D  304B               	movlb 0	; select bank0
  3569  026E  0020               	movwf	(??_main+0)+0
  3570  026F  00C7               	movf	(??_main+0)+0,w
  3571  0270  0847               	movwf	(AddTrace@iSizeOfoText)
  3572  0271  00BD               	movlw	low(((STR_2)|8000h))
  3573  0272  303E               	movwf	(AddTrace@iText)
  3574  0273  00BE               	movlw	high(((STR_2)|8000h))
  3575  0274  3090               	movwf	((AddTrace@iText))+1
  3576  0275  00BF               	movlw	(low(_wInterruptText|((0x2)<<8)))&0ffh
  3577  0276  3020               	fcall	_AddTrace
  3578  0277  318C  2419  3181   	line	431
  3579                           	
  3580                           l4395:	
  3581  027A                     	movlw	low(04Bh)
  3582  027A  304B               	movlb 0	; select bank0
  3583  027B  0020               	movwf	(??_main+0)+0
  3584  027C  00C7               	movf	(??_main+0)+0,w
  3585  027D  0847               	movwf	(AddTrace@iSizeOfoText)
  3586  027E  00BD               	movlw	low(main@wReadout)
  3587  027F  30B1               	movwf	(AddTrace@iText)
  3588  0280  00BE               	movlw	high(main@wReadout)
  3589  0281  3000               	movwf	(AddTrace@iText+1)
  3590  0282  00BF               	movlw	(low(_wInterruptText|((0x2)<<8)))&0ffh
  3591  0283  3020               	fcall	_AddTrace
  3592  0284  318C  2419  3181   	line	432
  3593                           	
  3594                           l4397:	
  3595  0287                     	movlw	(low(_wInterruptText|((0x2)<<8)))&0ffh
  3596  0287  3020               	fcall	_PrintLog
  3597  0288  318B  2386  3181   	goto	l4399
  3598  028B  2A8D               	line	433
  3599                           	
  3600                           l185:	
  3601  028C                     	goto	l4399
  3602  028C  2A8D               	line	434
  3603                           	
  3604                           l184:	
  3605  028D                     	line	435
  3606                           	
  3607                           l4399:	
  3608  028D                     	movlw	01h
  3609  028D  3001               	movlb 1	; select bank1
  3610  028E  0021               	addwf	(main@wIterationCounter)^080h,f
  3611  028F  07C9               	movlw	0
  3612  0290  3000               	addwfc	(main@wIterationCounter+1)^080h,f
  3613  0291  3DCA               	line	438
  3614                           	
  3615                           l4401:	
  3616  0292                     	movlw	(low(main@wDebounceEnter|((0x0)<<8)))&0ffh
  3617  0292  30D1               	movlb 0	; select bank0
  3618  0293  0020               	movwf	(??_main+0)+0
  3619  0294  00C7               	movf	(??_main+0)+0,w
  3620  0295  0847               	movwf	(Debounce@ioTimer)
  3621  0296  00AA               	movlw	(low(main@wEnterBottonPressed|((0x0)<<8)))&0ffh
  3622  0297  30D9               	movwf	(??_main+1)+0
  3623  0298  00C8               	movf	(??_main+1)+0,w
  3624  0299  0848               	movwf	(Debounce@swPressed)
  3625  029A  00AB               	movf	(13),w	;volatile
  3626  029B  080D               	andlw	(1<<1)-1
  3627  029C  3901               	fcall	_Debounce
  3628  029D  318C  24CB  3181   	line	439
  3629                           	
  3630                           l4403:	
  3631  02A0                     	movlw	(low(main@wDebounceUp|((0x0)<<8)))&0ffh
  3632  02A0  30D3               	movlb 0	; select bank0
  3633  02A1  0020               	movwf	(??_main+0)+0
  3634  02A2  00C7               	movf	(??_main+0)+0,w
  3635  02A3  0847               	movwf	(Debounce@ioTimer)
  3636  02A4  00AA               	movlw	(low(main@wUpBottonPressed|((0x0)<<8)))&0ffh
  3637  02A5  30D7               	movwf	(??_main+1)+0
  3638  02A6  00C8               	movf	(??_main+1)+0,w
  3639  02A7  0848               	movwf	(Debounce@swPressed)
  3640  02A8  00AB               	rrf	(13),w	;volatile
  3641  02A9  0C0D               	andlw	(1<<1)-1
  3642  02AA  3901               	fcall	_Debounce
  3643  02AB  318C  24CB  3181   	line	440
  3644                           	
  3645                           l4405:	
  3646  02AE                     	movlw	(low(main@wDebounceDown|((0x0)<<8)))&0ffh
  3647  02AE  30D5               	movlb 0	; select bank0
  3648  02AF  0020               	movwf	(??_main+0)+0
  3649  02B0  00C7               	movf	(??_main+0)+0,w
  3650  02B1  0847               	movwf	(Debounce@ioTimer)
  3651  02B2  00AA               	movlw	(low(main@wDownBottonPressed|((0x0)<<8)))&0ffh
  3652  02B3  30D8               	movwf	(??_main+1)+0
  3653  02B4  00C8               	movf	(??_main+1)+0,w
  3654  02B5  0848               	movwf	(Debounce@swPressed)
  3655  02B6  00AB               	rrf	(13),w	;volatile
  3656  02B7  0C0D               	rrf	wreg,f
  3657  02B8  0C89               	andlw	(1<<1)-1
  3658  02B9  3901               	fcall	_Debounce
  3659  02BA  318C  24CB  3181   	line	444
  3660                           	
  3661                           l4407:	
  3662  02BD                     	movlb 1	; select bank1
  3663  02BD  0021               		decf	((main@wUpBottonPressed)^080h),w
  3664  02BE  0357               	btfss	status,2
  3665  02BF  1D03               	goto	u2961
  3666  02C0  2AC2               	goto	u2960
  3667  02C1  2AC3               u2961:
  3668  02C2                     	goto	l4421
  3669  02C2  2AEE               u2960:
  3670  02C3                     	line	446
  3671                           	
  3672                           l4409:	
  3673  02C3                     	clrf	(main@wUpdateMenu)^080h
  3674  02C3  01CB               	incf	(main@wUpdateMenu)^080h,f
  3675  02C4  0ACB               	line	447
  3676                           	
  3677                           l4411:	
  3678  02C5                     	clrf	(main@wUpBottonPressed)^080h
  3679  02C5  01D7               	line	448
  3680                           	goto	l4419
  3681  02C6  2AD9               	line	450
  3682                           	
  3683                           l190:	
  3684  02C7                     	line	452
  3685                           	goto	l4421
  3686  02C7  2AEE               	line	453
  3687                           	
  3688                           l192:	
  3689  02C8                     	line	454
  3690                           	
  3691                           l4413:	
  3692  02C8                     	movlb 1	; select bank1
  3693  02C8  0021               	movf	(_wTempSet)^080h,w
  3694  02C9  086C               	addlw	01h
  3695  02CA  3E01               	movwf	(_wTempSet)^080h
  3696  02CB  00EC               	movlw	0
  3697  02CC  3000               	addwfc	(_wTempSet+1)^080h,w
  3698  02CD  3D6D               	movwf	1+(_wTempSet)^080h
  3699  02CE  00ED               	line	455
  3700                           	goto	l4421
  3701  02CF  2AEE               	line	456
  3702                           	
  3703                           l193:	
  3704  02D0                     	line	457
  3705                           	goto	l4421
  3706  02D0  2AEE               	line	458
  3707                           	
  3708                           l194:	
  3709  02D1                     	line	459
  3710                           	
  3711                           l4415:	
  3712  02D1                     	movlw	low(01h)
  3713  02D1  3001               	movlb 0	; select bank0
  3714  02D2  0020               	movwf	(??_main+0)+0
  3715  02D3  00C7               	movf	(??_main+0)+0,w
  3716  02D4  0847               	movlb 1	; select bank1
  3717  02D5  0021               	addwf	(main@wMenu)^080h,f
  3718  02D6  07DA               	line	460
  3719                           	goto	l4421
  3720  02D7  2AEE               	line	461
  3721                           	
  3722                           l4417:	
  3723  02D8                     	goto	l4421
  3724  02D8  2AEE               	
  3725                           l189:	
  3726  02D9                     	
  3727                           l4419:	
  3728  02D9                     	movf	(main@wMenu)^080h,w
  3729  02D9  085A               	movlb 0	; select bank0
  3730  02DA  0020               	movwf	(??_main+0)+0
  3731  02DB  00C7               	clrf	(??_main+0)+0+1
  3732  02DC  01C8               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3733                           ; Switch size 1, requested type "space"
  3734                           ; Number of cases is 1, Range of values is 0 to 0
  3735                           ; switch strategies available:
  3736                           ; Name         Instructions Cycles
  3737                           ; simple_byte            4     3 (average)
  3738                           ; direct_byte            8     6 (fixed)
  3739                           ; jumptable            260     6 (fixed)
  3740                           ;	Chosen strategy is simple_byte
  3741                           
  3742                           	movf 1+(??_main+0)+0,w
  3743  02DD  0848               	opt asmopt_push
  3744                           	opt asmopt_off
  3745                           	xorlw	0^0	; case 0
  3746  02DE  3A00               	skipnz
  3747  02DF  1903               	goto	l4735
  3748  02E0  2AE2               	goto	l4415
  3749  02E1  2AD1               	opt asmopt_pop
  3750                           	
  3751                           l4735:	
  3752  02E2                     ; Switch size 1, requested type "space"
  3753                           ; Number of cases is 3, Range of values is 128 to 130
  3754                           ; switch strategies available:
  3755                           ; Name         Instructions Cycles
  3756                           ; simple_byte           10     6 (average)
  3757                           ; direct_byte           15     9 (fixed)
  3758                           ; jumptable            263     9 (fixed)
  3759                           ;	Chosen strategy is simple_byte
  3760                           
  3761                           	movf 0+(??_main+0)+0,w
  3762  02E2  0847               	opt asmopt_push
  3763                           	opt asmopt_off
  3764                           	xorlw	128^0	; case 128
  3765  02E3  3A80               	skipnz
  3766  02E4  1903               	goto	l4421
  3767  02E5  2AEE               	xorlw	129^128	; case 129
  3768  02E6  3A01               	skipnz
  3769  02E7  1903               	goto	l4413
  3770  02E8  2AC8               	xorlw	130^129	; case 130
  3771  02E9  3A03               	skipnz
  3772  02EA  1903               	goto	l4421
  3773  02EB  2AEE               	goto	l4415
  3774  02EC  2AD1               	opt asmopt_pop
  3775                           
  3776                           	
  3777                           l191:	
  3778  02ED                     	goto	l4421
  3779  02ED  2AEE               	line	463
  3780                           	
  3781                           l188:	
  3782  02EE                     	line	464
  3783                           	
  3784                           l4421:	
  3785  02EE                     	movlb 1	; select bank1
  3786  02EE  0021               		decf	((main@wDownBottonPressed)^080h),w
  3787  02EF  0358               	btfss	status,2
  3788  02F0  1D03               	goto	u2971
  3789  02F1  2AF3               	goto	u2970
  3790  02F2  2AF4               u2971:
  3791  02F3                     	goto	l4435
  3792  02F3  2B1C               u2970:
  3793  02F4                     	line	466
  3794                           	
  3795                           l4423:	
  3796  02F4                     	clrf	(main@wUpdateMenu)^080h
  3797  02F4  01CB               	incf	(main@wUpdateMenu)^080h,f
  3798  02F5  0ACB               	line	467
  3799                           	
  3800                           l4425:	
  3801  02F6                     	clrf	(main@wDownBottonPressed)^080h
  3802  02F6  01D8               	line	468
  3803                           	goto	l4433
  3804  02F7  2B07               	line	470
  3805                           	
  3806                           l197:	
  3807  02F8                     	line	472
  3808                           	goto	l4435
  3809  02F8  2B1C               	line	473
  3810                           	
  3811                           l199:	
  3812  02F9                     	line	474
  3813                           	
  3814                           l4427:	
  3815  02F9                     	movlb 1	; select bank1
  3816  02F9  0021               	movf	(_wTempSet)^080h,w
  3817  02FA  086C               	addlw	0FFh
  3818  02FB  3EFF               	movwf	(_wTempSet)^080h
  3819  02FC  00EC               	movlw	0FFh
  3820  02FD  30FF               	addwfc	(_wTempSet+1)^080h,w
  3821  02FE  3D6D               	movwf	1+(_wTempSet)^080h
  3822  02FF  00ED               	line	475
  3823                           	goto	l4435
  3824  0300  2B1C               	line	476
  3825                           	
  3826                           l200:	
  3827  0301                     	line	477
  3828                           	goto	l4435
  3829  0301  2B1C               	line	478
  3830                           	
  3831                           l201:	
  3832  0302                     	line	479
  3833                           	
  3834                           l4429:	
  3835  0302                     	movlw	01h
  3836  0302  3001               	movlb 1	; select bank1
  3837  0303  0021               	subwf	(main@wMenu)^080h,f
  3838  0304  02DA               	line	480
  3839                           	goto	l4435
  3840  0305  2B1C               	line	481
  3841                           	
  3842                           l4431:	
  3843  0306                     	goto	l4435
  3844  0306  2B1C               	
  3845                           l196:	
  3846  0307                     	
  3847                           l4433:	
  3848  0307                     	movf	(main@wMenu)^080h,w
  3849  0307  085A               	movlb 0	; select bank0
  3850  0308  0020               	movwf	(??_main+0)+0
  3851  0309  00C7               	clrf	(??_main+0)+0+1
  3852  030A  01C8               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3853                           ; Switch size 1, requested type "space"
  3854                           ; Number of cases is 1, Range of values is 0 to 0
  3855                           ; switch strategies available:
  3856                           ; Name         Instructions Cycles
  3857                           ; simple_byte            4     3 (average)
  3858                           ; direct_byte            8     6 (fixed)
  3859                           ; jumptable            260     6 (fixed)
  3860                           ;	Chosen strategy is simple_byte
  3861                           
  3862                           	movf 1+(??_main+0)+0,w
  3863  030B  0848               	opt asmopt_push
  3864                           	opt asmopt_off
  3865                           	xorlw	0^0	; case 0
  3866  030C  3A00               	skipnz
  3867  030D  1903               	goto	l4737
  3868  030E  2B10               	goto	l4429
  3869  030F  2B02               	opt asmopt_pop
  3870                           	
  3871                           l4737:	
  3872  0310                     ; Switch size 1, requested type "space"
  3873                           ; Number of cases is 3, Range of values is 128 to 130
  3874                           ; switch strategies available:
  3875                           ; Name         Instructions Cycles
  3876                           ; simple_byte           10     6 (average)
  3877                           ; direct_byte           15     9 (fixed)
  3878                           ; jumptable            263     9 (fixed)
  3879                           ;	Chosen strategy is simple_byte
  3880                           
  3881                           	movf 0+(??_main+0)+0,w
  3882  0310  0847               	opt asmopt_push
  3883                           	opt asmopt_off
  3884                           	xorlw	128^0	; case 128
  3885  0311  3A80               	skipnz
  3886  0312  1903               	goto	l4435
  3887  0313  2B1C               	xorlw	129^128	; case 129
  3888  0314  3A01               	skipnz
  3889  0315  1903               	goto	l4427
  3890  0316  2AF9               	xorlw	130^129	; case 130
  3891  0317  3A03               	skipnz
  3892  0318  1903               	goto	l4435
  3893  0319  2B1C               	goto	l4429
  3894  031A  2B02               	opt asmopt_pop
  3895                           
  3896                           	
  3897                           l198:	
  3898  031B                     	goto	l4435
  3899  031B  2B1C               	line	482
  3900                           	
  3901                           l195:	
  3902  031C                     	line	483
  3903                           	
  3904                           l4435:	
  3905  031C                     	movlb 1	; select bank1
  3906  031C  0021               		decf	((main@wEnterBottonPressed)^080h),w
  3907  031D  0359               	btfss	status,2
  3908  031E  1D03               	goto	u2981
  3909  031F  2B21               	goto	u2980
  3910  0320  2B22               u2981:
  3911  0321                     	goto	l4473
  3912  0321  2B8C               u2980:
  3913  0322                     	line	485
  3914                           	
  3915                           l4437:	
  3916  0322                     	clrf	(main@wUpdateMenu)^080h
  3917  0322  01CB               	incf	(main@wUpdateMenu)^080h,f
  3918  0323  0ACB               	line	486
  3919                           	
  3920                           l4439:	
  3921  0324                     	clrf	(main@wEnterBottonPressed)^080h
  3922  0324  01D9               	line	488
  3923                           	
  3924                           l4441:	
  3925  0325                     	movf	((main@wEditingMode)^080h),w
  3926  0325  084C               	btfss	status,2
  3927  0326  1D03               	goto	u2991
  3928  0327  2B29               	goto	u2990
  3929  0328  2B2A               u2991:
  3930  0329                     	goto	l4461
  3931  0329  2B5E               u2990:
  3932  032A                     	line	490
  3933                           	
  3934                           l4443:	
  3935  032A                     	clrf	(main@wEditingMode)^080h
  3936  032A  01CC               	incf	(main@wEditingMode)^080h,f
  3937  032B  0ACC               	line	491
  3938                           	
  3939                           l4445:	
  3940  032C                     	movf	(main@wMenu)^080h,w
  3941  032C  085A               	addlw	080h
  3942  032D  3E80               	movlb 0	; select bank0
  3943  032E  0020               	movwf	(??_main+0)+0
  3944  032F  00C7               	movf	(??_main+0)+0,w
  3945  0330  0847               	movlb 1	; select bank1
  3946  0331  0021               	movwf	(main@wMenu)^080h
  3947  0332  00DA               	line	493
  3948                           	
  3949                           l4447:	
  3950  0333                     	movlb 0	; select bank0
  3951  0333  0020               	clrf	(_gUartRXBufferIndex)
  3952  0334  01CD               	line	494
  3953                           	
  3954                           l4449:	
  3955  0335                     	movlb 5	; select bank5
  3956  0335  0025               	clrf	(_gUartRXBuffer)^0280h
  3957  0336  01A0               	line	495
  3958                           	
  3959                           l4451:	
  3960  0337                     	movlw	low(_gUartTXBuffer)
  3961  0337  30A0               	movlb 0	; select bank0
  3962  0338  0020               	movwf	(memcpy@d1)
  3963  0339  00AA               	movlw	high(_gUartTXBuffer)
  3964  033A  3001               	movwf	(memcpy@d1+1)
  3965  033B  00AB               	movlw	low(((STR_3)|8000h))
  3966  033C  3032               	movwf	(memcpy@s1)
  3967  033D  00AC               	movlw	high(((STR_3)|8000h))
  3968  033E  3090               	movwf	((memcpy@s1))+1
  3969  033F  00AD               	movlw	0Ch
  3970  0340  300C               	movwf	(memcpy@n)
  3971  0341  00AE               	movlw	0
  3972  0342  3000               	movwf	((memcpy@n))+1
  3973  0343  00AF               	fcall	_memcpy
  3974  0344  318B  23B4  3181   	line	496
  3975                           	
  3976                           l4453:	
  3977  0347                     	movlw	low(0Dh)
  3978  0347  300D               	movlb 0	; select bank0
  3979  0348  0020               	movwf	(??_main+0)+0
  3980  0349  00C7               	movf	(??_main+0)+0,w
  3981  034A  0847               	movlb 3	; select bank3
  3982  034B  0023               	movwf	0+(_gUartTXBuffer)^0180h+0Ch
  3983  034C  00AC               	line	497
  3984                           	
  3985                           l4455:	
  3986  034D                     	movlw	low(0Ah)
  3987  034D  300A               	movlb 0	; select bank0
  3988  034E  0020               	movwf	(??_main+0)+0
  3989  034F  00C7               	movf	(??_main+0)+0,w
  3990  0350  0847               	movlb 3	; select bank3
  3991  0351  0023               	movwf	0+(_gUartTXBuffer)^0180h+0Dh
  3992  0352  00AD               	line	498
  3993                           	
  3994                           l4457:	
  3995  0353                     	clrf	0+(_gUartTXBuffer)^0180h+0Eh
  3996  0353  01AE               	line	499
  3997                           	
  3998                           l4459:	
  3999  0354                     	movlw	low(0Eh)
  4000  0354  300E               	movlb 0	; select bank0
  4001  0355  0020               	movwf	(??_main+0)+0
  4002  0356  00C7               	movf	(??_main+0)+0,w
  4003  0357  0847               	movwf	(Send_UART_Data@iData_Length)
  4004  0358  00B6               	movlw	(low(_gUartTXBuffer|((0x1)<<8)))&0ffh
  4005  0359  30A0               	fcall	_Send_UART_Data
  4006  035A  318B  2302  3181   	line	500
  4007                           	goto	l4473
  4008  035D  2B8C               	line	501
  4009                           	
  4010                           l203:	
  4011  035E                     	line	503
  4012                           	
  4013                           l4461:	
  4014  035E                     	movlb 0	; select bank0
  4015  035E  0020               	clrf	(_gUartRXBufferIndex)
  4016  035F  01CD               	line	504
  4017                           	movlb 5	; select bank5
  4018  0360  0025               	clrf	(_gUartRXBuffer)^0280h
  4019  0361  01A0               	line	505
  4020                           	
  4021                           l4463:	
  4022  0362                     	movlw	low(_gUartTXBuffer)
  4023  0362  30A0               	movlb 0	; select bank0
  4024  0363  0020               	movwf	(memcpy@d1)
  4025  0364  00AA               	movlw	high(_gUartTXBuffer)
  4026  0365  3001               	movwf	(memcpy@d1+1)
  4027  0366  00AB               	movlw	low(((STR_4)|8000h))
  4028  0367  3000               	movwf	(memcpy@s1)
  4029  0368  00AC               	movlw	high(((STR_4)|8000h))
  4030  0369  3090               	movwf	((memcpy@s1))+1
  4031  036A  00AD               	movlw	026h
  4032  036B  3026               	movwf	(memcpy@n)
  4033  036C  00AE               	movlw	0
  4034  036D  3000               	movwf	((memcpy@n))+1
  4035  036E  00AF               	fcall	_memcpy
  4036  036F  318B  23B4  3181   	line	508
  4037                           	
  4038                           l4465:	
  4039  0372                     	movlw	low(0Dh)
  4040  0372  300D               	movlb 0	; select bank0
  4041  0373  0020               	movwf	(??_main+0)+0
  4042  0374  00C7               	movf	(??_main+0)+0,w
  4043  0375  0847               	movlb 3	; select bank3
  4044  0376  0023               	movwf	0+(_gUartTXBuffer)^0180h+026h
  4045  0377  00C6               	line	509
  4046                           	
  4047                           l4467:	
  4048  0378                     	movlw	low(0Ah)
  4049  0378  300A               	movlb 0	; select bank0
  4050  0379  0020               	movwf	(??_main+0)+0
  4051  037A  00C7               	movf	(??_main+0)+0,w
  4052  037B  0847               	movlb 3	; select bank3
  4053  037C  0023               	movwf	0+(_gUartTXBuffer)^0180h+027h
  4054  037D  00C7               	line	510
  4055                           	
  4056                           l4469:	
  4057  037E                     	clrf	0+(_gUartTXBuffer)^0180h+028h
  4058  037E  01C8               	line	511
  4059                           	movlw	low(028h)
  4060  037F  3028               	movlb 0	; select bank0
  4061  0380  0020               	movwf	(??_main+0)+0
  4062  0381  00C7               	movf	(??_main+0)+0,w
  4063  0382  0847               	movwf	(Send_UART_Data@iData_Length)
  4064  0383  00B6               	movlw	(low(_gUartTXBuffer|((0x1)<<8)))&0ffh
  4065  0384  30A0               	fcall	_Send_UART_Data
  4066  0385  318B  2302  3181   	line	512
  4067                           	
  4068                           l4471:	
  4069  0388                     	movlb 1	; select bank1
  4070  0388  0021               	clrf	(main@wEditingMode)^080h
  4071  0389  01CC               	goto	l4473
  4072  038A  2B8C               	line	513
  4073                           	
  4074                           l204:	
  4075  038B                     	goto	l4473
  4076  038B  2B8C               	line	514
  4077                           	
  4078                           l202:	
  4079  038C                     	line	515
  4080                           	
  4081                           l4473:	
  4082  038C                     	movlb 1	; select bank1
  4083  038C  0021               		incf	((main@wMenu)^080h),w
  4084  038D  0A5A               	btfss	status,2
  4085  038E  1D03               	goto	u3001
  4086  038F  2B91               	goto	u3000
  4087  0390  2B92               u3001:
  4088  0391                     	goto	l4479
  4089  0391  2B9B               u3000:
  4090  0392                     	line	517
  4091                           	
  4092                           l4475:	
  4093  0392                     	clrf	(main@wUpdateMenu)^080h
  4094  0392  01CB               	incf	(main@wUpdateMenu)^080h,f
  4095  0393  0ACB               	line	518
  4096                           	
  4097                           l4477:	
  4098  0394                     	movlw	low(02h)
  4099  0394  3002               	movlb 0	; select bank0
  4100  0395  0020               	movwf	(??_main+0)+0
  4101  0396  00C7               	movf	(??_main+0)+0,w
  4102  0397  0847               	movlb 1	; select bank1
  4103  0398  0021               	movwf	(main@wMenu)^080h
  4104  0399  00DA               	goto	l4479
  4105  039A  2B9B               	line	519
  4106                           	
  4107                           l205:	
  4108  039B                     	line	520
  4109                           	
  4110                           l4479:	
  4111  039B                     		movlw	3
  4112  039B  3003               	xorwf	((main@wMenu)^080h),w
  4113  039C  065A               	btfss	status,2
  4114  039D  1D03               	goto	u3011
  4115  039E  2BA0               	goto	u3010
  4116  039F  2BA1               u3011:
  4117  03A0                     	goto	l4375
  4118  03A0  2A01               u3010:
  4119  03A1                     	line	522
  4120                           	
  4121                           l4481:	
  4122  03A1                     	clrf	(main@wUpdateMenu)^080h
  4123  03A1  01CB               	incf	(main@wUpdateMenu)^080h,f
  4124  03A2  0ACB               	line	523
  4125                           	
  4126                           l4483:	
  4127  03A3                     	clrf	(main@wMenu)^080h
  4128  03A3  01DA               	goto	l4375
  4129  03A4  2A01               	line	524
  4130                           	
  4131                           l206:	
  4132  03A5                     	goto	l4375
  4133  03A5  2A01               	line	527
  4134                           	
  4135                           l207:	
  4136  03A6                     	goto	l4375
  4137  03A6  2A01               	
  4138                           l208:	
  4139  03A7                     	line	529
  4140                           	
  4141                           l209:	
  4142  03A7                     	global	start
  4143                           	ljmp	start
  4144  03A7  3180  28B1         	opt stack 0
  4145                           GLOBAL	__end_of_main
  4146                           	__end_of_main:
  4147  03A9                     	signat	_main,89
  4148                           	global	_setNotBlinkingCursor
  4149                           
  4150 ;; *************** function _setNotBlinkingCursor *****************
  4151 ;; Defined at:
  4152 ;;		line 220 in file "LCD_hd44780u_qy_2004a.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;		None
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;		None
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1    wreg      void 
  4159 ;; Registers used:
  4160 ;;		wreg, status,2, status,0, pclath, cstack
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4168 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4169 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4170 ;;Total ram usage:        1 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:    9
  4173 ;; This function calls:
  4174 ;;		_writeInsChk
  4175 ;; This function is called by:
  4176 ;;		_main
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4180                           	file	"LCD_hd44780u_qy_2004a.c"
  4181                           	line	220
  4182                           global __ptext1
  4183                           __ptext1:	;psect for function _setNotBlinkingCursor
  4184  09D2                     psect	text1
  4185                           	file	"LCD_hd44780u_qy_2004a.c"
  4186                           	line	220
  4187                           	global	__size_of_setNotBlinkingCursor
  4188                           	__size_of_setNotBlinkingCursor	equ	__end_of_setNotBlinkingCursor-_setNotBlinkingCursor

  4189  000B                     	
  4190                           _setNotBlinkingCursor:	
  4191  09D2                     ;incstack = 0
  4192                           	opt	stack 6
  4193                           ; Regs used in _setNotBlinkingCursor: [wreg+status,2+status,0+pclath+cstack]
  4194                           	line	222
  4195                           	
  4196                           l3041:	
  4197  09D2                     ;LCD_hd44780u_qy_2004a.c: 222:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFE;
  4198                           	movlb 0	; select bank0
  4199  09D2  0020               	movf	(_mDisplayOnOffReg),w
  4200  09D3  085D               	andlw	0FEh
  4201  09D4  39FE               	movwf	(??_setNotBlinkingCursor+0)+0
  4202  09D5  00B0               	movf	(??_setNotBlinkingCursor+0)+0,w
  4203  09D6  0830               	movwf	(_mDisplayOnOffReg)
  4204  09D7  00DD               	line	223
  4205                           	
  4206                           l3043:	
  4207  09D8                     ;LCD_hd44780u_qy_2004a.c: 223:   writeInsChk(mDisplayOnOffReg);
  4208                           	movf	(_mDisplayOnOffReg),w
  4209  09D8  085D               	fcall	_writeInsChk
  4210  09D9  3189  21B1  3189   	line	224
  4211                           	
  4212                           l337:	
  4213  09DC                     	return
  4214  09DC  0008               	opt stack 0
  4215                           GLOBAL	__end_of_setNotBlinkingCursor
  4216                           	__end_of_setNotBlinkingCursor:
  4217  09DD                     	signat	_setNotBlinkingCursor,89
  4218                           	global	_setCursorOff
  4219                           
  4220 ;; *************** function _setCursorOff *****************
  4221 ;; Defined at:
  4222 ;;		line 225 in file "LCD_hd44780u_qy_2004a.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;		None
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;		None
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  1    wreg      void 
  4229 ;; Registers used:
  4230 ;;		wreg, status,2, status,0, pclath, cstack
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4238 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4239 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4240 ;;Total ram usage:        1 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:    9
  4243 ;; This function calls:
  4244 ;;		_writeInsChk
  4245 ;; This function is called by:
  4246 ;;		_main
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4250                           	line	225
  4251                           global __ptext2
  4252                           __ptext2:	;psect for function _setCursorOff
  4253  09C7                     psect	text2
  4254                           	file	"LCD_hd44780u_qy_2004a.c"
  4255                           	line	225
  4256                           	global	__size_of_setCursorOff
  4257                           	__size_of_setCursorOff	equ	__end_of_setCursorOff-_setCursorOff
  4258  000B                     	
  4259                           _setCursorOff:	
  4260  09C7                     ;incstack = 0
  4261                           	opt	stack 6
  4262                           ; Regs used in _setCursorOff: [wreg+status,2+status,0+pclath+cstack]
  4263                           	line	227
  4264                           	
  4265                           l3033:	
  4266  09C7                     ;LCD_hd44780u_qy_2004a.c: 227:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFD;
  4267                           	movlb 0	; select bank0
  4268  09C7  0020               	movf	(_mDisplayOnOffReg),w
  4269  09C8  085D               	andlw	0FDh
  4270  09C9  39FD               	movwf	(??_setCursorOff+0)+0
  4271  09CA  00B0               	movf	(??_setCursorOff+0)+0,w
  4272  09CB  0830               	movwf	(_mDisplayOnOffReg)
  4273  09CC  00DD               	line	228
  4274                           	
  4275                           l3035:	
  4276  09CD                     ;LCD_hd44780u_qy_2004a.c: 228:   writeInsChk(mDisplayOnOffReg);
  4277                           	movf	(_mDisplayOnOffReg),w
  4278  09CD  085D               	fcall	_writeInsChk
  4279  09CE  3189  21B1  3189   	line	229
  4280                           	
  4281                           l340:	
  4282  09D1                     	return
  4283  09D1  0008               	opt stack 0
  4284                           GLOBAL	__end_of_setCursorOff
  4285                           	__end_of_setCursorOff:
  4286  09D2                     	signat	_setCursorOff,89
  4287                           	global	_printEM1812
  4288                           
  4289 ;; *************** function _printEM1812 *****************
  4290 ;; Defined at:
  4291 ;;		line 16 in file "EM1812.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  wVariable       2   19[BANK0 ] short 
  4294 ;;  oTextOut        1   21[BANK0 ] PTR unsigned char 
  4295 ;;		 -> main@wReadout(20), 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;  wWritingPosi    1   28[BANK0 ] unsigned char 
  4298 ;;  wTen            1   27[BANK0 ] unsigned char 
  4299 ;;  wIsNegative     1   26[BANK0 ] unsigned char 
  4300 ;;  wDecimal        1   25[BANK0 ] unsigned char 
  4301 ;;  wUnity          1   24[BANK0 ] unsigned char 
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  1    wreg      void 
  4304 ;; Registers used:
  4305 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4311 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  4312 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  4313 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  4314 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  4315 ;;Total ram usage:       10 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; Hardware stack levels required when called:    7
  4318 ;; This function calls:
  4319 ;;		___awdiv
  4320 ;;		___awmod
  4321 ;; This function is called by:
  4322 ;;		_main
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4326                           	file	"EM1812.c"
  4327                           	line	16
  4328                           global __ptext3
  4329                           __ptext3:	;psect for function _printEM1812
  4330  06D8                     psect	text3
  4331                           	file	"EM1812.c"
  4332                           	line	16
  4333                           	global	__size_of_printEM1812
  4334                           	__size_of_printEM1812	equ	__end_of_printEM1812-_printEM1812
  4335  00B0                     	
  4336                           _printEM1812:	
  4337  06D8                     ;incstack = 0
  4338                           	opt	stack 8
  4339                           ; Regs used in _printEM1812: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4340                           	line	21
  4341                           	
  4342                           l3137:	
  4343  06D8                     ;EM1812.c: 16: void printEM1812(int16_t wVariable, char* oTextOut);EM1812.c: 17: {;EM181
                                 2.c: 18:     uint8_t wTen;;EM1812.c: 19:     uint8_t wUnity;;EM1812.c: 20:     uint8_t w
                                 Decimal;;EM1812.c: 21:     uint8_t wIsNegative=0;
  4344                           	movlb 0	; select bank0
  4345  06D8  0020               	clrf	(printEM1812@wIsNegative)
  4346  06D9  01BA               	line	22
  4347                           ;EM1812.c: 22:     uint8_t wWritingPosition=0;
  4348                           	clrf	(printEM1812@wWritingPosition)
  4349  06DA  01BC               	line	24
  4350                           	
  4351                           l3139:	
  4352  06DB                     ;EM1812.c: 24:     if(wVariable < 0)
  4353                           	btfss	(printEM1812@wVariable+1),7
  4354  06DB  1FB4               	goto	u2001
  4355  06DC  2EDE               	goto	u2000
  4356  06DD  2EDF               u2001:
  4357  06DE                     	goto	l3145
  4358  06DE  2EE7               u2000:
  4359  06DF                     	line	26
  4360                           	
  4361                           l3141:	
  4362  06DF                     ;EM1812.c: 25:     {;EM1812.c: 26:         wIsNegative = 1;
  4363                           	clrf	(printEM1812@wIsNegative)
  4364  06DF  01BA               	incf	(printEM1812@wIsNegative),f
  4365  06E0  0ABA               	line	27
  4366                           	
  4367                           l3143:	
  4368  06E1                     ;EM1812.c: 27:         wVariable = -wVariable;
  4369                           	comf	(printEM1812@wVariable),f
  4370  06E1  09B3               	comf	(printEM1812@wVariable+1),f
  4371  06E2  09B4               	incf	(printEM1812@wVariable),f
  4372  06E3  0AB3               	skipnz
  4373  06E4  1903               	incf	(printEM1812@wVariable+1),f
  4374  06E5  0AB4               	goto	l3145
  4375  06E6  2EE7               	line	28
  4376                           ;EM1812.c: 28:     }
  4377                           	
  4378                           l432:	
  4379  06E7                     	line	30
  4380                           	
  4381                           l3145:	
  4382  06E7                     ;EM1812.c: 30:     wTen = wVariable/100;
  4383                           	movlw	064h
  4384  06E7  3064               	movwf	(___awdiv@divisor)
  4385  06E8  00AA               	movlw	0
  4386  06E9  3000               	movwf	((___awdiv@divisor))+1
  4387  06EA  00AB               	movf	(printEM1812@wVariable+1),w
  4388  06EB  0834               	movwf	(___awdiv@dividend+1)
  4389  06EC  00AD               	movf	(printEM1812@wVariable),w
  4390  06ED  0833               	movwf	(___awdiv@dividend)
  4391  06EE  00AC               	fcall	___awdiv
  4392  06EF  3187  2788  3186   	movlb 0	; select bank0
  4393  06F2  0020               	movf	(0+(?___awdiv)),w
  4394  06F3  082A               	movwf	(??_printEM1812+0)+0
  4395  06F4  00B6               	movf	(??_printEM1812+0)+0,w
  4396  06F5  0836               	movwf	(printEM1812@wTen)
  4397  06F6  00BB               	line	31
  4398                           	
  4399                           l3147:	
  4400  06F7                     ;EM1812.c: 31:     wVariable = wVariable % 100;
  4401                           	movlw	064h
  4402  06F7  3064               	movwf	(___awmod@divisor)
  4403  06F8  00AA               	movlw	0
  4404  06F9  3000               	movwf	((___awmod@divisor))+1
  4405  06FA  00AB               	movf	(printEM1812@wVariable+1),w
  4406  06FB  0834               	movwf	(___awmod@dividend+1)
  4407  06FC  00AD               	movf	(printEM1812@wVariable),w
  4408  06FD  0833               	movwf	(___awmod@dividend)
  4409  06FE  00AC               	fcall	___awmod
  4410  06FF  318D  2555  3186   	movlb 0	; select bank0
  4411  0702  0020               	movf	(1+(?___awmod)),w
  4412  0703  082B               	movwf	(printEM1812@wVariable+1)
  4413  0704  00B4               	movf	(0+(?___awmod)),w
  4414  0705  082A               	movwf	(printEM1812@wVariable)
  4415  0706  00B3               	line	32
  4416                           	
  4417                           l3149:	
  4418  0707                     ;EM1812.c: 32:     wUnity = wVariable/10;
  4419                           	movlw	0Ah
  4420  0707  300A               	movwf	(___awdiv@divisor)
  4421  0708  00AA               	movlw	0
  4422  0709  3000               	movwf	((___awdiv@divisor))+1
  4423  070A  00AB               	movf	(printEM1812@wVariable+1),w
  4424  070B  0834               	movwf	(___awdiv@dividend+1)
  4425  070C  00AD               	movf	(printEM1812@wVariable),w
  4426  070D  0833               	movwf	(___awdiv@dividend)
  4427  070E  00AC               	fcall	___awdiv
  4428  070F  3187  2788  3186   	movlb 0	; select bank0
  4429  0712  0020               	movf	(0+(?___awdiv)),w
  4430  0713  082A               	movwf	(??_printEM1812+0)+0
  4431  0714  00B6               	movf	(??_printEM1812+0)+0,w
  4432  0715  0836               	movwf	(printEM1812@wUnity)
  4433  0716  00B8               	line	33
  4434                           	
  4435                           l3151:	
  4436  0717                     ;EM1812.c: 33:     wVariable = wVariable %10;
  4437                           	movlw	0Ah
  4438  0717  300A               	movwf	(___awmod@divisor)
  4439  0718  00AA               	movlw	0
  4440  0719  3000               	movwf	((___awmod@divisor))+1
  4441  071A  00AB               	movf	(printEM1812@wVariable+1),w
  4442  071B  0834               	movwf	(___awmod@dividend+1)
  4443  071C  00AD               	movf	(printEM1812@wVariable),w
  4444  071D  0833               	movwf	(___awmod@dividend)
  4445  071E  00AC               	fcall	___awmod
  4446  071F  318D  2555  3186   	movlb 0	; select bank0
  4447  0722  0020               	movf	(1+(?___awmod)),w
  4448  0723  082B               	movwf	(printEM1812@wVariable+1)
  4449  0724  00B4               	movf	(0+(?___awmod)),w
  4450  0725  082A               	movwf	(printEM1812@wVariable)
  4451  0726  00B3               	line	34
  4452                           	
  4453                           l3153:	
  4454  0727                     ;EM1812.c: 34:     wDecimal = wVariable;
  4455                           	movf	(printEM1812@wVariable),w
  4456  0727  0833               	movwf	(??_printEM1812+0)+0
  4457  0728  00B6               	movf	(??_printEM1812+0)+0,w
  4458  0729  0836               	movwf	(printEM1812@wDecimal)
  4459  072A  00B9               	line	37
  4460                           ;EM1812.c: 37:     if(wIsNegative)
  4461                           	movf	((printEM1812@wIsNegative)),w
  4462  072B  083A               	btfsc	status,2
  4463  072C  1903               	goto	u2011
  4464  072D  2F2F               	goto	u2010
  4465  072E  2F30               u2011:
  4466  072F                     	goto	l3159
  4467  072F  2F3F               u2010:
  4468  0730                     	line	39
  4469                           	
  4470                           l3155:	
  4471  0730                     ;EM1812.c: 38:     {;EM1812.c: 39:         oTextOut[wWritingPosition] = '-';
  4472                           	movlw	low(02Dh)
  4473  0730  302D               	movwf	(??_printEM1812+0)+0
  4474  0731  00B6               	movf	(printEM1812@wWritingPosition),w
  4475  0732  083C               	addwf	(printEM1812@oTextOut),w
  4476  0733  0735               	movwf	(??_printEM1812+1)+0
  4477  0734  00B7               	movf	0+(??_printEM1812+1)+0,w
  4478  0735  0837               	movwf	fsr1l
  4479  0736  0086               	clrf fsr1h	
  4480  0737  0187               	
  4481                           	movf	(??_printEM1812+0)+0,w
  4482  0738  0836               	movwf	indf1
  4483  0739  0081               	line	40
  4484                           	
  4485                           l3157:	
  4486  073A                     ;EM1812.c: 40:         wWritingPosition++;
  4487                           	movlw	low(01h)
  4488  073A  3001               	movwf	(??_printEM1812+0)+0
  4489  073B  00B6               	movf	(??_printEM1812+0)+0,w
  4490  073C  0836               	addwf	(printEM1812@wWritingPosition),f
  4491  073D  07BC               	goto	l3159
  4492  073E  2F3F               	line	41
  4493                           ;EM1812.c: 41:     }
  4494                           	
  4495                           l433:	
  4496  073F                     	line	42
  4497                           	
  4498                           l3159:	
  4499  073F                     ;EM1812.c: 42:     if( wTen != 0 )
  4500                           	movf	((printEM1812@wTen)),w
  4501  073F  083B               	btfsc	status,2
  4502  0740  1903               	goto	u2021
  4503  0741  2F43               	goto	u2020
  4504  0742  2F44               u2021:
  4505  0743                     	goto	l3165
  4506  0743  2F54               u2020:
  4507  0744                     	line	44
  4508                           	
  4509                           l3161:	
  4510  0744                     ;EM1812.c: 43:     {;EM1812.c: 44:         oTextOut[wWritingPosition] = '0' + wTen;
  4511                           	movf	(printEM1812@wTen),w
  4512  0744  083B               	addlw	030h
  4513  0745  3E30               	movwf	(??_printEM1812+0)+0
  4514  0746  00B6               	movf	(printEM1812@wWritingPosition),w
  4515  0747  083C               	addwf	(printEM1812@oTextOut),w
  4516  0748  0735               	movwf	(??_printEM1812+1)+0
  4517  0749  00B7               	movf	0+(??_printEM1812+1)+0,w
  4518  074A  0837               	movwf	fsr1l
  4519  074B  0086               	clrf fsr1h	
  4520  074C  0187               	
  4521                           	movf	(??_printEM1812+0)+0,w
  4522  074D  0836               	movwf	indf1
  4523  074E  0081               	line	45
  4524                           	
  4525                           l3163:	
  4526  074F                     ;EM1812.c: 45:         wWritingPosition++;
  4527                           	movlw	low(01h)
  4528  074F  3001               	movwf	(??_printEM1812+0)+0
  4529  0750  00B6               	movf	(??_printEM1812+0)+0,w
  4530  0751  0836               	addwf	(printEM1812@wWritingPosition),f
  4531  0752  07BC               	goto	l3165
  4532  0753  2F54               	line	46
  4533                           ;EM1812.c: 46:     }
  4534                           	
  4535                           l434:	
  4536  0754                     	line	47
  4537                           	
  4538                           l3165:	
  4539  0754                     ;EM1812.c: 47:     oTextOut[wWritingPosition] = '0' + wUnity;
  4540                           	movf	(printEM1812@wUnity),w
  4541  0754  0838               	addlw	030h
  4542  0755  3E30               	movwf	(??_printEM1812+0)+0
  4543  0756  00B6               	movf	(printEM1812@wWritingPosition),w
  4544  0757  083C               	addwf	(printEM1812@oTextOut),w
  4545  0758  0735               	movwf	(??_printEM1812+1)+0
  4546  0759  00B7               	movf	0+(??_printEM1812+1)+0,w
  4547  075A  0837               	movwf	fsr1l
  4548  075B  0086               	clrf fsr1h	
  4549  075C  0187               	
  4550                           	movf	(??_printEM1812+0)+0,w
  4551  075D  0836               	movwf	indf1
  4552  075E  0081               	line	48
  4553                           ;EM1812.c: 48:     wWritingPosition++;
  4554                           	movlw	low(01h)
  4555  075F  3001               	movwf	(??_printEM1812+0)+0
  4556  0760  00B6               	movf	(??_printEM1812+0)+0,w
  4557  0761  0836               	addwf	(printEM1812@wWritingPosition),f
  4558  0762  07BC               	line	49
  4559                           	
  4560                           l3167:	
  4561  0763                     ;EM1812.c: 49:     oTextOut[wWritingPosition] = ',';
  4562                           	movlw	low(02Ch)
  4563  0763  302C               	movwf	(??_printEM1812+0)+0
  4564  0764  00B6               	movf	(printEM1812@wWritingPosition),w
  4565  0765  083C               	addwf	(printEM1812@oTextOut),w
  4566  0766  0735               	movwf	(??_printEM1812+1)+0
  4567  0767  00B7               	movf	0+(??_printEM1812+1)+0,w
  4568  0768  0837               	movwf	fsr1l
  4569  0769  0086               	clrf fsr1h	
  4570  076A  0187               	
  4571                           	movf	(??_printEM1812+0)+0,w
  4572  076B  0836               	movwf	indf1
  4573  076C  0081               	line	50
  4574                           	
  4575                           l3169:	
  4576  076D                     ;EM1812.c: 50:     wWritingPosition++;
  4577                           	movlw	low(01h)
  4578  076D  3001               	movwf	(??_printEM1812+0)+0
  4579  076E  00B6               	movf	(??_printEM1812+0)+0,w
  4580  076F  0836               	addwf	(printEM1812@wWritingPosition),f
  4581  0770  07BC               	line	51
  4582                           ;EM1812.c: 51:     oTextOut[wWritingPosition] = '0' + wDecimal;
  4583                           	movf	(printEM1812@wDecimal),w
  4584  0771  0839               	addlw	030h
  4585  0772  3E30               	movwf	(??_printEM1812+0)+0
  4586  0773  00B6               	movf	(printEM1812@wWritingPosition),w
  4587  0774  083C               	addwf	(printEM1812@oTextOut),w
  4588  0775  0735               	movwf	(??_printEM1812+1)+0
  4589  0776  00B7               	movf	0+(??_printEM1812+1)+0,w
  4590  0777  0837               	movwf	fsr1l
  4591  0778  0086               	clrf fsr1h	
  4592  0779  0187               	
  4593                           	movf	(??_printEM1812+0)+0,w
  4594  077A  0836               	movwf	indf1
  4595  077B  0081               	line	52
  4596                           	
  4597                           l3171:	
  4598  077C                     ;EM1812.c: 52:     wWritingPosition++;
  4599                           	movlw	low(01h)
  4600  077C  3001               	movwf	(??_printEM1812+0)+0
  4601  077D  00B6               	movf	(??_printEM1812+0)+0,w
  4602  077E  0836               	addwf	(printEM1812@wWritingPosition),f
  4603  077F  07BC               	line	53
  4604                           	
  4605                           l3173:	
  4606  0780                     ;EM1812.c: 53:     oTextOut[wWritingPosition] = 0;
  4607                           	movf	(printEM1812@wWritingPosition),w
  4608  0780  083C               	addwf	(printEM1812@oTextOut),w
  4609  0781  0735               	movwf	(??_printEM1812+0)+0
  4610  0782  00B6               	movf	0+(??_printEM1812+0)+0,w
  4611  0783  0836               	movwf	fsr1l
  4612  0784  0086               	clrf fsr1h	
  4613  0785  0187               	
  4614                           	clrf	indf1
  4615  0786  0181               	line	55
  4616                           	
  4617                           l435:	
  4618  0787                     	return
  4619  0787  0008               	opt stack 0
  4620                           GLOBAL	__end_of_printEM1812
  4621                           	__end_of_printEM1812:
  4622  0788                     	signat	_printEM1812,8313
  4623                           	global	___awmod
  4624                           
  4625 ;; *************** function ___awmod *****************
  4626 ;; Defined at:
  4627 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  divisor         2   10[BANK0 ] int 
  4630 ;;  dividend        2   12[BANK0 ] int 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  sign            1   16[BANK0 ] unsigned char 
  4633 ;;  counter         1   15[BANK0 ] unsigned char 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  2   10[BANK0 ] int 
  4636 ;; Registers used:
  4637 ;;		wreg, status,2, status,0
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4643 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4644 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  4645 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4646 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
  4647 ;;Total ram usage:        7 bytes
  4648 ;; Hardware stack levels used:    1
  4649 ;; Hardware stack levels required when called:    6
  4650 ;; This function calls:
  4651 ;;		Nothing
  4652 ;; This function is called by:
  4653 ;;		_printEM1812
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  4657                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  4658                           	line	5
  4659                           global __ptext4
  4660                           __ptext4:	;psect for function ___awmod
  4661  0D55                     psect	text4
  4662                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  4663                           	line	5
  4664                           	global	__size_of___awmod
  4665                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  4666  005E                     	
  4667                           ___awmod:	
  4668  0D55                     ;incstack = 0
  4669                           	opt	stack 8
  4670                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4671                           	line	12
  4672                           	
  4673                           l2859:	
  4674  0D55                     	movlb 0	; select bank0
  4675  0D55  0020               	clrf	(___awmod@sign)
  4676  0D56  01B0               	line	13
  4677                           	
  4678                           l2861:	
  4679  0D57                     	btfss	(___awmod@dividend+1),7
  4680  0D57  1FAD               	goto	u1691
  4681  0D58  2D5A               	goto	u1690
  4682  0D59  2D5B               u1691:
  4683  0D5A                     	goto	l2867
  4684  0D5A  2D63               u1690:
  4685  0D5B                     	line	14
  4686                           	
  4687                           l2863:	
  4688  0D5B                     	comf	(___awmod@dividend),f
  4689  0D5B  09AC               	comf	(___awmod@dividend+1),f
  4690  0D5C  09AD               	incf	(___awmod@dividend),f
  4691  0D5D  0AAC               	skipnz
  4692  0D5E  1903               	incf	(___awmod@dividend+1),f
  4693  0D5F  0AAD               	line	15
  4694                           	
  4695                           l2865:	
  4696  0D60                     	clrf	(___awmod@sign)
  4697  0D60  01B0               	incf	(___awmod@sign),f
  4698  0D61  0AB0               	goto	l2867
  4699  0D62  2D63               	line	16
  4700                           	
  4701                           l765:	
  4702  0D63                     	line	17
  4703                           	
  4704                           l2867:	
  4705  0D63                     	btfss	(___awmod@divisor+1),7
  4706  0D63  1FAB               	goto	u1701
  4707  0D64  2D66               	goto	u1700
  4708  0D65  2D67               u1701:
  4709  0D66                     	goto	l2871
  4710  0D66  2D6D               u1700:
  4711  0D67                     	line	18
  4712                           	
  4713                           l2869:	
  4714  0D67                     	comf	(___awmod@divisor),f
  4715  0D67  09AA               	comf	(___awmod@divisor+1),f
  4716  0D68  09AB               	incf	(___awmod@divisor),f
  4717  0D69  0AAA               	skipnz
  4718  0D6A  1903               	incf	(___awmod@divisor+1),f
  4719  0D6B  0AAB               	goto	l2871
  4720  0D6C  2D6D               	
  4721                           l766:	
  4722  0D6D                     	line	19
  4723                           	
  4724                           l2871:	
  4725  0D6D                     	movf	((___awmod@divisor)),w
  4726  0D6D  082A               iorwf	((___awmod@divisor+1)),w
  4727  0D6E  042B               	btfsc	status,2
  4728  0D6F  1903               	goto	u1711
  4729  0D70  2D72               	goto	u1710
  4730  0D71  2D73               u1711:
  4731  0D72                     	goto	l2889
  4732  0D72  2DA2               u1710:
  4733  0D73                     	line	20
  4734                           	
  4735                           l2873:	
  4736  0D73                     	clrf	(___awmod@counter)
  4737  0D73  01AF               	incf	(___awmod@counter),f
  4738  0D74  0AAF               	line	21
  4739                           	goto	l2879
  4740  0D75  2D80               	
  4741                           l769:	
  4742  0D76                     	line	22
  4743                           	
  4744                           l2875:	
  4745  0D76                     	movlw	01h
  4746  0D76  3001               	
  4747                           u1725:
  4748  0D77                     	lslf	(___awmod@divisor),f
  4749  0D77  35AA               	rlf	(___awmod@divisor+1),f
  4750  0D78  0DAB               	decfsz	wreg,f
  4751  0D79  0B89               	goto	u1725
  4752  0D7A  2D77               	line	23
  4753                           	
  4754                           l2877:	
  4755  0D7B                     	movlw	low(01h)
  4756  0D7B  3001               	movwf	(??___awmod+0)+0
  4757  0D7C  00AE               	movf	(??___awmod+0)+0,w
  4758  0D7D  082E               	addwf	(___awmod@counter),f
  4759  0D7E  07AF               	goto	l2879
  4760  0D7F  2D80               	line	24
  4761                           	
  4762                           l768:	
  4763  0D80                     	line	21
  4764                           	
  4765                           l2879:	
  4766  0D80                     	btfss	(___awmod@divisor+1),(15)&7
  4767  0D80  1FAB               	goto	u1731
  4768  0D81  2D83               	goto	u1730
  4769  0D82  2D84               u1731:
  4770  0D83                     	goto	l2875
  4771  0D83  2D76               u1730:
  4772  0D84                     	goto	l2881
  4773  0D84  2D86               	
  4774                           l770:	
  4775  0D85                     	goto	l2881
  4776  0D85  2D86               	line	25
  4777                           	
  4778                           l771:	
  4779  0D86                     	line	26
  4780                           	
  4781                           l2881:	
  4782  0D86                     	movf	(___awmod@divisor+1),w
  4783  0D86  082B               	subwf	(___awmod@dividend+1),w
  4784  0D87  022D               	skipz
  4785  0D88  1D03               	goto	u1745
  4786  0D89  2D8C               	movf	(___awmod@divisor),w
  4787  0D8A  082A               	subwf	(___awmod@dividend),w
  4788  0D8B  022C               u1745:
  4789  0D8C                     	skipc
  4790  0D8C  1C03               	goto	u1741
  4791  0D8D  2D8F               	goto	u1740
  4792  0D8E  2D90               u1741:
  4793  0D8F                     	goto	l2885
  4794  0D8F  2D95               u1740:
  4795  0D90                     	line	27
  4796                           	
  4797                           l2883:	
  4798  0D90                     	movf	(___awmod@divisor),w
  4799  0D90  082A               	subwf	(___awmod@dividend),f
  4800  0D91  02AC               	movf	(___awmod@divisor+1),w
  4801  0D92  082B               	subwfb	(___awmod@dividend+1),f
  4802  0D93  3BAD               	goto	l2885
  4803  0D94  2D95               	
  4804                           l772:	
  4805  0D95                     	line	28
  4806                           	
  4807                           l2885:	
  4808  0D95                     	movlw	01h
  4809  0D95  3001               	
  4810                           u1755:
  4811  0D96                     	lsrf	(___awmod@divisor+1),f
  4812  0D96  36AB               	rrf	(___awmod@divisor),f
  4813  0D97  0CAA               	decfsz	wreg,f
  4814  0D98  0B89               	goto	u1755
  4815  0D99  2D96               	line	29
  4816                           	
  4817                           l2887:	
  4818  0D9A                     	movlw	01h
  4819  0D9A  3001               	subwf	(___awmod@counter),f
  4820  0D9B  02AF               	btfss	status,2
  4821  0D9C  1D03               	goto	u1761
  4822  0D9D  2D9F               	goto	u1760
  4823  0D9E  2DA0               u1761:
  4824  0D9F                     	goto	l2881
  4825  0D9F  2D86               u1760:
  4826  0DA0                     	goto	l2889
  4827  0DA0  2DA2               	
  4828                           l773:	
  4829  0DA1                     	goto	l2889
  4830  0DA1  2DA2               	line	30
  4831                           	
  4832                           l767:	
  4833  0DA2                     	line	31
  4834                           	
  4835                           l2889:	
  4836  0DA2                     	movf	((___awmod@sign)),w
  4837  0DA2  0830               	btfsc	status,2
  4838  0DA3  1903               	goto	u1771
  4839  0DA4  2DA6               	goto	u1770
  4840  0DA5  2DA7               u1771:
  4841  0DA6                     	goto	l2893
  4842  0DA6  2DAD               u1770:
  4843  0DA7                     	line	32
  4844                           	
  4845                           l2891:	
  4846  0DA7                     	comf	(___awmod@dividend),f
  4847  0DA7  09AC               	comf	(___awmod@dividend+1),f
  4848  0DA8  09AD               	incf	(___awmod@dividend),f
  4849  0DA9  0AAC               	skipnz
  4850  0DAA  1903               	incf	(___awmod@dividend+1),f
  4851  0DAB  0AAD               	goto	l2893
  4852  0DAC  2DAD               	
  4853                           l774:	
  4854  0DAD                     	line	33
  4855                           	
  4856                           l2893:	
  4857  0DAD                     	movf	(___awmod@dividend+1),w
  4858  0DAD  082D               	movwf	(?___awmod+1)
  4859  0DAE  00AB               	movf	(___awmod@dividend),w
  4860  0DAF  082C               	movwf	(?___awmod)
  4861  0DB0  00AA               	goto	l775
  4862  0DB1  2DB2               	
  4863                           l2895:	
  4864  0DB2                     	line	34
  4865                           	
  4866                           l775:	
  4867  0DB2                     	return
  4868  0DB2  0008               	opt stack 0
  4869                           GLOBAL	__end_of___awmod
  4870                           	__end_of___awmod:
  4871  0DB3                     	signat	___awmod,8314
  4872                           	global	___awdiv
  4873                           
  4874 ;; *************** function ___awdiv *****************
  4875 ;; Defined at:
  4876 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  divisor         2   10[BANK0 ] int 
  4879 ;;  dividend        2   12[BANK0 ] int 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  quotient        2   17[BANK0 ] int 
  4882 ;;  sign            1   16[BANK0 ] unsigned char 
  4883 ;;  counter         1   15[BANK0 ] unsigned char 
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  2   10[BANK0 ] int 
  4886 ;; Registers used:
  4887 ;;		wreg, status,2, status,0
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4893 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4894 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4895 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4896 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0
  4897 ;;Total ram usage:        9 bytes
  4898 ;; Hardware stack levels used:    1
  4899 ;; Hardware stack levels required when called:    6
  4900 ;; This function calls:
  4901 ;;		Nothing
  4902 ;; This function is called by:
  4903 ;;		_printEM1812
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  4907                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  4908                           	line	5
  4909                           global __ptext5
  4910                           __ptext5:	;psect for function ___awdiv
  4911  0788                     psect	text5
  4912                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  4913                           	line	5
  4914                           	global	__size_of___awdiv
  4915                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  4916  006A                     	
  4917                           ___awdiv:	
  4918  0788                     ;incstack = 0
  4919                           	opt	stack 8
  4920                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4921                           	line	13
  4922                           	
  4923                           l2815:	
  4924  0788                     	movlb 0	; select bank0
  4925  0788  0020               	clrf	(___awdiv@sign)
  4926  0789  01B0               	line	14
  4927                           	
  4928                           l2817:	
  4929  078A                     	btfss	(___awdiv@divisor+1),7
  4930  078A  1FAB               	goto	u1591
  4931  078B  2F8D               	goto	u1590
  4932  078C  2F8E               u1591:
  4933  078D                     	goto	l2823
  4934  078D  2F96               u1590:
  4935  078E                     	line	15
  4936                           	
  4937                           l2819:	
  4938  078E                     	comf	(___awdiv@divisor),f
  4939  078E  09AA               	comf	(___awdiv@divisor+1),f
  4940  078F  09AB               	incf	(___awdiv@divisor),f
  4941  0790  0AAA               	skipnz
  4942  0791  1903               	incf	(___awdiv@divisor+1),f
  4943  0792  0AAB               	line	16
  4944                           	
  4945                           l2821:	
  4946  0793                     	clrf	(___awdiv@sign)
  4947  0793  01B0               	incf	(___awdiv@sign),f
  4948  0794  0AB0               	goto	l2823
  4949  0795  2F96               	line	17
  4950                           	
  4951                           l752:	
  4952  0796                     	line	18
  4953                           	
  4954                           l2823:	
  4955  0796                     	btfss	(___awdiv@dividend+1),7
  4956  0796  1FAD               	goto	u1601
  4957  0797  2F99               	goto	u1600
  4958  0798  2F9A               u1601:
  4959  0799                     	goto	l2829
  4960  0799  2FA4               u1600:
  4961  079A                     	line	19
  4962                           	
  4963                           l2825:	
  4964  079A                     	comf	(___awdiv@dividend),f
  4965  079A  09AC               	comf	(___awdiv@dividend+1),f
  4966  079B  09AD               	incf	(___awdiv@dividend),f
  4967  079C  0AAC               	skipnz
  4968  079D  1903               	incf	(___awdiv@dividend+1),f
  4969  079E  0AAD               	line	20
  4970                           	
  4971                           l2827:	
  4972  079F                     	movlw	low(01h)
  4973  079F  3001               	movwf	(??___awdiv+0)+0
  4974  07A0  00AE               	movf	(??___awdiv+0)+0,w
  4975  07A1  082E               	xorwf	(___awdiv@sign),f
  4976  07A2  06B0               	goto	l2829
  4977  07A3  2FA4               	line	21
  4978                           	
  4979                           l753:	
  4980  07A4                     	line	22
  4981                           	
  4982                           l2829:	
  4983  07A4                     	clrf	(___awdiv@quotient)
  4984  07A4  01B1               	clrf	(___awdiv@quotient+1)
  4985  07A5  01B2               	line	23
  4986                           	
  4987                           l2831:	
  4988  07A6                     	movf	((___awdiv@divisor)),w
  4989  07A6  082A               iorwf	((___awdiv@divisor+1)),w
  4990  07A7  042B               	btfsc	status,2
  4991  07A8  1903               	goto	u1611
  4992  07A9  2FAB               	goto	u1610
  4993  07AA  2FAC               u1611:
  4994  07AB                     	goto	l2851
  4995  07AB  2FE1               u1610:
  4996  07AC                     	line	24
  4997                           	
  4998                           l2833:	
  4999  07AC                     	clrf	(___awdiv@counter)
  5000  07AC  01AF               	incf	(___awdiv@counter),f
  5001  07AD  0AAF               	line	25
  5002                           	goto	l2839
  5003  07AE  2FB9               	
  5004                           l756:	
  5005  07AF                     	line	26
  5006                           	
  5007                           l2835:	
  5008  07AF                     	movlw	01h
  5009  07AF  3001               	
  5010                           u1625:
  5011  07B0                     	lslf	(___awdiv@divisor),f
  5012  07B0  35AA               	rlf	(___awdiv@divisor+1),f
  5013  07B1  0DAB               	decfsz	wreg,f
  5014  07B2  0B89               	goto	u1625
  5015  07B3  2FB0               	line	27
  5016                           	
  5017                           l2837:	
  5018  07B4                     	movlw	low(01h)
  5019  07B4  3001               	movwf	(??___awdiv+0)+0
  5020  07B5  00AE               	movf	(??___awdiv+0)+0,w
  5021  07B6  082E               	addwf	(___awdiv@counter),f
  5022  07B7  07AF               	goto	l2839
  5023  07B8  2FB9               	line	28
  5024                           	
  5025                           l755:	
  5026  07B9                     	line	25
  5027                           	
  5028                           l2839:	
  5029  07B9                     	btfss	(___awdiv@divisor+1),(15)&7
  5030  07B9  1FAB               	goto	u1631
  5031  07BA  2FBC               	goto	u1630
  5032  07BB  2FBD               u1631:
  5033  07BC                     	goto	l2835
  5034  07BC  2FAF               u1630:
  5035  07BD                     	goto	l2841
  5036  07BD  2FBF               	
  5037                           l757:	
  5038  07BE                     	goto	l2841
  5039  07BE  2FBF               	line	29
  5040                           	
  5041                           l758:	
  5042  07BF                     	line	30
  5043                           	
  5044                           l2841:	
  5045  07BF                     	movlw	01h
  5046  07BF  3001               	
  5047                           u1645:
  5048  07C0                     	lslf	(___awdiv@quotient),f
  5049  07C0  35B1               	rlf	(___awdiv@quotient+1),f
  5050  07C1  0DB2               	decfsz	wreg,f
  5051  07C2  0B89               	goto	u1645
  5052  07C3  2FC0               	line	31
  5053                           	movf	(___awdiv@divisor+1),w
  5054  07C4  082B               	subwf	(___awdiv@dividend+1),w
  5055  07C5  022D               	skipz
  5056  07C6  1D03               	goto	u1655
  5057  07C7  2FCA               	movf	(___awdiv@divisor),w
  5058  07C8  082A               	subwf	(___awdiv@dividend),w
  5059  07C9  022C               u1655:
  5060  07CA                     	skipc
  5061  07CA  1C03               	goto	u1651
  5062  07CB  2FCD               	goto	u1650
  5063  07CC  2FCE               u1651:
  5064  07CD                     	goto	l2847
  5065  07CD  2FD4               u1650:
  5066  07CE                     	line	32
  5067                           	
  5068                           l2843:	
  5069  07CE                     	movf	(___awdiv@divisor),w
  5070  07CE  082A               	subwf	(___awdiv@dividend),f
  5071  07CF  02AC               	movf	(___awdiv@divisor+1),w
  5072  07D0  082B               	subwfb	(___awdiv@dividend+1),f
  5073  07D1  3BAD               	line	33
  5074                           	
  5075                           l2845:	
  5076  07D2                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  5077  07D2  1431               	goto	l2847
  5078  07D3  2FD4               	line	34
  5079                           	
  5080                           l759:	
  5081  07D4                     	line	35
  5082                           	
  5083                           l2847:	
  5084  07D4                     	movlw	01h
  5085  07D4  3001               	
  5086                           u1665:
  5087  07D5                     	lsrf	(___awdiv@divisor+1),f
  5088  07D5  36AB               	rrf	(___awdiv@divisor),f
  5089  07D6  0CAA               	decfsz	wreg,f
  5090  07D7  0B89               	goto	u1665
  5091  07D8  2FD5               	line	36
  5092                           	
  5093                           l2849:	
  5094  07D9                     	movlw	01h
  5095  07D9  3001               	subwf	(___awdiv@counter),f
  5096  07DA  02AF               	btfss	status,2
  5097  07DB  1D03               	goto	u1671
  5098  07DC  2FDE               	goto	u1670
  5099  07DD  2FDF               u1671:
  5100  07DE                     	goto	l2841
  5101  07DE  2FBF               u1670:
  5102  07DF                     	goto	l2851
  5103  07DF  2FE1               	
  5104                           l760:	
  5105  07E0                     	goto	l2851
  5106  07E0  2FE1               	line	37
  5107                           	
  5108                           l754:	
  5109  07E1                     	line	38
  5110                           	
  5111                           l2851:	
  5112  07E1                     	movf	((___awdiv@sign)),w
  5113  07E1  0830               	btfsc	status,2
  5114  07E2  1903               	goto	u1681
  5115  07E3  2FE5               	goto	u1680
  5116  07E4  2FE6               u1681:
  5117  07E5                     	goto	l2855
  5118  07E5  2FEC               u1680:
  5119  07E6                     	line	39
  5120                           	
  5121                           l2853:	
  5122  07E6                     	comf	(___awdiv@quotient),f
  5123  07E6  09B1               	comf	(___awdiv@quotient+1),f
  5124  07E7  09B2               	incf	(___awdiv@quotient),f
  5125  07E8  0AB1               	skipnz
  5126  07E9  1903               	incf	(___awdiv@quotient+1),f
  5127  07EA  0AB2               	goto	l2855
  5128  07EB  2FEC               	
  5129                           l761:	
  5130  07EC                     	line	40
  5131                           	
  5132                           l2855:	
  5133  07EC                     	movf	(___awdiv@quotient+1),w
  5134  07EC  0832               	movwf	(?___awdiv+1)
  5135  07ED  00AB               	movf	(___awdiv@quotient),w
  5136  07EE  0831               	movwf	(?___awdiv)
  5137  07EF  00AA               	goto	l762
  5138  07F0  2FF1               	
  5139                           l2857:	
  5140  07F1                     	line	41
  5141                           	
  5142                           l762:	
  5143  07F1                     	return
  5144  07F1  0008               	opt stack 0
  5145                           GLOBAL	__end_of___awdiv
  5146                           	__end_of___awdiv:
  5147  07F2                     	signat	___awdiv,8314
  5148                           	global	_powerOnLcd
  5149                           
  5150 ;; *************** function _powerOnLcd *****************
  5151 ;; Defined at:
  5152 ;;		line 210 in file "LCD_hd44780u_qy_2004a.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;		None
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1    wreg      void 
  5159 ;; Registers used:
  5160 ;;		wreg, status,2, status,0, pclath, cstack
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5168 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5169 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5170 ;;Total ram usage:        1 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    9
  5173 ;; This function calls:
  5174 ;;		_writeInsChk
  5175 ;; This function is called by:
  5176 ;;		_main
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  5180                           	file	"LCD_hd44780u_qy_2004a.c"
  5181                           	line	210
  5182                           global __ptext6
  5183                           __ptext6:	;psect for function _powerOnLcd
  5184  09BC                     psect	text6
  5185                           	file	"LCD_hd44780u_qy_2004a.c"
  5186                           	line	210
  5187                           	global	__size_of_powerOnLcd
  5188                           	__size_of_powerOnLcd	equ	__end_of_powerOnLcd-_powerOnLcd
  5189  000B                     	
  5190                           _powerOnLcd:	
  5191  09BC                     ;incstack = 0
  5192                           	opt	stack 6
  5193                           ; Regs used in _powerOnLcd: [wreg+status,2+status,0+pclath+cstack]
  5194                           	line	212
  5195                           	
  5196                           l3029:	
  5197  09BC                     ;LCD_hd44780u_qy_2004a.c: 212:   mDisplayOnOffReg = mDisplayOnOffReg | 0x04;
  5198                           	movlb 0	; select bank0
  5199  09BC  0020               	movf	(_mDisplayOnOffReg),w
  5200  09BD  085D               	iorlw	04h
  5201  09BE  3804               	movwf	(??_powerOnLcd+0)+0
  5202  09BF  00B0               	movf	(??_powerOnLcd+0)+0,w
  5203  09C0  0830               	movwf	(_mDisplayOnOffReg)
  5204  09C1  00DD               	line	213
  5205                           	
  5206                           l3031:	
  5207  09C2                     ;LCD_hd44780u_qy_2004a.c: 213:   writeInsChk(mDisplayOnOffReg);
  5208                           	movf	(_mDisplayOnOffReg),w
  5209  09C2  085D               	fcall	_writeInsChk
  5210  09C3  3189  21B1  3189   	line	214
  5211                           	
  5212                           l331:	
  5213  09C6                     	return
  5214  09C6  0008               	opt stack 0
  5215                           GLOBAL	__end_of_powerOnLcd
  5216                           	__end_of_powerOnLcd:
  5217  09C7                     	signat	_powerOnLcd,89
  5218                           	global	_moveCursorToHome
  5219                           
  5220 ;; *************** function _moveCursorToHome *****************
  5221 ;; Defined at:
  5222 ;;		line 271 in file "LCD_hd44780u_qy_2004a.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;		None
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;		None
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  1    wreg      void 
  5229 ;; Registers used:
  5230 ;;		wreg, status,2, status,0, pclath, cstack
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5240 ;;Total ram usage:        0 bytes
  5241 ;; Hardware stack levels used:    1
  5242 ;; Hardware stack levels required when called:    9
  5243 ;; This function calls:
  5244 ;;		_writeInsChk
  5245 ;; This function is called by:
  5246 ;;		_main
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  5250                           	line	271
  5251                           global __ptext7
  5252                           __ptext7:	;psect for function _moveCursorToHome
  5253  099F                     psect	text7
  5254                           	file	"LCD_hd44780u_qy_2004a.c"
  5255                           	line	271
  5256                           	global	__size_of_moveCursorToHome
  5257                           	__size_of_moveCursorToHome	equ	__end_of_moveCursorToHome-_moveCursorToHome
  5258  0008                     	
  5259                           _moveCursorToHome:	
  5260  099F                     ;incstack = 0
  5261                           	opt	stack 6
  5262                           ; Regs used in _moveCursorToHome: [wreg+status,2+status,0+pclath+cstack]
  5263                           	line	273
  5264                           	
  5265                           l3037:	
  5266  099F                     ;LCD_hd44780u_qy_2004a.c: 273:   writeInsChk(0x02);
  5267                           	movlw	low(02h)
  5268  099F  3002               	fcall	_writeInsChk
  5269  09A0  3189  21B1  3189   	line	274
  5270                           	
  5271                           l3039:	
  5272  09A3                     ;LCD_hd44780u_qy_2004a.c: 274:   mWritingPosition=1;
  5273                           	movlb 0	; select bank0
  5274  09A3  0020               	clrf	(_mWritingPosition)
  5275  09A4  01DB               	incf	(_mWritingPosition),f
  5276  09A5  0ADB               	line	275
  5277                           	
  5278                           l367:	
  5279  09A6                     	return
  5280  09A6  0008               	opt stack 0
  5281                           GLOBAL	__end_of_moveCursorToHome
  5282                           	__end_of_moveCursorToHome:
  5283  09A7                     	signat	_moveCursorToHome,89
  5284                           	global	_initLCD
  5285                           
  5286 ;; *************** function _initLCD *****************
  5287 ;; Defined at:
  5288 ;;		line 10 in file "LCD_hd44780u_qy_2004a.c"
  5289 ;; Parameters:    Size  Location     Type
  5290 ;;		None
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;		None
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  1    wreg      void 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0, pclath, cstack
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5304 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5305 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5306 ;;Total ram usage:        1 bytes
  5307 ;; Hardware stack levels used:    1
  5308 ;; Hardware stack levels required when called:   10
  5309 ;; This function calls:
  5310 ;;		_clearDisplay
  5311 ;;		_setData
  5312 ;;		_writeInsChk
  5313 ;; This function is called by:
  5314 ;;		_main
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  5318                           	line	10
  5319                           global __ptext8
  5320                           __ptext8:	;psect for function _initLCD
  5321  0E75                     psect	text8
  5322                           	file	"LCD_hd44780u_qy_2004a.c"
  5323                           	line	10
  5324                           	global	__size_of_initLCD
  5325                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  5326  0064                     	
  5327                           _initLCD:	
  5328  0E75                     ;incstack = 0
  5329                           	opt	stack 5
  5330                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  5331                           	line	13
  5332                           	
  5333                           l3007:	
  5334  0E75                     ;LCD_hd44780u_qy_2004a.c: 13:   ANSELAbits.ANSA3 = 0;
  5335                           	movlb 3	; select bank3
  5336  0E75  0023               	bcf	(396)^0180h,3	;volatile
  5337  0E76  118C               	line	14
  5338                           ;LCD_hd44780u_qy_2004a.c: 14:   ANSELCbits.ANSC2 = 0;
  5339                           	bcf	(398)^0180h,2	;volatile
  5340  0E77  110E               	line	15
  5341                           ;LCD_hd44780u_qy_2004a.c: 15:   ANSELCbits.ANSC1 = 0;
  5342                           	bcf	(398)^0180h,1	;volatile
  5343  0E78  108E               	line	16
  5344                           ;LCD_hd44780u_qy_2004a.c: 16:   ANSELCbits.ANSC0 = 0;
  5345                           	bcf	(398)^0180h,0	;volatile
  5346  0E79  100E               	line	17
  5347                           ;LCD_hd44780u_qy_2004a.c: 17:   ANSELAbits.ANSA0 = 0;
  5348                           	bcf	(396)^0180h,0	;volatile
  5349  0E7A  100C               	line	18
  5350                           ;LCD_hd44780u_qy_2004a.c: 18:   ANSELAbits.ANSA1 = 0;
  5351                           	bcf	(396)^0180h,1	;volatile
  5352  0E7B  108C               	line	19
  5353                           ;LCD_hd44780u_qy_2004a.c: 19:   ANSELAbits.ANSA2 = 0;
  5354                           	bcf	(396)^0180h,2	;volatile
  5355  0E7C  110C               	line	21
  5356                           ;LCD_hd44780u_qy_2004a.c: 21:   PORTAbits.RA3 = 0;
  5357                           	movlb 0	; select bank0
  5358  0E7D  0020               	bcf	(12),3	;volatile
  5359  0E7E  118C               	line	22
  5360                           ;LCD_hd44780u_qy_2004a.c: 22:   PORTCbits.RC2 = 0;
  5361                           	bcf	(14),2	;volatile
  5362  0E7F  110E               	line	23
  5363                           ;LCD_hd44780u_qy_2004a.c: 23:   PORTCbits.RC1 = 0;
  5364                           	bcf	(14),1	;volatile
  5365  0E80  108E               	line	24
  5366                           ;LCD_hd44780u_qy_2004a.c: 24:   PORTCbits.RC0 = 0;
  5367                           	bcf	(14),0	;volatile
  5368  0E81  100E               	line	25
  5369                           ;LCD_hd44780u_qy_2004a.c: 25:   PORTAbits.RA0=0;
  5370                           	bcf	(12),0	;volatile
  5371  0E82  100C               	line	26
  5372                           ;LCD_hd44780u_qy_2004a.c: 26:   PORTAbits.RA1=0;
  5373                           	bcf	(12),1	;volatile
  5374  0E83  108C               	line	27
  5375                           ;LCD_hd44780u_qy_2004a.c: 27:   PORTAbits.RA2=0;
  5376                           	bcf	(12),2	;volatile
  5377  0E84  110C               	line	29
  5378                           ;LCD_hd44780u_qy_2004a.c: 29:   TRISAbits.TRISA0 = 0;
  5379                           	movlb 1	; select bank1
  5380  0E85  0021               	bcf	(140)^080h,0	;volatile
  5381  0E86  100C               	line	30
  5382                           ;LCD_hd44780u_qy_2004a.c: 30:   TRISAbits.TRISA1 = 0;
  5383                           	bcf	(140)^080h,1	;volatile
  5384  0E87  108C               	line	31
  5385                           ;LCD_hd44780u_qy_2004a.c: 31:   TRISAbits.TRISA2 = 0;
  5386                           	bcf	(140)^080h,2	;volatile
  5387  0E88  110C               	line	32
  5388                           ;LCD_hd44780u_qy_2004a.c: 32:   TRISAbits.TRISA3 = 0;
  5389                           	bcf	(140)^080h,3	;volatile
  5390  0E89  118C               	line	33
  5391                           ;LCD_hd44780u_qy_2004a.c: 33:   TRISCbits.TRISC2 = 0;
  5392                           	bcf	(142)^080h,2	;volatile
  5393  0E8A  110E               	line	34
  5394                           ;LCD_hd44780u_qy_2004a.c: 34:   TRISCbits.TRISC1 = 0;
  5395                           	bcf	(142)^080h,1	;volatile
  5396  0E8B  108E               	line	35
  5397                           ;LCD_hd44780u_qy_2004a.c: 35:   TRISCbits.TRISC0 = 0;
  5398                           	bcf	(142)^080h,0	;volatile
  5399  0E8C  100E               	line	38
  5400                           ;LCD_hd44780u_qy_2004a.c: 38:   PORTAbits.RA0 = 0;
  5401                           	movlb 0	; select bank0
  5402  0E8D  0020               	bcf	(12),0	;volatile
  5403  0E8E  100C               	line	39
  5404                           ;LCD_hd44780u_qy_2004a.c: 39:   PORTAbits.RA1 = 0;
  5405                           	bcf	(12),1	;volatile
  5406  0E8F  108C               	line	40
  5407                           ;LCD_hd44780u_qy_2004a.c: 40:   PORTAbits.RA2 = 0;
  5408                           	bcf	(12),2	;volatile
  5409  0E90  110C               	line	43
  5410                           	
  5411                           l3009:	
  5412  0E91                     ;LCD_hd44780u_qy_2004a.c: 43:   _delay((unsigned long)((15)*(16000000/4000.0)));
  5413                           	opt asmopt_push
  5414                           opt asmopt_off
  5415                           movlw	78
  5416  0E91  304E               	movlb 0	; select bank0
  5417  0E92  0020               movwf	((??_initLCD+0)+0),f
  5418  0E93  00B0               	movlw	235
  5419  0E94  30EB               u3217:
  5420  0E95                     decfsz	wreg
  5421  0E95  0B89               	goto	u3217
  5422  0E96  2E95               	decfsz	((??_initLCD+0)+0),f
  5423  0E97  0BB0               	goto	u3217
  5424  0E98  2E95               opt asmopt_pop
  5425                           
  5426                           	line	44
  5427                           	
  5428                           l3011:	
  5429  0E99                     ;LCD_hd44780u_qy_2004a.c: 44:   setData(0x3);
  5430                           	movlw	low(03h)
  5431  0E99  3003               	fcall	_setData
  5432  0E9A  318C  248F  318E   	line	45
  5433                           	
  5434                           l3013:	
  5435  0E9D                     ;LCD_hd44780u_qy_2004a.c: 45:   _delay((unsigned long)((5)*(16000000/4000.0)));
  5436                           	opt asmopt_push
  5437                           opt asmopt_off
  5438                           movlw	26
  5439  0E9D  301A               	movlb 0	; select bank0
  5440  0E9E  0020               movwf	((??_initLCD+0)+0),f
  5441  0E9F  00B0               	movlw	248
  5442  0EA0  30F8               u3227:
  5443  0EA1                     decfsz	wreg
  5444  0EA1  0B89               	goto	u3227
  5445  0EA2  2EA1               	decfsz	((??_initLCD+0)+0),f
  5446  0EA3  0BB0               	goto	u3227
  5447  0EA4  2EA1               	nop
  5448  0EA5  0000               opt asmopt_pop
  5449                           
  5450                           	line	46
  5451                           ;LCD_hd44780u_qy_2004a.c: 46:   setData(0x3);
  5452                           	movlw	low(03h)
  5453  0EA6  3003               	fcall	_setData
  5454  0EA7  318C  248F  318E   	line	47
  5455                           	
  5456                           l3015:	
  5457  0EAA                     ;LCD_hd44780u_qy_2004a.c: 47:   _delay((unsigned long)((150)*(16000000/4000000.0)));
  5458                           	opt asmopt_push
  5459                           opt asmopt_off
  5460                           	movlw	200
  5461  0EAA  30C8               u3237:
  5462  0EAB                     decfsz	wreg
  5463  0EAB  0B89               	goto	u3237
  5464  0EAC  2EAB               opt asmopt_pop
  5465                           
  5466                           	line	48
  5467                           	
  5468                           l3017:	
  5469  0EAD                     ;LCD_hd44780u_qy_2004a.c: 48:   setData(0x3);
  5470                           	movlw	low(03h)
  5471  0EAD  3003               	fcall	_setData
  5472  0EAE  318C  248F  318E   	line	49
  5473                           ;LCD_hd44780u_qy_2004a.c: 49:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  5474                           	opt asmopt_push
  5475                           opt asmopt_off
  5476                           	movlw	13
  5477  0EB1  300D               u3247:
  5478  0EB2                     decfsz	wreg
  5479  0EB2  0B89               	goto	u3247
  5480  0EB3  2EB2               	nop
  5481  0EB4  0000               opt asmopt_pop
  5482                           
  5483                           	line	50
  5484                           	
  5485                           l3019:	
  5486  0EB5                     ;LCD_hd44780u_qy_2004a.c: 50:   setData(0x2);
  5487                           	movlw	low(02h)
  5488  0EB5  3002               	fcall	_setData
  5489  0EB6  318C  248F  318E   	line	51
  5490                           	
  5491                           l3021:	
  5492  0EB9                     ;LCD_hd44780u_qy_2004a.c: 51:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  5493                           	opt asmopt_push
  5494                           opt asmopt_off
  5495                           	movlw	13
  5496  0EB9  300D               u3257:
  5497  0EBA                     decfsz	wreg
  5498  0EBA  0B89               	goto	u3257
  5499  0EBB  2EBA               	nop
  5500  0EBC  0000               opt asmopt_pop
  5501                           
  5502                           	line	52
  5503                           ;LCD_hd44780u_qy_2004a.c: 52:   writeInsChk(0x28);
  5504                           	movlw	low(028h)
  5505  0EBD  3028               	fcall	_writeInsChk
  5506  0EBE  3189  21B1  318E   	line	53
  5507                           	
  5508                           l3023:	
  5509  0EC1                     ;LCD_hd44780u_qy_2004a.c: 53:   mDisplayOnOffReg = 0x0F;
  5510                           	movlw	low(0Fh)
  5511  0EC1  300F               	movlb 0	; select bank0
  5512  0EC2  0020               	movwf	(??_initLCD+0)+0
  5513  0EC3  00B0               	movf	(??_initLCD+0)+0,w
  5514  0EC4  0830               	movwf	(_mDisplayOnOffReg)
  5515  0EC5  00DD               	line	54
  5516                           	
  5517                           l3025:	
  5518  0EC6                     ;LCD_hd44780u_qy_2004a.c: 54:   mCursorDisplayShiftReg= 0x06;
  5519                           	movlw	low(06h)
  5520  0EC6  3006               	movwf	(??_initLCD+0)+0
  5521  0EC7  00B0               	movf	(??_initLCD+0)+0,w
  5522  0EC8  0830               	movwf	(_mCursorDisplayShiftReg)
  5523  0EC9  00DC               	line	55
  5524                           ;LCD_hd44780u_qy_2004a.c: 55:   writeInsChk(mDisplayOnOffReg);
  5525                           	movf	(_mDisplayOnOffReg),w
  5526  0ECA  085D               	fcall	_writeInsChk
  5527  0ECB  3189  21B1  318E   	line	57
  5528                           ;LCD_hd44780u_qy_2004a.c: 57:   clearDisplay();
  5529                           	fcall	_clearDisplay
  5530  0ECE  3189  2175  318E   	line	58
  5531                           ;LCD_hd44780u_qy_2004a.c: 58:   writeInsChk(0x06);
  5532                           	movlw	low(06h)
  5533  0ED1  3006               	fcall	_writeInsChk
  5534  0ED2  3189  21B1  318E   	line	59
  5535                           	
  5536                           l3027:	
  5537  0ED5                     ;LCD_hd44780u_qy_2004a.c: 59:   mWritingPosition=1;
  5538                           	movlb 0	; select bank0
  5539  0ED5  0020               	clrf	(_mWritingPosition)
  5540  0ED6  01DB               	incf	(_mWritingPosition),f
  5541  0ED7  0ADB               	line	61
  5542                           	
  5543                           l272:	
  5544  0ED8                     	return
  5545  0ED8  0008               	opt stack 0
  5546                           GLOBAL	__end_of_initLCD
  5547                           	__end_of_initLCD:
  5548  0ED9                     	signat	_initLCD,89
  5549                           	global	_clearDisplay
  5550                           
  5551 ;; *************** function _clearDisplay *****************
  5552 ;; Defined at:
  5553 ;;		line 267 in file "LCD_hd44780u_qy_2004a.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;		None
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;		None
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg, status,2, status,0, pclath, cstack
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5571 ;;Total ram usage:        0 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; Hardware stack levels required when called:    9
  5574 ;; This function calls:
  5575 ;;		_writeInsChk
  5576 ;; This function is called by:
  5577 ;;		_main
  5578 ;;		_initLCD
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  5582                           	line	267
  5583                           global __ptext9
  5584                           __ptext9:	;psect for function _clearDisplay
  5585  0975                     psect	text9
  5586                           	file	"LCD_hd44780u_qy_2004a.c"
  5587                           	line	267
  5588                           	global	__size_of_clearDisplay
  5589                           	__size_of_clearDisplay	equ	__end_of_clearDisplay-_clearDisplay
  5590  0005                     	
  5591                           _clearDisplay:	
  5592  0975                     ;incstack = 0
  5593                           	opt	stack 5
  5594                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  5595                           	line	269
  5596                           	
  5597                           l2735:	
  5598  0975                     ;LCD_hd44780u_qy_2004a.c: 269:   writeInsChk(0x01);
  5599                           	movlw	low(01h)
  5600  0975  3001               	fcall	_writeInsChk
  5601  0976  3189  21B1  3189   	line	270
  5602                           	
  5603                           l364:	
  5604  0979                     	return
  5605  0979  0008               	opt stack 0
  5606                           GLOBAL	__end_of_clearDisplay
  5607                           	__end_of_clearDisplay:
  5608  097A                     	signat	_clearDisplay,89
  5609                           	global	_writeInsChk
  5610                           
  5611 ;; *************** function _writeInsChk *****************
  5612 ;; Defined at:
  5613 ;;		line 154 in file "LCD_hd44780u_qy_2004a.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  iOpCode         1    wreg     unsigned char 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  iOpCode         1   15[BANK0 ] unsigned char 
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  1    wreg      void 
  5620 ;; Registers used:
  5621 ;;		wreg, status,2, status,0, pclath, cstack
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5628 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5630 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5631 ;;Total ram usage:        1 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; Hardware stack levels required when called:    8
  5634 ;; This function calls:
  5635 ;;		_waitLCDBusy
  5636 ;;		_writeInsNoChk
  5637 ;; This function is called by:
  5638 ;;		_initLCD
  5639 ;;		_powerOnLcd
  5640 ;;		_setNotBlinkingCursor
  5641 ;;		_setCursorOff
  5642 ;;		_clearDisplay
  5643 ;;		_moveCursorToHome
  5644 ;;		_powerOffLcd
  5645 ;;		_setBlinkingCursor
  5646 ;;		_setCursorOn
  5647 ;;		_setCursorMovingLeft
  5648 ;;		_setCursorMovingRight
  5649 ;;		_setDisplayMovingRight
  5650 ;;		_setDisplayMovingLeft
  5651 ;;		_moveCursorRight
  5652 ;;		_moveCursorLeft
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5656                           	line	154
  5657                           global __ptext10
  5658                           __ptext10:	;psect for function _writeInsChk
  5659  09B1                     psect	text10
  5660                           	file	"LCD_hd44780u_qy_2004a.c"
  5661                           	line	154
  5662                           	global	__size_of_writeInsChk
  5663                           	__size_of_writeInsChk	equ	__end_of_writeInsChk-_writeInsChk
  5664  000B                     	
  5665                           _writeInsChk:	
  5666  09B1                     ;incstack = 0
  5667                           	opt	stack 6
  5668                           ; Regs used in _writeInsChk: [wreg+status,2+status,0+pclath+cstack]
  5669                           ;writeInsChk@iOpCode stored from wreg
  5670                           	movlb 0	; select bank0
  5671  09B1  0020               	movwf	(writeInsChk@iOpCode)
  5672  09B2  00AF               	line	156
  5673                           	
  5674                           l2591:	
  5675  09B3                     ;LCD_hd44780u_qy_2004a.c: 154: void writeInsChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 55: {;LCD_hd44780u_qy_2004a.c: 156:   waitLCDBusy();
  5676                           	fcall	_waitLCDBusy
  5677  09B3  318B  2359  3189   	line	157
  5678                           ;LCD_hd44780u_qy_2004a.c: 157:   writeInsNoChk(iOpCode);
  5679                           	movlb 0	; select bank0
  5680  09B6  0020               	movf	(writeInsChk@iOpCode),w
  5681  09B7  082F               	fcall	_writeInsNoChk
  5682  09B8  318A  2218  3189   	line	158
  5683                           	
  5684                           l310:	
  5685  09BB                     	return
  5686  09BB  0008               	opt stack 0
  5687                           GLOBAL	__end_of_writeInsChk
  5688                           	__end_of_writeInsChk:
  5689  09BC                     	signat	_writeInsChk,4217
  5690                           	global	_writeInsNoChk
  5691                           
  5692 ;; *************** function _writeInsNoChk *****************
  5693 ;; Defined at:
  5694 ;;		line 160 in file "LCD_hd44780u_qy_2004a.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;  iOpCode         1    wreg     unsigned char 
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;  iOpCode         1   14[BANK0 ] unsigned char 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  1    wreg      void 
  5701 ;; Registers used:
  5702 ;;		wreg, status,2, status,0, pclath, cstack
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5709 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5710 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5711 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5712 ;;Total ram usage:        2 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:    7
  5715 ;; This function calls:
  5716 ;;		_SetToSendDataToLCD
  5717 ;;		_setData
  5718 ;; This function is called by:
  5719 ;;		_writeInsChk
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  5723                           	line	160
  5724                           global __ptext11
  5725                           __ptext11:	;psect for function _writeInsNoChk
  5726  0A18                     psect	text11
  5727                           	file	"LCD_hd44780u_qy_2004a.c"
  5728                           	line	160
  5729                           	global	__size_of_writeInsNoChk
  5730                           	__size_of_writeInsNoChk	equ	__end_of_writeInsNoChk-_writeInsNoChk
  5731  0018                     	
  5732                           _writeInsNoChk:	
  5733  0A18                     ;incstack = 0
  5734                           	opt	stack 6
  5735                           ; Regs used in _writeInsNoChk: [wreg+status,2+status,0+pclath+cstack]
  5736                           ;writeInsNoChk@iOpCode stored from wreg
  5737                           	movlb 0	; select bank0
  5738  0A18  0020               	movwf	(writeInsNoChk@iOpCode)
  5739  0A19  00AE               	line	162
  5740                           	
  5741                           l2531:	
  5742  0A1A                     ;LCD_hd44780u_qy_2004a.c: 160: void writeInsNoChk(char iOpCode);LCD_hd44780u_qy_2004a.c:
                                  161: {;LCD_hd44780u_qy_2004a.c: 162:   SetToSendDataToLCD();
  5743                           	fcall	_SetToSendDataToLCD
  5744  0A1A  3189  2186  318A   	line	163
  5745                           	
  5746                           l2533:	
  5747  0A1D                     ;LCD_hd44780u_qy_2004a.c: 163:   PORTAbits.RA0 = 0;
  5748                           	movlb 0	; select bank0
  5749  0A1D  0020               	bcf	(12),0	;volatile
  5750  0A1E  100C               	line	164
  5751                           	
  5752                           l2535:	
  5753  0A1F                     ;LCD_hd44780u_qy_2004a.c: 164:   PORTAbits.RA1 = 0;
  5754                           	bcf	(12),1	;volatile
  5755  0A1F  108C               	line	165
  5756                           	
  5757                           l2537:	
  5758  0A20                     ;LCD_hd44780u_qy_2004a.c: 165:   setData(iOpCode >> 4);
  5759                           	movf	(writeInsNoChk@iOpCode),w
  5760  0A20  082E               	movwf	(??_writeInsNoChk+0)+0
  5761  0A21  00AD               	movlw	04h
  5762  0A22  3004               u1325:
  5763  0A23                     	lsrf	(??_writeInsNoChk+0)+0,f
  5764  0A23  36AD               	decfsz	wreg,f
  5765  0A24  0B89               	goto	u1325
  5766  0A25  2A23               	movf	0+(??_writeInsNoChk+0)+0,w
  5767  0A26  082D               	fcall	_setData
  5768  0A27  318C  248F  318A   	line	166
  5769                           	
  5770                           l2539:	
  5771  0A2A                     ;LCD_hd44780u_qy_2004a.c: 166:   setData(iOpCode);
  5772                           	movlb 0	; select bank0
  5773  0A2A  0020               	movf	(writeInsNoChk@iOpCode),w
  5774  0A2B  082E               	fcall	_setData
  5775  0A2C  318C  248F  318A   	line	167
  5776                           	
  5777                           l313:	
  5778  0A2F                     	return
  5779  0A2F  0008               	opt stack 0
  5780                           GLOBAL	__end_of_writeInsNoChk
  5781                           	__end_of_writeInsNoChk:
  5782  0A30                     	signat	_writeInsNoChk,4217
  5783                           	global	_Send_UART_Data
  5784                           
  5785 ;; *************** function _Send_UART_Data *****************
  5786 ;; Defined at:
  5787 ;;		line 99 in file "161518_temp_main.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;  iData           1    wreg     PTR unsigned char 
  5790 ;;		 -> gUartTXBuffer(50), 
  5791 ;;  iData_Length    1   22[BANK0 ] unsigned char 
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;  iData           1   25[BANK0 ] PTR unsigned char 
  5794 ;;		 -> gUartTXBuffer(50), 
  5795 ;; Return value:  Size  Location     Type
  5796 ;;                  1    wreg      void 
  5797 ;; Registers used:
  5798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5799 ;; Tracked objects:
  5800 ;;		On entry : 0/0
  5801 ;;		On exit  : 0/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5804 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5805 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5806 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5807 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  5808 ;;Total ram usage:        4 bytes
  5809 ;; Hardware stack levels used:    1
  5810 ;; Hardware stack levels required when called:    7
  5811 ;; This function calls:
  5812 ;;		_memcpy
  5813 ;; This function is called by:
  5814 ;;		_main
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5818                           	file	"161518_temp_main.c"
  5819                           	line	99
  5820                           global __ptext12
  5821                           __ptext12:	;psect for function _Send_UART_Data
  5822  0B02                     psect	text12
  5823                           	file	"161518_temp_main.c"
  5824                           	line	99
  5825                           	global	__size_of_Send_UART_Data
  5826                           	__size_of_Send_UART_Data	equ	__end_of_Send_UART_Data-_Send_UART_Data
  5827  002B                     	
  5828                           _Send_UART_Data:	
  5829  0B02                     ;incstack = 0
  5830                           	opt	stack 8
  5831                           ; Regs used in _Send_UART_Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5832                           ;Send_UART_Data@iData stored from wreg
  5833                           	movlb 0	; select bank0
  5834  0B02  0020               	movwf	(Send_UART_Data@iData)
  5835  0B03  00B9               	line	101
  5836                           	
  5837                           l4107:	
  5838  0B04                     	movf	((_gTxTransmitSize)),w
  5839  0B04  0850               	btfsc	status,2
  5840  0B05  1903               	goto	u2791
  5841  0B06  2B08               	goto	u2790
  5842  0B07  2B09               u2791:
  5843  0B08                     	goto	l4111
  5844  0B08  2B0B               u2790:
  5845  0B09                     	goto	l162
  5846  0B09  2B2C               	line	103
  5847                           	
  5848                           l4109:	
  5849  0B0A                     	goto	l162
  5850  0B0A  2B2C               	line	104
  5851                           	
  5852                           l161:	
  5853  0B0B                     	line	105
  5854                           	
  5855                           l4111:	
  5856  0B0B                     	clrf	(_gTxReadingPosition)
  5857  0B0B  01CF               	line	106
  5858                           	
  5859                           l4113:	
  5860  0B0C                     	movf	(Send_UART_Data@iData_Length),w
  5861  0B0C  0836               	movwf	(??_Send_UART_Data+0)+0
  5862  0B0D  00B7               	movf	(??_Send_UART_Data+0)+0,w
  5863  0B0E  0837               	movwf	(_gTxTransmitSize)
  5864  0B0F  00D0               	line	107
  5865                           	
  5866                           l4115:	
  5867  0B10                     	movlw	low(8944)
  5868  0B10  30F0               	movwf	(memcpy@d1)
  5869  0B11  00AA               	movlw	high(8944)
  5870  0B12  3022               	movwf	((memcpy@d1))+1
  5871  0B13  00AB               	movf	(Send_UART_Data@iData),w
  5872  0B14  0839               	movwf	(memcpy@s1)
  5873  0B15  00AC               	movlw	0x1
  5874  0B16  3001               
  5875                           	movwf	(memcpy@s1+1)
  5876  0B17  00AD               	movf	(Send_UART_Data@iData_Length),w
  5877  0B18  0836               	movwf	(??_Send_UART_Data+0)+0
  5878  0B19  00B7               	clrf	(??_Send_UART_Data+0)+0+1
  5879  0B1A  01B8               	movf	0+(??_Send_UART_Data+0)+0,w
  5880  0B1B  0837               	movwf	(memcpy@n)
  5881  0B1C  00AE               	movf	1+(??_Send_UART_Data+0)+0,w
  5882  0B1D  0838               	movwf	(memcpy@n+1)
  5883  0B1E  00AF               	fcall	_memcpy
  5884  0B1F  318B  23B4  318B   	line	109
  5885                           	
  5886                           l4117:	
  5887  0B22                     	movlb 3	; select bank3
  5888  0B22  0023               	clrf	(412)^0180h	;volatile
  5889  0B23  019C               	line	110
  5890                           	
  5891                           l4119:	
  5892  0B24                     	movlw	low(01h)
  5893  0B24  3001               	movwf	(411)^0180h	;volatile
  5894  0B25  009B               	line	111
  5895                           	
  5896                           l4121:	
  5897  0B26                     	bcf	(398)^0180h,6	;volatile
  5898  0B26  130E               	line	112
  5899                           	
  5900                           l4123:	
  5901  0B27                     	bsf	(414)^0180h,5	;volatile
  5902  0B27  169E               	line	113
  5903                           	
  5904                           l4125:	
  5905  0B28                     	bcf	(414)^0180h,4	;volatile
  5906  0B28  121E               	line	114
  5907                           	
  5908                           l4127:	
  5909  0B29                     	bsf	(413)^0180h,7	;volatile
  5910  0B29  179D               	line	115
  5911                           	
  5912                           l4129:	
  5913  0B2A                     	movlb 1	; select bank1
  5914  0B2A  0021               	bsf	(145)^080h,4	;volatile
  5915  0B2B  1611               	line	117
  5916                           	
  5917                           l162:	
  5918  0B2C                     	return
  5919  0B2C  0008               	opt stack 0
  5920                           GLOBAL	__end_of_Send_UART_Data
  5921                           	__end_of_Send_UART_Data:
  5922  0B2D                     	signat	_Send_UART_Data,8313
  5923                           	global	_PrintLog
  5924                           
  5925 ;; *************** function _PrintLog *****************
  5926 ;; Defined at:
  5927 ;;		line 68 in file "161518_temp_main.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;  iText           1    wreg     PTR unsigned char 
  5930 ;;		 -> wInterruptText(75), 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;  iText           1   31[BANK0 ] PTR unsigned char 
  5933 ;;		 -> wInterruptText(75), 
  5934 ;;  wInterruptTe    1   30[BANK0 ] unsigned char 
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      void 
  5937 ;; Registers used:
  5938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5945 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5946 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5947 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  5948 ;;Total ram usage:        4 bytes
  5949 ;; Hardware stack levels used:    1
  5950 ;; Hardware stack levels required when called:   11
  5951 ;; This function calls:
  5952 ;;		_lcdWriteText
  5953 ;;		_memset
  5954 ;;		_strlen
  5955 ;; This function is called by:
  5956 ;;		_main
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5960                           	line	68
  5961                           global __ptext13
  5962                           __ptext13:	;psect for function _PrintLog
  5963  0B86                     psect	text13
  5964                           	file	"161518_temp_main.c"
  5965                           	line	68
  5966                           	global	__size_of_PrintLog
  5967                           	__size_of_PrintLog	equ	__end_of_PrintLog-_PrintLog
  5968  002E                     	
  5969                           _PrintLog:	
  5970  0B86                     ;incstack = 0
  5971                           	opt	stack 4
  5972                           ; Regs used in _PrintLog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5973                           ;PrintLog@iText stored from wreg
  5974                           	movlb 0	; select bank0
  5975  0B86  0020               	movwf	(PrintLog@iText)
  5976  0B87  00BF               	line	70
  5977                           	
  5978                           l4099:	
  5979  0B88                     	movf	(PrintLog@iText),w
  5980  0B88  083F               	movwf	(strlen@s)
  5981  0B89  00AA               	movlw	0x2
  5982  0B8A  3002               
  5983                           	movwf	(strlen@s+1)
  5984  0B8B  00AB               	fcall	_strlen
  5985  0B8C  318A  226C  318B   	movlb 0	; select bank0
  5986  0B8F  0020               	movf	(0+(?_strlen)),w
  5987  0B90  082A               	movwf	(??_PrintLog+0)+0
  5988  0B91  00BC               	movf	(??_PrintLog+0)+0,w
  5989  0B92  083C               	movwf	(PrintLog@wInterruptTextLen)
  5990  0B93  00BE               	line	72
  5991                           	
  5992                           l4101:	
  5993  0B94                     	movf	((PrintLog@wInterruptTextLen)),w
  5994  0B94  083E               	btfsc	status,2
  5995  0B95  1903               	goto	u2781
  5996  0B96  2B98               	goto	u2780
  5997  0B97  2B99               u2781:
  5998  0B98                     	goto	l151
  5999  0B98  2BB3               u2780:
  6000  0B99                     	line	74
  6001                           	
  6002                           l4103:	
  6003  0B99                     	movf	(PrintLog@iText),w
  6004  0B99  083F               	movwf	(lcdWriteText@iText)
  6005  0B9A  00B7               	movlw	0x2
  6006  0B9B  3002               
  6007                           	movwf	(lcdWriteText@iText+1)
  6008  0B9C  00B8               	fcall	_lcdWriteText
  6009  0B9D  318A  22B5  318B   	line	75
  6010                           	
  6011                           l4105:	
  6012  0BA0                     	movlb 0	; select bank0
  6013  0BA0  0020               	movf	(PrintLog@iText),w
  6014  0BA1  083F               	movwf	(memset@dest)
  6015  0BA2  00AA               	movlw	0x2
  6016  0BA3  3002               
  6017                           	movwf	(memset@dest+1)
  6018  0BA4  00AB               	movlw	0
  6019  0BA5  3000               	movwf	(memset@c)
  6020  0BA6  00AC               	movwf	(memset@c+1)
  6021  0BA7  00AD               	movf	(PrintLog@wInterruptTextLen),w
  6022  0BA8  083E               	movwf	(??_PrintLog+0)+0
  6023  0BA9  00BC               	clrf	(??_PrintLog+0)+0+1
  6024  0BAA  01BD               	movf	0+(??_PrintLog+0)+0,w
  6025  0BAB  083C               	movwf	(memset@n)
  6026  0BAC  00AE               	movf	1+(??_PrintLog+0)+0,w
  6027  0BAD  083D               	movwf	(memset@n+1)
  6028  0BAE  00AF               	fcall	_memset
  6029  0BAF  3186  2607  318B   	goto	l151
  6030  0BB2  2BB3               	line	76
  6031                           	
  6032                           l150:	
  6033  0BB3                     	line	77
  6034                           	
  6035                           l151:	
  6036  0BB3                     	return
  6037  0BB3  0008               	opt stack 0
  6038                           GLOBAL	__end_of_PrintLog
  6039                           	__end_of_PrintLog:
  6040  0BB4                     	signat	_PrintLog,4217
  6041                           	global	_lcdWriteText
  6042                           
  6043 ;; *************** function _lcdWriteText *****************
  6044 ;; Defined at:
  6045 ;;		line 63 in file "LCD_hd44780u_qy_2004a.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;  iText           2   23[BANK0 ] PTR unsigned char 
  6048 ;;		 -> myint@wText(2), wInterruptText(75), 
  6049 ;; Auto vars:     Size  Location     Type
  6050 ;;  wCharReading    1   27[BANK0 ] unsigned char 
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  1    wreg      void 
  6053 ;; Registers used:
  6054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6060 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6061 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6062 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6063 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  6064 ;;Total ram usage:        5 bytes
  6065 ;; Hardware stack levels used:    1
  6066 ;; Hardware stack levels required when called:   10
  6067 ;; This function calls:
  6068 ;;		_writeTxtChk
  6069 ;; This function is called by:
  6070 ;;		_PrintLog
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  6074                           	file	"LCD_hd44780u_qy_2004a.c"
  6075                           	line	63
  6076                           global __ptext14
  6077                           __ptext14:	;psect for function _lcdWriteText
  6078  0AB5                     psect	text14
  6079                           	file	"LCD_hd44780u_qy_2004a.c"
  6080                           	line	63
  6081                           	global	__size_of_lcdWriteText
  6082                           	__size_of_lcdWriteText	equ	__end_of_lcdWriteText-_lcdWriteText
  6083  0026                     	
  6084                           _lcdWriteText:	
  6085  0AB5                     ;incstack = 0
  6086                           	opt	stack 4
  6087                           ; Regs used in _lcdWriteText: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6088                           	line	65
  6089                           	
  6090                           l3917:	
  6091  0AB5                     ;LCD_hd44780u_qy_2004a.c: 63: void lcdWriteText(char *iText);LCD_hd44780u_qy_2004a.c: 64
                                 :  {;LCD_hd44780u_qy_2004a.c: 65:   unsigned char wCharReadingPos = 0;
  6092                           	movlb 0	; select bank0
  6093  0AB5  0020               	clrf	(lcdWriteText@wCharReadingPos)
  6094  0AB6  01BB               	line	66
  6095                           ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
  6096                           	goto	l3923
  6097  0AB7  2ACB               	
  6098                           l276:	
  6099  0AB8                     	line	68
  6100                           	
  6101                           l3919:	
  6102  0AB8                     ;LCD_hd44780u_qy_2004a.c: 67:   {;LCD_hd44780u_qy_2004a.c: 68:     writeTxtChk(iText[wCh
                                 arReadingPos]);
  6103                           	movf	(lcdWriteText@wCharReadingPos),w
  6104  0AB8  083B               	movwf	(??_lcdWriteText+0)+0
  6105  0AB9  00B9               	clrf	(??_lcdWriteText+0)+0+1
  6106  0ABA  01BA               	movf	0+(??_lcdWriteText+0)+0,w
  6107  0ABB  0839               	addwf	(lcdWriteText@iText),w
  6108  0ABC  0737               	movwf	fsr1l
  6109  0ABD  0086               	movf	1+(??_lcdWriteText+0)+0,w
  6110  0ABE  083A               	addwfc	(lcdWriteText@iText+1),w
  6111  0ABF  3D38               	movwf	1+fsr1l
  6112  0AC0  0087               	movf	indf1,w
  6113  0AC1  0801               	fcall	_writeTxtChk
  6114  0AC2  318F  2769  318A   	line	69
  6115                           	
  6116                           l3921:	
  6117  0AC5                     ;LCD_hd44780u_qy_2004a.c: 69:     wCharReadingPos++;
  6118                           	movlw	low(01h)
  6119  0AC5  3001               	movlb 0	; select bank0
  6120  0AC6  0020               	movwf	(??_lcdWriteText+0)+0
  6121  0AC7  00B9               	movf	(??_lcdWriteText+0)+0,w
  6122  0AC8  0839               	addwf	(lcdWriteText@wCharReadingPos),f
  6123  0AC9  07BB               	goto	l3923
  6124  0ACA  2ACB               	line	70
  6125                           ;LCD_hd44780u_qy_2004a.c: 70:   }
  6126                           	
  6127                           l275:	
  6128  0ACB                     	line	66
  6129                           	
  6130                           l3923:	
  6131  0ACB                     ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
  6132                           	movf	(lcdWriteText@wCharReadingPos),w
  6133  0ACB  083B               	movwf	(??_lcdWriteText+0)+0
  6134  0ACC  00B9               	clrf	(??_lcdWriteText+0)+0+1
  6135  0ACD  01BA               	movf	0+(??_lcdWriteText+0)+0,w
  6136  0ACE  0839               	addwf	(lcdWriteText@iText),w
  6137  0ACF  0737               	movwf	fsr1l
  6138  0AD0  0086               	movf	1+(??_lcdWriteText+0)+0,w
  6139  0AD1  083A               	addwfc	(lcdWriteText@iText+1),w
  6140  0AD2  3D38               	movwf	1+fsr1l
  6141  0AD3  0087               	movf	(indf1),w
  6142  0AD4  0801               	btfss	status,2
  6143  0AD5  1D03               	goto	u2591
  6144  0AD6  2AD8               	goto	u2590
  6145  0AD7  2AD9               u2591:
  6146  0AD8                     	goto	l3919
  6147  0AD8  2AB8               u2590:
  6148  0AD9                     	goto	l278
  6149  0AD9  2ADA               	
  6150                           l277:	
  6151  0ADA                     	line	72
  6152                           	
  6153                           l278:	
  6154  0ADA                     	return
  6155  0ADA  0008               	opt stack 0
  6156                           GLOBAL	__end_of_lcdWriteText
  6157                           	__end_of_lcdWriteText:
  6158  0ADB                     	signat	_lcdWriteText,4217
  6159                           	global	_writeTxtChk
  6160                           
  6161 ;; *************** function _writeTxtChk *****************
  6162 ;; Defined at:
  6163 ;;		line 101 in file "LCD_hd44780u_qy_2004a.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;  iOpCode         1    wreg     unsigned char 
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;  iOpCode         1   22[BANK0 ] unsigned char 
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  1    wreg      void 
  6170 ;; Registers used:
  6171 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6178 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6179 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6180 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  6181 ;;Total ram usage:        3 bytes
  6182 ;; Hardware stack levels used:    1
  6183 ;; Hardware stack levels required when called:    9
  6184 ;; This function calls:
  6185 ;;		_SetToSendDataToLCD
  6186 ;;		_setCursorPosition
  6187 ;;		_setData
  6188 ;;		_waitLCDBusy
  6189 ;; This function is called by:
  6190 ;;		_lcdWriteText
  6191 ;;		_lcdWriteRotText
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  6195                           	line	101
  6196                           global __ptext15
  6197                           __ptext15:	;psect for function _writeTxtChk
  6198  0F69                     psect	text15
  6199                           	file	"LCD_hd44780u_qy_2004a.c"
  6200                           	line	101
  6201                           	global	__size_of_writeTxtChk
  6202                           	__size_of_writeTxtChk	equ	__end_of_writeTxtChk-_writeTxtChk
  6203  0097                     	
  6204                           _writeTxtChk:	
  6205  0F69                     ;incstack = 0
  6206                           	opt	stack 4
  6207                           ; Regs used in _writeTxtChk: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6208                           ;writeTxtChk@iOpCode stored from wreg
  6209                           	movlb 0	; select bank0
  6210  0F69  0020               	movwf	(writeTxtChk@iOpCode)
  6211  0F6A  00B6               	line	103
  6212                           	
  6213                           l2593:	
  6214  0F6B                     ;LCD_hd44780u_qy_2004a.c: 101: void writeTxtChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 02: {;LCD_hd44780u_qy_2004a.c: 103:   SetToSendDataToLCD();
  6215                           	fcall	_SetToSendDataToLCD
  6216  0F6B  3189  2186  318F   	line	104
  6217                           	
  6218                           l2595:	
  6219  0F6E                     ;LCD_hd44780u_qy_2004a.c: 104:   PORTAbits.RA0 = 1;
  6220                           	movlb 0	; select bank0
  6221  0F6E  0020               	bsf	(12),0	;volatile
  6222  0F6F  140C               	line	105
  6223                           	
  6224                           l2597:	
  6225  0F70                     ;LCD_hd44780u_qy_2004a.c: 105:   PORTAbits.RA1 = 0;
  6226                           	bcf	(12),1	;volatile
  6227  0F70  108C               	line	106
  6228                           	
  6229                           l2599:	
  6230  0F71                     ;LCD_hd44780u_qy_2004a.c: 106:   if(iOpCode == '\n')
  6231                           		movlw	10
  6232  0F71  300A               	xorwf	((writeTxtChk@iOpCode)),w
  6233  0F72  0636               	btfss	status,2
  6234  0F73  1D03               	goto	u1381
  6235  0F74  2F76               	goto	u1380
  6236  0F75  2F77               u1381:
  6237  0F76                     	goto	l2629
  6238  0F76  2FC9               u1380:
  6239  0F77                     	line	108
  6240                           	
  6241                           l2601:	
  6242  0F77                     ;LCD_hd44780u_qy_2004a.c: 107:   {;LCD_hd44780u_qy_2004a.c: 108:    if(mWritingPosition 
                                 < 20)
  6243                           	movlw	low(014h)
  6244  0F77  3014               	subwf	(_mWritingPosition),w
  6245  0F78  025B               	skipnc
  6246  0F79  1803               	goto	u1391
  6247  0F7A  2F7C               	goto	u1390
  6248  0F7B  2F7D               u1391:
  6249  0F7C                     	goto	l2605
  6250  0F7C  2F83               u1390:
  6251  0F7D                     	line	110
  6252                           	
  6253                           l2603:	
  6254  0F7D                     ;LCD_hd44780u_qy_2004a.c: 109:    {;LCD_hd44780u_qy_2004a.c: 110:        setCursorPositi
                                 on(1,0);
  6255                           	clrf	(setCursorPosition@iPosition)
  6256  0F7D  01AF               	movlw	low(01h)
  6257  0F7E  3001               	fcall	_setCursorPosition
  6258  0F7F  318D  25B3  318F   	line	111
  6259                           ;LCD_hd44780u_qy_2004a.c: 111:    }
  6260                           	goto	l300
  6261  0F82  2FFF               	line	112
  6262                           ;LCD_hd44780u_qy_2004a.c: 112:    else if(mWritingPosition < 40)
  6263                           	
  6264                           l294:	
  6265  0F83                     	
  6266                           l2605:	
  6267  0F83                     	movlw	low(028h)
  6268  0F83  3028               	movlb 0	; select bank0
  6269  0F84  0020               	subwf	(_mWritingPosition),w
  6270  0F85  025B               	skipnc
  6271  0F86  1803               	goto	u1401
  6272  0F87  2F89               	goto	u1400
  6273  0F88  2F8A               u1401:
  6274  0F89                     	goto	l2609
  6275  0F89  2F90               u1400:
  6276  0F8A                     	line	114
  6277                           	
  6278                           l2607:	
  6279  0F8A                     ;LCD_hd44780u_qy_2004a.c: 113:    {;LCD_hd44780u_qy_2004a.c: 114:        setCursorPositi
                                 on(2,0);
  6280                           	clrf	(setCursorPosition@iPosition)
  6281  0F8A  01AF               	movlw	low(02h)
  6282  0F8B  3002               	fcall	_setCursorPosition
  6283  0F8C  318D  25B3  318F   	line	115
  6284                           ;LCD_hd44780u_qy_2004a.c: 115:    }
  6285                           	goto	l300
  6286  0F8F  2FFF               	line	116
  6287                           ;LCD_hd44780u_qy_2004a.c: 116:    else if(mWritingPosition < 60)
  6288                           	
  6289                           l296:	
  6290  0F90                     	
  6291                           l2609:	
  6292  0F90                     	movlw	low(03Ch)
  6293  0F90  303C               	movlb 0	; select bank0
  6294  0F91  0020               	subwf	(_mWritingPosition),w
  6295  0F92  025B               	skipnc
  6296  0F93  1803               	goto	u1411
  6297  0F94  2F96               	goto	u1410
  6298  0F95  2F97               u1411:
  6299  0F96                     	goto	l2613
  6300  0F96  2F9D               u1410:
  6301  0F97                     	line	118
  6302                           	
  6303                           l2611:	
  6304  0F97                     ;LCD_hd44780u_qy_2004a.c: 117:    {;LCD_hd44780u_qy_2004a.c: 118:        setCursorPositi
                                 on(3,0);
  6305                           	clrf	(setCursorPosition@iPosition)
  6306  0F97  01AF               	movlw	low(03h)
  6307  0F98  3003               	fcall	_setCursorPosition
  6308  0F99  318D  25B3  318F   	line	119
  6309                           ;LCD_hd44780u_qy_2004a.c: 119:    }
  6310                           	goto	l300
  6311  0F9C  2FFF               	line	120
  6312                           ;LCD_hd44780u_qy_2004a.c: 120:    else
  6313                           	
  6314                           l298:	
  6315  0F9D                     	line	122
  6316                           	
  6317                           l2613:	
  6318  0F9D                     ;LCD_hd44780u_qy_2004a.c: 121:    {;LCD_hd44780u_qy_2004a.c: 122:        setCursorPositi
                                 on(0,0);
  6319                           	movlb 0	; select bank0
  6320  0F9D  0020               	clrf	(setCursorPosition@iPosition)
  6321  0F9E  01AF               	movlw	low(0)
  6322  0F9F  3000               	fcall	_setCursorPosition
  6323  0FA0  318D  25B3  318F   	goto	l300
  6324  0FA3  2FFF               	line	123
  6325                           ;LCD_hd44780u_qy_2004a.c: 123:    }
  6326                           	
  6327                           l299:	
  6328  0FA4                     	goto	l300
  6329  0FA4  2FFF               	
  6330                           l297:	
  6331  0FA5                     	goto	l300
  6332  0FA5  2FFF               	
  6333                           l295:	
  6334  0FA6                     	goto	l300
  6335  0FA6  2FFF               	line	124
  6336                           	
  6337                           l2615:	
  6338  0FA7                     ;LCD_hd44780u_qy_2004a.c: 124:    return;
  6339                           	goto	l300
  6340  0FA7  2FFF               	line	125
  6341                           ;LCD_hd44780u_qy_2004a.c: 125:   }
  6342                           	
  6343                           l293:	
  6344  0FA8                     	line	126
  6345                           ;LCD_hd44780u_qy_2004a.c: 126:   switch(mWritingPosition)
  6346                           	goto	l2629
  6347  0FA8  2FC9               	line	128
  6348                           ;LCD_hd44780u_qy_2004a.c: 127:   {;LCD_hd44780u_qy_2004a.c: 128:     case 20:
  6349                           	
  6350                           l302:	
  6351  0FA9                     	line	129
  6352                           	
  6353                           l2617:	
  6354  0FA9                     ;LCD_hd44780u_qy_2004a.c: 129:       setCursorPosition(1,0);
  6355                           	movlb 0	; select bank0
  6356  0FA9  0020               	clrf	(setCursorPosition@iPosition)
  6357  0FAA  01AF               	movlw	low(01h)
  6358  0FAB  3001               	fcall	_setCursorPosition
  6359  0FAC  318D  25B3  318F   	line	130
  6360                           ;LCD_hd44780u_qy_2004a.c: 130:       break;
  6361                           	goto	l2631
  6362  0FAF  2FE0               	line	131
  6363                           ;LCD_hd44780u_qy_2004a.c: 131:     case 40:
  6364                           	
  6365                           l304:	
  6366  0FB0                     	line	132
  6367                           	
  6368                           l2619:	
  6369  0FB0                     ;LCD_hd44780u_qy_2004a.c: 132:       setCursorPosition(2,0);
  6370                           	movlb 0	; select bank0
  6371  0FB0  0020               	clrf	(setCursorPosition@iPosition)
  6372  0FB1  01AF               	movlw	low(02h)
  6373  0FB2  3002               	fcall	_setCursorPosition
  6374  0FB3  318D  25B3  318F   	line	133
  6375                           ;LCD_hd44780u_qy_2004a.c: 133:       break;
  6376                           	goto	l2631
  6377  0FB6  2FE0               	line	134
  6378                           ;LCD_hd44780u_qy_2004a.c: 134:     case 60:
  6379                           	
  6380                           l305:	
  6381  0FB7                     	line	135
  6382                           	
  6383                           l2621:	
  6384  0FB7                     ;LCD_hd44780u_qy_2004a.c: 135:       setCursorPosition(3,0);
  6385                           	movlb 0	; select bank0
  6386  0FB7  0020               	clrf	(setCursorPosition@iPosition)
  6387  0FB8  01AF               	movlw	low(03h)
  6388  0FB9  3003               	fcall	_setCursorPosition
  6389  0FBA  318D  25B3  318F   	line	136
  6390                           ;LCD_hd44780u_qy_2004a.c: 136:       break;
  6391                           	goto	l2631
  6392  0FBD  2FE0               	line	137
  6393                           ;LCD_hd44780u_qy_2004a.c: 137:     case 80:
  6394                           	
  6395                           l306:	
  6396  0FBE                     	line	138
  6397                           	
  6398                           l2623:	
  6399  0FBE                     ;LCD_hd44780u_qy_2004a.c: 138:       setCursorPosition(0,0);
  6400                           	movlb 0	; select bank0
  6401  0FBE  0020               	clrf	(setCursorPosition@iPosition)
  6402  0FBF  01AF               	movlw	low(0)
  6403  0FC0  3000               	fcall	_setCursorPosition
  6404  0FC1  318D  25B3  318F   	line	139
  6405                           	
  6406                           l2625:	
  6407  0FC4                     ;LCD_hd44780u_qy_2004a.c: 139:       mWritingPosition = 0;
  6408                           	movlb 0	; select bank0
  6409  0FC4  0020               	clrf	(_mWritingPosition)
  6410  0FC5  01DB               	line	140
  6411                           ;LCD_hd44780u_qy_2004a.c: 140:       break;
  6412                           	goto	l2631
  6413  0FC6  2FE0               	line	141
  6414                           ;LCD_hd44780u_qy_2004a.c: 141:     default:
  6415                           	
  6416                           l307:	
  6417  0FC7                     	line	142
  6418                           ;LCD_hd44780u_qy_2004a.c: 142:       break;
  6419                           	goto	l2631
  6420  0FC7  2FE0               	line	143
  6421                           	
  6422                           l2627:	
  6423  0FC8                     ;LCD_hd44780u_qy_2004a.c: 143:   }
  6424                           	goto	l2631
  6425  0FC8  2FE0               	
  6426                           l301:	
  6427  0FC9                     	
  6428                           l2629:	
  6429  0FC9                     	movlb 0	; select bank0
  6430  0FC9  0020               	movf	(_mWritingPosition),w
  6431  0FCA  085B               	movwf	(??_writeTxtChk+0)+0
  6432  0FCB  00B4               	clrf	(??_writeTxtChk+0)+0+1
  6433  0FCC  01B5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6434                           ; Switch size 1, requested type "space"
  6435                           ; Number of cases is 1, Range of values is 0 to 0
  6436                           ; switch strategies available:
  6437                           ; Name         Instructions Cycles
  6438                           ; simple_byte            4     3 (average)
  6439                           ; direct_byte            8     6 (fixed)
  6440                           ; jumptable            260     6 (fixed)
  6441                           ;	Chosen strategy is simple_byte
  6442                           
  6443                           	movf 1+(??_writeTxtChk+0)+0,w
  6444  0FCD  0835               	opt asmopt_push
  6445                           	opt asmopt_off
  6446                           	xorlw	0^0	; case 0
  6447  0FCE  3A00               	skipnz
  6448  0FCF  1903               	goto	l4739
  6449  0FD0  2FD2               	goto	l2631
  6450  0FD1  2FE0               	opt asmopt_pop
  6451                           	
  6452                           l4739:	
  6453  0FD2                     ; Switch size 1, requested type "space"
  6454                           ; Number of cases is 4, Range of values is 20 to 80
  6455                           ; switch strategies available:
  6456                           ; Name         Instructions Cycles
  6457                           ; simple_byte           13     7 (average)
  6458                           ; direct_byte          131     9 (fixed)
  6459                           ; jumptable            263     9 (fixed)
  6460                           ;	Chosen strategy is simple_byte
  6461                           
  6462                           	movf 0+(??_writeTxtChk+0)+0,w
  6463  0FD2  0834               	opt asmopt_push
  6464                           	opt asmopt_off
  6465                           	xorlw	20^0	; case 20
  6466  0FD3  3A14               	skipnz
  6467  0FD4  1903               	goto	l2617
  6468  0FD5  2FA9               	xorlw	40^20	; case 40
  6469  0FD6  3A3C               	skipnz
  6470  0FD7  1903               	goto	l2619
  6471  0FD8  2FB0               	xorlw	60^40	; case 60
  6472  0FD9  3A14               	skipnz
  6473  0FDA  1903               	goto	l2621
  6474  0FDB  2FB7               	xorlw	80^60	; case 80
  6475  0FDC  3A6C               	skipnz
  6476  0FDD  1903               	goto	l2623
  6477  0FDE  2FBE               	goto	l2631
  6478  0FDF  2FE0               	opt asmopt_pop
  6479                           
  6480                           	
  6481                           l303:	
  6482  0FE0                     	line	144
  6483                           	
  6484                           l2631:	
  6485  0FE0                     ;LCD_hd44780u_qy_2004a.c: 144:   waitLCDBusy();
  6486                           	fcall	_waitLCDBusy
  6487  0FE0  318B  2359  318F   	line	145
  6488                           	
  6489                           l2633:	
  6490  0FE3                     ;LCD_hd44780u_qy_2004a.c: 145:   SetToSendDataToLCD();
  6491                           	fcall	_SetToSendDataToLCD
  6492  0FE3  3189  2186  318F   	line	146
  6493                           	
  6494                           l2635:	
  6495  0FE6                     ;LCD_hd44780u_qy_2004a.c: 146:   PORTAbits.RA0 = 1;
  6496                           	movlb 0	; select bank0
  6497  0FE6  0020               	bsf	(12),0	;volatile
  6498  0FE7  140C               	line	147
  6499                           	
  6500                           l2637:	
  6501  0FE8                     ;LCD_hd44780u_qy_2004a.c: 147:   PORTAbits.RA1 = 0;
  6502                           	bcf	(12),1	;volatile
  6503  0FE8  108C               	line	148
  6504                           	
  6505                           l2639:	
  6506  0FE9                     ;LCD_hd44780u_qy_2004a.c: 148:   setData(iOpCode >> 4);
  6507                           	movf	(writeTxtChk@iOpCode),w
  6508  0FE9  0836               	movwf	(??_writeTxtChk+0)+0
  6509  0FEA  00B4               	movlw	04h
  6510  0FEB  3004               u1425:
  6511  0FEC                     	lsrf	(??_writeTxtChk+0)+0,f
  6512  0FEC  36B4               	decfsz	wreg,f
  6513  0FED  0B89               	goto	u1425
  6514  0FEE  2FEC               	movf	0+(??_writeTxtChk+0)+0,w
  6515  0FEF  0834               	fcall	_setData
  6516  0FF0  318C  248F  318F   	line	149
  6517                           	
  6518                           l2641:	
  6519  0FF3                     ;LCD_hd44780u_qy_2004a.c: 149:   setData(iOpCode);
  6520                           	movlb 0	; select bank0
  6521  0FF3  0020               	movf	(writeTxtChk@iOpCode),w
  6522  0FF4  0836               	fcall	_setData
  6523  0FF5  318C  248F  318F   	line	150
  6524                           	
  6525                           l2643:	
  6526  0FF8                     ;LCD_hd44780u_qy_2004a.c: 150:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  6527                           		opt asmopt_push
  6528                           	opt asmopt_off
  6529                           	nop2	;2 cycle nop
  6530  0FF8  3200               	nop2	;2 cycle nop
  6531  0FF9  3200               	opt asmopt_pop
  6532                           
  6533                           	line	151
  6534                           	
  6535                           l2645:	
  6536  0FFA                     ;LCD_hd44780u_qy_2004a.c: 151:   mWritingPosition++;
  6537                           	movlw	low(01h)
  6538  0FFA  3001               	movlb 0	; select bank0
  6539  0FFB  0020               	movwf	(??_writeTxtChk+0)+0
  6540  0FFC  00B4               	movf	(??_writeTxtChk+0)+0,w
  6541  0FFD  0834               	addwf	(_mWritingPosition),f
  6542  0FFE  07DB               	line	152
  6543                           	
  6544                           l300:	
  6545  0FFF                     	return
  6546  0FFF  0008               	opt stack 0
  6547                           GLOBAL	__end_of_writeTxtChk
  6548                           	__end_of_writeTxtChk:
  6549  1000                     	signat	_writeTxtChk,4217
  6550                           	global	_setCursorPosition
  6551                           
  6552 ;; *************** function _setCursorPosition *****************
  6553 ;; Defined at:
  6554 ;;		line 276 in file "LCD_hd44780u_qy_2004a.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;  iLine           1    wreg     unsigned char 
  6557 ;;  iPosition       1   15[BANK0 ] unsigned char 
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;  iLine           1   18[BANK0 ] unsigned char 
  6560 ;;  wLCDIndex       1   19[BANK0 ] unsigned char 
  6561 ;; Return value:  Size  Location     Type
  6562 ;;                  1    wreg      void 
  6563 ;; Registers used:
  6564 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6570 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6571 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6572 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6573 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  6574 ;;Total ram usage:        5 bytes
  6575 ;; Hardware stack levels used:    1
  6576 ;; Hardware stack levels required when called:    8
  6577 ;; This function calls:
  6578 ;;		_SetToSendDataToLCD
  6579 ;;		_setData
  6580 ;;		_waitLCDBusy
  6581 ;; This function is called by:
  6582 ;;		_main
  6583 ;;		_writeTxtChk
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  6587                           	line	276
  6588                           global __ptext16
  6589                           __ptext16:	;psect for function _setCursorPosition
  6590  0DB3                     psect	text16
  6591                           	file	"LCD_hd44780u_qy_2004a.c"
  6592                           	line	276
  6593                           	global	__size_of_setCursorPosition
  6594                           	__size_of_setCursorPosition	equ	__end_of_setCursorPosition-_setCursorPosition
  6595  0060                     	
  6596                           _setCursorPosition:	
  6597  0DB3                     ;incstack = 0
  6598                           	opt	stack 7
  6599                           ; Regs used in _setCursorPosition: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6600                           ;setCursorPosition@iLine stored from wreg
  6601                           	movlb 0	; select bank0
  6602  0DB3  0020               	movwf	(setCursorPosition@iLine)
  6603  0DB4  00B2               	line	278
  6604                           	
  6605                           l2501:	
  6606  0DB5                     ;LCD_hd44780u_qy_2004a.c: 276: void setCursorPosition(char iLine, char iPosition);LCD_hd
                                 44780u_qy_2004a.c: 277: {;LCD_hd44780u_qy_2004a.c: 278:   char wLCDIndex=0;
  6607                           	clrf	(setCursorPosition@wLCDIndex)
  6608  0DB5  01B3               	line	280
  6609                           ;LCD_hd44780u_qy_2004a.c: 280:   switch(iLine)
  6610                           	goto	l2513
  6611  0DB6  2DE3               	line	282
  6612                           ;LCD_hd44780u_qy_2004a.c: 281:   {;LCD_hd44780u_qy_2004a.c: 282:       case 0:
  6613                           	
  6614                           l371:	
  6615  0DB7                     	line	283
  6616                           	
  6617                           l2503:	
  6618  0DB7                     ;LCD_hd44780u_qy_2004a.c: 283:           wLCDIndex = 0x00 + iPosition;
  6619                           	movf	(setCursorPosition@iPosition),w
  6620  0DB7  082F               	movwf	(??_setCursorPosition+0)+0
  6621  0DB8  00B0               	movf	(??_setCursorPosition+0)+0,w
  6622  0DB9  0830               	movwf	(setCursorPosition@wLCDIndex)
  6623  0DBA  00B3               	line	284
  6624                           ;LCD_hd44780u_qy_2004a.c: 284:           mWritingPosition = iPosition;
  6625                           	movf	(setCursorPosition@iPosition),w
  6626  0DBB  082F               	movwf	(??_setCursorPosition+0)+0
  6627  0DBC  00B0               	movf	(??_setCursorPosition+0)+0,w
  6628  0DBD  0830               	movwf	(_mWritingPosition)
  6629  0DBE  00DB               	line	285
  6630                           ;LCD_hd44780u_qy_2004a.c: 285:           break;
  6631                           	goto	l2515
  6632  0DBF  2DF9               	line	286
  6633                           ;LCD_hd44780u_qy_2004a.c: 286:       case 1:
  6634                           	
  6635                           l373:	
  6636  0DC0                     	line	287
  6637                           	
  6638                           l2505:	
  6639  0DC0                     ;LCD_hd44780u_qy_2004a.c: 287:           wLCDIndex = 0x40 + iPosition;
  6640                           	movf	(setCursorPosition@iPosition),w
  6641  0DC0  082F               	addlw	040h
  6642  0DC1  3E40               	movwf	(??_setCursorPosition+0)+0
  6643  0DC2  00B0               	movf	(??_setCursorPosition+0)+0,w
  6644  0DC3  0830               	movwf	(setCursorPosition@wLCDIndex)
  6645  0DC4  00B3               	line	288
  6646                           ;LCD_hd44780u_qy_2004a.c: 288:           mWritingPosition = 20 + iPosition;
  6647                           	movf	(setCursorPosition@iPosition),w
  6648  0DC5  082F               	addlw	014h
  6649  0DC6  3E14               	movwf	(??_setCursorPosition+0)+0
  6650  0DC7  00B0               	movf	(??_setCursorPosition+0)+0,w
  6651  0DC8  0830               	movwf	(_mWritingPosition)
  6652  0DC9  00DB               	line	289
  6653                           ;LCD_hd44780u_qy_2004a.c: 289:           break;
  6654                           	goto	l2515
  6655  0DCA  2DF9               	line	290
  6656                           ;LCD_hd44780u_qy_2004a.c: 290:       case 2:
  6657                           	
  6658                           l374:	
  6659  0DCB                     	line	291
  6660                           	
  6661                           l2507:	
  6662  0DCB                     ;LCD_hd44780u_qy_2004a.c: 291:           wLCDIndex = 0x14 + iPosition;
  6663                           	movf	(setCursorPosition@iPosition),w
  6664  0DCB  082F               	addlw	014h
  6665  0DCC  3E14               	movwf	(??_setCursorPosition+0)+0
  6666  0DCD  00B0               	movf	(??_setCursorPosition+0)+0,w
  6667  0DCE  0830               	movwf	(setCursorPosition@wLCDIndex)
  6668  0DCF  00B3               	line	292
  6669                           ;LCD_hd44780u_qy_2004a.c: 292:           mWritingPosition = 40 + iPosition;
  6670                           	movf	(setCursorPosition@iPosition),w
  6671  0DD0  082F               	addlw	028h
  6672  0DD1  3E28               	movwf	(??_setCursorPosition+0)+0
  6673  0DD2  00B0               	movf	(??_setCursorPosition+0)+0,w
  6674  0DD3  0830               	movwf	(_mWritingPosition)
  6675  0DD4  00DB               	line	293
  6676                           ;LCD_hd44780u_qy_2004a.c: 293:           break;
  6677                           	goto	l2515
  6678  0DD5  2DF9               	line	294
  6679                           ;LCD_hd44780u_qy_2004a.c: 294:       case 3:
  6680                           	
  6681                           l375:	
  6682  0DD6                     	line	295
  6683                           	
  6684                           l2509:	
  6685  0DD6                     ;LCD_hd44780u_qy_2004a.c: 295:           wLCDIndex = 0x54 + iPosition;
  6686                           	movf	(setCursorPosition@iPosition),w
  6687  0DD6  082F               	addlw	054h
  6688  0DD7  3E54               	movwf	(??_setCursorPosition+0)+0
  6689  0DD8  00B0               	movf	(??_setCursorPosition+0)+0,w
  6690  0DD9  0830               	movwf	(setCursorPosition@wLCDIndex)
  6691  0DDA  00B3               	line	296
  6692                           ;LCD_hd44780u_qy_2004a.c: 296:           mWritingPosition = 60 + iPosition;
  6693                           	movf	(setCursorPosition@iPosition),w
  6694  0DDB  082F               	addlw	03Ch
  6695  0DDC  3E3C               	movwf	(??_setCursorPosition+0)+0
  6696  0DDD  00B0               	movf	(??_setCursorPosition+0)+0,w
  6697  0DDE  0830               	movwf	(_mWritingPosition)
  6698  0DDF  00DB               	line	297
  6699                           ;LCD_hd44780u_qy_2004a.c: 297:           break;
  6700                           	goto	l2515
  6701  0DE0  2DF9               	line	298
  6702                           ;LCD_hd44780u_qy_2004a.c: 298:       default:
  6703                           	
  6704                           l376:	
  6705  0DE1                     	line	299
  6706                           ;LCD_hd44780u_qy_2004a.c: 299:       break;
  6707                           	goto	l2515
  6708  0DE1  2DF9               	line	300
  6709                           	
  6710                           l2511:	
  6711  0DE2                     ;LCD_hd44780u_qy_2004a.c: 300:   }
  6712                           	goto	l2515
  6713  0DE2  2DF9               	
  6714                           l370:	
  6715  0DE3                     	
  6716                           l2513:	
  6717  0DE3                     	movf	(setCursorPosition@iLine),w
  6718  0DE3  0832               	movwf	(??_setCursorPosition+0)+0
  6719  0DE4  00B0               	clrf	(??_setCursorPosition+0)+0+1
  6720  0DE5  01B1               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6721                           ; Switch size 1, requested type "space"
  6722                           ; Number of cases is 1, Range of values is 0 to 0
  6723                           ; switch strategies available:
  6724                           ; Name         Instructions Cycles
  6725                           ; simple_byte            4     3 (average)
  6726                           ; direct_byte            8     6 (fixed)
  6727                           ; jumptable            260     6 (fixed)
  6728                           ;	Chosen strategy is simple_byte
  6729                           
  6730                           	movf 1+(??_setCursorPosition+0)+0,w
  6731  0DE6  0831               	opt asmopt_push
  6732                           	opt asmopt_off
  6733                           	xorlw	0^0	; case 0
  6734  0DE7  3A00               	skipnz
  6735  0DE8  1903               	goto	l4741
  6736  0DE9  2DEB               	goto	l2515
  6737  0DEA  2DF9               	opt asmopt_pop
  6738                           	
  6739                           l4741:	
  6740  0DEB                     ; Switch size 1, requested type "space"
  6741                           ; Number of cases is 4, Range of values is 0 to 3
  6742                           ; switch strategies available:
  6743                           ; Name         Instructions Cycles
  6744                           ; simple_byte           13     7 (average)
  6745                           ; direct_byte           14     6 (fixed)
  6746                           ; jumptable            260     6 (fixed)
  6747                           ;	Chosen strategy is simple_byte
  6748                           
  6749                           	movf 0+(??_setCursorPosition+0)+0,w
  6750  0DEB  0830               	opt asmopt_push
  6751                           	opt asmopt_off
  6752                           	xorlw	0^0	; case 0
  6753  0DEC  3A00               	skipnz
  6754  0DED  1903               	goto	l2503
  6755  0DEE  2DB7               	xorlw	1^0	; case 1
  6756  0DEF  3A01               	skipnz
  6757  0DF0  1903               	goto	l2505
  6758  0DF1  2DC0               	xorlw	2^1	; case 2
  6759  0DF2  3A03               	skipnz
  6760  0DF3  1903               	goto	l2507
  6761  0DF4  2DCB               	xorlw	3^2	; case 3
  6762  0DF5  3A01               	skipnz
  6763  0DF6  1903               	goto	l2509
  6764  0DF7  2DD6               	goto	l2515
  6765  0DF8  2DF9               	opt asmopt_pop
  6766                           
  6767                           	
  6768                           l372:	
  6769  0DF9                     	line	302
  6770                           	
  6771                           l2515:	
  6772  0DF9                     ;LCD_hd44780u_qy_2004a.c: 302:   waitLCDBusy();
  6773                           	fcall	_waitLCDBusy
  6774  0DF9  318B  2359  318D   	line	304
  6775                           	
  6776                           l2517:	
  6777  0DFC                     ;LCD_hd44780u_qy_2004a.c: 304:   SetToSendDataToLCD();
  6778                           	fcall	_SetToSendDataToLCD
  6779  0DFC  3189  2186  318D   	line	305
  6780                           	
  6781                           l2519:	
  6782  0DFF                     ;LCD_hd44780u_qy_2004a.c: 305:   PORTAbits.RA0 = 0;
  6783                           	movlb 0	; select bank0
  6784  0DFF  0020               	bcf	(12),0	;volatile
  6785  0E00  100C               	line	306
  6786                           	
  6787                           l2521:	
  6788  0E01                     ;LCD_hd44780u_qy_2004a.c: 306:   PORTAbits.RA1 = 0;
  6789                           	bcf	(12),1	;volatile
  6790  0E01  108C               	line	307
  6791                           	
  6792                           l2523:	
  6793  0E02                     ;LCD_hd44780u_qy_2004a.c: 307:   setData((wLCDIndex >> 4) | 0x8 );
  6794                           	movf	(setCursorPosition@wLCDIndex),w
  6795  0E02  0833               	movwf	(??_setCursorPosition+0)+0
  6796  0E03  00B0               	movlw	04h
  6797  0E04  3004               u1315:
  6798  0E05                     	lsrf	(??_setCursorPosition+0)+0,f
  6799  0E05  36B0               	decfsz	wreg,f
  6800  0E06  0B89               	goto	u1315
  6801  0E07  2E05               	movf	0+(??_setCursorPosition+0)+0,w
  6802  0E08  0830               	iorlw	08h
  6803  0E09  3808               	fcall	_setData
  6804  0E0A  318C  248F  318D   	line	308
  6805                           	
  6806                           l2525:	
  6807  0E0D                     ;LCD_hd44780u_qy_2004a.c: 308:   setData(wLCDIndex);
  6808                           	movlb 0	; select bank0
  6809  0E0D  0020               	movf	(setCursorPosition@wLCDIndex),w
  6810  0E0E  0833               	fcall	_setData
  6811  0E0F  318C  248F  318D   	line	310
  6812                           	
  6813                           l377:	
  6814  0E12                     	return
  6815  0E12  0008               	opt stack 0
  6816                           GLOBAL	__end_of_setCursorPosition
  6817                           	__end_of_setCursorPosition:
  6818  0E13                     	signat	_setCursorPosition,8313
  6819                           	global	_waitLCDBusy
  6820                           
  6821 ;; *************** function _waitLCDBusy *****************
  6822 ;; Defined at:
  6823 ;;		line 184 in file "LCD_hd44780u_qy_2004a.c"
  6824 ;; Parameters:    Size  Location     Type
  6825 ;;		None
  6826 ;; Auto vars:     Size  Location     Type
  6827 ;;  busyFlag        2   13[BANK0 ] int 
  6828 ;; Return value:  Size  Location     Type
  6829 ;;                  1    wreg      void 
  6830 ;; Registers used:
  6831 ;;		wreg, status,2, status,0, pclath, cstack
  6832 ;; Tracked objects:
  6833 ;;		On entry : 0/0
  6834 ;;		On exit  : 0/0
  6835 ;;		Unchanged: 0/0
  6836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6838 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6839 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  6840 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  6841 ;;Total ram usage:        5 bytes
  6842 ;; Hardware stack levels used:    1
  6843 ;; Hardware stack levels required when called:    7
  6844 ;; This function calls:
  6845 ;;		_SetToReadDataFromLCD
  6846 ;; This function is called by:
  6847 ;;		_writeTxtChk
  6848 ;;		_writeInsChk
  6849 ;;		_setCursorPosition
  6850 ;; This function uses a non-reentrant model
  6851 ;;
  6852                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  6853                           	line	184
  6854                           global __ptext17
  6855                           __ptext17:	;psect for function _waitLCDBusy
  6856  0B59                     psect	text17
  6857                           	file	"LCD_hd44780u_qy_2004a.c"
  6858                           	line	184
  6859                           	global	__size_of_waitLCDBusy
  6860                           	__size_of_waitLCDBusy	equ	__end_of_waitLCDBusy-_waitLCDBusy
  6861  002D                     	
  6862                           _waitLCDBusy:	
  6863  0B59                     ;incstack = 0
  6864                           	opt	stack 6
  6865                           ; Regs used in _waitLCDBusy: [wreg+status,2+status,0+pclath+cstack]
  6866                           	line	186
  6867                           	
  6868                           l2483:	
  6869  0B59                     ;LCD_hd44780u_qy_2004a.c: 186:   PORTAbits.RA0 = 0;
  6870                           	movlb 0	; select bank0
  6871  0B59  0020               	bcf	(12),0	;volatile
  6872  0B5A  100C               	line	187
  6873                           ;LCD_hd44780u_qy_2004a.c: 187:   PORTAbits.RA1 = 1;
  6874                           	bsf	(12),1	;volatile
  6875  0B5B  148C               	line	189
  6876                           	
  6877                           l2485:	
  6878  0B5C                     ;LCD_hd44780u_qy_2004a.c: 189:   SetToReadDataFromLCD();
  6879                           	fcall	_SetToReadDataFromLCD
  6880  0B5C  3189  218C  318B   	line	191
  6881                           	
  6882                           l2487:	
  6883  0B5F                     ;LCD_hd44780u_qy_2004a.c: 191:   int busyFlag = 1;
  6884                           	movlw	01h
  6885  0B5F  3001               	movlb 0	; select bank0
  6886  0B60  0020               	movwf	(waitLCDBusy@busyFlag)
  6887  0B61  00AD               	movlw	0
  6888  0B62  3000               	movwf	((waitLCDBusy@busyFlag))+1
  6889  0B63  00AE               	line	192
  6890                           ;LCD_hd44780u_qy_2004a.c: 192:   while(busyFlag == 1)
  6891                           	goto	l322
  6892  0B64  2B7D               	
  6893                           l323:	
  6894  0B65                     	line	195
  6895                           ;LCD_hd44780u_qy_2004a.c: 193:   {;LCD_hd44780u_qy_2004a.c: 195:     PORTAbits.RA2 = 1;

  6896                           	bsf	(12),2	;volatile
  6897  0B65  150C               	line	196
  6898                           ;LCD_hd44780u_qy_2004a.c: 196:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  6899                           		opt asmopt_push
  6900                           	opt asmopt_off
  6901                           	nop2	;2 cycle nop
  6902  0B66  3200               	nop2	;2 cycle nop
  6903  0B67  3200               	opt asmopt_pop
  6904                           
  6905                           	line	197
  6906                           	
  6907                           l2489:	
  6908  0B68                     ;LCD_hd44780u_qy_2004a.c: 197:     busyFlag = PORTAbits.RA3;
  6909                           	movlb 0	; select bank0
  6910  0B68  0020               	rrf	(12),w	;volatile
  6911  0B69  0C0C               	movwf	(??_waitLCDBusy+0)+0
  6912  0B6A  00AA               	rrf	(??_waitLCDBusy+0)+0,f
  6913  0B6B  0CAA               	rrf	(??_waitLCDBusy+0)+0,w
  6914  0B6C  0C2A               	andlw	(1<<1)-1
  6915  0B6D  3901               	movwf	(??_waitLCDBusy+1)+0
  6916  0B6E  00AB               	clrf	(??_waitLCDBusy+1)+0+1
  6917  0B6F  01AC               	movf	0+(??_waitLCDBusy+1)+0,w
  6918  0B70  082B               	movwf	(waitLCDBusy@busyFlag)
  6919  0B71  00AD               	movf	1+(??_waitLCDBusy+1)+0,w
  6920  0B72  082C               	movwf	(waitLCDBusy@busyFlag+1)
  6921  0B73  00AE               	line	198
  6922                           	
  6923                           l2491:	
  6924  0B74                     ;LCD_hd44780u_qy_2004a.c: 198:     PORTAbits.RA2 = 0;
  6925                           	bcf	(12),2	;volatile
  6926  0B74  110C               	line	199
  6927                           	
  6928                           l2493:	
  6929  0B75                     ;LCD_hd44780u_qy_2004a.c: 199:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  6930                           		opt asmopt_push
  6931                           	opt asmopt_off
  6932                           	nop2	;2 cycle nop
  6933  0B75  3200               	nop2	;2 cycle nop
  6934  0B76  3200               	nop2	;2 cycle nop
  6935  0B77  3200               	nop2	;2 cycle nop
  6936  0B78  3200               	opt asmopt_pop
  6937                           
  6938                           	line	201
  6939                           	
  6940                           l2495:	
  6941  0B79                     ;LCD_hd44780u_qy_2004a.c: 201:     PORTAbits.RA2 = 1;
  6942                           	movlb 0	; select bank0
  6943  0B79  0020               	bsf	(12),2	;volatile
  6944  0B7A  150C               	line	202
  6945                           	
  6946                           l2497:	
  6947  0B7B                     ;LCD_hd44780u_qy_2004a.c: 202:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  6948                           		opt asmopt_push
  6949                           	opt asmopt_off
  6950                           	nop2	;2 cycle nop
  6951  0B7B  3200               	nop2	;2 cycle nop
  6952  0B7C  3200               	opt asmopt_pop
  6953                           
  6954                           	line	203
  6955                           ;LCD_hd44780u_qy_2004a.c: 203:   }
  6956                           	
  6957                           l322:	
  6958  0B7D                     	line	192
  6959                           ;LCD_hd44780u_qy_2004a.c: 192:   while(busyFlag == 1)
  6960                           	movlb 0	; select bank0
  6961  0B7D  0020               		decf	((waitLCDBusy@busyFlag)),w
  6962  0B7E  032D               iorwf	((waitLCDBusy@busyFlag+1)),w
  6963  0B7F  042E               	btfsc	status,2
  6964  0B80  1903               	goto	u1301
  6965  0B81  2B83               	goto	u1300
  6966  0B82  2B84               u1301:
  6967  0B83                     	goto	l323
  6968  0B83  2B65               u1300:
  6969  0B84                     	goto	l325
  6970  0B84  2B85               	
  6971                           l324:	
  6972  0B85                     	line	204
  6973                           	
  6974                           l325:	
  6975  0B85                     	return
  6976  0B85  0008               	opt stack 0
  6977                           GLOBAL	__end_of_waitLCDBusy
  6978                           	__end_of_waitLCDBusy:
  6979  0B86                     	signat	_waitLCDBusy,89
  6980                           	global	_SetToReadDataFromLCD
  6981                           
  6982 ;; *************** function _SetToReadDataFromLCD *****************
  6983 ;; Defined at:
  6984 ;;		line 169 in file "LCD_hd44780u_qy_2004a.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;		None
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;		None
  6989 ;; Return value:  Size  Location     Type
  6990 ;;                  1    wreg      void 
  6991 ;; Registers used:
  6992 ;;		None
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7002 ;;Total ram usage:        0 bytes
  7003 ;; Hardware stack levels used:    1
  7004 ;; Hardware stack levels required when called:    6
  7005 ;; This function calls:
  7006 ;;		Nothing
  7007 ;; This function is called by:
  7008 ;;		_waitLCDBusy
  7009 ;; This function uses a non-reentrant model
  7010 ;;
  7011                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  7012                           	line	169
  7013                           global __ptext18
  7014                           __ptext18:	;psect for function _SetToReadDataFromLCD
  7015  098C                     psect	text18
  7016                           	file	"LCD_hd44780u_qy_2004a.c"
  7017                           	line	169
  7018                           	global	__size_of_SetToReadDataFromLCD
  7019                           	__size_of_SetToReadDataFromLCD	equ	__end_of_SetToReadDataFromLCD-_SetToReadDataFromLCD

  7020  0006                     	
  7021                           _SetToReadDataFromLCD:	
  7022  098C                     ;incstack = 0
  7023                           	opt	stack 6
  7024                           ; Regs used in _SetToReadDataFromLCD: []
  7025                           	line	171
  7026                           	
  7027                           l2469:	
  7028  098C                     ;LCD_hd44780u_qy_2004a.c: 171:   TRISAbits.TRISA3 = 1;
  7029                           	movlb 1	; select bank1
  7030  098C  0021               	bsf	(140)^080h,3	;volatile
  7031  098D  158C               	line	172
  7032                           ;LCD_hd44780u_qy_2004a.c: 172:   TRISCbits.TRISC2 = 1;
  7033                           	bsf	(142)^080h,2	;volatile
  7034  098E  150E               	line	173
  7035                           ;LCD_hd44780u_qy_2004a.c: 173:   TRISCbits.TRISC1 = 1;
  7036                           	bsf	(142)^080h,1	;volatile
  7037  098F  148E               	line	174
  7038                           ;LCD_hd44780u_qy_2004a.c: 174:   TRISCbits.TRISC0 = 1;
  7039                           	bsf	(142)^080h,0	;volatile
  7040  0990  140E               	line	175
  7041                           	
  7042                           l316:	
  7043  0991                     	return
  7044  0991  0008               	opt stack 0
  7045                           GLOBAL	__end_of_SetToReadDataFromLCD
  7046                           	__end_of_SetToReadDataFromLCD:
  7047  0992                     	signat	_SetToReadDataFromLCD,89
  7048                           	global	_setData
  7049                           
  7050 ;; *************** function _setData *****************
  7051 ;; Defined at:
  7052 ;;		line 89 in file "LCD_hd44780u_qy_2004a.c"
  7053 ;; Parameters:    Size  Location     Type
  7054 ;;  iValue          1    wreg     unsigned char 
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;  iValue          1   12[BANK0 ] unsigned char 
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  1    wreg      void 
  7059 ;; Registers used:
  7060 ;;		wreg, status,2, status,0
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7067 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7068 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7069 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  7070 ;;Total ram usage:        3 bytes
  7071 ;; Hardware stack levels used:    1
  7072 ;; Hardware stack levels required when called:    6
  7073 ;; This function calls:
  7074 ;;		Nothing
  7075 ;; This function is called by:
  7076 ;;		_initLCD
  7077 ;;		_writeTxtChk
  7078 ;;		_writeInsNoChk
  7079 ;;		_setCursorPosition
  7080 ;; This function uses a non-reentrant model
  7081 ;;
  7082                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  7083                           	line	89
  7084                           global __ptext19
  7085                           __ptext19:	;psect for function _setData
  7086  0C8F                     psect	text19
  7087                           	file	"LCD_hd44780u_qy_2004a.c"
  7088                           	line	89
  7089                           	global	__size_of_setData
  7090                           	__size_of_setData	equ	__end_of_setData-_setData
  7091  003C                     	
  7092                           _setData:	
  7093  0C8F                     ;incstack = 0
  7094                           	opt	stack 6
  7095                           ; Regs used in _setData: [wreg+status,2+status,0]
  7096                           ;setData@iValue stored from wreg
  7097                           	movlb 0	; select bank0
  7098  0C8F  0020               	movwf	(setData@iValue)
  7099  0C90  00AC               	line	91
  7100                           	
  7101                           l2471:	
  7102  0C91                     ;LCD_hd44780u_qy_2004a.c: 89: void setData(char iValue);LCD_hd44780u_qy_2004a.c: 90: {;L
                                 CD_hd44780u_qy_2004a.c: 91:   PORTAbits.RA2 = 1;
  7103                           	bsf	(12),2	;volatile
  7104  0C91  150C               	line	92
  7105                           	
  7106                           l2473:	
  7107  0C92                     ;LCD_hd44780u_qy_2004a.c: 92:   PORTAbits.RA3 = (iValue & 0x8) >> 3;
  7108                           	movf	(setData@iValue),w
  7109  0C92  082C               	movwf	(??_setData+0)+0
  7110  0C93  00AA               	movlw	03h
  7111  0C94  3003               u1285:
  7112  0C95                     	lsrf	(??_setData+0)+0,f
  7113  0C95  36AA               	decfsz	wreg,f
  7114  0C96  0B89               	goto	u1285
  7115  0C97  2C95               	movf	0+(??_setData+0)+0,w
  7116  0C98  082A               	andlw	01h
  7117  0C99  3901               	movwf	(??_setData+1)+0
  7118  0C9A  00AB               	rlf	(??_setData+1)+0,f
  7119  0C9B  0DAB               	rlf	(??_setData+1)+0,f
  7120  0C9C  0DAB               	rlf	(??_setData+1)+0,f
  7121  0C9D  0DAB               	movf	(12),w	;volatile
  7122  0C9E  080C               	xorwf	(??_setData+1)+0,w
  7123  0C9F  062B               	andlw	not (((1<<1)-1)<<3)
  7124  0CA0  39F7               	xorwf	(??_setData+1)+0,w
  7125  0CA1  062B               	movwf	(12)	;volatile
  7126  0CA2  008C               	line	93
  7127                           ;LCD_hd44780u_qy_2004a.c: 93:   PORTCbits.RC2 = (iValue & 0x4) >> 2;
  7128                           	movf	(setData@iValue),w
  7129  0CA3  082C               	movwf	(??_setData+0)+0
  7130  0CA4  00AA               	movlw	02h
  7131  0CA5  3002               u1295:
  7132  0CA6                     	lsrf	(??_setData+0)+0,f
  7133  0CA6  36AA               	decfsz	wreg,f
  7134  0CA7  0B89               	goto	u1295
  7135  0CA8  2CA6               	movf	0+(??_setData+0)+0,w
  7136  0CA9  082A               	andlw	01h
  7137  0CAA  3901               	movwf	(??_setData+1)+0
  7138  0CAB  00AB               	rlf	(??_setData+1)+0,f
  7139  0CAC  0DAB               	rlf	(??_setData+1)+0,f
  7140  0CAD  0DAB               	movf	(14),w	;volatile
  7141  0CAE  080E               	xorwf	(??_setData+1)+0,w
  7142  0CAF  062B               	andlw	not (((1<<1)-1)<<2)
  7143  0CB0  39FB               	xorwf	(??_setData+1)+0,w
  7144  0CB1  062B               	movwf	(14)	;volatile
  7145  0CB2  008E               	line	94
  7146                           ;LCD_hd44780u_qy_2004a.c: 94:   PORTCbits.RC1 = (iValue & 0x2) >> 1;
  7147                           	lsrf	(setData@iValue),w
  7148  0CB3  362C               	andlw	01h
  7149  0CB4  3901               	movwf	(??_setData+0)+0
  7150  0CB5  00AA               	rlf	(??_setData+0)+0,f
  7151  0CB6  0DAA               	movf	(14),w	;volatile
  7152  0CB7  080E               	xorwf	(??_setData+0)+0,w
  7153  0CB8  062A               	andlw	not (((1<<1)-1)<<1)
  7154  0CB9  39FD               	xorwf	(??_setData+0)+0,w
  7155  0CBA  062A               	movwf	(14)	;volatile
  7156  0CBB  008E               	line	95
  7157                           ;LCD_hd44780u_qy_2004a.c: 95:   PORTCbits.RC0 = (iValue & 0x1) ;
  7158                           	movlw	low(01h)
  7159  0CBC  3001               	andwf	(setData@iValue),w
  7160  0CBD  052C               	movwf	(??_setData+0)+0
  7161  0CBE  00AA               	movf	(14),w	;volatile
  7162  0CBF  080E               	xorwf	0+(??_setData+0)+0,w
  7163  0CC0  062A               	andlw	not ((1<<1)-1)
  7164  0CC1  39FE               	xorwf	0+(??_setData+0)+0,w
  7165  0CC2  062A               	movwf	(14)	;volatile
  7166  0CC3  008E               	line	96
  7167                           	
  7168                           l2475:	
  7169  0CC4                     ;LCD_hd44780u_qy_2004a.c: 96:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  7170                           		opt asmopt_push
  7171                           	opt asmopt_off
  7172                           	nop2	;2 cycle nop
  7173  0CC4  3200               	nop2	;2 cycle nop
  7174  0CC5  3200               	opt asmopt_pop
  7175                           
  7176                           	line	97
  7177                           	
  7178                           l2477:	
  7179  0CC6                     ;LCD_hd44780u_qy_2004a.c: 97:   PORTAbits.RA2 = 0;
  7180                           	movlb 0	; select bank0
  7181  0CC6  0020               	bcf	(12),2	;volatile
  7182  0CC7  110C               	line	98
  7183                           	
  7184                           l2479:	
  7185  0CC8                     ;LCD_hd44780u_qy_2004a.c: 98:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  7186                           		opt asmopt_push
  7187                           	opt asmopt_off
  7188                           	nop2	;2 cycle nop
  7189  0CC8  3200               	nop2	;2 cycle nop
  7190  0CC9  3200               	opt asmopt_pop
  7191                           
  7192                           	line	99
  7193                           	
  7194                           l290:	
  7195  0CCA                     	return
  7196  0CCA  0008               	opt stack 0
  7197                           GLOBAL	__end_of_setData
  7198                           	__end_of_setData:
  7199  0CCB                     	signat	_setData,4217
  7200                           	global	_SetToSendDataToLCD
  7201                           
  7202 ;; *************** function _SetToSendDataToLCD *****************
  7203 ;; Defined at:
  7204 ;;		line 176 in file "LCD_hd44780u_qy_2004a.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;		None
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;		None
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  1    wreg      void 
  7211 ;; Registers used:
  7212 ;;		None
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7222 ;;Total ram usage:        0 bytes
  7223 ;; Hardware stack levels used:    1
  7224 ;; Hardware stack levels required when called:    6
  7225 ;; This function calls:
  7226 ;;		Nothing
  7227 ;; This function is called by:
  7228 ;;		_writeTxtChk
  7229 ;;		_writeInsNoChk
  7230 ;;		_setCursorPosition
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  7234                           	line	176
  7235                           global __ptext20
  7236                           __ptext20:	;psect for function _SetToSendDataToLCD
  7237  0986                     psect	text20
  7238                           	file	"LCD_hd44780u_qy_2004a.c"
  7239                           	line	176
  7240                           	global	__size_of_SetToSendDataToLCD
  7241                           	__size_of_SetToSendDataToLCD	equ	__end_of_SetToSendDataToLCD-_SetToSendDataToLCD
  7242  0006                     	
  7243                           _SetToSendDataToLCD:	
  7244  0986                     ;incstack = 0
  7245                           	opt	stack 6
  7246                           ; Regs used in _SetToSendDataToLCD: []
  7247                           	line	178
  7248                           	
  7249                           l2481:	
  7250  0986                     ;LCD_hd44780u_qy_2004a.c: 178:   TRISAbits.TRISA3 = 0;;
  7251                           	movlb 1	; select bank1
  7252  0986  0021               	bcf	(140)^080h,3	;volatile
  7253  0987  118C               	line	179
  7254                           ;LCD_hd44780u_qy_2004a.c: 179:   TRISCbits.TRISC2 = 0;;
  7255                           	bcf	(142)^080h,2	;volatile
  7256  0988  110E               	line	180
  7257                           ;LCD_hd44780u_qy_2004a.c: 180:   TRISCbits.TRISC1 = 0;;
  7258                           	bcf	(142)^080h,1	;volatile
  7259  0989  108E               	line	181
  7260                           ;LCD_hd44780u_qy_2004a.c: 181:   TRISCbits.TRISC0 = 0;;
  7261                           	bcf	(142)^080h,0	;volatile
  7262  098A  100E               	line	182
  7263                           	
  7264                           l319:	
  7265  098B                     	return
  7266  098B  0008               	opt stack 0
  7267                           GLOBAL	__end_of_SetToSendDataToLCD
  7268                           	__end_of_SetToSendDataToLCD:
  7269  098C                     	signat	_SetToSendDataToLCD,89
  7270                           	global	_I2CInit
  7271                           
  7272 ;; *************** function _I2CInit *****************
  7273 ;; Defined at:
  7274 ;;		line 7 in file "I2C.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;		None
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;		None
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  1    wreg      void 
  7281 ;; Registers used:
  7282 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7292 ;;Total ram usage:        0 bytes
  7293 ;; Hardware stack levels used:    1
  7294 ;; Hardware stack levels required when called:    7
  7295 ;; This function calls:
  7296 ;;		_memset
  7297 ;; This function is called by:
  7298 ;;		_main
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  7302                           	file	"I2C.c"
  7303                           	line	7
  7304                           global __ptext21
  7305                           __ptext21:	;psect for function _I2CInit
  7306  0A02                     psect	text21
  7307                           	file	"I2C.c"
  7308                           	line	7
  7309                           	global	__size_of_I2CInit
  7310                           	__size_of_I2CInit	equ	__end_of_I2CInit-_I2CInit
  7311  0016                     	
  7312                           _I2CInit:	
  7313  0A02                     ;incstack = 0
  7314                           	opt	stack 8
  7315                           ; Regs used in _I2CInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7316                           	line	9
  7317                           	
  7318                           l4131:	
  7319  0A02                     ;I2C.c: 9:   TRISCbits.TRISC3 = 1;
  7320                           	movlb 1	; select bank1
  7321  0A02  0021               	bsf	(142)^080h,3	;volatile
  7322  0A03  158E               	line	10
  7323                           ;I2C.c: 10:   TRISCbits.TRISC4 = 1;
  7324                           	bsf	(142)^080h,4	;volatile
  7325  0A04  160E               	line	11
  7326                           ;I2C.c: 11:   ANSELCbits.ANSC3 = 0;
  7327                           	movlb 3	; select bank3
  7328  0A05  0023               	bcf	(398)^0180h,3	;volatile
  7329  0A06  118E               	line	12
  7330                           ;I2C.c: 12:   ANSELCbits.ANSC4 = 0;
  7331                           	bcf	(398)^0180h,4	;volatile
  7332  0A07  120E               	line	14
  7333                           	
  7334                           l4133:	
  7335  0A08                     ;I2C.c: 14:   memset(wI2CTxBuffer,0,sizeof(wI2CTxBufferSize));
  7336                           	movlw	low(_wI2CTxBuffer)
  7337  0A08  3048               	movlb 0	; select bank0
  7338  0A09  0020               	movwf	(memset@dest)
  7339  0A0A  00AA               	movlw	high(_wI2CTxBuffer)
  7340  0A0B  3001               	movwf	(memset@dest+1)
  7341  0A0C  00AB               	movlw	0
  7342  0A0D  3000               	movwf	(memset@c)
  7343  0A0E  00AC               	movwf	(memset@c+1)
  7344  0A0F  00AD               	movlw	01h
  7345  0A10  3001               	movwf	(memset@n)
  7346  0A11  00AE               	movlw	0
  7347  0A12  3000               	movwf	((memset@n))+1
  7348  0A13  00AF               	fcall	_memset
  7349  0A14  3186  2607  318A   	line	16
  7350                           	
  7351                           l540:	
  7352  0A17                     	return
  7353  0A17  0008               	opt stack 0
  7354                           GLOBAL	__end_of_I2CInit
  7355                           	__end_of_I2CInit:
  7356  0A18                     	signat	_I2CInit,89
  7357                           	global	_memset
  7358                           
  7359 ;; *************** function _memset *****************
  7360 ;; Defined at:
  7361 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;  dest            2   10[BANK0 ] PTR void 
  7364 ;;		 -> wI2CTxBuffer(20), wInterruptText(75), 
  7365 ;;  c               2   12[BANK0 ] int 
  7366 ;;  n               2   14[BANK0 ] unsigned int 
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;  s               2   22[BANK0 ] PTR unsigned char 
  7369 ;;		 -> wI2CTxBuffer(20), wInterruptText(75), 
  7370 ;;  k               2   20[BANK0 ] unsigned int 
  7371 ;; Return value:  Size  Location     Type
  7372 ;;                  2   10[BANK0 ] PTR void 
  7373 ;; Registers used:
  7374 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7375 ;; Tracked objects:
  7376 ;;		On entry : 0/0
  7377 ;;		On exit  : 0/0
  7378 ;;		Unchanged: 0/0
  7379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7380 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  7381 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  7382 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  7383 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
  7384 ;;Total ram usage:       14 bytes
  7385 ;; Hardware stack levels used:    1
  7386 ;; Hardware stack levels required when called:    6
  7387 ;; This function calls:
  7388 ;;		Nothing
  7389 ;; This function is called by:
  7390 ;;		_PrintLog
  7391 ;;		_main
  7392 ;;		_I2CInit
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           psect	text22,local,class=CODE,delta=2,merge=1,group=2
  7396                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  7397                           	line	4
  7398                           global __ptext22
  7399                           __ptext22:	;psect for function _memset
  7400  0607                     psect	text22
  7401                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  7402                           	line	4
  7403                           	global	__size_of_memset
  7404                           	__size_of_memset	equ	__end_of_memset-_memset
  7405  00D1                     	
  7406                           _memset:	
  7407  0607                     ;incstack = 0
  7408                           	opt	stack 9
  7409                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7410                           	line	6
  7411                           	
  7412                           l3925:	
  7413  0607                     	movlb 0	; select bank0
  7414  0607  0020               	movf	(memset@dest+1),w
  7415  0608  082B               	movwf	(memset@s+1)
  7416  0609  00B7               	movf	(memset@dest),w
  7417  060A  082A               	movwf	(memset@s)
  7418  060B  00B6               	line	13
  7419                           	
  7420                           l3927:	
  7421  060C                     	movf	((memset@n)),w
  7422  060C  082E               iorwf	((memset@n+1)),w
  7423  060D  042F               	btfss	status,2
  7424  060E  1D03               	goto	u2601
  7425  060F  2E11               	goto	u2600
  7426  0610  2E12               u2601:
  7427  0611                     	goto	l3931
  7428  0611  2E14               u2600:
  7429  0612                     	goto	l1050
  7430  0612  2ED7               	
  7431                           l3929:	
  7432  0613                     ;	Return value of _memset is never used
  7433                           	goto	l1050
  7434  0613  2ED7               	
  7435                           l1049:	
  7436  0614                     	line	14
  7437                           	
  7438                           l3931:	
  7439  0614                     	movf	(memset@s),w
  7440  0614  0836               	movwf	fsr1l
  7441  0615  0086               	movf	(memset@s+1),w
  7442  0616  0837               	movwf	fsr1h
  7443  0617  0087               	movf	(memset@c),w
  7444  0618  082C               	movwf	indf1
  7445  0619  0081               	line	15
  7446                           	
  7447                           l3933:	
  7448  061A                     	movf	(memset@n),w
  7449  061A  082E               	addlw	0FFh
  7450  061B  3EFF               	movwf	(??_memset+0)+0
  7451  061C  00B0               	movlw	0FFh
  7452  061D  30FF               	addwfc	(memset@n+1),w
  7453  061E  3D2F               	movwf	1+(??_memset+0)+0
  7454  061F  00B1               	movf	0+(??_memset+0)+0,w
  7455  0620  0830               	addwf	(memset@s),w
  7456  0621  0736               	movwf	(??_memset+2)+0
  7457  0622  00B2               	movf	1+(??_memset+0)+0,w
  7458  0623  0831               	addwfc	(memset@s+1),w
  7459  0624  3D37               	movwf	1+(??_memset+2)+0
  7460  0625  00B3               	movf	0+(??_memset+2)+0,w
  7461  0626  0832               	movwf	fsr1l
  7462  0627  0086               	movf	1+(??_memset+2)+0,w
  7463  0628  0833               	movwf	fsr1h
  7464  0629  0087               	movf	(memset@c),w
  7465  062A  082C               	movwf	indf1
  7466  062B  0081               	line	16
  7467                           	
  7468                           l3935:	
  7469  062C                     	movlw	0
  7470  062C  3000               	subwf	(memset@n+1),w
  7471  062D  022F               	movlw	03h
  7472  062E  3003               	skipnz
  7473  062F  1903               	subwf	(memset@n),w
  7474  0630  022E               	skipnc
  7475  0631  1803               	goto	u2611
  7476  0632  2E34               	goto	u2610
  7477  0633  2E35               u2611:
  7478  0634                     	goto	l3939
  7479  0634  2E37               u2610:
  7480  0635                     	goto	l1050
  7481  0635  2ED7               	
  7482                           l3937:	
  7483  0636                     ;	Return value of _memset is never used
  7484                           	goto	l1050
  7485  0636  2ED7               	
  7486                           l1051:	
  7487  0637                     	line	17
  7488                           	
  7489                           l3939:	
  7490  0637                     	movf	(memset@s),w
  7491  0637  0836               	addlw	01h
  7492  0638  3E01               	movwf	(??_memset+0)+0
  7493  0639  00B0               	movlw	0
  7494  063A  3000               	addwfc	(memset@s+1),w
  7495  063B  3D37               	movwf	1+(??_memset+0)+0
  7496  063C  00B1               	movf	0+(??_memset+0)+0,w
  7497  063D  0830               	movwf	fsr1l
  7498  063E  0086               	movf	1+(??_memset+0)+0,w
  7499  063F  0831               	movwf	fsr1h
  7500  0640  0087               	movf	(memset@c),w
  7501  0641  082C               	movwf	indf1
  7502  0642  0081               	line	18
  7503                           	movf	(memset@s),w
  7504  0643  0836               	addlw	02h
  7505  0644  3E02               	movwf	(??_memset+0)+0
  7506  0645  00B0               	movlw	0
  7507  0646  3000               	addwfc	(memset@s+1),w
  7508  0647  3D37               	movwf	1+(??_memset+0)+0
  7509  0648  00B1               	movf	0+(??_memset+0)+0,w
  7510  0649  0830               	movwf	fsr1l
  7511  064A  0086               	movf	1+(??_memset+0)+0,w
  7512  064B  0831               	movwf	fsr1h
  7513  064C  0087               	movf	(memset@c),w
  7514  064D  082C               	movwf	indf1
  7515  064E  0081               	line	19
  7516                           	movf	(memset@n),w
  7517  064F  082E               	addlw	0FEh
  7518  0650  3EFE               	movwf	(??_memset+0)+0
  7519  0651  00B0               	movlw	0FFh
  7520  0652  30FF               	addwfc	(memset@n+1),w
  7521  0653  3D2F               	movwf	1+(??_memset+0)+0
  7522  0654  00B1               	movf	0+(??_memset+0)+0,w
  7523  0655  0830               	addwf	(memset@s),w
  7524  0656  0736               	movwf	(??_memset+2)+0
  7525  0657  00B2               	movf	1+(??_memset+0)+0,w
  7526  0658  0831               	addwfc	(memset@s+1),w
  7527  0659  3D37               	movwf	1+(??_memset+2)+0
  7528  065A  00B3               	movf	0+(??_memset+2)+0,w
  7529  065B  0832               	movwf	fsr1l
  7530  065C  0086               	movf	1+(??_memset+2)+0,w
  7531  065D  0833               	movwf	fsr1h
  7532  065E  0087               	movf	(memset@c),w
  7533  065F  082C               	movwf	indf1
  7534  0660  0081               	line	20
  7535                           	movf	(memset@n),w
  7536  0661  082E               	addlw	0FDh
  7537  0662  3EFD               	movwf	(??_memset+0)+0
  7538  0663  00B0               	movlw	0FFh
  7539  0664  30FF               	addwfc	(memset@n+1),w
  7540  0665  3D2F               	movwf	1+(??_memset+0)+0
  7541  0666  00B1               	movf	0+(??_memset+0)+0,w
  7542  0667  0830               	addwf	(memset@s),w
  7543  0668  0736               	movwf	(??_memset+2)+0
  7544  0669  00B2               	movf	1+(??_memset+0)+0,w
  7545  066A  0831               	addwfc	(memset@s+1),w
  7546  066B  3D37               	movwf	1+(??_memset+2)+0
  7547  066C  00B3               	movf	0+(??_memset+2)+0,w
  7548  066D  0832               	movwf	fsr1l
  7549  066E  0086               	movf	1+(??_memset+2)+0,w
  7550  066F  0833               	movwf	fsr1h
  7551  0670  0087               	movf	(memset@c),w
  7552  0671  082C               	movwf	indf1
  7553  0672  0081               	line	21
  7554                           	
  7555                           l3941:	
  7556  0673                     	movlw	0
  7557  0673  3000               	subwf	(memset@n+1),w
  7558  0674  022F               	movlw	07h
  7559  0675  3007               	skipnz
  7560  0676  1903               	subwf	(memset@n),w
  7561  0677  022E               	skipnc
  7562  0678  1803               	goto	u2621
  7563  0679  2E7B               	goto	u2620
  7564  067A  2E7C               u2621:
  7565  067B                     	goto	l3945
  7566  067B  2E7E               u2620:
  7567  067C                     	goto	l1050
  7568  067C  2ED7               	
  7569                           l3943:	
  7570  067D                     ;	Return value of _memset is never used
  7571                           	goto	l1050
  7572  067D  2ED7               	
  7573                           l1052:	
  7574  067E                     	line	22
  7575                           	
  7576                           l3945:	
  7577  067E                     	movf	(memset@s),w
  7578  067E  0836               	addlw	03h
  7579  067F  3E03               	movwf	(??_memset+0)+0
  7580  0680  00B0               	movlw	0
  7581  0681  3000               	addwfc	(memset@s+1),w
  7582  0682  3D37               	movwf	1+(??_memset+0)+0
  7583  0683  00B1               	movf	0+(??_memset+0)+0,w
  7584  0684  0830               	movwf	fsr1l
  7585  0685  0086               	movf	1+(??_memset+0)+0,w
  7586  0686  0831               	movwf	fsr1h
  7587  0687  0087               	movf	(memset@c),w
  7588  0688  082C               	movwf	indf1
  7589  0689  0081               	line	23
  7590                           	movf	(memset@n),w
  7591  068A  082E               	addlw	0FCh
  7592  068B  3EFC               	movwf	(??_memset+0)+0
  7593  068C  00B0               	movlw	0FFh
  7594  068D  30FF               	addwfc	(memset@n+1),w
  7595  068E  3D2F               	movwf	1+(??_memset+0)+0
  7596  068F  00B1               	movf	0+(??_memset+0)+0,w
  7597  0690  0830               	addwf	(memset@s),w
  7598  0691  0736               	movwf	(??_memset+2)+0
  7599  0692  00B2               	movf	1+(??_memset+0)+0,w
  7600  0693  0831               	addwfc	(memset@s+1),w
  7601  0694  3D37               	movwf	1+(??_memset+2)+0
  7602  0695  00B3               	movf	0+(??_memset+2)+0,w
  7603  0696  0832               	movwf	fsr1l
  7604  0697  0086               	movf	1+(??_memset+2)+0,w
  7605  0698  0833               	movwf	fsr1h
  7606  0699  0087               	movf	(memset@c),w
  7607  069A  082C               	movwf	indf1
  7608  069B  0081               	line	24
  7609                           	
  7610                           l3947:	
  7611  069C                     	movlw	0
  7612  069C  3000               	subwf	(memset@n+1),w
  7613  069D  022F               	movlw	09h
  7614  069E  3009               	skipnz
  7615  069F  1903               	subwf	(memset@n),w
  7616  06A0  022E               	skipnc
  7617  06A1  1803               	goto	u2631
  7618  06A2  2EA4               	goto	u2630
  7619  06A3  2EA5               u2631:
  7620  06A4                     	goto	l3951
  7621  06A4  2EA7               u2630:
  7622  06A5                     	goto	l1050
  7623  06A5  2ED7               	
  7624                           l3949:	
  7625  06A6                     ;	Return value of _memset is never used
  7626                           	goto	l1050
  7627  06A6  2ED7               	
  7628                           l1053:	
  7629  06A7                     	line	31
  7630                           	
  7631                           l3951:	
  7632  06A7                     	comf	(memset@s),w
  7633  06A7  0936               	movwf	(??_memset+0)+0
  7634  06A8  00B0               	comf	(memset@s+1),w
  7635  06A9  0937               	movwf	((??_memset+0)+0+1)
  7636  06AA  00B1               	incf	(??_memset+0)+0,f
  7637  06AB  0AB0               	skipnz
  7638  06AC  1903               	incf	((??_memset+0)+0+1),f
  7639  06AD  0AB1               	movlw	03h
  7640  06AE  3003               	andwf	0+(??_memset+0)+0,w
  7641  06AF  0530               	movwf	(memset@k)
  7642  06B0  00B4               	movlw	0
  7643  06B1  3000               	andwf	1+(??_memset+0)+0,w
  7644  06B2  0531               	movwf	1+(memset@k)
  7645  06B3  00B5               	line	32
  7646                           	
  7647                           l3953:	
  7648  06B4                     	movf	(memset@k),w
  7649  06B4  0834               	addwf	(memset@s),f
  7650  06B5  07B6               	movf	(memset@k+1),w
  7651  06B6  0835               	addwfc	(memset@s+1),f
  7652  06B7  3DB7               	line	33
  7653                           	
  7654                           l3955:	
  7655  06B8                     	movf	(memset@k),w
  7656  06B8  0834               	subwf	(memset@n),f
  7657  06B9  02AE               	movf	(memset@k+1),w
  7658  06BA  0835               	subwfb	(memset@n+1),f
  7659  06BB  3BAF               	line	34
  7660                           	
  7661                           l3957:	
  7662  06BC                     	movlw	0FCh
  7663  06BC  30FC               	andwf	(memset@n),f
  7664  06BD  05AE               	movlw	0FFh
  7665  06BE  30FF               	andwf	(memset@n+1),f
  7666  06BF  05AF               	line	86
  7667                           	goto	l3965
  7668  06C0  2ED0               	
  7669                           l1055:	
  7670  06C1                     	
  7671                           l3959:	
  7672  06C1                     	movf	(memset@s),w
  7673  06C1  0836               	movwf	fsr1l
  7674  06C2  0086               	movf	(memset@s+1),w
  7675  06C3  0837               	movwf	fsr1h
  7676  06C4  0087               	movf	(memset@c),w
  7677  06C5  082C               	movwf	indf1
  7678  06C6  0081               	
  7679                           l3961:	
  7680  06C7                     	movlw	01h
  7681  06C7  3001               	subwf	(memset@n),f
  7682  06C8  02AE               	movlw	0
  7683  06C9  3000               	subwfb	(memset@n+1),f
  7684  06CA  3BAF               	
  7685                           l3963:	
  7686  06CB                     	movlw	01h
  7687  06CB  3001               	addwf	(memset@s),f
  7688  06CC  07B6               	movlw	0
  7689  06CD  3000               	addwfc	(memset@s+1),f
  7690  06CE  3DB7               	goto	l3965
  7691  06CF  2ED0               	
  7692                           l1054:	
  7693  06D0                     	
  7694                           l3965:	
  7695  06D0                     	movf	((memset@n)),w
  7696  06D0  082E               iorwf	((memset@n+1)),w
  7697  06D1  042F               	btfss	status,2
  7698  06D2  1D03               	goto	u2641
  7699  06D3  2ED5               	goto	u2640
  7700  06D4  2ED6               u2641:
  7701  06D5                     	goto	l3959
  7702  06D5  2EC1               u2640:
  7703  06D6                     	goto	l1050
  7704  06D6  2ED7               	
  7705                           l1056:	
  7706  06D7                     	line	90
  7707                           ;	Return value of _memset is never used
  7708                           	
  7709                           l1050:	
  7710  06D7                     	return
  7711  06D7  0008               	opt stack 0
  7712                           GLOBAL	__end_of_memset
  7713                           	__end_of_memset:
  7714  06D8                     	signat	_memset,12409
  7715                           	global	_EM1812EntryPoint
  7716                           
  7717 ;; *************** function _EM1812EntryPoint *****************
  7718 ;; Defined at:
  7719 ;;		line 95 in file "EM1812.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;  oHumidity       1    wreg     PTR short 
  7722 ;;		 -> wHumidity(2), 
  7723 ;;  oTemperature    1   27[BANK0 ] PTR short 
  7724 ;;		 -> wTemperature(2), 
  7725 ;; Auto vars:     Size  Location     Type
  7726 ;;  oHumidity       1   12[BANK1 ] PTR short 
  7727 ;;		 -> wHumidity(2), 
  7728 ;;  ReceptionBuf    8    4[BANK1 ] unsigned char [8]
  7729 ;;  SetGetTempCo    4    0[BANK1 ] unsigned char [4]
  7730 ;; Return value:  Size  Location     Type
  7731 ;;                  2   27[BANK0 ] int 
  7732 ;; Registers used:
  7733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7734 ;; Tracked objects:
  7735 ;;		On entry : 0/0
  7736 ;;		On exit  : 0/0
  7737 ;;		Unchanged: 0/0
  7738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7739 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7740 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
       0       0
  7741 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7742 ;;      Totals:         0       7      13       0       0       0       0       0       0       0       0       0       
       0       0
  7743 ;;Total ram usage:       20 bytes
  7744 ;; Hardware stack levels used:    1
  7745 ;; Hardware stack levels required when called:    8
  7746 ;; This function calls:
  7747 ;;		_GetI2CStatus
  7748 ;;		_GetNewReceivedData
  7749 ;;		_I2C_GetData
  7750 ;;		_I2C_SendData
  7751 ;; This function is called by:
  7752 ;;		_main
  7753 ;; This function uses a non-reentrant model
  7754 ;;
  7755                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  7756                           	file	"EM1812.c"
  7757                           	line	95
  7758                           global __ptext23
  7759                           __ptext23:	;psect for function _EM1812EntryPoint
  7760  03A9                     psect	text23
  7761                           	file	"EM1812.c"
  7762                           	line	95
  7763                           	global	__size_of_EM1812EntryPoint
  7764                           	__size_of_EM1812EntryPoint	equ	__end_of_EM1812EntryPoint-_EM1812EntryPoint
  7765  0138                     	
  7766                           _EM1812EntryPoint:	
  7767  03A9                     ;incstack = 0
  7768                           	opt	stack 7
  7769                           ; Regs used in _EM1812EntryPoint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7770                           ;EM1812EntryPoint@oHumidity stored from wreg
  7771                           	movlb 1	; select bank1
  7772  03A9  0021               	movwf	(EM1812EntryPoint@oHumidity)^080h
  7773  03AA  00AC               	line	97
  7774                           	
  7775                           l4135:	
  7776  03AB                     ;EM1812.c: 95: int EM1812EntryPoint(int16_t* oHumidity, int16_t* oTemperature);EM1812.c:
                                  96: {;EM1812.c: 97:     uint8_t SetGetTempCommand[4] = {0xB8,0x03,0x00,0x04};
  7777                           	movlb 0	; select bank0
  7778  03AB  0020               	movf	(EM1812EntryPoint@F1953+3),w
  7779  03AC  0861               	movlb 1	; select bank1
  7780  03AD  0021               	movwf	(EM1812EntryPoint@SetGetTempCommand+3)^080h
  7781  03AE  00A3               	movlb 0	; select bank0
  7782  03AF  0020               	movf	(EM1812EntryPoint@F1953+2),w
  7783  03B0  0860               	movlb 1	; select bank1
  7784  03B1  0021               	movwf	(EM1812EntryPoint@SetGetTempCommand+2)^080h
  7785  03B2  00A2               	movlb 0	; select bank0
  7786  03B3  0020               	movf	(EM1812EntryPoint@F1953+1),w
  7787  03B4  085F               	movlb 1	; select bank1
  7788  03B5  0021               	movwf	(EM1812EntryPoint@SetGetTempCommand+1)^080h
  7789  03B6  00A1               	movlb 0	; select bank0
  7790  03B7  0020               	movf	(EM1812EntryPoint@F1953),w
  7791  03B8  085E               	movlb 1	; select bank1
  7792  03B9  0021               	movwf	(EM1812EntryPoint@SetGetTempCommand)^080h
  7793  03BA  00A0               
  7794                           	line	98
  7795                           	
  7796                           l4137:	
  7797  03BB                     ;EM1812.c: 98:     uint8_t ReceptionBuffer[8] = {0,0,0,0};
  7798                           	movlw	low(EM1812EntryPoint@F1955)
  7799  03BB  30DB               	movwf	fsr1l
  7800  03BC  0086               	movlw	high(EM1812EntryPoint@F1955)
  7801  03BD  3000               	movwf	fsr1h
  7802  03BE  0087               	movlw	low(EM1812EntryPoint@ReceptionBuffer)
  7803  03BF  30A4               	movwf	fsr0l
  7804  03C0  0084               	movlw	high(EM1812EntryPoint@ReceptionBuffer)
  7805  03C1  3000               	movwf	fsr0h
  7806  03C2  0085               	movlw	8
  7807  03C3  3008               	movlb 0	; select bank0
  7808  03C4  0020               	movwf	(??_EM1812EntryPoint+0)+0
  7809  03C5  00BD               u2800:
  7810  03C6                     	moviw	fsr1++
  7811  03C6  0016               	movwi	fsr0++
  7812  03C7  001A               	decfsz	(??_EM1812EntryPoint+0)+0,f
  7813  03C8  0BBD               	goto	u2800
  7814  03C9  2BC6               	line	101
  7815                           ;EM1812.c: 99:     static uint8_t wTry =0;;EM1812.c: 101:     switch( wTempState )
  7816                           	goto	l4213
  7817  03CA  2CCB               	line	103
  7818                           ;EM1812.c: 102:     {;EM1812.c: 103:         case eSetGetTemp:
  7819                           	
  7820                           l459:	
  7821  03CB                     	line	104
  7822                           	
  7823                           l4139:	
  7824  03CB                     ;EM1812.c: 104:             if(I2C_SendData(SetGetTempCommand,4))
  7825                           	movlw	low(04h)
  7826  03CB  3004               	movwf	(??_EM1812EntryPoint+0)+0
  7827  03CC  00BD               	movf	(??_EM1812EntryPoint+0)+0,w
  7828  03CD  083D               	movwf	(I2C_SendData@iNumberofByte)
  7829  03CE  00B6               	movlw	(low(EM1812EntryPoint@SetGetTempCommand|((0x0)<<8)))&0ffh
  7830  03CF  30A0               	fcall	_I2C_SendData
  7831  03D0  318D  2510  3183   	movlb 0	; select bank0
  7832  03D3  0020               	movf	((0+(?_I2C_SendData))),w
  7833  03D4  0836               iorwf	((1+(?_I2C_SendData))),w
  7834  03D5  0437               	btfsc	status,2
  7835  03D6  1903               	goto	u2811
  7836  03D7  2BD9               	goto	u2810
  7837  03D8  2BDA               u2811:
  7838  03D9                     	goto	l4215
  7839  03D9  2CDD               u2810:
  7840  03DA                     	line	106
  7841                           	
  7842                           l4141:	
  7843  03DA                     ;EM1812.c: 105:             {;EM1812.c: 106:                 wTempState = eWaitSetGetTem
                                 pProcessing;
  7844                           	clrf	(_wTempState)
  7845  03DA  01DA               	incf	(_wTempState),f
  7846  03DB  0ADA               	line	107
  7847                           ;EM1812.c: 107:                 INTCONbits.TMR0IE = 0;
  7848                           	bcf	(11),5	;volatile
  7849  03DC  128B               	line	108
  7850                           	
  7851                           l4143:	
  7852  03DD                     ;EM1812.c: 108:                 TMR0 = 0;
  7853                           	clrf	(21)	;volatile
  7854  03DD  0195               	line	109
  7855                           ;EM1812.c: 109:                 wTimer0Counter=0;
  7856                           	clrf	(_wTimer0Counter)
  7857  03DE  01D9               	line	110
  7858                           	
  7859                           l4145:	
  7860  03DF                     ;EM1812.c: 110:                 INTCONbits.TMR0IE = 1;
  7861                           	bsf	(11),5	;volatile
  7862  03DF  168B               	goto	l4215
  7863  03E0  2CDD               	line	111
  7864                           ;EM1812.c: 111:             }
  7865                           	
  7866                           l460:	
  7867  03E1                     	line	112
  7868                           ;EM1812.c: 112:             break;
  7869                           	goto	l4215
  7870  03E1  2CDD               	line	113
  7871                           ;EM1812.c: 113:         case eWaitSetGetTempProcessing:
  7872                           	
  7873                           l462:	
  7874  03E2                     	line	114
  7875                           	
  7876                           l4147:	
  7877  03E2                     ;EM1812.c: 114:             if(wTimer0Counter == 2)
  7878                           		movlw	2
  7879  03E2  3002               	xorwf	((_wTimer0Counter)),w
  7880  03E3  0659               	btfss	status,2
  7881  03E4  1D03               	goto	u2821
  7882  03E5  2BE7               	goto	u2820
  7883  03E6  2BE8               u2821:
  7884  03E7                     	goto	l4215
  7885  03E7  2CDD               u2820:
  7886  03E8                     	line	116
  7887                           	
  7888                           l4149:	
  7889  03E8                     ;EM1812.c: 115:             {;EM1812.c: 116:                 wTempState = eGetTemp;
  7890                           	movlw	low(02h)
  7891  03E8  3002               	movwf	(??_EM1812EntryPoint+0)+0
  7892  03E9  00BD               	movf	(??_EM1812EntryPoint+0)+0,w
  7893  03EA  083D               	movwf	(_wTempState)
  7894  03EB  00DA               	line	117
  7895                           	
  7896                           l4151:	
  7897  03EC                     ;EM1812.c: 117:                 INTCONbits.TMR0IE = 0;
  7898                           	bcf	(11),5	;volatile
  7899  03EC  128B               	goto	l4215
  7900  03ED  2CDD               	line	118
  7901                           ;EM1812.c: 118:             }
  7902                           	
  7903                           l463:	
  7904  03EE                     	line	119
  7905                           ;EM1812.c: 119:             break;
  7906                           	goto	l4215
  7907  03EE  2CDD               	line	120
  7908                           ;EM1812.c: 120:         case eGetTemp:
  7909                           	
  7910                           l464:	
  7911  03EF                     	line	121
  7912                           	
  7913                           l4153:	
  7914  03EF                     ;EM1812.c: 121:             if(GetI2CStatus() == CommandFailed)
  7915                           	fcall	_GetI2CStatus
  7916  03EF  3189  21A7  3183   		movlw	5
  7917  03F2  3005               	movlb 0	; select bank0
  7918  03F3  0020               	xorwf	((0+(?_GetI2CStatus))),w
  7919  03F4  062A               iorwf	((1+(?_GetI2CStatus))),w
  7920  03F5  042B               	btfss	status,2
  7921  03F6  1D03               	goto	u2831
  7922  03F7  2BF9               	goto	u2830
  7923  03F8  2BFA               u2831:
  7924  03F9                     	goto	l4163
  7925  03F9  2C0B               u2830:
  7926  03FA                     	line	123
  7927                           	
  7928                           l4155:	
  7929  03FA                     ;EM1812.c: 122:             {;EM1812.c: 123:                 wTempState = eSetGetTemp;
  7930                           	clrf	(_wTempState)
  7931  03FA  01DA               	line	124
  7932                           	
  7933                           l4157:	
  7934  03FB                     ;EM1812.c: 124:                 wTry++;
  7935                           	movlw	low(01h)
  7936  03FB  3001               	movwf	(??_EM1812EntryPoint+0)+0
  7937  03FC  00BD               	movf	(??_EM1812EntryPoint+0)+0,w
  7938  03FD  083D               	addwf	(EM1812EntryPoint@wTry),f
  7939  03FE  07CB               	line	125
  7940                           	
  7941                           l4159:	
  7942  03FF                     ;EM1812.c: 125:                 if(wTry == 6)
  7943                           		movlw	6
  7944  03FF  3006               	xorwf	((EM1812EntryPoint@wTry)),w
  7945  0400  064B               	btfss	status,2
  7946  0401  1D03               	goto	u2841
  7947  0402  2C04               	goto	u2840
  7948  0403  2C05               u2841:
  7949  0404                     	goto	l4215
  7950  0404  2CDD               u2840:
  7951  0405                     	line	127
  7952                           	
  7953                           l4161:	
  7954  0405                     ;EM1812.c: 126:                 {;EM1812.c: 127:                    wTempState = eError;
                                 
  7955                           	movlw	low(06h)
  7956  0405  3006               	movwf	(??_EM1812EntryPoint+0)+0
  7957  0406  00BD               	movf	(??_EM1812EntryPoint+0)+0,w
  7958  0407  083D               	movwf	(_wTempState)
  7959  0408  00DA               	goto	l4215
  7960  0409  2CDD               	line	128
  7961                           ;EM1812.c: 128:                 }
  7962                           	
  7963                           l466:	
  7964  040A                     	line	129
  7965                           ;EM1812.c: 129:             }
  7966                           	goto	l4215
  7967  040A  2CDD               	line	130
  7968                           ;EM1812.c: 130:             else if (GetI2CStatus() == CommandCompleted)
  7969                           	
  7970                           l465:	
  7971  040B                     	
  7972                           l4163:	
  7973  040B                     	fcall	_GetI2CStatus
  7974  040B  3189  21A7  3183   		movlw	3
  7975  040E  3003               	movlb 0	; select bank0
  7976  040F  0020               	xorwf	((0+(?_GetI2CStatus))),w
  7977  0410  062A               iorwf	((1+(?_GetI2CStatus))),w
  7978  0411  042B               	btfss	status,2
  7979  0412  1D03               	goto	u2851
  7980  0413  2C15               	goto	u2850
  7981  0414  2C16               u2851:
  7982  0415                     	goto	l4215
  7983  0415  2CDD               u2850:
  7984  0416                     	line	132
  7985                           	
  7986                           l4165:	
  7987  0416                     ;EM1812.c: 131:             {;EM1812.c: 132:                 if(I2C_GetData(0xB9,8))
  7988                           	movlw	low(08h)
  7989  0416  3008               	movwf	(??_EM1812EntryPoint+0)+0
  7990  0417  00BD               	movf	(??_EM1812EntryPoint+0)+0,w
  7991  0418  083D               	movwf	(I2C_GetData@iRxNumberOfByteExpected)
  7992  0419  00AA               	movlw	low(0B9h)
  7993  041A  30B9               	fcall	_I2C_GetData
  7994  041B  318B  23E3  3183   	movlb 0	; select bank0
  7995  041E  0020               	movf	((0+(?_I2C_GetData))),w
  7996  041F  082A               iorwf	((1+(?_I2C_GetData))),w
  7997  0420  042B               	btfsc	status,2
  7998  0421  1903               	goto	u2861
  7999  0422  2C24               	goto	u2860
  8000  0423  2C25               u2861:
  8001  0424                     	goto	l4215
  8002  0424  2CDD               u2860:
  8003  0425                     	line	134
  8004                           	
  8005                           l4167:	
  8006  0425                     ;EM1812.c: 133:                 {;EM1812.c: 134:                     wTempState = eWaitG
                                 etTempProcessing;
  8007                           	movlw	low(03h)
  8008  0425  3003               	movwf	(??_EM1812EntryPoint+0)+0
  8009  0426  00BD               	movf	(??_EM1812EntryPoint+0)+0,w
  8010  0427  083D               	movwf	(_wTempState)
  8011  0428  00DA               	line	135
  8012                           	
  8013                           l4169:	
  8014  0429                     ;EM1812.c: 135:                     INTCONbits.TMR0IE = 0;
  8015                           	bcf	(11),5	;volatile
  8016  0429  128B               	line	136
  8017                           	
  8018                           l4171:	
  8019  042A                     ;EM1812.c: 136:                     TMR0 = 0;
  8020                           	clrf	(21)	;volatile
  8021  042A  0195               	line	137
  8022                           	
  8023                           l4173:	
  8024  042B                     ;EM1812.c: 137:                     wTimer0Counter=0;
  8025                           	clrf	(_wTimer0Counter)
  8026  042B  01D9               	line	138
  8027                           	
  8028                           l4175:	
  8029  042C                     ;EM1812.c: 138:                     INTCONbits.TMR0IE = 1;
  8030                           	bsf	(11),5	;volatile
  8031  042C  168B               	goto	l4215
  8032  042D  2CDD               	line	139
  8033                           ;EM1812.c: 139:                 }
  8034                           	
  8035                           l469:	
  8036  042E                     	goto	l4215
  8037  042E  2CDD               	line	140
  8038                           ;EM1812.c: 140:             }
  8039                           	
  8040                           l468:	
  8041  042F                     	goto	l4215
  8042  042F  2CDD               	
  8043                           l467:	
  8044  0430                     	line	141
  8045                           ;EM1812.c: 141:             break;
  8046                           	goto	l4215
  8047  0430  2CDD               	line	142
  8048                           ;EM1812.c: 142:         case eWaitGetTempProcessing:
  8049                           	
  8050                           l470:	
  8051  0431                     	line	143
  8052                           	
  8053                           l4177:	
  8054  0431                     ;EM1812.c: 143:             if(wTimer0Counter == 2)
  8055                           		movlw	2
  8056  0431  3002               	xorwf	((_wTimer0Counter)),w
  8057  0432  0659               	btfss	status,2
  8058  0433  1D03               	goto	u2871
  8059  0434  2C36               	goto	u2870
  8060  0435  2C37               u2871:
  8061  0436                     	goto	l4215
  8062  0436  2CDD               u2870:
  8063  0437                     	line	145
  8064                           	
  8065                           l4179:	
  8066  0437                     ;EM1812.c: 144:             {;EM1812.c: 145:                 wTempState = eValueReceptio
                                 n;
  8067                           	movlw	low(04h)
  8068  0437  3004               	movwf	(??_EM1812EntryPoint+0)+0
  8069  0438  00BD               	movf	(??_EM1812EntryPoint+0)+0,w
  8070  0439  083D               	movwf	(_wTempState)
  8071  043A  00DA               	line	146
  8072                           	
  8073                           l4181:	
  8074  043B                     ;EM1812.c: 146:                 INTCONbits.TMR0IE = 0;
  8075                           	bcf	(11),5	;volatile
  8076  043B  128B               	goto	l4215
  8077  043C  2CDD               	line	147
  8078                           ;EM1812.c: 147:             }
  8079                           	
  8080                           l471:	
  8081  043D                     	line	148
  8082                           ;EM1812.c: 148:             break;
  8083                           	goto	l4215
  8084  043D  2CDD               	line	149
  8085                           ;EM1812.c: 149:         case eValueReception:
  8086                           	
  8087                           l472:	
  8088  043E                     	line	150
  8089                           	
  8090                           l4183:	
  8091  043E                     ;EM1812.c: 150:             if(GetI2CStatus() == CommandFailed)
  8092                           	fcall	_GetI2CStatus
  8093  043E  3189  21A7  3183   		movlw	5
  8094  0441  3005               	movlb 0	; select bank0
  8095  0442  0020               	xorwf	((0+(?_GetI2CStatus))),w
  8096  0443  062A               iorwf	((1+(?_GetI2CStatus))),w
  8097  0444  042B               	btfss	status,2
  8098  0445  1D03               	goto	u2881
  8099  0446  2C48               	goto	u2880
  8100  0447  2C49               u2881:
  8101  0448                     	goto	l4187
  8102  0448  2C4B               u2880:
  8103  0449                     	line	152
  8104                           	
  8105                           l4185:	
  8106  0449                     ;EM1812.c: 151:             {;EM1812.c: 152:                 wTempState=eSetGetTemp;
  8107                           	clrf	(_wTempState)
  8108  0449  01DA               	line	153
  8109                           ;EM1812.c: 153:             }
  8110                           	goto	l4215
  8111  044A  2CDD               	line	154
  8112                           ;EM1812.c: 154:             else if(GetI2CStatus() == CommandCompleted)
  8113                           	
  8114                           l473:	
  8115  044B                     	
  8116                           l4187:	
  8117  044B                     	fcall	_GetI2CStatus
  8118  044B  3189  21A7  3183   		movlw	3
  8119  044E  3003               	movlb 0	; select bank0
  8120  044F  0020               	xorwf	((0+(?_GetI2CStatus))),w
  8121  0450  062A               iorwf	((1+(?_GetI2CStatus))),w
  8122  0451  042B               	btfss	status,2
  8123  0452  1D03               	goto	u2891
  8124  0453  2C55               	goto	u2890
  8125  0454  2C56               u2891:
  8126  0455                     	goto	l4215
  8127  0455  2CDD               u2890:
  8128  0456                     	line	156
  8129                           	
  8130                           l4189:	
  8131  0456                     ;EM1812.c: 155:             {;EM1812.c: 156:                 GetNewReceivedData(Receptio
                                 nBuffer,8);
  8132                           	movlw	low(08h)
  8133  0456  3008               	movwf	(??_EM1812EntryPoint+0)+0
  8134  0457  00BD               	movf	(??_EM1812EntryPoint+0)+0,w
  8135  0458  083D               	movwf	(GetNewReceivedData@oDataSize)
  8136  0459  00B6               	movlw	(low(EM1812EntryPoint@ReceptionBuffer|((0x0)<<8)))&0ffh
  8137  045A  30A4               	fcall	_GetNewReceivedData
  8138  045B  318A  2249  3183   	line	157
  8139                           	
  8140                           l4191:	
  8141  045E                     ;EM1812.c: 157:                 if(ReceptionBuffer[2] & 0x80 )
  8142                           	movlb 1	; select bank1
  8143  045E  0021               	btfss	0+(EM1812EntryPoint@ReceptionBuffer)^080h+02h,(7)&7
  8144  045F  1FA6               	goto	u2901
  8145  0460  2C62               	goto	u2900
  8146  0461  2C63               u2901:
  8147  0462                     	goto	l4195
  8148  0462  2C83               u2900:
  8149  0463                     	line	159
  8150                           	
  8151                           l4193:	
  8152  0463                     ;EM1812.c: 158:                 {;EM1812.c: 159:                   *oHumidity = -((Recep
                                 tionBuffer[2] & 0x7F)*256) + ReceptionBuffer[3];
  8153                           	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+02h,w
  8154  0463  0826               	andlw	07Fh
  8155  0464  397F               	movlb 0	; select bank0
  8156  0465  0020               	movwf	(??_EM1812EntryPoint+0)+0
  8157  0466  00BD               	clrf	(??_EM1812EntryPoint+0)+0+1
  8158  0467  01BE               	movf	(??_EM1812EntryPoint+0)+0,w
  8159  0468  083D               	movwf	(??_EM1812EntryPoint+0)+1
  8160  0469  00BE               	clrf	(??_EM1812EntryPoint+0)+0
  8161  046A  01BD               	comf	(??_EM1812EntryPoint+0)+0,f
  8162  046B  09BD               	comf	(??_EM1812EntryPoint+0)+1,f
  8163  046C  09BE               	incf	(??_EM1812EntryPoint+0)+0,f
  8164  046D  0ABD               	skipnz
  8165  046E  1903               	incf	(??_EM1812EntryPoint+0)+1,f
  8166  046F  0ABE               	movlb 1	; select bank1
  8167  0470  0021               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+03h,w
  8168  0471  0827               	movlb 0	; select bank0
  8169  0472  0020               	addwf	0+(??_EM1812EntryPoint+0)+0,w
  8170  0473  073D               	movwf	(??_EM1812EntryPoint+3)+0
  8171  0474  00C0               	movf	1+(??_EM1812EntryPoint+0)+0,w
  8172  0475  083E               	skipnc
  8173  0476  1803               	incf	1+(??_EM1812EntryPoint+0)+0,w
  8174  0477  0A3E               	movwf	((??_EM1812EntryPoint+3)+0)+1
  8175  0478  00C1               	movlb 1	; select bank1
  8176  0479  0021               	movf	(EM1812EntryPoint@oHumidity)^080h,w
  8177  047A  082C               	movwf	fsr1l
  8178  047B  0086               	clrf fsr1h	
  8179  047C  0187               	
  8180                           	movlb 0	; select bank0
  8181  047D  0020               	movf	0+(??_EM1812EntryPoint+3)+0,w
  8182  047E  0840               	movwi	[0]fsr1
  8183  047F  3FC0               	movf	1+(??_EM1812EntryPoint+3)+0,w
  8184  0480  0841               	movwi	[1]fsr1
  8185  0481  3FC1               	line	160
  8186                           ;EM1812.c: 160:                 }
  8187                           	goto	l4197
  8188  0482  2C8C               	line	161
  8189                           ;EM1812.c: 161:                 else
  8190                           	
  8191                           l476:	
  8192  0483                     	line	163
  8193                           	
  8194                           l4195:	
  8195  0483                     ;EM1812.c: 162:                 {;EM1812.c: 163:                   *oHumidity = (Recepti
                                 onBuffer[2]*256) + ReceptionBuffer[3];
  8196                           	movlb 1	; select bank1
  8197  0483  0021               	movf	(EM1812EntryPoint@oHumidity)^080h,w
  8198  0484  082C               	movwf	fsr1l
  8199  0485  0086               	clrf fsr1h	
  8200  0486  0187               	
  8201                           	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+03h,w
  8202  0487  0827               	movwi	[0]fsr1
  8203  0488  3FC0               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+02h,w
  8204  0489  0826               	movwi	[1]fsr1
  8205  048A  3FC1               	goto	l4197
  8206  048B  2C8C               	line	164
  8207                           ;EM1812.c: 164:                 }
  8208                           	
  8209                           l477:	
  8210  048C                     	line	165
  8211                           	
  8212                           l4197:	
  8213  048C                     ;EM1812.c: 165:                 if(ReceptionBuffer[4] & 0x80 )
  8214                           	movlb 1	; select bank1
  8215  048C  0021               	btfss	0+(EM1812EntryPoint@ReceptionBuffer)^080h+04h,(7)&7
  8216  048D  1FA8               	goto	u2911
  8217  048E  2C90               	goto	u2910
  8218  048F  2C91               u2911:
  8219  0490                     	goto	l4201
  8220  0490  2CAF               u2910:
  8221  0491                     	line	167
  8222                           	
  8223                           l4199:	
  8224  0491                     ;EM1812.c: 166:                 {;EM1812.c: 167:                   *oTemperature = -((Re
                                 ceptionBuffer[4] & 0x7F)*256) + ReceptionBuffer[5];
  8225                           	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+04h,w
  8226  0491  0828               	andlw	07Fh
  8227  0492  397F               	movlb 0	; select bank0
  8228  0493  0020               	movwf	(??_EM1812EntryPoint+0)+0
  8229  0494  00BD               	clrf	(??_EM1812EntryPoint+0)+0+1
  8230  0495  01BE               	movf	(??_EM1812EntryPoint+0)+0,w
  8231  0496  083D               	movwf	(??_EM1812EntryPoint+0)+1
  8232  0497  00BE               	clrf	(??_EM1812EntryPoint+0)+0
  8233  0498  01BD               	comf	(??_EM1812EntryPoint+0)+0,f
  8234  0499  09BD               	comf	(??_EM1812EntryPoint+0)+1,f
  8235  049A  09BE               	incf	(??_EM1812EntryPoint+0)+0,f
  8236  049B  0ABD               	skipnz
  8237  049C  1903               	incf	(??_EM1812EntryPoint+0)+1,f
  8238  049D  0ABE               	movlb 1	; select bank1
  8239  049E  0021               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+05h,w
  8240  049F  0829               	movlb 0	; select bank0
  8241  04A0  0020               	addwf	0+(??_EM1812EntryPoint+0)+0,w
  8242  04A1  073D               	movwf	(??_EM1812EntryPoint+3)+0
  8243  04A2  00C0               	movf	1+(??_EM1812EntryPoint+0)+0,w
  8244  04A3  083E               	skipnc
  8245  04A4  1803               	incf	1+(??_EM1812EntryPoint+0)+0,w
  8246  04A5  0A3E               	movwf	((??_EM1812EntryPoint+3)+0)+1
  8247  04A6  00C1               	movf	(EM1812EntryPoint@oTemperature),w
  8248  04A7  083B               	movwf	fsr1l
  8249  04A8  0086               	clrf fsr1h	
  8250  04A9  0187               	
  8251                           	movf	0+(??_EM1812EntryPoint+3)+0,w
  8252  04AA  0840               	movwi	[0]fsr1
  8253  04AB  3FC0               	movf	1+(??_EM1812EntryPoint+3)+0,w
  8254  04AC  0841               	movwi	[1]fsr1
  8255  04AD  3FC1               	line	168
  8256                           ;EM1812.c: 168:                 }
  8257                           	goto	l4203
  8258  04AE  2CB9               	line	169
  8259                           ;EM1812.c: 169:                 else
  8260                           	
  8261                           l478:	
  8262  04AF                     	line	171
  8263                           	
  8264                           l4201:	
  8265  04AF                     ;EM1812.c: 170:                 {;EM1812.c: 171:                   *oTemperature = (Rece
                                 ptionBuffer[4] *256) + ReceptionBuffer[5];
  8266                           	movlb 0	; select bank0
  8267  04AF  0020               	movf	(EM1812EntryPoint@oTemperature),w
  8268  04B0  083B               	movwf	fsr1l
  8269  04B1  0086               	clrf fsr1h	
  8270  04B2  0187               	
  8271                           	movlb 1	; select bank1
  8272  04B3  0021               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+05h,w
  8273  04B4  0829               	movwi	[0]fsr1
  8274  04B5  3FC0               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+04h,w
  8275  04B6  0828               	movwi	[1]fsr1
  8276  04B7  3FC1               	goto	l4203
  8277  04B8  2CB9               	line	172
  8278                           ;EM1812.c: 172:                 }
  8279                           	
  8280                           l479:	
  8281  04B9                     	line	173
  8282                           	
  8283                           l4203:	
  8284  04B9                     ;EM1812.c: 173:                 wTempState = eIdle;
  8285                           	movlw	low(05h)
  8286  04B9  3005               	movlb 0	; select bank0
  8287  04BA  0020               	movwf	(??_EM1812EntryPoint+0)+0
  8288  04BB  00BD               	movf	(??_EM1812EntryPoint+0)+0,w
  8289  04BC  083D               	movwf	(_wTempState)
  8290  04BD  00DA               	line	174
  8291                           	
  8292                           l4205:	
  8293  04BE                     ;EM1812.c: 174:                 return 1;
  8294                           	movlw	01h
  8295  04BE  3001               	movwf	(?_EM1812EntryPoint)
  8296  04BF  00BB               	movlw	0
  8297  04C0  3000               	movwf	((?_EM1812EntryPoint))+1
  8298  04C1  00BC               	goto	l480
  8299  04C2  2CE0               	
  8300                           l4207:	
  8301  04C3                     	goto	l480
  8302  04C3  2CE0               	line	175
  8303                           ;EM1812.c: 175:             }
  8304                           	
  8305                           l475:	
  8306  04C4                     	goto	l4215
  8307  04C4  2CDD               	
  8308                           l474:	
  8309  04C5                     	line	176
  8310                           ;EM1812.c: 176:             break;
  8311                           	goto	l4215
  8312  04C5  2CDD               	line	177
  8313                           ;EM1812.c: 177:         case eIdle:
  8314                           	
  8315                           l481:	
  8316  04C6                     	line	178
  8317                           	
  8318                           l4209:	
  8319  04C6                     ;EM1812.c: 178:             wTry=0;
  8320                           	clrf	(EM1812EntryPoint@wTry)
  8321  04C6  01CB               	line	179
  8322                           ;EM1812.c: 179:             break;
  8323                           	goto	l4215
  8324  04C7  2CDD               	line	180
  8325                           ;EM1812.c: 180:         case eError:
  8326                           	
  8327                           l482:	
  8328  04C8                     	goto	l4215
  8329  04C8  2CDD               	line	181
  8330                           ;EM1812.c: 181:         default:
  8331                           	
  8332                           l483:	
  8333  04C9                     	line	182
  8334                           ;EM1812.c: 182:             break;
  8335                           	goto	l4215
  8336  04C9  2CDD               	line	183
  8337                           	
  8338                           l4211:	
  8339  04CA                     ;EM1812.c: 183:     }
  8340                           	goto	l4215
  8341  04CA  2CDD               	
  8342                           l458:	
  8343  04CB                     	
  8344                           l4213:	
  8345  04CB                     	movf	(_wTempState),w
  8346  04CB  085A               	movwf	(??_EM1812EntryPoint+0)+0
  8347  04CC  00BD               	clrf	(??_EM1812EntryPoint+0)+0+1
  8348  04CD  01BE               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  8349                           ; Switch size 1, requested type "space"
  8350                           ; Number of cases is 1, Range of values is 0 to 0
  8351                           ; switch strategies available:
  8352                           ; Name         Instructions Cycles
  8353                           ; simple_byte            4     3 (average)
  8354                           ; direct_byte            8     6 (fixed)
  8355                           ; jumptable            260     6 (fixed)
  8356                           ;	Chosen strategy is simple_byte
  8357                           
  8358                           	movf 1+(??_EM1812EntryPoint+0)+0,w
  8359  04CE  083E               	opt asmopt_push
  8360                           	opt asmopt_off
  8361                           	xorlw	0^0	; case 0
  8362  04CF  3A00               	skipnz
  8363  04D0  1903               	goto	l4743
  8364  04D1  2CD3               	goto	l4215
  8365  04D2  2CDD               	opt asmopt_pop
  8366                           	
  8367                           l4743:	
  8368  04D3                     ; Switch size 1, requested type "space"
  8369                           ; Number of cases is 7, Range of values is 0 to 6
  8370                           ; switch strategies available:
  8371                           ; Name         Instructions Cycles
  8372                           ; direct_byte           20     6 (fixed)
  8373                           ; simple_byte           22    12 (average)
  8374                           ; jumptable            260     6 (fixed)
  8375                           ;	Chosen strategy is direct_byte
  8376                           
  8377                           	movf 0+(??_EM1812EntryPoint+0)+0,w
  8378  04D3  083D               	movwf fsr0l
  8379  04D4  0084               	movlw	7
  8380  04D5  3007               	subwf	fsr0l,w
  8381  04D6  0204               skipnc
  8382  04D7  1803               goto l4215
  8383  04D8  2CDD               movlp high(S4745)
  8384  04D9  3187               	lslf fsr0l,w
  8385  04DA  3504               	addlw low(S4745)
  8386  04DB  3EF2               	movwf pc
  8387  04DC  0082               psect	swtext1,local,class=CONST,delta=2
  8388                           global __pswtext1
  8389                           __pswtext1:
  8390  07F2                     S4745:
  8391  07F2                     	ljmp	l4139
  8392  07F2  3183  2BCB         	ljmp	l4147
  8393  07F4  3183  2BE2         	ljmp	l4153
  8394  07F6  3183  2BEF         	ljmp	l4177
  8395  07F8  3184  2C31         	ljmp	l4183
  8396  07FA  3184  2C3E         	ljmp	l4209
  8397  07FC  3184  2CC6         	ljmp	l4215
  8398  07FE  3184  2CDD         psect	text23
  8399                           
  8400                           	
  8401                           l461:	
  8402  04DD                     	line	184
  8403                           	
  8404                           l4215:	
  8405  04DD                     ;EM1812.c: 184:     return 0;
  8406                           	clrf	(?_EM1812EntryPoint)
  8407  04DD  01BB               	clrf	(?_EM1812EntryPoint+1)
  8408  04DE  01BC               	goto	l480
  8409  04DF  2CE0               	
  8410                           l4217:	
  8411  04E0                     	line	185
  8412                           	
  8413                           l480:	
  8414  04E0                     	return
  8415  04E0  0008               	opt stack 0
  8416                           GLOBAL	__end_of_EM1812EntryPoint
  8417                           	__end_of_EM1812EntryPoint:
  8418  04E1                     	signat	_EM1812EntryPoint,8314
  8419                           	global	_I2C_SendData
  8420                           
  8421 ;; *************** function _I2C_SendData *****************
  8422 ;; Defined at:
  8423 ;;		line 23 in file "I2C.c"
  8424 ;; Parameters:    Size  Location     Type
  8425 ;;  iData           1    wreg     PTR unsigned char 
  8426 ;;		 -> EM1812EntryPoint@SetGetTempCommand(4), 
  8427 ;;  iNumberofByt    1   22[BANK0 ] unsigned char 
  8428 ;; Auto vars:     Size  Location     Type
  8429 ;;  iData           1   26[BANK0 ] PTR unsigned char 
  8430 ;;		 -> EM1812EntryPoint@SetGetTempCommand(4), 
  8431 ;; Return value:  Size  Location     Type
  8432 ;;                  2   22[BANK0 ] int 
  8433 ;; Registers used:
  8434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8435 ;; Tracked objects:
  8436 ;;		On entry : 0/0
  8437 ;;		On exit  : 0/0
  8438 ;;		Unchanged: 0/0
  8439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8440 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8441 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8442 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8443 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  8444 ;;Total ram usage:        5 bytes
  8445 ;; Hardware stack levels used:    1
  8446 ;; Hardware stack levels required when called:    7
  8447 ;; This function calls:
  8448 ;;		_memcpy
  8449 ;; This function is called by:
  8450 ;;		_EM1812EntryPoint
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  8454                           	file	"I2C.c"
  8455                           	line	23
  8456                           global __ptext24
  8457                           __ptext24:	;psect for function _I2C_SendData
  8458  0D10                     psect	text24
  8459                           	file	"I2C.c"
  8460                           	line	23
  8461                           	global	__size_of_I2C_SendData
  8462                           	__size_of_I2C_SendData	equ	__end_of_I2C_SendData-_I2C_SendData
  8463  0045                     	
  8464                           _I2C_SendData:	
  8465  0D10                     ;incstack = 0
  8466                           	opt	stack 7
  8467                           ; Regs used in _I2C_SendData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8468                           ;I2C_SendData@iData stored from wreg
  8469                           	movlb 0	; select bank0
  8470  0D10  0020               	movwf	(I2C_SendData@iData)
  8471  0D11  00BA               	line	25
  8472                           	
  8473                           l3967:	
  8474  0D12                     ;I2C.c: 23: int I2C_SendData(uint8_t* iData,uint8_t iNumberofByte);I2C.c: 24: {;I2C.c: 2
                                 5:     if(wI2CCommandState == CommandCompleted || wI2CCommandState == CommandFailed)
  8475                           		movlw	3
  8476  0D12  3003               	xorwf	((_wI2CCommandState)),w
  8477  0D13  0664               	btfsc	status,2
  8478  0D14  1903               	goto	u2651
  8479  0D15  2D17               	goto	u2650
  8480  0D16  2D18               u2651:
  8481  0D17                     	goto	l3971
  8482  0D17  2D1F               u2650:
  8483  0D18                     	
  8484                           l3969:	
  8485  0D18                     		movlw	5
  8486  0D18  3005               	xorwf	((_wI2CCommandState)),w
  8487  0D19  0664               	btfss	status,2
  8488  0D1A  1D03               	goto	u2661
  8489  0D1B  2D1D               	goto	u2660
  8490  0D1C  2D1E               u2661:
  8491  0D1D                     	goto	l3993
  8492  0D1D  2D51               u2660:
  8493  0D1E                     	goto	l3971
  8494  0D1E  2D1F               	
  8495                           l548:	
  8496  0D1F                     	line	27
  8497                           	
  8498                           l3971:	
  8499  0D1F                     ;I2C.c: 26:     {;I2C.c: 27:         if(iNumberofByte < wI2CTxBufferSize )
  8500                           	movf	(_wI2CTxBufferSize),w
  8501  0D1F  0863               	subwf	(I2C_SendData@iNumberofByte),w
  8502  0D20  0236               	skipnc
  8503  0D21  1803               	goto	u2671
  8504  0D22  2D24               	goto	u2670
  8505  0D23  2D25               u2671:
  8506  0D24                     	goto	l3977
  8507  0D24  2D3D               u2670:
  8508  0D25                     	line	29
  8509                           	
  8510                           l3973:	
  8511  0D25                     ;I2C.c: 28:         {;I2C.c: 29:             memcpy(wI2CTxBuffer,iData,iNumberofByte);
  8512                           	movlw	low(_wI2CTxBuffer)
  8513  0D25  3048               	movwf	(memcpy@d1)
  8514  0D26  00AA               	movlw	high(_wI2CTxBuffer)
  8515  0D27  3001               	movwf	(memcpy@d1+1)
  8516  0D28  00AB               	movf	(I2C_SendData@iData),w
  8517  0D29  083A               	movwf	(memcpy@s1)
  8518  0D2A  00AC               	movlw	0x0
  8519  0D2B  3000               
  8520                           	movwf	(memcpy@s1+1)
  8521  0D2C  00AD               	movf	(I2C_SendData@iNumberofByte),w
  8522  0D2D  0836               	movwf	(??_I2C_SendData+0)+0
  8523  0D2E  00B8               	clrf	(??_I2C_SendData+0)+0+1
  8524  0D2F  01B9               	movf	0+(??_I2C_SendData+0)+0,w
  8525  0D30  0838               	movwf	(memcpy@n)
  8526  0D31  00AE               	movf	1+(??_I2C_SendData+0)+0,w
  8527  0D32  0839               	movwf	(memcpy@n+1)
  8528  0D33  00AF               	fcall	_memcpy
  8529  0D34  318B  23B4  318D   	line	30
  8530                           	
  8531                           l3975:	
  8532  0D37                     ;I2C.c: 30:             wI2CTxNbOfByteToSend = iNumberofByte;
  8533                           	movlb 0	; select bank0
  8534  0D37  0020               	movf	(I2C_SendData@iNumberofByte),w
  8535  0D38  0836               	movwf	(??_I2C_SendData+0)+0
  8536  0D39  00B8               	movf	(??_I2C_SendData+0)+0,w
  8537  0D3A  0838               	movwf	(_wI2CTxNbOfByteToSend)
  8538  0D3B  00D5               	line	31
  8539                           ;I2C.c: 31:         }
  8540                           	goto	l3981
  8541  0D3C  2D41               	line	32
  8542                           ;I2C.c: 32:         else
  8543                           	
  8544                           l549:	
  8545  0D3D                     	line	34
  8546                           	
  8547                           l3977:	
  8548  0D3D                     ;I2C.c: 33:         {;I2C.c: 34:             return 0;
  8549                           	clrf	(?_I2C_SendData)
  8550  0D3D  01B6               	clrf	(?_I2C_SendData+1)
  8551  0D3E  01B7               	goto	l551
  8552  0D3F  2D54               	
  8553                           l3979:	
  8554  0D40                     	goto	l551
  8555  0D40  2D54               	line	35
  8556                           ;I2C.c: 35:         }
  8557                           	
  8558                           l550:	
  8559  0D41                     	line	36
  8560                           	
  8561                           l3981:	
  8562  0D41                     ;I2C.c: 36:         wI2CTxSendPos = 0;
  8563                           	clrf	(_wI2CTxSendPos)
  8564  0D41  01D2               	line	37
  8565                           	
  8566                           l3983:	
  8567  0D42                     ;I2C.c: 37:         PIE1bits.SSPIE = 1;
  8568                           	movlb 1	; select bank1
  8569  0D42  0021               	bsf	(145)^080h,3	;volatile
  8570  0D43  1591               	line	38
  8571                           	
  8572                           l3985:	
  8573  0D44                     ;I2C.c: 38:         SSPCON3bits.ACKTIM = 1;
  8574                           	movlb 4	; select bank4
  8575  0D44  0024               	bsf	(535)^0200h,7	;volatile
  8576  0D45  1797               	line	39
  8577                           ;I2C.c: 39:         wI2CCommandState = CommandSent;
  8578                           	movlb 0	; select bank0
  8579  0D46  0020               	clrf	(_wI2CCommandState)
  8580  0D47  01E4               	line	40
  8581                           	
  8582                           l3987:	
  8583  0D48                     ;I2C.c: 40:         SSPCON2bits.SEN = 1;
  8584                           	movlb 4	; select bank4
  8585  0D48  0024               	bsf	(534)^0200h,0	;volatile
  8586  0D49  1416               	line	41
  8587                           	
  8588                           l3989:	
  8589  0D4A                     ;I2C.c: 41:         return 1;
  8590                           	movlw	01h
  8591  0D4A  3001               	movlb 0	; select bank0
  8592  0D4B  0020               	movwf	(?_I2C_SendData)
  8593  0D4C  00B6               	movlw	0
  8594  0D4D  3000               	movwf	((?_I2C_SendData))+1
  8595  0D4E  00B7               	goto	l551
  8596  0D4F  2D54               	
  8597                           l3991:	
  8598  0D50                     	goto	l551
  8599  0D50  2D54               	line	42
  8600                           ;I2C.c: 42:     }
  8601                           	
  8602                           l546:	
  8603  0D51                     	line	43
  8604                           	
  8605                           l3993:	
  8606  0D51                     ;I2C.c: 43:     return 0;
  8607                           	clrf	(?_I2C_SendData)
  8608  0D51  01B6               	clrf	(?_I2C_SendData+1)
  8609  0D52  01B7               	goto	l551
  8610  0D53  2D54               	
  8611                           l3995:	
  8612  0D54                     	line	44
  8613                           	
  8614                           l551:	
  8615  0D54                     	return
  8616  0D54  0008               	opt stack 0
  8617                           GLOBAL	__end_of_I2C_SendData
  8618                           	__end_of_I2C_SendData:
  8619  0D55                     	signat	_I2C_SendData,8314
  8620                           	global	_I2C_GetData
  8621                           
  8622 ;; *************** function _I2C_GetData *****************
  8623 ;; Defined at:
  8624 ;;		line 46 in file "I2C.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;  iAdress         1    wreg     unsigned char 
  8627 ;;  iRxNumberOfB    1   10[BANK0 ] unsigned char 
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;  iAdress         1   13[BANK0 ] unsigned char 
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  2   10[BANK0 ] int 
  8632 ;; Registers used:
  8633 ;;		wreg, status,2, status,0
  8634 ;; Tracked objects:
  8635 ;;		On entry : 0/0
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8639 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8640 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8641 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8642 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  8643 ;;Total ram usage:        4 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; Hardware stack levels required when called:    6
  8646 ;; This function calls:
  8647 ;;		Nothing
  8648 ;; This function is called by:
  8649 ;;		_EM1812EntryPoint
  8650 ;; This function uses a non-reentrant model
  8651 ;;
  8652                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  8653                           	line	46
  8654                           global __ptext25
  8655                           __ptext25:	;psect for function _I2C_GetData
  8656  0BE3                     psect	text25
  8657                           	file	"I2C.c"
  8658                           	line	46
  8659                           	global	__size_of_I2C_GetData
  8660                           	__size_of_I2C_GetData	equ	__end_of_I2C_GetData-_I2C_GetData
  8661  0036                     	
  8662                           _I2C_GetData:	
  8663  0BE3                     ;incstack = 0
  8664                           	opt	stack 8
  8665                           ; Regs used in _I2C_GetData: [wreg+status,2+status,0]
  8666                           ;I2C_GetData@iAdress stored from wreg
  8667                           	movlb 0	; select bank0
  8668  0BE3  0020               	movwf	(I2C_GetData@iAdress)
  8669  0BE4  00AD               	line	48
  8670                           	
  8671                           l4001:	
  8672  0BE5                     ;I2C.c: 46: int I2C_GetData(uint8_t iAdress, uint8_t iRxNumberOfByteExpected);I2C.c: 47:
                                  {;I2C.c: 48:     if((wI2CCommandState == CommandCompleted || wI2CCommandState == Comman
                                 dFailed) && iRxNumberOfByteExpected <= wI2CRxBufferSize)
  8673                           		movlw	3
  8674  0BE5  3003               	xorwf	((_wI2CCommandState)),w
  8675  0BE6  0664               	btfsc	status,2
  8676  0BE7  1903               	goto	u2681
  8677  0BE8  2BEA               	goto	u2680
  8678  0BE9  2BEB               u2681:
  8679  0BEA                     	goto	l4005
  8680  0BEA  2BF2               u2680:
  8681  0BEB                     	
  8682                           l4003:	
  8683  0BEB                     		movlw	5
  8684  0BEB  3005               	xorwf	((_wI2CCommandState)),w
  8685  0BEC  0664               	btfss	status,2
  8686  0BED  1D03               	goto	u2691
  8687  0BEE  2BF0               	goto	u2690
  8688  0BEF  2BF1               u2691:
  8689  0BF0                     	goto	l4027
  8690  0BF0  2C15               u2690:
  8691  0BF1                     	goto	l4005
  8692  0BF1  2BF2               	
  8693                           l556:	
  8694  0BF2                     	
  8695                           l4005:	
  8696  0BF2                     	movf	(I2C_GetData@iRxNumberOfByteExpected),w
  8697  0BF2  082A               	subwf	(_wI2CRxBufferSize),w
  8698  0BF3  0262               	skipc
  8699  0BF4  1C03               	goto	u2701
  8700  0BF5  2BF7               	goto	u2700
  8701  0BF6  2BF8               u2701:
  8702  0BF7                     	goto	l4027
  8703  0BF7  2C15               u2700:
  8704  0BF8                     	line	50
  8705                           	
  8706                           l4007:	
  8707  0BF8                     ;I2C.c: 49:     {;I2C.c: 50:         wI2CTxBuffer[0]= iAdress;
  8708                           	movf	(I2C_GetData@iAdress),w
  8709  0BF8  082D               	movwf	(??_I2C_GetData+0)+0
  8710  0BF9  00AC               	movf	(??_I2C_GetData+0)+0,w
  8711  0BFA  082C               	movlb 2	; select bank2
  8712  0BFB  0022               	movwf	(_wI2CTxBuffer)^0100h
  8713  0BFC  00C8               	line	51
  8714                           	
  8715                           l4009:	
  8716  0BFD                     ;I2C.c: 51:         wI2CTxNbOfByteToSend = 1;
  8717                           	movlb 0	; select bank0
  8718  0BFD  0020               	clrf	(_wI2CTxNbOfByteToSend)
  8719  0BFE  01D5               	incf	(_wI2CTxNbOfByteToSend),f
  8720  0BFF  0AD5               	line	52
  8721                           ;I2C.c: 52:         wI2CRxNbOfByteToReceived = iRxNumberOfByteExpected;
  8722                           	movf	(I2C_GetData@iRxNumberOfByteExpected),w
  8723  0C00  082A               	movwf	(??_I2C_GetData+0)+0
  8724  0C01  00AC               	movf	(??_I2C_GetData+0)+0,w
  8725  0C02  082C               	movwf	(_wI2CRxNbOfByteToReceived)
  8726  0C03  00D4               	line	53
  8727                           	
  8728                           l4011:	
  8729  0C04                     ;I2C.c: 53:         wI2CTxSendPos = 0;
  8730                           	clrf	(_wI2CTxSendPos)
  8731  0C04  01D2               	line	54
  8732                           	
  8733                           l4013:	
  8734  0C05                     ;I2C.c: 54:         wReceptionBufferPosition = 0;
  8735                           	clrf	(_wReceptionBufferPosition)
  8736  0C05  01D8               	line	55
  8737                           	
  8738                           l4015:	
  8739  0C06                     ;I2C.c: 55:         PIE1bits.SSPIE = 1;
  8740                           	movlb 1	; select bank1
  8741  0C06  0021               	bsf	(145)^080h,3	;volatile
  8742  0C07  1591               	line	56
  8743                           	
  8744                           l4017:	
  8745  0C08                     ;I2C.c: 56:         SSPCON3bits.ACKTIM = 1;
  8746                           	movlb 4	; select bank4
  8747  0C08  0024               	bsf	(535)^0200h,7	;volatile
  8748  0C09  1797               	line	57
  8749                           	
  8750                           l4019:	
  8751  0C0A                     ;I2C.c: 57:         wI2CCommandState = CommandSent;
  8752                           	movlb 0	; select bank0
  8753  0C0A  0020               	clrf	(_wI2CCommandState)
  8754  0C0B  01E4               	line	58
  8755                           	
  8756                           l4021:	
  8757  0C0C                     ;I2C.c: 58:         SSPCON2bits.SEN = 1;
  8758                           	movlb 4	; select bank4
  8759  0C0C  0024               	bsf	(534)^0200h,0	;volatile
  8760  0C0D  1416               	line	59
  8761                           	
  8762                           l4023:	
  8763  0C0E                     ;I2C.c: 59:         return 1;
  8764                           	movlw	01h
  8765  0C0E  3001               	movlb 0	; select bank0
  8766  0C0F  0020               	movwf	(?_I2C_GetData)
  8767  0C10  00AA               	movlw	0
  8768  0C11  3000               	movwf	((?_I2C_GetData))+1
  8769  0C12  00AB               	goto	l557
  8770  0C13  2C18               	
  8771                           l4025:	
  8772  0C14                     	goto	l557
  8773  0C14  2C18               	line	60
  8774                           ;I2C.c: 60:     }
  8775                           	
  8776                           l554:	
  8777  0C15                     	line	61
  8778                           	
  8779                           l4027:	
  8780  0C15                     ;I2C.c: 61:     return 0;
  8781                           	clrf	(?_I2C_GetData)
  8782  0C15  01AA               	clrf	(?_I2C_GetData+1)
  8783  0C16  01AB               	goto	l557
  8784  0C17  2C18               	
  8785                           l4029:	
  8786  0C18                     	line	62
  8787                           	
  8788                           l557:	
  8789  0C18                     	return
  8790  0C18  0008               	opt stack 0
  8791                           GLOBAL	__end_of_I2C_GetData
  8792                           	__end_of_I2C_GetData:
  8793  0C19                     	signat	_I2C_GetData,8314
  8794                           	global	_GetNewReceivedData
  8795                           
  8796 ;; *************** function _GetNewReceivedData *****************
  8797 ;; Defined at:
  8798 ;;		line 64 in file "I2C.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;  oData           1    wreg     PTR unsigned char 
  8801 ;;		 -> EM1812EntryPoint@ReceptionBuffer(8), 
  8802 ;;  oDataSize       1   22[BANK0 ] unsigned char 
  8803 ;; Auto vars:     Size  Location     Type
  8804 ;;  oData           1   25[BANK0 ] PTR unsigned char 
  8805 ;;		 -> EM1812EntryPoint@ReceptionBuffer(8), 
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  2   22[BANK0 ] int 
  8808 ;; Registers used:
  8809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8815 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8816 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8817 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8818 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  8819 ;;Total ram usage:        4 bytes
  8820 ;; Hardware stack levels used:    1
  8821 ;; Hardware stack levels required when called:    7
  8822 ;; This function calls:
  8823 ;;		_memcpy
  8824 ;; This function is called by:
  8825 ;;		_EM1812EntryPoint
  8826 ;; This function uses a non-reentrant model
  8827 ;;
  8828                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  8829                           	line	64
  8830                           global __ptext26
  8831                           __ptext26:	;psect for function _GetNewReceivedData
  8832  0A49                     psect	text26
  8833                           	file	"I2C.c"
  8834                           	line	64
  8835                           	global	__size_of_GetNewReceivedData
  8836                           	__size_of_GetNewReceivedData	equ	__end_of_GetNewReceivedData-_GetNewReceivedData
  8837  0023                     	
  8838                           _GetNewReceivedData:	
  8839  0A49                     ;incstack = 0
  8840                           	opt	stack 7
  8841                           ; Regs used in _GetNewReceivedData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8842                           ;GetNewReceivedData@oData stored from wreg
  8843                           	movlb 0	; select bank0
  8844  0A49  0020               	movwf	(GetNewReceivedData@oData)
  8845  0A4A  00B9               	line	66
  8846                           	
  8847                           l4031:	
  8848  0A4B                     ;I2C.c: 64: int GetNewReceivedData(uint8_t* oData, uint8_t oDataSize);I2C.c: 65: {;I2C.c
                                 : 66:     if(wNewI2CReception == 1 && wI2CCommandState == CommandCompleted)
  8849                           		decf	((_wNewI2CReception)),w
  8850  0A4B  0353               	btfss	status,2
  8851  0A4C  1D03               	goto	u2711
  8852  0A4D  2A4F               	goto	u2710
  8853  0A4E  2A50               u2711:
  8854  0A4F                     	goto	l561
  8855  0A4F  2A6B               u2710:
  8856  0A50                     	
  8857                           l4033:	
  8858  0A50                     		movlw	3
  8859  0A50  3003               	xorwf	((_wI2CCommandState)),w
  8860  0A51  0664               	btfss	status,2
  8861  0A52  1D03               	goto	u2721
  8862  0A53  2A55               	goto	u2720
  8863  0A54  2A56               u2721:
  8864  0A55                     	goto	l561
  8865  0A55  2A6B               u2720:
  8866  0A56                     	line	68
  8867                           	
  8868                           l4035:	
  8869  0A56                     ;I2C.c: 67:     {;I2C.c: 68:         wNewI2CReception = 0;
  8870                           	clrf	(_wNewI2CReception)
  8871  0A56  01D3               	line	69
  8872                           	
  8873                           l4037:	
  8874  0A57                     ;I2C.c: 69:         memcpy(oData,wI2CRxBuffer,oDataSize);
  8875                           	movf	(GetNewReceivedData@oData),w
  8876  0A57  0839               	movwf	(memcpy@d1)
  8877  0A58  00AA               	movlw	0x0
  8878  0A59  3000               
  8879                           	movwf	(memcpy@d1+1)
  8880  0A5A  00AB               	movlw	low(_wI2CRxBuffer)
  8881  0A5B  3034               	movwf	(memcpy@s1)
  8882  0A5C  00AC               	movlw	high(_wI2CRxBuffer)
  8883  0A5D  3001               	movwf	(memcpy@s1+1)
  8884  0A5E  00AD               	movf	(GetNewReceivedData@oDataSize),w
  8885  0A5F  0836               	movwf	(??_GetNewReceivedData+0)+0
  8886  0A60  00B7               	clrf	(??_GetNewReceivedData+0)+0+1
  8887  0A61  01B8               	movf	0+(??_GetNewReceivedData+0)+0,w
  8888  0A62  0837               	movwf	(memcpy@n)
  8889  0A63  00AE               	movf	1+(??_GetNewReceivedData+0)+0,w
  8890  0A64  0838               	movwf	(memcpy@n+1)
  8891  0A65  00AF               	fcall	_memcpy
  8892  0A66  318B  23B4  318A   	goto	l561
  8893  0A69  2A6B               	line	70
  8894                           	
  8895                           l4039:	
  8896  0A6A                     ;I2C.c: 70:         return 1;;	Return value of _GetNewReceivedData is never used
  8897                           	goto	l561
  8898  0A6A  2A6B               	line	71
  8899                           ;I2C.c: 71:     }
  8900                           	
  8901                           l560:	
  8902  0A6B                     	line	73
  8903                           ;I2C.c: 72:     return 0;;	Return value of _GetNewReceivedData is never used
  8904                           	
  8905                           l561:	
  8906  0A6B                     	return
  8907  0A6B  0008               	opt stack 0
  8908                           GLOBAL	__end_of_GetNewReceivedData
  8909                           	__end_of_GetNewReceivedData:
  8910  0A6C                     	signat	_GetNewReceivedData,8314
  8911                           	global	_memcpy
  8912                           
  8913 ;; *************** function _memcpy *****************
  8914 ;; Defined at:
  8915 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
  8916 ;; Parameters:    Size  Location     Type
  8917 ;;  d1              2   10[BANK0 ] PTR void 
  8918 ;;		 -> wI2CTxBuffer(20), EM1812EntryPoint@ReceptionBuffer(8), gUartTXBuffer(50), gTxBuffer(256), 
  8919 ;;  s1              2   12[BANK0 ] PTR const void 
  8920 ;;		 -> wI2CRxBuffer(20), EM1812EntryPoint@SetGetTempCommand(4), STR_4(38), STR_3(12), 
  8921 ;;		 -> gUartTXBuffer(50), 
  8922 ;;  n               2   14[BANK0 ] unsigned int 
  8923 ;; Auto vars:     Size  Location     Type
  8924 ;;  s               2   20[BANK0 ] PTR const unsigned char 
  8925 ;;		 -> wI2CRxBuffer(20), EM1812EntryPoint@SetGetTempCommand(4), STR_4(38), STR_3(12), 
  8926 ;;		 -> gUartTXBuffer(50), 
  8927 ;;  d               2   18[BANK0 ] PTR unsigned char 
  8928 ;;		 -> wI2CTxBuffer(20), EM1812EntryPoint@ReceptionBuffer(8), gUartTXBuffer(50), gTxBuffer(256), 
  8929 ;;  tmp             1   17[BANK0 ] unsigned char 
  8930 ;; Return value:  Size  Location     Type
  8931 ;;                  2   10[BANK0 ] PTR void 
  8932 ;; Registers used:
  8933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8934 ;; Tracked objects:
  8935 ;;		On entry : 0/0
  8936 ;;		On exit  : 0/0
  8937 ;;		Unchanged: 0/0
  8938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8939 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  8940 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  8941 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8942 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0
  8943 ;;Total ram usage:       12 bytes
  8944 ;; Hardware stack levels used:    1
  8945 ;; Hardware stack levels required when called:    6
  8946 ;; This function calls:
  8947 ;;		Nothing
  8948 ;; This function is called by:
  8949 ;;		_Send_UART_Data
  8950 ;;		_main
  8951 ;;		_I2C_SendData
  8952 ;;		_GetNewReceivedData
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           psect	text27,local,class=CODE,delta=2,merge=1,group=2
  8956                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
  8957                           	line	4
  8958                           global __ptext27
  8959                           __ptext27:	;psect for function _memcpy
  8960  0BB4                     psect	text27
  8961                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
  8962                           	line	4
  8963                           	global	__size_of_memcpy
  8964                           	__size_of_memcpy	equ	__end_of_memcpy-_memcpy
  8965  002F                     	
  8966                           _memcpy:	
  8967  0BB4                     ;incstack = 0
  8968                           	opt	stack 9
  8969                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
  8970                           	line	11
  8971                           	
  8972                           l3875:	
  8973  0BB4                     	movlb 0	; select bank0
  8974  0BB4  0020               	movf	(memcpy@s1+1),w
  8975  0BB5  082D               	movwf	(memcpy@s+1)
  8976  0BB6  00B5               	movf	(memcpy@s1),w
  8977  0BB7  082C               	movwf	(memcpy@s)
  8978  0BB8  00B4               	line	12
  8979                           	movf	(memcpy@d1+1),w
  8980  0BB9  082B               	movwf	(memcpy@d+1)
  8981  0BBA  00B3               	movf	(memcpy@d1),w
  8982  0BBB  082A               	movwf	(memcpy@d)
  8983  0BBC  00B2               	line	13
  8984                           	goto	l3885
  8985  0BBD  2BD5               	
  8986                           l1044:	
  8987  0BBE                     	line	14
  8988                           	
  8989                           l3877:	
  8990  0BBE                     	movf	(memcpy@s),w
  8991  0BBE  0834               	movwf	fsr0l
  8992  0BBF  0084               	movf	((memcpy@s+1)),w
  8993  0BC0  0835               	movwf	fsr0h
  8994  0BC1  0085               	movf	indf0,w ;code access
  8995  0BC2  0800               	movwf	(??_memcpy+0)+0
  8996  0BC3  00B0               	movf	(??_memcpy+0)+0,w
  8997  0BC4  0830               	movwf	(memcpy@tmp)
  8998  0BC5  00B1               	
  8999                           l3879:	
  9000  0BC6                     	movlw	01h
  9001  0BC6  3001               	addwf	(memcpy@s),f
  9002  0BC7  07B4               	movlw	0
  9003  0BC8  3000               	addwfc	(memcpy@s+1),f
  9004  0BC9  3DB5               	line	15
  9005                           	
  9006                           l3881:	
  9007  0BCA                     	movf	(memcpy@d),w
  9008  0BCA  0832               	movwf	fsr1l
  9009  0BCB  0086               	movf	(memcpy@d+1),w
  9010  0BCC  0833               	movwf	fsr1h
  9011  0BCD  0087               	movf	(memcpy@tmp),w
  9012  0BCE  0831               	movwf	indf1
  9013  0BCF  0081               	
  9014                           l3883:	
  9015  0BD0                     	movlw	01h
  9016  0BD0  3001               	addwf	(memcpy@d),f
  9017  0BD1  07B2               	movlw	0
  9018  0BD2  3000               	addwfc	(memcpy@d+1),f
  9019  0BD3  3DB3               	goto	l3885
  9020  0BD4  2BD5               	line	16
  9021                           	
  9022                           l1043:	
  9023  0BD5                     	line	13
  9024                           	
  9025                           l3885:	
  9026  0BD5                     	movlw	01h
  9027  0BD5  3001               	subwf	(memcpy@n),f
  9028  0BD6  02AE               	movlw	0
  9029  0BD7  3000               	subwfb	(memcpy@n+1),f
  9030  0BD8  3BAF               		incf	(((memcpy@n))),w
  9031  0BD9  0A2E               	skipz
  9032  0BDA  1D03               	goto	u2571
  9033  0BDB  2BE0               	incf	(((memcpy@n+1))),w
  9034  0BDC  0A2F               	btfss	status,2
  9035  0BDD  1D03               	goto	u2571
  9036  0BDE  2BE0               	goto	u2570
  9037  0BDF  2BE1               u2571:
  9038  0BE0                     	goto	l3877
  9039  0BE0  2BBE               u2570:
  9040  0BE1                     	goto	l1046
  9041  0BE1  2BE2               	
  9042                           l1045:	
  9043  0BE2                     	line	18
  9044                           ;	Return value of _memcpy is never used
  9045                           	
  9046                           l1046:	
  9047  0BE2                     	return
  9048  0BE2  0008               	opt stack 0
  9049                           GLOBAL	__end_of_memcpy
  9050                           	__end_of_memcpy:
  9051  0BE3                     	signat	_memcpy,12409
  9052                           	global	_GetI2CStatus
  9053                           
  9054 ;; *************** function _GetI2CStatus *****************
  9055 ;; Defined at:
  9056 ;;		line 18 in file "I2C.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;		None
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;		None
  9061 ;; Return value:  Size  Location     Type
  9062 ;;                  2   10[BANK0 ] int 
  9063 ;; Registers used:
  9064 ;;		wreg
  9065 ;; Tracked objects:
  9066 ;;		On entry : 0/0
  9067 ;;		On exit  : 0/0
  9068 ;;		Unchanged: 0/0
  9069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9070 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9072 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9073 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  9074 ;;Total ram usage:        4 bytes
  9075 ;; Hardware stack levels used:    1
  9076 ;; Hardware stack levels required when called:    6
  9077 ;; This function calls:
  9078 ;;		Nothing
  9079 ;; This function is called by:
  9080 ;;		_EM1812EntryPoint
  9081 ;; This function uses a non-reentrant model
  9082 ;;
  9083                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
  9084                           	file	"I2C.c"
  9085                           	line	18
  9086                           global __ptext28
  9087                           __ptext28:	;psect for function _GetI2CStatus
  9088  09A7                     psect	text28
  9089                           	file	"I2C.c"
  9090                           	line	18
  9091                           	global	__size_of_GetI2CStatus
  9092                           	__size_of_GetI2CStatus	equ	__end_of_GetI2CStatus-_GetI2CStatus
  9093  000A                     	
  9094                           _GetI2CStatus:	
  9095  09A7                     ;incstack = 0
  9096                           	opt	stack 8
  9097                           ; Regs used in _GetI2CStatus: [wreg]
  9098                           	line	20
  9099                           	
  9100                           l3997:	
  9101  09A7                     ;I2C.c: 20:   return wI2CCommandState;
  9102                           	movlb 0	; select bank0
  9103  09A7  0020               	movf	(_wI2CCommandState),w
  9104  09A8  0864               	movwf	(??_GetI2CStatus+0)+0
  9105  09A9  00AC               	clrf	(??_GetI2CStatus+0)+0+1
  9106  09AA  01AD               	movf	0+(??_GetI2CStatus+0)+0,w
  9107  09AB  082C               	movwf	(?_GetI2CStatus)
  9108  09AC  00AA               	movf	1+(??_GetI2CStatus+0)+0,w
  9109  09AD  082D               	movwf	(?_GetI2CStatus+1)
  9110  09AE  00AB               	goto	l543
  9111  09AF  29B0               	
  9112                           l3999:	
  9113  09B0                     	line	21
  9114                           	
  9115                           l543:	
  9116  09B0                     	return
  9117  09B0  0008               	opt stack 0
  9118                           GLOBAL	__end_of_GetI2CStatus
  9119                           	__end_of_GetI2CStatus:
  9120  09B1                     	signat	_GetI2CStatus,90
  9121                           	global	_Debounce
  9122                           
  9123 ;; *************** function _Debounce *****************
  9124 ;; Defined at:
  9125 ;;		line 79 in file "161518_temp_main.c"
  9126 ;; Parameters:    Size  Location     Type
  9127 ;;  iSwitch         1    wreg     unsigned char 
  9128 ;;  ioTimer         1   10[BANK0 ] PTR unsigned short 
  9129 ;;		 -> main@wDebounceDown(2), main@wDebounceUp(2), main@wDebounceEnter(2), 
  9130 ;;  swPressed       1   11[BANK0 ] PTR unsigned char 
  9131 ;;		 -> main@wEnterBottonPressed(1), main@wDownBottonPressed(1), main@wUpBottonPressed(1), 
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;  iSwitch         1   14[BANK0 ] unsigned char 
  9134 ;; Return value:  Size  Location     Type
  9135 ;;                  1    wreg      void 
  9136 ;; Registers used:
  9137 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 0/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9143 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9144 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9145 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9146 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  9147 ;;Total ram usage:        5 bytes
  9148 ;; Hardware stack levels used:    1
  9149 ;; Hardware stack levels required when called:    6
  9150 ;; This function calls:
  9151 ;;		Nothing
  9152 ;; This function is called by:
  9153 ;;		_main
  9154 ;; This function uses a non-reentrant model
  9155 ;;
  9156                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
  9157                           	file	"161518_temp_main.c"
  9158                           	line	79
  9159                           global __ptext29
  9160                           __ptext29:	;psect for function _Debounce
  9161  0CCB                     psect	text29
  9162                           	file	"161518_temp_main.c"
  9163                           	line	79
  9164                           	global	__size_of_Debounce
  9165                           	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
  9166  0045                     	
  9167                           _Debounce:	
  9168  0CCB                     ;incstack = 0
  9169                           	opt	stack 9
  9170                           ; Regs used in _Debounce: [wreg+fsr1l+fsr1h+status,2+status,0]
  9171                           ;Debounce@iSwitch stored from wreg
  9172                           	movlb 0	; select bank0
  9173  0CCB  0020               	movwf	(Debounce@iSwitch)
  9174  0CCC  00AE               	line	81
  9175                           	
  9176                           l2963:	
  9177  0CCD                     	movf	((Debounce@iSwitch)),w
  9178  0CCD  082E               	btfss	status,2
  9179  0CCE  1D03               	goto	u1841
  9180  0CCF  2CD1               	goto	u1840
  9181  0CD0  2CD2               u1841:
  9182  0CD1                     	goto	l2967
  9183  0CD1  2CDB               u1840:
  9184  0CD2                     	line	83
  9185                           	
  9186                           l2965:	
  9187  0CD2                     	movf	(Debounce@ioTimer),w
  9188  0CD2  082A               	movwf	fsr1l
  9189  0CD3  0086               	clrf fsr1h	
  9190  0CD4  0187               	
  9191                           	movlw	01h
  9192  0CD5  3001               	addwf	indf1,f
  9193  0CD6  0781               	addfsr	fsr1,1
  9194  0CD7  3141               	skipnc
  9195  0CD8  1803               	incf	indf1,f
  9196  0CD9  0A81               	line	84
  9197                           	goto	l2969
  9198  0CDA  2CE2               	line	85
  9199                           	
  9200                           l154:	
  9201  0CDB                     	line	87
  9202                           	
  9203                           l2967:	
  9204  0CDB                     	movf	(Debounce@ioTimer),w
  9205  0CDB  082A               	movwf	fsr1l
  9206  0CDC  0086               	clrf fsr1h	
  9207  0CDD  0187               	
  9208                           	movlw	0
  9209  0CDE  3000               	movwi	[0]fsr1
  9210  0CDF  3FC0               	movwi	[1]fsr1
  9211  0CE0  3FC1               	goto	l2969
  9212  0CE1  2CE2               	line	88
  9213                           	
  9214                           l155:	
  9215  0CE2                     	line	89
  9216                           	
  9217                           l2969:	
  9218  0CE2                     	movf	(Debounce@ioTimer),w
  9219  0CE2  082A               	movwf	fsr1l
  9220  0CE3  0086               	clrf fsr1h	
  9221  0CE4  0187               	
  9222                           	moviw	fsr1++
  9223  0CE5  0016               xorlw	208
  9224  0CE6  3AD0               movwf	(??_Debounce+0)+0
  9225  0CE7  00AC               moviw	fsr1++
  9226  0CE8  0016               xorlw	7
  9227  0CE9  3A07               iorwf	(??_Debounce+0)+0
  9228  0CEA  04AC               	btfss	status,2
  9229  0CEB  1D03               	goto	u1851
  9230  0CEC  2CEE               	goto	u1850
  9231  0CED  2CEF               u1851:
  9232  0CEE                     	goto	l2973
  9233  0CEE  2CF5               u1850:
  9234  0CEF                     	line	91
  9235                           	
  9236                           l2971:	
  9237  0CEF                     	movf	(Debounce@swPressed),w
  9238  0CEF  082B               	movwf	fsr1l
  9239  0CF0  0086               	clrf fsr1h	
  9240  0CF1  0187               	
  9241                           	clrf	indf1
  9242  0CF2  0181               	incf	indf1,f
  9243  0CF3  0A81               	goto	l2973
  9244  0CF4  2CF5               	line	92
  9245                           	
  9246                           l156:	
  9247  0CF5                     	line	93
  9248                           	
  9249                           l2973:	
  9250  0CF5                     	movf	(Debounce@ioTimer),w
  9251  0CF5  082A               	movwf	fsr1l
  9252  0CF6  0086               	clrf fsr1h	
  9253  0CF7  0187               	
  9254                           	moviw	fsr1++
  9255  0CF8  0016               xorlw	64
  9256  0CF9  3A40               movwf	(??_Debounce+0)+0
  9257  0CFA  00AC               moviw	fsr1++
  9258  0CFB  0016               xorlw	31
  9259  0CFC  3A1F               iorwf	(??_Debounce+0)+0
  9260  0CFD  04AC               	btfss	status,2
  9261  0CFE  1D03               	goto	u1861
  9262  0CFF  2D01               	goto	u1860
  9263  0D00  2D02               u1861:
  9264  0D01                     	goto	l158
  9265  0D01  2D0F               u1860:
  9266  0D02                     	line	95
  9267                           	
  9268                           l2975:	
  9269  0D02                     	movf	(Debounce@ioTimer),w
  9270  0D02  082A               	movwf	fsr1l
  9271  0D03  0086               	clrf fsr1h	
  9272  0D04  0187               	
  9273                           	movlw	0D1h
  9274  0D05  30D1               	movwi	[0]fsr1
  9275  0D06  3FC0               	movlw	07h
  9276  0D07  3007               	movwi	[1]fsr1
  9277  0D08  3FC1               	line	96
  9278                           	
  9279                           l2977:	
  9280  0D09                     	movf	(Debounce@swPressed),w
  9281  0D09  082B               	movwf	fsr1l
  9282  0D0A  0086               	clrf fsr1h	
  9283  0D0B  0187               	
  9284                           	clrf	indf1
  9285  0D0C  0181               	incf	indf1,f
  9286  0D0D  0A81               	goto	l158
  9287  0D0E  2D0F               	line	97
  9288                           	
  9289                           l157:	
  9290  0D0F                     	line	98
  9291                           	
  9292                           l158:	
  9293  0D0F                     	return
  9294  0D0F  0008               	opt stack 0
  9295                           GLOBAL	__end_of_Debounce
  9296                           	__end_of_Debounce:
  9297  0D10                     	signat	_Debounce,12409
  9298                           	global	_AddTrace
  9299                           
  9300 ;; *************** function _AddTrace *****************
  9301 ;; Defined at:
  9302 ;;		line 12 in file "GeneralFunction.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;  oText           1    wreg     PTR unsigned char 
  9305 ;;		 -> wInterruptText(75), 
  9306 ;;  iSizeOfoText    1   29[BANK0 ] unsigned char 
  9307 ;;  iText           2   30[BANK0 ] PTR unsigned char 
  9308 ;;		 -> STR_2(9), STR_1(12), main@wReadout(20), 
  9309 ;; Auto vars:     Size  Location     Type
  9310 ;;  oText           1   38[BANK0 ] PTR unsigned char 
  9311 ;;		 -> wInterruptText(75), 
  9312 ;; Return value:  Size  Location     Type
  9313 ;;                  1    wreg      void 
  9314 ;; Registers used:
  9315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9316 ;; Tracked objects:
  9317 ;;		On entry : 0/0
  9318 ;;		On exit  : 0/0
  9319 ;;		Unchanged: 0/0
  9320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9321 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  9322 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9323 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  9324 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  9325 ;;Total ram usage:       10 bytes
  9326 ;; Hardware stack levels used:    1
  9327 ;; Hardware stack levels required when called:    8
  9328 ;; This function calls:
  9329 ;;		_strcat
  9330 ;;		_strlen
  9331 ;; This function is called by:
  9332 ;;		_main
  9333 ;; This function uses a non-reentrant model
  9334 ;;
  9335                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
  9336                           	file	"GeneralFunction.c"
  9337                           	line	12
  9338                           global __ptext30
  9339                           __ptext30:	;psect for function _AddTrace
  9340  0C19                     psect	text30
  9341                           	file	"GeneralFunction.c"
  9342                           	line	12
  9343                           	global	__size_of_AddTrace
  9344                           	__size_of_AddTrace	equ	__end_of_AddTrace-_AddTrace
  9345  003A                     	
  9346                           _AddTrace:	
  9347  0C19                     ;incstack = 0
  9348                           	opt	stack 7
  9349                           ; Regs used in _AddTrace: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9350                           ;AddTrace@oText stored from wreg
  9351                           	movlb 0	; select bank0
  9352  0C19  0020               	movwf	(AddTrace@oText)
  9353  0C1A  00C6               	line	14
  9354                           	
  9355                           l3175:	
  9356  0C1B                     ;GeneralFunction.c: 12: void AddTrace(char* oText, char iSizeOfoText, char* iText);Gener
                                 alFunction.c: 13: {;GeneralFunction.c: 14:     if((iSizeOfoText - 1 - strlen(oText)) > s
                                 trlen(iText))
  9357                           	movf	(AddTrace@oText),w
  9358  0C1B  0846               	movwf	(strlen@s)
  9359  0C1C  00AA               	movlw	0x2
  9360  0C1D  3002               
  9361                           	movwf	(strlen@s+1)
  9362  0C1E  00AB               	fcall	_strlen
  9363  0C1F  318A  226C  318C   	movlb 0	; select bank0
  9364  0C22  0020               	comf	(0+(?_strlen)),w
  9365  0C23  092A               	movwf	(??_AddTrace+0)+0
  9366  0C24  00C0               	comf	(1+(?_strlen)),w
  9367  0C25  092B               	movwf	((??_AddTrace+0)+0+1)
  9368  0C26  00C1               	incf	(??_AddTrace+0)+0,f
  9369  0C27  0AC0               	skipnz
  9370  0C28  1903               	incf	((??_AddTrace+0)+0+1),f
  9371  0C29  0AC1               	movf	(AddTrace@iSizeOfoText),w
  9372  0C2A  083D               	addwf	0+(??_AddTrace+0)+0,w
  9373  0C2B  0740               	movwf	(??_AddTrace+2)+0
  9374  0C2C  00C2               	movf	1+(??_AddTrace+0)+0,w
  9375  0C2D  0841               	skipnc
  9376  0C2E  1803               	incf	1+(??_AddTrace+0)+0,w
  9377  0C2F  0A41               	movwf	((??_AddTrace+2)+0)+1
  9378  0C30  00C3               	movf	0+(??_AddTrace+2)+0,w
  9379  0C31  0842               	addlw	0FFh
  9380  0C32  3EFF               	movwf	(??_AddTrace+4)+0
  9381  0C33  00C4               	movlw	0FFh
  9382  0C34  30FF               	addwfc	1+(??_AddTrace+2)+0,w
  9383  0C35  3D43               	movwf	1+(??_AddTrace+4)+0
  9384  0C36  00C5               	movf	(AddTrace@iText+1),w
  9385  0C37  083F               	movwf	(strlen@s+1)
  9386  0C38  00AB               	movf	(AddTrace@iText),w
  9387  0C39  083E               	movwf	(strlen@s)
  9388  0C3A  00AA               	fcall	_strlen
  9389  0C3B  318A  226C  318C   	movlb 0	; select bank0
  9390  0C3E  0020               	movf	1+(??_AddTrace+4)+0,w
  9391  0C3F  0845               	subwf	(1+(?_strlen)),w
  9392  0C40  022B               	skipz
  9393  0C41  1D03               	goto	u2035
  9394  0C42  2C45               	movf	0+(??_AddTrace+4)+0,w
  9395  0C43  0844               	subwf	(0+(?_strlen)),w
  9396  0C44  022A               u2035:
  9397  0C45                     	skipnc
  9398  0C45  1803               	goto	u2031
  9399  0C46  2C48               	goto	u2030
  9400  0C47  2C49               u2031:
  9401  0C48                     	goto	l605
  9402  0C48  2C52               u2030:
  9403  0C49                     	line	16
  9404                           	
  9405                           l3177:	
  9406  0C49                     ;GeneralFunction.c: 15:     {;GeneralFunction.c: 16:         strcat(oText,iText);
  9407                           	movf	(AddTrace@iText+1),w
  9408  0C49  083F               	movwf	(strcat@src+1)
  9409  0C4A  00B9               	movf	(AddTrace@iText),w
  9410  0C4B  083E               	movwf	(strcat@src)
  9411  0C4C  00B8               	movf	(AddTrace@oText),w
  9412  0C4D  0846               	fcall	_strcat
  9413  0C4E  318A  2230  318C   	goto	l605
  9414  0C51  2C52               	line	17
  9415                           ;GeneralFunction.c: 17:     }
  9416                           	
  9417                           l604:	
  9418  0C52                     	line	18
  9419                           	
  9420                           l605:	
  9421  0C52                     	return
  9422  0C52  0008               	opt stack 0
  9423                           GLOBAL	__end_of_AddTrace
  9424                           	__end_of_AddTrace:
  9425  0C53                     	signat	_AddTrace,12409
  9426                           	global	_strcat
  9427                           
  9428 ;; *************** function _strcat *****************
  9429 ;; Defined at:
  9430 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  9431 ;; Parameters:    Size  Location     Type
  9432 ;;  dest            1    wreg     PTR unsigned char 
  9433 ;;		 -> wInterruptText(75), 
  9434 ;;  src             2   24[BANK0 ] PTR const unsigned char 
  9435 ;;		 -> STR_2(9), STR_1(12), main@wReadout(20), 
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;  dest            1   28[BANK0 ] PTR unsigned char 
  9438 ;;		 -> wInterruptText(75), 
  9439 ;; Return value:  Size  Location     Type
  9440 ;;                  1    wreg      PTR unsigned char 
  9441 ;; Registers used:
  9442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9448 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9449 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9450 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9451 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  9452 ;;Total ram usage:        5 bytes
  9453 ;; Hardware stack levels used:    1
  9454 ;; Hardware stack levels required when called:    7
  9455 ;; This function calls:
  9456 ;;		_strcpy
  9457 ;;		_strlen
  9458 ;; This function is called by:
  9459 ;;		_AddTrace
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           psect	text31,local,class=CODE,delta=2,merge=1,group=2
  9463                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  9464                           	line	3
  9465                           global __ptext31
  9466                           __ptext31:	;psect for function _strcat
  9467  0A30                     psect	text31
  9468                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  9469                           	line	3
  9470                           	global	__size_of_strcat
  9471                           	__size_of_strcat	equ	__end_of_strcat-_strcat
  9472  0019                     	
  9473                           _strcat:	
  9474  0A30                     ;incstack = 0
  9475                           	opt	stack 7
  9476                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9477                           ;strcat@dest stored from wreg
  9478                           	movlb 0	; select bank0
  9479  0A30  0020               	movwf	(strcat@dest)
  9480  0A31  00BC               	line	5
  9481                           	
  9482                           l2811:	
  9483  0A32                     	movf	(strcat@src+1),w
  9484  0A32  0839               	movwf	(strcpy@src+1)
  9485  0A33  00B1               	movf	(strcat@src),w
  9486  0A34  0838               	movwf	(strcpy@src)
  9487  0A35  00B0               	movf	(strcat@dest),w
  9488  0A36  083C               	movwf	(strlen@s)
  9489  0A37  00AA               	movlw	0x2
  9490  0A38  3002               
  9491                           	movwf	(strlen@s+1)
  9492  0A39  00AB               	fcall	_strlen
  9493  0A3A  318A  226C  318A   	movlb 0	; select bank0
  9494  0A3D  0020               	movf	(0+?_strlen),w
  9495  0A3E  082A               	movwf	(??_strcat+0)+0
  9496  0A3F  00BA               	movf	(1+?_strlen),w
  9497  0A40  082B               	movwf	((??_strcat+0)+0+1)
  9498  0A41  00BB               	movf	(strcat@dest),w
  9499  0A42  083C               	addwf	0+(??_strcat+0)+0,w
  9500  0A43  073A               	fcall	_strcpy
  9501  0A44  318A  2290  318A   	goto	l1063
  9502  0A47  2A48               	line	6
  9503                           	
  9504                           l2813:	
  9505  0A48                     	line	7
  9506                           ;	Return value of _strcat is never used
  9507                           	
  9508                           l1063:	
  9509  0A48                     	return
  9510  0A48  0008               	opt stack 0
  9511                           GLOBAL	__end_of_strcat
  9512                           	__end_of_strcat:
  9513  0A49                     	signat	_strcat,8313
  9514                           	global	_strlen
  9515                           
  9516 ;; *************** function _strlen *****************
  9517 ;; Defined at:
  9518 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  9519 ;; Parameters:    Size  Location     Type
  9520 ;;  s               2   10[BANK0 ] PTR const unsigned char 
  9521 ;;		 -> STR_2(9), STR_1(12), main@wReadout(20), wInterruptText(75), 
  9522 ;; Auto vars:     Size  Location     Type
  9523 ;;  a               2   14[BANK0 ] PTR const unsigned char 
  9524 ;;		 -> STR_2(9), STR_1(12), main@wReadout(20), wInterruptText(75), 
  9525 ;; Return value:  Size  Location     Type
  9526 ;;                  2   10[BANK0 ] unsigned int 
  9527 ;; Registers used:
  9528 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9529 ;; Tracked objects:
  9530 ;;		On entry : 0/0
  9531 ;;		On exit  : 0/0
  9532 ;;		Unchanged: 0/0
  9533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9534 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9535 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9536 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9537 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  9538 ;;Total ram usage:        6 bytes
  9539 ;; Hardware stack levels used:    1
  9540 ;; Hardware stack levels required when called:    6
  9541 ;; This function calls:
  9542 ;;		Nothing
  9543 ;; This function is called by:
  9544 ;;		_PrintLog
  9545 ;;		_AddTrace
  9546 ;;		_strcat
  9547 ;; This function uses a non-reentrant model
  9548 ;;
  9549                           psect	text32,local,class=CODE,delta=2,merge=1,group=2
  9550                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  9551                           	line	12
  9552                           global __ptext32
  9553                           __ptext32:	;psect for function _strlen
  9554  0A6C                     psect	text32
  9555                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  9556                           	line	12
  9557                           	global	__size_of_strlen
  9558                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  9559  0024                     	
  9560                           _strlen:	
  9561  0A6C                     ;incstack = 0
  9562                           	opt	stack 8
  9563                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  9564                           	line	14
  9565                           	
  9566                           l2569:	
  9567  0A6C                     	movlb 0	; select bank0
  9568  0A6C  0020               	movf	(strlen@s+1),w
  9569  0A6D  082B               	movwf	(strlen@a+1)
  9570  0A6E  00AF               	movf	(strlen@s),w
  9571  0A6F  082A               	movwf	(strlen@a)
  9572  0A70  00AE               	line	16
  9573                           	goto	l2573
  9574  0A71  2A77               	
  9575                           l1073:	
  9576  0A72                     	line	17
  9577                           	
  9578                           l2571:	
  9579  0A72                     	movlw	01h
  9580  0A72  3001               	addwf	(strlen@s),f
  9581  0A73  07AA               	movlw	0
  9582  0A74  3000               	addwfc	(strlen@s+1),f
  9583  0A75  3DAB               	goto	l2573
  9584  0A76  2A77               	line	18
  9585                           	
  9586                           l1072:	
  9587  0A77                     	line	16
  9588                           	
  9589                           l2573:	
  9590  0A77                     	movf	(strlen@s),w
  9591  0A77  082A               	movwf	fsr0l
  9592  0A78  0084               	movf	((strlen@s+1)),w
  9593  0A79  082B               	movwf	fsr0h
  9594  0A7A  0085               	moviw	fsr0++
  9595  0A7B  0012               	btfss	status,2
  9596  0A7C  1D03               	goto	u1361
  9597  0A7D  2A7F               	goto	u1360
  9598  0A7E  2A80               u1361:
  9599  0A7F                     	goto	l2571
  9600  0A7F  2A72               u1360:
  9601  0A80                     	goto	l2575
  9602  0A80  2A81               	
  9603                           l1074:	
  9604  0A81                     	line	25
  9605                           	
  9606                           l2575:	
  9607  0A81                     	comf	(strlen@a),w
  9608  0A81  092E               	movwf	(??_strlen+0)+0
  9609  0A82  00AC               	comf	(strlen@a+1),w
  9610  0A83  092F               	movwf	((??_strlen+0)+0+1)
  9611  0A84  00AD               	incf	(??_strlen+0)+0,f
  9612  0A85  0AAC               	skipnz
  9613  0A86  1903               	incf	((??_strlen+0)+0+1),f
  9614  0A87  0AAD               	movf	(strlen@s),w
  9615  0A88  082A               	addwf	0+(??_strlen+0)+0,w
  9616  0A89  072C               	movwf	(?_strlen)
  9617  0A8A  00AA               	movf	(strlen@s+1),w
  9618  0A8B  082B               	addwfc	1+(??_strlen+0)+0,w
  9619  0A8C  3D2D               	movwf	1+(?_strlen)
  9620  0A8D  00AB               	goto	l1075
  9621  0A8E  2A8F               	
  9622                           l2577:	
  9623  0A8F                     	line	26
  9624                           	
  9625                           l1075:	
  9626  0A8F                     	return
  9627  0A8F  0008               	opt stack 0
  9628                           GLOBAL	__end_of_strlen
  9629                           	__end_of_strlen:
  9630  0A90                     	signat	_strlen,4218
  9631                           	global	_strcpy
  9632                           
  9633 ;; *************** function _strcpy *****************
  9634 ;; Defined at:
  9635 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;  dest            1    wreg     PTR unsigned char 
  9638 ;;		 -> wInterruptText(75), 
  9639 ;;  src             2   16[BANK0 ] PTR const unsigned char 
  9640 ;;		 -> STR_2(9), STR_1(12), main@wReadout(20), 
  9641 ;; Auto vars:     Size  Location     Type
  9642 ;;  dest            1   23[BANK0 ] PTR unsigned char 
  9643 ;;		 -> wInterruptText(75), 
  9644 ;;  s               2   20[BANK0 ] PTR const unsigned char 
  9645 ;;		 -> STR_2(9), STR_1(12), main@wReadout(20), 
  9646 ;;  d               1   22[BANK0 ] PTR unsigned char 
  9647 ;;		 -> wInterruptText(75), 
  9648 ;; Return value:  Size  Location     Type
  9649 ;;                  1    wreg      PTR unsigned char 
  9650 ;; Registers used:
  9651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9652 ;; Tracked objects:
  9653 ;;		On entry : 0/0
  9654 ;;		On exit  : 0/0
  9655 ;;		Unchanged: 0/0
  9656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9657 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9658 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  9659 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9660 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
  9661 ;;Total ram usage:        8 bytes
  9662 ;; Hardware stack levels used:    1
  9663 ;; Hardware stack levels required when called:    6
  9664 ;; This function calls:
  9665 ;;		Nothing
  9666 ;; This function is called by:
  9667 ;;		_strcat
  9668 ;; This function uses a non-reentrant model
  9669 ;;
  9670                           psect	text33,local,class=CODE,delta=2,merge=1,group=2
  9671                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  9672                           	line	7
  9673                           global __ptext33
  9674                           __ptext33:	;psect for function _strcpy
  9675  0A90                     psect	text33
  9676                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  9677                           	line	7
  9678                           	global	__size_of_strcpy
  9679                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  9680  0025                     	
  9681                           _strcpy:	
  9682  0A90                     ;incstack = 0
  9683                           	opt	stack 7
  9684                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  9685                           ;strcpy@dest stored from wreg
  9686                           	movlb 0	; select bank0
  9687  0A90  0020               	movwf	(strcpy@dest)
  9688  0A91  00B7               	line	13
  9689                           	
  9690                           l2651:	
  9691  0A92                     	movf	(strcpy@src+1),w
  9692  0A92  0831               	movwf	(strcpy@s+1)
  9693  0A93  00B5               	movf	(strcpy@src),w
  9694  0A94  0830               	movwf	(strcpy@s)
  9695  0A95  00B4               	line	14
  9696                           	movf	(strcpy@dest),w
  9697  0A96  0837               	movwf	(??_strcpy+0)+0
  9698  0A97  00B2               	movf	(??_strcpy+0)+0,w
  9699  0A98  0832               	movwf	(strcpy@d)
  9700  0A99  00B6               	line	15
  9701                           	goto	l2653
  9702  0A9A  2A9C               	
  9703                           l1067:	
  9704  0A9B                     	goto	l2653
  9705  0A9B  2A9C               	
  9706                           l1066:	
  9707  0A9C                     	
  9708                           l2653:	
  9709  0A9C                     	movf	(strcpy@d),w
  9710  0A9C  0836               	movwf	fsr1l
  9711  0A9D  0086               	movlw 2	; select bank4/5
  9712  0A9E  3002               	movwf fsr1h	
  9713  0A9F  0087               	
  9714                           	incf	(strcpy@d),f
  9715  0AA0  0AB6               	movf	(strcpy@s+1),w
  9716  0AA1  0835               	movwf	(??_strcpy+0)+0+1
  9717  0AA2  00B3               	movf	(strcpy@s),w
  9718  0AA3  0834               	movwf	(??_strcpy+0)+0
  9719  0AA4  00B2               	incf	(strcpy@s),f
  9720  0AA5  0AB4               	skipnz
  9721  0AA6  1903               	incf	(strcpy@s+1),f
  9722  0AA7  0AB5               	movf	0+(??_strcpy+0)+0,w
  9723  0AA8  0832               	movwf	fsr0l
  9724  0AA9  0084               	movf	(1+(??_strcpy+0)+0),w
  9725  0AAA  0833               	movwf	fsr0h
  9726  0AAB  0085               	movf	indf0,w ;code access
  9727  0AAC  0800               	movwi	[0]fsr1
  9728  0AAD  3FC0               	movf	wreg
  9729  0AAE  0889               	btfss	status,2
  9730  0AAF  1D03               	goto	u1431
  9731  0AB0  2AB2               	goto	u1430
  9732  0AB1  2AB3               u1431:
  9733  0AB2                     	goto	l2653
  9734  0AB2  2A9C               u1430:
  9735  0AB3                     	goto	l1069
  9736  0AB3  2AB4               	
  9737                           l1068:	
  9738  0AB4                     	line	18
  9739                           ;	Return value of _strcpy is never used
  9740                           	
  9741                           l1069:	
  9742  0AB4                     	return
  9743  0AB4  0008               	opt stack 0
  9744                           GLOBAL	__end_of_strcpy
  9745                           	__end_of_strcpy:
  9746  0AB5                     	signat	_strcpy,8313
  9747                           	global	_myint
  9748                           
  9749 ;; *************** function _myint *****************
  9750 ;; Defined at:
  9751 ;;		line 532 in file "161518_temp_main.c"
  9752 ;; Parameters:    Size  Location     Type
  9753 ;;		None
  9754 ;; Auto vars:     Size  Location     Type
  9755 ;;  wText           2    6[BANK0 ] unsigned char [2]
  9756 ;;  wI2CError       2    8[BANK0 ] int 
  9757 ;; Return value:  Size  Location     Type
  9758 ;;                  1    wreg      void 
  9759 ;; Registers used:
  9760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9761 ;; Tracked objects:
  9762 ;;		On entry : 0/0
  9763 ;;		On exit  : 0/0
  9764 ;;		Unchanged: 0/0
  9765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9767 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  9768 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9769 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  9770 ;;Total ram usage:        6 bytes
  9771 ;; Hardware stack levels used:    1
  9772 ;; Hardware stack levels required when called:    5
  9773 ;; This function calls:
  9774 ;;		_I2C_Interrupt
  9775 ;;		_TempUpdateRequest
  9776 ;;		i1_lcdWriteText
  9777 ;; This function is called by:
  9778 ;;		Interrupt level 1
  9779 ;; This function uses a non-reentrant model
  9780 ;;
  9781                           psect	intentry,class=CODE,delta=2
  9782                           global __pintentry
  9783                           __pintentry:
  9784  0004                     psect	intentry
  9785                           	file	"161518_temp_main.c"
  9786                           	line	532
  9787                           	global	__size_of_myint
  9788                           	__size_of_myint	equ	__end_of_myint-_myint
  9789  00AD                     	
  9790                           _myint:	
  9791  0004                     ;incstack = 0
  9792                           	opt	stack 4
  9793                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
  9794  0004  147E               ; Regs used in _myint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9795                           psect	intentry
  9796                           	pagesel	$
  9797  0005  3180               	line	535
  9798                           	
  9799                           i1l4497:	
  9800  0006                     	fcall	_I2C_Interrupt
  9801  0006  3184  24E1  3180   	movf	(1+(?_I2C_Interrupt)),w
  9802  0009  0871               	movlb 0	; select bank0
  9803  000A  0020               	movwf	(myint@wI2CError+1)
  9804  000B  00A9               	movf	(0+(?_I2C_Interrupt)),w
  9805  000C  0870               	movwf	(myint@wI2CError)
  9806  000D  00A8               	line	536
  9807                           	
  9808                           i1l4499:	
  9809  000E                     	movf	((myint@wI2CError)),w
  9810  000E  0828               iorwf	((myint@wI2CError+1)),w
  9811  000F  0429               	btfsc	status,2
  9812  0010  1903               	goto	u302_21
  9813  0011  2813               	goto	u302_20
  9814  0012  2814               u302_21:
  9815  0013                     	goto	i1l4507
  9816  0013  2822               u302_20:
  9817  0014                     	line	539
  9818                           	
  9819                           i1l4501:	
  9820  0014                     	movf	(myint@wI2CError),w
  9821  0014  0828               	addlw	030h
  9822  0015  3E30               	movwf	(??_myint+0)+0
  9823  0016  00A4               	movf	(??_myint+0)+0,w
  9824  0017  0824               	movwf	(myint@wText)
  9825  0018  00A6               	line	540
  9826                           	
  9827                           i1l4503:	
  9828  0019                     	clrf	0+(myint@wText)+01h
  9829  0019  01A7               	line	541
  9830                           	
  9831                           i1l4505:	
  9832  001A                     	movlw	low(myint@wText)
  9833  001A  3026               	movwf	(i1lcdWriteText@iText)
  9834  001B  00A0               	movlw	high(myint@wText)
  9835  001C  3000               	movwf	(i1lcdWriteText@iText+1)
  9836  001D  00A1               	fcall	i1_lcdWriteText
  9837  001E  318A  22DB  3180   	goto	i1l4507
  9838  0021  2822               	line	542
  9839                           	
  9840                           i1l216:	
  9841  0022                     	line	544
  9842                           	
  9843                           i1l4507:	
  9844  0022                     	movlb 0	; select bank0
  9845  0022  0020               	btfss	(17),0	;volatile
  9846  0023  1C11               	goto	u303_21
  9847  0024  2826               	goto	u303_20
  9848  0025  2827               u303_21:
  9849  0026                     	goto	i1l4521
  9850  0026  2843               u303_20:
  9851  0027                     	line	546
  9852                           	
  9853                           i1l4509:	
  9854  0027                     	movlw	low(01h)
  9855  0027  3001               	movwf	(??_myint+0)+0
  9856  0028  00A4               	movf	(??_myint+0)+0,w
  9857  0029  0824               	addwf	(_wTimer1IntCounter),f
  9858  002A  07CE               	line	547
  9859                           	
  9860                           i1l4511:	
  9861  002B                     	bcf	(17),0	;volatile
  9862  002B  1011               	line	549
  9863                           		movlw	7
  9864  002C  3007               	xorwf	((_wTimer1IntCounter)),w
  9865  002D  064E               	btfss	status,2
  9866  002E  1D03               	goto	u304_21
  9867  002F  2831               	goto	u304_20
  9868  0030  2832               u304_21:
  9869  0031                     	goto	i1l4515
  9870  0031  2837               u304_20:
  9871  0032                     	line	551
  9872                           	
  9873                           i1l4513:	
  9874  0032                     	movlw	low(04Ch)
  9875  0032  304C               	movwf	(23)	;volatile
  9876  0033  0097               	line	552
  9877                           	movlw	low(083h)
  9878  0034  3083               	movwf	(22)	;volatile
  9879  0035  0096               	goto	i1l4515
  9880  0036  2837               	line	553
  9881                           	
  9882                           i1l218:	
  9883  0037                     	line	554
  9884                           	
  9885                           i1l4515:	
  9886  0037                     		movlw	8
  9887  0037  3008               	xorwf	((_wTimer1IntCounter)),w
  9888  0038  064E               	btfss	status,2
  9889  0039  1D03               	goto	u305_21
  9890  003A  283C               	goto	u305_20
  9891  003B  283D               u305_21:
  9892  003C                     	goto	i1l4521
  9893  003C  2843               u305_20:
  9894  003D                     	line	556
  9895                           	
  9896                           i1l4517:	
  9897  003D                     	clrf	(_wTimer1IntCounter)
  9898  003D  01CE               	line	557
  9899                           	
  9900                           i1l4519:	
  9901  003E                     	fcall	_TempUpdateRequest
  9902  003E  3189  21F5  3180   	goto	i1l4521
  9903  0041  2843               	line	558
  9904                           	
  9905                           i1l219:	
  9906  0042                     	goto	i1l4521
  9907  0042  2843               	line	559
  9908                           	
  9909                           i1l217:	
  9910  0043                     	line	560
  9911                           	
  9912                           i1l4521:	
  9913  0043                     	btfss	(11),2	;volatile
  9914  0043  1D0B               	goto	u306_21
  9915  0044  2846               	goto	u306_20
  9916  0045  2847               u306_21:
  9917  0046                     	goto	i1l4527
  9918  0046  284E               u306_20:
  9919  0047                     	line	562
  9920                           	
  9921                           i1l4523:	
  9922  0047                     	bcf	(11),2	;volatile
  9923  0047  110B               	line	563
  9924                           	
  9925                           i1l4525:	
  9926  0048                     	movlw	low(01h)
  9927  0048  3001               	movlb 0	; select bank0
  9928  0049  0020               	movwf	(??_myint+0)+0
  9929  004A  00A4               	movf	(??_myint+0)+0,w
  9930  004B  0824               	addwf	(_wTimer0Counter),f
  9931  004C  07D9               	goto	i1l4527
  9932  004D  284E               	line	564
  9933                           	
  9934                           i1l220:	
  9935  004E                     	line	565
  9936                           	
  9937                           i1l4527:	
  9938  004E                     	movlb 0	; select bank0
  9939  004E  0020               	btfss	(17),4	;volatile
  9940  004F  1E11               	goto	u307_21
  9941  0050  2852               	goto	u307_20
  9942  0051  2853               u307_21:
  9943  0052                     	goto	i1l4539
  9944  0052  286E               u307_20:
  9945  0053                     	line	567
  9946                           	
  9947                           i1l4529:	
  9948  0053                     	movf	(_gTxTransmitSize),w
  9949  0053  0850               	subwf	(_gTxReadingPosition),w
  9950  0054  024F               	skipnc
  9951  0055  1803               	goto	u308_21
  9952  0056  2858               	goto	u308_20
  9953  0057  2859               u308_21:
  9954  0058                     	goto	i1l4535
  9955  0058  2868               u308_20:
  9956  0059                     	line	569
  9957                           	
  9958                           i1l4531:	
  9959  0059                     	movf	(_gTxReadingPosition),w
  9960  0059  084F               	addlw	low 8944
  9961  005A  3EF0               	movwf	fsr1l
  9962  005B  0086               	clrf	(fsr1l)+1
  9963  005C  0187               	movlw	high 8944
  9964  005D  3022               	addwfc	(fsr1l)+1,f
  9965  005E  3D87               	movf	indf1,w
  9966  005F  0801               	movlb 3	; select bank3
  9967  0060  0023               	movwf	(410)^0180h	;volatile
  9968  0061  009A               	line	570
  9969                           	
  9970                           i1l4533:	
  9971  0062                     	movlw	low(01h)
  9972  0062  3001               	movlb 0	; select bank0
  9973  0063  0020               	movwf	(??_myint+0)+0
  9974  0064  00A4               	movf	(??_myint+0)+0,w
  9975  0065  0824               	addwf	(_gTxReadingPosition),f
  9976  0066  07CF               	line	571
  9977                           	goto	i1l4539
  9978  0067  286E               	line	572
  9979                           	
  9980                           i1l222:	
  9981  0068                     	line	574
  9982                           	
  9983                           i1l4535:	
  9984  0068                     	clrf	(_gTxReadingPosition)
  9985  0068  01CF               	line	575
  9986                           	clrf	(_gTxTransmitSize)
  9987  0069  01D0               	line	576
  9988                           	
  9989                           i1l4537:	
  9990  006A                     	movlb 1	; select bank1
  9991  006A  0021               	bcf	(145)^080h,4	;volatile
  9992  006B  1211               	goto	i1l4539
  9993  006C  286E               	line	577
  9994                           	
  9995                           i1l223:	
  9996  006D                     	goto	i1l4539
  9997  006D  286E               	line	578
  9998                           	
  9999                           i1l221:	
 10000  006E                     	line	579
 10001                           	
 10002                           i1l4539:	
 10003  006E                     	movlb 0	; select bank0
 10004  006E  0020               	btfss	(17),5	;volatile
 10005  006F  1E91               	goto	u309_21
 10006  0070  2872               	goto	u309_20
 10007  0071  2873               u309_21:
 10008  0072                     	goto	i1l231
 10009  0072  28AF               u309_20:
 10010  0073                     	line	581
 10011                           	
 10012                           i1l4541:	
 10013  0073                     	movlb 3	; select bank3
 10014  0073  0023               	btfsc	(413)^0180h,2	;volatile
 10015  0074  191D               	goto	u310_21
 10016  0075  2877               	goto	u310_20
 10017  0076  2878               u310_21:
 10018  0077                     	goto	i1l4545
 10019  0077  287D               u310_20:
 10020  0078                     	
 10021                           i1l4543:	
 10022  0078                     	btfss	(413)^0180h,1	;volatile
 10023  0078  1C9D               	goto	u311_21
 10024  0079  287B               	goto	u311_20
 10025  007A  287C               u311_21:
 10026  007B                     	goto	i1l4547
 10027  007B  2890               u311_20:
 10028  007C                     	goto	i1l4545
 10029  007C  287D               	
 10030                           i1l227:	
 10031  007D                     	line	583
 10032                           	
 10033                           i1l4545:	
 10034  007D                     	rrf	(413)^0180h,w	;volatile
 10035  007D  0C1D               	andlw	(1<<1)-1
 10036  007E  3901               	movlb 0	; select bank0
 10037  007F  0020               	movwf	(??_myint+0)+0
 10038  0080  00A4               	movlw	01h
 10039  0081  3001               u312_25:
 10040  0082                     	lslf	(??_myint+0)+0,f
 10041  0082  35A4               	decfsz	wreg,f
 10042  0083  0B89               	goto	u312_25
 10043  0084  2882               	movlb 3	; select bank3
 10044  0085  0023               	rrf	(413)^0180h,w	;volatile
 10045  0086  0C1D               	rrf	wreg,f
 10046  0087  0C89               	andlw	(1<<1)-1
 10047  0088  3901               	movlb 0	; select bank0
 10048  0089  0020               	addwf	0+(??_myint+0)+0,w
 10049  008A  0724               	movwf	(??_myint+1)+0
 10050  008B  00A5               	movf	(??_myint+1)+0,w
 10051  008C  0825               	movlb 1	; select bank1
 10052  008D  0021               	movwf	(_gErrorCode)^080h
 10053  008E  00E3               	line	584
 10054                           	goto	i1l231
 10055  008F  28AF               	line	585
 10056                           	
 10057                           i1l225:	
 10058  0090                     	line	587
 10059                           	
 10060                           i1l4547:	
 10061  0090                     	movlw	low(032h)
 10062  0090  3032               	movlb 0	; select bank0
 10063  0091  0020               	subwf	(_gUartRXBufferIndex),w
 10064  0092  024D               	skipnc
 10065  0093  1803               	goto	u313_21
 10066  0094  2896               	goto	u313_20
 10067  0095  2897               u313_21:
 10068  0096                     	goto	i1l4553
 10069  0096  28A7               u313_20:
 10070  0097                     	line	589
 10071                           	
 10072                           i1l4549:	
 10073  0097                     	movlb 3	; select bank3
 10074  0097  0023               	movf	(409)^0180h,w	;volatile
 10075  0098  0819               	movlb 0	; select bank0
 10076  0099  0020               	movwf	(??_myint+0)+0
 10077  009A  00A4               	movf	(_gUartRXBufferIndex),w
 10078  009B  084D               	addlw	low(_gUartRXBuffer|((0x2)<<8))&0ffh
 10079  009C  3EA0               	movwf	fsr1l
 10080  009D  0086               	movlw 2	; select bank5/6
 10081  009E  3002               	movwf fsr1h	
 10082  009F  0087               	
 10083                           	movf	(??_myint+0)+0,w
 10084  00A0  0824               	movwf	indf1
 10085  00A1  0081               	line	590
 10086                           	
 10087                           i1l4551:	
 10088  00A2                     	movlw	low(01h)
 10089  00A2  3001               	movwf	(??_myint+0)+0
 10090  00A3  00A4               	movf	(??_myint+0)+0,w
 10091  00A4  0824               	addwf	(_gUartRXBufferIndex),f
 10092  00A5  07CD               	line	591
 10093                           	goto	i1l231
 10094  00A6  28AF               	line	592
 10095                           	
 10096                           i1l229:	
 10097  00A7                     	line	594
 10098                           	
 10099                           i1l4553:	
 10100  00A7                     	movlw	low(03h)
 10101  00A7  3003               	movwf	(??_myint+0)+0
 10102  00A8  00A4               	movf	(??_myint+0)+0,w
 10103  00A9  0824               	movlb 1	; select bank1
 10104  00AA  0021               	movwf	(_gErrorCode)^080h
 10105  00AB  00E3               	goto	i1l231
 10106  00AC  28AF               	line	595
 10107                           	
 10108                           i1l230:	
 10109  00AD                     	goto	i1l231
 10110  00AD  28AF               	line	596
 10111                           	
 10112                           i1l228:	
 10113  00AE                     	goto	i1l231
 10114  00AE  28AF               	line	598
 10115                           	
 10116                           i1l224:	
 10117  00AF                     	line	599
 10118                           	
 10119                           i1l231:	
 10120  00AF                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
 10121  00AF  107E               	retfie
 10122  00B0  0009               	opt stack 0
 10123                           GLOBAL	__end_of_myint
 10124                           	__end_of_myint:
 10125  00B1                     	signat	_myint,89
 10126                           	global	i1_lcdWriteText
 10127                           
 10128 ;; *************** function i1_lcdWriteText *****************
 10129 ;; Defined at:
 10130 ;;		line 63 in file "LCD_hd44780u_qy_2004a.c"
 10131 ;; Parameters:    Size  Location     Type
 10132 ;;  iText           2    0[BANK0 ] PTR unsigned char 
 10133 ;;		 -> myint@wText(2), wInterruptText(75), 
 10134 ;; Auto vars:     Size  Location     Type
 10135 ;;  lcdWriteText    1   13[COMMON] unsigned char 
 10136 ;; Return value:  Size  Location     Type
 10137 ;;                  1    wreg      void 
 10138 ;; Registers used:
 10139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10140 ;; Tracked objects:
 10141 ;;		On entry : 0/0
 10142 ;;		On exit  : 0/0
 10143 ;;		Unchanged: 0/0
 10144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10145 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10146 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10147 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10148 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 10149 ;;Total ram usage:        5 bytes
 10150 ;; Hardware stack levels used:    1
 10151 ;; Hardware stack levels required when called:    4
 10152 ;; This function calls:
 10153 ;;		i1_writeTxtChk
 10154 ;; This function is called by:
 10155 ;;		_myint
 10156 ;; This function uses a non-reentrant model
 10157 ;;
 10158                           psect	text35,local,class=CODE,delta=2,merge=1,group=0
 10159                           	file	"LCD_hd44780u_qy_2004a.c"
 10160                           	line	63
 10161                           global __ptext35
 10162                           __ptext35:	;psect for function i1_lcdWriteText
 10163  0ADB                     psect	text35
 10164                           	file	"LCD_hd44780u_qy_2004a.c"
 10165                           	line	63
 10166                           	global	__size_ofi1_lcdWriteText
 10167                           	__size_ofi1_lcdWriteText	equ	__end_ofi1_lcdWriteText-i1_lcdWriteText
 10168  0027                     	
 10169                           i1_lcdWriteText:	
 10170  0ADB                     ;incstack = 0
 10171                           	opt	stack 4
 10172                           ; Regs used in i1_lcdWriteText: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10173                           	line	65
 10174                           	
 10175                           i1l4227:	
 10176  0ADB                     ;LCD_hd44780u_qy_2004a.c: 63: void lcdWriteText(char *iText);LCD_hd44780u_qy_2004a.c: 64
                                 :  {;LCD_hd44780u_qy_2004a.c: 65:   unsigned char wCharReadingPos = 0;
 10177                           	clrf	(i1lcdWriteText@wCharReadingPos)
 10178  0ADB  01FD               	line	66
 10179                           ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
 10180                           	goto	i1l4233
 10181  0ADC  2AF1               	
 10182                           i1l276:	
 10183  0ADD                     	line	68
 10184                           	
 10185                           i1l4229:	
 10186  0ADD                     ;LCD_hd44780u_qy_2004a.c: 67:   {;LCD_hd44780u_qy_2004a.c: 68:     writeTxtChk(iText[wCh
                                 arReadingPos]);
 10187                           	movf	(i1lcdWriteText@wCharReadingPos),w
 10188  0ADD  087D               	movlb 0	; select bank0
 10189  0ADE  0020               	movwf	(??i1_lcdWriteText+0)+0
 10190  0ADF  00A2               	clrf	(??i1_lcdWriteText+0)+0+1
 10191  0AE0  01A3               	movf	0+(??i1_lcdWriteText+0)+0,w
 10192  0AE1  0822               	addwf	(i1lcdWriteText@iText),w
 10193  0AE2  0720               	movwf	fsr1l
 10194  0AE3  0086               	movf	1+(??i1_lcdWriteText+0)+0,w
 10195  0AE4  0823               	addwfc	(i1lcdWriteText@iText+1),w
 10196  0AE5  3D21               	movwf	1+fsr1l
 10197  0AE6  0087               	movf	indf1,w
 10198  0AE7  0801               	fcall	i1_writeTxtChk
 10199  0AE8  318E  26D9  318A   	line	69
 10200                           	
 10201                           i1l4231:	
 10202  0AEB                     ;LCD_hd44780u_qy_2004a.c: 69:     wCharReadingPos++;
 10203                           	movlw	low(01h)
 10204  0AEB  3001               	movlb 0	; select bank0
 10205  0AEC  0020               	movwf	(??i1_lcdWriteText+0)+0
 10206  0AED  00A2               	movf	(??i1_lcdWriteText+0)+0,w
 10207  0AEE  0822               	addwf	(i1lcdWriteText@wCharReadingPos),f
 10208  0AEF  07FD               	goto	i1l4233
 10209  0AF0  2AF1               	line	70
 10210                           ;LCD_hd44780u_qy_2004a.c: 70:   }
 10211                           	
 10212                           i1l275:	
 10213  0AF1                     	line	66
 10214                           	
 10215                           i1l4233:	
 10216  0AF1                     ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
 10217                           	movf	(i1lcdWriteText@wCharReadingPos),w
 10218  0AF1  087D               	movlb 0	; select bank0
 10219  0AF2  0020               	movwf	(??i1_lcdWriteText+0)+0
 10220  0AF3  00A2               	clrf	(??i1_lcdWriteText+0)+0+1
 10221  0AF4  01A3               	movf	0+(??i1_lcdWriteText+0)+0,w
 10222  0AF5  0822               	addwf	(i1lcdWriteText@iText),w
 10223  0AF6  0720               	movwf	fsr1l
 10224  0AF7  0086               	movf	1+(??i1_lcdWriteText+0)+0,w
 10225  0AF8  0823               	addwfc	(i1lcdWriteText@iText+1),w
 10226  0AF9  3D21               	movwf	1+fsr1l
 10227  0AFA  0087               	movf	(indf1),w
 10228  0AFB  0801               	btfss	status,2
 10229  0AFC  1D03               	goto	u292_21
 10230  0AFD  2AFF               	goto	u292_20
 10231  0AFE  2B00               u292_21:
 10232  0AFF                     	goto	i1l4229
 10233  0AFF  2ADD               u292_20:
 10234  0B00                     	goto	i1l278
 10235  0B00  2B01               	
 10236                           i1l277:	
 10237  0B01                     	line	72
 10238                           	
 10239                           i1l278:	
 10240  0B01                     	return
 10241  0B01  0008               	opt stack 0
 10242                           GLOBAL	__end_ofi1_lcdWriteText
 10243                           	__end_ofi1_lcdWriteText:
 10244  0B02                     	signat	i1_lcdWriteText,89
 10245                           	global	i1_writeTxtChk
 10246                           
 10247 ;; *************** function i1_writeTxtChk *****************
 10248 ;; Defined at:
 10249 ;;		line 101 in file "LCD_hd44780u_qy_2004a.c"
 10250 ;; Parameters:    Size  Location     Type
 10251 ;;  iOpCode         1    wreg     unsigned char 
 10252 ;; Auto vars:     Size  Location     Type
 10253 ;;  iOpCode         1   12[COMMON] unsigned char 
 10254 ;; Return value:  Size  Location     Type
 10255 ;;                  1    wreg      void 
 10256 ;; Registers used:
 10257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10258 ;; Tracked objects:
 10259 ;;		On entry : 0/0
 10260 ;;		On exit  : 0/0
 10261 ;;		Unchanged: 0/0
 10262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10264 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10265 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10266 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10267 ;;Total ram usage:        3 bytes
 10268 ;; Hardware stack levels used:    1
 10269 ;; Hardware stack levels required when called:    3
 10270 ;; This function calls:
 10271 ;;		i1_SetToSendDataToLCD
 10272 ;;		i1_setCursorPosition
 10273 ;;		i1_setData
 10274 ;;		i1_waitLCDBusy
 10275 ;; This function is called by:
 10276 ;;		i1_lcdWriteText
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
 10280                           	line	101
 10281                           global __ptext36
 10282                           __ptext36:	;psect for function i1_writeTxtChk
 10283  0ED9                     psect	text36
 10284                           	file	"LCD_hd44780u_qy_2004a.c"
 10285                           	line	101
 10286                           	global	__size_ofi1_writeTxtChk
 10287                           	__size_ofi1_writeTxtChk	equ	__end_ofi1_writeTxtChk-i1_writeTxtChk
 10288  0090                     	
 10289                           i1_writeTxtChk:	
 10290  0ED9                     ;incstack = 0
 10291                           	opt	stack 4
 10292                           ; Regs used in i1_writeTxtChk: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10293                           ;i1writeTxtChk@iOpCode stored from wreg
 10294                           	movwf	(i1writeTxtChk@iOpCode)
 10295  0ED9  00FC               	line	103
 10296                           	
 10297                           i1l4041:	
 10298  0EDA                     ;LCD_hd44780u_qy_2004a.c: 101: void writeTxtChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 02: {;LCD_hd44780u_qy_2004a.c: 103:   SetToSendDataToLCD();
 10299                           	fcall	i1_SetToSendDataToLCD
 10300  0EDA  3189  217A  318E   	line	104
 10301                           	
 10302                           i1l4043:	
 10303  0EDD                     ;LCD_hd44780u_qy_2004a.c: 104:   PORTAbits.RA0 = 1;
 10304                           	movlb 0	; select bank0
 10305  0EDD  0020               	bsf	(12),0	;volatile
 10306  0EDE  140C               	line	105
 10307                           	
 10308                           i1l4045:	
 10309  0EDF                     ;LCD_hd44780u_qy_2004a.c: 105:   PORTAbits.RA1 = 0;
 10310                           	bcf	(12),1	;volatile
 10311  0EDF  108C               	line	106
 10312                           	
 10313                           i1l4047:	
 10314  0EE0                     ;LCD_hd44780u_qy_2004a.c: 106:   if(iOpCode == '\n')
 10315                           		movlw	10
 10316  0EE0  300A               	xorwf	((i1writeTxtChk@iOpCode)),w
 10317  0EE1  067C               	btfss	status,2
 10318  0EE2  1D03               	goto	u273_21
 10319  0EE3  2EE5               	goto	u273_20
 10320  0EE4  2EE6               u273_21:
 10321  0EE5                     	goto	i1l4077
 10322  0EE5  2F33               u273_20:
 10323  0EE6                     	line	108
 10324                           	
 10325                           i1l4049:	
 10326  0EE6                     ;LCD_hd44780u_qy_2004a.c: 107:   {;LCD_hd44780u_qy_2004a.c: 108:    if(mWritingPosition 
                                 < 20)
 10327                           	movlw	low(014h)
 10328  0EE6  3014               	subwf	(_mWritingPosition),w
 10329  0EE7  025B               	skipnc
 10330  0EE8  1803               	goto	u274_21
 10331  0EE9  2EEB               	goto	u274_20
 10332  0EEA  2EEC               u274_21:
 10333  0EEB                     	goto	i1l4053
 10334  0EEB  2EF2               u274_20:
 10335  0EEC                     	line	110
 10336                           	
 10337                           i1l4051:	
 10338  0EEC                     ;LCD_hd44780u_qy_2004a.c: 109:    {;LCD_hd44780u_qy_2004a.c: 110:        setCursorPositi
                                 on(1,0);
 10339                           	clrf	(i1setCursorPosition@iPosition)
 10340  0EEC  01F5               	movlw	low(01h)
 10341  0EED  3001               	fcall	i1_setCursorPosition
 10342  0EEE  318E  2613  318E   	line	111
 10343                           ;LCD_hd44780u_qy_2004a.c: 111:    }
 10344                           	goto	i1l300
 10345  0EF1  2F68               	line	112
 10346                           ;LCD_hd44780u_qy_2004a.c: 112:    else if(mWritingPosition < 40)
 10347                           	
 10348                           i1l294:	
 10349  0EF2                     	
 10350                           i1l4053:	
 10351  0EF2                     	movlw	low(028h)
 10352  0EF2  3028               	movlb 0	; select bank0
 10353  0EF3  0020               	subwf	(_mWritingPosition),w
 10354  0EF4  025B               	skipnc
 10355  0EF5  1803               	goto	u275_21
 10356  0EF6  2EF8               	goto	u275_20
 10357  0EF7  2EF9               u275_21:
 10358  0EF8                     	goto	i1l4057
 10359  0EF8  2EFF               u275_20:
 10360  0EF9                     	line	114
 10361                           	
 10362                           i1l4055:	
 10363  0EF9                     ;LCD_hd44780u_qy_2004a.c: 113:    {;LCD_hd44780u_qy_2004a.c: 114:        setCursorPositi
                                 on(2,0);
 10364                           	clrf	(i1setCursorPosition@iPosition)
 10365  0EF9  01F5               	movlw	low(02h)
 10366  0EFA  3002               	fcall	i1_setCursorPosition
 10367  0EFB  318E  2613  318E   	line	115
 10368                           ;LCD_hd44780u_qy_2004a.c: 115:    }
 10369                           	goto	i1l300
 10370  0EFE  2F68               	line	116
 10371                           ;LCD_hd44780u_qy_2004a.c: 116:    else if(mWritingPosition < 60)
 10372                           	
 10373                           i1l296:	
 10374  0EFF                     	
 10375                           i1l4057:	
 10376  0EFF                     	movlw	low(03Ch)
 10377  0EFF  303C               	movlb 0	; select bank0
 10378  0F00  0020               	subwf	(_mWritingPosition),w
 10379  0F01  025B               	skipnc
 10380  0F02  1803               	goto	u276_21
 10381  0F03  2F05               	goto	u276_20
 10382  0F04  2F06               u276_21:
 10383  0F05                     	goto	i1l4061
 10384  0F05  2F0C               u276_20:
 10385  0F06                     	line	118
 10386                           	
 10387                           i1l4059:	
 10388  0F06                     ;LCD_hd44780u_qy_2004a.c: 117:    {;LCD_hd44780u_qy_2004a.c: 118:        setCursorPositi
                                 on(3,0);
 10389                           	clrf	(i1setCursorPosition@iPosition)
 10390  0F06  01F5               	movlw	low(03h)
 10391  0F07  3003               	fcall	i1_setCursorPosition
 10392  0F08  318E  2613  318E   	line	119
 10393                           ;LCD_hd44780u_qy_2004a.c: 119:    }
 10394                           	goto	i1l300
 10395  0F0B  2F68               	line	120
 10396                           ;LCD_hd44780u_qy_2004a.c: 120:    else
 10397                           	
 10398                           i1l298:	
 10399  0F0C                     	line	122
 10400                           	
 10401                           i1l4061:	
 10402  0F0C                     ;LCD_hd44780u_qy_2004a.c: 121:    {;LCD_hd44780u_qy_2004a.c: 122:        setCursorPositi
                                 on(0,0);
 10403                           	clrf	(i1setCursorPosition@iPosition)
 10404  0F0C  01F5               	movlw	low(0)
 10405  0F0D  3000               	fcall	i1_setCursorPosition
 10406  0F0E  318E  2613  318E   	goto	i1l300
 10407  0F11  2F68               	line	123
 10408                           ;LCD_hd44780u_qy_2004a.c: 123:    }
 10409                           	
 10410                           i1l299:	
 10411  0F12                     	goto	i1l300
 10412  0F12  2F68               	
 10413                           i1l297:	
 10414  0F13                     	goto	i1l300
 10415  0F13  2F68               	
 10416                           i1l295:	
 10417  0F14                     	goto	i1l300
 10418  0F14  2F68               	line	124
 10419                           	
 10420                           i1l4063:	
 10421  0F15                     ;LCD_hd44780u_qy_2004a.c: 124:    return;
 10422                           	goto	i1l300
 10423  0F15  2F68               	line	125
 10424                           ;LCD_hd44780u_qy_2004a.c: 125:   }
 10425                           	
 10426                           i1l293:	
 10427  0F16                     	line	126
 10428                           ;LCD_hd44780u_qy_2004a.c: 126:   switch(mWritingPosition)
 10429                           	goto	i1l4077
 10430  0F16  2F33               	line	128
 10431                           ;LCD_hd44780u_qy_2004a.c: 127:   {;LCD_hd44780u_qy_2004a.c: 128:     case 20:
 10432                           	
 10433                           i1l302:	
 10434  0F17                     	line	129
 10435                           	
 10436                           i1l4065:	
 10437  0F17                     ;LCD_hd44780u_qy_2004a.c: 129:       setCursorPosition(1,0);
 10438                           	clrf	(i1setCursorPosition@iPosition)
 10439  0F17  01F5               	movlw	low(01h)
 10440  0F18  3001               	fcall	i1_setCursorPosition
 10441  0F19  318E  2613  318E   	line	130
 10442                           ;LCD_hd44780u_qy_2004a.c: 130:       break;
 10443                           	goto	i1l4079
 10444  0F1C  2F4A               	line	131
 10445                           ;LCD_hd44780u_qy_2004a.c: 131:     case 40:
 10446                           	
 10447                           i1l304:	
 10448  0F1D                     	line	132
 10449                           	
 10450                           i1l4067:	
 10451  0F1D                     ;LCD_hd44780u_qy_2004a.c: 132:       setCursorPosition(2,0);
 10452                           	clrf	(i1setCursorPosition@iPosition)
 10453  0F1D  01F5               	movlw	low(02h)
 10454  0F1E  3002               	fcall	i1_setCursorPosition
 10455  0F1F  318E  2613  318E   	line	133
 10456                           ;LCD_hd44780u_qy_2004a.c: 133:       break;
 10457                           	goto	i1l4079
 10458  0F22  2F4A               	line	134
 10459                           ;LCD_hd44780u_qy_2004a.c: 134:     case 60:
 10460                           	
 10461                           i1l305:	
 10462  0F23                     	line	135
 10463                           	
 10464                           i1l4069:	
 10465  0F23                     ;LCD_hd44780u_qy_2004a.c: 135:       setCursorPosition(3,0);
 10466                           	clrf	(i1setCursorPosition@iPosition)
 10467  0F23  01F5               	movlw	low(03h)
 10468  0F24  3003               	fcall	i1_setCursorPosition
 10469  0F25  318E  2613  318E   	line	136
 10470                           ;LCD_hd44780u_qy_2004a.c: 136:       break;
 10471                           	goto	i1l4079
 10472  0F28  2F4A               	line	137
 10473                           ;LCD_hd44780u_qy_2004a.c: 137:     case 80:
 10474                           	
 10475                           i1l306:	
 10476  0F29                     	line	138
 10477                           	
 10478                           i1l4071:	
 10479  0F29                     ;LCD_hd44780u_qy_2004a.c: 138:       setCursorPosition(0,0);
 10480                           	clrf	(i1setCursorPosition@iPosition)
 10481  0F29  01F5               	movlw	low(0)
 10482  0F2A  3000               	fcall	i1_setCursorPosition
 10483  0F2B  318E  2613  318E   	line	139
 10484                           	
 10485                           i1l4073:	
 10486  0F2E                     ;LCD_hd44780u_qy_2004a.c: 139:       mWritingPosition = 0;
 10487                           	movlb 0	; select bank0
 10488  0F2E  0020               	clrf	(_mWritingPosition)
 10489  0F2F  01DB               	line	140
 10490                           ;LCD_hd44780u_qy_2004a.c: 140:       break;
 10491                           	goto	i1l4079
 10492  0F30  2F4A               	line	141
 10493                           ;LCD_hd44780u_qy_2004a.c: 141:     default:
 10494                           	
 10495                           i1l307:	
 10496  0F31                     	line	142
 10497                           ;LCD_hd44780u_qy_2004a.c: 142:       break;
 10498                           	goto	i1l4079
 10499  0F31  2F4A               	line	143
 10500                           	
 10501                           i1l4075:	
 10502  0F32                     ;LCD_hd44780u_qy_2004a.c: 143:   }
 10503                           	goto	i1l4079
 10504  0F32  2F4A               	
 10505                           i1l301:	
 10506  0F33                     	
 10507                           i1l4077:	
 10508  0F33                     	movlb 0	; select bank0
 10509  0F33  0020               	movf	(_mWritingPosition),w
 10510  0F34  085B               	movwf	(??i1_writeTxtChk+0)+0
 10511  0F35  00FA               	clrf	(??i1_writeTxtChk+0)+0+1
 10512  0F36  01FB               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 10513                           ; Switch size 1, requested type "space"
 10514                           ; Number of cases is 1, Range of values is 0 to 0
 10515                           ; switch strategies available:
 10516                           ; Name         Instructions Cycles
 10517                           ; simple_byte            4     3 (average)
 10518                           ; direct_byte            8     6 (fixed)
 10519                           ; jumptable            260     6 (fixed)
 10520                           ;	Chosen strategy is simple_byte
 10521                           
 10522                           	movf 1+(??i1_writeTxtChk+0)+0,w
 10523  0F37  087B               	opt asmopt_push
 10524                           	opt asmopt_off
 10525                           	xorlw	0^0	; case 0
 10526  0F38  3A00               	skipnz
 10527  0F39  1903               	goto	i1l4747
 10528  0F3A  2F3C               	goto	i1l4079
 10529  0F3B  2F4A               	opt asmopt_pop
 10530                           	
 10531                           i1l4747:	
 10532  0F3C                     ; Switch size 1, requested type "space"
 10533                           ; Number of cases is 4, Range of values is 20 to 80
 10534                           ; switch strategies available:
 10535                           ; Name         Instructions Cycles
 10536                           ; simple_byte           13     7 (average)
 10537                           ; direct_byte          131     9 (fixed)
 10538                           ; jumptable            263     9 (fixed)
 10539                           ;	Chosen strategy is simple_byte
 10540                           
 10541                           	movf 0+(??i1_writeTxtChk+0)+0,w
 10542  0F3C  087A               	opt asmopt_push
 10543                           	opt asmopt_off
 10544                           	xorlw	20^0	; case 20
 10545  0F3D  3A14               	skipnz
 10546  0F3E  1903               	goto	i1l4065
 10547  0F3F  2F17               	xorlw	40^20	; case 40
 10548  0F40  3A3C               	skipnz
 10549  0F41  1903               	goto	i1l4067
 10550  0F42  2F1D               	xorlw	60^40	; case 60
 10551  0F43  3A14               	skipnz
 10552  0F44  1903               	goto	i1l4069
 10553  0F45  2F23               	xorlw	80^60	; case 80
 10554  0F46  3A6C               	skipnz
 10555  0F47  1903               	goto	i1l4071
 10556  0F48  2F29               	goto	i1l4079
 10557  0F49  2F4A               	opt asmopt_pop
 10558                           
 10559                           	
 10560                           i1l303:	
 10561  0F4A                     	line	144
 10562                           	
 10563                           i1l4079:	
 10564  0F4A                     ;LCD_hd44780u_qy_2004a.c: 144:   waitLCDBusy();
 10565                           	fcall	i1_waitLCDBusy
 10566  0F4A  318B  232D  318E   	line	145
 10567                           	
 10568                           i1l4081:	
 10569  0F4D                     ;LCD_hd44780u_qy_2004a.c: 145:   SetToSendDataToLCD();
 10570                           	fcall	i1_SetToSendDataToLCD
 10571  0F4D  3189  217A  318E   	line	146
 10572                           	
 10573                           i1l4083:	
 10574  0F50                     ;LCD_hd44780u_qy_2004a.c: 146:   PORTAbits.RA0 = 1;
 10575                           	movlb 0	; select bank0
 10576  0F50  0020               	bsf	(12),0	;volatile
 10577  0F51  140C               	line	147
 10578                           	
 10579                           i1l4085:	
 10580  0F52                     ;LCD_hd44780u_qy_2004a.c: 147:   PORTAbits.RA1 = 0;
 10581                           	bcf	(12),1	;volatile
 10582  0F52  108C               	line	148
 10583                           	
 10584                           i1l4087:	
 10585  0F53                     ;LCD_hd44780u_qy_2004a.c: 148:   setData(iOpCode >> 4);
 10586                           	movf	(i1writeTxtChk@iOpCode),w
 10587  0F53  087C               	movwf	(??i1_writeTxtChk+0)+0
 10588  0F54  00FA               	movlw	04h
 10589  0F55  3004               u277_25:
 10590  0F56                     	lsrf	(??i1_writeTxtChk+0)+0,f
 10591  0F56  36FA               	decfsz	wreg,f
 10592  0F57  0B89               	goto	u277_25
 10593  0F58  2F56               	movf	0+(??i1_writeTxtChk+0)+0,w
 10594  0F59  087A               	fcall	i1_setData
 10595  0F5A  318C  2453  318E   	line	149
 10596                           	
 10597                           i1l4089:	
 10598  0F5D                     ;LCD_hd44780u_qy_2004a.c: 149:   setData(iOpCode);
 10599                           	movf	(i1writeTxtChk@iOpCode),w
 10600  0F5D  087C               	fcall	i1_setData
 10601  0F5E  318C  2453  318E   	line	150
 10602                           	
 10603                           i1l4091:	
 10604  0F61                     ;LCD_hd44780u_qy_2004a.c: 150:   _delay((unsigned long)((1)*(16000000/4000000.0)));
 10605                           		opt asmopt_push
 10606                           	opt asmopt_off
 10607                           	nop2	;2 cycle nop
 10608  0F61  3200               	nop2	;2 cycle nop
 10609  0F62  3200               	opt asmopt_pop
 10610                           
 10611                           	line	151
 10612                           	
 10613                           i1l4093:	
 10614  0F63                     ;LCD_hd44780u_qy_2004a.c: 151:   mWritingPosition++;
 10615                           	movlw	low(01h)
 10616  0F63  3001               	movwf	(??i1_writeTxtChk+0)+0
 10617  0F64  00FA               	movf	(??i1_writeTxtChk+0)+0,w
 10618  0F65  087A               	movlb 0	; select bank0
 10619  0F66  0020               	addwf	(_mWritingPosition),f
 10620  0F67  07DB               	line	152
 10621                           	
 10622                           i1l300:	
 10623  0F68                     	return
 10624  0F68  0008               	opt stack 0
 10625                           GLOBAL	__end_ofi1_writeTxtChk
 10626                           	__end_ofi1_writeTxtChk:
 10627  0F69                     	signat	i1_writeTxtChk,89
 10628                           	global	i1_setCursorPosition
 10629                           
 10630 ;; *************** function i1_setCursorPosition *****************
 10631 ;; Defined at:
 10632 ;;		line 276 in file "LCD_hd44780u_qy_2004a.c"
 10633 ;; Parameters:    Size  Location     Type
 10634 ;;  iLine           1    wreg     unsigned char 
 10635 ;;  iPosition       1    5[COMMON] unsigned char 
 10636 ;; Auto vars:     Size  Location     Type
 10637 ;;  iLine           1    8[COMMON] unsigned char 
 10638 ;;  setCursorPos    1    9[COMMON] unsigned char 
 10639 ;; Return value:  Size  Location     Type
 10640 ;;                  1    wreg      void 
 10641 ;; Registers used:
 10642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10643 ;; Tracked objects:
 10644 ;;		On entry : 0/0
 10645 ;;		On exit  : 0/0
 10646 ;;		Unchanged: 0/0
 10647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10648 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10649 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10650 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10651 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10652 ;;Total ram usage:        5 bytes
 10653 ;; Hardware stack levels used:    1
 10654 ;; Hardware stack levels required when called:    2
 10655 ;; This function calls:
 10656 ;;		i1_SetToSendDataToLCD
 10657 ;;		i1_setData
 10658 ;;		i1_waitLCDBusy
 10659 ;; This function is called by:
 10660 ;;		i1_writeTxtChk
 10661 ;; This function uses a non-reentrant model
 10662 ;;
 10663                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
 10664                           	line	276
 10665                           global __ptext37
 10666                           __ptext37:	;psect for function i1_setCursorPosition
 10667  0E13                     psect	text37
 10668                           	file	"LCD_hd44780u_qy_2004a.c"
 10669                           	line	276
 10670                           	global	__size_ofi1_setCursorPosition
 10671                           	__size_ofi1_setCursorPosition	equ	__end_ofi1_setCursorPosition-i1_setCursorPosition
 10672  0062                     	
 10673                           i1_setCursorPosition:	
 10674  0E13                     ;incstack = 0
 10675                           	opt	stack 4
 10676                           ; Regs used in i1_setCursorPosition: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10677                           ;i1setCursorPosition@iLine stored from wreg
 10678                           	movwf	(i1setCursorPosition@iLine)
 10679  0E13  00F8               	line	278
 10680                           	
 10681                           i1l3887:	
 10682  0E14                     ;LCD_hd44780u_qy_2004a.c: 276: void setCursorPosition(char iLine, char iPosition);LCD_hd
                                 44780u_qy_2004a.c: 277: {;LCD_hd44780u_qy_2004a.c: 278:   char wLCDIndex=0;
 10683                           	clrf	(i1setCursorPosition@wLCDIndex)
 10684  0E14  01F9               	line	280
 10685                           ;LCD_hd44780u_qy_2004a.c: 280:   switch(iLine)
 10686                           	goto	i1l3899
 10687  0E15  2E46               	line	282
 10688                           ;LCD_hd44780u_qy_2004a.c: 281:   {;LCD_hd44780u_qy_2004a.c: 282:       case 0:
 10689                           	
 10690                           i1l371:	
 10691  0E16                     	line	283
 10692                           	
 10693                           i1l3889:	
 10694  0E16                     ;LCD_hd44780u_qy_2004a.c: 283:           wLCDIndex = 0x00 + iPosition;
 10695                           	movf	(i1setCursorPosition@iPosition),w
 10696  0E16  0875               	movwf	(??i1_setCursorPosition+0)+0
 10697  0E17  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 10698  0E18  0876               	movwf	(i1setCursorPosition@wLCDIndex)
 10699  0E19  00F9               	line	284
 10700                           ;LCD_hd44780u_qy_2004a.c: 284:           mWritingPosition = iPosition;
 10701                           	movf	(i1setCursorPosition@iPosition),w
 10702  0E1A  0875               	movwf	(??i1_setCursorPosition+0)+0
 10703  0E1B  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 10704  0E1C  0876               	movlb 0	; select bank0
 10705  0E1D  0020               	movwf	(_mWritingPosition)
 10706  0E1E  00DB               	line	285
 10707                           ;LCD_hd44780u_qy_2004a.c: 285:           break;
 10708                           	goto	i1l3901
 10709  0E1F  2E5C               	line	286
 10710                           ;LCD_hd44780u_qy_2004a.c: 286:       case 1:
 10711                           	
 10712                           i1l373:	
 10713  0E20                     	line	287
 10714                           	
 10715                           i1l3891:	
 10716  0E20                     ;LCD_hd44780u_qy_2004a.c: 287:           wLCDIndex = 0x40 + iPosition;
 10717                           	movf	(i1setCursorPosition@iPosition),w
 10718  0E20  0875               	addlw	040h
 10719  0E21  3E40               	movwf	(??i1_setCursorPosition+0)+0
 10720  0E22  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 10721  0E23  0876               	movwf	(i1setCursorPosition@wLCDIndex)
 10722  0E24  00F9               	line	288
 10723                           ;LCD_hd44780u_qy_2004a.c: 288:           mWritingPosition = 20 + iPosition;
 10724                           	movf	(i1setCursorPosition@iPosition),w
 10725  0E25  0875               	addlw	014h
 10726  0E26  3E14               	movwf	(??i1_setCursorPosition+0)+0
 10727  0E27  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 10728  0E28  0876               	movlb 0	; select bank0
 10729  0E29  0020               	movwf	(_mWritingPosition)
 10730  0E2A  00DB               	line	289
 10731                           ;LCD_hd44780u_qy_2004a.c: 289:           break;
 10732                           	goto	i1l3901
 10733  0E2B  2E5C               	line	290
 10734                           ;LCD_hd44780u_qy_2004a.c: 290:       case 2:
 10735                           	
 10736                           i1l374:	
 10737  0E2C                     	line	291
 10738                           	
 10739                           i1l3893:	
 10740  0E2C                     ;LCD_hd44780u_qy_2004a.c: 291:           wLCDIndex = 0x14 + iPosition;
 10741                           	movf	(i1setCursorPosition@iPosition),w
 10742  0E2C  0875               	addlw	014h
 10743  0E2D  3E14               	movwf	(??i1_setCursorPosition+0)+0
 10744  0E2E  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 10745  0E2F  0876               	movwf	(i1setCursorPosition@wLCDIndex)
 10746  0E30  00F9               	line	292
 10747                           ;LCD_hd44780u_qy_2004a.c: 292:           mWritingPosition = 40 + iPosition;
 10748                           	movf	(i1setCursorPosition@iPosition),w
 10749  0E31  0875               	addlw	028h
 10750  0E32  3E28               	movwf	(??i1_setCursorPosition+0)+0
 10751  0E33  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 10752  0E34  0876               	movlb 0	; select bank0
 10753  0E35  0020               	movwf	(_mWritingPosition)
 10754  0E36  00DB               	line	293
 10755                           ;LCD_hd44780u_qy_2004a.c: 293:           break;
 10756                           	goto	i1l3901
 10757  0E37  2E5C               	line	294
 10758                           ;LCD_hd44780u_qy_2004a.c: 294:       case 3:
 10759                           	
 10760                           i1l375:	
 10761  0E38                     	line	295
 10762                           	
 10763                           i1l3895:	
 10764  0E38                     ;LCD_hd44780u_qy_2004a.c: 295:           wLCDIndex = 0x54 + iPosition;
 10765                           	movf	(i1setCursorPosition@iPosition),w
 10766  0E38  0875               	addlw	054h
 10767  0E39  3E54               	movwf	(??i1_setCursorPosition+0)+0
 10768  0E3A  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 10769  0E3B  0876               	movwf	(i1setCursorPosition@wLCDIndex)
 10770  0E3C  00F9               	line	296
 10771                           ;LCD_hd44780u_qy_2004a.c: 296:           mWritingPosition = 60 + iPosition;
 10772                           	movf	(i1setCursorPosition@iPosition),w
 10773  0E3D  0875               	addlw	03Ch
 10774  0E3E  3E3C               	movwf	(??i1_setCursorPosition+0)+0
 10775  0E3F  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 10776  0E40  0876               	movlb 0	; select bank0
 10777  0E41  0020               	movwf	(_mWritingPosition)
 10778  0E42  00DB               	line	297
 10779                           ;LCD_hd44780u_qy_2004a.c: 297:           break;
 10780                           	goto	i1l3901
 10781  0E43  2E5C               	line	298
 10782                           ;LCD_hd44780u_qy_2004a.c: 298:       default:
 10783                           	
 10784                           i1l376:	
 10785  0E44                     	line	299
 10786                           ;LCD_hd44780u_qy_2004a.c: 299:       break;
 10787                           	goto	i1l3901
 10788  0E44  2E5C               	line	300
 10789                           	
 10790                           i1l3897:	
 10791  0E45                     ;LCD_hd44780u_qy_2004a.c: 300:   }
 10792                           	goto	i1l3901
 10793  0E45  2E5C               	
 10794                           i1l370:	
 10795  0E46                     	
 10796                           i1l3899:	
 10797  0E46                     	movf	(i1setCursorPosition@iLine),w
 10798  0E46  0878               	movwf	(??i1_setCursorPosition+0)+0
 10799  0E47  00F6               	clrf	(??i1_setCursorPosition+0)+0+1
 10800  0E48  01F7               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 10801                           ; Switch size 1, requested type "space"
 10802                           ; Number of cases is 1, Range of values is 0 to 0
 10803                           ; switch strategies available:
 10804                           ; Name         Instructions Cycles
 10805                           ; simple_byte            4     3 (average)
 10806                           ; direct_byte            8     6 (fixed)
 10807                           ; jumptable            260     6 (fixed)
 10808                           ;	Chosen strategy is simple_byte
 10809                           
 10810                           	movf 1+(??i1_setCursorPosition+0)+0,w
 10811  0E49  0877               	opt asmopt_push
 10812                           	opt asmopt_off
 10813                           	xorlw	0^0	; case 0
 10814  0E4A  3A00               	skipnz
 10815  0E4B  1903               	goto	i1l4749
 10816  0E4C  2E4E               	goto	i1l3901
 10817  0E4D  2E5C               	opt asmopt_pop
 10818                           	
 10819                           i1l4749:	
 10820  0E4E                     ; Switch size 1, requested type "space"
 10821                           ; Number of cases is 4, Range of values is 0 to 3
 10822                           ; switch strategies available:
 10823                           ; Name         Instructions Cycles
 10824                           ; simple_byte           13     7 (average)
 10825                           ; direct_byte           14     6 (fixed)
 10826                           ; jumptable            260     6 (fixed)
 10827                           ;	Chosen strategy is simple_byte
 10828                           
 10829                           	movf 0+(??i1_setCursorPosition+0)+0,w
 10830  0E4E  0876               	opt asmopt_push
 10831                           	opt asmopt_off
 10832                           	xorlw	0^0	; case 0
 10833  0E4F  3A00               	skipnz
 10834  0E50  1903               	goto	i1l3889
 10835  0E51  2E16               	xorlw	1^0	; case 1
 10836  0E52  3A01               	skipnz
 10837  0E53  1903               	goto	i1l3891
 10838  0E54  2E20               	xorlw	2^1	; case 2
 10839  0E55  3A03               	skipnz
 10840  0E56  1903               	goto	i1l3893
 10841  0E57  2E2C               	xorlw	3^2	; case 3
 10842  0E58  3A01               	skipnz
 10843  0E59  1903               	goto	i1l3895
 10844  0E5A  2E38               	goto	i1l3901
 10845  0E5B  2E5C               	opt asmopt_pop
 10846                           
 10847                           	
 10848                           i1l372:	
 10849  0E5C                     	line	302
 10850                           	
 10851                           i1l3901:	
 10852  0E5C                     ;LCD_hd44780u_qy_2004a.c: 302:   waitLCDBusy();
 10853                           	fcall	i1_waitLCDBusy
 10854  0E5C  318B  232D  318E   	line	304
 10855                           	
 10856                           i1l3903:	
 10857  0E5F                     ;LCD_hd44780u_qy_2004a.c: 304:   SetToSendDataToLCD();
 10858                           	fcall	i1_SetToSendDataToLCD
 10859  0E5F  3189  217A  318E   	line	305
 10860                           	
 10861                           i1l3905:	
 10862  0E62                     ;LCD_hd44780u_qy_2004a.c: 305:   PORTAbits.RA0 = 0;
 10863                           	movlb 0	; select bank0
 10864  0E62  0020               	bcf	(12),0	;volatile
 10865  0E63  100C               	line	306
 10866                           	
 10867                           i1l3907:	
 10868  0E64                     ;LCD_hd44780u_qy_2004a.c: 306:   PORTAbits.RA1 = 0;
 10869                           	bcf	(12),1	;volatile
 10870  0E64  108C               	line	307
 10871                           	
 10872                           i1l3909:	
 10873  0E65                     ;LCD_hd44780u_qy_2004a.c: 307:   setData((wLCDIndex >> 4) | 0x8 );
 10874                           	movf	(i1setCursorPosition@wLCDIndex),w
 10875  0E65  0879               	movwf	(??i1_setCursorPosition+0)+0
 10876  0E66  00F6               	movlw	04h
 10877  0E67  3004               u258_25:
 10878  0E68                     	lsrf	(??i1_setCursorPosition+0)+0,f
 10879  0E68  36F6               	decfsz	wreg,f
 10880  0E69  0B89               	goto	u258_25
 10881  0E6A  2E68               	movf	0+(??i1_setCursorPosition+0)+0,w
 10882  0E6B  0876               	iorlw	08h
 10883  0E6C  3808               	fcall	i1_setData
 10884  0E6D  318C  2453  318E   	line	308
 10885                           	
 10886                           i1l3911:	
 10887  0E70                     ;LCD_hd44780u_qy_2004a.c: 308:   setData(wLCDIndex);
 10888                           	movf	(i1setCursorPosition@wLCDIndex),w
 10889  0E70  0879               	fcall	i1_setData
 10890  0E71  318C  2453  318E   	line	310
 10891                           	
 10892                           i1l377:	
 10893  0E74                     	return
 10894  0E74  0008               	opt stack 0
 10895                           GLOBAL	__end_ofi1_setCursorPosition
 10896                           	__end_ofi1_setCursorPosition:
 10897  0E75                     	signat	i1_setCursorPosition,89
 10898                           	global	i1_waitLCDBusy
 10899                           
 10900 ;; *************** function i1_waitLCDBusy *****************
 10901 ;; Defined at:
 10902 ;;		line 184 in file "LCD_hd44780u_qy_2004a.c"
 10903 ;; Parameters:    Size  Location     Type
 10904 ;;		None
 10905 ;; Auto vars:     Size  Location     Type
 10906 ;;  waitLCDBusy     2    3[COMMON] int 
 10907 ;; Return value:  Size  Location     Type
 10908 ;;                  1    wreg      void 
 10909 ;; Registers used:
 10910 ;;		wreg, status,2, status,0, pclath, cstack
 10911 ;; Tracked objects:
 10912 ;;		On entry : 0/0
 10913 ;;		On exit  : 0/0
 10914 ;;		Unchanged: 0/0
 10915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10917 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10918 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10919 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10920 ;;Total ram usage:        5 bytes
 10921 ;; Hardware stack levels used:    1
 10922 ;; Hardware stack levels required when called:    1
 10923 ;; This function calls:
 10924 ;;		i1_SetToReadDataFromLCD
 10925 ;; This function is called by:
 10926 ;;		i1_writeTxtChk
 10927 ;;		i1_setCursorPosition
 10928 ;; This function uses a non-reentrant model
 10929 ;;
 10930                           psect	text38,local,class=CODE,delta=2,merge=1,group=0
 10931                           	line	184
 10932                           global __ptext38
 10933                           __ptext38:	;psect for function i1_waitLCDBusy
 10934  0B2D                     psect	text38
 10935                           	file	"LCD_hd44780u_qy_2004a.c"
 10936                           	line	184
 10937                           	global	__size_ofi1_waitLCDBusy
 10938                           	__size_ofi1_waitLCDBusy	equ	__end_ofi1_waitLCDBusy-i1_waitLCDBusy
 10939  002C                     	
 10940                           i1_waitLCDBusy:	
 10941  0B2D                     ;incstack = 0
 10942                           	opt	stack 5
 10943                           ; Regs used in i1_waitLCDBusy: [wreg+status,2+status,0+pclath+cstack]
 10944                           	line	186
 10945                           	
 10946                           i1l3859:	
 10947  0B2D                     ;LCD_hd44780u_qy_2004a.c: 186:   PORTAbits.RA0 = 0;
 10948                           	movlb 0	; select bank0
 10949  0B2D  0020               	bcf	(12),0	;volatile
 10950  0B2E  100C               	line	187
 10951                           ;LCD_hd44780u_qy_2004a.c: 187:   PORTAbits.RA1 = 1;
 10952                           	bsf	(12),1	;volatile
 10953  0B2F  148C               	line	189
 10954                           	
 10955                           i1l3861:	
 10956  0B30                     ;LCD_hd44780u_qy_2004a.c: 189:   SetToReadDataFromLCD();
 10957                           	fcall	i1_SetToReadDataFromLCD
 10958  0B30  3189  2180  318B   	line	191
 10959                           	
 10960                           i1l3863:	
 10961  0B33                     ;LCD_hd44780u_qy_2004a.c: 191:   int busyFlag = 1;
 10962                           	movlw	01h
 10963  0B33  3001               	movwf	(i1waitLCDBusy@busyFlag)
 10964  0B34  00F3               	movlw	0
 10965  0B35  3000               	movwf	((i1waitLCDBusy@busyFlag))+1
 10966  0B36  00F4               	line	192
 10967                           ;LCD_hd44780u_qy_2004a.c: 192:   while(busyFlag == 1)
 10968                           	goto	i1l322
 10969  0B37  2B51               	
 10970                           i1l323:	
 10971  0B38                     	line	195
 10972                           ;LCD_hd44780u_qy_2004a.c: 193:   {;LCD_hd44780u_qy_2004a.c: 195:     PORTAbits.RA2 = 1;

 10973                           	movlb 0	; select bank0
 10974  0B38  0020               	bsf	(12),2	;volatile
 10975  0B39  150C               	line	196
 10976                           ;LCD_hd44780u_qy_2004a.c: 196:     _delay((unsigned long)((1)*(16000000/4000000.0)));
 10977                           		opt asmopt_push
 10978                           	opt asmopt_off
 10979                           	nop2	;2 cycle nop
 10980  0B3A  3200               	nop2	;2 cycle nop
 10981  0B3B  3200               	opt asmopt_pop
 10982                           
 10983                           	line	197
 10984                           	
 10985                           i1l3865:	
 10986  0B3C                     ;LCD_hd44780u_qy_2004a.c: 197:     busyFlag = PORTAbits.RA3;
 10987                           	movlb 0	; select bank0
 10988  0B3C  0020               	rrf	(12),w	;volatile
 10989  0B3D  0C0C               	movwf	(??i1_waitLCDBusy+0)+0
 10990  0B3E  00F0               	rrf	(??i1_waitLCDBusy+0)+0,f
 10991  0B3F  0CF0               	rrf	(??i1_waitLCDBusy+0)+0,w
 10992  0B40  0C70               	andlw	(1<<1)-1
 10993  0B41  3901               	movwf	(??i1_waitLCDBusy+1)+0
 10994  0B42  00F1               	clrf	(??i1_waitLCDBusy+1)+0+1
 10995  0B43  01F2               	movf	0+(??i1_waitLCDBusy+1)+0,w
 10996  0B44  0871               	movwf	(i1waitLCDBusy@busyFlag)
 10997  0B45  00F3               	movf	1+(??i1_waitLCDBusy+1)+0,w
 10998  0B46  0872               	movwf	(i1waitLCDBusy@busyFlag+1)
 10999  0B47  00F4               	line	198
 11000                           	
 11001                           i1l3867:	
 11002  0B48                     ;LCD_hd44780u_qy_2004a.c: 198:     PORTAbits.RA2 = 0;
 11003                           	bcf	(12),2	;volatile
 11004  0B48  110C               	line	199
 11005                           	
 11006                           i1l3869:	
 11007  0B49                     ;LCD_hd44780u_qy_2004a.c: 199:     _delay((unsigned long)((2)*(16000000/4000000.0)));
 11008                           		opt asmopt_push
 11009                           	opt asmopt_off
 11010                           	nop2	;2 cycle nop
 11011  0B49  3200               	nop2	;2 cycle nop
 11012  0B4A  3200               	nop2	;2 cycle nop
 11013  0B4B  3200               	nop2	;2 cycle nop
 11014  0B4C  3200               	opt asmopt_pop
 11015                           
 11016                           	line	201
 11017                           	
 11018                           i1l3871:	
 11019  0B4D                     ;LCD_hd44780u_qy_2004a.c: 201:     PORTAbits.RA2 = 1;
 11020                           	movlb 0	; select bank0
 11021  0B4D  0020               	bsf	(12),2	;volatile
 11022  0B4E  150C               	line	202
 11023                           	
 11024                           i1l3873:	
 11025  0B4F                     ;LCD_hd44780u_qy_2004a.c: 202:     _delay((unsigned long)((1)*(16000000/4000000.0)));
 11026                           		opt asmopt_push
 11027                           	opt asmopt_off
 11028                           	nop2	;2 cycle nop
 11029  0B4F  3200               	nop2	;2 cycle nop
 11030  0B50  3200               	opt asmopt_pop
 11031                           
 11032                           	line	203
 11033                           ;LCD_hd44780u_qy_2004a.c: 203:   }
 11034                           	
 11035                           i1l322:	
 11036  0B51                     	line	192
 11037                           ;LCD_hd44780u_qy_2004a.c: 192:   while(busyFlag == 1)
 11038                           		decf	((i1waitLCDBusy@busyFlag)),w
 11039  0B51  0373               iorwf	((i1waitLCDBusy@busyFlag+1)),w
 11040  0B52  0474               	btfsc	status,2
 11041  0B53  1903               	goto	u256_21
 11042  0B54  2B56               	goto	u256_20
 11043  0B55  2B57               u256_21:
 11044  0B56                     	goto	i1l323
 11045  0B56  2B38               u256_20:
 11046  0B57                     	goto	i1l325
 11047  0B57  2B58               	
 11048                           i1l324:	
 11049  0B58                     	line	204
 11050                           	
 11051                           i1l325:	
 11052  0B58                     	return
 11053  0B58  0008               	opt stack 0
 11054                           GLOBAL	__end_ofi1_waitLCDBusy
 11055                           	__end_ofi1_waitLCDBusy:
 11056  0B59                     	signat	i1_waitLCDBusy,89
 11057                           	global	i1_SetToReadDataFromLCD
 11058                           
 11059 ;; *************** function i1_SetToReadDataFromLCD *****************
 11060 ;; Defined at:
 11061 ;;		line 169 in file "LCD_hd44780u_qy_2004a.c"
 11062 ;; Parameters:    Size  Location     Type
 11063 ;;		None
 11064 ;; Auto vars:     Size  Location     Type
 11065 ;;		None
 11066 ;; Return value:  Size  Location     Type
 11067 ;;                  1    wreg      void 
 11068 ;; Registers used:
 11069 ;;		None
 11070 ;; Tracked objects:
 11071 ;;		On entry : 0/0
 11072 ;;		On exit  : 0/0
 11073 ;;		Unchanged: 0/0
 11074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11079 ;;Total ram usage:        0 bytes
 11080 ;; Hardware stack levels used:    1
 11081 ;; This function calls:
 11082 ;;		Nothing
 11083 ;; This function is called by:
 11084 ;;		i1_waitLCDBusy
 11085 ;; This function uses a non-reentrant model
 11086 ;;
 11087                           psect	text39,local,class=CODE,delta=2,merge=1,group=0
 11088                           	line	169
 11089                           global __ptext39
 11090                           __ptext39:	;psect for function i1_SetToReadDataFromLCD
 11091  0980                     psect	text39
 11092                           	file	"LCD_hd44780u_qy_2004a.c"
 11093                           	line	169
 11094                           	global	__size_ofi1_SetToReadDataFromLCD
 11095                           	__size_ofi1_SetToReadDataFromLCD	equ	__end_ofi1_SetToReadDataFromLCD-i1_SetToReadDataFr
                                 omLCD
 11096  0006                     	
 11097                           i1_SetToReadDataFromLCD:	
 11098  0980                     ;incstack = 0
 11099                           	opt	stack 5
 11100                           ; Regs used in i1_SetToReadDataFromLCD: []
 11101                           	line	171
 11102                           	
 11103                           i1l3845:	
 11104  0980                     ;LCD_hd44780u_qy_2004a.c: 171:   TRISAbits.TRISA3 = 1;
 11105                           	movlb 1	; select bank1
 11106  0980  0021               	bsf	(140)^080h,3	;volatile
 11107  0981  158C               	line	172
 11108                           ;LCD_hd44780u_qy_2004a.c: 172:   TRISCbits.TRISC2 = 1;
 11109                           	bsf	(142)^080h,2	;volatile
 11110  0982  150E               	line	173
 11111                           ;LCD_hd44780u_qy_2004a.c: 173:   TRISCbits.TRISC1 = 1;
 11112                           	bsf	(142)^080h,1	;volatile
 11113  0983  148E               	line	174
 11114                           ;LCD_hd44780u_qy_2004a.c: 174:   TRISCbits.TRISC0 = 1;
 11115                           	bsf	(142)^080h,0	;volatile
 11116  0984  140E               	line	175
 11117                           	
 11118                           i1l316:	
 11119  0985                     	return
 11120  0985  0008               	opt stack 0
 11121                           GLOBAL	__end_ofi1_SetToReadDataFromLCD
 11122                           	__end_ofi1_SetToReadDataFromLCD:
 11123  0986                     	signat	i1_SetToReadDataFromLCD,89
 11124                           	global	i1_setData
 11125                           
 11126 ;; *************** function i1_setData *****************
 11127 ;; Defined at:
 11128 ;;		line 89 in file "LCD_hd44780u_qy_2004a.c"
 11129 ;; Parameters:    Size  Location     Type
 11130 ;;  iValue          1    wreg     unsigned char 
 11131 ;; Auto vars:     Size  Location     Type
 11132 ;;  iValue          1    2[COMMON] unsigned char 
 11133 ;; Return value:  Size  Location     Type
 11134 ;;                  1    wreg      void 
 11135 ;; Registers used:
 11136 ;;		wreg, status,2, status,0
 11137 ;; Tracked objects:
 11138 ;;		On entry : 0/0
 11139 ;;		On exit  : 0/0
 11140 ;;		Unchanged: 0/0
 11141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11143 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11144 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11145 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11146 ;;Total ram usage:        3 bytes
 11147 ;; Hardware stack levels used:    1
 11148 ;; This function calls:
 11149 ;;		Nothing
 11150 ;; This function is called by:
 11151 ;;		i1_writeTxtChk
 11152 ;;		i1_setCursorPosition
 11153 ;; This function uses a non-reentrant model
 11154 ;;
 11155                           psect	text40,local,class=CODE,delta=2,merge=1,group=0
 11156                           	line	89
 11157                           global __ptext40
 11158                           __ptext40:	;psect for function i1_setData
 11159  0C53                     psect	text40
 11160                           	file	"LCD_hd44780u_qy_2004a.c"
 11161                           	line	89
 11162                           	global	__size_ofi1_setData
 11163                           	__size_ofi1_setData	equ	__end_ofi1_setData-i1_setData
 11164  003C                     	
 11165                           i1_setData:	
 11166  0C53                     ;incstack = 0
 11167                           	opt	stack 6
 11168                           ; Regs used in i1_setData: [wreg+status,2+status,0]
 11169                           ;i1setData@iValue stored from wreg
 11170                           	movwf	(i1setData@iValue)
 11171  0C53  00F2               	line	91
 11172                           	
 11173                           i1l3847:	
 11174  0C54                     ;LCD_hd44780u_qy_2004a.c: 89: void setData(char iValue);LCD_hd44780u_qy_2004a.c: 90: {;L
                                 CD_hd44780u_qy_2004a.c: 91:   PORTAbits.RA2 = 1;
 11175                           	movlb 0	; select bank0
 11176  0C54  0020               	bsf	(12),2	;volatile
 11177  0C55  150C               	line	92
 11178                           	
 11179                           i1l3849:	
 11180  0C56                     ;LCD_hd44780u_qy_2004a.c: 92:   PORTAbits.RA3 = (iValue & 0x8) >> 3;
 11181                           	movf	(i1setData@iValue),w
 11182  0C56  0872               	movwf	(??i1_setData+0)+0
 11183  0C57  00F0               	movlw	03h
 11184  0C58  3003               u254_25:
 11185  0C59                     	lsrf	(??i1_setData+0)+0,f
 11186  0C59  36F0               	decfsz	wreg,f
 11187  0C5A  0B89               	goto	u254_25
 11188  0C5B  2C59               	movf	0+(??i1_setData+0)+0,w
 11189  0C5C  0870               	andlw	01h
 11190  0C5D  3901               	movwf	(??i1_setData+1)+0
 11191  0C5E  00F1               	rlf	(??i1_setData+1)+0,f
 11192  0C5F  0DF1               	rlf	(??i1_setData+1)+0,f
 11193  0C60  0DF1               	rlf	(??i1_setData+1)+0,f
 11194  0C61  0DF1               	movf	(12),w	;volatile
 11195  0C62  080C               	xorwf	(??i1_setData+1)+0,w
 11196  0C63  0671               	andlw	not (((1<<1)-1)<<3)
 11197  0C64  39F7               	xorwf	(??i1_setData+1)+0,w
 11198  0C65  0671               	movwf	(12)	;volatile
 11199  0C66  008C               	line	93
 11200                           ;LCD_hd44780u_qy_2004a.c: 93:   PORTCbits.RC2 = (iValue & 0x4) >> 2;
 11201                           	movf	(i1setData@iValue),w
 11202  0C67  0872               	movwf	(??i1_setData+0)+0
 11203  0C68  00F0               	movlw	02h
 11204  0C69  3002               u255_25:
 11205  0C6A                     	lsrf	(??i1_setData+0)+0,f
 11206  0C6A  36F0               	decfsz	wreg,f
 11207  0C6B  0B89               	goto	u255_25
 11208  0C6C  2C6A               	movf	0+(??i1_setData+0)+0,w
 11209  0C6D  0870               	andlw	01h
 11210  0C6E  3901               	movwf	(??i1_setData+1)+0
 11211  0C6F  00F1               	rlf	(??i1_setData+1)+0,f
 11212  0C70  0DF1               	rlf	(??i1_setData+1)+0,f
 11213  0C71  0DF1               	movf	(14),w	;volatile
 11214  0C72  080E               	xorwf	(??i1_setData+1)+0,w
 11215  0C73  0671               	andlw	not (((1<<1)-1)<<2)
 11216  0C74  39FB               	xorwf	(??i1_setData+1)+0,w
 11217  0C75  0671               	movwf	(14)	;volatile
 11218  0C76  008E               	line	94
 11219                           ;LCD_hd44780u_qy_2004a.c: 94:   PORTCbits.RC1 = (iValue & 0x2) >> 1;
 11220                           	lsrf	(i1setData@iValue),w
 11221  0C77  3672               	andlw	01h
 11222  0C78  3901               	movwf	(??i1_setData+0)+0
 11223  0C79  00F0               	rlf	(??i1_setData+0)+0,f
 11224  0C7A  0DF0               	movf	(14),w	;volatile
 11225  0C7B  080E               	xorwf	(??i1_setData+0)+0,w
 11226  0C7C  0670               	andlw	not (((1<<1)-1)<<1)
 11227  0C7D  39FD               	xorwf	(??i1_setData+0)+0,w
 11228  0C7E  0670               	movwf	(14)	;volatile
 11229  0C7F  008E               	line	95
 11230                           ;LCD_hd44780u_qy_2004a.c: 95:   PORTCbits.RC0 = (iValue & 0x1) ;
 11231                           	movlw	low(01h)
 11232  0C80  3001               	andwf	(i1setData@iValue),w
 11233  0C81  0572               	movwf	(??i1_setData+0)+0
 11234  0C82  00F0               	movf	(14),w	;volatile
 11235  0C83  080E               	xorwf	0+(??i1_setData+0)+0,w
 11236  0C84  0670               	andlw	not ((1<<1)-1)
 11237  0C85  39FE               	xorwf	0+(??i1_setData+0)+0,w
 11238  0C86  0670               	movwf	(14)	;volatile
 11239  0C87  008E               	line	96
 11240                           	
 11241                           i1l3851:	
 11242  0C88                     ;LCD_hd44780u_qy_2004a.c: 96:   _delay((unsigned long)((1)*(16000000/4000000.0)));
 11243                           		opt asmopt_push
 11244                           	opt asmopt_off
 11245                           	nop2	;2 cycle nop
 11246  0C88  3200               	nop2	;2 cycle nop
 11247  0C89  3200               	opt asmopt_pop
 11248                           
 11249                           	line	97
 11250                           	
 11251                           i1l3853:	
 11252  0C8A                     ;LCD_hd44780u_qy_2004a.c: 97:   PORTAbits.RA2 = 0;
 11253                           	movlb 0	; select bank0
 11254  0C8A  0020               	bcf	(12),2	;volatile
 11255  0C8B  110C               	line	98
 11256                           	
 11257                           i1l3855:	
 11258  0C8C                     ;LCD_hd44780u_qy_2004a.c: 98:   _delay((unsigned long)((1)*(16000000/4000000.0)));
 11259                           		opt asmopt_push
 11260                           	opt asmopt_off
 11261                           	nop2	;2 cycle nop
 11262  0C8C  3200               	nop2	;2 cycle nop
 11263  0C8D  3200               	opt asmopt_pop
 11264                           
 11265                           	line	99
 11266                           	
 11267                           i1l290:	
 11268  0C8E                     	return
 11269  0C8E  0008               	opt stack 0
 11270                           GLOBAL	__end_ofi1_setData
 11271                           	__end_ofi1_setData:
 11272  0C8F                     	signat	i1_setData,89
 11273                           	global	i1_SetToSendDataToLCD
 11274                           
 11275 ;; *************** function i1_SetToSendDataToLCD *****************
 11276 ;; Defined at:
 11277 ;;		line 176 in file "LCD_hd44780u_qy_2004a.c"
 11278 ;; Parameters:    Size  Location     Type
 11279 ;;		None
 11280 ;; Auto vars:     Size  Location     Type
 11281 ;;		None
 11282 ;; Return value:  Size  Location     Type
 11283 ;;                  1    wreg      void 
 11284 ;; Registers used:
 11285 ;;		None
 11286 ;; Tracked objects:
 11287 ;;		On entry : 0/0
 11288 ;;		On exit  : 0/0
 11289 ;;		Unchanged: 0/0
 11290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11295 ;;Total ram usage:        0 bytes
 11296 ;; Hardware stack levels used:    1
 11297 ;; This function calls:
 11298 ;;		Nothing
 11299 ;; This function is called by:
 11300 ;;		i1_writeTxtChk
 11301 ;;		i1_setCursorPosition
 11302 ;; This function uses a non-reentrant model
 11303 ;;
 11304                           psect	text41,local,class=CODE,delta=2,merge=1,group=0
 11305                           	line	176
 11306                           global __ptext41
 11307                           __ptext41:	;psect for function i1_SetToSendDataToLCD
 11308  097A                     psect	text41
 11309                           	file	"LCD_hd44780u_qy_2004a.c"
 11310                           	line	176
 11311                           	global	__size_ofi1_SetToSendDataToLCD
 11312                           	__size_ofi1_SetToSendDataToLCD	equ	__end_ofi1_SetToSendDataToLCD-i1_SetToSendDataToLCD

 11313  0006                     	
 11314                           i1_SetToSendDataToLCD:	
 11315  097A                     ;incstack = 0
 11316                           	opt	stack 5
 11317                           ; Regs used in i1_SetToSendDataToLCD: []
 11318                           	line	178
 11319                           	
 11320                           i1l3857:	
 11321  097A                     ;LCD_hd44780u_qy_2004a.c: 178:   TRISAbits.TRISA3 = 0;;
 11322                           	movlb 1	; select bank1
 11323  097A  0021               	bcf	(140)^080h,3	;volatile
 11324  097B  118C               	line	179
 11325                           ;LCD_hd44780u_qy_2004a.c: 179:   TRISCbits.TRISC2 = 0;;
 11326                           	bcf	(142)^080h,2	;volatile
 11327  097C  110E               	line	180
 11328                           ;LCD_hd44780u_qy_2004a.c: 180:   TRISCbits.TRISC1 = 0;;
 11329                           	bcf	(142)^080h,1	;volatile
 11330  097D  108E               	line	181
 11331                           ;LCD_hd44780u_qy_2004a.c: 181:   TRISCbits.TRISC0 = 0;;
 11332                           	bcf	(142)^080h,0	;volatile
 11333  097E  100E               	line	182
 11334                           	
 11335                           i1l319:	
 11336  097F                     	return
 11337  097F  0008               	opt stack 0
 11338                           GLOBAL	__end_ofi1_SetToSendDataToLCD
 11339                           	__end_ofi1_SetToSendDataToLCD:
 11340  0980                     	signat	i1_SetToSendDataToLCD,89
 11341                           	global	_TempUpdateRequest
 11342                           
 11343 ;; *************** function _TempUpdateRequest *****************
 11344 ;; Defined at:
 11345 ;;		line 80 in file "EM1812.c"
 11346 ;; Parameters:    Size  Location     Type
 11347 ;;		None
 11348 ;; Auto vars:     Size  Location     Type
 11349 ;;		None
 11350 ;; Return value:  Size  Location     Type
 11351 ;;                  2   88[None  ] int 
 11352 ;; Registers used:
 11353 ;;		wreg, status,2, status,0
 11354 ;; Tracked objects:
 11355 ;;		On entry : 0/0
 11356 ;;		On exit  : 0/0
 11357 ;;		Unchanged: 0/0
 11358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11363 ;;Total ram usage:        0 bytes
 11364 ;; Hardware stack levels used:    1
 11365 ;; This function calls:
 11366 ;;		Nothing
 11367 ;; This function is called by:
 11368 ;;		_myint
 11369 ;; This function uses a non-reentrant model
 11370 ;;
 11371                           psect	text42,local,class=CODE,delta=2,merge=1,group=0
 11372                           	file	"EM1812.c"
 11373                           	line	80
 11374                           global __ptext42
 11375                           __ptext42:	;psect for function _TempUpdateRequest
 11376  09F5                     psect	text42
 11377                           	file	"EM1812.c"
 11378                           	line	80
 11379                           	global	__size_of_TempUpdateRequest
 11380                           	__size_of_TempUpdateRequest	equ	__end_of_TempUpdateRequest-_TempUpdateRequest
 11381  000D                     	
 11382                           _TempUpdateRequest:	
 11383  09F5                     ;incstack = 0
 11384                           	opt	stack 8
 11385                           ; Regs used in _TempUpdateRequest: [wreg+status,2+status,0]
 11386                           	line	82
 11387                           	
 11388                           i1l3277:	
 11389  09F5                     ;EM1812.c: 82:     if(wTempState == eIdle)
 11390                           		movlw	5
 11391  09F5  3005               	movlb 0	; select bank0
 11392  09F6  0020               	xorwf	((_wTempState)),w
 11393  09F7  065A               	btfss	status,2
 11394  09F8  1D03               	goto	u227_21
 11395  09F9  29FB               	goto	u227_20
 11396  09FA  29FC               u227_21:
 11397  09FB                     	goto	i1l448
 11398  09FB  2A01               u227_20:
 11399  09FC                     	line	84
 11400                           	
 11401                           i1l3279:	
 11402  09FC                     ;EM1812.c: 83:     {;EM1812.c: 84:         wTempState = eSetGetTemp;
 11403                           	clrf	(_wTempState)
 11404  09FC  01DA               	goto	i1l448
 11405  09FD  2A01               	line	85
 11406                           	
 11407                           i1l3281:	
 11408  09FE                     ;EM1812.c: 85:         return 1;;	Return value of _TempUpdateRequest is never used
 11409                           	goto	i1l448
 11410  09FE  2A01               	line	86
 11411                           	
 11412                           i1l3283:	
 11413  09FF                     ;EM1812.c: 86:     }
 11414                           	goto	i1l448
 11415  09FF  2A01               	line	87
 11416                           ;EM1812.c: 87:     else
 11417                           	
 11418                           i1l447:	
 11419  0A00                     	line	89
 11420                           ;EM1812.c: 88:     {;EM1812.c: 89:         return 0;;	Return value of _TempUpdateRequest
                                  is never used
 11421                           	goto	i1l448
 11422  0A00  2A01               	line	90
 11423                           ;EM1812.c: 90:     }
 11424                           	
 11425                           i1l449:	
 11426  0A01                     	line	92
 11427                           	
 11428                           i1l448:	
 11429  0A01                     	return
 11430  0A01  0008               	opt stack 0
 11431                           GLOBAL	__end_of_TempUpdateRequest
 11432                           	__end_of_TempUpdateRequest:
 11433  0A02                     	signat	_TempUpdateRequest,90
 11434                           	global	_I2C_Interrupt
 11435                           
 11436 ;; *************** function _I2C_Interrupt *****************
 11437 ;; Defined at:
 11438 ;;		line 75 in file "I2C.c"
 11439 ;; Parameters:    Size  Location     Type
 11440 ;;		None
 11441 ;; Auto vars:     Size  Location     Type
 11442 ;;  oErrorCode      1    4[COMMON] unsigned char 
 11443 ;; Return value:  Size  Location     Type
 11444 ;;                  2    0[COMMON] int 
 11445 ;; Registers used:
 11446 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11447 ;; Tracked objects:
 11448 ;;		On entry : 0/0
 11449 ;;		On exit  : 0/0
 11450 ;;		Unchanged: 0/0
 11451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11454 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11455 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11456 ;;Total ram usage:        5 bytes
 11457 ;; Hardware stack levels used:    1
 11458 ;; This function calls:
 11459 ;;		Nothing
 11460 ;; This function is called by:
 11461 ;;		_myint
 11462 ;; This function uses a non-reentrant model
 11463 ;;
 11464                           psect	text43,local,class=CODE,delta=2,merge=1,group=0
 11465                           	file	"I2C.c"
 11466                           	line	75
 11467                           global __ptext43
 11468                           __ptext43:	;psect for function _I2C_Interrupt
 11469  04E1                     psect	text43
 11470                           	file	"I2C.c"
 11471                           	line	75
 11472                           	global	__size_of_I2C_Interrupt
 11473                           	__size_of_I2C_Interrupt	equ	__end_of_I2C_Interrupt-_I2C_Interrupt
 11474  0126                     	
 11475                           _I2C_Interrupt:	
 11476  04E1                     ;incstack = 0
 11477                           	opt	stack 8
 11478                           ; Regs used in _I2C_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 11479                           	line	77
 11480                           	
 11481                           i1l3179:	
 11482  04E1                     ;I2C.c: 77:     uint8_t oErrorCode=0;
 11483                           	clrf	(I2C_Interrupt@oErrorCode)
 11484  04E1  01F4               	line	79
 11485                           	
 11486                           i1l3181:	
 11487  04E2                     ;I2C.c: 79:     if(PIR1bits.SSPIF == 1)
 11488                           	movlb 0	; select bank0
 11489  04E2  0020               	btfss	(17),3	;volatile
 11490  04E3  1D91               	goto	u204_21
 11491  04E4  2CE6               	goto	u204_20
 11492  04E5  2CE7               u204_21:
 11493  04E6                     	goto	i1l3269
 11494  04E6  2DF4               u204_20:
 11495  04E7                     	line	81
 11496                           	
 11497                           i1l3183:	
 11498  04E7                     ;I2C.c: 80:     {;I2C.c: 81:         PIR1bits.SSPIF = 0;
 11499                           	bcf	(17),3	;volatile
 11500  04E7  1191               	line	82
 11501                           	
 11502                           i1l3185:	
 11503  04E8                     ;I2C.c: 82:         if( wI2CTxNbOfByteToSend != 0)
 11504                           	movf	((_wI2CTxNbOfByteToSend)),w
 11505  04E8  0855               	btfsc	status,2
 11506  04E9  1903               	goto	u205_21
 11507  04EA  2CEC               	goto	u205_20
 11508  04EB  2CED               u205_21:
 11509  04EC                     	goto	i1l3269
 11510  04EC  2DF4               u205_20:
 11511  04ED                     	line	84
 11512                           	
 11513                           i1l3187:	
 11514  04ED                     ;I2C.c: 83:         {;I2C.c: 84:             if((wI2CTxBuffer[0] & 0x01) == 1)
 11515                           	movlb 2	; select bank2
 11516  04ED  0022               	btfss	(_wI2CTxBuffer)^0100h,(0)&7
 11517  04EE  1C48               	goto	u206_21
 11518  04EF  2CF1               	goto	u206_20
 11519  04F0  2CF2               u206_21:
 11520  04F1                     	goto	i1l566
 11521  04F1  2D79               u206_20:
 11522  04F2                     	line	86
 11523                           	
 11524                           i1l3189:	
 11525  04F2                     ;I2C.c: 85:             {;I2C.c: 86:                 if(SSPSTATbits.P)
 11526                           	movlb 4	; select bank4
 11527  04F2  0024               	btfss	(532)^0200h,4	;volatile
 11528  04F3  1E14               	goto	u207_21
 11529  04F4  2CF6               	goto	u207_20
 11530  04F5  2CF7               u207_21:
 11531  04F6                     	goto	i1l567
 11532  04F6  2CFD               u207_20:
 11533  04F7                     	line	88
 11534                           	
 11535                           i1l3191:	
 11536  04F7                     ;I2C.c: 87:                 {;I2C.c: 88:                   PIE1bits.SSPIE = 0;
 11537                           	movlb 1	; select bank1
 11538  04F7  0021               	bcf	(145)^080h,3	;volatile
 11539  04F8  1191               	line	89
 11540                           	
 11541                           i1l3193:	
 11542  04F9                     ;I2C.c: 89:                   wI2CTxNbOfByteToSend=0;
 11543                           	movlb 0	; select bank0
 11544  04F9  0020               	clrf	(_wI2CTxNbOfByteToSend)
 11545  04FA  01D5               	line	90
 11546                           ;I2C.c: 90:                   wI2CTxSendPos=0;
 11547                           	clrf	(_wI2CTxSendPos)
 11548  04FB  01D2               	line	91
 11549                           ;I2C.c: 91:                 }
 11550                           	goto	i1l3269
 11551  04FC  2DF4               	line	92
 11552                           ;I2C.c: 92:                 else if(SSPSTATbits.S && wI2CTxSendPos == 0)
 11553                           	
 11554                           i1l567:	
 11555  04FD                     	btfss	(532)^0200h,3	;volatile
 11556  04FD  1D94               	goto	u208_21
 11557  04FE  2D00               	goto	u208_20
 11558  04FF  2D01               u208_21:
 11559  0500                     	goto	i1l569
 11560  0500  2D17               u208_20:
 11561  0501                     	
 11562                           i1l3195:	
 11563  0501                     	movlb 0	; select bank0
 11564  0501  0020               	movf	((_wI2CTxSendPos)),w
 11565  0502  0852               	btfss	status,2
 11566  0503  1D03               	goto	u209_21
 11567  0504  2D06               	goto	u209_20
 11568  0505  2D07               u209_21:
 11569  0506                     	goto	i1l569
 11570  0506  2D17               u209_20:
 11571  0507                     	line	94
 11572                           	
 11573                           i1l3197:	
 11574  0507                     ;I2C.c: 93:                 {;I2C.c: 94:                     SSPBUF = wI2CTxBuffer[wI2CT
                                 xSendPos];
 11575                           	movf	(_wI2CTxSendPos),w
 11576  0507  0852               	addlw	low(_wI2CTxBuffer|((0x1)<<8))&0ffh
 11577  0508  3E48               	movwf	fsr1l
 11578  0509  0086               	movlw 1	; select bank2/3
 11579  050A  3001               	movwf fsr1h	
 11580  050B  0087               	
 11581                           	movf	indf1,w
 11582  050C  0801               	movlb 4	; select bank4
 11583  050D  0024               	movwf	(529)^0200h	;volatile
 11584  050E  0091               	line	95
 11585                           	
 11586                           i1l3199:	
 11587  050F                     ;I2C.c: 95:                     wI2CCommandState = ProcessingCommand;
 11588                           	movlb 0	; select bank0
 11589  050F  0020               	clrf	(_wI2CCommandState)
 11590  0510  01E4               	incf	(_wI2CCommandState),f
 11591  0511  0AE4               	line	96
 11592                           	
 11593                           i1l3201:	
 11594  0512                     ;I2C.c: 96:                     wI2CTxSendPos++;
 11595                           	movlw	low(01h)
 11596  0512  3001               	movwf	(??_I2C_Interrupt+0)+0
 11597  0513  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 11598  0514  0872               	addwf	(_wI2CTxSendPos),f
 11599  0515  07D2               	line	97
 11600                           ;I2C.c: 97:                 }
 11601                           	goto	i1l3269
 11602  0516  2DF4               	line	98
 11603                           ;I2C.c: 98:                 else if(SSPSTATbits.BF == 1)
 11604                           	
 11605                           i1l569:	
 11606  0517                     	movlb 4	; select bank4
 11607  0517  0024               	btfss	(532)^0200h,0	;volatile
 11608  0518  1C14               	goto	u210_21
 11609  0519  2D1B               	goto	u210_20
 11610  051A  2D1C               u210_21:
 11611  051B                     	goto	i1l571
 11612  051B  2D43               u210_20:
 11613  051C                     	line	100
 11614                           	
 11615                           i1l3203:	
 11616  051C                     ;I2C.c: 99:                 {;I2C.c: 100:                     wI2CRxBuffer[wReceptionBuf
                                 ferPosition] = SSPBUF;
 11617                           	movf	(529)^0200h,w	;volatile
 11618  051C  0811               	movwf	(??_I2C_Interrupt+0)+0
 11619  051D  00F2               	movlb 0	; select bank0
 11620  051E  0020               	movf	(_wReceptionBufferPosition),w
 11621  051F  0858               	addlw	low(_wI2CRxBuffer|((0x1)<<8))&0ffh
 11622  0520  3E34               	movwf	fsr1l
 11623  0521  0086               	movlw 1	; select bank2/3
 11624  0522  3001               	movwf fsr1h	
 11625  0523  0087               	
 11626                           	movf	(??_I2C_Interrupt+0)+0,w
 11627  0524  0872               	movwf	indf1
 11628  0525  0081               	line	101
 11629                           	
 11630                           i1l3205:	
 11631  0526                     ;I2C.c: 101:                     wReceptionBufferPosition++;
 11632                           	movlw	low(01h)
 11633  0526  3001               	movwf	(??_I2C_Interrupt+0)+0
 11634  0527  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 11635  0528  0872               	addwf	(_wReceptionBufferPosition),f
 11636  0529  07D8               	line	103
 11637                           	
 11638                           i1l3207:	
 11639  052A                     ;I2C.c: 103:                     SSPSTATbits.BF = 0 ;
 11640                           	movlb 4	; select bank4
 11641  052A  0024               	bcf	(532)^0200h,0	;volatile
 11642  052B  1014               	line	104
 11643                           	
 11644                           i1l3209:	
 11645  052C                     ;I2C.c: 104:                     if( wReceptionBufferPosition < wI2CRxNbOfByteToReceived
                                 )
 11646                           	movlb 0	; select bank0
 11647  052C  0020               	movf	(_wI2CRxNbOfByteToReceived),w
 11648  052D  0854               	subwf	(_wReceptionBufferPosition),w
 11649  052E  0258               	skipnc
 11650  052F  1803               	goto	u211_21
 11651  0530  2D32               	goto	u211_20
 11652  0531  2D33               u211_21:
 11653  0532                     	goto	i1l572
 11654  0532  2D36               u211_20:
 11655  0533                     	line	106
 11656                           	
 11657                           i1l3211:	
 11658  0533                     ;I2C.c: 105:                     {;I2C.c: 106:                         SSPCON2bits.ACKDT
                                  = 0;
 11659                           	movlb 4	; select bank4
 11660  0533  0024               	bcf	(534)^0200h,5	;volatile
 11661  0534  1296               	line	107
 11662                           ;I2C.c: 107:                     }
 11663                           	goto	i1l3217
 11664  0535  2D40               	line	108
 11665                           ;I2C.c: 108:                     else
 11666                           	
 11667                           i1l572:	
 11668  0536                     	line	110
 11669                           ;I2C.c: 109:                     {;I2C.c: 110:                         SSPCON2bits.ACKDT
                                  = 1;
 11670                           	movlb 4	; select bank4
 11671  0536  0024               	bsf	(534)^0200h,5	;volatile
 11672  0537  1696               	line	111
 11673                           	
 11674                           i1l3213:	
 11675  0538                     ;I2C.c: 111:                         wI2CCommandState = CommandCompleted;
 11676                           	movlw	low(03h)
 11677  0538  3003               	movwf	(??_I2C_Interrupt+0)+0
 11678  0539  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 11679  053A  0872               	movlb 0	; select bank0
 11680  053B  0020               	movwf	(_wI2CCommandState)
 11681  053C  00E4               	line	112
 11682                           	
 11683                           i1l3215:	
 11684  053D                     ;I2C.c: 112:                         wNewI2CReception = 1;
 11685                           	clrf	(_wNewI2CReception)
 11686  053D  01D3               	incf	(_wNewI2CReception),f
 11687  053E  0AD3               	goto	i1l3217
 11688  053F  2D40               	line	113
 11689                           ;I2C.c: 113:                     }
 11690                           	
 11691                           i1l573:	
 11692  0540                     	line	114
 11693                           	
 11694                           i1l3217:	
 11695  0540                     ;I2C.c: 114:                     SSPCON2bits.ACKEN = 1;
 11696                           	movlb 4	; select bank4
 11697  0540  0024               	bsf	(534)^0200h,4	;volatile
 11698  0541  1616               	line	115
 11699                           ;I2C.c: 115:                 }
 11700                           	goto	i1l3269
 11701  0542  2DF4               	line	116
 11702                           ;I2C.c: 116:                 else
 11703                           	
 11704                           i1l571:	
 11705  0543                     	line	118
 11706                           ;I2C.c: 117:                 {;I2C.c: 118:                     if(SSPCON2bits.ACKSTAT ==
                                  0 && wI2CTxSendPos != 0)
 11707                           	btfsc	(534)^0200h,6	;volatile
 11708  0543  1B16               	goto	u212_21
 11709  0544  2D46               	goto	u212_20
 11710  0545  2D47               u212_21:
 11711  0546                     	goto	i1l575
 11712  0546  2D5A               u212_20:
 11713  0547                     	
 11714                           i1l3219:	
 11715  0547                     	movlb 0	; select bank0
 11716  0547  0020               	movf	((_wI2CTxSendPos)),w
 11717  0548  0852               	btfsc	status,2
 11718  0549  1903               	goto	u213_21
 11719  054A  2D4C               	goto	u213_20
 11720  054B  2D4D               u213_21:
 11721  054C                     	goto	i1l575
 11722  054C  2D5A               u213_20:
 11723  054D                     	line	120
 11724                           	
 11725                           i1l3221:	
 11726  054D                     ;I2C.c: 119:                     {;I2C.c: 120:                         if( wReceptionBuf
                                 ferPosition < wI2CRxNbOfByteToReceived)
 11727                           	movf	(_wI2CRxNbOfByteToReceived),w
 11728  054D  0854               	subwf	(_wReceptionBufferPosition),w
 11729  054E  0258               	skipnc
 11730  054F  1803               	goto	u214_21
 11731  0550  2D52               	goto	u214_20
 11732  0551  2D53               u214_21:
 11733  0552                     	goto	i1l576
 11734  0552  2D56               u214_20:
 11735  0553                     	line	123
 11736                           	
 11737                           i1l3223:	
 11738  0553                     ;I2C.c: 121:                         {;I2C.c: 123:                           SSPCON2bits
                                 .RCEN = 1;
 11739                           	movlb 4	; select bank4
 11740  0553  0024               	bsf	(534)^0200h,3	;volatile
 11741  0554  1596               	line	124
 11742                           ;I2C.c: 124:                         }
 11743                           	goto	i1l3269
 11744  0555  2DF4               	line	125
 11745                           ;I2C.c: 125:                         else
 11746                           	
 11747                           i1l576:	
 11748  0556                     	line	127
 11749                           ;I2C.c: 126:                         {;I2C.c: 127:                           SSPCON2bits
                                 .PEN = 1;
 11750                           	movlb 4	; select bank4
 11751  0556  0024               	bsf	(534)^0200h,2	;volatile
 11752  0557  1516               	goto	i1l3269
 11753  0558  2DF4               	line	128
 11754                           ;I2C.c: 128:                         }
 11755                           	
 11756                           i1l577:	
 11757  0559                     	line	129
 11758                           ;I2C.c: 129:                     }
 11759                           	goto	i1l3269
 11760  0559  2DF4               	line	130
 11761                           ;I2C.c: 130:                     else if(SSPCON2bits.ACKSTAT == 1)
 11762                           	
 11763                           i1l575:	
 11764  055A                     	movlb 4	; select bank4
 11765  055A  0024               	btfss	(534)^0200h,6	;volatile
 11766  055B  1F16               	goto	u215_21
 11767  055C  2D5E               	goto	u215_20
 11768  055D  2D5F               u215_21:
 11769  055E                     	goto	i1l579
 11770  055E  2D71               u215_20:
 11771  055F                     	line	132
 11772                           	
 11773                           i1l3225:	
 11774  055F                     ;I2C.c: 131:                     {;I2C.c: 132:                         SSPCON2bits.ACKST
                                 AT = 0;
 11775                           	bcf	(534)^0200h,6	;volatile
 11776  055F  1316               	line	133
 11777                           	
 11778                           i1l3227:	
 11779  0560                     ;I2C.c: 133:                         wI2CCommandState = CommandFailed;
 11780                           	movlw	low(05h)
 11781  0560  3005               	movwf	(??_I2C_Interrupt+0)+0
 11782  0561  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 11783  0562  0872               	movlb 0	; select bank0
 11784  0563  0020               	movwf	(_wI2CCommandState)
 11785  0564  00E4               	line	134
 11786                           	
 11787                           i1l3229:	
 11788  0565                     ;I2C.c: 134:                         if(wI2CTxSendPos != 0)
 11789                           	movf	((_wI2CTxSendPos)),w
 11790  0565  0852               	btfsc	status,2
 11791  0566  1903               	goto	u216_21
 11792  0567  2D69               	goto	u216_20
 11793  0568  2D6A               u216_21:
 11794  0569                     	goto	i1l580
 11795  0569  2D6D               u216_20:
 11796  056A                     	line	136
 11797                           	
 11798                           i1l3231:	
 11799  056A                     ;I2C.c: 135:                         {;I2C.c: 136:                           SSPCON2bits
                                 .PEN = 1;
 11800                           	movlb 4	; select bank4
 11801  056A  0024               	bsf	(534)^0200h,2	;volatile
 11802  056B  1516               	line	137
 11803                           ;I2C.c: 137:                         }
 11804                           	goto	i1l3269
 11805  056C  2DF4               	line	138
 11806                           ;I2C.c: 138:                         else
 11807                           	
 11808                           i1l580:	
 11809  056D                     	line	140
 11810                           ;I2C.c: 139:                         {;I2C.c: 140:                           SSPCON2bits
                                 .PEN = 1;
 11811                           	movlb 4	; select bank4
 11812  056D  0024               	bsf	(534)^0200h,2	;volatile
 11813  056E  1516               	goto	i1l3269
 11814  056F  2DF4               	line	141
 11815                           ;I2C.c: 141:                         }
 11816                           	
 11817                           i1l581:	
 11818  0570                     	line	142
 11819                           ;I2C.c: 142:                     }
 11820                           	goto	i1l3269
 11821  0570  2DF4               	line	143
 11822                           ;I2C.c: 143:                     else
 11823                           	
 11824                           i1l579:	
 11825  0571                     	line	145
 11826                           ;I2C.c: 144:                     {;I2C.c: 145:                         oErrorCode = 1;
 11827                           	clrf	(I2C_Interrupt@oErrorCode)
 11828  0571  01F4               	incf	(I2C_Interrupt@oErrorCode),f
 11829  0572  0AF4               	goto	i1l3269
 11830  0573  2DF4               	line	146
 11831                           ;I2C.c: 146:                     }
 11832                           	
 11833                           i1l582:	
 11834  0574                     	goto	i1l3269
 11835  0574  2DF4               	
 11836                           i1l578:	
 11837  0575                     	goto	i1l3269
 11838  0575  2DF4               	line	147
 11839                           ;I2C.c: 147:                 }
 11840                           	
 11841                           i1l574:	
 11842  0576                     	goto	i1l3269
 11843  0576  2DF4               	
 11844                           i1l570:	
 11845  0577                     	goto	i1l3269
 11846  0577  2DF4               	
 11847                           i1l568:	
 11848  0578                     	line	149
 11849                           ;I2C.c: 149:             }
 11850                           	goto	i1l3269
 11851  0578  2DF4               	line	150
 11852                           ;I2C.c: 150:             else
 11853                           	
 11854                           i1l566:	
 11855  0579                     	line	152
 11856                           ;I2C.c: 151:             {;I2C.c: 152:                 if(SSPSTATbits.P)
 11857                           	movlb 4	; select bank4
 11858  0579  0024               	btfss	(532)^0200h,4	;volatile
 11859  057A  1E14               	goto	u217_21
 11860  057B  2D7D               	goto	u217_20
 11861  057C  2D7E               u217_21:
 11862  057D                     	goto	i1l584
 11863  057D  2D9A               u217_20:
 11864  057E                     	line	154
 11865                           	
 11866                           i1l3233:	
 11867  057E                     ;I2C.c: 153:                 {;I2C.c: 154:                   PIE1bits.SSPIE = 0;
 11868                           	movlb 1	; select bank1
 11869  057E  0021               	bcf	(145)^080h,3	;volatile
 11870  057F  1191               	line	155
 11871                           	
 11872                           i1l3235:	
 11873  0580                     ;I2C.c: 155:                   wI2CTxNbOfByteToSend=0;
 11874                           	movlb 0	; select bank0
 11875  0580  0020               	clrf	(_wI2CTxNbOfByteToSend)
 11876  0581  01D5               	line	156
 11877                           ;I2C.c: 156:                   wI2CTxSendPos = 0;
 11878                           	clrf	(_wI2CTxSendPos)
 11879  0582  01D2               	line	157
 11880                           	
 11881                           i1l3237:	
 11882  0583                     ;I2C.c: 157:                   if(wI2CCommandState == CommandWillComplet)
 11883                           		movlw	2
 11884  0583  3002               	xorwf	((_wI2CCommandState)),w
 11885  0584  0664               	btfss	status,2
 11886  0585  1D03               	goto	u218_21
 11887  0586  2D88               	goto	u218_20
 11888  0587  2D89               u218_21:
 11889  0588                     	goto	i1l3241
 11890  0588  2D8E               u218_20:
 11891  0589                     	line	159
 11892                           	
 11893                           i1l3239:	
 11894  0589                     ;I2C.c: 158:                   {;I2C.c: 159:                       wI2CCommandState = Co
                                 mmandCompleted;
 11895                           	movlw	low(03h)
 11896  0589  3003               	movwf	(??_I2C_Interrupt+0)+0
 11897  058A  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 11898  058B  0872               	movwf	(_wI2CCommandState)
 11899  058C  00E4               	goto	i1l3241
 11900  058D  2D8E               	line	160
 11901                           ;I2C.c: 160:                   }
 11902                           	
 11903                           i1l585:	
 11904  058E                     	line	161
 11905                           	
 11906                           i1l3241:	
 11907  058E                     ;I2C.c: 161:                   if(wI2CCommandState == CommandWillFail)
 11908                           		movlw	4
 11909  058E  3004               	xorwf	((_wI2CCommandState)),w
 11910  058F  0664               	btfss	status,2
 11911  0590  1D03               	goto	u219_21
 11912  0591  2D93               	goto	u219_20
 11913  0592  2D94               u219_21:
 11914  0593                     	goto	i1l3269
 11915  0593  2DF4               u219_20:
 11916  0594                     	line	163
 11917                           	
 11918                           i1l3243:	
 11919  0594                     ;I2C.c: 162:                   {;I2C.c: 163:                       wI2CCommandState = Co
                                 mmandFailed;
 11920                           	movlw	low(05h)
 11921  0594  3005               	movwf	(??_I2C_Interrupt+0)+0
 11922  0595  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 11923  0596  0872               	movwf	(_wI2CCommandState)
 11924  0597  00E4               	goto	i1l3269
 11925  0598  2DF4               	line	164
 11926                           ;I2C.c: 164:                   }
 11927                           	
 11928                           i1l586:	
 11929  0599                     	line	165
 11930                           ;I2C.c: 165:                 }
 11931                           	goto	i1l3269
 11932  0599  2DF4               	line	166
 11933                           ;I2C.c: 166:                 else if(SSPSTATbits.S && wI2CTxSendPos == 0)
 11934                           	
 11935                           i1l584:	
 11936  059A                     	btfss	(532)^0200h,3	;volatile
 11937  059A  1D94               	goto	u220_21
 11938  059B  2D9D               	goto	u220_20
 11939  059C  2D9E               u220_21:
 11940  059D                     	goto	i1l588
 11941  059D  2DB4               u220_20:
 11942  059E                     	
 11943                           i1l3245:	
 11944  059E                     	movlb 0	; select bank0
 11945  059E  0020               	movf	((_wI2CTxSendPos)),w
 11946  059F  0852               	btfss	status,2
 11947  05A0  1D03               	goto	u221_21
 11948  05A1  2DA3               	goto	u221_20
 11949  05A2  2DA4               u221_21:
 11950  05A3                     	goto	i1l588
 11951  05A3  2DB4               u221_20:
 11952  05A4                     	line	168
 11953                           	
 11954                           i1l3247:	
 11955  05A4                     ;I2C.c: 167:                 {;I2C.c: 168:                     wI2CCommandState = Proces
                                 singCommand;
 11956                           	clrf	(_wI2CCommandState)
 11957  05A4  01E4               	incf	(_wI2CCommandState),f
 11958  05A5  0AE4               	line	169
 11959                           	
 11960                           i1l3249:	
 11961  05A6                     ;I2C.c: 169:                     SSPBUF = wI2CTxBuffer[wI2CTxSendPos];
 11962                           	movf	(_wI2CTxSendPos),w
 11963  05A6  0852               	addlw	low(_wI2CTxBuffer|((0x1)<<8))&0ffh
 11964  05A7  3E48               	movwf	fsr1l
 11965  05A8  0086               	movlw 1	; select bank2/3
 11966  05A9  3001               	movwf fsr1h	
 11967  05AA  0087               	
 11968                           	movf	indf1,w
 11969  05AB  0801               	movlb 4	; select bank4
 11970  05AC  0024               	movwf	(529)^0200h	;volatile
 11971  05AD  0091               	line	170
 11972                           	
 11973                           i1l3251:	
 11974  05AE                     ;I2C.c: 170:                     wI2CTxSendPos++;
 11975                           	movlw	low(01h)
 11976  05AE  3001               	movwf	(??_I2C_Interrupt+0)+0
 11977  05AF  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 11978  05B0  0872               	movlb 0	; select bank0
 11979  05B1  0020               	addwf	(_wI2CTxSendPos),f
 11980  05B2  07D2               	line	171
 11981                           ;I2C.c: 171:                 }
 11982                           	goto	i1l3269
 11983  05B3  2DF4               	line	172
 11984                           ;I2C.c: 172:                 else
 11985                           	
 11986                           i1l588:	
 11987  05B4                     	line	174
 11988                           ;I2C.c: 173:                 {;I2C.c: 174:                     if(SSPCON2bits.ACKSTAT ==
                                  0 && wI2CTxSendPos != 0)
 11989                           	movlb 4	; select bank4
 11990  05B4  0024               	btfsc	(534)^0200h,6	;volatile
 11991  05B5  1B16               	goto	u222_21
 11992  05B6  2DB8               	goto	u222_20
 11993  05B7  2DB9               u222_21:
 11994  05B8                     	goto	i1l590
 11995  05B8  2DDC               u222_20:
 11996  05B9                     	
 11997                           i1l3253:	
 11998  05B9                     	movlb 0	; select bank0
 11999  05B9  0020               	movf	((_wI2CTxSendPos)),w
 12000  05BA  0852               	btfsc	status,2
 12001  05BB  1903               	goto	u223_21
 12002  05BC  2DBE               	goto	u223_20
 12003  05BD  2DBF               u223_21:
 12004  05BE                     	goto	i1l590
 12005  05BE  2DDC               u223_20:
 12006  05BF                     	line	176
 12007                           	
 12008                           i1l3255:	
 12009  05BF                     ;I2C.c: 175:                     {;I2C.c: 176:                       if(wI2CTxSendPos < 
                                 wI2CTxNbOfByteToSend)
 12010                           	movf	(_wI2CTxNbOfByteToSend),w
 12011  05BF  0855               	subwf	(_wI2CTxSendPos),w
 12012  05C0  0252               	skipnc
 12013  05C1  1803               	goto	u224_21
 12014  05C2  2DC4               	goto	u224_20
 12015  05C3  2DC5               u224_21:
 12016  05C4                     	goto	i1l591
 12017  05C4  2DD3               u224_20:
 12018  05C5                     	line	178
 12019                           	
 12020                           i1l3257:	
 12021  05C5                     ;I2C.c: 177:                       {;I2C.c: 178:                         SSPBUF = wI2CTx
                                 Buffer[wI2CTxSendPos];
 12022                           	movf	(_wI2CTxSendPos),w
 12023  05C5  0852               	addlw	low(_wI2CTxBuffer|((0x1)<<8))&0ffh
 12024  05C6  3E48               	movwf	fsr1l
 12025  05C7  0086               	movlw 1	; select bank2/3
 12026  05C8  3001               	movwf fsr1h	
 12027  05C9  0087               	
 12028                           	movf	indf1,w
 12029  05CA  0801               	movlb 4	; select bank4
 12030  05CB  0024               	movwf	(529)^0200h	;volatile
 12031  05CC  0091               	line	179
 12032                           	
 12033                           i1l3259:	
 12034  05CD                     ;I2C.c: 179:                         wI2CTxSendPos++;
 12035                           	movlw	low(01h)
 12036  05CD  3001               	movwf	(??_I2C_Interrupt+0)+0
 12037  05CE  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 12038  05CF  0872               	movlb 0	; select bank0
 12039  05D0  0020               	addwf	(_wI2CTxSendPos),f
 12040  05D1  07D2               	line	180
 12041                           ;I2C.c: 180:                       }
 12042                           	goto	i1l3269
 12043  05D2  2DF4               	line	181
 12044                           ;I2C.c: 181:                       else
 12045                           	
 12046                           i1l591:	
 12047  05D3                     	line	183
 12048                           ;I2C.c: 182:                       {;I2C.c: 183:                             SSPCON2bits
                                 .PEN = 1;
 12049                           	movlb 4	; select bank4
 12050  05D3  0024               	bsf	(534)^0200h,2	;volatile
 12051  05D4  1516               	line	184
 12052                           	
 12053                           i1l3261:	
 12054  05D5                     ;I2C.c: 184:                             wI2CCommandState = CommandWillComplet;
 12055                           	movlw	low(02h)
 12056  05D5  3002               	movwf	(??_I2C_Interrupt+0)+0
 12057  05D6  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 12058  05D7  0872               	movlb 0	; select bank0
 12059  05D8  0020               	movwf	(_wI2CCommandState)
 12060  05D9  00E4               	goto	i1l3269
 12061  05DA  2DF4               	line	185
 12062                           ;I2C.c: 185:                       }
 12063                           	
 12064                           i1l592:	
 12065  05DB                     	line	186
 12066                           ;I2C.c: 186:                     }
 12067                           	goto	i1l3269
 12068  05DB  2DF4               	line	187
 12069                           ;I2C.c: 187:                     else if(SSPCON2bits.ACKSTAT == 1)
 12070                           	
 12071                           i1l590:	
 12072  05DC                     	movlb 4	; select bank4
 12073  05DC  0024               	btfss	(534)^0200h,6	;volatile
 12074  05DD  1F16               	goto	u225_21
 12075  05DE  2DE0               	goto	u225_20
 12076  05DF  2DE1               u225_21:
 12077  05E0                     	goto	i1l3267
 12078  05E0  2DE9               u225_20:
 12079  05E1                     	line	189
 12080                           	
 12081                           i1l3263:	
 12082  05E1                     ;I2C.c: 188:                     {;I2C.c: 189:                         SSPCON2bits.ACKST
                                 AT = 0;
 12083                           	bcf	(534)^0200h,6	;volatile
 12084  05E1  1316               	line	190
 12085                           ;I2C.c: 190:                         SSPCON2bits.PEN = 1;
 12086                           	bsf	(534)^0200h,2	;volatile
 12087  05E2  1516               	line	191
 12088                           	
 12089                           i1l3265:	
 12090  05E3                     ;I2C.c: 191:                         wI2CCommandState = CommandWillFail;
 12091                           	movlw	low(04h)
 12092  05E3  3004               	movwf	(??_I2C_Interrupt+0)+0
 12093  05E4  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 12094  05E5  0872               	movlb 0	; select bank0
 12095  05E6  0020               	movwf	(_wI2CCommandState)
 12096  05E7  00E4               	line	192
 12097                           ;I2C.c: 192:                     }
 12098                           	goto	i1l3269
 12099  05E8  2DF4               	line	193
 12100                           ;I2C.c: 193:                     else
 12101                           	
 12102                           i1l594:	
 12103  05E9                     	line	195
 12104                           	
 12105                           i1l3267:	
 12106  05E9                     ;I2C.c: 194:                     {;I2C.c: 195:                        oErrorCode = 3;
 12107                           	movlw	low(03h)
 12108  05E9  3003               	movwf	(??_I2C_Interrupt+0)+0
 12109  05EA  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 12110  05EB  0872               	movwf	(I2C_Interrupt@oErrorCode)
 12111  05EC  00F4               	goto	i1l3269
 12112  05ED  2DF4               	line	196
 12113                           ;I2C.c: 196:                     }
 12114                           	
 12115                           i1l595:	
 12116  05EE                     	goto	i1l3269
 12117  05EE  2DF4               	
 12118                           i1l593:	
 12119  05EF                     	goto	i1l3269
 12120  05EF  2DF4               	line	197
 12121                           ;I2C.c: 197:                 }
 12122                           	
 12123                           i1l589:	
 12124  05F0                     	goto	i1l3269
 12125  05F0  2DF4               	
 12126                           i1l587:	
 12127  05F1                     	goto	i1l3269
 12128  05F1  2DF4               	line	198
 12129                           ;I2C.c: 198:             }
 12130                           	
 12131                           i1l583:	
 12132  05F2                     	goto	i1l3269
 12133  05F2  2DF4               	line	199
 12134                           ;I2C.c: 199:         }
 12135                           	
 12136                           i1l565:	
 12137  05F3                     	goto	i1l3269
 12138  05F3  2DF4               	line	200
 12139                           ;I2C.c: 200:     }
 12140                           	
 12141                           i1l564:	
 12142  05F4                     	line	201
 12143                           	
 12144                           i1l3269:	
 12145  05F4                     ;I2C.c: 201:     if(PIR2bits.BCLIF == 1)
 12146                           	movlb 0	; select bank0
 12147  05F4  0020               	btfss	(18),3	;volatile
 12148  05F5  1D92               	goto	u226_21
 12149  05F6  2DF8               	goto	u226_20
 12150  05F7  2DF9               u226_21:
 12151  05F8                     	goto	i1l596
 12152  05F8  2DFE               u226_20:
 12153  05F9                     	line	203
 12154                           	
 12155                           i1l3271:	
 12156  05F9                     ;I2C.c: 202:     {;I2C.c: 203:         PIR2bits.BCLIF = 0;
 12157                           	bcf	(18),3	;volatile
 12158  05F9  1192               	line	204
 12159                           	
 12160                           i1l3273:	
 12161  05FA                     ;I2C.c: 204:         oErrorCode = 2;
 12162                           	movlw	low(02h)
 12163  05FA  3002               	movwf	(??_I2C_Interrupt+0)+0
 12164  05FB  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 12165  05FC  0872               	movwf	(I2C_Interrupt@oErrorCode)
 12166  05FD  00F4               	line	205
 12167                           ;I2C.c: 205:     }
 12168                           	
 12169                           i1l596:	
 12170  05FE                     	line	207
 12171                           ;I2C.c: 207:     return oErrorCode;
 12172                           	movf	(I2C_Interrupt@oErrorCode),w
 12173  05FE  0874               	movwf	(??_I2C_Interrupt+0)+0
 12174  05FF  00F2               	clrf	(??_I2C_Interrupt+0)+0+1
 12175  0600  01F3               	movf	0+(??_I2C_Interrupt+0)+0,w
 12176  0601  0872               	movwf	(?_I2C_Interrupt)
 12177  0602  00F0               	movf	1+(??_I2C_Interrupt+0)+0,w
 12178  0603  0873               	movwf	(?_I2C_Interrupt+1)
 12179  0604  00F1               	goto	i1l597
 12180  0605  2E06               	
 12181                           i1l3275:	
 12182  0606                     	line	208
 12183                           	
 12184                           i1l597:	
 12185  0606                     	return
 12186  0606  0008               	opt stack 0
 12187                           GLOBAL	__end_of_I2C_Interrupt
 12188                           	__end_of_I2C_Interrupt:
 12189  0607                     	signat	_I2C_Interrupt,90
 12190                           global	___latbits
 12191                           ___latbits	equ	3
 12192  0003                     	global	btemp
 12193                           	btemp set 07Eh
 12194  007E                     
 12195                           	DABS	1,126,2	;btemp
 12196                           	global	int$flags
 12197                           	int$flags	set btemp
 12198  007E                     	global	wtemp0
 12199                           	wtemp0 set btemp+0
 12200  007E                     global __pbssBIGRAM
 12201                           __pbssBIGRAM	equ	8944
 12202  22F0                     	end


Data Sizes:
    Strings     71
    Constant    0
    Data        13
    BSS         269
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      69
    BANK1            80     59      78
    BANK2            80      0      60
    BANK3            80      0      50
    BANK4            80      0      75
    BANK5            80      0      50
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            32      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), wInterruptText(BANK4[75]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), wInterruptText(BANK4[75]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK4[75]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK4[75]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK4[75]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), 

    strcat@dest	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK4[75]), 

    memset@dest	PTR void  size(2) Largest target is 75
		 -> wI2CTxBuffer(BANK2[20]), wInterruptText(BANK4[75]), 

    memset@s	PTR unsigned char  size(2) Largest target is 75
		 -> wI2CTxBuffer(BANK2[20]), wInterruptText(BANK4[75]), 

    memcpy@d1	PTR void  size(2) Largest target is 256
		 -> wI2CTxBuffer(BANK2[20]), EM1812EntryPoint@ReceptionBuffer(BANK1[8]), gUartTXBuffer(BANK3[50]), gTxBuffer(BIGRAM[256]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 256
		 -> wI2CTxBuffer(BANK2[20]), EM1812EntryPoint@ReceptionBuffer(BANK1[8]), gUartTXBuffer(BANK3[50]), gTxBuffer(BIGRAM[256]), 

    memcpy@s1	PTR const void  size(2) Largest target is 50
		 -> wI2CRxBuffer(BANK2[20]), EM1812EntryPoint@SetGetTempCommand(BANK1[4]), STR_4(CODE[38]), STR_3(CODE[12]), 
		 -> gUartTXBuffer(BANK3[50]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 50
		 -> wI2CRxBuffer(BANK2[20]), EM1812EntryPoint@SetGetTempCommand(BANK1[4]), STR_4(CODE[38]), STR_3(CODE[12]), 
		 -> gUartTXBuffer(BANK3[50]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK4[75]), 

    AddTrace@iText	PTR unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), 

    AddTrace@oText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK4[75]), 

    GetNewReceivedData@oData	PTR unsigned char  size(1) Largest target is 8
		 -> EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 

    I2C_SendData@iData	PTR unsigned char  size(1) Largest target is 4
		 -> EM1812EntryPoint@SetGetTempCommand(BANK1[4]), 

    EM1812EntryPoint@oTemperature	PTR short  size(1) Largest target is 2
		 -> wTemperature(BANK1[2]), 

    EM1812EntryPoint@oHumidity	PTR short  size(1) Largest target is 2
		 -> wHumidity(BANK1[2]), 

    printEM1812@oTextOut	PTR unsigned char  size(1) Largest target is 20
		 -> main@wReadout(BANK1[20]), 

    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
		 -> myint@wText(BANK0[2]), wInterruptText(BANK4[75]), 

    sp__memcpy	PTR void  size(2) Largest target is 256
		 -> wI2CTxBuffer(BANK2[20]), EM1812EntryPoint@ReceptionBuffer(BANK1[8]), gUartTXBuffer(BANK3[50]), gTxBuffer(BIGRAM[256]), 

    Send_UART_Data@iData	PTR unsigned char  size(1) Largest target is 50
		 -> gUartTXBuffer(BANK3[50]), 

    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
		 -> main@wEnterBottonPressed(BANK1[1]), main@wDownBottonPressed(BANK1[1]), main@wUpBottonPressed(BANK1[1]), 

    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
		 -> main@wDebounceDown(BANK1[2]), main@wDebounceUp(BANK1[2]), main@wDebounceEnter(BANK1[2]), 

    sp__memset	PTR void  size(2) Largest target is 75
		 -> wI2CTxBuffer(BANK2[20]), wInterruptText(BANK4[75]), 

    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK4[75]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myint in COMMON

    _myint->i1_lcdWriteText
    i1_lcdWriteText->i1_writeTxtChk
    i1_writeTxtChk->i1_setCursorPosition
    i1_setCursorPosition->i1_waitLCDBusy

Critical Paths under _main in BANK0

    _main->_AddTrace
    _setNotBlinkingCursor->_writeInsChk
    _setCursorOff->_writeInsChk
    _printEM1812->___awdiv
    _powerOnLcd->_writeInsChk
    _moveCursorToHome->_writeInsChk
    _initLCD->_writeInsChk
    _clearDisplay->_writeInsChk
    _writeInsChk->_waitLCDBusy
    _writeInsChk->_writeInsNoChk
    _writeInsNoChk->_setData
    _Send_UART_Data->_memcpy
    _PrintLog->_lcdWriteText
    _lcdWriteText->_writeTxtChk
    _writeTxtChk->_setCursorPosition
    _setCursorPosition->_waitLCDBusy
    _I2CInit->_memset
    _EM1812EntryPoint->_I2C_SendData
    _I2C_SendData->_memcpy
    _GetNewReceivedData->_memcpy
    _AddTrace->_strcat
    _strcat->_strcpy
    _strcpy->_strlen

Critical Paths under _myint in BANK0

    _myint->i1_lcdWriteText

Critical Paths under _main in BANK1

    _main->_EM1812EntryPoint

Critical Paths under _myint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myint in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myint in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myint in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myint in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myint in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myint in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0   22956
                                             39 BANK0      2     2      0
                                             13 BANK1     46    46      0
                           _AddTrace
                           _Debounce
                   _EM1812EntryPoint
                            _I2CInit
                           _PrintLog
                     _Send_UART_Data
                       _clearDisplay
                            _initLCD
                             _memcpy
                             _memset
                   _moveCursorToHome
                         _powerOnLcd
                        _printEM1812
                       _setCursorOff
                  _setCursorPosition
               _setNotBlinkingCursor
 ---------------------------------------------------------------------------------
 (1) _setNotBlinkingCursor                                 1     1      0     178
                                             16 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _setCursorOff                                         1     1      0     178
                                             16 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _printEM1812                                         10     7      3    2050
                                             19 BANK0     10     7      3
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                             10 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                             10 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _powerOnLcd                                           1     1      0     178
                                             16 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _moveCursorToHome                                     0     0      0     178
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     444
                                             16 BANK0      1     1      0
                       _clearDisplay
                            _setData
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _clearDisplay                                         0     0      0     178
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _writeInsChk                                          1     1      0     178
                                             15 BANK0      1     1      0
                        _waitLCDBusy
                      _writeInsNoChk
 ---------------------------------------------------------------------------------
 (3) _writeInsNoChk                                        2     2      0     132
                                             13 BANK0      2     2      0
                 _SetToSendDataToLCD
                            _setData
 ---------------------------------------------------------------------------------
 (1) _Send_UART_Data                                       4     3      1    1903
                                             22 BANK0      4     3      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _PrintLog                                             4     4      0    3692
                                             28 BANK0      4     4      0
                       _lcdWriteText
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _lcdWriteText                                         5     3      2    1427
                                             23 BANK0      5     3      2
                        _writeTxtChk
 ---------------------------------------------------------------------------------
 (3) _writeTxtChk                                          3     3      0    1221
                                             20 BANK0      3     3      0
                 _SetToSendDataToLCD
                  _setCursorPosition
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (1) _setCursorPosition                                    5     4      1    1043
                                             15 BANK0      5     4      1
                 _SetToSendDataToLCD
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (3) _waitLCDBusy                                          5     5      0      24
                                             10 BANK0      5     5      0
               _SetToReadDataFromLCD
 ---------------------------------------------------------------------------------
 (4) _SetToReadDataFromLCD                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setData                                              3     3      0      88
                                             10 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _SetToSendDataToLCD                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2CInit                                              0     0      0    1677
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                              14     8      6    1677
                                             10 BANK0     14     8      6
 ---------------------------------------------------------------------------------
 (1) _EM1812EntryPoint                                    20    18      2    4404
                                             27 BANK0      7     5      2
                                              0 BANK1     13    13      0
                       _GetI2CStatus
                 _GetNewReceivedData
                        _I2C_GetData
                       _I2C_SendData
 ---------------------------------------------------------------------------------
 (2) _I2C_SendData                                         5     3      2    1808
                                             22 BANK0      5     3      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _I2C_GetData                                          4     2      2     183
                                             10 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _GetNewReceivedData                                   4     3      1    1746
                                             22 BANK0      4     3      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _memcpy                                              12     6      6    1558
                                             10 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) _GetI2CStatus                                         4     2      2       0
                                             10 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Debounce                                             5     3      2     632
                                             10 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _AddTrace                                            10     7      3    2024
                                             29 BANK0     10     7      3
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcat                                               5     3      2     780
                                             24 BANK0      5     3      2
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     394
                                             10 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     6      2     205
                                             16 BANK0      8     6      2
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _myint                                                6     6      0    1359
                                              4 BANK0      6     6      0
                      _I2C_Interrupt
                  _TempUpdateRequest
                     i1_lcdWriteText
 ---------------------------------------------------------------------------------
 (8) i1_lcdWriteText                                       5     3      2    1185
                                             13 COMMON     1     1      0
                                              0 BANK0      4     2      2
                      i1_writeTxtChk
 ---------------------------------------------------------------------------------
 (9) i1_writeTxtChk                                        3     3      0    1051
                                             10 COMMON     3     3      0
               i1_SetToSendDataToLCD
                i1_setCursorPosition
                          i1_setData
                      i1_waitLCDBusy
 ---------------------------------------------------------------------------------
 (10) i1_setCursorPosition                                 5     4      1     797
                                              5 COMMON     5     4      1
               i1_SetToSendDataToLCD
                          i1_setData
                      i1_waitLCDBusy
 ---------------------------------------------------------------------------------
 (10) i1_waitLCDBusy                                       5     5      0      37
                                              0 COMMON     5     5      0
             i1_SetToReadDataFromLCD
 ---------------------------------------------------------------------------------
 (11) i1_SetToReadDataFromLCD                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_setData                                           3     3      0     124
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (11) i1_SetToSendDataToLCD                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TempUpdateRequest                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_Interrupt                                        5     3      2      26
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AddTrace
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _Debounce
   _EM1812EntryPoint
     _GetI2CStatus
     _GetNewReceivedData
       _memcpy
     _I2C_GetData
     _I2C_SendData
       _memcpy
   _I2CInit
     _memset
   _PrintLog
     _lcdWriteText
       _writeTxtChk
         _SetToSendDataToLCD
         _setCursorPosition
           _SetToSendDataToLCD
           _setData
           _waitLCDBusy
             _SetToReadDataFromLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
     _memset
     _strlen
   _Send_UART_Data
     _memcpy
   _clearDisplay
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _initLCD
     _clearDisplay
       _writeInsChk
         _waitLCDBusy
           _SetToReadDataFromLCD
         _writeInsNoChk
           _SetToSendDataToLCD
           _setData
     _setData
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _memcpy
   _memset
   _moveCursorToHome
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _powerOnLcd
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _printEM1812
     ___awdiv
     ___awmod
   _setCursorOff
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _setCursorPosition
     _SetToSendDataToLCD
     _setData
     _waitLCDBusy
       _SetToReadDataFromLCD
   _setNotBlinkingCursor
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData

 _myint (ROOT)
   _I2C_Interrupt
   _TempUpdateRequest
   i1_lcdWriteText
     i1_writeTxtChk
       i1_SetToSendDataToLCD
       i1_setCursorPosition
         i1_SetToSendDataToLCD
         i1_setData
         i1_waitLCDBusy
           i1_SetToReadDataFromLCD
       i1_setData
       i1_waitLCDBusy
         i1_SetToReadDataFromLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     29      45       5       86.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     3B      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3C       9       75.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      32      11       62.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4B      13       93.8%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      32      15       62.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     18C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               20      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     18C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Feb 24 15:01:02 2019

                                 pc 0002                          __CFG_FOSC$ 0002  
                       __CFG_CP$OFF 0000                         _SSPSTATbits 0214  
                      ___awdiv@sign 0030                  _SetToSendDataToLCD 0986  
              __size_of_I2C_GetData 0036                                 l200 0301  
                               l201 0302                                 l202 038C  
                               l203 035E                                 l300 0FFF  
                               l204 038B                                 l301 0FC9  
                               l205 039B                                 l302 0FA9  
                               l150 0BB3                                 l310 09BB  
                               l206 03A5                                 l303 0FE0  
                               l151 0BB3                                 l207 03A6  
                               l304 0FB0                                 l208 03A7  
                               l305 0FB7                                 l161 0B0B  
                               l313 0A2F                                 l209 03A7  
                               l154 0CDB                                 l322 0B7D  
                               l306 0FBE                                 l162 0B2C  
                               l155 0CE2                                 l323 0B65  
                               l307 0FC7                                 l331 09C6  
                               l156 0CF5                                 l316 0991  
                               l324 0B85                                 l340 09D1  
                               l157 0D0F                                 l325 0B85  
                               l158 0D0F                                 l190 02C7  
                               l319 098B                                 l191 02ED  
                               l183 0201                                 l272 0ED8  
                               l432 06E7                                 l192 02C8  
                               l184 028D                                 l433 073F  
                               l337 09DC                                 l193 02D0  
                               l185 028C                                 l290 0CCA  
                               l370 0DE3                                 l434 0754  
                               l194 02D1                                 l371 0DB7  
                               l275 0ACB                                 l435 0787  
                               l195 031C                                 l187 0227  
                               l604 0C52                                 l460 03E1  
                               l540 0A17                                 l372 0DF9  
                               l276 0AB8                                 l364 0979  
                               l196 0307                                 l188 02EE  
                               l605 0C52                                 l461 04DD  
                               l373 0DC0                                 l293 0FA8  
                               l277 0ADA                                 l197 02F8  
                               l189 02D9                                 l550 0D41  
                               l470 0431                                 l462 03E2  
                               l374 0DCB                                 l294 0F83  
                               l278 0ADA                                 l198 031B  
                               l543 09B0                                 l551 0D54  
                               l471 043D                                 l463 03EE  
                               l375 0DD6                                 l295 0FA6  
                               l367 09A6                                 l199 02F9  
                               l560 0A6B                                 l480 04E0  
                               l472 043E                                 l464 03EF  
                               l376 0DE1                                 l296 0F90  
                               l561 0A6B                                 l481 04C6  
                               l473 044B                                 l465 040B  
                               l377 0E12                                 l297 0FA5  
                               l554 0C15                                 l546 0D51  
                               l458 04CB                                 l482 04C8  
                               l474 04C5                                 l466 040A  
                               l298 0F9D                                 l483 04C9  
                               l475 04C4                                 l467 0430  
                               l459 03CB                                 l299 0FA4  
                               l556 0BF2                                 l548 0D1F  
                               l476 0483                                 l468 042F  
                               l557 0C18                                 l549 0D3D  
                               l477 048C                                 l469 042E  
                               l478 04AF                                 l479 04B9  
                               l760 07E0                                 l752 0796  
                               l761 07EC                                 l753 07A4  
                               l762 07F1                                 l754 07E1  
                               l770 0D85                                 l755 07B9  
                               l771 0D86                                 l756 07AF  
                               l772 0D95                                 l757 07BE  
                               l773 0DA1                                 l765 0D63  
                               l758 07BF                                 l774 0DAD  
                               l766 0D6D                                 l759 07D4  
                               l775 0DB2                                 l767 0DA2  
                               l768 0D80                                 l769 0D76  
                   __end_of_I2CInit 0A18               _wReceptionCounterPrev 0056  
                      ___awmod@sign 0030                        __CFG_BORV$LO 0000  
                               wreg 0009                 ?_SetToSendDataToLCD 0070  
I2C_GetData@iRxNumberOfByteExpected 002A                                S4745 07F2  
         EM1812EntryPoint@oHumidity 00AC                        __CFG_LVP$OFF 0000  
                    ??_lcdWriteText 0039                      myint@wI2CError 0028  
                              l1050 06D7                                l1043 0BD5  
                              l1051 0637                                l1044 0BBE  
                              l1052 067E                                l1045 0BE2  
                              l1053 06A7                                l1046 0BE2  
                              l1054 06D0                                l1063 0A48  
                              l1055 06C1                                l1072 0A77  
                              l1056 06D7                                l1073 0A72  
                              l1049 0614                                l1066 0A9C  
                              l1074 0A81                                l1067 0A9B  
                              l1075 0A8F                                l3011 0E99  
                              l1068 0AB4                                l1069 0AB4  
                              l3021 0EB9                                l3013 0E9D  
                              l3023 0EC1                                l3015 0EAA  
                              l3007 0E75                                l3031 09C2  
                              l4001 0BE5                                l3025 0EC6  
                              l3017 0EAD                                l3009 0E91  
                              l3033 09C7                                l3041 09D2  
                              l4011 0C04                                l4003 0BEB  
                              l3027 0ED5                                l3019 0EB5  
                              l3035 09CD                                l3043 09D8  
                              l4021 0C0C                                l4013 0C05  
                              l4005 0BF2                                l2501 0DB5  
                              l4101 0B94                                l3037 099F  
                              l3029 09BC                                l3141 06DF  
                              l4031 0A4B                                l4023 0C0E  
                              l4015 0C06                                l4007 0BF8  
                              l2511 0DE2                                l2503 0DB7  
                              l4103 0B99                                l4111 0B0B  
                              l3039 09A3                                l3151 0717  
                              l3143 06E1                                l4033 0A50  
                              l4025 0C14                                l4017 0C08  
                              l4009 0BFD                                l4201 04AF  
                              l2521 0E01                                l2505 0DC0  
                              l2513 0DE3                                l2601 0F77  
                              l4105 0BA0                                l4121 0B26  
                              l4113 0B0C                                l3161 0744  
                              l3153 0727                                l3145 06E7  
                              l3137 06D8                                l4035 0A56  
                              l4019 0C0A                                l4027 0C15  
                              l4211 04CA                                l4203 04B9  
                              l4131 0A02                                l2523 0E02  
                              l2507 0DCB                                l2515 0DF9  
                              l2611 0F97                                l2603 0F7D  
                              l4123 0B27                                l4115 0B10  
                              l4107 0B04                                l2531 0A1A  
                              l3171 077C                                l3163 074F  
                              l3155 0730                                l3147 06F7  
                              l3139 06DB                                l4037 0A57  
                              l4029 0C18                                l4205 04BE  
                              l4141 03DA                                l4213 04CB  
                              l4133 0A08                                l2525 0E0D  
                              l2517 0DFC                                l2509 0DD6  
                              l2621 0FB7                                l2613 0F9D  
                              l2605 0F83                                l4125 0B28  
                              l4117 0B22                                l4109 0B0A  
                              l2533 0A1D                                l3173 0780  
                              l3165 0754                                l3157 073A  
                              l3149 0707                                l4301 016D  
                              l3175 0C1B                                l4039 0A6A  
                              l4207 04C3                                l4151 03EC  
                              l4143 03DD                                l4215 04DD  
                              l4135 03AB                                l2471 0C91  
                              l2519 0DFF                                l2623 0FBE  
                              l2631 0FE0                                l2615 0FA7  
                              l2607 0F8A                                l4127 0B29  
                              l4119 0B24                                l2535 0A1F  
                              l3167 0763                                l3159 073F  
                              l4311 017A                                l4303 016E  
                              l3177 0C49                                l4217 04E0  
                              l4209 04C6                                l4161 0405  
                              l4153 03EF                                l4145 03DF  
                              l4137 03BB                                l2481 0986  
                              l2473 0C92                                l2641 0FF3  
                              l2633 0FE3                                l2625 0FC4  
                              l2617 0FA9                                l2609 0F90  
                              l4129 0B2A                                l2537 0A20  
                              l3169 076D                                l4401 0292  
                              l4321 0180                                l4313 017C  
                              l4305 0170                                l4241 0138  
                              l2651 0A92                                l2571 0A72  
                              l2811 0A32                                l4171 042A  
                              l4155 03FA                                l4163 040B  
                              l4147 03E2                                l4139 03CB  
                              l2475 0CC4                                l2491 0B74  
                              l2483 0B59                                l2643 0FF8  
                              l2635 0FE6                                l2627 0FC8  
                              l2619 0FB0                                l2539 0A2A  
                              l4411 02C5                                l4403 02A0  
                              l4331 0185                                l4323 0181  
                              l4315 017D                                l4307 0171  
                              l4251 013E                                l4243 013A  
                              l4235 0120                                l2653 0A9C  
                              l2573 0A77                                l2813 0A48  
                              l4181 043B                                l4173 042B  
                              l4165 0416                                l4157 03FB  
                              l4149 03E8                                l2477 0CC6  
                              l2469 098C                                l2493 0B75  
                              l2485 0B5C                                l2645 0FFA  
                              l2637 0FE8                                l2629 0FC9  
                              l2821 0793                                l4413 02C8  
                              l4421 02EE                                l4405 02AE  
                              l4341 018D                                l4333 0186  
                              l4325 0182                                l4317 017E  
                              l4309 0173                                l4261 0146  
                              l4253 013F                                l4245 013B  
                              l4237 0126                                l2575 0A81  
                              l4191 045E                                l4183 043E  
                              l4175 042C                                l4167 0425  
                              l4159 03FF                                l2479 0CC8  
                              l2495 0B79                                l2487 0B5F  
                              l2639 0FE9                                l2591 09B3  
                              l2735 0975                                l2831 07A6  
                              l2823 0796                                l2815 0788  
                              l4431 0306                                l4423 02F4  
                              l4415 02D1                                l4407 02BD  
                              l4351 01AE                                l4343 0190  
                              l4335 0188                                l4327 0183  
                              l4319 017F                                l4271 014F  
                              l4263 0148                                l4255 0140  
                              l4247 013C                                l4239 0135  
                              l2577 0A8F                                l2569 0A6C  
                              l4193 0463                                l4185 0449  
                              l4177 0431                                l4169 0429  
                              l2497 0B7B                                l2489 0B68  
                              l2593 0F6B                                l2841 07BF  
                              l2833 07AC                                l2825 079A  
                              l2817 078A                                l4441 0325  
                              l4433 0307                                l4425 02F6  
                              l4417 02D8                                l4409 02C3  
                              l4361 01D8                                l4353 01BA  
                              l4345 019C                                l4337 0189  
                              l4329 0184                                l4281 0159  
                              l4273 0151                                l4265 014A  
                              l4257 0142                                l4249 013D  
                              l4195 0483                                l4187 044B  
                              l4179 0437                                l2595 0F6E  
                              l4099 0B88                                l2843 07CE  
                              l2835 07AF                                l2851 07E1  
                              l2827 079F                                l2819 078E  
                              l4451 0337                                l4443 032A  
                              l4427 02F9                                l4435 031C  
                              l4419 02D9                                l4371 01EB  
                              l4363 01DB                                l4355 01BD  
                              l4347 019F                                l4339 018A  
                              l4291 0160                                l4283 015A  
                              l4275 0152                                l4267 014C  
                              l4259 0144                                l4197 048C  
                              l4189 0456                                l2597 0F70  
                              l2853 07E6                                l2845 07D2  
                              l2837 07B4                                l2829 07A4  
                              l2861 0D57                                l4453 0347  
                              l4445 032C                                l4461 035E  
                              l4437 0322                                l4429 0302  
                              l4381 0227                                l4373 01F3  
                              l4365 01E3                                l4357 01C9  
                              l4349 01AB                                l4293 0163  
                              l4285 015B                                l4277 0153  
                              l4269 014E                                l4199 0491  
                              l2599 0F71                                l2855 07EC  
                              l2847 07D4                                l2839 07B9  
                              l2871 0D6D                                l2863 0D5B  
                              l4471 0388                                l4463 0362  
                              l4455 034D                                l4447 0333  
                              l4439 0324                                l4391 025E  
                              l4383 022F                                l4375 0201  
                              l4367 01E5                                l4359 01CC  
                              l4295 0166                                l4287 015C  
                              l4279 0155                                l3921 0AC5  
                              l2857 07F1                                l2849 07D9  
                              l2881 0D86                                l2873 0D73  
                              l2865 0D60                                l4481 03A1  
                              l4465 0372                                l4457 0353  
                              l4449 0335                                l4473 038C  
                              l4393 026D                                l4385 0235  
                              l4377 0211                                l4369 01E8  
                              l4297 0168                                l4289 015E  
                              l2971 0CEF                                l2963 0CCD  
                              l3931 0614                                l3923 0ACB  
                              l2891 0DA7                                l2883 0D90  
                              l2875 0D76                                l2867 0D63  
                              l2859 0D55                                l4483 03A3  
                              l4475 0392                                l4467 0378  
                              l4459 0354                                l4395 027A  
                              l4387 0244                                l4379 021C  
                              l4299 016B                                l2973 0CF5  
                              l2965 0CD2                                l3941 0673  
                              l3933 061A                                l3925 0607  
                              l4741 0DEB                                l3917 0AB5  
                              l2893 0DAD                                l2885 0D95  
                              l2877 0D7B                                l2869 0D67  
                              l4477 0394                                l4469 037E  
                              l4397 0287                                l4389 0251  
                              l2975 0D02                                l2967 0CDB  
                              l4743 04D3                                l3951 06A7  
                              l3943 067D                                l3935 062C  
                              l3927 060C                                l3919 0AB8  
                              l2895 0DB2                                l2887 0D9A  
                              l2879 0D80                                l4479 039B  
                              l4735 02E2                                l4399 028D  
                              l2977 0D09                                l2969 0CE2  
                              l3881 0BCA                                l3961 06C7  
                              l3953 06B4                                l3945 067E  
                              l3937 0636                                l3929 0613  
                              l2889 0DA2                                l4737 0310  
                              l3883 0BD0                                l3875 0BB4  
                              l3971 0D1F                                l3963 06CB  
                              l3955 06B8                                l3947 069C  
                              l3939 0637                                l4739 0FD2  
                              l3877 0BBE                                l3885 0BD5  
                              l3981 0D41                                l3973 0D25  
                              l3965 06D0                                l3957 06BC  
                              l3949 06A6                                l3879 0BC6  
                              l3991 0D50                                l3983 0D42  
                              l3975 0D37                                l3967 0D12  
                              l3959 06C1                                l3985 0D44  
                              l3977 0D3D                                l3993 0D51  
                              l3969 0D18                                l3995 0D54  
                              l3987 0D48                                l3979 0D40  
                              l3997 09A7                                l3989 0D4A  
                              l3999 09B0                                STR_1 1026  
                              STR_2 103E                                STR_3 1032  
                              STR_4 1000                                u2000 06DF  
                              u2001 06DE                                u2010 0730  
                              u2011 072F                                u1300 0B84  
                              u2020 0744                                u1301 0B83  
                              u2021 0743                                u2030 0C49  
                              u2031 0C48                                u1400 0F8A  
                              u3000 0392                                u1401 0F89  
                              u3001 0391                                u1410 0F97  
                              u3010 03A1                                u2035 0C45  
                              u1315 0E05                                u1411 0F96  
                              u3011 03A0                                u1325 0A23  
                              u1430 0AB3                                u1431 0AB2  
                              u1360 0A80                                u1600 079A  
                              u1361 0A7F                                u1425 0FEC  
                              u1601 0799                                u1610 07AC  
                              u1611 07AB                                u1380 0F77  
                              u1700 0D67                                u1285 0C95  
                              u1381 0F76                                u1701 0D66  
                              u1390 0F7D                                u1630 07BD  
                              u1710 0D73                                u1295 0CA6  
                              u1391 0F7C                                u1631 07BC  
                              u1711 0D72                                u3207 01F9  
                              u2600 0612                                u2601 0611  
                              u3217 0E95                                u1625 07B0  
                              u2610 0635                                u1650 07CE  
                              u1730 0D84                                u2611 0634  
                              u3227 0EA1                                u1651 07CD  
                              u1731 0D83                                u3147 0196  
                              u2700 0BF8                                u2620 067C  
                              u1740 0D90                                u2701 0BF7  
                              u2621 067B                                u3237 0EAB  
                              u1645 07C0                                u1741 0D8F  
                              u1725 0D77                                u3157 01A5  
                              u2710 0A50                                u2630 06A5  
                              u1670 07DF                                u1590 078E  
                              u2711 0A4F                                u2631 06A4  
                              u3247 0EB2                                u1671 07DE  
                              u1655 07CA                                u1591 078D  
                              u3167 01B4                                u1840 0CD2  
                              u2720 0A56                                u2800 03C6  
                              u2640 06D6                                u1680 07E6  
                              u1760 0DA0                                u1841 0CD1  
                              u2721 0A55                                u2641 06D5  
                              u3257 0EBA                                u1681 07E5  
                              u1665 07D5                                u1761 0D9F  
                              u1745 0D8C                                u3177 01C3  
                              u1850 0CEF                                u2570 0BE1  
                              u2650 0D18                                u2810 03DA  
                              u1770 0DA7                                u1690 0D5B  
                              u1851 0CEE                                u2571 0BE0  
                              u2651 0D17                                u2811 03D9  
                              u1771 0DA6                                u1755 0D96  
                              u1691 0D5A                                u3187 01D2  
                              u1860 0D02                                u2660 0D1E  
                              u2900 0463                                u2820 03E8  
                              u1861 0D01                                u2661 0D1D  
                              u2901 0462                                u2821 03E7  
                              u3197 01EF                                u2670 0D25  
                              u2910 0491                                u2830 03FA  
                              u2590 0AD9                                u2671 0D24  
                              u2911 0490                                u2831 03F9  
                              u2591 0AD8                                u2680 0BEB  
                              u2840 0405                                u2681 0BEA  
                              u2841 0404                                u2690 0BF1  
                              u2850 0416                                u2930 0211  
                              u2691 0BF0                                u2851 0415  
                              u2931 0210                                u2860 0425  
                              u2780 0B99                                u2940 021C  
                              u2861 0424                                u2781 0B98  
                              u2941 021B                                u2870 0437  
                              u2790 0B09                                u2950 0226  
                              u2871 0436                                u2791 0B08  
                              u2951 0225                                u2880 0449  
                              u2960 02C3                                u2881 0448  
                              u2961 02C2                                u2945 0218  
                              u2890 0456                                u2970 02F4  
                              u2891 0455                                u2971 02F3  
                              u2955 0222                                u2980 0322  
                              u2981 0321                                u2990 032A  
                              u2991 0329                                _TMR0 0015  
                              _WPUB 020D                        __CFG_WRT$OFF 0000  
              printEM1812@wVariable 0033                                _main 0120  
                              _test 0049                                fsr0h 0005  
                              fsr1h 0007                                indf0 0000  
                              fsr0l 0004                                indf1 0001  
                              fsr1l 0006                                btemp 007E  
                     __CFG_BOREN$ON 0000                                start 00B1  
             __size_of_I2C_SendData 0045                       __CFG_IESO$OFF 0000  
              ??_SetToSendDataToLCD 002A               __size_of_GetI2CStatus 000A  
              __end_of_clearDisplay 097A             I2C_Interrupt@oErrorCode 0074  
                  ??_Send_UART_Data 0037                        main@wCounter 00C5  
                             ?_main 0070                         _writeInsChk 09B1  
                   __end_of___awdiv 07F2                       __CFG_WDTE$OFF 0000  
                   __end_of___awmod 0DB3                     ___awdiv@divisor 002A  
                      main@wReadout 00B1                               i1l300 0F68  
                             i1l220 004E                               i1l301 0F33  
                             i1l221 006E                               i1l302 0F17  
                             i1l230 00AD                               i1l222 0068  
                             i1l303 0F4A                               i1l231 00AF  
                             i1l223 006D                               i1l304 0F1D  
                             i1l224 00AF                               i1l216 0022  
                             i1l305 0F23                               i1l225 0090  
                             i1l217 0043                               i1l322 0B51  
                             i1l306 0F29                               i1l218 0037  
                             i1l323 0B38                               i1l307 0F31  
                             i1l227 007D                               i1l219 0042  
                             i1l316 0985                               i1l324 0B58  
                             i1l228 00AE                               i1l325 0B58  
                             i1l229 00A7                               i1l319 097F  
                             i1l290 0C8E                               i1l370 0E46  
                             i1l371 0E16                               i1l275 0AF1  
                             i1l372 0E5C                               i1l276 0ADD  
                             i1l373 0E20                               i1l293 0F16  
                             i1l277 0B01                               i1l374 0E2C  
                             i1l294 0EF2                               i1l278 0B01  
                             i1l447 0A00                               i1l375 0E38  
                             i1l295 0F14                               i1l448 0A01  
                             i1l376 0E44                               i1l296 0EFF  
                             i1l449 0A01                               i1l377 0E74  
                             i1l297 0F13                               i1l570 0577  
                             i1l298 0F0C                               i1l571 0543  
                             i1l299 0F12                               i1l564 05F4  
                             i1l580 056D                               i1l572 0536  
                             i1l565 05F3                               i1l581 0570  
                             i1l573 0540                               i1l590 05DC  
                             i1l574 0576                               i1l582 0574  
                             i1l566 0579                               i1l583 05F2  
                             i1l591 05D3                               i1l575 055A  
                             i1l567 04FD                               i1l592 05DB  
                             i1l584 059A                               i1l568 0578  
                             i1l576 0556                               i1l593 05EF  
                             i1l585 058E                               i1l577 0559  
                             i1l569 0517                               i1l594 05E9  
                             i1l586 0599                               i1l578 0575  
                             i1l587 05F1                               i1l595 05EE  
                             i1l579 0571                               i1l596 05FE  
                             i1l588 05B4                               i1l597 0606  
                             i1l589 05F0                     ___awdiv@counter 002F  
                             _RCREG 0199                               _TMR1H 0017  
                             _TMR1L 0016                               _PORTA 000C  
                             _PORTB 000D              printEM1812@wIsNegative 003A  
                             _TRISB 008D                               _TXREG 019A  
                       _writeTxtChk 0F69                       __CFG_PWRTE$ON 0000  
                    __CFG_FCMEN$OFF 0000             ?i1_SetToReadDataFromLCD 0070  
                   __end_of_initLCD 0ED9              ??_SetToReadDataFromLCD 002A  
                  __end_of_AddTrace 0C53                        _I2C_SendData 0D10  
                             _myint 0004                     __end_of_setData 0CCB  
                      _GetI2CStatus 09A7                   ?_EM1812EntryPoint 003B  
          _wI2CRxNbOfByteToReceived 0054              __size_of_I2C_Interrupt 0126  
                             status 0003                               wtemp0 007E  
                  __end_of_Debounce 0D10              ??_setNotBlinkingCursor 0030  
                ??_EM1812EntryPoint 003D                      __CFG_MCLRE$OFF 0000  
                   __initialization 00B3       i1lcdWriteText@wCharReadingPos 007D  
                      __end_of_main 03A9                 i1lcdWriteText@iText 0020  
                __size_ofi1_setData 003C                           ??_I2CInit 0038  
                    __CFG_LPBOR$OFF 0000                              ??_main 0047  
                I2C_GetData@iAdress 002D                       AddTrace@iText 003E  
    __end_ofi1_SetToReadDataFromLCD 0986                       AddTrace@oText 0046  
             __end_ofi1_writeTxtChk 0F69                    __end_of_PrintLog 0BB4  
                      ?_waitLCDBusy 0070                EM1812EntryPoint@wTry 004B  
                     _gUartRXBuffer 02A0                    ___awdiv@dividend 002C  
                            ?_myint 0070                              _ANSELB 018D  
                     _gUartTXBuffer 01A0                              i1l3201 0512  
                            i1l3211 0533                              i1l3203 051C  
                            i1l3221 054D                              i1l3213 0538  
                            i1l3205 0526                              i1l3231 056A  
                            i1l3223 0553                              i1l3215 053D  
                            i1l3207 052A                              i1l3241 058E  
                            i1l3233 057E                              i1l3225 055F  
                            i1l3217 0540                              i1l3209 052C  
                            i1l4041 0EDA                              i1l3251 05AE  
                            i1l3243 0594                              i1l3235 0580  
                            i1l3227 0560                              i1l3219 0547  
                            i1l4051 0EEC                              i1l4043 0EDD  
                            i1l3261 05D5                              i1l3253 05B9  
                            i1l3245 059E                              i1l3237 0583  
                            i1l3229 0565                              i1l3181 04E2  
                            i1l4061 0F0C                              i1l4053 0EF2  
                            i1l4045 0EDF                              i1l3271 05F9  
                            i1l3263 05E1                              i1l3255 05BF  
                            i1l3247 05A4                              i1l3239 0589  
                            i1l3191 04F7                              i1l3183 04E7  
                            i1l4071 0F29                              i1l4063 0F15  
                            i1l4055 0EF9                              i1l4047 0EE0  
                            i1l4231 0AEB                              u210_20 051C  
                            i1l3273 05FA                              i1l3265 05E3  
                            i1l3257 05C5                              i1l3249 05A6  
                            u210_21 051B                              i1l3193 04F9  
                            i1l3185 04E8                              i1l3281 09FE  
                            i1l4081 0F4D                              i1l4073 0F2E  
                            i1l4065 0F17                              i1l4057 0EFF  
                            i1l4049 0EE6                              i1l4233 0AF1  
                            i1l3275 0606                              i1l3267 05E9  
                            i1l3259 05CD                              i1l3195 0501  
                            i1l3187 04ED                              i1l3179 04E1  
                            i1l3283 09FF                              i1l4091 0F61  
                            i1l4083 0F50                              i1l4075 0F32  
                            i1l4067 0F1D                              i1l4059 0F06  
                            i1l4227 0ADB                              i1l3197 0507  
                            i1l3189 04F2                              i1l3269 05F4  
                            i1l3277 09F5                              i1l4093 0F63  
                            i1l4085 0F52                              i1l4069 0F23  
                            i1l4077 0F33                              i1l4229 0ADD  
                            i1l4501 0014                              i1l3199 050F  
                            i1l3279 09FC                              i1l4087 0F53  
                            i1l4079 0F4A                              i1l4511 002B  
                            i1l4503 0019                              u211_20 0533  
                            u211_21 0532                              i1l4089 0F5D  
                            i1l4513 0032                              i1l4521 0043  
                            i1l4505 001A                              i1l4531 0059  
                            i1l4523 0047                              i1l4515 0037  
                            i1l4507 0022                              i1l3901 0E5C  
                            i1l4541 0073                              i1l4533 0062  
                            i1l4525 0048                              i1l4517 003D  
                            i1l4509 0027                              i1l3911 0E70  
                            i1l3903 0E5F                              i1l4551 00A2  
                            i1l4543 0078                              i1l4535 0068  
                            i1l4527 004E                              i1l4519 003E  
                            u220_20 059E                              u212_20 0547  
                            u204_20 04E7                              u220_21 059D  
                            u212_21 0546                              u204_21 04E6  
                            i1l3905 0E62                              i1l4553 00A7  
                            i1l4545 007D                              i1l4537 006A  
                            i1l4529 0053                              i1l3851 0C88  
                            i1l3907 0E64                              i1l4547 0090  
                            i1l4539 006E                              i1l3853 0C8A  
                            i1l3845 0980                              i1l3861 0B30  
                            i1l3909 0E65                              i1l4549 0097  
                            i1l3855 0C8C                              i1l3847 0C54  
                            i1l3871 0B4D                              i1l3863 0B33  
                            u221_20 05A4                              u213_20 054D  
                            u205_20 04ED                              u221_21 05A3  
                            u213_21 054C                              u205_21 04EC  
                            i1l3857 097A                              i1l3849 0C56  
                            i1l3873 0B4F                              i1l3865 0B3C  
                            i1l4497 0006                              i1l3867 0B48  
                            i1l3859 0B2D                              i1l3891 0E20  
                            i1l4747 0F3C                              i1l4499 000E  
                            i1l3869 0B49                              i1l4749 0E4E  
                            i1l3893 0E2C                              i1l3895 0E38  
                            i1l3887 0E14                              u222_20 05B9  
                            u214_20 0553                              u206_20 04F2  
                            u310_20 0078                              u302_20 0014  
                            u222_21 05B8                              u214_21 0552  
                            u206_21 04F1                              i1l3897 0E45  
                            i1l3889 0E16                              u310_21 0077  
                            u302_21 0013                              i1l3899 0E46  
                            u223_20 05BF                              u215_20 055F  
                            u207_20 04F7                              u311_20 007C  
                            u303_20 0027                              u223_21 05BE  
                            u215_21 055E                              u207_21 04F6  
                            u311_21 007B                              u303_21 0026  
                     setData@iValue 002C                              u224_20 05C5  
                            u216_20 056A                              u208_20 0501  
                            u304_20 0032                              u224_21 05C4  
                            u216_21 0569                              u208_21 0500  
                            u304_21 0031                              u312_25 0082  
                            u225_20 05E1                              u217_20 057E  
                            u209_20 0507                              u313_20 0097  
                            u305_20 003D                              u225_21 05E0  
                            u217_21 057D                              u209_21 0506  
                            u313_21 0096                              u305_21 003C  
                            u226_20 05F9                              u218_20 0589  
                            u306_20 0047                              u226_21 05F8  
                            u218_21 0588                              u306_21 0046  
                            u219_20 0594                              u227_20 09FC  
                            u307_20 0053                              u219_21 0593  
                            u227_21 09FB                              u307_21 0052  
                            u308_20 0059                              u308_21 0058  
                            u309_20 0073                              u309_21 0072  
                            u254_25 0C59                              u255_25 0C6A  
                            u256_20 0B57                              u256_21 0B56  
                            u273_20 0EE6                              u273_21 0EE5  
                 _setCursorPosition 0DB3                              u274_20 0EEC  
                            u274_21 0EEB                              u258_25 0E68  
                            u275_20 0EF9                              u275_21 0EF8  
                            u276_20 0F06                              u292_20 0B00  
                            u276_21 0F05                              u292_21 0AFF  
                            u277_25 0F56                              _SPBRGH 019C  
                            _SPBRGL 019B                              _SSPADD 0212  
                            _SSPBUF 0211                  ?_setCursorPosition 002F  
                 _TempUpdateRequest 09F5                 ??_setCursorPosition 0030  
                         ??___awdiv 002E                           ??___awmod 002E  
              __end_of_lcdWriteText 0ADB             main@wEnterBottonPressed 00D9  
                            _memcpy 0BB4                        ?_printEM1812 0033  
                            _memset 0607                  ?_TempUpdateRequest 0070  
                            _wTrial 0051                    ___awdiv@quotient 0031  
                   ___awmod@divisor 002A         __size_of_GetNewReceivedData 0023  
                     _I2C_Interrupt 04E1                     ___awmod@counter 002F  
                            _strcat 0A30                              _strcpy 0A90  
                            _strlen 0A6C                           ??_initLCD 0030  
                         ??_setData 002A                 ??_TempUpdateRequest 0070  
          __end_of_moveCursorToHome 09A7           __end_of_setCursorPosition 0E13  
                _gTxReadingPosition 004F                          _gErrorCode 00E3  
                 __end_ofi1_setData 0C8F              __size_of_writeInsNoChk 0018  
           __end_of__initialization 011C                    main@wEditingMode 00CC  
             __size_of_clearDisplay 0005          setCursorPosition@wLCDIndex 0033  
         __end_of_TempUpdateRequest 0A02                      __pcstackCOMMON 0070  
                      __pidataBANK0 0998                        __pidataBANK1 0992  
                 I2C_SendData@iData 003A                       __end_of_myint 00B1  
                    ?_I2C_Interrupt 0070       __size_ofi1_SetToSendDataToLCD 0006  
                         ?_AddTrace 003D                writeInsNoChk@iOpCode 002E  
        setCursorPosition@iPosition 002F                      _wInterruptText 0220  
                    _OPTION_REGbits 0095                           ?_Debounce 002A  
                      _clearDisplay 0975                             ??_myint 0024  
                        __pbssBANK0 0049                          __pbssBANK1 00DB  
                        __pbssBANK2 0120                          __pbssBANK3 01A0  
                        __pbssBANK4 0220                          __pbssBANK5 02A0  
                 _wReceptionCounter 0057        __size_ofi1_setCursorPosition 0062  
                     ?_setCursorOff 0070               EM1812EntryPoint@F1953 005E  
             EM1812EntryPoint@F1955 00DB                     __CFG_VCAPEN$OFF 0000  
           __size_ofi1_lcdWriteText 0027                     i1setData@iValue 0072  
                        __pmaintext 0120                           ?_PrintLog 0070  
            __size_ofi1_waitLCDBusy 002C                       ??_I2C_GetData 002C  
                        __pintentry 0004                             _I2CInit 0A02  
                           ?_memcpy 002A                       _writeInsNoChk 0A18  
                           ?_memset 002A                          ??_AddTrace 0040  
                      ?_writeInsChk 0070                             ?_strcat 0038  
                           ?_strcpy 0030                             ?_strlen 002A  
       GetNewReceivedData@oDataSize 0036                        ?_writeTxtChk 0070  
                        ??_Debounce 002C          __size_of_setCursorPosition 0060  
              __size_of_waitLCDBusy 002D                      ??_setCursorOff 0030  
              AddTrace@iSizeOfoText 003D        EM1812EntryPoint@oTemperature 003B  
                   _gTxTransmitSize 0050               __size_of_lcdWriteText 0026  
              main@wTemperaturePrev 00CF          __size_of_TempUpdateRequest 000D  
       __size_of_SetToSendDataToLCD 0006                          ??_PrintLog 003C  
 EM1812EntryPoint@SetGetTempCommand 00A0                     ??_I2C_Interrupt 0072  
                           ___awdiv 0788                             ___awmod 0D55  
                   printEM1812@wTen 003B                      ?_writeInsNoChk 0070  
                        _wTempState 005A                     __CFG_STVREN$OFF 0000  
         __size_of_EM1812EntryPoint 0138                     Debounce@iSwitch 002E  
                  _wI2CCommandState 0064                     __size_of_memcpy 002F  
                   __size_of_memset 00D1                 Send_UART_Data@iData 0039  
                           __ptext1 09D2                             __ptext2 09C7  
                           __ptext3 06D8                             __ptext4 0D55  
                           __ptext5 0788                             __ptext6 09BC  
                           __ptext7 099F                             __ptext8 0E75  
                           __ptext9 0975                     Debounce@ioTimer 002A  
                   __size_of_strcat 0019                __size_of_printEM1812 00B0  
                   __size_of_strcpy 0025                     __size_of_strlen 0024  
                           _initLCD 0E75                 __end_of_I2C_GetData 0C19  
                         _T1CONbits 0018                    ___awmod@dividend 002C  
                           _setData 0C8F                   main@wDebounceDown 00D5  
                     i1_waitLCDBusy 0B2D                             clrloop0 09DE  
              end_of_initialization 011C                        _lcdWriteText 0AB5  
     __size_of_SetToReadDataFromLCD 0006                             memcpy@d 0032  
                           memcpy@n 002E                             memcpy@s 0034  
                           init_ram 09E9                             memset@c 002C  
                           memset@k 0034                             memset@n 002E  
                           memset@s 0036                             initloop 09EA  
      i1setCursorPosition@wLCDIndex 0079                    __CFG_CLKOUTEN$ON 0000  
     __size_of_setNotBlinkingCursor 000B                _wI2CTxNbOfByteToSend 0055  
                         _RCSTAbits 019D                             strcpy@d 0036  
                           strlen@a 002E                             strcpy@s 0034  
                           strlen@s 002A                           _PORTAbits 000C  
                         _PORTBbits 000D                           _PORTCbits 000E  
      i1setCursorPosition@iPosition 0075                          _powerOnLcd 09BC  
              main@wUpBottonPressed 00D7                           _TRISAbits 008C  
                    ?i1_waitLCDBusy 0070                           _TRISCbits 008E  
                 ?_moveCursorToHome 0070                 printEM1812@wDecimal 0039  
                 _wTimer1IntCounter 004E             __size_of_Send_UART_Data 002B  
        Send_UART_Data@iData_Length 0036                  ??_moveCursorToHome 0030  
               printEM1812@oTextOut 0035                      i1_lcdWriteText 0ADB  
                         _TXSTAbits 019E                           i1_setData 0C53  
               waitLCDBusy@busyFlag 002D              __size_ofi1_writeTxtChk 0090  
                   ??_writeInsNoChk 002D          __end_of_GetNewReceivedData 0A6C  
                       _I2C_GetData 0BE3                 i1_setCursorPosition 0E13  
                  _mWritingPosition 005B                __end_of_setCursorOff 09D2  
                    __end_of_memcpy 0BE3                      __end_of_memset 06D8  
       printEM1812@wWritingPosition 003C                   __size_of_AddTrace 003A  
                    __end_of_strcat 0A49                      _wTimer0Counter 0059  
                    __end_of_strcpy 0AB5                      __end_of_strlen 0A90  
              __size_of_writeInsChk 000B                 start_initialization 00B3  
                _gUartRXBufferIndex 004D                __size_of_writeTxtChk 0097  
                 __size_of_Debounce 0045              __end_ofi1_lcdWriteText 0B02  
      __end_ofi1_SetToSendDataToLCD 0980                ?i1_setCursorPosition 0075  
                        ?i1_setData 0070                i1writeTxtChk@iOpCode 007C  
                   main@wDebounceUp 00D3            ??i1_SetToReadDataFromLCD 0070  
                       __pdataBANK0 005E                         __pdataBANK1 00E8  
                  _EM1812EntryPoint 03A9                       _wI2CTxSendPos 0052  
                          ?_I2CInit 0070                            ??_memcpy 0030  
                 __size_of_PrintLog 002E                            ??_memset 0030  
                        memset@dest 002A                            ??_strcat 003A  
                          ??_strcpy 0032                            ??_strlen 002C  
          i1setCursorPosition@iLine 0078                         ?_powerOnLcd 0070  
                   ??i1_waitLCDBusy 0070                         __pbssBIGRAM 22F0  
                         ___latbits 0003                       i1_writeTxtChk 0ED9  
                     __pcstackBANK0 0020                       __pcstackBANK1 00A0  
                 printEM1812@wUnity 0038                           _gTxBuffer 22F0  
                     ?_I2C_SendData 0036               ??i1_setCursorPosition 0076  
                   ?i1_lcdWriteText 0020                       ?_GetI2CStatus 002A  
                      _wTemperature 00E4                  writeInsChk@iOpCode 002F  
                          ?___awdiv 002A                            ?___awmod 002A  
                         __pswtext1 07F2                           _wCounter2 004C  
                          ?_initLCD 0070                      ?i1_writeTxtChk 0070  
                          ?_setData 0070                       ??_waitLCDBusy 002A  
                         _wHumidity 00E6                      ??_I2C_SendData 0038  
                     PrintLog@iText 003F                      _Send_UART_Data 0B02  
                    ??_GetI2CStatus 002C                      __size_of_myint 00AD  
                  _mDisplayOnOffReg 005D          __end_of_SetToSendDataToLCD 098C  
                         clear_ram0 09DD                         ??i1_setData 0070  
                          _PIE1bits 0091                            _PIE2bits 0092  
               __size_of_powerOnLcd 000B                            _PIR1bits 0011  
                          _PIR2bits 0012               __size_of_setCursorOff 000B  
                         main@F2305 00E8            _wReceptionBufferPosition 0058  
                 Debounce@swPressed 002B        __end_of_SetToReadDataFromLCD 0992  
                     ??_printEM1812 0036               __end_of_I2C_Interrupt 0607  
   __size_ofi1_SetToReadDataFromLCD 0006         lcdWriteText@wCharReadingPos 003B  
                          _AddTrace 0C19                i1_SetToSendDataToLCD 097A  
                  __size_of_I2CInit 0016                    _wI2CRxBufferSize 0062  
                        myint@wText 0026                           main@wConv 00AD  
                         main@wMenu 00DA        __end_of_setNotBlinkingCursor 09DD  
                         main@wTemp 00C7                            _Debounce 0CCB  
            __end_of_Send_UART_Data 0B2D                   lcdWriteText@iText 0037  
               __end_of_waitLCDBusy 0B86                     main@wUpdateMenu 00CB  
                      _setCursorOff 09C7                        _wI2CRxBuffer 0134  
         __size_of_moveCursorToHome 0008                           memcpy@tmp 0031  
                      _wI2CTxBuffer 0148                            _PrintLog 0B86  
                      ?_I2C_GetData 002A                    __size_of___awdiv 006A  
                  __size_of___awmod 005E               ?i1_SetToSendDataToLCD 0070  
                  _wI2CTxBufferSize 0063                     ??i1_writeTxtChk 007A  
                        _ANSELAbits 018C                          _ANSELCbits 018E  
                  __size_of_initLCD 0064                          strcat@dest 003C  
               __end_of_printEM1812 0788                     ?_Send_UART_Data 0036  
                _GetNewReceivedData 0A49           PrintLog@wInterruptTextLen 003E  
                  __size_of_setData 003C                       ?_clearDisplay 0070  
                          __ptext10 09B1                            __ptext11 0A18  
                          __ptext20 0986                            __ptext12 0B02  
                          __ptext21 0A02                            __ptext13 0B86  
                          __ptext30 0C19                            __ptext22 0607  
                          __ptext14 0AB5                            __ptext31 0A30  
                          __ptext23 03A9                            __ptext15 0F69  
                          __ptext40 0C53                            __ptext32 0A6C  
                          __ptext24 0D10                            __ptext16 0DB3  
                          __ptext41 097A                            __ptext33 0A90  
                          __ptext25 0BE3                            __ptext17 0B59  
                          __ptext42 09F5                            __ptext26 0A49  
                          __ptext18 098C                            __ptext43 04E1  
                          __ptext35 0ADB                            __ptext27 0BB4  
                          __ptext19 0C8F                            __ptext36 0ED9  
                          __ptext28 09A7                            __ptext37 0E13  
                          __ptext29 0CCB                            __ptext38 0B2D  
                          __ptext39 0980             GetNewReceivedData@oData 0039  
                          _wHexTemp 0120               main@wIterationCounter 00C9  
            i1_SetToReadDataFromLCD 0980            __end_of_EM1812EntryPoint 04E1  
                        strcpy@dest 0037                 ?_GetNewReceivedData 0036  
                          _wTempSet 00EC                       __size_of_main 0289  
                main@wDebounceEnter 00D1           I2C_SendData@iNumberofByte 0036  
                writeTxtChk@iOpCode 0036                            int$flags 007E  
              __end_of_I2C_SendData 0D55               __end_of_writeInsNoChk 0A30  
                 main@wHumidityPrev 00CD                __end_of_GetI2CStatus 09B1  
              ??_GetNewReceivedData 0037                       ??_writeInsChk 002F  
                      ??_powerOnLcd 0030                       ??_writeTxtChk 0034  
                        _INTCONbits 000B                    ??i1_lcdWriteText 0022  
                          memcpy@d1 002A                            memcpy@s1 002C  
                       _waitLCDBusy 0B59                      ??_clearDisplay 0030  
                  _wNewI2CReception 0053              setCursorPosition@iLine 0032  
                          intlevel1 0000              main@wDownBottonPressed 00D8  
              _SetToReadDataFromLCD 098C                           strcat@src 0038  
                         strcpy@src 0030                          _OSCCONbits 0099  
              _setNotBlinkingCursor 09D2                  __end_of_powerOnLcd 09C7  
            ??i1_SetToSendDataToLCD 0070                         _printEM1812 06D8  
                     __pstringtext1 1000                       __pstringtext2 1026  
                     __pstringtext3 1032                       __pstringtext4 103E  
                     __pstringtext5 0000         __end_ofi1_setCursorPosition 0E75  
             __end_ofi1_waitLCDBusy 0B59                 __end_of_writeInsChk 09BC  
                       _SSPCON1bits 0215                         _SSPCON2bits 0216  
                       _SSPCON3bits 0217                       ?_lcdWriteText 0037  
               __end_of_writeTxtChk 1000               ?_SetToReadDataFromLCD 0070  
   EM1812EntryPoint@ReceptionBuffer 00A4               i1waitLCDBusy@busyFlag 0073  
             ?_setNotBlinkingCursor 0070                    _moveCursorToHome 099F  
            _mCursorDisplayShiftReg 005C  
