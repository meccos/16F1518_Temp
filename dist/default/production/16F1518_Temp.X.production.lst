

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Apr 19 22:45:03 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F1518 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   120                           PORTB equ 0Dh ;# 
   121  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   122                           PORTC equ 0Eh ;# 
   123  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   124                           PORTE equ 010h ;# 
   125  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   126                           PIR1 equ 011h ;# 
   127  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   128                           PIR2 equ 012h ;# 
   129  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   130                           TMR0 equ 015h ;# 
   131  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   132                           TMR1 equ 016h ;# 
   133  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   134                           TMR1L equ 016h ;# 
   135  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   136                           TMR1H equ 017h ;# 
   137  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   138                           T1CON equ 018h ;# 
   139  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   140                           T1GCON equ 019h ;# 
   141  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   142                           TMR2 equ 01Ah ;# 
   143  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   144                           PR2 equ 01Bh ;# 
   145  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   146                           T2CON equ 01Ch ;# 
   147  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   148                           TRISA equ 08Ch ;# 
   149  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   150                           TRISB equ 08Dh ;# 
   151  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   152                           TRISC equ 08Eh ;# 
   153  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   154                           TRISE equ 090h ;# 
   155  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   156                           PIE1 equ 091h ;# 
   157  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   158                           PIE2 equ 092h ;# 
   159  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   160                           OPTION_REG equ 095h ;# 
   161  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   162                           PCON equ 096h ;# 
   163  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   164                           WDTCON equ 097h ;# 
   165  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   166                           OSCCON equ 099h ;# 
   167  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   168                           OSCSTAT equ 09Ah ;# 
   169  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   170                           ADRES equ 09Bh ;# 
   171  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   172                           ADRESL equ 09Bh ;# 
   173  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   174                           ADRESH equ 09Ch ;# 
   175  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   176                           ADCON0 equ 09Dh ;# 
   177  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   178                           ADCON1 equ 09Eh ;# 
   179  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   180                           LATA equ 010Ch ;# 
   181  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   182                           LATB equ 010Dh ;# 
   183  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   184                           LATC equ 010Eh ;# 
   185  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   186                           BORCON equ 0116h ;# 
   187  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   188                           FVRCON equ 0117h ;# 
   189  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   190                           APFCON equ 011Dh ;# 
   191  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   192                           ANSELA equ 018Ch ;# 
   193  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   194                           ANSELB equ 018Dh ;# 
   195  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   196                           ANSELC equ 018Eh ;# 
   197  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   198                           PMADR equ 0191h ;# 
   199  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   200                           PMADRL equ 0191h ;# 
   201  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   202                           PMADRH equ 0192h ;# 
   203  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   204                           PMDAT equ 0193h ;# 
   205  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   206                           PMDATL equ 0193h ;# 
   207  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   208                           PMDATH equ 0194h ;# 
   209  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   210                           PMCON1 equ 0195h ;# 
   211  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   212                           PMCON2 equ 0196h ;# 
   213  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   214                           VREGCON equ 0197h ;# 
   215  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   216                           RCREG equ 0199h ;# 
   217  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   218                           TXREG equ 019Ah ;# 
   219  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   220                           SP1BRG equ 019Bh ;# 
   221  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   222                           SP1BRGL equ 019Bh ;# 
   223  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   224                           SPBRG equ 019Bh ;# 
   225  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   226                           SPBRGL equ 019Bh ;# 
   227  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   228                           SP1BRGH equ 019Ch ;# 
   229  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   230                           SPBRGH equ 019Ch ;# 
   231  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   232                           RCSTA equ 019Dh ;# 
   233  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   234                           TXSTA equ 019Eh ;# 
   235  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   236                           BAUDCON equ 019Fh ;# 
   237  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   238                           WPUB equ 020Dh ;# 
   239  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   240                           WPUE equ 0210h ;# 
   241  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   242                           SSPBUF equ 0211h ;# 
   243  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   244                           SSP1BUF equ 0211h ;# 
   245  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   246                           SSPADD equ 0212h ;# 
   247  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   248                           SSP1ADD equ 0212h ;# 
   249  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   250                           SSPMSK equ 0213h ;# 
   251  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   252                           SSP1MSK equ 0213h ;# 
   253  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   254                           SSPSTAT equ 0214h ;# 
   255  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   256                           SSP1STAT equ 0214h ;# 
   257  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   258                           SSPCON1 equ 0215h ;# 
   259  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   260                           SSPCON equ 0215h ;# 
   261  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   262                           SSP1CON1 equ 0215h ;# 
   263  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   264                           SSPCON2 equ 0216h ;# 
   265  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   266                           SSP1CON2 equ 0216h ;# 
   267  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   268                           SSPCON3 equ 0217h ;# 
   269  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   270                           SSP1CON3 equ 0217h ;# 
   271  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   272                           CCPR1 equ 0291h ;# 
   273  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   274                           CCPR1L equ 0291h ;# 
   275  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   276                           CCPR1H equ 0292h ;# 
   277  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   278                           CCP1CON equ 0293h ;# 
   279  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   280                           CCPR2 equ 0298h ;# 
   281  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   282                           CCPR2L equ 0298h ;# 
   283  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   284                           CCPR2H equ 0299h ;# 
   285  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   286                           CCP2CON equ 029Ah ;# 
   287  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   288                           IOCBP equ 0394h ;# 
   289  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   290                           IOCBN equ 0395h ;# 
   291  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   292                           IOCBF equ 0396h ;# 
   293  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   294                           STATUS_SHAD equ 0FE4h ;# 
   295  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   296                           WREG_SHAD equ 0FE5h ;# 
   297  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   298                           BSR_SHAD equ 0FE6h ;# 
   299  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   300                           PCLATH_SHAD equ 0FE7h ;# 
   301  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   302                           FSR0L_SHAD equ 0FE8h ;# 
   303  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   304                           FSR0H_SHAD equ 0FE9h ;# 
   305  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   306                           FSR1L_SHAD equ 0FEAh ;# 
   307  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   308                           FSR1H_SHAD equ 0FEBh ;# 
   309  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   310                           STKPTR equ 0FEDh ;# 
   311  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   312                           TOSL equ 0FEEh ;# 
   313  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   314                           TOSH equ 0FEFh ;# 
   315  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   316                           INDF0 equ 00h ;# 
   317  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   318                           INDF1 equ 01h ;# 
   319  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   320                           PCL equ 02h ;# 
   321  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   322                           STATUS equ 03h ;# 
   323  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   324                           FSR0L equ 04h ;# 
   325  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   326                           FSR0H equ 05h ;# 
   327  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   328                           FSR1L equ 06h ;# 
   329  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   330                           FSR1H equ 07h ;# 
   331  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   332                           BSR equ 08h ;# 
   333  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   334                           WREG equ 09h ;# 
   335  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   336                           PCLATH equ 0Ah ;# 
   337  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   338                           INTCON equ 0Bh ;# 
   339  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   340                           PORTA equ 0Ch ;# 
   341  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   342                           PORTB equ 0Dh ;# 
   343  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   344                           PORTC equ 0Eh ;# 
   345  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   346                           PORTE equ 010h ;# 
   347  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   348                           PIR1 equ 011h ;# 
   349  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   350                           PIR2 equ 012h ;# 
   351  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   352                           TMR0 equ 015h ;# 
   353  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   354                           TMR1 equ 016h ;# 
   355  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   356                           TMR1L equ 016h ;# 
   357  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   358                           TMR1H equ 017h ;# 
   359  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   360                           T1CON equ 018h ;# 
   361  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   362                           T1GCON equ 019h ;# 
   363  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   364                           TMR2 equ 01Ah ;# 
   365  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   366                           PR2 equ 01Bh ;# 
   367  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   368                           T2CON equ 01Ch ;# 
   369  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   370                           TRISA equ 08Ch ;# 
   371  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   372                           TRISB equ 08Dh ;# 
   373  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   374                           TRISC equ 08Eh ;# 
   375  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   376                           TRISE equ 090h ;# 
   377  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   378                           PIE1 equ 091h ;# 
   379  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   380                           PIE2 equ 092h ;# 
   381  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   382                           OPTION_REG equ 095h ;# 
   383  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   384                           PCON equ 096h ;# 
   385  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   386                           WDTCON equ 097h ;# 
   387  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   388                           OSCCON equ 099h ;# 
   389  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   390                           OSCSTAT equ 09Ah ;# 
   391  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   392                           ADRES equ 09Bh ;# 
   393  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   394                           ADRESL equ 09Bh ;# 
   395  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   396                           ADRESH equ 09Ch ;# 
   397  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   398                           ADCON0 equ 09Dh ;# 
   399  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   400                           ADCON1 equ 09Eh ;# 
   401  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   402                           LATA equ 010Ch ;# 
   403  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   404                           LATB equ 010Dh ;# 
   405  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   406                           LATC equ 010Eh ;# 
   407  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   408                           BORCON equ 0116h ;# 
   409  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   410                           FVRCON equ 0117h ;# 
   411  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   412                           APFCON equ 011Dh ;# 
   413  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   414                           ANSELA equ 018Ch ;# 
   415  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   416                           ANSELB equ 018Dh ;# 
   417  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   418                           ANSELC equ 018Eh ;# 
   419  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   420                           PMADR equ 0191h ;# 
   421  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   422                           PMADRL equ 0191h ;# 
   423  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   424                           PMADRH equ 0192h ;# 
   425  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   426                           PMDAT equ 0193h ;# 
   427  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   428                           PMDATL equ 0193h ;# 
   429  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   430                           PMDATH equ 0194h ;# 
   431  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   432                           PMCON1 equ 0195h ;# 
   433  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   434                           PMCON2 equ 0196h ;# 
   435  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   436                           VREGCON equ 0197h ;# 
   437  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   438                           RCREG equ 0199h ;# 
   439  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   440                           TXREG equ 019Ah ;# 
   441  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   442                           SP1BRG equ 019Bh ;# 
   443  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   444                           SP1BRGL equ 019Bh ;# 
   445  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   446                           SPBRG equ 019Bh ;# 
   447  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   448                           SPBRGL equ 019Bh ;# 
   449  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   450                           SP1BRGH equ 019Ch ;# 
   451  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   452                           SPBRGH equ 019Ch ;# 
   453  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   454                           RCSTA equ 019Dh ;# 
   455  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   456                           TXSTA equ 019Eh ;# 
   457  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   458                           BAUDCON equ 019Fh ;# 
   459  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   460                           WPUB equ 020Dh ;# 
   461  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   462                           WPUE equ 0210h ;# 
   463  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   464                           SSPBUF equ 0211h ;# 
   465  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   466                           SSP1BUF equ 0211h ;# 
   467  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   468                           SSPADD equ 0212h ;# 
   469  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   470                           SSP1ADD equ 0212h ;# 
   471  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   472                           SSPMSK equ 0213h ;# 
   473  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   474                           SSP1MSK equ 0213h ;# 
   475  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   476                           SSPSTAT equ 0214h ;# 
   477  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   478                           SSP1STAT equ 0214h ;# 
   479  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   480                           SSPCON1 equ 0215h ;# 
   481  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   482                           SSPCON equ 0215h ;# 
   483  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   484                           SSP1CON1 equ 0215h ;# 
   485  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   486                           SSPCON2 equ 0216h ;# 
   487  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   488                           SSP1CON2 equ 0216h ;# 
   489  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   490                           SSPCON3 equ 0217h ;# 
   491  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   492                           SSP1CON3 equ 0217h ;# 
   493  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   494                           CCPR1 equ 0291h ;# 
   495  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   496                           CCPR1L equ 0291h ;# 
   497  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   498                           CCPR1H equ 0292h ;# 
   499  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   500                           CCP1CON equ 0293h ;# 
   501  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   502                           CCPR2 equ 0298h ;# 
   503  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   504                           CCPR2L equ 0298h ;# 
   505  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   506                           CCPR2H equ 0299h ;# 
   507  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   508                           CCP2CON equ 029Ah ;# 
   509  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   510                           IOCBP equ 0394h ;# 
   511  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   512                           IOCBN equ 0395h ;# 
   513  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   514                           IOCBF equ 0396h ;# 
   515  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   516                           STATUS_SHAD equ 0FE4h ;# 
   517  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   518                           WREG_SHAD equ 0FE5h ;# 
   519  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   520                           BSR_SHAD equ 0FE6h ;# 
   521  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   522                           PCLATH_SHAD equ 0FE7h ;# 
   523  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   524                           FSR0L_SHAD equ 0FE8h ;# 
   525  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   526                           FSR0H_SHAD equ 0FE9h ;# 
   527  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   528                           FSR1L_SHAD equ 0FEAh ;# 
   529  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   530                           FSR1H_SHAD equ 0FEBh ;# 
   531  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   532                           STKPTR equ 0FEDh ;# 
   533  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   534                           TOSL equ 0FEEh ;# 
   535  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   536                           TOSH equ 0FEFh ;# 
   537  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   538                           INDF0 equ 00h ;# 
   539  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   540                           INDF1 equ 01h ;# 
   541  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   542                           PCL equ 02h ;# 
   543  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   544                           STATUS equ 03h ;# 
   545  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   546                           FSR0L equ 04h ;# 
   547  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   548                           FSR0H equ 05h ;# 
   549  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   550                           FSR1L equ 06h ;# 
   551  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   552                           FSR1H equ 07h ;# 
   553  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   554                           BSR equ 08h ;# 
   555  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   556                           WREG equ 09h ;# 
   557  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   558                           PCLATH equ 0Ah ;# 
   559  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   560                           INTCON equ 0Bh ;# 
   561  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   562                           PORTA equ 0Ch ;# 
   563  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   564                           PORTB equ 0Dh ;# 
   565  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   566                           PORTC equ 0Eh ;# 
   567  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   568                           PORTE equ 010h ;# 
   569  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   570                           PIR1 equ 011h ;# 
   571  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   572                           PIR2 equ 012h ;# 
   573  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   574                           TMR0 equ 015h ;# 
   575  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   576                           TMR1 equ 016h ;# 
   577  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   578                           TMR1L equ 016h ;# 
   579  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   580                           TMR1H equ 017h ;# 
   581  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   582                           T1CON equ 018h ;# 
   583  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   584                           T1GCON equ 019h ;# 
   585  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   586                           TMR2 equ 01Ah ;# 
   587  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   588                           PR2 equ 01Bh ;# 
   589  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   590                           T2CON equ 01Ch ;# 
   591  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   592                           TRISA equ 08Ch ;# 
   593  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   594                           TRISB equ 08Dh ;# 
   595  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   596                           TRISC equ 08Eh ;# 
   597  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   598                           TRISE equ 090h ;# 
   599  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   600                           PIE1 equ 091h ;# 
   601  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   602                           PIE2 equ 092h ;# 
   603  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   604                           OPTION_REG equ 095h ;# 
   605  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   606                           PCON equ 096h ;# 
   607  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   608                           WDTCON equ 097h ;# 
   609  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   610                           OSCCON equ 099h ;# 
   611  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   612                           OSCSTAT equ 09Ah ;# 
   613  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   614                           ADRES equ 09Bh ;# 
   615  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   616                           ADRESL equ 09Bh ;# 
   617  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   618                           ADRESH equ 09Ch ;# 
   619  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   620                           ADCON0 equ 09Dh ;# 
   621  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   622                           ADCON1 equ 09Eh ;# 
   623  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   624                           LATA equ 010Ch ;# 
   625  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   626                           LATB equ 010Dh ;# 
   627  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   628                           LATC equ 010Eh ;# 
   629  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   630                           BORCON equ 0116h ;# 
   631  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   632                           FVRCON equ 0117h ;# 
   633  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   634                           APFCON equ 011Dh ;# 
   635  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   636                           ANSELA equ 018Ch ;# 
   637  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   638                           ANSELB equ 018Dh ;# 
   639  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   640                           ANSELC equ 018Eh ;# 
   641  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   642                           PMADR equ 0191h ;# 
   643  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   644                           PMADRL equ 0191h ;# 
   645  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   646                           PMADRH equ 0192h ;# 
   647  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   648                           PMDAT equ 0193h ;# 
   649  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   650                           PMDATL equ 0193h ;# 
   651  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   652                           PMDATH equ 0194h ;# 
   653  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   654                           PMCON1 equ 0195h ;# 
   655  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   656                           PMCON2 equ 0196h ;# 
   657  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   658                           VREGCON equ 0197h ;# 
   659  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   660                           RCREG equ 0199h ;# 
   661  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   662                           TXREG equ 019Ah ;# 
   663  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   664                           SP1BRG equ 019Bh ;# 
   665  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   666                           SP1BRGL equ 019Bh ;# 
   667  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   668                           SPBRG equ 019Bh ;# 
   669  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   670                           SPBRGL equ 019Bh ;# 
   671  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   672                           SP1BRGH equ 019Ch ;# 
   673  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   674                           SPBRGH equ 019Ch ;# 
   675  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   676                           RCSTA equ 019Dh ;# 
   677  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   678                           TXSTA equ 019Eh ;# 
   679  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   680                           BAUDCON equ 019Fh ;# 
   681  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   682                           WPUB equ 020Dh ;# 
   683  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   684                           WPUE equ 0210h ;# 
   685  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   686                           SSPBUF equ 0211h ;# 
   687  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   688                           SSP1BUF equ 0211h ;# 
   689  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   690                           SSPADD equ 0212h ;# 
   691  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   692                           SSP1ADD equ 0212h ;# 
   693  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   694                           SSPMSK equ 0213h ;# 
   695  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   696                           SSP1MSK equ 0213h ;# 
   697  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   698                           SSPSTAT equ 0214h ;# 
   699  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   700                           SSP1STAT equ 0214h ;# 
   701  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   702                           SSPCON1 equ 0215h ;# 
   703  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   704                           SSPCON equ 0215h ;# 
   705  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   706                           SSP1CON1 equ 0215h ;# 
   707  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   708                           SSPCON2 equ 0216h ;# 
   709  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   710                           SSP1CON2 equ 0216h ;# 
   711  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   712                           SSPCON3 equ 0217h ;# 
   713  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   714                           SSP1CON3 equ 0217h ;# 
   715  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   716                           CCPR1 equ 0291h ;# 
   717  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   718                           CCPR1L equ 0291h ;# 
   719  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   720                           CCPR1H equ 0292h ;# 
   721  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   722                           CCP1CON equ 0293h ;# 
   723  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   724                           CCPR2 equ 0298h ;# 
   725  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   726                           CCPR2L equ 0298h ;# 
   727  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   728                           CCPR2H equ 0299h ;# 
   729  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   730                           CCP2CON equ 029Ah ;# 
   731  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   732                           IOCBP equ 0394h ;# 
   733  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   734                           IOCBN equ 0395h ;# 
   735  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   736                           IOCBF equ 0396h ;# 
   737  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   738                           STATUS_SHAD equ 0FE4h ;# 
   739  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   740                           WREG_SHAD equ 0FE5h ;# 
   741  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   742                           BSR_SHAD equ 0FE6h ;# 
   743  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   744                           PCLATH_SHAD equ 0FE7h ;# 
   745  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   746                           FSR0L_SHAD equ 0FE8h ;# 
   747  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   748                           FSR0H_SHAD equ 0FE9h ;# 
   749  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   750                           FSR1L_SHAD equ 0FEAh ;# 
   751  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   752                           FSR1H_SHAD equ 0FEBh ;# 
   753  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   754                           STKPTR equ 0FEDh ;# 
   755  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   756                           TOSL equ 0FEEh ;# 
   757  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   758                           TOSH equ 0FEFh ;# 
   759  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   760                           INDF0 equ 00h ;# 
   761  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   762                           INDF1 equ 01h ;# 
   763  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   764                           PCL equ 02h ;# 
   765  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   766                           STATUS equ 03h ;# 
   767  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   768                           FSR0L equ 04h ;# 
   769  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   770                           FSR0H equ 05h ;# 
   771  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   772                           FSR1L equ 06h ;# 
   773  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   774                           FSR1H equ 07h ;# 
   775  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   776                           BSR equ 08h ;# 
   777  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   778                           WREG equ 09h ;# 
   779  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   780                           PCLATH equ 0Ah ;# 
   781  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   782                           INTCON equ 0Bh ;# 
   783  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   784                           PORTA equ 0Ch ;# 
   785  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   786                           PORTB equ 0Dh ;# 
   787  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   788                           PORTC equ 0Eh ;# 
   789  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   790                           PORTE equ 010h ;# 
   791  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   792                           PIR1 equ 011h ;# 
   793  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   794                           PIR2 equ 012h ;# 
   795  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   796                           TMR0 equ 015h ;# 
   797  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   798                           TMR1 equ 016h ;# 
   799  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   800                           TMR1L equ 016h ;# 
   801  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   802                           TMR1H equ 017h ;# 
   803  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   804                           T1CON equ 018h ;# 
   805  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   806                           T1GCON equ 019h ;# 
   807  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   808                           TMR2 equ 01Ah ;# 
   809  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   810                           PR2 equ 01Bh ;# 
   811  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   812                           T2CON equ 01Ch ;# 
   813  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   814                           TRISA equ 08Ch ;# 
   815  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   816                           TRISB equ 08Dh ;# 
   817  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   818                           TRISC equ 08Eh ;# 
   819  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   820                           TRISE equ 090h ;# 
   821  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   822                           PIE1 equ 091h ;# 
   823  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   824                           PIE2 equ 092h ;# 
   825  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   826                           OPTION_REG equ 095h ;# 
   827  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   828                           PCON equ 096h ;# 
   829  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   830                           WDTCON equ 097h ;# 
   831  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   832                           OSCCON equ 099h ;# 
   833  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   834                           OSCSTAT equ 09Ah ;# 
   835  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   836                           ADRES equ 09Bh ;# 
   837  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   838                           ADRESL equ 09Bh ;# 
   839  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   840                           ADRESH equ 09Ch ;# 
   841  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   842                           ADCON0 equ 09Dh ;# 
   843  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   844                           ADCON1 equ 09Eh ;# 
   845  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   846                           LATA equ 010Ch ;# 
   847  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   848                           LATB equ 010Dh ;# 
   849  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   850                           LATC equ 010Eh ;# 
   851  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   852                           BORCON equ 0116h ;# 
   853  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   854                           FVRCON equ 0117h ;# 
   855  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   856                           APFCON equ 011Dh ;# 
   857  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   858                           ANSELA equ 018Ch ;# 
   859  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   860                           ANSELB equ 018Dh ;# 
   861  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   862                           ANSELC equ 018Eh ;# 
   863  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   864                           PMADR equ 0191h ;# 
   865  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   866                           PMADRL equ 0191h ;# 
   867  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   868                           PMADRH equ 0192h ;# 
   869  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   870                           PMDAT equ 0193h ;# 
   871  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   872                           PMDATL equ 0193h ;# 
   873  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   874                           PMDATH equ 0194h ;# 
   875  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   876                           PMCON1 equ 0195h ;# 
   877  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   878                           PMCON2 equ 0196h ;# 
   879  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   880                           VREGCON equ 0197h ;# 
   881  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   882                           RCREG equ 0199h ;# 
   883  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   884                           TXREG equ 019Ah ;# 
   885  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   886                           SP1BRG equ 019Bh ;# 
   887  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   888                           SP1BRGL equ 019Bh ;# 
   889  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   890                           SPBRG equ 019Bh ;# 
   891  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   892                           SPBRGL equ 019Bh ;# 
   893  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   894                           SP1BRGH equ 019Ch ;# 
   895  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   896                           SPBRGH equ 019Ch ;# 
   897  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   898                           RCSTA equ 019Dh ;# 
   899  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   900                           TXSTA equ 019Eh ;# 
   901  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   902                           BAUDCON equ 019Fh ;# 
   903  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   904                           WPUB equ 020Dh ;# 
   905  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   906                           WPUE equ 0210h ;# 
   907  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   908                           SSPBUF equ 0211h ;# 
   909  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   910                           SSP1BUF equ 0211h ;# 
   911  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   912                           SSPADD equ 0212h ;# 
   913  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   914                           SSP1ADD equ 0212h ;# 
   915  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   916                           SSPMSK equ 0213h ;# 
   917  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   918                           SSP1MSK equ 0213h ;# 
   919  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   920                           SSPSTAT equ 0214h ;# 
   921  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   922                           SSP1STAT equ 0214h ;# 
   923  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   924                           SSPCON1 equ 0215h ;# 
   925  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   926                           SSPCON equ 0215h ;# 
   927  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   928                           SSP1CON1 equ 0215h ;# 
   929  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   930                           SSPCON2 equ 0216h ;# 
   931  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   932                           SSP1CON2 equ 0216h ;# 
   933  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   934                           SSPCON3 equ 0217h ;# 
   935  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   936                           SSP1CON3 equ 0217h ;# 
   937  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   938                           CCPR1 equ 0291h ;# 
   939  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   940                           CCPR1L equ 0291h ;# 
   941  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   942                           CCPR1H equ 0292h ;# 
   943  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   944                           CCP1CON equ 0293h ;# 
   945  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   946                           CCPR2 equ 0298h ;# 
   947  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   948                           CCPR2L equ 0298h ;# 
   949  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   950                           CCPR2H equ 0299h ;# 
   951  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   952                           CCP2CON equ 029Ah ;# 
   953  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   954                           IOCBP equ 0394h ;# 
   955  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   956                           IOCBN equ 0395h ;# 
   957  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   958                           IOCBF equ 0396h ;# 
   959  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   960                           STATUS_SHAD equ 0FE4h ;# 
   961  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   962                           WREG_SHAD equ 0FE5h ;# 
   963  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   964                           BSR_SHAD equ 0FE6h ;# 
   965  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   966                           PCLATH_SHAD equ 0FE7h ;# 
   967  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   968                           FSR0L_SHAD equ 0FE8h ;# 
   969  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   970                           FSR0H_SHAD equ 0FE9h ;# 
   971  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   972                           FSR1L_SHAD equ 0FEAh ;# 
   973  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   974                           FSR1H_SHAD equ 0FEBh ;# 
   975  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   976                           STKPTR equ 0FEDh ;# 
   977  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   978                           TOSL equ 0FEEh ;# 
   979  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   980                           TOSH equ 0FEFh ;# 
   981  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   982                           INDF0 equ 00h ;# 
   983  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   984                           INDF1 equ 01h ;# 
   985  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   986                           PCL equ 02h ;# 
   987  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   988                           STATUS equ 03h ;# 
   989  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   990                           FSR0L equ 04h ;# 
   991  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   992                           FSR0H equ 05h ;# 
   993  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   994                           FSR1L equ 06h ;# 
   995  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   996                           FSR1H equ 07h ;# 
   997  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   998                           BSR equ 08h ;# 
   999  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1000                           WREG equ 09h ;# 
  1001  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1002                           PCLATH equ 0Ah ;# 
  1003  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1004                           INTCON equ 0Bh ;# 
  1005  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1006                           PORTA equ 0Ch ;# 
  1007  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1008                           PORTB equ 0Dh ;# 
  1009  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1010                           PORTC equ 0Eh ;# 
  1011  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1012                           PORTE equ 010h ;# 
  1013  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1014                           PIR1 equ 011h ;# 
  1015  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1016                           PIR2 equ 012h ;# 
  1017  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1018                           TMR0 equ 015h ;# 
  1019  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1020                           TMR1 equ 016h ;# 
  1021  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1022                           TMR1L equ 016h ;# 
  1023  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1024                           TMR1H equ 017h ;# 
  1025  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1026                           T1CON equ 018h ;# 
  1027  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1028                           T1GCON equ 019h ;# 
  1029  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1030                           TMR2 equ 01Ah ;# 
  1031  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1032                           PR2 equ 01Bh ;# 
  1033  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1034                           T2CON equ 01Ch ;# 
  1035  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1036                           TRISA equ 08Ch ;# 
  1037  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1038                           TRISB equ 08Dh ;# 
  1039  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1040                           TRISC equ 08Eh ;# 
  1041  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1042                           TRISE equ 090h ;# 
  1043  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1044                           PIE1 equ 091h ;# 
  1045  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1046                           PIE2 equ 092h ;# 
  1047  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1048                           OPTION_REG equ 095h ;# 
  1049  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1050                           PCON equ 096h ;# 
  1051  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1052                           WDTCON equ 097h ;# 
  1053  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1054                           OSCCON equ 099h ;# 
  1055  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1056                           OSCSTAT equ 09Ah ;# 
  1057  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1058                           ADRES equ 09Bh ;# 
  1059  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1060                           ADRESL equ 09Bh ;# 
  1061  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1062                           ADRESH equ 09Ch ;# 
  1063  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1064                           ADCON0 equ 09Dh ;# 
  1065  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1066                           ADCON1 equ 09Eh ;# 
  1067  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1068                           LATA equ 010Ch ;# 
  1069  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1070                           LATB equ 010Dh ;# 
  1071  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1072                           LATC equ 010Eh ;# 
  1073  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1074                           BORCON equ 0116h ;# 
  1075  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1076                           FVRCON equ 0117h ;# 
  1077  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1078                           APFCON equ 011Dh ;# 
  1079  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1080                           ANSELA equ 018Ch ;# 
  1081  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1082                           ANSELB equ 018Dh ;# 
  1083  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1084                           ANSELC equ 018Eh ;# 
  1085  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1086                           PMADR equ 0191h ;# 
  1087  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1088                           PMADRL equ 0191h ;# 
  1089  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1090                           PMADRH equ 0192h ;# 
  1091  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1092                           PMDAT equ 0193h ;# 
  1093  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1094                           PMDATL equ 0193h ;# 
  1095  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1096                           PMDATH equ 0194h ;# 
  1097  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1098                           PMCON1 equ 0195h ;# 
  1099  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1100                           PMCON2 equ 0196h ;# 
  1101  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1102                           VREGCON equ 0197h ;# 
  1103  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1104                           RCREG equ 0199h ;# 
  1105  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1106                           TXREG equ 019Ah ;# 
  1107  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1108                           SP1BRG equ 019Bh ;# 
  1109  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1110                           SP1BRGL equ 019Bh ;# 
  1111  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1112                           SPBRG equ 019Bh ;# 
  1113  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1114                           SPBRGL equ 019Bh ;# 
  1115  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1116                           SP1BRGH equ 019Ch ;# 
  1117  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1118                           SPBRGH equ 019Ch ;# 
  1119  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1120                           RCSTA equ 019Dh ;# 
  1121  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1122                           TXSTA equ 019Eh ;# 
  1123  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1124                           BAUDCON equ 019Fh ;# 
  1125  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1126                           WPUB equ 020Dh ;# 
  1127  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1128                           WPUE equ 0210h ;# 
  1129  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1130                           SSPBUF equ 0211h ;# 
  1131  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1132                           SSP1BUF equ 0211h ;# 
  1133  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1134                           SSPADD equ 0212h ;# 
  1135  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1136                           SSP1ADD equ 0212h ;# 
  1137  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1138                           SSPMSK equ 0213h ;# 
  1139  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1140                           SSP1MSK equ 0213h ;# 
  1141  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1142                           SSPSTAT equ 0214h ;# 
  1143  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1144                           SSP1STAT equ 0214h ;# 
  1145  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1146                           SSPCON1 equ 0215h ;# 
  1147  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1148                           SSPCON equ 0215h ;# 
  1149  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1150                           SSP1CON1 equ 0215h ;# 
  1151  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1152                           SSPCON2 equ 0216h ;# 
  1153  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1154                           SSP1CON2 equ 0216h ;# 
  1155  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1156                           SSPCON3 equ 0217h ;# 
  1157  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1158                           SSP1CON3 equ 0217h ;# 
  1159  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1160                           CCPR1 equ 0291h ;# 
  1161  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1162                           CCPR1L equ 0291h ;# 
  1163  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1164                           CCPR1H equ 0292h ;# 
  1165  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1166                           CCP1CON equ 0293h ;# 
  1167  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1168                           CCPR2 equ 0298h ;# 
  1169  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1170                           CCPR2L equ 0298h ;# 
  1171  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1172                           CCPR2H equ 0299h ;# 
  1173  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1174                           CCP2CON equ 029Ah ;# 
  1175  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1176                           IOCBP equ 0394h ;# 
  1177  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1178                           IOCBN equ 0395h ;# 
  1179  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1180                           IOCBF equ 0396h ;# 
  1181  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1182                           STATUS_SHAD equ 0FE4h ;# 
  1183  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1184                           WREG_SHAD equ 0FE5h ;# 
  1185  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1186                           BSR_SHAD equ 0FE6h ;# 
  1187  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1188                           PCLATH_SHAD equ 0FE7h ;# 
  1189  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1190                           FSR0L_SHAD equ 0FE8h ;# 
  1191  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1192                           FSR0H_SHAD equ 0FE9h ;# 
  1193  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1194                           FSR1L_SHAD equ 0FEAh ;# 
  1195  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1196                           FSR1H_SHAD equ 0FEBh ;# 
  1197  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1198                           STKPTR equ 0FEDh ;# 
  1199  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1200                           TOSL equ 0FEEh ;# 
  1201  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1202                           TOSH equ 0FEFh ;# 
  1203  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1204                           INDF0 equ 00h ;# 
  1205  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1206                           INDF1 equ 01h ;# 
  1207  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1208                           PCL equ 02h ;# 
  1209  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1210                           STATUS equ 03h ;# 
  1211  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1212                           FSR0L equ 04h ;# 
  1213  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1214                           FSR0H equ 05h ;# 
  1215  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1216                           FSR1L equ 06h ;# 
  1217  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1218                           FSR1H equ 07h ;# 
  1219  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1220                           BSR equ 08h ;# 
  1221  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1222                           WREG equ 09h ;# 
  1223  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1224                           PCLATH equ 0Ah ;# 
  1225  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1226                           INTCON equ 0Bh ;# 
  1227  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1228                           PORTA equ 0Ch ;# 
  1229  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1230                           PORTB equ 0Dh ;# 
  1231  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1232                           PORTC equ 0Eh ;# 
  1233  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1234                           PORTE equ 010h ;# 
  1235  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1236                           PIR1 equ 011h ;# 
  1237  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1238                           PIR2 equ 012h ;# 
  1239  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1240                           TMR0 equ 015h ;# 
  1241  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1242                           TMR1 equ 016h ;# 
  1243  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1244                           TMR1L equ 016h ;# 
  1245  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1246                           TMR1H equ 017h ;# 
  1247  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1248                           T1CON equ 018h ;# 
  1249  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1250                           T1GCON equ 019h ;# 
  1251  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1252                           TMR2 equ 01Ah ;# 
  1253  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1254                           PR2 equ 01Bh ;# 
  1255  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1256                           T2CON equ 01Ch ;# 
  1257  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1258                           TRISA equ 08Ch ;# 
  1259  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1260                           TRISB equ 08Dh ;# 
  1261  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1262                           TRISC equ 08Eh ;# 
  1263  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1264                           TRISE equ 090h ;# 
  1265  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1266                           PIE1 equ 091h ;# 
  1267  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1268                           PIE2 equ 092h ;# 
  1269  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1270                           OPTION_REG equ 095h ;# 
  1271  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1272                           PCON equ 096h ;# 
  1273  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1274                           WDTCON equ 097h ;# 
  1275  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1276                           OSCCON equ 099h ;# 
  1277  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1278                           OSCSTAT equ 09Ah ;# 
  1279  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1280                           ADRES equ 09Bh ;# 
  1281  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1282                           ADRESL equ 09Bh ;# 
  1283  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1284                           ADRESH equ 09Ch ;# 
  1285  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1286                           ADCON0 equ 09Dh ;# 
  1287  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1288                           ADCON1 equ 09Eh ;# 
  1289  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1290                           LATA equ 010Ch ;# 
  1291  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1292                           LATB equ 010Dh ;# 
  1293  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1294                           LATC equ 010Eh ;# 
  1295  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1296                           BORCON equ 0116h ;# 
  1297  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1298                           FVRCON equ 0117h ;# 
  1299  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1300                           APFCON equ 011Dh ;# 
  1301  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1302                           ANSELA equ 018Ch ;# 
  1303  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1304                           ANSELB equ 018Dh ;# 
  1305  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1306                           ANSELC equ 018Eh ;# 
  1307  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1308                           PMADR equ 0191h ;# 
  1309  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1310                           PMADRL equ 0191h ;# 
  1311  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1312                           PMADRH equ 0192h ;# 
  1313  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1314                           PMDAT equ 0193h ;# 
  1315  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1316                           PMDATL equ 0193h ;# 
  1317  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1318                           PMDATH equ 0194h ;# 
  1319  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1320                           PMCON1 equ 0195h ;# 
  1321  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1322                           PMCON2 equ 0196h ;# 
  1323  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1324                           VREGCON equ 0197h ;# 
  1325  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1326                           RCREG equ 0199h ;# 
  1327  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1328                           TXREG equ 019Ah ;# 
  1329  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1330                           SP1BRG equ 019Bh ;# 
  1331  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1332                           SP1BRGL equ 019Bh ;# 
  1333  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1334                           SPBRG equ 019Bh ;# 
  1335  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1336                           SPBRGL equ 019Bh ;# 
  1337  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1338                           SP1BRGH equ 019Ch ;# 
  1339  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1340                           SPBRGH equ 019Ch ;# 
  1341  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1342                           RCSTA equ 019Dh ;# 
  1343  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1344                           TXSTA equ 019Eh ;# 
  1345  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1346                           BAUDCON equ 019Fh ;# 
  1347  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1348                           WPUB equ 020Dh ;# 
  1349  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1350                           WPUE equ 0210h ;# 
  1351  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1352                           SSPBUF equ 0211h ;# 
  1353  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1354                           SSP1BUF equ 0211h ;# 
  1355  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1356                           SSPADD equ 0212h ;# 
  1357  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1358                           SSP1ADD equ 0212h ;# 
  1359  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1360                           SSPMSK equ 0213h ;# 
  1361  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1362                           SSP1MSK equ 0213h ;# 
  1363  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1364                           SSPSTAT equ 0214h ;# 
  1365  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1366                           SSP1STAT equ 0214h ;# 
  1367  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1368                           SSPCON1 equ 0215h ;# 
  1369  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1370                           SSPCON equ 0215h ;# 
  1371  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1372                           SSP1CON1 equ 0215h ;# 
  1373  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1374                           SSPCON2 equ 0216h ;# 
  1375  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1376                           SSP1CON2 equ 0216h ;# 
  1377  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1378                           SSPCON3 equ 0217h ;# 
  1379  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1380                           SSP1CON3 equ 0217h ;# 
  1381  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1382                           CCPR1 equ 0291h ;# 
  1383  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1384                           CCPR1L equ 0291h ;# 
  1385  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1386                           CCPR1H equ 0292h ;# 
  1387  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1388                           CCP1CON equ 0293h ;# 
  1389  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1390                           CCPR2 equ 0298h ;# 
  1391  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1392                           CCPR2L equ 0298h ;# 
  1393  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1394                           CCPR2H equ 0299h ;# 
  1395  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1396                           CCP2CON equ 029Ah ;# 
  1397  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1398                           IOCBP equ 0394h ;# 
  1399  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1400                           IOCBN equ 0395h ;# 
  1401  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1402                           IOCBF equ 0396h ;# 
  1403  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1404                           STATUS_SHAD equ 0FE4h ;# 
  1405  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1406                           WREG_SHAD equ 0FE5h ;# 
  1407  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1408                           BSR_SHAD equ 0FE6h ;# 
  1409  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1410                           PCLATH_SHAD equ 0FE7h ;# 
  1411  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1412                           FSR0L_SHAD equ 0FE8h ;# 
  1413  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1414                           FSR0H_SHAD equ 0FE9h ;# 
  1415  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1416                           FSR1L_SHAD equ 0FEAh ;# 
  1417  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1418                           FSR1H_SHAD equ 0FEBh ;# 
  1419  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1420                           STKPTR equ 0FEDh ;# 
  1421  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1422                           TOSL equ 0FEEh ;# 
  1423  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1424                           TOSH equ 0FEFh ;# 
  1425  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1426                           INDF0 equ 00h ;# 
  1427  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1428                           INDF1 equ 01h ;# 
  1429  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1430                           PCL equ 02h ;# 
  1431  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1432                           STATUS equ 03h ;# 
  1433  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1434                           FSR0L equ 04h ;# 
  1435  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1436                           FSR0H equ 05h ;# 
  1437  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1438                           FSR1L equ 06h ;# 
  1439  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1440                           FSR1H equ 07h ;# 
  1441  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1442                           BSR equ 08h ;# 
  1443  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1444                           WREG equ 09h ;# 
  1445  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1446                           PCLATH equ 0Ah ;# 
  1447  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1448                           INTCON equ 0Bh ;# 
  1449  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1450                           PORTA equ 0Ch ;# 
  1451  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1452                           PORTB equ 0Dh ;# 
  1453  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1454                           PORTC equ 0Eh ;# 
  1455  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1456                           PORTE equ 010h ;# 
  1457  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1458                           PIR1 equ 011h ;# 
  1459  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1460                           PIR2 equ 012h ;# 
  1461  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1462                           TMR0 equ 015h ;# 
  1463  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1464                           TMR1 equ 016h ;# 
  1465  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1466                           TMR1L equ 016h ;# 
  1467  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1468                           TMR1H equ 017h ;# 
  1469  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1470                           T1CON equ 018h ;# 
  1471  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1472                           T1GCON equ 019h ;# 
  1473  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1474                           TMR2 equ 01Ah ;# 
  1475  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1476                           PR2 equ 01Bh ;# 
  1477  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1478                           T2CON equ 01Ch ;# 
  1479  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1480                           TRISA equ 08Ch ;# 
  1481  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1482                           TRISB equ 08Dh ;# 
  1483  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1484                           TRISC equ 08Eh ;# 
  1485  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1486                           TRISE equ 090h ;# 
  1487  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1488                           PIE1 equ 091h ;# 
  1489  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1490                           PIE2 equ 092h ;# 
  1491  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1492                           OPTION_REG equ 095h ;# 
  1493  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1494                           PCON equ 096h ;# 
  1495  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1496                           WDTCON equ 097h ;# 
  1497  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1498                           OSCCON equ 099h ;# 
  1499  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1500                           OSCSTAT equ 09Ah ;# 
  1501  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1502                           ADRES equ 09Bh ;# 
  1503  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1504                           ADRESL equ 09Bh ;# 
  1505  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1506                           ADRESH equ 09Ch ;# 
  1507  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1508                           ADCON0 equ 09Dh ;# 
  1509  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1510                           ADCON1 equ 09Eh ;# 
  1511  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1512                           LATA equ 010Ch ;# 
  1513  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1514                           LATB equ 010Dh ;# 
  1515  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1516                           LATC equ 010Eh ;# 
  1517  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1518                           BORCON equ 0116h ;# 
  1519  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1520                           FVRCON equ 0117h ;# 
  1521  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1522                           APFCON equ 011Dh ;# 
  1523  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1524                           ANSELA equ 018Ch ;# 
  1525  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1526                           ANSELB equ 018Dh ;# 
  1527  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1528                           ANSELC equ 018Eh ;# 
  1529  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1530                           PMADR equ 0191h ;# 
  1531  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1532                           PMADRL equ 0191h ;# 
  1533  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1534                           PMADRH equ 0192h ;# 
  1535  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1536                           PMDAT equ 0193h ;# 
  1537  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1538                           PMDATL equ 0193h ;# 
  1539  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1540                           PMDATH equ 0194h ;# 
  1541  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1542                           PMCON1 equ 0195h ;# 
  1543  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1544                           PMCON2 equ 0196h ;# 
  1545  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1546                           VREGCON equ 0197h ;# 
  1547  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1548                           RCREG equ 0199h ;# 
  1549  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1550                           TXREG equ 019Ah ;# 
  1551  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1552                           SP1BRG equ 019Bh ;# 
  1553  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1554                           SP1BRGL equ 019Bh ;# 
  1555  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1556                           SPBRG equ 019Bh ;# 
  1557  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1558                           SPBRGL equ 019Bh ;# 
  1559  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1560                           SP1BRGH equ 019Ch ;# 
  1561  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1562                           SPBRGH equ 019Ch ;# 
  1563  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1564                           RCSTA equ 019Dh ;# 
  1565  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1566                           TXSTA equ 019Eh ;# 
  1567  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1568                           BAUDCON equ 019Fh ;# 
  1569  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1570                           WPUB equ 020Dh ;# 
  1571  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1572                           WPUE equ 0210h ;# 
  1573  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1574                           SSPBUF equ 0211h ;# 
  1575  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1576                           SSP1BUF equ 0211h ;# 
  1577  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1578                           SSPADD equ 0212h ;# 
  1579  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1580                           SSP1ADD equ 0212h ;# 
  1581  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1582                           SSPMSK equ 0213h ;# 
  1583  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1584                           SSP1MSK equ 0213h ;# 
  1585  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1586                           SSPSTAT equ 0214h ;# 
  1587  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1588                           SSP1STAT equ 0214h ;# 
  1589  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1590                           SSPCON1 equ 0215h ;# 
  1591  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1592                           SSPCON equ 0215h ;# 
  1593  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1594                           SSP1CON1 equ 0215h ;# 
  1595  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1596                           SSPCON2 equ 0216h ;# 
  1597  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1598                           SSP1CON2 equ 0216h ;# 
  1599  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1600                           SSPCON3 equ 0217h ;# 
  1601  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1602                           SSP1CON3 equ 0217h ;# 
  1603  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1604                           CCPR1 equ 0291h ;# 
  1605  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1606                           CCPR1L equ 0291h ;# 
  1607  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1608                           CCPR1H equ 0292h ;# 
  1609  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1610                           CCP1CON equ 0293h ;# 
  1611  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1612                           CCPR2 equ 0298h ;# 
  1613  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1614                           CCPR2L equ 0298h ;# 
  1615  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1616                           CCPR2H equ 0299h ;# 
  1617  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1618                           CCP2CON equ 029Ah ;# 
  1619  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1620                           IOCBP equ 0394h ;# 
  1621  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1622                           IOCBN equ 0395h ;# 
  1623  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1624                           IOCBF equ 0396h ;# 
  1625  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1626                           STATUS_SHAD equ 0FE4h ;# 
  1627  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1628                           WREG_SHAD equ 0FE5h ;# 
  1629  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1630                           BSR_SHAD equ 0FE6h ;# 
  1631  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1632                           PCLATH_SHAD equ 0FE7h ;# 
  1633  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1634                           FSR0L_SHAD equ 0FE8h ;# 
  1635  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1636                           FSR0H_SHAD equ 0FE9h ;# 
  1637  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1638                           FSR1L_SHAD equ 0FEAh ;# 
  1639  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1640                           FSR1H_SHAD equ 0FEBh ;# 
  1641  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1642                           STKPTR equ 0FEDh ;# 
  1643  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1644                           TOSL equ 0FEEh ;# 
  1645  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1646                           TOSH equ 0FEFh ;# 
  1647  0FEF                     DABS 1,1568,48	;_gEusartRXBuffer
  1648                           DABS 1,1440,80	;_gEusartRXBuffer
  1649                           DABS 1,1320,72	;_gEusartRXBuffer
  1650                           	FNCALL	_main,_AddTrace
  1651                           	FNCALL	_main,_Debounce
  1652                           	FNCALL	_main,_EM1812EntryPoint
  1653                           	FNCALL	_main,_Esp8266OpenSocket
  1654                           	FNCALL	_main,_Esp8266SetAccessPointMode
  1655                           	FNCALL	_main,_Esp8266SetupWifi
  1656                           	FNCALL	_main,_PrintLog
  1657                           	FNCALL	_main,_clearDisplay
  1658                           	FNCALL	_main,_initLCD
  1659                           	FNCALL	_main,_lcdWriteText
  1660                           	FNCALL	_main,_memset
  1661                           	FNCALL	_main,_moveCursorToHome
  1662                           	FNCALL	_main,_powerOnLcd
  1663                           	FNCALL	_main,_printEM1812
  1664                           	FNCALL	_main,_setCursorOff
  1665                           	FNCALL	_main,_setCursorPosition
  1666                           	FNCALL	_main,_setNotBlinkingCursor
  1667                           	FNCALL	_setNotBlinkingCursor,_writeInsChk
  1668                           	FNCALL	_setCursorOff,_writeInsChk
  1669                           	FNCALL	_printEM1812,___awdiv
  1670                           	FNCALL	_printEM1812,___awmod
  1671                           	FNCALL	_powerOnLcd,_writeInsChk
  1672                           	FNCALL	_moveCursorToHome,_writeInsChk
  1673                           	FNCALL	_initLCD,_clearDisplay
  1674                           	FNCALL	_initLCD,_setData
  1675                           	FNCALL	_initLCD,_writeInsChk
  1676                           	FNCALL	_clearDisplay,_writeInsChk
  1677                           	FNCALL	_writeInsChk,_waitLCDBusy
  1678                           	FNCALL	_writeInsChk,_writeInsNoChk
  1679                           	FNCALL	_writeInsNoChk,_SetToSendDataToLCD
  1680                           	FNCALL	_writeInsNoChk,_setData
  1681                           	FNCALL	_PrintLog,_lcdWriteText
  1682                           	FNCALL	_PrintLog,_memset
  1683                           	FNCALL	_PrintLog,_strlen
  1684                           	FNCALL	_lcdWriteText,_writeTxtChk
  1685                           	FNCALL	_writeTxtChk,_SetToSendDataToLCD
  1686                           	FNCALL	_writeTxtChk,_setCursorPosition
  1687                           	FNCALL	_writeTxtChk,_setData
  1688                           	FNCALL	_writeTxtChk,_waitLCDBusy
  1689                           	FNCALL	_setCursorPosition,_SetToSendDataToLCD
  1690                           	FNCALL	_setCursorPosition,_setData
  1691                           	FNCALL	_setCursorPosition,_waitLCDBusy
  1692                           	FNCALL	_waitLCDBusy,_SetToReadDataFromLCD
  1693                           	FNCALL	_EM1812EntryPoint,_GetI2CStatus
  1694                           	FNCALL	_EM1812EntryPoint,_GetNewReceivedData
  1695                           	FNCALL	_EM1812EntryPoint,_I2C_GetData
  1696                           	FNCALL	_EM1812EntryPoint,_I2C_SendData
  1697                           	FNCALL	_I2C_SendData,_memcpy
  1698                           	FNCALL	_GetNewReceivedData,_memcpy
  1699                           	FNCALL	_AddTrace,_strcat
  1700                           	FNCALL	_AddTrace,_strlen
  1701                           	FNCALL	_strcat,_strcpy
  1702                           	FNCALL	_strcat,_strlen
  1703                           	FNROOT	_main
  1704                           	FNCALL	_myint,_EUSARTInterrupt
  1705                           	FNCALL	_myint,_I2C_Interrupt
  1706                           	FNCALL	_myint,_TempUpdateRequest
  1707                           	FNCALL	_myint,i1_lcdWriteText
  1708                           	FNCALL	i1_lcdWriteText,i1_writeTxtChk
  1709                           	FNCALL	i1_writeTxtChk,i1_SetToSendDataToLCD
  1710                           	FNCALL	i1_writeTxtChk,i1_setCursorPosition
  1711                           	FNCALL	i1_writeTxtChk,i1_setData
  1712                           	FNCALL	i1_writeTxtChk,i1_waitLCDBusy
  1713                           	FNCALL	i1_setCursorPosition,i1_SetToSendDataToLCD
  1714                           	FNCALL	i1_setCursorPosition,i1_setData
  1715                           	FNCALL	i1_setCursorPosition,i1_waitLCDBusy
  1716                           	FNCALL	i1_waitLCDBusy,i1_SetToReadDataFromLCD
  1717                           	FNCALL	intlevel1,_myint
  1718                           	global	intlevel1
  1719                           	FNROOT	intlevel1
  1720                           	global	_gEsp8266Echo
  1721                           	global	_gESPCommand
  1722                           	global	_gEsp8266State
  1723                           	global	_wI2CRxBufferSize
  1724                           	global	_wI2CTxBufferSize
  1725                           	global	_wI2CCommandState
  1726                           	global	EM1812EntryPoint@F1960
  1727                           	global	main@F2379
  1728                           	global	_wTempSet
  1729                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1730                           global __pidataBANK0
  1731                           __pidataBANK0:
  1732  0924                     	file	"./ESP8266.h"
  1733                           	line	17
  1734                           
  1735                           ;initializer for _gEsp8266Echo
  1736                           	retlw	01h
  1737  0924  3401               	line	16
  1738                           
  1739                           ;initializer for _gESPCommand
  1740                           	retlw	07h
  1741  0925  3407               	line	15
  1742                           
  1743                           ;initializer for _gEsp8266State
  1744                           	retlw	01h
  1745  0926  3401               	file	"./I2C.h"
  1746                           	line	24
  1747                           
  1748                           ;initializer for _wI2CRxBufferSize
  1749                           	retlw	014h
  1750  0927  3414               	line	23
  1751                           
  1752                           ;initializer for _wI2CTxBufferSize
  1753                           	retlw	014h
  1754  0928  3414               	line	14
  1755                           
  1756                           ;initializer for _wI2CCommandState
  1757                           	retlw	03h
  1758  0929  3403               psect	idataBANK1,class=CODE,space=0,delta=2,noexec
  1759                           global __pidataBANK1
  1760                           __pidataBANK1:
  1761  0951                     	file	"EM1812.c"
  1762                           	line	96
  1763                           
  1764                           ;initializer for EM1812EntryPoint@F1960
  1765                           	retlw	0B8h
  1766  0951  34B8               	retlw	03h
  1767  0952  3403               	retlw	low(0)
  1768  0953  3400               	retlw	04h
  1769  0954  3404               	file	"161518_temp_main.c"
  1770                           	line	204
  1771                           
  1772                           ;initializer for main@F2379
  1773                           	retlw	02Bh
  1774  0955  342B               	retlw	low(0)
  1775  0956  3400               	retlw	078h
  1776  0957  3478               	retlw	low(0)
  1777  0958  3400               	line	103
  1778                           
  1779                           ;initializer for _wTempSet
  1780                           	retlw	0D2h
  1781  0959  34D2               	retlw	0
  1782  095A  3400               
  1783                           	global	_gEspRxBufferPtr
  1784                           	global	Esp8266Entrypoint@wCommandsize
  1785                           	global	Esp8266Entrypoint@wCounter
  1786                           	global	Esp8266Entrypoint@prevEusartNbByteReceived
  1787                           	global	EM1812EntryPoint@wTry
  1788                           	global	_wTimer1IntCounter
  1789                           	global	_gEspRxBufferReadingPosition
  1790                           	global	_gEspRxBufferSize
  1791                           	global	_gTxTransmitSize
  1792                           	global	_gEUSARTError
  1793                           	global	_gTxReadingPosition
  1794                           	global	_gEusartRXBufferWritePtr
  1795                           	global	_wI2CTxSendPos
  1796                           	global	_wNewI2CReception
  1797                           	global	_wI2CRxNbOfByteToReceived
  1798                           	global	_wI2CTxNbOfByteToSend
  1799                           	global	_wReceptionBufferPosition
  1800                           	global	_wTimer0Counter
  1801                           	global	_wTempState
  1802                           	global	_mWritingPosition
  1803                           	global	_mCursorDisplayShiftReg
  1804                           	global	_mDisplayOnOffReg
  1805                           	global	EM1812EntryPoint@F1962
  1806                           	global	uint16_tToa@F1884
  1807                           	global	_gErrorCode
  1808                           	global	_wTemperature
  1809                           	global	_wHumidity
  1810                           	global	_wI2CRxBuffer
  1811                           	global	_wI2CTxBuffer
  1812                           	global	_wInterruptText
  1813                           	global	_gEusartTXBuffer
  1814                           	global	_gEusartRXBuffer
  1815                           	global	_PIR2bits
  1816                           _PIR2bits	set	0x12
  1817  0012                     	global	_TMR0
  1818                           _TMR0	set	0x15
  1819  0015                     	global	_PORTAbits
  1820                           _PORTAbits	set	0xC
  1821  000C                     	global	_TMR1L
  1822                           _TMR1L	set	0x16
  1823  0016                     	global	_TMR1H
  1824                           _TMR1H	set	0x17
  1825  0017                     	global	_PIR1bits
  1826                           _PIR1bits	set	0x11
  1827  0011                     	global	_PORTB
  1828                           _PORTB	set	0xD
  1829  000D                     	global	_T1CONbits
  1830                           _T1CONbits	set	0x18
  1831  0018                     	global	_PORTA
  1832                           _PORTA	set	0xC
  1833  000C                     	global	_PORTCbits
  1834                           _PORTCbits	set	0xE
  1835  000E                     	global	_INTCONbits
  1836                           _INTCONbits	set	0xB
  1837  000B                     	global	_PORTBbits
  1838                           _PORTBbits	set	0xD
  1839  000D                     	global	_PIE2bits
  1840                           _PIE2bits	set	0x92
  1841  0092                     	global	_TRISAbits
  1842                           _TRISAbits	set	0x8C
  1843  008C                     	global	_TRISB
  1844                           _TRISB	set	0x8D
  1845  008D                     	global	_OPTION_REGbits
  1846                           _OPTION_REGbits	set	0x95
  1847  0095                     	global	_PIE1bits
  1848                           _PIE1bits	set	0x91
  1849  0091                     	global	_OSCSTATbits
  1850                           _OSCSTATbits	set	0x9A
  1851  009A                     	global	_TRISCbits
  1852                           _TRISCbits	set	0x8E
  1853  008E                     	global	_OSCCONbits
  1854                           _OSCCONbits	set	0x99
  1855  0099                     	global	_RCREG
  1856                           _RCREG	set	0x199
  1857  0199                     	global	_TXREG
  1858                           _TXREG	set	0x19A
  1859  019A                     	global	_RCSTAbits
  1860                           _RCSTAbits	set	0x19D
  1861  019D                     	global	_TXSTAbits
  1862                           _TXSTAbits	set	0x19E
  1863  019E                     	global	_SPBRGL
  1864                           _SPBRGL	set	0x19B
  1865  019B                     	global	_SPBRGH
  1866                           _SPBRGH	set	0x19C
  1867  019C                     	global	_ANSELAbits
  1868                           _ANSELAbits	set	0x18C
  1869  018C                     	global	_ANSELB
  1870                           _ANSELB	set	0x18D
  1871  018D                     	global	_ANSELCbits
  1872                           _ANSELCbits	set	0x18E
  1873  018E                     	global	_SSPBUF
  1874                           _SSPBUF	set	0x211
  1875  0211                     	global	_SSPSTATbits
  1876                           _SSPSTATbits	set	0x214
  1877  0214                     	global	_SSPCON2bits
  1878                           _SSPCON2bits	set	0x216
  1879  0216                     	global	_SSPADD
  1880                           _SSPADD	set	0x212
  1881  0212                     	global	_SSPCON1bits
  1882                           _SSPCON1bits	set	0x215
  1883  0215                     	global	_SSPCON3bits
  1884                           _SSPCON3bits	set	0x217
  1885  0217                     	global	_WPUB
  1886                           _WPUB	set	0x20D
  1887  020D                     psect	stringtext1,class=STRCODE,delta=2,noexec
  1888                           global __pstringtext1
  1889                           __pstringtext1:
  1890  1000                     	
  1891                           STR_38:	
  1892  1000                     	retlw	65	;'A'
  1893  1000  3441               	retlw	76	;'L'
  1894  1001  344C               	retlw	82	;'R'
  1895  1002  3452               	retlw	69	;'E'
  1896  1003  3445               	retlw	65	;'A'
  1897  1004  3441               	retlw	68	;'D'
  1898  1005  3444               	retlw	89	;'Y'
  1899  1006  3459               	retlw	32	;' '
  1900  1007  3420               	retlw	67	;'C'
  1901  1008  3443               	retlw	79	;'O'
  1902  1009  344F               	retlw	78	;'N'
  1903  100A  344E               	retlw	78	;'N'
  1904  100B  344E               	retlw	69	;'E'
  1905  100C  3445               	retlw	67	;'C'
  1906  100D  3443               	retlw	84	;'T'
  1907  100E  3454               	retlw	69	;'E'
  1908  100F  3445               	retlw	68	;'D'
  1909  1010  3444               	retlw	0
  1910  1011  3400               psect	stringtext2,class=STRCODE,delta=2,noexec
  1911                           global __pstringtext2
  1912                           __pstringtext2:
  1913  1012                     	
  1914                           STR_15:	
  1915  1012                     	retlw	65	;'A'
  1916  1012  3441               	retlw	84	;'T'
  1917  1013  3454               	retlw	43	;'+'
  1918  1014  342B               	retlw	67	;'C'
  1919  1015  3443               	retlw	87	;'W'
  1920  1016  3457               	retlw	83	;'S'
  1921  1017  3453               	retlw	65	;'A'
  1922  1018  3441               	retlw	80	;'P'
  1923  1019  3450               	retlw	61	;'='
  1924  101A  343D               	retlw	34	;'"'
  1925  101B  3422               	retlw	34	;'"'
  1926  101C  3422               	retlw	44	;','
  1927  101D  342C               	retlw	34	;'"'
  1928  101E  3422               	retlw	34	;'"'
  1929  101F  3422               	retlw	44	;','
  1930  1020  342C               	retlw	44	;','
  1931  1021  342C               	retlw	0
  1932  1022  3400               psect	stringtext3,class=STRCODE,delta=2,noexec
  1933                           global __pstringtext3
  1934                           __pstringtext3:
  1935  1023                     	
  1936                           STR_6:	
  1937  1023                     	retlw	45	;'-'
  1938  1023  342D               	retlw	83	;'S'
  1939  1024  3453               	retlw	101	;'e'
  1940  1025  3465               	retlw	116	;'t'
  1941  1026  3474               	retlw	32	;' '
  1942  1027  3420               	retlw	77	;'M'
  1943  1028  344D               	retlw	111	;'o'
  1944  1029  346F               	retlw	100	;'d'
  1945  102A  3464               	retlw	101	;'e'
  1946  102B  3465               	retlw	45	;'-'
  1947  102C  342D               	retlw	32	;' '
  1948  102D  3420               	retlw	32	;' '
  1949  102E  3420               	retlw	32	;' '
  1950  102F  3420               	retlw	32	;' '
  1951  1030  3420               	retlw	32	;' '
  1952  1031  3420               	retlw	10
  1953  1032  340A               	retlw	0
  1954  1033  3400               psect	stringtext4,class=STRCODE,delta=2,noexec
  1955                           global __pstringtext4
  1956                           __pstringtext4:
  1957  1034                     	
  1958                           STR_4:	
  1959  1034                     	retlw	45	;'-'
  1960  1034  342D               	retlw	83	;'S'
  1961  1035  3453               	retlw	101	;'e'
  1962  1036  3465               	retlw	116	;'t'
  1963  1037  3474               	retlw	32	;' '
  1964  1038  3420               	retlw	84	;'T'
  1965  1039  3454               	retlw	105	;'i'
  1966  103A  3469               	retlw	109	;'m'
  1967  103B  346D               	retlw	101	;'e'
  1968  103C  3465               	retlw	45	;'-'
  1969  103D  342D               	retlw	32	;' '
  1970  103E  3420               	retlw	32	;' '
  1971  103F  3420               	retlw	32	;' '
  1972  1040  3420               	retlw	32	;' '
  1973  1041  3420               	retlw	32	;' '
  1974  1042  3420               	retlw	10
  1975  1043  340A               	retlw	0
  1976  1044  3400               psect	stringtext5,class=STRCODE,delta=2,noexec
  1977                           global __pstringtext5
  1978                           __pstringtext5:
  1979  1045                     	
  1980                           STR_5:	
  1981  1045                     	retlw	45	;'-'
  1982  1045  342D               	retlw	83	;'S'
  1983  1046  3453               	retlw	101	;'e'
  1984  1047  3465               	retlw	116	;'t'
  1985  1048  3474               	retlw	32	;' '
  1986  1049  3420               	retlw	84	;'T'
  1987  104A  3454               	retlw	101	;'e'
  1988  104B  3465               	retlw	109	;'m'
  1989  104C  346D               	retlw	112	;'p'
  1990  104D  3470               	retlw	45	;'-'
  1991  104E  342D               	retlw	32	;' '
  1992  104F  3420               	retlw	32	;' '
  1993  1050  3420               	retlw	32	;' '
  1994  1051  3420               	retlw	32	;' '
  1995  1052  3420               	retlw	32	;' '
  1996  1053  3420               	retlw	10
  1997  1054  340A               	retlw	0
  1998  1055  3400               psect	stringtext6,class=STRCODE,delta=2,noexec
  1999                           global __pstringtext6
  2000                           __pstringtext6:
  2001  1056                     	
  2002                           STR_2:	
  2003  1056                     	retlw	84	;'T'
  2004  1056  3454               	retlw	101	;'e'
  2005  1057  3465               	retlw	109	;'m'
  2006  1058  346D               	retlw	112	;'p'
  2007  1059  3470               	retlw	32	;' '
  2008  105A  3420               	retlw	83	;'S'
  2009  105B  3453               	retlw	101	;'e'
  2010  105C  3465               	retlw	116	;'t'
  2011  105D  3474               	retlw	116	;'t'
  2012  105E  3474               	retlw	105	;'i'
  2013  105F  3469               	retlw	110	;'n'
  2014  1060  346E               	retlw	103	;'g'
  2015  1061  3467               	retlw	58	;':'
  2016  1062  343A               	retlw	32	;' '
  2017  1063  3420               	retlw	32	;' '
  2018  1064  3420               	retlw	10
  2019  1065  340A               	retlw	0
  2020  1066  3400               psect	stringtext7,class=STRCODE,delta=2,noexec
  2021                           global __pstringtext7
  2022                           __pstringtext7:
  2023  1067                     	
  2024                           STR_7:	
  2025  1067                     	retlw	87	;'W'
  2026  1067  3457               	retlw	84	;'T'
  2027  1068  3454               	retlw	70	;'F'
  2028  1069  3446               	retlw	32	;' '
  2029  106A  3420               	retlw	32	;' '
  2030  106B  3420               	retlw	32	;' '
  2031  106C  3420               	retlw	32	;' '
  2032  106D  3420               	retlw	32	;' '
  2033  106E  3420               	retlw	32	;' '
  2034  106F  3420               	retlw	32	;' '
  2035  1070  3420               	retlw	32	;' '
  2036  1071  3420               	retlw	32	;' '
  2037  1072  3420               	retlw	32	;' '
  2038  1073  3420               	retlw	32	;' '
  2039  1074  3420               	retlw	32	;' '
  2040  1075  3420               	retlw	0
  2041  1076  3400               psect	stringtext8,class=STRCODE,delta=2,noexec
  2042                           global __pstringtext8
  2043                           __pstringtext8:
  2044  1077                     	
  2045                           STR_1:	
  2046  1077                     	retlw	84	;'T'
  2047  1077  3454               	retlw	105	;'i'
  2048  1078  3469               	retlw	109	;'m'
  2049  1079  346D               	retlw	101	;'e'
  2050  107A  3465               	retlw	32	;' '
  2051  107B  3420               	retlw	32	;' '
  2052  107C  3420               	retlw	32	;' '
  2053  107D  3420               	retlw	32	;' '
  2054  107E  3420               	retlw	32	;' '
  2055  107F  3420               	retlw	32	;' '
  2056  1080  3420               	retlw	32	;' '
  2057  1081  3420               	retlw	32	;' '
  2058  1082  3420               	retlw	32	;' '
  2059  1083  3420               	retlw	32	;' '
  2060  1084  3420               	retlw	32	;' '
  2061  1085  3420               	retlw	0
  2062  1086  3400               psect	stringtext9,class=STRCODE,delta=2,noexec
  2063                           global __pstringtext9
  2064                           __pstringtext9:
  2065  1087                     	
  2066                           STR_3:	
  2067  1087                     	retlw	77	;'M'
  2068  1087  344D               	retlw	111	;'o'
  2069  1088  346F               	retlw	100	;'d'
  2070  1089  3464               	retlw	101	;'e'
  2071  108A  3465               	retlw	58	;':'
  2072  108B  343A               	retlw	32	;' '
  2073  108C  3420               	retlw	32	;' '
  2074  108D  3420               	retlw	32	;' '
  2075  108E  3420               	retlw	32	;' '
  2076  108F  3420               	retlw	32	;' '
  2077  1090  3420               	retlw	32	;' '
  2078  1091  3420               	retlw	32	;' '
  2079  1092  3420               	retlw	32	;' '
  2080  1093  3420               	retlw	32	;' '
  2081  1094  3420               	retlw	32	;' '
  2082  1095  3420               	retlw	0
  2083  1096  3400               psect	stringtext10,class=STRCODE,delta=2,noexec
  2084                           global __pstringtext10
  2085                           __pstringtext10:
  2086  1097                     	
  2087                           STR_26:	
  2088  1097                     	retlw	65	;'A'
  2089  1097  3441               	retlw	84	;'T'
  2090  1098  3454               	retlw	43	;'+'
  2091  1099  342B               	retlw	67	;'C'
  2092  109A  3443               	retlw	87	;'W'
  2093  109B  3457               	retlw	77	;'M'
  2094  109C  344D               	retlw	79	;'O'
  2095  109D  344F               	retlw	68	;'D'
  2096  109E  3444               	retlw	69	;'E'
  2097  109F  3445               	retlw	61	;'='
  2098  10A0  343D               	retlw	50	;'2'
  2099  10A1  3432               	retlw	13
  2100  10A2  340D               	retlw	10
  2101  10A3  340A               	retlw	0
  2102  10A4  3400               psect	stringtext11,class=STRCODE,delta=2,noexec
  2103                           global __pstringtext11
  2104                           __pstringtext11:
  2105  10A5                     	
  2106                           STR_10:	
  2107  10A5                     	retlw	69	;'E'
  2108  10A5  3445               	retlw	115	;'s'
  2109  10A6  3473               	retlw	112	;'p'
  2110  10A7  3470               	retlw	56	;'8'
  2111  10A8  3438               	retlw	50	;'2'
  2112  10A9  3432               	retlw	54	;'6'
  2113  10AA  3436               	retlw	54	;'6'
  2114  10AB  3436               	retlw	73	;'I'
  2115  10AC  3449               	retlw	110	;'n'
  2116  10AD  346E               	retlw	105	;'i'
  2117  10AE  3469               	retlw	116	;'t'
  2118  10AF  3474               	retlw	58	;':'
  2119  10B0  343A               	retlw	10
  2120  10B1  340A               	retlw	0
  2121  10B2  3400               psect	stringtext12,class=STRCODE,delta=2,noexec
  2122                           global __pstringtext12
  2123                           __pstringtext12:
  2124  10B3                     	
  2125                           STR_11:	
  2126  10B3                     	retlw	65	;'A'
  2127  10B3  3441               	retlw	84	;'T'
  2128  10B4  3454               	retlw	43	;'+'
  2129  10B5  342B               	retlw	67	;'C'
  2130  10B6  3443               	retlw	73	;'I'
  2131  10B7  3449               	retlw	80	;'P'
  2132  10B8  3450               	retlw	83	;'S'
  2133  10B9  3453               	retlw	84	;'T'
  2134  10BA  3454               	retlw	65	;'A'
  2135  10BB  3441               	retlw	82	;'R'
  2136  10BC  3452               	retlw	84	;'T'
  2137  10BD  3454               	retlw	61	;'='
  2138  10BE  343D               	retlw	34	;'"'
  2139  10BF  3422               	retlw	0
  2140  10C0  3400               psect	stringtext13,class=STRCODE,delta=2,noexec
  2141                           global __pstringtext13
  2142                           __pstringtext13:
  2143  10C1                     	
  2144                           STR_31:	
  2145  10C1                     	retlw	49	;'1'
  2146  10C1  3431               	retlw	57	;'9'
  2147  10C2  3439               	retlw	50	;'2'
  2148  10C3  3432               	retlw	46	;'.'
  2149  10C4  342E               	retlw	49	;'1'
  2150  10C5  3431               	retlw	54	;'6'
  2151  10C6  3436               	retlw	56	;'8'
  2152  10C7  3438               	retlw	46	;'.'
  2153  10C8  342E               	retlw	52	;'4'
  2154  10C9  3434               	retlw	46	;'.'
  2155  10CA  342E               	retlw	50	;'2'
  2156  10CB  3432               	retlw	53	;'5'
  2157  10CC  3435               	retlw	53	;'5'
  2158  10CD  3435               	retlw	0
  2159  10CE  3400               psect	stringtext14,class=STRCODE,delta=2,noexec
  2160                           global __pstringtext14
  2161                           __pstringtext14:
  2162  10CF                     	
  2163                           STR_22:	
  2164  10CF                     	retlw	65	;'A'
  2165  10CF  3441               	retlw	84	;'T'
  2166  10D0  3454               	retlw	43	;'+'
  2167  10D1  342B               	retlw	82	;'R'
  2168  10D2  3452               	retlw	69	;'E'
  2169  10D3  3445               	retlw	83	;'S'
  2170  10D4  3453               	retlw	84	;'T'
  2171  10D5  3454               	retlw	79	;'O'
  2172  10D6  344F               	retlw	82	;'R'
  2173  10D7  3452               	retlw	69	;'E'
  2174  10D8  3445               	retlw	13
  2175  10D9  340D               	retlw	10
  2176  10DA  340A               	retlw	0
  2177  10DB  3400               psect	stringtext15,class=STRCODE,delta=2,noexec
  2178                           global __pstringtext15
  2179                           __pstringtext15:
  2180  10DC                     	
  2181                           STR_8:	
  2182  10DC                     	retlw	72	;'H'
  2183  10DC  3448               	retlw	117	;'u'
  2184  10DD  3475               	retlw	109	;'m'
  2185  10DE  346D               	retlw	105	;'i'
  2186  10DF  3469               	retlw	100	;'d'
  2187  10E0  3464               	retlw	105	;'i'
  2188  10E1  3469               	retlw	116	;'t'
  2189  10E2  3474               	retlw	121	;'y'
  2190  10E3  3479               	retlw	32	;' '
  2191  10E4  3420               	retlw	58	;':'
  2192  10E5  343A               	retlw	32	;' '
  2193  10E6  3420               	retlw	0
  2194  10E7  3400               psect	stringtext16,class=STRCODE,delta=2,noexec
  2195                           global __pstringtext16
  2196                           __pstringtext16:
  2197  10E8                     	
  2198                           STR_16:	
  2199  10E8                     	retlw	65	;'A'
  2200  10E8  3441               	retlw	84	;'T'
  2201  10E9  3454               	retlw	43	;'+'
  2202  10EA  342B               	retlw	67	;'C'
  2203  10EB  3443               	retlw	87	;'W'
  2204  10EC  3457               	retlw	83	;'S'
  2205  10ED  3453               	retlw	65	;'A'
  2206  10EE  3441               	retlw	80	;'P'
  2207  10EF  3450               	retlw	61	;'='
  2208  10F0  343D               	retlw	34	;'"'
  2209  10F1  3422               	retlw	0
  2210  10F2  3400               psect	stringtext17,class=STRCODE,delta=2,noexec
  2211                           global __pstringtext17
  2212                           __pstringtext17:
  2213  10F3                     	
  2214                           STR_36:	
  2215  10F3                     	retlw	82	;'R'
  2216  10F3  3452               	retlw	101	;'e'
  2217  10F4  3465               	retlw	98	;'b'
  2218  10F5  3462               	retlw	111	;'o'
  2219  10F6  346F               	retlw	111	;'o'
  2220  10F7  346F               	retlw	116	;'t'
  2221  10F8  3474               	retlw	101	;'e'
  2222  10F9  3465               	retlw	100	;'d'
  2223  10FA  3464               	retlw	33	;'!'
  2224  10FB  3421               	retlw	0
  2225  10FC  3400               psect	stringtext18,class=STRCODE,delta=2,noexec
  2226                           global __pstringtext18
  2227                           __pstringtext18:
  2228  10FD                     	
  2229                           STR_28:	
  2230  10FD                     	retlw	49	;'1'
  2231  10FD  3431               	retlw	50	;'2'
  2232  10FE  3432               	retlw	51	;'3'
  2233  10FF  3433               	retlw	52	;'4'
  2234  1100  3434               	retlw	53	;'5'
  2235  1101  3435               	retlw	54	;'6'
  2236  1102  3436               	retlw	55	;'7'
  2237  1103  3437               	retlw	56	;'8'
  2238  1104  3438               	retlw	0
  2239  1105  3400               psect	stringtext19,class=STRCODE,delta=2,noexec
  2240                           global __pstringtext19
  2241                           __pstringtext19:
  2242  1106                     	
  2243                           STR_25:	
  2244  1106                     	retlw	65	;'A'
  2245  1106  3441               	retlw	80	;'P'
  2246  1107  3450               	retlw	32	;' '
  2247  1108  3420               	retlw	77	;'M'
  2248  1109  344D               	retlw	79	;'O'
  2249  110A  344F               	retlw	68	;'D'
  2250  110B  3444               	retlw	69	;'E'
  2251  110C  3445               	retlw	58	;':'
  2252  110D  343A               	retlw	0
  2253  110E  3400               psect	stringtext20,class=STRCODE,delta=2,noexec
  2254                           global __pstringtext20
  2255                           __pstringtext20:
  2256  110F                     	
  2257                           STR_21:	
  2258  110F                     	retlw	82	;'R'
  2259  110F  3452               	retlw	101	;'e'
  2260  1110  3465               	retlw	115	;'s'
  2261  1111  3473               	retlw	116	;'t'
  2262  1112  3474               	retlw	111	;'o'
  2263  1113  346F               	retlw	114	;'r'
  2264  1114  3472               	retlw	101	;'e'
  2265  1115  3465               	retlw	58	;':'
  2266  1116  343A               	retlw	0
  2267  1117  3400               psect	stringtext21,class=STRCODE,delta=2,noexec
  2268                           global __pstringtext21
  2269                           __pstringtext21:
  2270  1118                     	
  2271                           STR_9:	
  2272  1118                     	retlw	10
  2273  1118  340A               	retlw	84	;'T'
  2274  1119  3454               	retlw	101	;'e'
  2275  111A  3465               	retlw	109	;'m'
  2276  111B  346D               	retlw	112	;'p'
  2277  111C  3470               	retlw	32	;' '
  2278  111D  3420               	retlw	58	;':'
  2279  111E  343A               	retlw	32	;' '
  2280  111F  3420               	retlw	0
  2281  1120  3400               psect	stringtext22,class=STRCODE,delta=2,noexec
  2282                           global __pstringtext22
  2283                           __pstringtext22:
  2284  1121                     	
  2285                           STR_32:	
  2286  1121                     	retlw	83	;'S'
  2287  1121  3453               	retlw	79	;'O'
  2288  1122  344F               	retlw	67	;'C'
  2289  1123  3443               	retlw	75	;'K'
  2290  1124  344B               	retlw	69	;'E'
  2291  1125  3445               	retlw	84	;'T'
  2292  1126  3454               	retlw	58	;':'
  2293  1127  343A               	retlw	0
  2294  1128  3400               psect	stringtext23,class=STRCODE,delta=2,noexec
  2295                           global __pstringtext23
  2296                           __pstringtext23:
  2297  1129                     	
  2298                           STR_27:	
  2299  1129                     	retlw	77	;'M'
  2300  1129  344D               	retlw	101	;'e'
  2301  112A  3465               	retlw	99	;'c'
  2302  112B  3463               	retlw	99	;'c'
  2303  112C  3463               	retlw	111	;'o'
  2304  112D  346F               	retlw	115	;'s'
  2305  112E  3473               	retlw	0
  2306  112F  3400               psect	stringtext24,class=STRCODE,delta=2,noexec
  2307                           global __pstringtext24
  2308                           __pstringtext24:
  2309  1130                     	
  2310                           STR_24:	
  2311  1130                     	retlw	65	;'A'
  2312  1130  3441               	retlw	84	;'T'
  2313  1131  3454               	retlw	69	;'E'
  2314  1132  3445               	retlw	13
  2315  1133  340D               	retlw	10
  2316  1134  340A               	retlw	0
  2317  1135  3400               psect	stringtext25,class=STRCODE,delta=2,noexec
  2318                           global __pstringtext25
  2319                           __pstringtext25:
  2320  1136                     	
  2321                           STR_29:	
  2322  1136                     	retlw	87	;'W'
  2323  1136  3457               	retlw	73	;'I'
  2324  1137  3449               	retlw	70	;'F'
  2325  1138  3446               	retlw	73	;'I'
  2326  1139  3449               	retlw	58	;':'
  2327  113A  343A               	retlw	0
  2328  113B  3400               psect	stringtext26,class=STRCODE,delta=2,noexec
  2329                           global __pstringtext26
  2330                           __pstringtext26:
  2331  113C                     	
  2332                           STR_20:	
  2333  113C                     	retlw	44	;','
  2334  113C  342C               	retlw	48	;'0'
  2335  113D  3430               	retlw	13
  2336  113E  340D               	retlw	10
  2337  113F  340A               	retlw	0
  2338  1140  3400               psect	stringtext27,class=STRCODE,delta=2,noexec
  2339                           global __pstringtext27
  2340                           __pstringtext27:
  2341  1141                     	
  2342                           STR_19:	
  2343  1141                     	retlw	44	;','
  2344  1141  342C               	retlw	49	;'1'
  2345  1142  3431               	retlw	13
  2346  1143  340D               	retlw	10
  2347  1144  340A               	retlw	0
  2348  1145  3400               psect	stringtext28,class=STRCODE,delta=2,noexec
  2349                           global __pstringtext28
  2350                           __pstringtext28:
  2351  1146                     	
  2352                           STR_23:	
  2353  1146                     	retlw	65	;'A'
  2354  1146  3441               	retlw	84	;'T'
  2355  1147  3454               	retlw	69	;'E'
  2356  1148  3445               	retlw	58	;':'
  2357  1149  343A               	retlw	0
  2358  114A  3400               psect	stringtext29,class=STRCODE,delta=2,noexec
  2359                           global __pstringtext29
  2360                           __pstringtext29:
  2361  114B                     	
  2362                           STR_35:	
  2363  114B                     	retlw	108	;'l'
  2364  114B  346C               	retlw	111	;'o'
  2365  114C  346F               	retlw	97	;'a'
  2366  114D  3461               	retlw	100	;'d'
  2367  114E  3464               	retlw	0
  2368  114F  3400               psect	stringtext30,class=STRCODE,delta=2,noexec
  2369                           global __pstringtext30
  2370                           __pstringtext30:
  2371  1150                     	
  2372                           STR_34:	
  2373  1150                     	retlw	79	;'O'
  2374  1150  344F               	retlw	75	;'K'
  2375  1151  344B               	retlw	33	;'!'
  2376  1152  3421               	retlw	0
  2377  1153  3400               psect	stringtext31,class=STRCODE,delta=2,noexec
  2378                           global __pstringtext31
  2379                           __pstringtext31:
  2380  1154                     	
  2381                           STR_12:	
  2382  1154                     	retlw	34	;'"'
  2383  1154  3422               	retlw	44	;','
  2384  1155  342C               	retlw	34	;'"'
  2385  1156  3422               	retlw	0
  2386  1157  3400               psect	stringtext32,class=STRCODE,delta=2,noexec
  2387                           global __pstringtext32
  2388                           __pstringtext32:
  2389  1158                     	
  2390                           STR_30:	
  2391  1158                     	retlw	85	;'U'
  2392  1158  3455               	retlw	68	;'D'
  2393  1159  3444               	retlw	80	;'P'
  2394  115A  3450               	retlw	0
  2395  115B  3400               psect	stringtext33,class=STRCODE,delta=2,noexec
  2396                           global __pstringtext33
  2397                           __pstringtext33:
  2398  115C                     	
  2399                           STR_13:	
  2400  115C                     	retlw	34	;'"'
  2401  115C  3422               	retlw	44	;','
  2402  115D  342C               	retlw	0
  2403  115E  3400               psect	stringtext34,class=STRCODE,delta=2,noexec
  2404                           global __pstringtext34
  2405                           __pstringtext34:
  2406  115F                     	
  2407                           STR_33:	
  2408  115F                     	retlw	79	;'O'
  2409  115F  344F               	retlw	75	;'K'
  2410  1160  344B               	retlw	0
  2411  1161  3400               psect	stringtext35,class=STRCODE,delta=2,noexec
  2412                           global __pstringtext35
  2413                           __pstringtext35:
  2414  0000                     STR_37	equ	STR_33+0
  2415  115F                     STR_18	equ	STR_13+0
  2416  115C                     STR_17	equ	STR_12+0
  2417  1154                     STR_39	equ	STR_34+0
  2418  1150                     STR_14	equ	STR_20+2
  2419  113E                     ; #config settings
  2420                           global __CFG_FOSC$
  2421                           __CFG_FOSC$ equ 0x2
  2422  0002                     global __CFG_WDTE$OFF
  2423                           __CFG_WDTE$OFF equ 0x0
  2424  0000                     global __CFG_PWRTE$ON
  2425                           __CFG_PWRTE$ON equ 0x0
  2426  0000                     global __CFG_MCLRE$OFF
  2427                           __CFG_MCLRE$OFF equ 0x0
  2428  0000                     global __CFG_CP$OFF
  2429                           __CFG_CP$OFF equ 0x0
  2430  0000                     global __CFG_BOREN$ON
  2431                           __CFG_BOREN$ON equ 0x0
  2432  0000                     global __CFG_CLKOUTEN$ON
  2433                           __CFG_CLKOUTEN$ON equ 0x0
  2434  0000                     global __CFG_IESO$OFF
  2435                           __CFG_IESO$OFF equ 0x0
  2436  0000                     global __CFG_FCMEN$OFF
  2437                           __CFG_FCMEN$OFF equ 0x0
  2438  0000                     global __CFG_WRT$OFF
  2439                           __CFG_WRT$OFF equ 0x0
  2440  0000                     global __CFG_VCAPEN$OFF
  2441                           __CFG_VCAPEN$OFF equ 0x0
  2442  0000                     global __CFG_STVREN$OFF
  2443                           __CFG_STVREN$OFF equ 0x0
  2444  0000                     global __CFG_BORV$LO
  2445                           __CFG_BORV$LO equ 0x0
  2446  0000                     global __CFG_LPBOR$OFF
  2447                           __CFG_LPBOR$OFF equ 0x0
  2448  0000                     global __CFG_LVP$OFF
  2449                           __CFG_LVP$OFF equ 0x0
  2450  0000                     	file	"C:\Users\dell\AppData\Local\Temp\sckc."
  2451                           	line	#
  2452                           psect cinit,class=CODE,delta=2
  2453                           global start_initialization
  2454                           start_initialization:
  2455  0062                     
  2456                           global __initialization
  2457                           __initialization:
  2458  0062                     DABS 1,9000,0,_gEusartRXBuffer	;BIGRAM
  2459                           psect	bssBANK0,class=BANK0,space=1,noexec
  2460                           global __pbssBANK0
  2461                           __pbssBANK0:
  2462  0045                     _gEspRxBufferPtr:
  2463  0045                            ds      2
  2464  0045                     
  2465                           Esp8266Entrypoint@wCommandsize:
  2466  0047                            ds      1
  2467  0047                     
  2468                           Esp8266Entrypoint@wCounter:
  2469  0048                            ds      1
  2470  0048                     
  2471                           Esp8266Entrypoint@prevEusartNbByteReceived:
  2472  0049                            ds      1
  2473  0049                     
  2474                           EM1812EntryPoint@wTry:
  2475  004A                            ds      1
  2476  004A                     
  2477                           _wTimer1IntCounter:
  2478  004B                            ds      1
  2479  004B                     
  2480                           _gEspRxBufferReadingPosition:
  2481  004C                            ds      1
  2482  004C                     
  2483                           _gEspRxBufferSize:
  2484  004D                            ds      1
  2485  004D                     
  2486                           _gTxTransmitSize:
  2487  004E                            ds      1
  2488  004E                     
  2489                           _gEUSARTError:
  2490  004F                            ds      1
  2491  004F                     
  2492                           _gTxReadingPosition:
  2493  0050                            ds      1
  2494  0050                     
  2495                           _gEusartRXBufferWritePtr:
  2496  0051                            ds      1
  2497  0051                     
  2498                           _wI2CTxSendPos:
  2499  0052                            ds      1
  2500  0052                     
  2501                           _wNewI2CReception:
  2502  0053                            ds      1
  2503  0053                     
  2504                           _wI2CRxNbOfByteToReceived:
  2505  0054                            ds      1
  2506  0054                     
  2507                           _wI2CTxNbOfByteToSend:
  2508  0055                            ds      1
  2509  0055                     
  2510                           _wReceptionCounterPrev:
  2511  0056                            ds      1
  2512  0056                     
  2513                           _wReceptionCounter:
  2514  0057                            ds      1
  2515  0057                     
  2516                           _wReceptionBufferPosition:
  2517  0058                            ds      1
  2518  0058                     
  2519                           _wTimer0Counter:
  2520  0059                            ds      1
  2521  0059                     
  2522                           _wTempState:
  2523  005A                            ds      1
  2524  005A                     
  2525                           _mWritingPosition:
  2526  005B                            ds      1
  2527  005B                     
  2528                           _mCursorDisplayShiftReg:
  2529  005C                            ds      1
  2530  005C                     
  2531                           _mDisplayOnOffReg:
  2532  005D                            ds      1
  2533  005D                     
  2534                           psect	dataBANK0,class=BANK0,space=1,noexec
  2535                           global __pdataBANK0
  2536                           __pdataBANK0:
  2537  005E                     	file	"./ESP8266.h"
  2538                           	line	17
  2539                           _gEsp8266Echo:
  2540  005E                            ds      1
  2541  005E                     
  2542                           psect	dataBANK0
  2543                           	file	"./ESP8266.h"
  2544                           	line	16
  2545                           _gESPCommand:
  2546  005F                            ds      1
  2547  005F                     
  2548                           psect	dataBANK0
  2549                           	file	"./ESP8266.h"
  2550                           	line	15
  2551                           _gEsp8266State:
  2552  0060                            ds      1
  2553  0060                     
  2554                           psect	dataBANK0
  2555                           	file	"./I2C.h"
  2556                           	line	24
  2557                           _wI2CRxBufferSize:
  2558  0061                            ds      1
  2559  0061                     
  2560                           psect	dataBANK0
  2561                           	file	"./I2C.h"
  2562                           	line	23
  2563                           _wI2CTxBufferSize:
  2564  0062                            ds      1
  2565  0062                     
  2566                           psect	dataBANK0
  2567                           	file	"./I2C.h"
  2568                           	line	14
  2569                           _wI2CCommandState:
  2570  0063                            ds      1
  2571  0063                     
  2572                           psect	bssBANK1,class=BANK1,space=1,noexec
  2573                           global __pbssBANK1
  2574                           __pbssBANK1:
  2575  00A0                     EM1812EntryPoint@F1962:
  2576  00A0                            ds      8
  2577  00A0                     
  2578                           uint16_tToa@F1884:
  2579  00A8                            ds      6
  2580  00A8                     
  2581                           _test:
  2582  00AE                            ds      2
  2583  00AE                     
  2584                           _wCounter2:
  2585  00B0                            ds      1
  2586  00B0                     
  2587                           _gErrorCode:
  2588  00B1                            ds      1
  2589  00B1                     
  2590                           _wTrial:
  2591  00B2                            ds      1
  2592  00B2                     
  2593                           _wTemperature:
  2594  00B3                            ds      2
  2595  00B3                     
  2596                           _wHumidity:
  2597  00B5                            ds      2
  2598  00B5                     
  2599                           psect	dataBANK1,class=BANK1,space=1,noexec
  2600                           global __pdataBANK1
  2601                           __pdataBANK1:
  2602  00C6                     	file	"EM1812.c"
  2603                           	line	96
  2604                           EM1812EntryPoint@F1960:
  2605  00C6                            ds      4
  2606  00C6                     
  2607                           psect	dataBANK1
  2608                           	file	"161518_temp_main.c"
  2609                           	line	204
  2610                           main@F2379:
  2611  00CA                            ds      4
  2612  00CA                     
  2613                           psect	dataBANK1
  2614                           	file	"161518_temp_main.c"
  2615                           	line	103
  2616                           _wTempSet:
  2617  00CE                            ds      2
  2618  00CE                     
  2619                           psect	bssBANK2,class=BANK2,space=1,noexec
  2620                           global __pbssBANK2
  2621                           __pbssBANK2:
  2622  0120                     _wHexTemp:
  2623  0120                            ds      20
  2624  0120                     
  2625                           _wI2CRxBuffer:
  2626  0134                            ds      20
  2627  0134                     
  2628                           _wI2CTxBuffer:
  2629  0148                            ds      20
  2630  0148                     
  2631                           psect	bssBANK3,class=BANK3,space=1,noexec
  2632                           global __pbssBANK3
  2633                           __pbssBANK3:
  2634  01A0                     _wInterruptText:
  2635  01A0                            ds      75
  2636  01A0                     
  2637                           psect	bssBANK4,class=BANK4,space=1,noexec
  2638                           global __pbssBANK4
  2639                           __pbssBANK4:
  2640  0220                     _gEusartTXBuffer:
  2641  0220                            ds      70
  2642  0220                     
  2643                           	file	"C:\Users\dell\AppData\Local\Temp\sckc."
  2644                           	line	#
  2645                           psect inittext,class=CODE,delta=2
  2646                           global init_ram,btemp
  2647                           init_ram:
  2648  0993                     	movwf btemp,f
  2649  0993  00FE               initloop:
  2650  0994                     	moviw fsr0++
  2651  0994  0012               	movwi fsr1++
  2652  0995  001E               	movlw 1
  2653  0996  3001               subwf btemp,f
  2654  0997  02FE               movlw 0
  2655  0998  3000               subwfb btemp+1,f
  2656  0999  3BFF               	movf btemp+1,w
  2657  099A  087F               	iorwf btemp,w
  2658  099B  047E               	skipz
  2659  099C  1D03               	goto initloop
  2660  099D  2994               	retlw 0
  2661  099E  3400               ; Initialize objects allocated to BANK0
  2662                           	global __pidataBANK0,__pdataBANK0
  2663                           psect cinit,class=CODE,delta=2,merge=1
  2664                           	movlw low(__pidataBANK0)
  2665  0062  3024               	movwf fsr0l
  2666  0063  0084               	movlw high(__pidataBANK0)|80h
  2667  0064  3089               	movwf fsr0h
  2668  0065  0085               	movlw low(__pdataBANK0)
  2669  0066  305E               	movwf fsr1l
  2670  0067  0086               	movlw high(__pdataBANK0)
  2671  0068  3000               	movwf fsr1h
  2672  0069  0087               	movlw high(06h)
  2673  006A  3000               	movwf btemp+1
  2674  006B  00FF               	movlw low(06h)
  2675  006C  3006               	fcall init_ram
  2676  006D  3189  2193  3180   ; Initialize objects allocated to BANK1
  2677                           	global __pidataBANK1,__pdataBANK1
  2678                           psect cinit,class=CODE,delta=2,merge=1
  2679                           	movlw low(__pidataBANK1)
  2680  0070  3051               	movwf fsr0l
  2681  0071  0084               	movlw high(__pidataBANK1)|80h
  2682  0072  3089               	movwf fsr0h
  2683  0073  0085               	movlw low(__pdataBANK1)
  2684  0074  30C6               	movwf fsr1l
  2685  0075  0086               	movlw high(__pdataBANK1)
  2686  0076  3000               	movwf fsr1h
  2687  0077  0087               	movlw high(0Ah)
  2688  0078  3000               	movwf btemp+1
  2689  0079  00FF               	movlw low(0Ah)
  2690  007A  300A               	fcall init_ram
  2691  007B  3189  2193  3180   	line	#
  2692                           psect clrtext,class=CODE,delta=2
  2693                           global clear_ram0
  2694                           ;	Called with FSR0 containing the base address, and
  2695                           ;	btemp/btemp+1 has the size to clear
  2696                           clear_ram0:
  2697  0987                     	clrwdt			;clear the watchdog before getting into this loop
  2698  0987  0064               clrloop0:
  2699  0988                     	clrf	indf0		;clear RAM location pointed to by FSR
  2700  0988  0180               	addfsr	0,1
  2701  0989  3101               	movlw	1
  2702  098A  3001               	subwf	btemp,f
  2703  098B  02FE               	movlw	0
  2704  098C  3000               	subwfb btemp+1,f
  2705  098D  3BFF               	movf btemp+1,w
  2706  098E  087F               	iorwf btemp,w
  2707  098F  047E               	skipz
  2708  0990  1D03               	goto clrloop0	;have we reached the end yet?
  2709  0991  2988               	retlw	0		;all done for this memory range, return
  2710  0992  3400               ; Clear objects allocated to BIGRAM
  2711                           psect cinit,class=CODE,delta=2,merge=1
  2712                           	global __pbssBIGRAM
  2713                           	movlw	low(__pbssBIGRAM)
  2714  007E  3028               	movwf	fsr0l
  2715  007F  0084               	movlw	high(__pbssBIGRAM)
  2716  0080  3023               	movwf	fsr0h
  2717  0081  0085               	movlw	low(0C8h)
  2718  0082  30C8               	movwf	btemp
  2719  0083  00FE               	movlw	high(0C8h)
  2720  0084  3000               	movwf	btemp+1
  2721  0085  00FF               	fcall	clear_ram0
  2722  0086  3189  2187  3180   ; Clear objects allocated to BANK0
  2723                           psect cinit,class=CODE,delta=2,merge=1
  2724                           	global __pbssBANK0
  2725                           	movlw	low(__pbssBANK0)
  2726  0089  3045               	movwf	fsr0l
  2727  008A  0084               	movlw	high(__pbssBANK0)
  2728  008B  3000               	movwf	fsr0h
  2729  008C  0085               	movlw	low(019h)
  2730  008D  3019               	movwf	btemp
  2731  008E  00FE               	movlw	high(019h)
  2732  008F  3000               	movwf	btemp+1
  2733  0090  00FF               	fcall	clear_ram0
  2734  0091  3189  2187  3180   ; Clear objects allocated to BANK1
  2735                           psect cinit,class=CODE,delta=2,merge=1
  2736                           	global __pbssBANK1
  2737                           	movlw	low(__pbssBANK1)
  2738  0094  30A0               	movwf	fsr0l
  2739  0095  0084               	movlw	high(__pbssBANK1)
  2740  0096  3000               	movwf	fsr0h
  2741  0097  0085               	movlw	low(017h)
  2742  0098  3017               	movwf	btemp
  2743  0099  00FE               	movlw	high(017h)
  2744  009A  3000               	movwf	btemp+1
  2745  009B  00FF               	fcall	clear_ram0
  2746  009C  3189  2187  3180   ; Clear objects allocated to BANK2
  2747                           psect cinit,class=CODE,delta=2,merge=1
  2748                           	global __pbssBANK2
  2749                           	movlw	low(__pbssBANK2)
  2750  009F  3020               	movwf	fsr0l
  2751  00A0  0084               	movlw	high(__pbssBANK2)
  2752  00A1  3001               	movwf	fsr0h
  2753  00A2  0085               	movlw	low(03Ch)
  2754  00A3  303C               	movwf	btemp
  2755  00A4  00FE               	movlw	high(03Ch)
  2756  00A5  3000               	movwf	btemp+1
  2757  00A6  00FF               	fcall	clear_ram0
  2758  00A7  3189  2187  3180   ; Clear objects allocated to BANK3
  2759                           psect cinit,class=CODE,delta=2,merge=1
  2760                           	global __pbssBANK3
  2761                           	movlw	low(__pbssBANK3)
  2762  00AA  30A0               	movwf	fsr0l
  2763  00AB  0084               	movlw	high(__pbssBANK3)
  2764  00AC  3001               	movwf	fsr0h
  2765  00AD  0085               	movlw	low(04Bh)
  2766  00AE  304B               	movwf	btemp
  2767  00AF  00FE               	movlw	high(04Bh)
  2768  00B0  3000               	movwf	btemp+1
  2769  00B1  00FF               	fcall	clear_ram0
  2770  00B2  3189  2187  3180   ; Clear objects allocated to BANK4
  2771                           psect cinit,class=CODE,delta=2,merge=1
  2772                           	global __pbssBANK4
  2773                           	movlw	low(__pbssBANK4)
  2774  00B5  3020               	movwf	fsr0l
  2775  00B6  0084               	movlw	high(__pbssBANK4)
  2776  00B7  3002               	movwf	fsr0h
  2777  00B8  0085               	movlw	low(046h)
  2778  00B9  3046               	movwf	btemp
  2779  00BA  00FE               	movlw	high(046h)
  2780  00BB  3000               	movwf	btemp+1
  2781  00BC  00FF               	fcall	clear_ram0
  2782  00BD  3189  2187  3180   psect cinit,class=CODE,delta=2,merge=1
  2783                           global end_of_initialization,__end_of__initialization
  2784                           
  2785                           ;End of C runtime variable initialization code
  2786                           
  2787                           end_of_initialization:
  2788  00C0                     __end_of__initialization:
  2789  00C0                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  2790  00C0  107E               movlb 0
  2791  00C1  0020               ljmp _main	;jump to C main() function
  2792  00C2  3180  28C4         psect	cstackBANK5,class=BANK5,space=1,noexec
  2793                           global __pcstackBANK5
  2794                           __pcstackBANK5:
  2795  02A0                     	global	main@wConv
  2796                           main@wConv:	; 4 bytes @ 0x0
  2797  02A0                     	ds	4
  2798  02A0                     	global	main@wCounter
  2799                           main@wCounter:	; 2 bytes @ 0x4
  2800  02A4                     	ds	2
  2801  02A4                     	global	main@wTemp
  2802                           main@wTemp:	; 2 bytes @ 0x6
  2803  02A6                     	ds	2
  2804  02A6                     	global	main@wReadout
  2805                           main@wReadout:	; 20 bytes @ 0x8
  2806  02A8                     	ds	20
  2807  02A8                     	global	main@wIterationCounter
  2808                           main@wIterationCounter:	; 2 bytes @ 0x1C
  2809  02BC                     	ds	2
  2810  02BC                     	global	main@wEditingMode
  2811                           main@wEditingMode:	; 1 bytes @ 0x1E
  2812  02BE                     	ds	1
  2813  02BE                     	global	main@wHumidityPrev
  2814                           main@wHumidityPrev:	; 2 bytes @ 0x1F
  2815  02BF                     	ds	2
  2816  02BF                     	global	main@wTemperaturePrev
  2817                           main@wTemperaturePrev:	; 2 bytes @ 0x21
  2818  02C1                     	ds	2
  2819  02C1                     	global	main@wUpdateMenu
  2820                           main@wUpdateMenu:	; 1 bytes @ 0x23
  2821  02C3                     	ds	1
  2822  02C3                     	global	main@wDebounceEnter
  2823                           main@wDebounceEnter:	; 2 bytes @ 0x24
  2824  02C4                     	ds	2
  2825  02C4                     	global	main@wDebounceUp
  2826                           main@wDebounceUp:	; 2 bytes @ 0x26
  2827  02C6                     	ds	2
  2828  02C6                     	global	main@wDebounceDown
  2829                           main@wDebounceDown:	; 2 bytes @ 0x28
  2830  02C8                     	ds	2
  2831  02C8                     	global	main@wUpBottonPressed
  2832                           main@wUpBottonPressed:	; 1 bytes @ 0x2A
  2833  02CA                     	ds	1
  2834  02CA                     	global	main@wDownBottonPressed
  2835                           main@wDownBottonPressed:	; 1 bytes @ 0x2B
  2836  02CB                     	ds	1
  2837  02CB                     	global	main@wEnterBottonPressed
  2838                           main@wEnterBottonPressed:	; 1 bytes @ 0x2C
  2839  02CC                     	ds	1
  2840  02CC                     	global	main@wMenu
  2841                           main@wMenu:	; 1 bytes @ 0x2D
  2842  02CD                     	ds	1
  2843  02CD                     psect	cstackBANK1,class=BANK1,space=1,noexec
  2844                           global __pcstackBANK1
  2845                           __pcstackBANK1:
  2846  00B7                     ??_AddTrace:	; 1 bytes @ 0x0
  2847  00B7                     	global	EM1812EntryPoint@SetGetTempCommand
  2848                           EM1812EntryPoint@SetGetTempCommand:	; 4 bytes @ 0x0
  2849  00B7                     	ds	4
  2850  00B7                     	global	EM1812EntryPoint@ReceptionBuffer
  2851                           EM1812EntryPoint@ReceptionBuffer:	; 8 bytes @ 0x4
  2852  00BB                     	ds	2
  2853  00BB                     	global	AddTrace@oText
  2854                           AddTrace@oText:	; 1 bytes @ 0x6
  2855  00BD                     	ds	6
  2856  00BD                     	global	EM1812EntryPoint@oHumidity
  2857                           EM1812EntryPoint@oHumidity:	; 1 bytes @ 0xC
  2858  00C3                     	ds	1
  2859  00C3                     ??_main:	; 1 bytes @ 0xD
  2860  00C4                     	ds	2
  2861  00C4                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2862                           global __pcstackCOMMON
  2863                           __pcstackCOMMON:
  2864  0070                     ?_initLCD:	; 1 bytes @ 0x0
  2865  0070                     ?_clearDisplay:	; 1 bytes @ 0x0
  2866  0070                     ?_powerOnLcd:	; 1 bytes @ 0x0
  2867  0070                     ?_setCursorOff:	; 1 bytes @ 0x0
  2868  0070                     ?_moveCursorToHome:	; 1 bytes @ 0x0
  2869  0070                     ?_setNotBlinkingCursor:	; 1 bytes @ 0x0
  2870  0070                     ?_Esp8266OpenSocket:	; 1 bytes @ 0x0
  2871  0070                     ?_Esp8266SetAccessPointMode:	; 1 bytes @ 0x0
  2872  0070                     ?_Esp8266SetupWifi:	; 1 bytes @ 0x0
  2873  0070                     ??_TempUpdateRequest:	; 1 bytes @ 0x0
  2874  0070                     ?_setData:	; 1 bytes @ 0x0
  2875  0070                     ?_writeInsChk:	; 1 bytes @ 0x0
  2876  0070                     ?_writeTxtChk:	; 1 bytes @ 0x0
  2877  0070                     ?_SetToSendDataToLCD:	; 1 bytes @ 0x0
  2878  0070                     ?_waitLCDBusy:	; 1 bytes @ 0x0
  2879  0070                     ?_writeInsNoChk:	; 1 bytes @ 0x0
  2880  0070                     ?_PrintLog:	; 1 bytes @ 0x0
  2881  0070                     ?_main:	; 1 bytes @ 0x0
  2882  0070                     ?_myint:	; 1 bytes @ 0x0
  2883  0070                     ?_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  2884  0070                     ?i1_setData:	; 1 bytes @ 0x0
  2885  0070                     ??i1_setData:	; 1 bytes @ 0x0
  2886  0070                     ?i1_writeTxtChk:	; 1 bytes @ 0x0
  2887  0070                     ?i1_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  2888  0070                     ??i1_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  2889  0070                     ?i1_SetToSendDataToLCD:	; 1 bytes @ 0x0
  2890  0070                     ??i1_SetToSendDataToLCD:	; 1 bytes @ 0x0
  2891  0070                     ?i1_waitLCDBusy:	; 1 bytes @ 0x0
  2892  0070                     ??i1_waitLCDBusy:	; 1 bytes @ 0x0
  2893  0070                     	global	?_I2C_Interrupt
  2894                           ?_I2C_Interrupt:	; 2 bytes @ 0x0
  2895  0070                     	global	?_EUSARTInterrupt
  2896                           ?_EUSARTInterrupt:	; 2 bytes @ 0x0
  2897  0070                     ?_TempUpdateRequest:	; 2 bytes @ 0x0
  2898  0070                     	ds	2
  2899  0070                     ??_I2C_Interrupt:	; 1 bytes @ 0x2
  2900  0072                     ??_EUSARTInterrupt:	; 1 bytes @ 0x2
  2901  0072                     	global	i1setData@iValue
  2902                           i1setData@iValue:	; 1 bytes @ 0x2
  2903  0072                     	global	i1waitLCDBusy@busyFlag
  2904                           i1waitLCDBusy@busyFlag:	; 2 bytes @ 0x2
  2905  0072                     	ds	2
  2906  0072                     ?i1_setCursorPosition:	; 1 bytes @ 0x4
  2907  0074                     	global	I2C_Interrupt@oErrorCode
  2908                           I2C_Interrupt@oErrorCode:	; 1 bytes @ 0x4
  2909  0074                     	global	i1setCursorPosition@iPosition
  2910                           i1setCursorPosition@iPosition:	; 1 bytes @ 0x4
  2911  0074                     	ds	1
  2912  0074                     ??i1_setCursorPosition:	; 1 bytes @ 0x5
  2913  0075                     	ds	2
  2914  0075                     	global	i1setCursorPosition@iLine
  2915                           i1setCursorPosition@iLine:	; 1 bytes @ 0x7
  2916  0077                     	ds	1
  2917  0077                     	global	i1setCursorPosition@wLCDIndex
  2918                           i1setCursorPosition@wLCDIndex:	; 1 bytes @ 0x8
  2919  0078                     	ds	1
  2920  0078                     ??i1_writeTxtChk:	; 1 bytes @ 0x9
  2921  0079                     	ds	2
  2922  0079                     	global	i1writeTxtChk@iOpCode
  2923                           i1writeTxtChk@iOpCode:	; 1 bytes @ 0xB
  2924  007B                     	ds	1
  2925  007B                     ?i1_lcdWriteText:	; 1 bytes @ 0xC
  2926  007C                     	global	i1lcdWriteText@iText
  2927                           i1lcdWriteText@iText:	; 2 bytes @ 0xC
  2928  007C                     	ds	2
  2929  007C                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2930                           global __pcstackBANK0
  2931                           __pcstackBANK0:
  2932  0020                     ??i1_lcdWriteText:	; 1 bytes @ 0x0
  2933  0020                     	ds	3
  2934  0020                     	global	i1lcdWriteText@wCharReadingPos
  2935                           i1lcdWriteText@wCharReadingPos:	; 1 bytes @ 0x3
  2936  0023                     	ds	1
  2937  0023                     ??_myint:	; 1 bytes @ 0x4
  2938  0024                     	ds	1
  2939  0024                     	global	myint@wEUSARTError
  2940                           myint@wEUSARTError:	; 2 bytes @ 0x5
  2941  0025                     	ds	2
  2942  0025                     	global	myint@wText
  2943                           myint@wText:	; 3 bytes @ 0x7
  2944  0027                     	ds	3
  2945  0027                     	global	myint@wI2CError
  2946                           myint@wI2CError:	; 2 bytes @ 0xA
  2947  002A                     	ds	2
  2948  002A                     ?_memset:	; 1 bytes @ 0xC
  2949  002C                     ??_Esp8266OpenSocket:	; 1 bytes @ 0xC
  2950  002C                     ??_Esp8266SetAccessPointMode:	; 1 bytes @ 0xC
  2951  002C                     ??_Esp8266SetupWifi:	; 1 bytes @ 0xC
  2952  002C                     ??_setData:	; 1 bytes @ 0xC
  2953  002C                     ??_SetToSendDataToLCD:	; 1 bytes @ 0xC
  2954  002C                     ??_waitLCDBusy:	; 1 bytes @ 0xC
  2955  002C                     ?_Debounce:	; 1 bytes @ 0xC
  2956  002C                     ??_SetToReadDataFromLCD:	; 1 bytes @ 0xC
  2957  002C                     	global	?_strlen
  2958                           ?_strlen:	; 2 bytes @ 0xC
  2959  002C                     	global	?_GetI2CStatus
  2960                           ?_GetI2CStatus:	; 2 bytes @ 0xC
  2961  002C                     	global	?_I2C_GetData
  2962                           ?_I2C_GetData:	; 2 bytes @ 0xC
  2963  002C                     ?_memcpy:	; 2 bytes @ 0xC
  2964  002C                     	global	?___awdiv
  2965                           ?___awdiv:	; 2 bytes @ 0xC
  2966  002C                     	global	?___awmod
  2967                           ?___awmod:	; 2 bytes @ 0xC
  2968  002C                     	global	Debounce@ioTimer
  2969                           Debounce@ioTimer:	; 1 bytes @ 0xC
  2970  002C                     	global	I2C_GetData@iRxNumberOfByteExpected
  2971                           I2C_GetData@iRxNumberOfByteExpected:	; 1 bytes @ 0xC
  2972  002C                     	global	___awdiv@divisor
  2973                           ___awdiv@divisor:	; 2 bytes @ 0xC
  2974  002C                     	global	___awmod@divisor
  2975                           ___awmod@divisor:	; 2 bytes @ 0xC
  2976  002C                     	global	memcpy@d1
  2977                           memcpy@d1:	; 2 bytes @ 0xC
  2978  002C                     	global	memset@c
  2979                           memset@c:	; 2 bytes @ 0xC
  2980  002C                     	global	strlen@s
  2981                           strlen@s:	; 2 bytes @ 0xC
  2982  002C                     	ds	1
  2983  002C                     	global	Debounce@swPressed
  2984                           Debounce@swPressed:	; 1 bytes @ 0xD
  2985  002D                     	ds	1
  2986  002D                     ??_strlen:	; 1 bytes @ 0xE
  2987  002E                     ??_GetI2CStatus:	; 1 bytes @ 0xE
  2988  002E                     ??_I2C_GetData:	; 1 bytes @ 0xE
  2989  002E                     ??_Debounce:	; 1 bytes @ 0xE
  2990  002E                     	global	setData@iValue
  2991                           setData@iValue:	; 1 bytes @ 0xE
  2992  002E                     	global	waitLCDBusy@busyFlag
  2993                           waitLCDBusy@busyFlag:	; 2 bytes @ 0xE
  2994  002E                     	global	___awdiv@dividend
  2995                           ___awdiv@dividend:	; 2 bytes @ 0xE
  2996  002E                     	global	___awmod@dividend
  2997                           ___awmod@dividend:	; 2 bytes @ 0xE
  2998  002E                     	global	memcpy@s1
  2999                           memcpy@s1:	; 2 bytes @ 0xE
  3000  002E                     	global	memset@n
  3001                           memset@n:	; 2 bytes @ 0xE
  3002  002E                     	ds	1
  3003  002E                     ??_writeInsNoChk:	; 1 bytes @ 0xF
  3004  002F                     	global	I2C_GetData@iAdress
  3005                           I2C_GetData@iAdress:	; 1 bytes @ 0xF
  3006  002F                     	ds	1
  3007  002F                     ??_memset:	; 1 bytes @ 0x10
  3008  0030                     ?_setCursorPosition:	; 1 bytes @ 0x10
  3009  0030                     ??___awdiv:	; 1 bytes @ 0x10
  3010  0030                     ??___awmod:	; 1 bytes @ 0x10
  3011  0030                     	global	Debounce@iSwitch
  3012                           Debounce@iSwitch:	; 1 bytes @ 0x10
  3013  0030                     	global	writeInsNoChk@iOpCode
  3014                           writeInsNoChk@iOpCode:	; 1 bytes @ 0x10
  3015  0030                     	global	setCursorPosition@iPosition
  3016                           setCursorPosition@iPosition:	; 1 bytes @ 0x10
  3017  0030                     	global	memcpy@n
  3018                           memcpy@n:	; 2 bytes @ 0x10
  3019  0030                     	global	strlen@a
  3020                           strlen@a:	; 2 bytes @ 0x10
  3021  0030                     	ds	1
  3022  0030                     ??_setCursorPosition:	; 1 bytes @ 0x11
  3023  0031                     ??_writeInsChk:	; 1 bytes @ 0x11
  3024  0031                     	global	writeInsChk@iOpCode
  3025                           writeInsChk@iOpCode:	; 1 bytes @ 0x11
  3026  0031                     	global	___awdiv@counter
  3027                           ___awdiv@counter:	; 1 bytes @ 0x11
  3028  0031                     	global	___awmod@counter
  3029                           ___awmod@counter:	; 1 bytes @ 0x11
  3030  0031                     	ds	1
  3031  0031                     ??_initLCD:	; 1 bytes @ 0x12
  3032  0032                     ??_clearDisplay:	; 1 bytes @ 0x12
  3033  0032                     ??_powerOnLcd:	; 1 bytes @ 0x12
  3034  0032                     ??_setCursorOff:	; 1 bytes @ 0x12
  3035  0032                     ??_moveCursorToHome:	; 1 bytes @ 0x12
  3036  0032                     ??_setNotBlinkingCursor:	; 1 bytes @ 0x12
  3037  0032                     ??_memcpy:	; 1 bytes @ 0x12
  3038  0032                     ?_strcpy:	; 2 bytes @ 0x12
  3039  0032                     	global	___awdiv@sign
  3040                           ___awdiv@sign:	; 1 bytes @ 0x12
  3041  0032                     	global	___awmod@sign
  3042                           ___awmod@sign:	; 1 bytes @ 0x12
  3043  0032                     	global	memset@k
  3044                           memset@k:	; 2 bytes @ 0x12
  3045  0032                     	global	strcpy@dest
  3046                           strcpy@dest:	; 2 bytes @ 0x12
  3047  0032                     	ds	1
  3048  0032                     	global	setCursorPosition@iLine
  3049                           setCursorPosition@iLine:	; 1 bytes @ 0x13
  3050  0033                     	global	memcpy@tmp
  3051                           memcpy@tmp:	; 1 bytes @ 0x13
  3052  0033                     	global	___awdiv@quotient
  3053                           ___awdiv@quotient:	; 2 bytes @ 0x13
  3054  0033                     	ds	1
  3055  0033                     	global	setCursorPosition@wLCDIndex
  3056                           setCursorPosition@wLCDIndex:	; 1 bytes @ 0x14
  3057  0034                     	global	memset@dest
  3058                           memset@dest:	; 1 bytes @ 0x14
  3059  0034                     	global	memcpy@d
  3060                           memcpy@d:	; 2 bytes @ 0x14
  3061  0034                     	global	strcpy@src
  3062                           strcpy@src:	; 2 bytes @ 0x14
  3063  0034                     	ds	1
  3064  0034                     ?_printEM1812:	; 1 bytes @ 0x15
  3065  0035                     ??_writeTxtChk:	; 1 bytes @ 0x15
  3066  0035                     	global	memset@s
  3067                           memset@s:	; 1 bytes @ 0x15
  3068  0035                     	global	printEM1812@wVariable
  3069                           printEM1812@wVariable:	; 2 bytes @ 0x15
  3070  0035                     	ds	1
  3071  0035                     ??_strcpy:	; 1 bytes @ 0x16
  3072  0036                     	global	memcpy@s
  3073                           memcpy@s:	; 2 bytes @ 0x16
  3074  0036                     	ds	1
  3075  0036                     	global	writeTxtChk@iOpCode
  3076                           writeTxtChk@iOpCode:	; 1 bytes @ 0x17
  3077  0037                     	global	printEM1812@oTextOut
  3078                           printEM1812@oTextOut:	; 1 bytes @ 0x17
  3079  0037                     	ds	1
  3080  0037                     ?_lcdWriteText:	; 1 bytes @ 0x18
  3081  0038                     ??_printEM1812:	; 1 bytes @ 0x18
  3082  0038                     	global	?_I2C_SendData
  3083                           ?_I2C_SendData:	; 2 bytes @ 0x18
  3084  0038                     ?_GetNewReceivedData:	; 2 bytes @ 0x18
  3085  0038                     	global	I2C_SendData@iNumberofByte
  3086                           I2C_SendData@iNumberofByte:	; 1 bytes @ 0x18
  3087  0038                     	global	GetNewReceivedData@oDataSize
  3088                           GetNewReceivedData@oDataSize:	; 1 bytes @ 0x18
  3089  0038                     	global	lcdWriteText@iText
  3090                           lcdWriteText@iText:	; 2 bytes @ 0x18
  3091  0038                     	ds	1
  3092  0038                     ??_GetNewReceivedData:	; 1 bytes @ 0x19
  3093  0039                     	ds	1
  3094  0039                     ??_lcdWriteText:	; 1 bytes @ 0x1A
  3095  003A                     ??_I2C_SendData:	; 1 bytes @ 0x1A
  3096  003A                     	global	printEM1812@wUnity
  3097                           printEM1812@wUnity:	; 1 bytes @ 0x1A
  3098  003A                     	global	strcpy@s
  3099                           strcpy@s:	; 2 bytes @ 0x1A
  3100  003A                     	ds	1
  3101  003A                     	global	printEM1812@wDecimal
  3102                           printEM1812@wDecimal:	; 1 bytes @ 0x1B
  3103  003B                     	global	GetNewReceivedData@oData
  3104                           GetNewReceivedData@oData:	; 1 bytes @ 0x1B
  3105  003B                     	ds	1
  3106  003B                     	global	printEM1812@wIsNegative
  3107                           printEM1812@wIsNegative:	; 1 bytes @ 0x1C
  3108  003C                     	global	I2C_SendData@iData
  3109                           I2C_SendData@iData:	; 1 bytes @ 0x1C
  3110  003C                     	global	strcpy@d
  3111                           strcpy@d:	; 2 bytes @ 0x1C
  3112  003C                     	ds	1
  3113  003C                     	global	?_EM1812EntryPoint
  3114                           ?_EM1812EntryPoint:	; 2 bytes @ 0x1D
  3115  003D                     	global	lcdWriteText@wCharReadingPos
  3116                           lcdWriteText@wCharReadingPos:	; 1 bytes @ 0x1D
  3117  003D                     	global	printEM1812@wTen
  3118                           printEM1812@wTen:	; 1 bytes @ 0x1D
  3119  003D                     	global	EM1812EntryPoint@oTemperature
  3120                           EM1812EntryPoint@oTemperature:	; 1 bytes @ 0x1D
  3121  003D                     	ds	1
  3122  003D                     ??_PrintLog:	; 1 bytes @ 0x1E
  3123  003E                     ?_strcat:	; 2 bytes @ 0x1E
  3124  003E                     	global	printEM1812@wWritingPosition
  3125                           printEM1812@wWritingPosition:	; 1 bytes @ 0x1E
  3126  003E                     	global	strcat@dest
  3127                           strcat@dest:	; 2 bytes @ 0x1E
  3128  003E                     	ds	1
  3129  003E                     ??_EM1812EntryPoint:	; 1 bytes @ 0x1F
  3130  003F                     	ds	1
  3131  003F                     	global	PrintLog@wInterruptTextLen
  3132                           PrintLog@wInterruptTextLen:	; 1 bytes @ 0x20
  3133  0040                     	global	strcat@src
  3134                           strcat@src:	; 2 bytes @ 0x20
  3135  0040                     	ds	1
  3136  0040                     	global	PrintLog@iText
  3137                           PrintLog@iText:	; 1 bytes @ 0x21
  3138  0041                     	ds	1
  3139  0041                     ?_AddTrace:	; 1 bytes @ 0x22
  3140  0042                     ??_strcat:	; 1 bytes @ 0x22
  3141  0042                     	global	AddTrace@iSizeOfoText
  3142                           AddTrace@iSizeOfoText:	; 1 bytes @ 0x22
  3143  0042                     	ds	1
  3144  0042                     	global	AddTrace@iText
  3145                           AddTrace@iText:	; 2 bytes @ 0x23
  3146  0043                     	ds	2
  3147  0043                     ;!
  3148                           ;!Data Sizes:
  3149                           ;!    Strings     354
  3150                           ;!    Constant    0
  3151                           ;!    Data        16
  3152                           ;!    BSS         253
  3153                           ;!    Persistent  0
  3154                           ;!    Stack       0
  3155                           ;!
  3156                           ;!Auto Spaces:
  3157                           ;!    Space          Size  Autos    Used
  3158                           ;!    COMMON           14     14      14
  3159                           ;!    BANK0            80     37      68
  3160                           ;!    BANK1            80     15      48
  3161                           ;!    BANK2            80      0      60
  3162                           ;!    BANK3            80      0      75
  3163                           ;!    BANK4            80      0      70
  3164                           ;!    BANK5            80     46      46
  3165                           ;!    BANK6            80      0       0
  3166                           ;!    BANK7            80      0       0
  3167                           ;!    BANK8            80      0       0
  3168                           ;!    BANK9            80      0       0
  3169                           ;!    BANK10            8      0       0
  3170                           ;!    BANK11            0      0       0
  3171                           ;!    BANK12            0      0       0
  3172                           
  3173                           ;!
  3174                           ;!Pointer List with Targets:
  3175                           ;!
  3176                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 75
  3177                           ;!		 -> STR_28(CODE[9]), STR_27(CODE[7]), Esp8266SetNetworkParameters@wCommand(BANK0[70]
                                 ), STR_15(CODE[17]), 
  3178                           ;!		 -> Esp8266OpenSocketCommand@wCommand(BANK0[70]), STR_9(CODE[9]), STR_8(CODE[12]), m
                                 ain@wReadout(BANK5[20]), 
  3179                           ;!		 -> wInterruptText(BANK3[75]), 
  3180                           ;!
  3181                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 75
  3182                           ;!		 -> STR_28(CODE[9]), STR_27(CODE[7]), Esp8266SetNetworkParameters@wCommand(BANK0[70]
                                 ), STR_15(CODE[17]), 
  3183                           ;!		 -> Esp8266OpenSocketCommand@wCommand(BANK0[70]), STR_9(CODE[9]), STR_8(CODE[12]), m
                                 ain@wReadout(BANK5[20]), 
  3184                           ;!		 -> wInterruptText(BANK3[75]), 
  3185                           ;!
  3186                           ;!    strcpy@dest	PTR unsigned char  size(2) Largest target is 75
  3187                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wComma
                                 nd(BANK0[70]), wInterruptText(BANK3[75]), 
  3188                           ;!
  3189                           ;!    strcpy@d	PTR unsigned char  size(2) Largest target is 75
  3190                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wComma
                                 nd(BANK0[70]), wInterruptText(BANK3[75]), 
  3191                           ;!
  3192                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
  3193                           ;!		 -> STR_31(CODE[14]), STR_30(CODE[4]), STR_28(CODE[9]), STR_27(CODE[7]), 
  3194                           ;!		 -> STR_20(CODE[5]), STR_19(CODE[5]), Esp8266SetNetworkParameters@wNumber(COMMON[3])
                                 , STR_18(CODE[3]), 
  3195                           ;!		 -> STR_17(CODE[4]), STR_16(CODE[11]), STR_14(CODE[3]), Esp8266OpenSocketCommand@wPo
                                 rt(COMMON[7]), 
  3196                           ;!		 -> STR_13(CODE[3]), STR_12(CODE[4]), STR_11(CODE[14]), NULL(NULL[0]), 
  3197                           ;!		 -> STR_9(CODE[9]), STR_8(CODE[12]), main@wReadout(BANK5[20]), 
  3198                           ;!
  3199                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
  3200                           ;!		 -> STR_31(CODE[14]), STR_30(CODE[4]), STR_28(CODE[9]), STR_27(CODE[7]), 
  3201                           ;!		 -> STR_20(CODE[5]), STR_19(CODE[5]), Esp8266SetNetworkParameters@wNumber(COMMON[3])
                                 , STR_18(CODE[3]), 
  3202                           ;!		 -> STR_17(CODE[4]), STR_16(CODE[11]), STR_14(CODE[3]), Esp8266OpenSocketCommand@wPo
                                 rt(COMMON[7]), 
  3203                           ;!		 -> STR_13(CODE[3]), STR_12(CODE[4]), STR_11(CODE[14]), NULL(NULL[0]), 
  3204                           ;!		 -> STR_9(CODE[9]), STR_8(CODE[12]), main@wReadout(BANK5[20]), 
  3205                           ;!
  3206                           ;!    strcat@src	PTR const unsigned char  size(2) Largest target is 20
  3207                           ;!		 -> STR_31(CODE[14]), STR_30(CODE[4]), STR_28(CODE[9]), STR_27(CODE[7]), 
  3208                           ;!		 -> STR_20(CODE[5]), STR_19(CODE[5]), Esp8266SetNetworkParameters@wNumber(COMMON[3])
                                 , STR_18(CODE[3]), 
  3209                           ;!		 -> STR_17(CODE[4]), STR_14(CODE[3]), Esp8266OpenSocketCommand@wPort(COMMON[7]), STR
                                 _13(CODE[3]), 
  3210                           ;!		 -> STR_12(CODE[4]), NULL(NULL[0]), STR_9(CODE[9]), STR_8(CODE[12]), 
  3211                           ;!		 -> main@wReadout(BANK5[20]), 
  3212                           ;!
  3213                           ;!    strcat@dest	PTR unsigned char  size(2) Largest target is 75
  3214                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wComma
                                 nd(BANK0[70]), wInterruptText(BANK3[75]), 
  3215                           ;!
  3216                           ;!    memset@dest	PTR void  size(1) Largest target is 75
  3217                           ;!		 -> wI2CRxBuffer(BANK2[20]), wI2CTxBuffer(BANK2[20]), wInterruptText(BANK3[75]), 
  3218                           ;!
  3219                           ;!    memset@s	PTR unsigned char  size(1) Largest target is 75
  3220                           ;!		 -> wI2CRxBuffer(BANK2[20]), wI2CTxBuffer(BANK2[20]), wInterruptText(BANK3[75]), 
  3221                           ;!
  3222                           ;!    memcpy@d1	PTR void  size(2) Largest target is 70
  3223                           ;!		 -> gEusartTXBuffer(BANK4[70]), wI2CTxBuffer(BANK2[20]), EM1812EntryPoint@ReceptionB
                                 uffer(BANK1[8]), 
  3224                           ;!
  3225                           ;!    memcpy@d	PTR unsigned char  size(2) Largest target is 70
  3226                           ;!		 -> gEusartTXBuffer(BANK4[70]), wI2CTxBuffer(BANK2[20]), EM1812EntryPoint@ReceptionB
                                 uffer(BANK1[8]), 
  3227                           ;!
  3228                           ;!    memcpy@s1	PTR const void  size(2) Largest target is 70
  3229                           ;!		 -> STR_26(CODE[14]), STR_24(CODE[6]), STR_22(CODE[13]), Esp8266SetNetworkParameters
                                 @wCommand(BANK0[70]), 
  3230                           ;!		 -> Esp8266OpenSocketCommand@wCommand(BANK0[70]), wI2CRxBuffer(BANK2[20]), EM1812Ent
                                 ryPoint@SetGetTempCommand(BANK1[4]), 
  3231                           ;!
  3232                           ;!    memcpy@s	PTR const unsigned char  size(2) Largest target is 70
  3233                           ;!		 -> STR_26(CODE[14]), STR_24(CODE[6]), STR_22(CODE[13]), Esp8266SetNetworkParameters
                                 @wCommand(BANK0[70]), 
  3234                           ;!		 -> Esp8266OpenSocketCommand@wCommand(BANK0[70]), wI2CRxBuffer(BANK2[20]), EM1812Ent
                                 ryPoint@SetGetTempCommand(BANK1[4]), 
  3235                           ;!
  3236                           ;!    sp__strcpy	PTR unsigned char  size(2) Largest target is 75
  3237                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wComma
                                 nd(BANK0[70]), wInterruptText(BANK3[75]), 
  3238                           ;!
  3239                           ;!    sp__EusartGetRxBuffer	PTR unsigned char  size(2) Largest target is 200
  3240                           ;!		 -> gEusartRXBuffer(BIGRAM[200]), 
  3241                           ;!
  3242                           ;!    gEspRxBufferPtr	PTR unsigned char  size(2) Largest target is 200
  3243                           ;!		 -> gEusartRXBuffer(BIGRAM[200]), NULL(NULL[0]), 
  3244                           ;!
  3245                           ;!    sp__uint16_tToa	PTR unsigned char  size(1) Largest target is 7
  3246                           ;!		 -> Esp8266OpenSocketCommand@wPort(COMMON[7]), NULL(NULL[0]), 
  3247                           ;!
  3248                           ;!    sp__uint8_tToa	PTR unsigned char  size(1) Largest target is 4
  3249                           ;!		 -> Esp8266Entrypoint@wReturnNumber(COMMON[4]), NULL(NULL[0]), 
  3250                           ;!
  3251                           ;!    sp__strcat	PTR unsigned char  size(2) Largest target is 75
  3252                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wComma
                                 nd(BANK0[70]), wInterruptText(BANK3[75]), 
  3253                           ;!
  3254                           ;!    AddTrace@iText	PTR unsigned char  size(2) Largest target is 20
  3255                           ;!		 -> STR_9(CODE[9]), STR_8(CODE[12]), main@wReadout(BANK5[20]), 
  3256                           ;!
  3257                           ;!    AddTrace@oText	PTR unsigned char  size(1) Largest target is 75
  3258                           ;!		 -> wInterruptText(BANK3[75]), 
  3259                           ;!
  3260                           ;!    GetNewReceivedData@oData	PTR unsigned char  size(1) Largest target is 8
  3261                           ;!		 -> EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 
  3262                           ;!
  3263                           ;!    sp__memcpy	PTR void  size(2) Largest target is 70
  3264                           ;!		 -> gEusartTXBuffer(BANK4[70]), wI2CTxBuffer(BANK2[20]), EM1812EntryPoint@ReceptionB
                                 uffer(BANK1[8]), 
  3265                           ;!
  3266                           ;!    I2C_SendData@iData	PTR unsigned char  size(1) Largest target is 4
  3267                           ;!		 -> EM1812EntryPoint@SetGetTempCommand(BANK1[4]), 
  3268                           ;!
  3269                           ;!    EM1812EntryPoint@oTemperature	PTR short  size(1) Largest target is 2
  3270                           ;!		 -> wTemperature(BANK1[2]), 
  3271                           ;!
  3272                           ;!    EM1812EntryPoint@oHumidity	PTR short  size(1) Largest target is 2
  3273                           ;!		 -> wHumidity(BANK1[2]), 
  3274                           ;!
  3275                           ;!    printEM1812@oTextOut	PTR unsigned char  size(1) Largest target is 20
  3276                           ;!		 -> main@wReadout(BANK5[20]), 
  3277                           ;!
  3278                           ;!    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
  3279                           ;!		 -> Esp8266Entrypoint@wText(COMMON[3]), Esp8266Entrypoint@wReturnNumber(COMMON[4]), 
                                 STR_39(CODE[4]), STR_36(CODE[10]), 
  3280                           ;!		 -> STR_34(CODE[4]), STR_10(CODE[14]), NULL(NULL[0]), myint@wText(BANK0[3]), 
  3281                           ;!		 -> STR_7(CODE[16]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
  3282                           ;!		 -> STR_3(CODE[16]), main@wReadout(BANK5[20]), STR_2(CODE[17]), STR_1(CODE[16]), 
  3283                           ;!		 -> wInterruptText(BANK3[75]), 
  3284                           ;!
  3285                           ;!    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
  3286                           ;!		 -> main@wEnterBottonPressed(BANK5[1]), main@wDownBottonPressed(BANK5[1]), main@wUpB
                                 ottonPressed(BANK5[1]), 
  3287                           ;!
  3288                           ;!    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
  3289                           ;!		 -> main@wDebounceDown(BANK5[2]), main@wDebounceUp(BANK5[2]), main@wDebounceEnter(BA
                                 NK5[2]), 
  3290                           ;!
  3291                           ;!    sp__memset	PTR void  size(1) Largest target is 75
  3292                           ;!		 -> wI2CRxBuffer(BANK2[20]), wI2CTxBuffer(BANK2[20]), wInterruptText(BANK3[75]), 
  3293                           ;!
  3294                           ;!    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
  3295                           ;!		 -> wInterruptText(BANK3[75]), 
  3296                           ;!
  3297                           
  3298                           
  3299                           ;!
  3300                           ;!Critical Paths under _main in COMMON
  3301                           ;!
  3302                           ;!    None.
  3303                           ;!
  3304                           ;!Critical Paths under _myint in COMMON
  3305                           ;!
  3306                           ;!    _myint->i1_lcdWriteText
  3307                           ;!    i1_lcdWriteText->i1_writeTxtChk
  3308                           ;!    i1_writeTxtChk->i1_setCursorPosition
  3309                           ;!    i1_setCursorPosition->i1_waitLCDBusy
  3310                           ;!
  3311                           ;!Critical Paths under _main in BANK0
  3312                           ;!
  3313                           ;!    _main->_AddTrace
  3314                           ;!    _setNotBlinkingCursor->_writeInsChk
  3315                           ;!    _setCursorOff->_writeInsChk
  3316                           ;!    _printEM1812->___awdiv
  3317                           ;!    _powerOnLcd->_writeInsChk
  3318                           ;!    _moveCursorToHome->_writeInsChk
  3319                           ;!    _initLCD->_writeInsChk
  3320                           ;!    _clearDisplay->_writeInsChk
  3321                           ;!    _writeInsChk->_writeInsNoChk
  3322                           ;!    _writeInsNoChk->_setData
  3323                           ;!    _PrintLog->_lcdWriteText
  3324                           ;!    _lcdWriteText->_writeTxtChk
  3325                           ;!    _writeTxtChk->_setCursorPosition
  3326                           ;!    _setCursorPosition->_waitLCDBusy
  3327                           ;!    _EM1812EntryPoint->_I2C_SendData
  3328                           ;!    _I2C_SendData->_memcpy
  3329                           ;!    _GetNewReceivedData->_memcpy
  3330                           ;!    _AddTrace->_strcat
  3331                           ;!    _strcat->_strcpy
  3332                           ;!    _strcpy->_strlen
  3333                           ;!
  3334                           ;!Critical Paths under _myint in BANK0
  3335                           ;!
  3336                           ;!    _myint->i1_lcdWriteText
  3337                           ;!
  3338                           ;!Critical Paths under _main in BANK1
  3339                           ;!
  3340                           ;!    _main->_EM1812EntryPoint
  3341                           ;!
  3342                           ;!Critical Paths under _myint in BANK1
  3343                           ;!
  3344                           ;!    None.
  3345                           ;!
  3346                           ;!Critical Paths under _main in BANK2
  3347                           ;!
  3348                           ;!    None.
  3349                           ;!
  3350                           ;!Critical Paths under _myint in BANK2
  3351                           ;!
  3352                           ;!    None.
  3353                           ;!
  3354                           ;!Critical Paths under _main in BANK3
  3355                           ;!
  3356                           ;!    None.
  3357                           ;!
  3358                           ;!Critical Paths under _myint in BANK3
  3359                           ;!
  3360                           ;!    None.
  3361                           ;!
  3362                           ;!Critical Paths under _main in BANK4
  3363                           ;!
  3364                           ;!    None.
  3365                           ;!
  3366                           ;!Critical Paths under _myint in BANK4
  3367                           ;!
  3368                           ;!    None.
  3369                           ;!
  3370                           ;!Critical Paths under _main in BANK5
  3371                           ;!
  3372                           ;!    None.
  3373                           ;!
  3374                           ;!Critical Paths under _myint in BANK5
  3375                           ;!
  3376                           ;!    None.
  3377                           ;!
  3378                           ;!Critical Paths under _main in BANK6
  3379                           ;!
  3380                           ;!    None.
  3381                           ;!
  3382                           ;!Critical Paths under _myint in BANK6
  3383                           ;!
  3384                           ;!    None.
  3385                           ;!
  3386                           ;!Critical Paths under _main in BANK7
  3387                           ;!
  3388                           ;!    None.
  3389                           ;!
  3390                           ;!Critical Paths under _myint in BANK7
  3391                           ;!
  3392                           ;!    None.
  3393                           ;!
  3394                           ;!Critical Paths under _main in BANK8
  3395                           ;!
  3396                           ;!    None.
  3397                           ;!
  3398                           ;!Critical Paths under _myint in BANK8
  3399                           ;!
  3400                           ;!    None.
  3401                           ;!
  3402                           ;!Critical Paths under _main in BANK9
  3403                           ;!
  3404                           ;!    None.
  3405                           ;!
  3406                           ;!Critical Paths under _myint in BANK9
  3407                           ;!
  3408                           ;!    None.
  3409                           ;!
  3410                           ;!Critical Paths under _main in BANK10
  3411                           ;!
  3412                           ;!    None.
  3413                           ;!
  3414                           ;!Critical Paths under _myint in BANK10
  3415                           ;!
  3416                           ;!    None.
  3417                           ;!
  3418                           ;!Critical Paths under _main in BANK11
  3419                           ;!
  3420                           ;!    None.
  3421                           ;!
  3422                           ;!Critical Paths under _myint in BANK11
  3423                           ;!
  3424                           ;!    None.
  3425                           ;!
  3426                           ;!Critical Paths under _main in BANK12
  3427                           ;!
  3428                           ;!    None.
  3429                           ;!
  3430                           ;!Critical Paths under _myint in BANK12
  3431                           ;!
  3432                           ;!    None.
  3433                           
  3434 ;;
  3435 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3436 ;;
  3437                           
  3438                           ;!
  3439                           ;!Call Graph Tables:
  3440                           ;!
  3441                           ;! ---------------------------------------------------------------------------------
  3442                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3443                           ;! ---------------------------------------------------------------------------------
  3444                           ;! (0) _main                                                48    48      0   30994
  3445                           ;!                                             13 BANK1      2     2      0
  3446                           ;!                                              0 BANK5     46    46      0
  3447                           ;!                           _AddTrace
  3448                           ;!                           _Debounce
  3449                           ;!                   _EM1812EntryPoint
  3450                           ;!                  _Esp8266OpenSocket
  3451                           ;!          _Esp8266SetAccessPointMode
  3452                           ;!                   _Esp8266SetupWifi
  3453                           ;!                           _PrintLog
  3454                           ;!                       _clearDisplay
  3455                           ;!                            _initLCD
  3456                           ;!                       _lcdWriteText
  3457                           ;!                             _memset
  3458                           ;!                   _moveCursorToHome
  3459                           ;!                         _powerOnLcd
  3460                           ;!                        _printEM1812
  3461                           ;!                       _setCursorOff
  3462                           ;!                  _setCursorPosition
  3463                           ;!               _setNotBlinkingCursor
  3464                           ;! ---------------------------------------------------------------------------------
  3465                           ;! (1) _setNotBlinkingCursor                                 1     1      0     254
  3466                           ;!                                             18 BANK0      1     1      0
  3467                           ;!                        _writeInsChk
  3468                           ;! ---------------------------------------------------------------------------------
  3469                           ;! (1) _setCursorOff                                         1     1      0     254
  3470                           ;!                                             18 BANK0      1     1      0
  3471                           ;!                        _writeInsChk
  3472                           ;! ---------------------------------------------------------------------------------
  3473                           ;! (1) _printEM1812                                         10     7      3    4184
  3474                           ;!                                             21 BANK0     10     7      3
  3475                           ;!                            ___awdiv
  3476                           ;!                            ___awmod
  3477                           ;! ---------------------------------------------------------------------------------
  3478                           ;! (2) ___awmod                                              7     3      4    1333
  3479                           ;!                                             12 BANK0      7     3      4
  3480                           ;! ---------------------------------------------------------------------------------
  3481                           ;! (2) ___awdiv                                              9     5      4    1345
  3482                           ;!                                             12 BANK0      9     5      4
  3483                           ;! ---------------------------------------------------------------------------------
  3484                           ;! (1) _powerOnLcd                                           1     1      0     254
  3485                           ;!                                             18 BANK0      1     1      0
  3486                           ;!                        _writeInsChk
  3487                           ;! ---------------------------------------------------------------------------------
  3488                           ;! (1) _moveCursorToHome                                     0     0      0     254
  3489                           ;!                        _writeInsChk
  3490                           ;! ---------------------------------------------------------------------------------
  3491                           ;! (1) _initLCD                                              1     1      0     632
  3492                           ;!                                             18 BANK0      1     1      0
  3493                           ;!                       _clearDisplay
  3494                           ;!                            _setData
  3495                           ;!                        _writeInsChk
  3496                           ;! ---------------------------------------------------------------------------------
  3497                           ;! (2) _clearDisplay                                         0     0      0     254
  3498                           ;!                        _writeInsChk
  3499                           ;! ---------------------------------------------------------------------------------
  3500                           ;! (2) _writeInsChk                                          1     1      0     254
  3501                           ;!                                             17 BANK0      1     1      0
  3502                           ;!                        _waitLCDBusy
  3503                           ;!                      _writeInsNoChk
  3504                           ;! ---------------------------------------------------------------------------------
  3505                           ;! (3) _writeInsNoChk                                        2     2      0     186
  3506                           ;!                                             15 BANK0      2     2      0
  3507                           ;!                 _SetToSendDataToLCD
  3508                           ;!                            _setData
  3509                           ;! ---------------------------------------------------------------------------------
  3510                           ;! (1) _PrintLog                                             4     4      0    6882
  3511                           ;!                                             30 BANK0      4     4      0
  3512                           ;!                       _lcdWriteText
  3513                           ;!                             _memset
  3514                           ;!                             _strlen
  3515                           ;! ---------------------------------------------------------------------------------
  3516                           ;! (1) _memset                                              10     6      4    1881
  3517                           ;!                                             12 BANK0     10     6      4
  3518                           ;! ---------------------------------------------------------------------------------
  3519                           ;! (1) _lcdWriteText                                         6     4      2    3867
  3520                           ;!                                             24 BANK0      6     4      2
  3521                           ;!                        _writeTxtChk
  3522                           ;! ---------------------------------------------------------------------------------
  3523                           ;! (2) _writeTxtChk                                          3     3      0    2242
  3524                           ;!                                             21 BANK0      3     3      0
  3525                           ;!                 _SetToSendDataToLCD
  3526                           ;!                  _setCursorPosition
  3527                           ;!                            _setData
  3528                           ;!                        _waitLCDBusy
  3529                           ;! ---------------------------------------------------------------------------------
  3530                           ;! (1) _setCursorPosition                                    5     4      1    1957
  3531                           ;!                                             16 BANK0      5     4      1
  3532                           ;!                 _SetToSendDataToLCD
  3533                           ;!                            _setData
  3534                           ;!                        _waitLCDBusy
  3535                           ;! ---------------------------------------------------------------------------------
  3536                           ;! (3) _waitLCDBusy                                          4     4      0      37
  3537                           ;!                                             12 BANK0      4     4      0
  3538                           ;!               _SetToReadDataFromLCD
  3539                           ;! ---------------------------------------------------------------------------------
  3540                           ;! (4) _SetToReadDataFromLCD                                 0     0      0       0
  3541                           ;! ---------------------------------------------------------------------------------
  3542                           ;! (4) _setData                                              3     3      0     124
  3543                           ;!                                             12 BANK0      3     3      0
  3544                           ;! ---------------------------------------------------------------------------------
  3545                           ;! (4) _SetToSendDataToLCD                                   0     0      0       0
  3546                           ;! ---------------------------------------------------------------------------------
  3547                           ;! (1) _Esp8266SetupWifi                                     1     1      0       0
  3548                           ;!                                             12 BANK0      1     1      0
  3549                           ;! ---------------------------------------------------------------------------------
  3550                           ;! (1) _Esp8266SetAccessPointMode                            1     1      0       0
  3551                           ;!                                             12 BANK0      1     1      0
  3552                           ;! ---------------------------------------------------------------------------------
  3553                           ;! (1) _Esp8266OpenSocket                                    1     1      0       0
  3554                           ;!                                             12 BANK0      1     1      0
  3555                           ;! ---------------------------------------------------------------------------------
  3556                           ;! (1) _EM1812EntryPoint                                    20    18      2    3024
  3557                           ;!                                             29 BANK0      7     5      2
  3558                           ;!                                              0 BANK1     13    13      0
  3559                           ;!                       _GetI2CStatus
  3560                           ;!                 _GetNewReceivedData
  3561                           ;!                        _I2C_GetData
  3562                           ;!                       _I2C_SendData
  3563                           ;! ---------------------------------------------------------------------------------
  3564                           ;! (2) _I2C_SendData                                         5     3      2    1118
  3565                           ;!                                             24 BANK0      5     3      2
  3566                           ;!                             _memcpy
  3567                           ;! ---------------------------------------------------------------------------------
  3568                           ;! (2) _I2C_GetData                                          4     2      2     183
  3569                           ;!                                             12 BANK0      4     2      2
  3570                           ;! ---------------------------------------------------------------------------------
  3571                           ;! (2) _GetNewReceivedData                                   4     3      1    1056
  3572                           ;!                                             24 BANK0      4     3      1
  3573                           ;!                             _memcpy
  3574                           ;! ---------------------------------------------------------------------------------
  3575                           ;! (3) _memcpy                                              12     6      6     868
  3576                           ;!                                             12 BANK0     12     6      6
  3577                           ;! ---------------------------------------------------------------------------------
  3578                           ;! (2) _GetI2CStatus                                         4     2      2       0
  3579                           ;!                                             12 BANK0      4     2      2
  3580                           ;! ---------------------------------------------------------------------------------
  3581                           ;! (1) _Debounce                                             5     3      2     788
  3582                           ;!                                             12 BANK0      5     3      2
  3583                           ;! ---------------------------------------------------------------------------------
  3584                           ;! (1) _AddTrace                                            10     7      3    5346
  3585                           ;!                                             34 BANK0      3     0      3
  3586                           ;!                                              0 BANK1      7     7      0
  3587                           ;!                             _strcat
  3588                           ;!                             _strlen
  3589                           ;! ---------------------------------------------------------------------------------
  3590                           ;! (2) _strcat                                               4     0      4    3387
  3591                           ;!                                             30 BANK0      4     0      4
  3592                           ;!                             _strcpy
  3593                           ;!                             _strlen
  3594                           ;! ---------------------------------------------------------------------------------
  3595                           ;! (2) _strlen                                               6     4      2     940
  3596                           ;!                                             12 BANK0      6     4      2
  3597                           ;! ---------------------------------------------------------------------------------
  3598                           ;! (3) _strcpy                                              12     8      4     527
  3599                           ;!                                             18 BANK0     12     8      4
  3600                           ;!                             _strlen (ARG)
  3601                           ;! ---------------------------------------------------------------------------------
  3602                           ;! Estimated maximum stack depth 4
  3603                           ;! ---------------------------------------------------------------------------------
  3604                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3605                           ;! ---------------------------------------------------------------------------------
  3606                           ;! (7) _myint                                                8     8      0    1467
  3607                           ;!                                              4 BANK0      8     8      0
  3608                           ;!                    _EUSARTInterrupt
  3609                           ;!                      _I2C_Interrupt
  3610                           ;!                  _TempUpdateRequest
  3611                           ;!                     i1_lcdWriteText
  3612                           ;! ---------------------------------------------------------------------------------
  3613                           ;! (8) i1_lcdWriteText                                       6     4      2    1247
  3614                           ;!                                             12 COMMON     2     0      2
  3615                           ;!                                              0 BANK0      4     4      0
  3616                           ;!                      i1_writeTxtChk
  3617                           ;! ---------------------------------------------------------------------------------
  3618                           ;! (9) i1_writeTxtChk                                        3     3      0    1082
  3619                           ;!                                              9 COMMON     3     3      0
  3620                           ;!               i1_SetToSendDataToLCD
  3621                           ;!                i1_setCursorPosition
  3622                           ;!                          i1_setData
  3623                           ;!                      i1_waitLCDBusy
  3624                           ;! ---------------------------------------------------------------------------------
  3625                           ;! (10) i1_setCursorPosition                                 5     4      1     797
  3626                           ;!                                              4 COMMON     5     4      1
  3627                           ;!               i1_SetToSendDataToLCD
  3628                           ;!                          i1_setData
  3629                           ;!                      i1_waitLCDBusy
  3630                           ;! ---------------------------------------------------------------------------------
  3631                           ;! (10) i1_waitLCDBusy                                       4     4      0      37
  3632                           ;!                                              0 COMMON     4     4      0
  3633                           ;!             i1_SetToReadDataFromLCD
  3634                           ;! ---------------------------------------------------------------------------------
  3635                           ;! (11) i1_SetToReadDataFromLCD                              0     0      0       0
  3636                           ;! ---------------------------------------------------------------------------------
  3637                           ;! (10) i1_setData                                           3     3      0     124
  3638                           ;!                                              0 COMMON     3     3      0
  3639                           ;! ---------------------------------------------------------------------------------
  3640                           ;! (11) i1_SetToSendDataToLCD                                0     0      0       0
  3641                           ;! ---------------------------------------------------------------------------------
  3642                           ;! (8) _TempUpdateRequest                                    0     0      0       0
  3643                           ;! ---------------------------------------------------------------------------------
  3644                           ;! (8) _I2C_Interrupt                                        5     3      2      26
  3645                           ;!                                              0 COMMON     5     3      2
  3646                           ;! ---------------------------------------------------------------------------------
  3647                           ;! (8) _EUSARTInterrupt                                      4     2      2       0
  3648                           ;!                                              0 COMMON     4     2      2
  3649                           ;! ---------------------------------------------------------------------------------
  3650                           ;! Estimated maximum stack depth 11
  3651                           ;! ---------------------------------------------------------------------------------
  3652                           ;!
  3653                           ;! Call Graph Graphs:
  3654                           ;!
  3655                           ;! _main (ROOT)
  3656                           ;!   _AddTrace
  3657                           ;!     _strcat
  3658                           ;!       _strcpy
  3659                           ;!         _strlen (ARG)
  3660                           ;!       _strlen
  3661                           ;!     _strlen
  3662                           ;!   _Debounce
  3663                           ;!   _EM1812EntryPoint
  3664                           ;!     _GetI2CStatus
  3665                           ;!     _GetNewReceivedData
  3666                           ;!       _memcpy
  3667                           ;!     _I2C_GetData
  3668                           ;!     _I2C_SendData
  3669                           ;!       _memcpy
  3670                           ;!   _Esp8266OpenSocket
  3671                           ;!   _Esp8266SetAccessPointMode
  3672                           ;!   _Esp8266SetupWifi
  3673                           ;!   _PrintLog
  3674                           ;!     _lcdWriteText
  3675                           ;!       _writeTxtChk
  3676                           ;!         _SetToSendDataToLCD
  3677                           ;!         _setCursorPosition
  3678                           ;!           _SetToSendDataToLCD
  3679                           ;!           _setData
  3680                           ;!           _waitLCDBusy
  3681                           ;!             _SetToReadDataFromLCD
  3682                           ;!         _setData
  3683                           ;!         _waitLCDBusy
  3684                           ;!           _SetToReadDataFromLCD
  3685                           ;!     _memset
  3686                           ;!     _strlen
  3687                           ;!   _clearDisplay
  3688                           ;!     _writeInsChk
  3689                           ;!       _waitLCDBusy
  3690                           ;!         _SetToReadDataFromLCD
  3691                           ;!       _writeInsNoChk
  3692                           ;!         _SetToSendDataToLCD
  3693                           ;!         _setData
  3694                           ;!   _initLCD
  3695                           ;!     _clearDisplay
  3696                           ;!       _writeInsChk
  3697                           ;!         _waitLCDBusy
  3698                           ;!           _SetToReadDataFromLCD
  3699                           ;!         _writeInsNoChk
  3700                           ;!           _SetToSendDataToLCD
  3701                           ;!           _setData
  3702                           ;!     _setData
  3703                           ;!     _writeInsChk
  3704                           ;!       _waitLCDBusy
  3705                           ;!         _SetToReadDataFromLCD
  3706                           ;!       _writeInsNoChk
  3707                           ;!         _SetToSendDataToLCD
  3708                           ;!         _setData
  3709                           ;!   _lcdWriteText
  3710                           ;!     _writeTxtChk
  3711                           ;!       _SetToSendDataToLCD
  3712                           ;!       _setCursorPosition
  3713                           ;!         _SetToSendDataToLCD
  3714                           ;!         _setData
  3715                           ;!         _waitLCDBusy
  3716                           ;!           _SetToReadDataFromLCD
  3717                           ;!       _setData
  3718                           ;!       _waitLCDBusy
  3719                           ;!         _SetToReadDataFromLCD
  3720                           ;!   _memset
  3721                           ;!   _moveCursorToHome
  3722                           ;!     _writeInsChk
  3723                           ;!       _waitLCDBusy
  3724                           ;!         _SetToReadDataFromLCD
  3725                           ;!       _writeInsNoChk
  3726                           ;!         _SetToSendDataToLCD
  3727                           ;!         _setData
  3728                           ;!   _powerOnLcd
  3729                           ;!     _writeInsChk
  3730                           ;!       _waitLCDBusy
  3731                           ;!         _SetToReadDataFromLCD
  3732                           ;!       _writeInsNoChk
  3733                           ;!         _SetToSendDataToLCD
  3734                           ;!         _setData
  3735                           ;!   _printEM1812
  3736                           ;!     ___awdiv
  3737                           ;!     ___awmod
  3738                           ;!   _setCursorOff
  3739                           ;!     _writeInsChk
  3740                           ;!       _waitLCDBusy
  3741                           ;!         _SetToReadDataFromLCD
  3742                           ;!       _writeInsNoChk
  3743                           ;!         _SetToSendDataToLCD
  3744                           ;!         _setData
  3745                           ;!   _setCursorPosition
  3746                           ;!     _SetToSendDataToLCD
  3747                           ;!     _setData
  3748                           ;!     _waitLCDBusy
  3749                           ;!       _SetToReadDataFromLCD
  3750                           ;!   _setNotBlinkingCursor
  3751                           ;!     _writeInsChk
  3752                           ;!       _waitLCDBusy
  3753                           ;!         _SetToReadDataFromLCD
  3754                           ;!       _writeInsNoChk
  3755                           ;!         _SetToSendDataToLCD
  3756                           ;!         _setData
  3757                           ;!
  3758                           ;! _myint (ROOT)
  3759                           ;!   _EUSARTInterrupt
  3760                           ;!   _I2C_Interrupt
  3761                           ;!   _TempUpdateRequest
  3762                           ;!   i1_lcdWriteText
  3763                           ;!     i1_writeTxtChk
  3764                           ;!       i1_SetToSendDataToLCD
  3765                           ;!       i1_setCursorPosition
  3766                           ;!         i1_SetToSendDataToLCD
  3767                           ;!         i1_setData
  3768                           ;!         i1_waitLCDBusy
  3769                           ;!           i1_SetToReadDataFromLCD
  3770                           ;!       i1_setData
  3771                           ;!       i1_waitLCDBusy
  3772                           ;!         i1_SetToReadDataFromLCD
  3773                           ;!
  3774                           
  3775                           ;! Address spaces:
  3776                           
  3777                           ;!Name               Size   Autos  Total    Cost      Usage
  3778                           ;!BIGRAM             3F0      0       0       0        0.0%
  3779                           ;!NULL                 0      0       0       0        0.0%
  3780                           ;!CODE                 0      0       0       0        0.0%
  3781                           ;!BITCOMMON            E      0       0       1        0.0%
  3782                           ;!BITSFR0              0      0       0       1        0.0%
  3783                           ;!SFR0                 0      0       0       1        0.0%
  3784                           ;!COMMON               E      E       E       2      100.0%
  3785                           ;!BITSFR1              0      0       0       2        0.0%
  3786                           ;!SFR1                 0      0       0       2        0.0%
  3787                           ;!BITSFR2              0      0       0       3        0.0%
  3788                           ;!SFR2                 0      0       0       3        0.0%
  3789                           ;!STACK                0      0       0       3        0.0%
  3790                           ;!BITBANK0            50      0       0       4        0.0%
  3791                           ;!BITSFR3              0      0       0       4        0.0%
  3792                           ;!SFR3                 0      0       0       4        0.0%
  3793                           ;!BANK0               50     25      44       5       85.0%
  3794                           ;!BITSFR4              0      0       0       5        0.0%
  3795                           ;!SFR4                 0      0       0       5        0.0%
  3796                           ;!BITBANK1            50      0       0       6        0.0%
  3797                           ;!BITSFR5              0      0       0       6        0.0%
  3798                           ;!SFR5                 0      0       0       6        0.0%
  3799                           ;!BANK1               50      F      30       7       60.0%
  3800                           ;!BITSFR6              0      0       0       7        0.0%
  3801                           ;!SFR6                 0      0       0       7        0.0%
  3802                           ;!BITBANK2            50      0       0       8        0.0%
  3803                           ;!BITSFR7              0      0       0       8        0.0%
  3804                           ;!SFR7                 0      0       0       8        0.0%
  3805                           ;!BANK2               50      0      3C       9       75.0%
  3806                           ;!BITSFR8              0      0       0       9        0.0%
  3807                           ;!SFR8                 0      0       0       9        0.0%
  3808                           ;!BITBANK3            50      0       0      10        0.0%
  3809                           ;!BITSFR9              0      0       0      10        0.0%
  3810                           ;!SFR9                 0      0       0      10        0.0%
  3811                           ;!BANK3               50      0      4B      11       93.8%
  3812                           ;!BITSFR10             0      0       0      11        0.0%
  3813                           ;!SFR10                0      0       0      11        0.0%
  3814                           ;!BITBANK4            50      0       0      12        0.0%
  3815                           ;!BITSFR11             0      0       0      12        0.0%
  3816                           ;!SFR11                0      0       0      12        0.0%
  3817                           ;!BANK4               50      0      46      13       87.5%
  3818                           ;!BITSFR12             0      0       0      13        0.0%
  3819                           ;!SFR12                0      0       0      13        0.0%
  3820                           ;!BITBANK5            50      0       0      14        0.0%
  3821                           ;!BITSFR13             0      0       0      14        0.0%
  3822                           ;!SFR13                0      0       0      14        0.0%
  3823                           ;!BANK5               50     2E      2E      15       57.5%
  3824                           ;!BITSFR14             0      0       0      15        0.0%
  3825                           ;!SFR14                0      0       0      15        0.0%
  3826                           ;!BITBANK6            50      0       0      16        0.0%
  3827                           ;!BITSFR15             0      0       0      16        0.0%
  3828                           ;!SFR15                0      0       0      16        0.0%
  3829                           ;!BANK6               50      0       0      17        0.0%
  3830                           ;!BITSFR16             0      0       0      17        0.0%
  3831                           ;!SFR16                0      0       0      17        0.0%
  3832                           ;!BITBANK7            50      0       0      18        0.0%
  3833                           ;!BITSFR17             0      0       0      18        0.0%
  3834                           ;!SFR17                0      0       0      18        0.0%
  3835                           ;!BANK7               50      0       0      19        0.0%
  3836                           ;!BITSFR18             0      0       0      19        0.0%
  3837                           ;!SFR18                0      0       0      19        0.0%
  3838                           ;!BITSFR19             0      0       0      20        0.0%
  3839                           ;!SFR19                0      0       0      20        0.0%
  3840                           ;!ABS                  0      0     17D      20        0.0%
  3841                           ;!BITBANK8            50      0       0      21        0.0%
  3842                           ;!BITSFR20             0      0       0      21        0.0%
  3843                           ;!SFR20                0      0       0      21        0.0%
  3844                           ;!BANK8               50      0       0      22        0.0%
  3845                           ;!BITSFR21             0      0       0      22        0.0%
  3846                           ;!SFR21                0      0       0      22        0.0%
  3847                           ;!BITBANK9            50      0       0      23        0.0%
  3848                           ;!BITSFR22             0      0       0      23        0.0%
  3849                           ;!SFR22                0      0       0      23        0.0%
  3850                           ;!BANK9               50      0       0      24        0.0%
  3851                           ;!BITSFR23             0      0       0      24        0.0%
  3852                           ;!SFR23                0      0       0      24        0.0%
  3853                           ;!BITBANK10           50      0       0      25        0.0%
  3854                           ;!BITSFR24             0      0       0      25        0.0%
  3855                           ;!SFR24                0      0       0      25        0.0%
  3856                           ;!BANK10               8      0       0      26        0.0%
  3857                           ;!BITSFR25             0      0       0      26        0.0%
  3858                           ;!SFR25                0      0       0      26        0.0%
  3859                           ;!BITBANK11           50      0       0      27        0.0%
  3860                           ;!BITSFR26             0      0       0      27        0.0%
  3861                           ;!SFR26                0      0       0      27        0.0%
  3862                           ;!BITSFR27             0      0       0      28        0.0%
  3863                           ;!SFR27                0      0       0      28        0.0%
  3864                           ;!BANK11               0      0       0      28        0.0%
  3865                           ;!BITBANK12           30      0       0      29        0.0%
  3866                           ;!BITSFR28             0      0       0      29        0.0%
  3867                           ;!SFR28                0      0       0      29        0.0%
  3868                           ;!BITSFR29             0      0       0      30        0.0%
  3869                           ;!SFR29                0      0       0      30        0.0%
  3870                           ;!BANK12               0      0       0      30        0.0%
  3871                           ;!BITSFR30             0      0       0      31        0.0%
  3872                           ;!SFR30                0      0       0      31        0.0%
  3873                           ;!DATA                 0      0     17D      31        0.0%
  3874                           ;!BITSFR31             0      0       0      32        0.0%
  3875                           ;!SFR31                0      0       0      32        0.0%
  3876                           
  3877                           	global	_main
  3878                           
  3879 ;; *************** function _main *****************
  3880 ;; Defined at:
  3881 ;;		line 113 in file "161518_temp_main.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;		None
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  wReadout       20    8[BANK5 ] unsigned char [20]
  3886 ;;  wConv           4    0[BANK5 ] unsigned char [4]
  3887 ;;  wDebounceDow    2   40[BANK5 ] unsigned short 
  3888 ;;  wDebounceUp     2   38[BANK5 ] unsigned short 
  3889 ;;  wDebounceEnt    2   36[BANK5 ] unsigned short 
  3890 ;;  wTemperature    2   33[BANK5 ] short 
  3891 ;;  wHumidityPre    2   31[BANK5 ] short 
  3892 ;;  wIterationCo    2   28[BANK5 ] unsigned short 
  3893 ;;  wTemp           2    6[BANK5 ] int 
  3894 ;;  wCounter        2    4[BANK5 ] int 
  3895 ;;  wMenu           1   45[BANK5 ] unsigned char 
  3896 ;;  wEnterBotton    1   44[BANK5 ] unsigned char 
  3897 ;;  wDownBottonP    1   43[BANK5 ] unsigned char 
  3898 ;;  wUpBottonPre    1   42[BANK5 ] unsigned char 
  3899 ;;  wUpdateMenu     1   35[BANK5 ] unsigned char 
  3900 ;;  wEditingMode    1   30[BANK5 ] unsigned char 
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  1    wreg      void 
  3903 ;; Registers used:
  3904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3905 ;; Tracked objects:
  3906 ;;		On entry : B1F/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3911 ;;      Locals:         0       0       0       0       0       0      46       0       0       0       0       0       
       0       0
  3912 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  3913 ;;      Totals:         0       0       2       0       0       0      46       0       0       0       0       0       
       0       0
  3914 ;;Total ram usage:       48 bytes
  3915 ;; Hardware stack levels required when called:   12
  3916 ;; This function calls:
  3917 ;;		_AddTrace
  3918 ;;		_Debounce
  3919 ;;		_EM1812EntryPoint
  3920 ;;		_Esp8266OpenSocket
  3921 ;;		_Esp8266SetAccessPointMode
  3922 ;;		_Esp8266SetupWifi
  3923 ;;		_PrintLog
  3924 ;;		_clearDisplay
  3925 ;;		_initLCD
  3926 ;;		_lcdWriteText
  3927 ;;		_memset
  3928 ;;		_moveCursorToHome
  3929 ;;		_powerOnLcd
  3930 ;;		_printEM1812
  3931 ;;		_setCursorOff
  3932 ;;		_setCursorPosition
  3933 ;;		_setNotBlinkingCursor
  3934 ;; This function is called by:
  3935 ;;		Startup code after reset
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  3939                           	file	"161518_temp_main.c"
  3940                           	line	113
  3941                           global __pmaintext
  3942                           __pmaintext:	;psect for function _main
  3943  00C4                     psect	maintext
  3944                           	file	"161518_temp_main.c"
  3945                           	line	113
  3946                           	global	__size_of_main
  3947                           	__size_of_main	equ	__end_of_main-_main
  3948  031E                     	
  3949                           _main:	
  3950  00C4                     ;incstack = 0
  3951                           	opt	stack 4
  3952                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3953                           	line	115
  3954                           	
  3955                           l6176:	
  3956  00C4                     	bcf	(11),7	;volatile
  3957  00C4  138B               	line	117
  3958                           	
  3959                           l6178:	
  3960  00C5                     	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
  3961  00C5  30FC               	movlb 1	; select bank1
  3962  00C6  0021               	andwf	(153)^080h,f	;volatile
  3963  00C7  0599               	line	118
  3964                           	movlw	(0Fh & ((1<<4)-1))<<3
  3965  00C8  3078               	iorwf	(153)^080h,f	;volatile
  3966  00C9  0499               	line	124
  3967                           	
  3968                           l6180:	
  3969  00CA                     	clrf	(_gErrorCode)^080h
  3970  00CA  01B1               	line	126
  3971                           	
  3972                           l6182:	
  3973  00CB                     	bcf	(142)^080h,5	;volatile
  3974  00CB  128E               	line	127
  3975                           	
  3976                           l6184:	
  3977  00CC                     	movlb 3	; select bank3
  3978  00CC  0023               	bsf	(398)^0180h,5	;volatile
  3979  00CD  168E               	line	128
  3980                           	
  3981                           l6186:	
  3982  00CE                     	movlb 0	; select bank0
  3983  00CE  0020               	bsf	(14),5	;volatile
  3984  00CF  168E               	line	129
  3985                           	
  3986                           l6188:	
  3987  00D0                     	bcf	(14),5	;volatile
  3988  00D0  128E               	line	130
  3989                           	
  3990                           l6190:	
  3991  00D1                     	movlb 1	; select bank1
  3992  00D1  0021               	btfsc	(154)^080h,5	;volatile
  3993  00D2  1A9A               	goto	u4471
  3994  00D3  28D5               	goto	u4470
  3995  00D4  28D8               	
  3996                           u4471:
  3997  00D5                     	movlb 0	; select bank0
  3998  00D5  0020               	bsf	(14),5	;volatile
  3999  00D6  168E               	goto	u4484
  4000  00D7  28DA               u4470:
  4001  00D8                     	movlb 0	; select bank0
  4002  00D8  0020               	bcf	(14),5	;volatile
  4003  00D9  128E               u4484:
  4004  00DA                     	line	131
  4005                           	
  4006                           l6192:	
  4007  00DA                     	bcf	(14),5	;volatile
  4008  00DA  128E               	line	132
  4009                           	
  4010                           l6194:	
  4011  00DB                     	bsf	(14),5	;volatile
  4012  00DB  168E               	line	133
  4013                           	
  4014                           l6196:	
  4015  00DC                     	bcf	(14),5	;volatile
  4016  00DC  128E               	line	134
  4017                           	
  4018                           l6198:	
  4019  00DD                     	bsf	(14),5	;volatile
  4020  00DD  168E               	goto	l173
  4021  00DE  2BE0               	line	135
  4022                           	
  4023                           l6200:	
  4024  00DF                     	goto	l173
  4025  00DF  2BE0               	line	137
  4026                           	
  4027                           l6202:	
  4028  00E0                     	movlb 5	; select bank5
  4029  00E0  0025               	clrf	(main@wHumidityPrev)^0280h
  4030  00E1  01BF               	clrf	(main@wHumidityPrev+1)^0280h
  4031  00E2  01C0               	line	138
  4032                           	clrf	(main@wTemperaturePrev)^0280h
  4033  00E3  01C1               	clrf	(main@wTemperaturePrev+1)^0280h
  4034  00E4  01C2               	line	139
  4035                           	
  4036                           l6204:	
  4037  00E5                     	movlw	0
  4038  00E5  3000               	movlb 0	; select bank0
  4039  00E6  0020               	movwf	(memset@c)
  4040  00E7  00AC               	movwf	(memset@c+1)
  4041  00E8  00AD               	movlw	04Bh
  4042  00E9  304B               	movwf	(memset@n)
  4043  00EA  00AE               	movlw	0
  4044  00EB  3000               	movwf	((memset@n))+1
  4045  00EC  00AF               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  4046  00ED  30A0               	fcall	_memset
  4047  00EE  3186  26EE  3180   	line	143
  4048                           	
  4049                           l6206:	
  4050  00F1                     	movlb 5	; select bank5
  4051  00F1  0025               	clrf	(main@wUpBottonPressed)^0280h
  4052  00F2  01CA               	line	144
  4053                           	
  4054                           l6208:	
  4055  00F3                     	clrf	(main@wDownBottonPressed)^0280h
  4056  00F3  01CB               	line	145
  4057                           	
  4058                           l6210:	
  4059  00F4                     	clrf	(main@wEnterBottonPressed)^0280h
  4060  00F4  01CC               	line	147
  4061                           	
  4062                           l6212:	
  4063  00F5                     	clrf	(main@wEditingMode)^0280h
  4064  00F5  01BE               	line	148
  4065                           	
  4066                           l6214:	
  4067  00F6                     	clrf	(main@wMenu)^0280h
  4068  00F6  01CD               	line	149
  4069                           	
  4070                           l6216:	
  4071  00F7                     	clrf	(main@wUpdateMenu)^0280h
  4072  00F7  01C3               	incf	(main@wUpdateMenu)^0280h,f
  4073  00F8  0AC3               	line	151
  4074                           	
  4075                           l6218:	
  4076  00F9                     	clrf	(main@wIterationCounter)^0280h
  4077  00F9  01BC               	clrf	(main@wIterationCounter+1)^0280h
  4078  00FA  01BD               	line	152
  4079                           	
  4080                           l6220:	
  4081  00FB                     	clrf	(main@wDebounceEnter)^0280h
  4082  00FB  01C4               	clrf	(main@wDebounceEnter+1)^0280h
  4083  00FC  01C5               	line	153
  4084                           	
  4085                           l6222:	
  4086  00FD                     	clrf	(main@wDebounceUp)^0280h
  4087  00FD  01C6               	clrf	(main@wDebounceUp+1)^0280h
  4088  00FE  01C7               	line	154
  4089                           	
  4090                           l6224:	
  4091  00FF                     	clrf	(main@wDebounceDown)^0280h
  4092  00FF  01C8               	clrf	(main@wDebounceDown+1)^0280h
  4093  0100  01C9               	line	156
  4094                           	
  4095                           l6226:	
  4096  0101                     	movlb 0	; select bank0
  4097  0101  0020               	clrf	(12)	;volatile
  4098  0102  018C               	line	160
  4099                           	
  4100                           l6228:	
  4101  0103                     	movlw	((0 & ((1<<2)-1))<<6)|not (((1<<2)-1)<<6)
  4102  0103  303F               	andwf	(24),f	;volatile
  4103  0104  0598               	line	161
  4104                           	
  4105                           l6230:	
  4106  0105                     	bcf	(24),3	;volatile
  4107  0105  1198               	line	162
  4108                           	
  4109                           l6232:	
  4110  0106                     	movlw	(03h & ((1<<2)-1))<<4
  4111  0106  3030               	iorwf	(24),f	;volatile
  4112  0107  0498               	line	163
  4113                           	
  4114                           l6234:	
  4115  0108                     	bcf	(24),2	;volatile
  4116  0108  1118               	line	164
  4117                           	
  4118                           l6236:	
  4119  0109                     	bsf	(24),0	;volatile
  4120  0109  1418               	line	165
  4121                           	
  4122                           l6238:	
  4123  010A                     	movlb 1	; select bank1
  4124  010A  0021               	bsf	(145)^080h,0	;volatile
  4125  010B  1411               	line	169
  4126                           	
  4127                           l6240:	
  4128  010C                     	movf	(149)^080h,w	;volatile
  4129  010C  0815               	andlw	not (((1<<3)-1)<<0)
  4130  010D  39F8               	iorlw	(02h & ((1<<3)-1))<<0
  4131  010E  3802               	movwf	(149)^080h	;volatile
  4132  010F  0095               	line	170
  4133                           	
  4134                           l6242:	
  4135  0110                     	bcf	(149)^080h,5	;volatile
  4136  0110  1295               	line	171
  4137                           	
  4138                           l6244:	
  4139  0111                     	bcf	(149)^080h,3	;volatile
  4140  0111  1195               	line	172
  4141                           	
  4142                           l6246:	
  4143  0112                     	bcf	(11),5	;volatile
  4144  0112  128B               	line	176
  4145                           	
  4146                           l6248:	
  4147  0113                     	movlb 0	; select bank0
  4148  0113  0020               	clrf	(13)	;volatile
  4149  0114  018D               	line	177
  4150                           	
  4151                           l6250:	
  4152  0115                     	movlb 3	; select bank3
  4153  0115  0023               	clrf	(397)^0180h	;volatile
  4154  0116  018D               	line	178
  4155                           	
  4156                           l6252:	
  4157  0117                     	movlw	low(0Fh)
  4158  0117  300F               	movlb 1	; select bank1
  4159  0118  0021               	movwf	(141)^080h	;volatile
  4160  0119  008D               	line	179
  4161                           	
  4162                           l6254:	
  4163  011A                     	movlw	low(0Fh)
  4164  011A  300F               	movlb 4	; select bank4
  4165  011B  0024               	movwf	(525)^0200h	;volatile
  4166  011C  008D               	line	180
  4167                           	
  4168                           l6256:	
  4169  011D                     	movlb 1	; select bank1
  4170  011D  0021               	bcf	(149)^080h,7	;volatile
  4171  011E  1395               	line	191
  4172                           	
  4173                           l6258:	
  4174  011F                     	fcall	_initLCD
  4175  011F  318D  25FB  3180   	line	192
  4176                           	
  4177                           l6260:	
  4178  0122                     	fcall	_clearDisplay
  4179  0122  3189  2107  3180   	line	193
  4180                           	
  4181                           l6262:	
  4182  0125                     	opt asmopt_push
  4183                           opt asmopt_off
  4184                           movlw  3
  4185  0125  3003               	movlb 1	; select bank1
  4186  0126  0021               movwf	((??_main+0)^080h+0+1),f
  4187  0127  00C5               movlw	8
  4188  0128  3008               movwf	((??_main+0)^080h+0),f
  4189  0129  00C4               	movlw	119
  4190  012A  3077               u4857:
  4191  012B                     decfsz	wreg
  4192  012B  0B89               	goto	u4857
  4193  012C  292B               	decfsz	((??_main+0)^080h+0),f
  4194  012D  0BC4               	goto	u4857
  4195  012E  292B               	decfsz	((??_main+0)^080h+0+1),f
  4196  012F  0BC5               	goto	u4857
  4197  0130  292B               opt asmopt_pop
  4198                           
  4199                           	line	194
  4200                           	
  4201                           l6264:	
  4202  0131                     	fcall	_powerOnLcd
  4203  0131  3189  2166  3180   	line	195
  4204                           	
  4205                           l6266:	
  4206  0134                     	opt asmopt_push
  4207                           opt asmopt_off
  4208                           movlw  3
  4209  0134  3003               	movlb 1	; select bank1
  4210  0135  0021               movwf	((??_main+0)^080h+0+1),f
  4211  0136  00C5               movlw	8
  4212  0137  3008               movwf	((??_main+0)^080h+0),f
  4213  0138  00C4               	movlw	119
  4214  0139  3077               u4867:
  4215  013A                     decfsz	wreg
  4216  013A  0B89               	goto	u4867
  4217  013B  293A               	decfsz	((??_main+0)^080h+0),f
  4218  013C  0BC4               	goto	u4867
  4219  013D  293A               	decfsz	((??_main+0)^080h+0+1),f
  4220  013E  0BC5               	goto	u4867
  4221  013F  293A               opt asmopt_pop
  4222                           
  4223                           	line	196
  4224                           	
  4225                           l6268:	
  4226  0140                     	fcall	_setCursorOff
  4227  0140  3189  2171  3180   	line	197
  4228                           	
  4229                           l6270:	
  4230  0143                     	opt asmopt_push
  4231                           opt asmopt_off
  4232                           movlw  3
  4233  0143  3003               	movlb 1	; select bank1
  4234  0144  0021               movwf	((??_main+0)^080h+0+1),f
  4235  0145  00C5               movlw	8
  4236  0146  3008               movwf	((??_main+0)^080h+0),f
  4237  0147  00C4               	movlw	119
  4238  0148  3077               u4877:
  4239  0149                     decfsz	wreg
  4240  0149  0B89               	goto	u4877
  4241  014A  2949               	decfsz	((??_main+0)^080h+0),f
  4242  014B  0BC4               	goto	u4877
  4243  014C  2949               	decfsz	((??_main+0)^080h+0+1),f
  4244  014D  0BC5               	goto	u4877
  4245  014E  2949               opt asmopt_pop
  4246                           
  4247                           	line	198
  4248                           	
  4249                           l6272:	
  4250  014F                     	fcall	_moveCursorToHome
  4251  014F  3189  213F  3180   	line	199
  4252                           	
  4253                           l6274:	
  4254  0152                     	opt asmopt_push
  4255                           opt asmopt_off
  4256                           movlw  3
  4257  0152  3003               	movlb 1	; select bank1
  4258  0153  0021               movwf	((??_main+0)^080h+0+1),f
  4259  0154  00C5               movlw	8
  4260  0155  3008               movwf	((??_main+0)^080h+0),f
  4261  0156  00C4               	movlw	119
  4262  0157  3077               u4887:
  4263  0158                     decfsz	wreg
  4264  0158  0B89               	goto	u4887
  4265  0159  2958               	decfsz	((??_main+0)^080h+0),f
  4266  015A  0BC4               	goto	u4887
  4267  015B  2958               	decfsz	((??_main+0)^080h+0+1),f
  4268  015C  0BC5               	goto	u4887
  4269  015D  2958               opt asmopt_pop
  4270                           
  4271                           	line	200
  4272                           	
  4273                           l6276:	
  4274  015E                     	fcall	_setNotBlinkingCursor
  4275  015E  3189  217C  3180   	line	201
  4276                           	
  4277                           l6278:	
  4278  0161                     	opt asmopt_push
  4279                           opt asmopt_off
  4280                           movlw  3
  4281  0161  3003               	movlb 1	; select bank1
  4282  0162  0021               movwf	((??_main+0)^080h+0+1),f
  4283  0163  00C5               movlw	8
  4284  0164  3008               movwf	((??_main+0)^080h+0),f
  4285  0165  00C4               	movlw	119
  4286  0166  3077               u4897:
  4287  0167                     decfsz	wreg
  4288  0167  0B89               	goto	u4897
  4289  0168  2967               	decfsz	((??_main+0)^080h+0),f
  4290  0169  0BC4               	goto	u4897
  4291  016A  2967               	decfsz	((??_main+0)^080h+0+1),f
  4292  016B  0BC5               	goto	u4897
  4293  016C  2967               opt asmopt_pop
  4294                           
  4295                           	line	204
  4296                           	
  4297                           l6280:	
  4298  016D                     	movlb 5	; select bank5
  4299  016D  0025               	clrf	(main@wCounter)^0280h
  4300  016E  01A4               	clrf	(main@wCounter+1)^0280h
  4301  016F  01A5               	line	205
  4302                           	
  4303                           l6282:	
  4304  0170                     	movlb 1	; select bank1
  4305  0170  0021               	movf	(main@F2379+3)^080h,w
  4306  0171  084D               	movlb 5	; select bank5
  4307  0172  0025               	movwf	(main@wConv+3)^0280h
  4308  0173  00A3               	movlb 1	; select bank1
  4309  0174  0021               	movf	(main@F2379+2)^080h,w
  4310  0175  084C               	movlb 5	; select bank5
  4311  0176  0025               	movwf	(main@wConv+2)^0280h
  4312  0177  00A2               	movlb 1	; select bank1
  4313  0178  0021               	movf	(main@F2379+1)^080h,w
  4314  0179  084B               	movlb 5	; select bank5
  4315  017A  0025               	movwf	(main@wConv+1)^0280h
  4316  017B  00A1               	movlb 1	; select bank1
  4317  017C  0021               	movf	(main@F2379)^080h,w
  4318  017D  084A               	movlb 5	; select bank5
  4319  017E  0025               	movwf	(main@wConv)^0280h
  4320  017F  00A0               
  4321                           	line	206
  4322                           	
  4323                           l6284:	
  4324  0180                     	clrf	(main@wTemp)^0280h
  4325  0180  01A6               	clrf	(main@wTemp+1)^0280h
  4326  0181  01A7               	line	209
  4327                           	
  4328                           l6286:	
  4329  0182                     	fcall	_clearDisplay
  4330  0182  3189  2107  3180   	line	210
  4331                           	
  4332                           l6288:	
  4333  0185                     	fcall	_moveCursorToHome
  4334  0185  3189  213F  3180   	line	211
  4335                           	
  4336                           l6290:	
  4337  0188                     	opt asmopt_push
  4338                           opt asmopt_off
  4339                           movlw	156
  4340  0188  309C               	movlb 1	; select bank1
  4341  0189  0021               movwf	((??_main+0)^080h+0),f
  4342  018A  00C4               	movlw	215
  4343  018B  30D7               u4907:
  4344  018C                     decfsz	wreg
  4345  018C  0B89               	goto	u4907
  4346  018D  298C               	decfsz	((??_main+0)^080h+0),f
  4347  018E  0BC4               	goto	u4907
  4348  018F  298C               opt asmopt_pop
  4349                           
  4350                           	line	219
  4351                           	
  4352                           l6292:	
  4353  0190                     	opt asmopt_push
  4354                           opt asmopt_off
  4355                           movlw  21
  4356  0190  3015               	movlb 1	; select bank1
  4357  0191  0021               movwf	((??_main+0)^080h+0+1),f
  4358  0192  00C5               movlw	75
  4359  0193  304B               movwf	((??_main+0)^080h+0),f
  4360  0194  00C4               	movlw	190
  4361  0195  30BE               u4917:
  4362  0196                     decfsz	wreg
  4363  0196  0B89               	goto	u4917
  4364  0197  2996               	decfsz	((??_main+0)^080h+0),f
  4365  0198  0BC4               	goto	u4917
  4366  0199  2996               	decfsz	((??_main+0)^080h+0+1),f
  4367  019A  0BC5               	goto	u4917
  4368  019B  2996               	nop
  4369  019C  0000               opt asmopt_pop
  4370                           
  4371                           	line	223
  4372                           	
  4373                           l176:	
  4374  019D                     	
  4375                           l177:	
  4376  019D                     	goto	l176
  4377  019D  299D               	
  4378                           l178:	
  4379  019E                     	goto	l6294
  4380  019E  299F               	line	226
  4381                           	
  4382                           l179:	
  4383  019F                     	line	229
  4384                           	
  4385                           l6294:	
  4386  019F                     	movlb 5	; select bank5
  4387  019F  0025               	movf	((main@wUpdateMenu)^0280h),w
  4388  01A0  0843               	btfsc	status,2
  4389  01A1  1903               	goto	u4491
  4390  01A2  29A4               	goto	u4490
  4391  01A3  29A5               u4491:
  4392  01A4                     	goto	l6324
  4393  01A4  2A62               u4490:
  4394  01A5                     	line	231
  4395                           	
  4396                           l6296:	
  4397  01A5                     	clrf	(main@wUpdateMenu)^0280h
  4398  01A5  01C3               	line	232
  4399                           	goto	l6322
  4400  01A6  2A43               	line	234
  4401                           	
  4402                           l182:	
  4403  01A7                     	line	235
  4404                           	
  4405                           l6298:	
  4406  01A7                     	movlb 0	; select bank0
  4407  01A7  0020               	clrf	(setCursorPosition@iPosition)
  4408  01A8  01B0               	movlw	low(0)
  4409  01A9  3000               	fcall	_setCursorPosition
  4410  01AA  318C  24D6  3180   	line	236
  4411                           	movlw	low(((STR_1)|8000h))
  4412  01AD  3077               	movlb 0	; select bank0
  4413  01AE  0020               	movwf	(lcdWriteText@iText)
  4414  01AF  00B8               	movlw	high(((STR_1)|8000h))
  4415  01B0  3090               	movwf	((lcdWriteText@iText))+1
  4416  01B1  00B9               	fcall	_lcdWriteText
  4417  01B2  318A  22CA  3180   	line	237
  4418                           	goto	l6324
  4419  01B5  2A62               	line	238
  4420                           	
  4421                           l184:	
  4422  01B6                     	line	239
  4423                           	
  4424                           l6300:	
  4425  01B6                     	movlb 0	; select bank0
  4426  01B6  0020               	clrf	(setCursorPosition@iPosition)
  4427  01B7  01B0               	movlw	low(0)
  4428  01B8  3000               	fcall	_setCursorPosition
  4429  01B9  318C  24D6  3180   	line	240
  4430                           	movlw	low(((STR_2)|8000h))
  4431  01BC  3056               	movlb 0	; select bank0
  4432  01BD  0020               	movwf	(lcdWriteText@iText)
  4433  01BE  00B8               	movlw	high(((STR_2)|8000h))
  4434  01BF  3090               	movwf	((lcdWriteText@iText))+1
  4435  01C0  00B9               	fcall	_lcdWriteText
  4436  01C1  318A  22CA  3180   	line	241
  4437                           	
  4438                           l6302:	
  4439  01C4                     	movlb 1	; select bank1
  4440  01C4  0021               	movf	(_wTempSet+1)^080h,w
  4441  01C5  084F               	movlb 0	; select bank0
  4442  01C6  0020               	movwf	(printEM1812@wVariable+1)
  4443  01C7  00B6               	movlb 1	; select bank1
  4444  01C8  0021               	movf	(_wTempSet)^080h,w
  4445  01C9  084E               	movlb 0	; select bank0
  4446  01CA  0020               	movwf	(printEM1812@wVariable)
  4447  01CB  00B5               	movlw	(low(main@wReadout|((0x2)<<8)))&0ffh
  4448  01CC  30A8               	movlb 1	; select bank1
  4449  01CD  0021               	movwf	(??_main+0)^080h+0
  4450  01CE  00C4               	movf	(??_main+0)^080h+0,w
  4451  01CF  0844               	movlb 0	; select bank0
  4452  01D0  0020               	movwf	(printEM1812@oTextOut)
  4453  01D1  00B7               	fcall	_printEM1812
  4454  01D2  3186  2638  3180   	line	242
  4455                           	
  4456                           l6304:	
  4457  01D5                     	movlw	low(main@wReadout)
  4458  01D5  30A8               	movlb 0	; select bank0
  4459  01D6  0020               	movwf	(lcdWriteText@iText)
  4460  01D7  00B8               	movlw	high(main@wReadout)
  4461  01D8  3002               	movwf	(lcdWriteText@iText+1)
  4462  01D9  00B9               	fcall	_lcdWriteText
  4463  01DA  318A  22CA  3180   	line	243
  4464                           	goto	l6324
  4465  01DD  2A62               	line	244
  4466                           	
  4467                           l185:	
  4468  01DE                     	line	245
  4469                           	
  4470                           l6306:	
  4471  01DE                     	movlb 0	; select bank0
  4472  01DE  0020               	clrf	(setCursorPosition@iPosition)
  4473  01DF  01B0               	movlw	low(0)
  4474  01E0  3000               	fcall	_setCursorPosition
  4475  01E1  318C  24D6  3180   	line	246
  4476                           	movlw	low(((STR_3)|8000h))
  4477  01E4  3087               	movlb 0	; select bank0
  4478  01E5  0020               	movwf	(lcdWriteText@iText)
  4479  01E6  00B8               	movlw	high(((STR_3)|8000h))
  4480  01E7  3090               	movwf	((lcdWriteText@iText))+1
  4481  01E8  00B9               	fcall	_lcdWriteText
  4482  01E9  318A  22CA  3180   	line	247
  4483                           	goto	l6324
  4484  01EC  2A62               	line	248
  4485                           	
  4486                           l186:	
  4487  01ED                     	line	249
  4488                           	
  4489                           l6308:	
  4490  01ED                     	movlb 0	; select bank0
  4491  01ED  0020               	clrf	(setCursorPosition@iPosition)
  4492  01EE  01B0               	movlw	low(0)
  4493  01EF  3000               	fcall	_setCursorPosition
  4494  01F0  318C  24D6  3180   	line	250
  4495                           	movlw	low(((STR_4)|8000h))
  4496  01F3  3034               	movlb 0	; select bank0
  4497  01F4  0020               	movwf	(lcdWriteText@iText)
  4498  01F5  00B8               	movlw	high(((STR_4)|8000h))
  4499  01F6  3090               	movwf	((lcdWriteText@iText))+1
  4500  01F7  00B9               	fcall	_lcdWriteText
  4501  01F8  318A  22CA  3180   	line	251
  4502                           	goto	l6324
  4503  01FB  2A62               	line	252
  4504                           	
  4505                           l187:	
  4506  01FC                     	line	253
  4507                           	
  4508                           l6310:	
  4509  01FC                     	movlb 0	; select bank0
  4510  01FC  0020               	clrf	(setCursorPosition@iPosition)
  4511  01FD  01B0               	movlw	low(0)
  4512  01FE  3000               	fcall	_setCursorPosition
  4513  01FF  318C  24D6  3180   	line	254
  4514                           	movlw	low(((STR_5)|8000h))
  4515  0202  3045               	movlb 0	; select bank0
  4516  0203  0020               	movwf	(lcdWriteText@iText)
  4517  0204  00B8               	movlw	high(((STR_5)|8000h))
  4518  0205  3090               	movwf	((lcdWriteText@iText))+1
  4519  0206  00B9               	fcall	_lcdWriteText
  4520  0207  318A  22CA  3180   	line	255
  4521                           	
  4522                           l6312:	
  4523  020A                     	movlb 1	; select bank1
  4524  020A  0021               	movf	(_wTempSet+1)^080h,w
  4525  020B  084F               	movlb 0	; select bank0
  4526  020C  0020               	movwf	(printEM1812@wVariable+1)
  4527  020D  00B6               	movlb 1	; select bank1
  4528  020E  0021               	movf	(_wTempSet)^080h,w
  4529  020F  084E               	movlb 0	; select bank0
  4530  0210  0020               	movwf	(printEM1812@wVariable)
  4531  0211  00B5               	movlw	(low(main@wReadout|((0x2)<<8)))&0ffh
  4532  0212  30A8               	movlb 1	; select bank1
  4533  0213  0021               	movwf	(??_main+0)^080h+0
  4534  0214  00C4               	movf	(??_main+0)^080h+0,w
  4535  0215  0844               	movlb 0	; select bank0
  4536  0216  0020               	movwf	(printEM1812@oTextOut)
  4537  0217  00B7               	fcall	_printEM1812
  4538  0218  3186  2638  3180   	line	256
  4539                           	
  4540                           l6314:	
  4541  021B                     	movlw	low(main@wReadout)
  4542  021B  30A8               	movlb 0	; select bank0
  4543  021C  0020               	movwf	(lcdWriteText@iText)
  4544  021D  00B8               	movlw	high(main@wReadout)
  4545  021E  3002               	movwf	(lcdWriteText@iText+1)
  4546  021F  00B9               	fcall	_lcdWriteText
  4547  0220  318A  22CA  3180   	line	257
  4548                           	goto	l6324
  4549  0223  2A62               	line	258
  4550                           	
  4551                           l188:	
  4552  0224                     	line	259
  4553                           	
  4554                           l6316:	
  4555  0224                     	movlb 0	; select bank0
  4556  0224  0020               	clrf	(setCursorPosition@iPosition)
  4557  0225  01B0               	movlw	low(0)
  4558  0226  3000               	fcall	_setCursorPosition
  4559  0227  318C  24D6  3180   	line	260
  4560                           	movlw	low(((STR_6)|8000h))
  4561  022A  3023               	movlb 0	; select bank0
  4562  022B  0020               	movwf	(lcdWriteText@iText)
  4563  022C  00B8               	movlw	high(((STR_6)|8000h))
  4564  022D  3090               	movwf	((lcdWriteText@iText))+1
  4565  022E  00B9               	fcall	_lcdWriteText
  4566  022F  318A  22CA  3180   	line	262
  4567                           	goto	l6324
  4568  0232  2A62               	line	263
  4569                           	
  4570                           l189:	
  4571  0233                     	line	264
  4572                           	
  4573                           l6318:	
  4574  0233                     	movlb 0	; select bank0
  4575  0233  0020               	clrf	(setCursorPosition@iPosition)
  4576  0234  01B0               	movlw	low(0)
  4577  0235  3000               	fcall	_setCursorPosition
  4578  0236  318C  24D6  3180   	line	265
  4579                           	movlw	low(((STR_7)|8000h))
  4580  0239  3067               	movlb 0	; select bank0
  4581  023A  0020               	movwf	(lcdWriteText@iText)
  4582  023B  00B8               	movlw	high(((STR_7)|8000h))
  4583  023C  3090               	movwf	((lcdWriteText@iText))+1
  4584  023D  00B9               	fcall	_lcdWriteText
  4585  023E  318A  22CA  3180   	line	266
  4586                           	goto	l6324
  4587  0241  2A62               	line	267
  4588                           	
  4589                           l6320:	
  4590  0242                     	goto	l6324
  4591  0242  2A62               	
  4592                           l181:	
  4593  0243                     	
  4594                           l6322:	
  4595  0243                     	movlb 5	; select bank5
  4596  0243  0025               	movf	(main@wMenu)^0280h,w
  4597  0244  084D               	movlb 1	; select bank1
  4598  0245  0021               	movwf	(??_main+0)^080h+0
  4599  0246  00C4               	clrf	(??_main+0)^080h+0+1
  4600  0247  01C5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4601                           ; Switch size 1, requested type "space"
  4602                           ; Number of cases is 1, Range of values is 0 to 0
  4603                           ; switch strategies available:
  4604                           ; Name         Instructions Cycles
  4605                           ; simple_byte            4     3 (average)
  4606                           ; direct_byte            8     6 (fixed)
  4607                           ; jumptable            260     6 (fixed)
  4608                           ;	Chosen strategy is simple_byte
  4609                           
  4610                           	movf 1+(??_main+0)^080h+0,w
  4611  0248  0845               	opt asmopt_push
  4612                           	opt asmopt_off
  4613                           	xorlw	0^0	; case 0
  4614  0249  3A00               	skipnz
  4615  024A  1903               	goto	l6980
  4616  024B  2A4D               	goto	l6318
  4617  024C  2A33               	opt asmopt_pop
  4618                           	
  4619                           l6980:	
  4620  024D                     ; Switch size 1, requested type "space"
  4621                           ; Number of cases is 6, Range of values is 0 to 130
  4622                           ; switch strategies available:
  4623                           ; Name         Instructions Cycles
  4624                           ; simple_byte           19    10 (average)
  4625                           ; jumptable            260     6 (fixed)
  4626                           ;	Chosen strategy is simple_byte
  4627                           
  4628                           	movf 0+(??_main+0)^080h+0,w
  4629  024D  0844               	opt asmopt_push
  4630                           	opt asmopt_off
  4631                           	xorlw	0^0	; case 0
  4632  024E  3A00               	skipnz
  4633  024F  1903               	goto	l6298
  4634  0250  29A7               	xorlw	1^0	; case 1
  4635  0251  3A01               	skipnz
  4636  0252  1903               	goto	l6300
  4637  0253  29B6               	xorlw	2^1	; case 2
  4638  0254  3A03               	skipnz
  4639  0255  1903               	goto	l6306
  4640  0256  29DE               	xorlw	128^2	; case 128
  4641  0257  3A82               	skipnz
  4642  0258  1903               	goto	l6308
  4643  0259  29ED               	xorlw	129^128	; case 129
  4644  025A  3A01               	skipnz
  4645  025B  1903               	goto	l6310
  4646  025C  29FC               	xorlw	130^129	; case 130
  4647  025D  3A03               	skipnz
  4648  025E  1903               	goto	l6316
  4649  025F  2A24               	goto	l6318
  4650  0260  2A33               	opt asmopt_pop
  4651                           
  4652                           	
  4653                           l183:	
  4654  0261                     	goto	l6324
  4655  0261  2A62               	line	268
  4656                           	
  4657                           l180:	
  4658  0262                     	line	271
  4659                           	
  4660                           l6324:	
  4661  0262                     	movlw	(low(_wTemperature|((0x0)<<8)))&0ffh
  4662  0262  30B3               	movlb 1	; select bank1
  4663  0263  0021               	movwf	(??_main+0)^080h+0
  4664  0264  00C4               	movf	(??_main+0)^080h+0,w
  4665  0265  0844               	movlb 0	; select bank0
  4666  0266  0020               	movwf	(EM1812EntryPoint@oTemperature)
  4667  0267  00BD               	movlw	(low(_wHumidity|((0x0)<<8)))&0ffh
  4668  0268  30B5               	fcall	_EM1812EntryPoint
  4669  0269  3183  23E2  3180   	goto	l6350
  4670  026C  2B01               	line	273
  4671                           	
  4672                           l6326:	
  4673  026D                     	goto	l6350
  4674  026D  2B01               	
  4675                           l6328:	
  4676  026E                     	movlb 1	; select bank1
  4677  026E  0021               	movf	(_wHumidity+1)^080h,w
  4678  026F  0836               	movlb 5	; select bank5
  4679  0270  0025               	xorwf	(main@wHumidityPrev+1)^0280h,w
  4680  0271  0640               	skipz
  4681  0272  1D03               	goto	u4505
  4682  0273  2A78               	movlb 1	; select bank1
  4683  0274  0021               	movf	(_wHumidity)^080h,w
  4684  0275  0835               	movlb 5	; select bank5
  4685  0276  0025               	xorwf	(main@wHumidityPrev)^0280h,w
  4686  0277  063F               u4505:
  4687  0278                     
  4688                           	skipz
  4689  0278  1D03               	goto	u4501
  4690  0279  2A7B               	goto	u4500
  4691  027A  2A7C               u4501:
  4692  027B                     	goto	l6332
  4693  027B  2A8B               u4500:
  4694  027C                     	
  4695                           l6330:	
  4696  027C                     	movlb 1	; select bank1
  4697  027C  0021               	movf	(_wTemperature+1)^080h,w
  4698  027D  0834               	movlb 5	; select bank5
  4699  027E  0025               	xorwf	(main@wTemperaturePrev+1)^0280h,w
  4700  027F  0642               	skipz
  4701  0280  1D03               	goto	u4515
  4702  0281  2A86               	movlb 1	; select bank1
  4703  0282  0021               	movf	(_wTemperature)^080h,w
  4704  0283  0833               	movlb 5	; select bank5
  4705  0284  0025               	xorwf	(main@wTemperaturePrev)^0280h,w
  4706  0285  0641               u4515:
  4707  0286                     
  4708                           	skipnz
  4709  0286  1903               	goto	u4511
  4710  0287  2A89               	goto	u4510
  4711  0288  2A8A               u4511:
  4712  0289                     	goto	l6350
  4713  0289  2B01               u4510:
  4714  028A                     	goto	l6332
  4715  028A  2A8B               	
  4716                           l193:	
  4717  028B                     	line	274
  4718                           	
  4719                           l6332:	
  4720  028B                     	movlb 1	; select bank1
  4721  028B  0021               	movf	(_wHumidity+1)^080h,w
  4722  028C  0836               	movlb 5	; select bank5
  4723  028D  0025               	movwf	(main@wHumidityPrev+1)^0280h
  4724  028E  00C0               	movlb 1	; select bank1
  4725  028F  0021               	movf	(_wHumidity)^080h,w
  4726  0290  0835               	movlb 5	; select bank5
  4727  0291  0025               	movwf	(main@wHumidityPrev)^0280h
  4728  0292  00BF               	line	275
  4729                           	movlb 1	; select bank1
  4730  0293  0021               	movf	(_wTemperature+1)^080h,w
  4731  0294  0834               	movlb 5	; select bank5
  4732  0295  0025               	movwf	(main@wTemperaturePrev+1)^0280h
  4733  0296  00C2               	movlb 1	; select bank1
  4734  0297  0021               	movf	(_wTemperature)^080h,w
  4735  0298  0833               	movlb 5	; select bank5
  4736  0299  0025               	movwf	(main@wTemperaturePrev)^0280h
  4737  029A  00C1               	line	276
  4738                           	
  4739                           l6334:	
  4740  029B                     	movlb 0	; select bank0
  4741  029B  0020               	clrf	(setCursorPosition@iPosition)
  4742  029C  01B0               	movlw	low(02h)
  4743  029D  3002               	fcall	_setCursorPosition
  4744  029E  318C  24D6  3180   	line	277
  4745                           	
  4746                           l6336:	
  4747  02A1                     	movlb 5	; select bank5
  4748  02A1  0025               	movf	(main@wHumidityPrev+1)^0280h,w
  4749  02A2  0840               	movlb 0	; select bank0
  4750  02A3  0020               	movwf	(printEM1812@wVariable+1)
  4751  02A4  00B6               	movlb 5	; select bank5
  4752  02A5  0025               	movf	(main@wHumidityPrev)^0280h,w
  4753  02A6  083F               	movlb 0	; select bank0
  4754  02A7  0020               	movwf	(printEM1812@wVariable)
  4755  02A8  00B5               	movlw	(low(main@wReadout|((0x2)<<8)))&0ffh
  4756  02A9  30A8               	movlb 1	; select bank1
  4757  02AA  0021               	movwf	(??_main+0)^080h+0
  4758  02AB  00C4               	movf	(??_main+0)^080h+0,w
  4759  02AC  0844               	movlb 0	; select bank0
  4760  02AD  0020               	movwf	(printEM1812@oTextOut)
  4761  02AE  00B7               	fcall	_printEM1812
  4762  02AF  3186  2638  3180   	line	278
  4763                           	
  4764                           l6338:	
  4765  02B2                     	movlw	low(04Bh)
  4766  02B2  304B               	movlb 1	; select bank1
  4767  02B3  0021               	movwf	(??_main+0)^080h+0
  4768  02B4  00C4               	movf	(??_main+0)^080h+0,w
  4769  02B5  0844               	movlb 0	; select bank0
  4770  02B6  0020               	movwf	(AddTrace@iSizeOfoText)
  4771  02B7  00C2               	movlw	low(((STR_8)|8000h))
  4772  02B8  30DC               	movwf	(AddTrace@iText)
  4773  02B9  00C3               	movlw	high(((STR_8)|8000h))
  4774  02BA  3090               	movwf	((AddTrace@iText))+1
  4775  02BB  00C4               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  4776  02BC  30A0               	fcall	_AddTrace
  4777  02BD  318C  2441  3180   	line	279
  4778                           	
  4779                           l6340:	
  4780  02C0                     	movlw	low(04Bh)
  4781  02C0  304B               	movlb 1	; select bank1
  4782  02C1  0021               	movwf	(??_main+0)^080h+0
  4783  02C2  00C4               	movf	(??_main+0)^080h+0,w
  4784  02C3  0844               	movlb 0	; select bank0
  4785  02C4  0020               	movwf	(AddTrace@iSizeOfoText)
  4786  02C5  00C2               	movlw	low(main@wReadout)
  4787  02C6  30A8               	movwf	(AddTrace@iText)
  4788  02C7  00C3               	movlw	high(main@wReadout)
  4789  02C8  3002               	movwf	(AddTrace@iText+1)
  4790  02C9  00C4               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  4791  02CA  30A0               	fcall	_AddTrace
  4792  02CB  318C  2441  3180   	line	280
  4793                           	
  4794                           l6342:	
  4795  02CE                     	movlb 5	; select bank5
  4796  02CE  0025               	movf	(main@wTemperaturePrev+1)^0280h,w
  4797  02CF  0842               	movlb 0	; select bank0
  4798  02D0  0020               	movwf	(printEM1812@wVariable+1)
  4799  02D1  00B6               	movlb 5	; select bank5
  4800  02D2  0025               	movf	(main@wTemperaturePrev)^0280h,w
  4801  02D3  0841               	movlb 0	; select bank0
  4802  02D4  0020               	movwf	(printEM1812@wVariable)
  4803  02D5  00B5               	movlw	(low(main@wReadout|((0x2)<<8)))&0ffh
  4804  02D6  30A8               	movlb 1	; select bank1
  4805  02D7  0021               	movwf	(??_main+0)^080h+0
  4806  02D8  00C4               	movf	(??_main+0)^080h+0,w
  4807  02D9  0844               	movlb 0	; select bank0
  4808  02DA  0020               	movwf	(printEM1812@oTextOut)
  4809  02DB  00B7               	fcall	_printEM1812
  4810  02DC  3186  2638  3180   	line	281
  4811                           	
  4812                           l6344:	
  4813  02DF                     	movlw	low(04Bh)
  4814  02DF  304B               	movlb 1	; select bank1
  4815  02E0  0021               	movwf	(??_main+0)^080h+0
  4816  02E1  00C4               	movf	(??_main+0)^080h+0,w
  4817  02E2  0844               	movlb 0	; select bank0
  4818  02E3  0020               	movwf	(AddTrace@iSizeOfoText)
  4819  02E4  00C2               	movlw	low(((STR_9)|8000h))
  4820  02E5  3018               	movwf	(AddTrace@iText)
  4821  02E6  00C3               	movlw	high(((STR_9)|8000h))
  4822  02E7  3091               	movwf	((AddTrace@iText))+1
  4823  02E8  00C4               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  4824  02E9  30A0               	fcall	_AddTrace
  4825  02EA  318C  2441  3180   	line	282
  4826                           	
  4827                           l6346:	
  4828  02ED                     	movlw	low(04Bh)
  4829  02ED  304B               	movlb 1	; select bank1
  4830  02EE  0021               	movwf	(??_main+0)^080h+0
  4831  02EF  00C4               	movf	(??_main+0)^080h+0,w
  4832  02F0  0844               	movlb 0	; select bank0
  4833  02F1  0020               	movwf	(AddTrace@iSizeOfoText)
  4834  02F2  00C2               	movlw	low(main@wReadout)
  4835  02F3  30A8               	movwf	(AddTrace@iText)
  4836  02F4  00C3               	movlw	high(main@wReadout)
  4837  02F5  3002               	movwf	(AddTrace@iText+1)
  4838  02F6  00C4               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  4839  02F7  30A0               	fcall	_AddTrace
  4840  02F8  318C  2441  3180   	line	283
  4841                           	
  4842                           l6348:	
  4843  02FB                     	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  4844  02FB  30A0               	fcall	_PrintLog
  4845  02FC  318A  22F4  3180   	goto	l6350
  4846  02FF  2B01               	line	284
  4847                           	
  4848                           l191:	
  4849  0300                     	goto	l6350
  4850  0300  2B01               	line	285
  4851                           	
  4852                           l190:	
  4853  0301                     	line	286
  4854                           	
  4855                           l6350:	
  4856  0301                     	movlw	01h
  4857  0301  3001               	movlb 5	; select bank5
  4858  0302  0025               	addwf	(main@wIterationCounter)^0280h,f
  4859  0303  07BC               	movlw	0
  4860  0304  3000               	addwfc	(main@wIterationCounter+1)^0280h,f
  4861  0305  3DBD               	line	289
  4862                           	
  4863                           l6352:	
  4864  0306                     	movlw	(low(main@wDebounceEnter|((0x2)<<8)))&0ffh
  4865  0306  30C4               	movlb 1	; select bank1
  4866  0307  0021               	movwf	(??_main+0)^080h+0
  4867  0308  00C4               	movf	(??_main+0)^080h+0,w
  4868  0309  0844               	movlb 0	; select bank0
  4869  030A  0020               	movwf	(Debounce@ioTimer)
  4870  030B  00AC               	movlw	(low(main@wEnterBottonPressed|((0x2)<<8)))&0ffh
  4871  030C  30CC               	movlb 1	; select bank1
  4872  030D  0021               	movwf	(??_main+1)^080h+0
  4873  030E  00C5               	movf	(??_main+1)^080h+0,w
  4874  030F  0845               	movlb 0	; select bank0
  4875  0310  0020               	movwf	(Debounce@swPressed)
  4876  0311  00AD               	movf	(13),w	;volatile
  4877  0312  080D               	andlw	(1<<1)-1
  4878  0313  3901               	fcall	_Debounce
  4879  0314  318C  248A  3180   	line	290
  4880                           	
  4881                           l6354:	
  4882  0317                     	movlw	(low(main@wDebounceUp|((0x2)<<8)))&0ffh
  4883  0317  30C6               	movlb 1	; select bank1
  4884  0318  0021               	movwf	(??_main+0)^080h+0
  4885  0319  00C4               	movf	(??_main+0)^080h+0,w
  4886  031A  0844               	movlb 0	; select bank0
  4887  031B  0020               	movwf	(Debounce@ioTimer)
  4888  031C  00AC               	movlw	(low(main@wUpBottonPressed|((0x2)<<8)))&0ffh
  4889  031D  30CA               	movlb 1	; select bank1
  4890  031E  0021               	movwf	(??_main+1)^080h+0
  4891  031F  00C5               	movf	(??_main+1)^080h+0,w
  4892  0320  0845               	movlb 0	; select bank0
  4893  0321  0020               	movwf	(Debounce@swPressed)
  4894  0322  00AD               	rrf	(13),w	;volatile
  4895  0323  0C0D               	andlw	(1<<1)-1
  4896  0324  3901               	fcall	_Debounce
  4897  0325  318C  248A  3180   	line	291
  4898                           	
  4899                           l6356:	
  4900  0328                     	movlw	(low(main@wDebounceDown|((0x2)<<8)))&0ffh
  4901  0328  30C8               	movlb 1	; select bank1
  4902  0329  0021               	movwf	(??_main+0)^080h+0
  4903  032A  00C4               	movf	(??_main+0)^080h+0,w
  4904  032B  0844               	movlb 0	; select bank0
  4905  032C  0020               	movwf	(Debounce@ioTimer)
  4906  032D  00AC               	movlw	(low(main@wDownBottonPressed|((0x2)<<8)))&0ffh
  4907  032E  30CB               	movlb 1	; select bank1
  4908  032F  0021               	movwf	(??_main+1)^080h+0
  4909  0330  00C5               	movf	(??_main+1)^080h+0,w
  4910  0331  0845               	movlb 0	; select bank0
  4911  0332  0020               	movwf	(Debounce@swPressed)
  4912  0333  00AD               	rrf	(13),w	;volatile
  4913  0334  0C0D               	rrf	wreg,f
  4914  0335  0C89               	andlw	(1<<1)-1
  4915  0336  3901               	fcall	_Debounce
  4916  0337  318C  248A  3180   	line	295
  4917                           	
  4918                           l6358:	
  4919  033A                     	movlb 5	; select bank5
  4920  033A  0025               		decf	((main@wUpBottonPressed)^0280h),w
  4921  033B  034A               	btfss	status,2
  4922  033C  1D03               	goto	u4521
  4923  033D  2B3F               	goto	u4520
  4924  033E  2B40               u4521:
  4925  033F                     	goto	l6374
  4926  033F  2B6E               u4520:
  4927  0340                     	line	296
  4928                           	
  4929                           l6360:	
  4930  0340                     	fcall	_Esp8266OpenSocket
  4931  0340  3189  212A  3180   	line	297
  4932                           	
  4933                           l6362:	
  4934  0343                     	movlb 5	; select bank5
  4935  0343  0025               	clrf	(main@wUpdateMenu)^0280h
  4936  0344  01C3               	incf	(main@wUpdateMenu)^0280h,f
  4937  0345  0AC3               	line	298
  4938                           	
  4939                           l6364:	
  4940  0346                     	clrf	(main@wUpBottonPressed)^0280h
  4941  0346  01CA               	line	299
  4942                           	goto	l6372
  4943  0347  2B59               	line	300
  4944                           	
  4945                           l196:	
  4946  0348                     	line	302
  4947                           	goto	l6374
  4948  0348  2B6E               	line	303
  4949                           	
  4950                           l198:	
  4951  0349                     	line	304
  4952                           	
  4953                           l6366:	
  4954  0349                     	movlb 1	; select bank1
  4955  0349  0021               	movf	(_wTempSet)^080h,w
  4956  034A  084E               	addlw	01h
  4957  034B  3E01               	movwf	(_wTempSet)^080h
  4958  034C  00CE               	movlw	0
  4959  034D  3000               	addwfc	(_wTempSet+1)^080h,w
  4960  034E  3D4F               	movwf	1+(_wTempSet)^080h
  4961  034F  00CF               	line	305
  4962                           	goto	l6374
  4963  0350  2B6E               	line	306
  4964                           	
  4965                           l199:	
  4966  0351                     	line	307
  4967                           	goto	l6374
  4968  0351  2B6E               	line	308
  4969                           	
  4970                           l200:	
  4971  0352                     	line	309
  4972                           	
  4973                           l6368:	
  4974  0352                     	movlw	low(01h)
  4975  0352  3001               	movwf	(??_main+0)^080h+0
  4976  0353  00C4               	movf	(??_main+0)^080h+0,w
  4977  0354  0844               	movlb 5	; select bank5
  4978  0355  0025               	addwf	(main@wMenu)^0280h,f
  4979  0356  07CD               	line	310
  4980                           	goto	l6374
  4981  0357  2B6E               	line	311
  4982                           	
  4983                           l6370:	
  4984  0358                     	goto	l6374
  4985  0358  2B6E               	
  4986                           l195:	
  4987  0359                     	
  4988                           l6372:	
  4989  0359                     	movf	(main@wMenu)^0280h,w
  4990  0359  084D               	movlb 1	; select bank1
  4991  035A  0021               	movwf	(??_main+0)^080h+0
  4992  035B  00C4               	clrf	(??_main+0)^080h+0+1
  4993  035C  01C5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4994                           ; Switch size 1, requested type "space"
  4995                           ; Number of cases is 1, Range of values is 0 to 0
  4996                           ; switch strategies available:
  4997                           ; Name         Instructions Cycles
  4998                           ; simple_byte            4     3 (average)
  4999                           ; direct_byte            8     6 (fixed)
  5000                           ; jumptable            260     6 (fixed)
  5001                           ;	Chosen strategy is simple_byte
  5002                           
  5003                           	movf 1+(??_main+0)^080h+0,w
  5004  035D  0845               	opt asmopt_push
  5005                           	opt asmopt_off
  5006                           	xorlw	0^0	; case 0
  5007  035E  3A00               	skipnz
  5008  035F  1903               	goto	l6982
  5009  0360  2B62               	goto	l6368
  5010  0361  2B52               	opt asmopt_pop
  5011                           	
  5012                           l6982:	
  5013  0362                     ; Switch size 1, requested type "space"
  5014                           ; Number of cases is 3, Range of values is 128 to 130
  5015                           ; switch strategies available:
  5016                           ; Name         Instructions Cycles
  5017                           ; simple_byte           10     6 (average)
  5018                           ; direct_byte           15     9 (fixed)
  5019                           ; jumptable            263     9 (fixed)
  5020                           ;	Chosen strategy is simple_byte
  5021                           
  5022                           	movf 0+(??_main+0)^080h+0,w
  5023  0362  0844               	opt asmopt_push
  5024                           	opt asmopt_off
  5025                           	xorlw	128^0	; case 128
  5026  0363  3A80               	skipnz
  5027  0364  1903               	goto	l6374
  5028  0365  2B6E               	xorlw	129^128	; case 129
  5029  0366  3A01               	skipnz
  5030  0367  1903               	goto	l6366
  5031  0368  2B49               	xorlw	130^129	; case 130
  5032  0369  3A03               	skipnz
  5033  036A  1903               	goto	l6374
  5034  036B  2B6E               	goto	l6368
  5035  036C  2B52               	opt asmopt_pop
  5036                           
  5037                           	
  5038                           l197:	
  5039  036D                     	goto	l6374
  5040  036D  2B6E               	line	313
  5041                           	
  5042                           l194:	
  5043  036E                     	line	314
  5044                           	
  5045                           l6374:	
  5046  036E                     	movlb 5	; select bank5
  5047  036E  0025               		decf	((main@wDownBottonPressed)^0280h),w
  5048  036F  034B               	btfss	status,2
  5049  0370  1D03               	goto	u4531
  5050  0371  2B73               	goto	u4530
  5051  0372  2B74               u4531:
  5052  0373                     	goto	l6392
  5053  0373  2BA3               u4530:
  5054  0374                     	line	315
  5055                           	
  5056                           l6376:	
  5057  0374                     	clrf	(main@wUpdateMenu)^0280h
  5058  0374  01C3               	incf	(main@wUpdateMenu)^0280h,f
  5059  0375  0AC3               	line	316
  5060                           	
  5061                           l6378:	
  5062  0376                     	clrf	(main@wDownBottonPressed)^0280h
  5063  0376  01CB               	line	317
  5064                           	
  5065                           l6380:	
  5066  0377                     	fcall	_clearDisplay
  5067  0377  3189  2107  3180   	line	318
  5068                           	
  5069                           l6382:	
  5070  037A                     	fcall	_moveCursorToHome
  5071  037A  3189  213F  3180   	line	319
  5072                           	goto	l6390
  5073  037D  2B8D               	line	320
  5074                           	
  5075                           l203:	
  5076  037E                     	line	322
  5077                           	goto	l6392
  5078  037E  2BA3               	line	323
  5079                           	
  5080                           l205:	
  5081  037F                     	line	324
  5082                           	
  5083                           l6384:	
  5084  037F                     	movlb 1	; select bank1
  5085  037F  0021               	movf	(_wTempSet)^080h,w
  5086  0380  084E               	addlw	0FFh
  5087  0381  3EFF               	movwf	(_wTempSet)^080h
  5088  0382  00CE               	movlw	0FFh
  5089  0383  30FF               	addwfc	(_wTempSet+1)^080h,w
  5090  0384  3D4F               	movwf	1+(_wTempSet)^080h
  5091  0385  00CF               	line	325
  5092                           	goto	l6392
  5093  0386  2BA3               	line	326
  5094                           	
  5095                           l206:	
  5096  0387                     	line	327
  5097                           	goto	l6392
  5098  0387  2BA3               	line	328
  5099                           	
  5100                           l207:	
  5101  0388                     	line	329
  5102                           	
  5103                           l6386:	
  5104  0388                     	movlw	01h
  5105  0388  3001               	movlb 5	; select bank5
  5106  0389  0025               	subwf	(main@wMenu)^0280h,f
  5107  038A  02CD               	line	330
  5108                           	goto	l6392
  5109  038B  2BA3               	line	331
  5110                           	
  5111                           l6388:	
  5112  038C                     	goto	l6392
  5113  038C  2BA3               	
  5114                           l202:	
  5115  038D                     	
  5116                           l6390:	
  5117  038D                     	movlb 5	; select bank5
  5118  038D  0025               	movf	(main@wMenu)^0280h,w
  5119  038E  084D               	movlb 1	; select bank1
  5120  038F  0021               	movwf	(??_main+0)^080h+0
  5121  0390  00C4               	clrf	(??_main+0)^080h+0+1
  5122  0391  01C5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5123                           ; Switch size 1, requested type "space"
  5124                           ; Number of cases is 1, Range of values is 0 to 0
  5125                           ; switch strategies available:
  5126                           ; Name         Instructions Cycles
  5127                           ; simple_byte            4     3 (average)
  5128                           ; direct_byte            8     6 (fixed)
  5129                           ; jumptable            260     6 (fixed)
  5130                           ;	Chosen strategy is simple_byte
  5131                           
  5132                           	movf 1+(??_main+0)^080h+0,w
  5133  0392  0845               	opt asmopt_push
  5134                           	opt asmopt_off
  5135                           	xorlw	0^0	; case 0
  5136  0393  3A00               	skipnz
  5137  0394  1903               	goto	l6984
  5138  0395  2B97               	goto	l6386
  5139  0396  2B88               	opt asmopt_pop
  5140                           	
  5141                           l6984:	
  5142  0397                     ; Switch size 1, requested type "space"
  5143                           ; Number of cases is 3, Range of values is 128 to 130
  5144                           ; switch strategies available:
  5145                           ; Name         Instructions Cycles
  5146                           ; simple_byte           10     6 (average)
  5147                           ; direct_byte           15     9 (fixed)
  5148                           ; jumptable            263     9 (fixed)
  5149                           ;	Chosen strategy is simple_byte
  5150                           
  5151                           	movf 0+(??_main+0)^080h+0,w
  5152  0397  0844               	opt asmopt_push
  5153                           	opt asmopt_off
  5154                           	xorlw	128^0	; case 128
  5155  0398  3A80               	skipnz
  5156  0399  1903               	goto	l6392
  5157  039A  2BA3               	xorlw	129^128	; case 129
  5158  039B  3A01               	skipnz
  5159  039C  1903               	goto	l6384
  5160  039D  2B7F               	xorlw	130^129	; case 130
  5161  039E  3A03               	skipnz
  5162  039F  1903               	goto	l6392
  5163  03A0  2BA3               	goto	l6386
  5164  03A1  2B88               	opt asmopt_pop
  5165                           
  5166                           	
  5167                           l204:	
  5168  03A2                     	goto	l6392
  5169  03A2  2BA3               	line	332
  5170                           	
  5171                           l201:	
  5172  03A3                     	line	333
  5173                           	
  5174                           l6392:	
  5175  03A3                     	movlb 5	; select bank5
  5176  03A3  0025               		decf	((main@wEnterBottonPressed)^0280h),w
  5177  03A4  034C               	btfss	status,2
  5178  03A5  1D03               	goto	u4541
  5179  03A6  2BA8               	goto	u4540
  5180  03A7  2BA9               u4541:
  5181  03A8                     	goto	l6410
  5182  03A8  2BC5               u4540:
  5183  03A9                     	line	334
  5184                           	
  5185                           l6394:	
  5186  03A9                     	clrf	(main@wUpdateMenu)^0280h
  5187  03A9  01C3               	incf	(main@wUpdateMenu)^0280h,f
  5188  03AA  0AC3               	line	335
  5189                           	
  5190                           l6396:	
  5191  03AB                     	clrf	(main@wEnterBottonPressed)^0280h
  5192  03AB  01CC               	line	337
  5193                           	
  5194                           l6398:	
  5195  03AC                     	movf	((main@wEditingMode)^0280h),w
  5196  03AC  083E               	btfss	status,2
  5197  03AD  1D03               	goto	u4551
  5198  03AE  2BB0               	goto	u4550
  5199  03AF  2BB1               u4551:
  5200  03B0                     	goto	l6406
  5201  03B0  2BBE               u4550:
  5202  03B1                     	line	338
  5203                           	
  5204                           l6400:	
  5205  03B1                     	clrf	(main@wEditingMode)^0280h
  5206  03B1  01BE               	incf	(main@wEditingMode)^0280h,f
  5207  03B2  0ABE               	line	339
  5208                           	
  5209                           l6402:	
  5210  03B3                     	movf	(main@wMenu)^0280h,w
  5211  03B3  084D               	addlw	080h
  5212  03B4  3E80               	movlb 1	; select bank1
  5213  03B5  0021               	movwf	(??_main+0)^080h+0
  5214  03B6  00C4               	movf	(??_main+0)^080h+0,w
  5215  03B7  0844               	movlb 5	; select bank5
  5216  03B8  0025               	movwf	(main@wMenu)^0280h
  5217  03B9  00CD               	line	340
  5218                           	
  5219                           l6404:	
  5220  03BA                     	fcall	_Esp8266SetAccessPointMode
  5221  03BA  3189  2131  3180   	line	341
  5222                           	goto	l6410
  5223  03BD  2BC5               	
  5224                           l209:	
  5225  03BE                     	line	342
  5226                           	
  5227                           l6406:	
  5228  03BE                     	fcall	_Esp8266SetupWifi
  5229  03BE  3189  2138  3180   	line	343
  5230                           	
  5231                           l6408:	
  5232  03C1                     	movlb 5	; select bank5
  5233  03C1  0025               	clrf	(main@wEditingMode)^0280h
  5234  03C2  01BE               	goto	l6410
  5235  03C3  2BC5               	line	344
  5236                           	
  5237                           l210:	
  5238  03C4                     	goto	l6410
  5239  03C4  2BC5               	line	345
  5240                           	
  5241                           l208:	
  5242  03C5                     	line	346
  5243                           	
  5244                           l6410:	
  5245  03C5                     	movlb 5	; select bank5
  5246  03C5  0025               		incf	((main@wMenu)^0280h),w
  5247  03C6  0A4D               	btfss	status,2
  5248  03C7  1D03               	goto	u4561
  5249  03C8  2BCA               	goto	u4560
  5250  03C9  2BCB               u4561:
  5251  03CA                     	goto	l6416
  5252  03CA  2BD4               u4560:
  5253  03CB                     	line	347
  5254                           	
  5255                           l6412:	
  5256  03CB                     	clrf	(main@wUpdateMenu)^0280h
  5257  03CB  01C3               	incf	(main@wUpdateMenu)^0280h,f
  5258  03CC  0AC3               	line	348
  5259                           	
  5260                           l6414:	
  5261  03CD                     	movlw	low(02h)
  5262  03CD  3002               	movlb 1	; select bank1
  5263  03CE  0021               	movwf	(??_main+0)^080h+0
  5264  03CF  00C4               	movf	(??_main+0)^080h+0,w
  5265  03D0  0844               	movlb 5	; select bank5
  5266  03D1  0025               	movwf	(main@wMenu)^0280h
  5267  03D2  00CD               	goto	l6416
  5268  03D3  2BD4               	line	349
  5269                           	
  5270                           l211:	
  5271  03D4                     	line	350
  5272                           	
  5273                           l6416:	
  5274  03D4                     		movlw	3
  5275  03D4  3003               	xorwf	((main@wMenu)^0280h),w
  5276  03D5  064D               	btfss	status,2
  5277  03D6  1D03               	goto	u4571
  5278  03D7  2BD9               	goto	u4570
  5279  03D8  2BDA               u4571:
  5280  03D9                     	goto	l6294
  5281  03D9  299F               u4570:
  5282  03DA                     	line	351
  5283                           	
  5284                           l6418:	
  5285  03DA                     	clrf	(main@wUpdateMenu)^0280h
  5286  03DA  01C3               	incf	(main@wUpdateMenu)^0280h,f
  5287  03DB  0AC3               	line	352
  5288                           	
  5289                           l6420:	
  5290  03DC                     	clrf	(main@wMenu)^0280h
  5291  03DC  01CD               	goto	l6294
  5292  03DD  299F               	line	353
  5293                           	
  5294                           l212:	
  5295  03DE                     	goto	l6294
  5296  03DE  299F               	line	356
  5297                           	
  5298                           l213:	
  5299  03DF                     	goto	l6294
  5300  03DF  299F               	
  5301                           l214:	
  5302  03E0                     	line	358
  5303                           	
  5304                           l173:	
  5305  03E0                     	global	start
  5306                           	ljmp	start
  5307  03E0  3180  2860         	opt stack 0
  5308                           GLOBAL	__end_of_main
  5309                           	__end_of_main:
  5310  03E2                     	signat	_main,89
  5311                           	global	_setNotBlinkingCursor
  5312                           
  5313 ;; *************** function _setNotBlinkingCursor *****************
  5314 ;; Defined at:
  5315 ;;		line 277 in file "LCD_hd44780u_qy_2004a.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;		None
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;		None
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  1    wreg      void 
  5322 ;; Registers used:
  5323 ;;		wreg, status,2, status,0, pclath, cstack
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5331 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5332 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5333 ;;Total ram usage:        1 bytes
  5334 ;; Hardware stack levels used:    1
  5335 ;; Hardware stack levels required when called:    9
  5336 ;; This function calls:
  5337 ;;		_writeInsChk
  5338 ;; This function is called by:
  5339 ;;		_main
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  5343                           	file	"LCD_hd44780u_qy_2004a.c"
  5344                           	line	277
  5345                           global __ptext1
  5346                           __ptext1:	;psect for function _setNotBlinkingCursor
  5347  097C                     psect	text1
  5348                           	file	"LCD_hd44780u_qy_2004a.c"
  5349                           	line	277
  5350                           	global	__size_of_setNotBlinkingCursor
  5351                           	__size_of_setNotBlinkingCursor	equ	__end_of_setNotBlinkingCursor-_setNotBlinkingCursor

  5352  000B                     	
  5353                           _setNotBlinkingCursor:	
  5354  097C                     ;incstack = 0
  5355                           	opt	stack 6
  5356                           ; Regs used in _setNotBlinkingCursor: [wreg+status,2+status,0+pclath+cstack]
  5357                           	line	279
  5358                           	
  5359                           l5886:	
  5360  097C                     ;LCD_hd44780u_qy_2004a.c: 279:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFE;
  5361                           	movlb 0	; select bank0
  5362  097C  0020               	movf	(_mDisplayOnOffReg),w
  5363  097D  085D               	andlw	0FEh
  5364  097E  39FE               	movwf	(??_setNotBlinkingCursor+0)+0
  5365  097F  00B2               	movf	(??_setNotBlinkingCursor+0)+0,w
  5366  0980  0832               	movwf	(_mDisplayOnOffReg)
  5367  0981  00DD               	line	280
  5368                           	
  5369                           l5888:	
  5370  0982                     ;LCD_hd44780u_qy_2004a.c: 280:   writeInsChk(mDisplayOnOffReg);
  5371                           	movf	(_mDisplayOnOffReg),w
  5372  0982  085D               	fcall	_writeInsChk
  5373  0983  3189  215B  3189   	line	281
  5374                           	
  5375                           l356:	
  5376  0986                     	return
  5377  0986  0008               	opt stack 0
  5378                           GLOBAL	__end_of_setNotBlinkingCursor
  5379                           	__end_of_setNotBlinkingCursor:
  5380  0987                     	signat	_setNotBlinkingCursor,89
  5381                           	global	_setCursorOff
  5382                           
  5383 ;; *************** function _setCursorOff *****************
  5384 ;; Defined at:
  5385 ;;		line 282 in file "LCD_hd44780u_qy_2004a.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;		None
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;		None
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  1    wreg      void 
  5392 ;; Registers used:
  5393 ;;		wreg, status,2, status,0, pclath, cstack
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5401 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5402 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5403 ;;Total ram usage:        1 bytes
  5404 ;; Hardware stack levels used:    1
  5405 ;; Hardware stack levels required when called:    9
  5406 ;; This function calls:
  5407 ;;		_writeInsChk
  5408 ;; This function is called by:
  5409 ;;		_main
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  5413                           	line	282
  5414                           global __ptext2
  5415                           __ptext2:	;psect for function _setCursorOff
  5416  0971                     psect	text2
  5417                           	file	"LCD_hd44780u_qy_2004a.c"
  5418                           	line	282
  5419                           	global	__size_of_setCursorOff
  5420                           	__size_of_setCursorOff	equ	__end_of_setCursorOff-_setCursorOff
  5421  000B                     	
  5422                           _setCursorOff:	
  5423  0971                     ;incstack = 0
  5424                           	opt	stack 6
  5425                           ; Regs used in _setCursorOff: [wreg+status,2+status,0+pclath+cstack]
  5426                           	line	284
  5427                           	
  5428                           l5878:	
  5429  0971                     ;LCD_hd44780u_qy_2004a.c: 284:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFD;
  5430                           	movlb 0	; select bank0
  5431  0971  0020               	movf	(_mDisplayOnOffReg),w
  5432  0972  085D               	andlw	0FDh
  5433  0973  39FD               	movwf	(??_setCursorOff+0)+0
  5434  0974  00B2               	movf	(??_setCursorOff+0)+0,w
  5435  0975  0832               	movwf	(_mDisplayOnOffReg)
  5436  0976  00DD               	line	285
  5437                           	
  5438                           l5880:	
  5439  0977                     ;LCD_hd44780u_qy_2004a.c: 285:   writeInsChk(mDisplayOnOffReg);
  5440                           	movf	(_mDisplayOnOffReg),w
  5441  0977  085D               	fcall	_writeInsChk
  5442  0978  3189  215B  3189   	line	286
  5443                           	
  5444                           l359:	
  5445  097B                     	return
  5446  097B  0008               	opt stack 0
  5447                           GLOBAL	__end_of_setCursorOff
  5448                           	__end_of_setCursorOff:
  5449  097C                     	signat	_setCursorOff,89
  5450                           	global	_printEM1812
  5451                           
  5452 ;; *************** function _printEM1812 *****************
  5453 ;; Defined at:
  5454 ;;		line 16 in file "EM1812.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;  wVariable       2   21[BANK0 ] short 
  5457 ;;  oTextOut        1   23[BANK0 ] PTR unsigned char 
  5458 ;;		 -> main@wReadout(20), 
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;  wWritingPosi    1   30[BANK0 ] unsigned char 
  5461 ;;  wTen            1   29[BANK0 ] unsigned char 
  5462 ;;  wIsNegative     1   28[BANK0 ] unsigned char 
  5463 ;;  wDecimal        1   27[BANK0 ] unsigned char 
  5464 ;;  wUnity          1   26[BANK0 ] unsigned char 
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  1    wreg      void 
  5467 ;; Registers used:
  5468 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5474 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  5475 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  5476 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5477 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  5478 ;;Total ram usage:       10 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    7
  5481 ;; This function calls:
  5482 ;;		___awdiv
  5483 ;;		___awmod
  5484 ;; This function is called by:
  5485 ;;		_main
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  5489                           	file	"EM1812.c"
  5490                           	line	16
  5491                           global __ptext3
  5492                           __ptext3:	;psect for function _printEM1812
  5493  0638                     psect	text3
  5494                           	file	"EM1812.c"
  5495                           	line	16
  5496                           	global	__size_of_printEM1812
  5497                           	__size_of_printEM1812	equ	__end_of_printEM1812-_printEM1812
  5498  00B6                     	
  5499                           _printEM1812:	
  5500  0638                     ;incstack = 0
  5501                           	opt	stack 8
  5502                           ; Regs used in _printEM1812: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5503                           	line	21
  5504                           	
  5505                           l5890:	
  5506  0638                     ;EM1812.c: 16: void printEM1812(int16_t wVariable, char* oTextOut);EM1812.c: 17: {;EM181
                                 2.c: 18:     uint8_t wTen;;EM1812.c: 19:     uint8_t wUnity;;EM1812.c: 20:     uint8_t w
                                 Decimal;;EM1812.c: 21:     uint8_t wIsNegative=0;
  5507                           	movlb 0	; select bank0
  5508  0638  0020               	clrf	(printEM1812@wIsNegative)
  5509  0639  01BC               	line	22
  5510                           ;EM1812.c: 22:     uint8_t wWritingPosition=0;
  5511                           	clrf	(printEM1812@wWritingPosition)
  5512  063A  01BE               	line	24
  5513                           	
  5514                           l5892:	
  5515  063B                     ;EM1812.c: 24:     if(wVariable < 0)
  5516                           	btfss	(printEM1812@wVariable+1),7
  5517  063B  1FB6               	goto	u4191
  5518  063C  2E3E               	goto	u4190
  5519  063D  2E3F               u4191:
  5520  063E                     	goto	l5898
  5521  063E  2E47               u4190:
  5522  063F                     	line	26
  5523                           	
  5524                           l5894:	
  5525  063F                     ;EM1812.c: 25:     {;EM1812.c: 26:         wIsNegative = 1;
  5526                           	clrf	(printEM1812@wIsNegative)
  5527  063F  01BC               	incf	(printEM1812@wIsNegative),f
  5528  0640  0ABC               	line	27
  5529                           	
  5530                           l5896:	
  5531  0641                     ;EM1812.c: 27:         wVariable = -wVariable;
  5532                           	comf	(printEM1812@wVariable),f
  5533  0641  09B5               	comf	(printEM1812@wVariable+1),f
  5534  0642  09B6               	incf	(printEM1812@wVariable),f
  5535  0643  0AB5               	skipnz
  5536  0644  1903               	incf	(printEM1812@wVariable+1),f
  5537  0645  0AB6               	goto	l5898
  5538  0646  2E47               	line	28
  5539                           ;EM1812.c: 28:     }
  5540                           	
  5541                           l451:	
  5542  0647                     	line	30
  5543                           	
  5544                           l5898:	
  5545  0647                     ;EM1812.c: 30:     wTen = wVariable/100;
  5546                           	movlw	064h
  5547  0647  3064               	movwf	(___awdiv@divisor)
  5548  0648  00AC               	movlw	0
  5549  0649  3000               	movwf	((___awdiv@divisor))+1
  5550  064A  00AD               	movf	(printEM1812@wVariable+1),w
  5551  064B  0836               	movwf	(___awdiv@dividend+1)
  5552  064C  00AF               	movf	(printEM1812@wVariable),w
  5553  064D  0835               	movwf	(___awdiv@dividend)
  5554  064E  00AE               	fcall	___awdiv
  5555  064F  318E  265F  3186   	movlb 0	; select bank0
  5556  0652  0020               	movf	(0+(?___awdiv)),w
  5557  0653  082C               	movwf	(??_printEM1812+0)+0
  5558  0654  00B8               	movf	(??_printEM1812+0)+0,w
  5559  0655  0838               	movwf	(printEM1812@wTen)
  5560  0656  00BD               	line	31
  5561                           	
  5562                           l5900:	
  5563  0657                     ;EM1812.c: 31:     wVariable = wVariable % 100;
  5564                           	movlw	064h
  5565  0657  3064               	movwf	(___awmod@divisor)
  5566  0658  00AC               	movlw	0
  5567  0659  3000               	movwf	((___awmod@divisor))+1
  5568  065A  00AD               	movf	(printEM1812@wVariable+1),w
  5569  065B  0836               	movwf	(___awmod@dividend+1)
  5570  065C  00AF               	movf	(printEM1812@wVariable),w
  5571  065D  0835               	movwf	(___awmod@dividend)
  5572  065E  00AE               	fcall	___awmod
  5573  065F  3187  27A2  3186   	movlb 0	; select bank0
  5574  0662  0020               	movf	(1+(?___awmod)),w
  5575  0663  082D               	movwf	(printEM1812@wVariable+1)
  5576  0664  00B6               	movf	(0+(?___awmod)),w
  5577  0665  082C               	movwf	(printEM1812@wVariable)
  5578  0666  00B5               	line	32
  5579                           	
  5580                           l5902:	
  5581  0667                     ;EM1812.c: 32:     wUnity = wVariable/10;
  5582                           	movlw	0Ah
  5583  0667  300A               	movwf	(___awdiv@divisor)
  5584  0668  00AC               	movlw	0
  5585  0669  3000               	movwf	((___awdiv@divisor))+1
  5586  066A  00AD               	movf	(printEM1812@wVariable+1),w
  5587  066B  0836               	movwf	(___awdiv@dividend+1)
  5588  066C  00AF               	movf	(printEM1812@wVariable),w
  5589  066D  0835               	movwf	(___awdiv@dividend)
  5590  066E  00AE               	fcall	___awdiv
  5591  066F  318E  265F  3186   	movlb 0	; select bank0
  5592  0672  0020               	movf	(0+(?___awdiv)),w
  5593  0673  082C               	movwf	(??_printEM1812+0)+0
  5594  0674  00B8               	movf	(??_printEM1812+0)+0,w
  5595  0675  0838               	movwf	(printEM1812@wUnity)
  5596  0676  00BA               	line	33
  5597                           	
  5598                           l5904:	
  5599  0677                     ;EM1812.c: 33:     wVariable = wVariable %10;
  5600                           	movlw	0Ah
  5601  0677  300A               	movwf	(___awmod@divisor)
  5602  0678  00AC               	movlw	0
  5603  0679  3000               	movwf	((___awmod@divisor))+1
  5604  067A  00AD               	movf	(printEM1812@wVariable+1),w
  5605  067B  0836               	movwf	(___awmod@dividend+1)
  5606  067C  00AF               	movf	(printEM1812@wVariable),w
  5607  067D  0835               	movwf	(___awmod@dividend)
  5608  067E  00AE               	fcall	___awmod
  5609  067F  3187  27A2  3186   	movlb 0	; select bank0
  5610  0682  0020               	movf	(1+(?___awmod)),w
  5611  0683  082D               	movwf	(printEM1812@wVariable+1)
  5612  0684  00B6               	movf	(0+(?___awmod)),w
  5613  0685  082C               	movwf	(printEM1812@wVariable)
  5614  0686  00B5               	line	34
  5615                           	
  5616                           l5906:	
  5617  0687                     ;EM1812.c: 34:     wDecimal = wVariable;
  5618                           	movf	(printEM1812@wVariable),w
  5619  0687  0835               	movwf	(??_printEM1812+0)+0
  5620  0688  00B8               	movf	(??_printEM1812+0)+0,w
  5621  0689  0838               	movwf	(printEM1812@wDecimal)
  5622  068A  00BB               	line	37
  5623                           ;EM1812.c: 37:     if(wIsNegative)
  5624                           	movf	((printEM1812@wIsNegative)),w
  5625  068B  083C               	btfsc	status,2
  5626  068C  1903               	goto	u4201
  5627  068D  2E8F               	goto	u4200
  5628  068E  2E90               u4201:
  5629  068F                     	goto	l5912
  5630  068F  2EA0               u4200:
  5631  0690                     	line	39
  5632                           	
  5633                           l5908:	
  5634  0690                     ;EM1812.c: 38:     {;EM1812.c: 39:         oTextOut[wWritingPosition] = '-';
  5635                           	movlw	low(02Dh)
  5636  0690  302D               	movwf	(??_printEM1812+0)+0
  5637  0691  00B8               	movf	(printEM1812@wWritingPosition),w
  5638  0692  083E               	addwf	(printEM1812@oTextOut),w
  5639  0693  0737               	movwf	(??_printEM1812+1)+0
  5640  0694  00B9               	movf	0+(??_printEM1812+1)+0,w
  5641  0695  0839               	movwf	fsr1l
  5642  0696  0086               	movlw 2	; select bank4/5
  5643  0697  3002               	movwf fsr1h	
  5644  0698  0087               	
  5645                           	movf	(??_printEM1812+0)+0,w
  5646  0699  0838               	movwf	indf1
  5647  069A  0081               	line	40
  5648                           	
  5649                           l5910:	
  5650  069B                     ;EM1812.c: 40:         wWritingPosition++;
  5651                           	movlw	low(01h)
  5652  069B  3001               	movwf	(??_printEM1812+0)+0
  5653  069C  00B8               	movf	(??_printEM1812+0)+0,w
  5654  069D  0838               	addwf	(printEM1812@wWritingPosition),f
  5655  069E  07BE               	goto	l5912
  5656  069F  2EA0               	line	41
  5657                           ;EM1812.c: 41:     }
  5658                           	
  5659                           l452:	
  5660  06A0                     	line	42
  5661                           	
  5662                           l5912:	
  5663  06A0                     ;EM1812.c: 42:     if( wTen != 0 )
  5664                           	movf	((printEM1812@wTen)),w
  5665  06A0  083D               	btfsc	status,2
  5666  06A1  1903               	goto	u4211
  5667  06A2  2EA4               	goto	u4210
  5668  06A3  2EA5               u4211:
  5669  06A4                     	goto	l5918
  5670  06A4  2EB6               u4210:
  5671  06A5                     	line	44
  5672                           	
  5673                           l5914:	
  5674  06A5                     ;EM1812.c: 43:     {;EM1812.c: 44:         oTextOut[wWritingPosition] = '0' + wTen;
  5675                           	movf	(printEM1812@wTen),w
  5676  06A5  083D               	addlw	030h
  5677  06A6  3E30               	movwf	(??_printEM1812+0)+0
  5678  06A7  00B8               	movf	(printEM1812@wWritingPosition),w
  5679  06A8  083E               	addwf	(printEM1812@oTextOut),w
  5680  06A9  0737               	movwf	(??_printEM1812+1)+0
  5681  06AA  00B9               	movf	0+(??_printEM1812+1)+0,w
  5682  06AB  0839               	movwf	fsr1l
  5683  06AC  0086               	movlw 2	; select bank4/5
  5684  06AD  3002               	movwf fsr1h	
  5685  06AE  0087               	
  5686                           	movf	(??_printEM1812+0)+0,w
  5687  06AF  0838               	movwf	indf1
  5688  06B0  0081               	line	45
  5689                           	
  5690                           l5916:	
  5691  06B1                     ;EM1812.c: 45:         wWritingPosition++;
  5692                           	movlw	low(01h)
  5693  06B1  3001               	movwf	(??_printEM1812+0)+0
  5694  06B2  00B8               	movf	(??_printEM1812+0)+0,w
  5695  06B3  0838               	addwf	(printEM1812@wWritingPosition),f
  5696  06B4  07BE               	goto	l5918
  5697  06B5  2EB6               	line	46
  5698                           ;EM1812.c: 46:     }
  5699                           	
  5700                           l453:	
  5701  06B6                     	line	47
  5702                           	
  5703                           l5918:	
  5704  06B6                     ;EM1812.c: 47:     oTextOut[wWritingPosition] = '0' + wUnity;
  5705                           	movf	(printEM1812@wUnity),w
  5706  06B6  083A               	addlw	030h
  5707  06B7  3E30               	movwf	(??_printEM1812+0)+0
  5708  06B8  00B8               	movf	(printEM1812@wWritingPosition),w
  5709  06B9  083E               	addwf	(printEM1812@oTextOut),w
  5710  06BA  0737               	movwf	(??_printEM1812+1)+0
  5711  06BB  00B9               	movf	0+(??_printEM1812+1)+0,w
  5712  06BC  0839               	movwf	fsr1l
  5713  06BD  0086               	movlw 2	; select bank4/5
  5714  06BE  3002               	movwf fsr1h	
  5715  06BF  0087               	
  5716                           	movf	(??_printEM1812+0)+0,w
  5717  06C0  0838               	movwf	indf1
  5718  06C1  0081               	line	48
  5719                           ;EM1812.c: 48:     wWritingPosition++;
  5720                           	movlw	low(01h)
  5721  06C2  3001               	movwf	(??_printEM1812+0)+0
  5722  06C3  00B8               	movf	(??_printEM1812+0)+0,w
  5723  06C4  0838               	addwf	(printEM1812@wWritingPosition),f
  5724  06C5  07BE               	line	49
  5725                           	
  5726                           l5920:	
  5727  06C6                     ;EM1812.c: 49:     oTextOut[wWritingPosition] = ',';
  5728                           	movlw	low(02Ch)
  5729  06C6  302C               	movwf	(??_printEM1812+0)+0
  5730  06C7  00B8               	movf	(printEM1812@wWritingPosition),w
  5731  06C8  083E               	addwf	(printEM1812@oTextOut),w
  5732  06C9  0737               	movwf	(??_printEM1812+1)+0
  5733  06CA  00B9               	movf	0+(??_printEM1812+1)+0,w
  5734  06CB  0839               	movwf	fsr1l
  5735  06CC  0086               	movlw 2	; select bank4/5
  5736  06CD  3002               	movwf fsr1h	
  5737  06CE  0087               	
  5738                           	movf	(??_printEM1812+0)+0,w
  5739  06CF  0838               	movwf	indf1
  5740  06D0  0081               	line	50
  5741                           	
  5742                           l5922:	
  5743  06D1                     ;EM1812.c: 50:     wWritingPosition++;
  5744                           	movlw	low(01h)
  5745  06D1  3001               	movwf	(??_printEM1812+0)+0
  5746  06D2  00B8               	movf	(??_printEM1812+0)+0,w
  5747  06D3  0838               	addwf	(printEM1812@wWritingPosition),f
  5748  06D4  07BE               	line	51
  5749                           ;EM1812.c: 51:     oTextOut[wWritingPosition] = '0' + wDecimal;
  5750                           	movf	(printEM1812@wDecimal),w
  5751  06D5  083B               	addlw	030h
  5752  06D6  3E30               	movwf	(??_printEM1812+0)+0
  5753  06D7  00B8               	movf	(printEM1812@wWritingPosition),w
  5754  06D8  083E               	addwf	(printEM1812@oTextOut),w
  5755  06D9  0737               	movwf	(??_printEM1812+1)+0
  5756  06DA  00B9               	movf	0+(??_printEM1812+1)+0,w
  5757  06DB  0839               	movwf	fsr1l
  5758  06DC  0086               	movlw 2	; select bank4/5
  5759  06DD  3002               	movwf fsr1h	
  5760  06DE  0087               	
  5761                           	movf	(??_printEM1812+0)+0,w
  5762  06DF  0838               	movwf	indf1
  5763  06E0  0081               	line	52
  5764                           	
  5765                           l5924:	
  5766  06E1                     ;EM1812.c: 52:     wWritingPosition++;
  5767                           	movlw	low(01h)
  5768  06E1  3001               	movwf	(??_printEM1812+0)+0
  5769  06E2  00B8               	movf	(??_printEM1812+0)+0,w
  5770  06E3  0838               	addwf	(printEM1812@wWritingPosition),f
  5771  06E4  07BE               	line	53
  5772                           	
  5773                           l5926:	
  5774  06E5                     ;EM1812.c: 53:     oTextOut[wWritingPosition] = 0;
  5775                           	movf	(printEM1812@wWritingPosition),w
  5776  06E5  083E               	addwf	(printEM1812@oTextOut),w
  5777  06E6  0737               	movwf	(??_printEM1812+0)+0
  5778  06E7  00B8               	movf	0+(??_printEM1812+0)+0,w
  5779  06E8  0838               	movwf	fsr1l
  5780  06E9  0086               	movlw 2	; select bank4/5
  5781  06EA  3002               	movwf fsr1h	
  5782  06EB  0087               	
  5783                           	clrf	indf1
  5784  06EC  0181               	line	55
  5785                           	
  5786                           l454:	
  5787  06ED                     	return
  5788  06ED  0008               	opt stack 0
  5789                           GLOBAL	__end_of_printEM1812
  5790                           	__end_of_printEM1812:
  5791  06EE                     	signat	_printEM1812,8313
  5792                           	global	___awmod
  5793                           
  5794 ;; *************** function ___awmod *****************
  5795 ;; Defined at:
  5796 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;  divisor         2   12[BANK0 ] int 
  5799 ;;  dividend        2   14[BANK0 ] int 
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;  sign            1   18[BANK0 ] unsigned char 
  5802 ;;  counter         1   17[BANK0 ] unsigned char 
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  2   12[BANK0 ] int 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5812 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  5813 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5814 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5815 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
  5816 ;;Total ram usage:        7 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    6
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_printEM1812
  5823 ;;		_uint8_tToa
  5824 ;;		_Esp8266SetNetworkParameters
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  5828                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  5829                           	line	5
  5830                           global __ptext4
  5831                           __ptext4:	;psect for function ___awmod
  5832  07A2                     psect	text4
  5833                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  5834                           	line	5
  5835                           	global	__size_of___awmod
  5836                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  5837  005E                     	
  5838                           ___awmod:	
  5839  07A2                     ;incstack = 0
  5840                           	opt	stack 8
  5841                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5842                           	line	12
  5843                           	
  5844                           l5728:	
  5845  07A2                     	movlb 0	; select bank0
  5846  07A2  0020               	clrf	(___awmod@sign)
  5847  07A3  01B2               	line	13
  5848                           	
  5849                           l5730:	
  5850  07A4                     	btfss	(___awmod@dividend+1),7
  5851  07A4  1FAF               	goto	u4001
  5852  07A5  2FA7               	goto	u4000
  5853  07A6  2FA8               u4001:
  5854  07A7                     	goto	l5736
  5855  07A7  2FB0               u4000:
  5856  07A8                     	line	14
  5857                           	
  5858                           l5732:	
  5859  07A8                     	comf	(___awmod@dividend),f
  5860  07A8  09AE               	comf	(___awmod@dividend+1),f
  5861  07A9  09AF               	incf	(___awmod@dividend),f
  5862  07AA  0AAE               	skipnz
  5863  07AB  1903               	incf	(___awmod@dividend+1),f
  5864  07AC  0AAF               	line	15
  5865                           	
  5866                           l5734:	
  5867  07AD                     	clrf	(___awmod@sign)
  5868  07AD  01B2               	incf	(___awmod@sign),f
  5869  07AE  0AB2               	goto	l5736
  5870  07AF  2FB0               	line	16
  5871                           	
  5872                           l1084:	
  5873  07B0                     	line	17
  5874                           	
  5875                           l5736:	
  5876  07B0                     	btfss	(___awmod@divisor+1),7
  5877  07B0  1FAD               	goto	u4011
  5878  07B1  2FB3               	goto	u4010
  5879  07B2  2FB4               u4011:
  5880  07B3                     	goto	l5740
  5881  07B3  2FBA               u4010:
  5882  07B4                     	line	18
  5883                           	
  5884                           l5738:	
  5885  07B4                     	comf	(___awmod@divisor),f
  5886  07B4  09AC               	comf	(___awmod@divisor+1),f
  5887  07B5  09AD               	incf	(___awmod@divisor),f
  5888  07B6  0AAC               	skipnz
  5889  07B7  1903               	incf	(___awmod@divisor+1),f
  5890  07B8  0AAD               	goto	l5740
  5891  07B9  2FBA               	
  5892                           l1085:	
  5893  07BA                     	line	19
  5894                           	
  5895                           l5740:	
  5896  07BA                     	movf	((___awmod@divisor)),w
  5897  07BA  082C               iorwf	((___awmod@divisor+1)),w
  5898  07BB  042D               	btfsc	status,2
  5899  07BC  1903               	goto	u4021
  5900  07BD  2FBF               	goto	u4020
  5901  07BE  2FC0               u4021:
  5902  07BF                     	goto	l5758
  5903  07BF  2FEF               u4020:
  5904  07C0                     	line	20
  5905                           	
  5906                           l5742:	
  5907  07C0                     	clrf	(___awmod@counter)
  5908  07C0  01B1               	incf	(___awmod@counter),f
  5909  07C1  0AB1               	line	21
  5910                           	goto	l5748
  5911  07C2  2FCD               	
  5912                           l1088:	
  5913  07C3                     	line	22
  5914                           	
  5915                           l5744:	
  5916  07C3                     	movlw	01h
  5917  07C3  3001               	
  5918                           u4035:
  5919  07C4                     	lslf	(___awmod@divisor),f
  5920  07C4  35AC               	rlf	(___awmod@divisor+1),f
  5921  07C5  0DAD               	decfsz	wreg,f
  5922  07C6  0B89               	goto	u4035
  5923  07C7  2FC4               	line	23
  5924                           	
  5925                           l5746:	
  5926  07C8                     	movlw	low(01h)
  5927  07C8  3001               	movwf	(??___awmod+0)+0
  5928  07C9  00B0               	movf	(??___awmod+0)+0,w
  5929  07CA  0830               	addwf	(___awmod@counter),f
  5930  07CB  07B1               	goto	l5748
  5931  07CC  2FCD               	line	24
  5932                           	
  5933                           l1087:	
  5934  07CD                     	line	21
  5935                           	
  5936                           l5748:	
  5937  07CD                     	btfss	(___awmod@divisor+1),(15)&7
  5938  07CD  1FAD               	goto	u4041
  5939  07CE  2FD0               	goto	u4040
  5940  07CF  2FD1               u4041:
  5941  07D0                     	goto	l5744
  5942  07D0  2FC3               u4040:
  5943  07D1                     	goto	l5750
  5944  07D1  2FD3               	
  5945                           l1089:	
  5946  07D2                     	goto	l5750
  5947  07D2  2FD3               	line	25
  5948                           	
  5949                           l1090:	
  5950  07D3                     	line	26
  5951                           	
  5952                           l5750:	
  5953  07D3                     	movf	(___awmod@divisor+1),w
  5954  07D3  082D               	subwf	(___awmod@dividend+1),w
  5955  07D4  022F               	skipz
  5956  07D5  1D03               	goto	u4055
  5957  07D6  2FD9               	movf	(___awmod@divisor),w
  5958  07D7  082C               	subwf	(___awmod@dividend),w
  5959  07D8  022E               u4055:
  5960  07D9                     	skipc
  5961  07D9  1C03               	goto	u4051
  5962  07DA  2FDC               	goto	u4050
  5963  07DB  2FDD               u4051:
  5964  07DC                     	goto	l5754
  5965  07DC  2FE2               u4050:
  5966  07DD                     	line	27
  5967                           	
  5968                           l5752:	
  5969  07DD                     	movf	(___awmod@divisor),w
  5970  07DD  082C               	subwf	(___awmod@dividend),f
  5971  07DE  02AE               	movf	(___awmod@divisor+1),w
  5972  07DF  082D               	subwfb	(___awmod@dividend+1),f
  5973  07E0  3BAF               	goto	l5754
  5974  07E1  2FE2               	
  5975                           l1091:	
  5976  07E2                     	line	28
  5977                           	
  5978                           l5754:	
  5979  07E2                     	movlw	01h
  5980  07E2  3001               	
  5981                           u4065:
  5982  07E3                     	lsrf	(___awmod@divisor+1),f
  5983  07E3  36AD               	rrf	(___awmod@divisor),f
  5984  07E4  0CAC               	decfsz	wreg,f
  5985  07E5  0B89               	goto	u4065
  5986  07E6  2FE3               	line	29
  5987                           	
  5988                           l5756:	
  5989  07E7                     	movlw	01h
  5990  07E7  3001               	subwf	(___awmod@counter),f
  5991  07E8  02B1               	btfss	status,2
  5992  07E9  1D03               	goto	u4071
  5993  07EA  2FEC               	goto	u4070
  5994  07EB  2FED               u4071:
  5995  07EC                     	goto	l5750
  5996  07EC  2FD3               u4070:
  5997  07ED                     	goto	l5758
  5998  07ED  2FEF               	
  5999                           l1092:	
  6000  07EE                     	goto	l5758
  6001  07EE  2FEF               	line	30
  6002                           	
  6003                           l1086:	
  6004  07EF                     	line	31
  6005                           	
  6006                           l5758:	
  6007  07EF                     	movf	((___awmod@sign)),w
  6008  07EF  0832               	btfsc	status,2
  6009  07F0  1903               	goto	u4081
  6010  07F1  2FF3               	goto	u4080
  6011  07F2  2FF4               u4081:
  6012  07F3                     	goto	l5762
  6013  07F3  2FFA               u4080:
  6014  07F4                     	line	32
  6015                           	
  6016                           l5760:	
  6017  07F4                     	comf	(___awmod@dividend),f
  6018  07F4  09AE               	comf	(___awmod@dividend+1),f
  6019  07F5  09AF               	incf	(___awmod@dividend),f
  6020  07F6  0AAE               	skipnz
  6021  07F7  1903               	incf	(___awmod@dividend+1),f
  6022  07F8  0AAF               	goto	l5762
  6023  07F9  2FFA               	
  6024                           l1093:	
  6025  07FA                     	line	33
  6026                           	
  6027                           l5762:	
  6028  07FA                     	movf	(___awmod@dividend+1),w
  6029  07FA  082F               	movwf	(?___awmod+1)
  6030  07FB  00AD               	movf	(___awmod@dividend),w
  6031  07FC  082E               	movwf	(?___awmod)
  6032  07FD  00AC               	goto	l1094
  6033  07FE  2FFF               	
  6034                           l5764:	
  6035  07FF                     	line	34
  6036                           	
  6037                           l1094:	
  6038  07FF                     	return
  6039  07FF  0008               	opt stack 0
  6040                           GLOBAL	__end_of___awmod
  6041                           	__end_of___awmod:
  6042  0800                     	signat	___awmod,8314
  6043                           	global	___awdiv
  6044                           
  6045 ;; *************** function ___awdiv *****************
  6046 ;; Defined at:
  6047 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;  divisor         2   12[BANK0 ] int 
  6050 ;;  dividend        2   14[BANK0 ] int 
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;  quotient        2   19[BANK0 ] int 
  6053 ;;  sign            1   18[BANK0 ] unsigned char 
  6054 ;;  counter         1   17[BANK0 ] unsigned char 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  2   12[BANK0 ] int 
  6057 ;; Registers used:
  6058 ;;		wreg, status,2, status,0
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6064 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6065 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6066 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6067 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0
  6068 ;;Total ram usage:        9 bytes
  6069 ;; Hardware stack levels used:    1
  6070 ;; Hardware stack levels required when called:    6
  6071 ;; This function calls:
  6072 ;;		Nothing
  6073 ;; This function is called by:
  6074 ;;		_printEM1812
  6075 ;;		_uint8_tToa
  6076 ;;		_Esp8266SetNetworkParameters
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  6080                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  6081                           	line	5
  6082                           global __ptext5
  6083                           __ptext5:	;psect for function ___awdiv
  6084  0E5F                     psect	text5
  6085                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  6086                           	line	5
  6087                           	global	__size_of___awdiv
  6088                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  6089  006A                     	
  6090                           ___awdiv:	
  6091  0E5F                     ;incstack = 0
  6092                           	opt	stack 8
  6093                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6094                           	line	13
  6095                           	
  6096                           l5684:	
  6097  0E5F                     	movlb 0	; select bank0
  6098  0E5F  0020               	clrf	(___awdiv@sign)
  6099  0E60  01B2               	line	14
  6100                           	
  6101                           l5686:	
  6102  0E61                     	btfss	(___awdiv@divisor+1),7
  6103  0E61  1FAD               	goto	u3901
  6104  0E62  2E64               	goto	u3900
  6105  0E63  2E65               u3901:
  6106  0E64                     	goto	l5692
  6107  0E64  2E6D               u3900:
  6108  0E65                     	line	15
  6109                           	
  6110                           l5688:	
  6111  0E65                     	comf	(___awdiv@divisor),f
  6112  0E65  09AC               	comf	(___awdiv@divisor+1),f
  6113  0E66  09AD               	incf	(___awdiv@divisor),f
  6114  0E67  0AAC               	skipnz
  6115  0E68  1903               	incf	(___awdiv@divisor+1),f
  6116  0E69  0AAD               	line	16
  6117                           	
  6118                           l5690:	
  6119  0E6A                     	clrf	(___awdiv@sign)
  6120  0E6A  01B2               	incf	(___awdiv@sign),f
  6121  0E6B  0AB2               	goto	l5692
  6122  0E6C  2E6D               	line	17
  6123                           	
  6124                           l1071:	
  6125  0E6D                     	line	18
  6126                           	
  6127                           l5692:	
  6128  0E6D                     	btfss	(___awdiv@dividend+1),7
  6129  0E6D  1FAF               	goto	u3911
  6130  0E6E  2E70               	goto	u3910
  6131  0E6F  2E71               u3911:
  6132  0E70                     	goto	l5698
  6133  0E70  2E7B               u3910:
  6134  0E71                     	line	19
  6135                           	
  6136                           l5694:	
  6137  0E71                     	comf	(___awdiv@dividend),f
  6138  0E71  09AE               	comf	(___awdiv@dividend+1),f
  6139  0E72  09AF               	incf	(___awdiv@dividend),f
  6140  0E73  0AAE               	skipnz
  6141  0E74  1903               	incf	(___awdiv@dividend+1),f
  6142  0E75  0AAF               	line	20
  6143                           	
  6144                           l5696:	
  6145  0E76                     	movlw	low(01h)
  6146  0E76  3001               	movwf	(??___awdiv+0)+0
  6147  0E77  00B0               	movf	(??___awdiv+0)+0,w
  6148  0E78  0830               	xorwf	(___awdiv@sign),f
  6149  0E79  06B2               	goto	l5698
  6150  0E7A  2E7B               	line	21
  6151                           	
  6152                           l1072:	
  6153  0E7B                     	line	22
  6154                           	
  6155                           l5698:	
  6156  0E7B                     	clrf	(___awdiv@quotient)
  6157  0E7B  01B3               	clrf	(___awdiv@quotient+1)
  6158  0E7C  01B4               	line	23
  6159                           	
  6160                           l5700:	
  6161  0E7D                     	movf	((___awdiv@divisor)),w
  6162  0E7D  082C               iorwf	((___awdiv@divisor+1)),w
  6163  0E7E  042D               	btfsc	status,2
  6164  0E7F  1903               	goto	u3921
  6165  0E80  2E82               	goto	u3920
  6166  0E81  2E83               u3921:
  6167  0E82                     	goto	l5720
  6168  0E82  2EB8               u3920:
  6169  0E83                     	line	24
  6170                           	
  6171                           l5702:	
  6172  0E83                     	clrf	(___awdiv@counter)
  6173  0E83  01B1               	incf	(___awdiv@counter),f
  6174  0E84  0AB1               	line	25
  6175                           	goto	l5708
  6176  0E85  2E90               	
  6177                           l1075:	
  6178  0E86                     	line	26
  6179                           	
  6180                           l5704:	
  6181  0E86                     	movlw	01h
  6182  0E86  3001               	
  6183                           u3935:
  6184  0E87                     	lslf	(___awdiv@divisor),f
  6185  0E87  35AC               	rlf	(___awdiv@divisor+1),f
  6186  0E88  0DAD               	decfsz	wreg,f
  6187  0E89  0B89               	goto	u3935
  6188  0E8A  2E87               	line	27
  6189                           	
  6190                           l5706:	
  6191  0E8B                     	movlw	low(01h)
  6192  0E8B  3001               	movwf	(??___awdiv+0)+0
  6193  0E8C  00B0               	movf	(??___awdiv+0)+0,w
  6194  0E8D  0830               	addwf	(___awdiv@counter),f
  6195  0E8E  07B1               	goto	l5708
  6196  0E8F  2E90               	line	28
  6197                           	
  6198                           l1074:	
  6199  0E90                     	line	25
  6200                           	
  6201                           l5708:	
  6202  0E90                     	btfss	(___awdiv@divisor+1),(15)&7
  6203  0E90  1FAD               	goto	u3941
  6204  0E91  2E93               	goto	u3940
  6205  0E92  2E94               u3941:
  6206  0E93                     	goto	l5704
  6207  0E93  2E86               u3940:
  6208  0E94                     	goto	l5710
  6209  0E94  2E96               	
  6210                           l1076:	
  6211  0E95                     	goto	l5710
  6212  0E95  2E96               	line	29
  6213                           	
  6214                           l1077:	
  6215  0E96                     	line	30
  6216                           	
  6217                           l5710:	
  6218  0E96                     	movlw	01h
  6219  0E96  3001               	
  6220                           u3955:
  6221  0E97                     	lslf	(___awdiv@quotient),f
  6222  0E97  35B3               	rlf	(___awdiv@quotient+1),f
  6223  0E98  0DB4               	decfsz	wreg,f
  6224  0E99  0B89               	goto	u3955
  6225  0E9A  2E97               	line	31
  6226                           	movf	(___awdiv@divisor+1),w
  6227  0E9B  082D               	subwf	(___awdiv@dividend+1),w
  6228  0E9C  022F               	skipz
  6229  0E9D  1D03               	goto	u3965
  6230  0E9E  2EA1               	movf	(___awdiv@divisor),w
  6231  0E9F  082C               	subwf	(___awdiv@dividend),w
  6232  0EA0  022E               u3965:
  6233  0EA1                     	skipc
  6234  0EA1  1C03               	goto	u3961
  6235  0EA2  2EA4               	goto	u3960
  6236  0EA3  2EA5               u3961:
  6237  0EA4                     	goto	l5716
  6238  0EA4  2EAB               u3960:
  6239  0EA5                     	line	32
  6240                           	
  6241                           l5712:	
  6242  0EA5                     	movf	(___awdiv@divisor),w
  6243  0EA5  082C               	subwf	(___awdiv@dividend),f
  6244  0EA6  02AE               	movf	(___awdiv@divisor+1),w
  6245  0EA7  082D               	subwfb	(___awdiv@dividend+1),f
  6246  0EA8  3BAF               	line	33
  6247                           	
  6248                           l5714:	
  6249  0EA9                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  6250  0EA9  1433               	goto	l5716
  6251  0EAA  2EAB               	line	34
  6252                           	
  6253                           l1078:	
  6254  0EAB                     	line	35
  6255                           	
  6256                           l5716:	
  6257  0EAB                     	movlw	01h
  6258  0EAB  3001               	
  6259                           u3975:
  6260  0EAC                     	lsrf	(___awdiv@divisor+1),f
  6261  0EAC  36AD               	rrf	(___awdiv@divisor),f
  6262  0EAD  0CAC               	decfsz	wreg,f
  6263  0EAE  0B89               	goto	u3975
  6264  0EAF  2EAC               	line	36
  6265                           	
  6266                           l5718:	
  6267  0EB0                     	movlw	01h
  6268  0EB0  3001               	subwf	(___awdiv@counter),f
  6269  0EB1  02B1               	btfss	status,2
  6270  0EB2  1D03               	goto	u3981
  6271  0EB3  2EB5               	goto	u3980
  6272  0EB4  2EB6               u3981:
  6273  0EB5                     	goto	l5710
  6274  0EB5  2E96               u3980:
  6275  0EB6                     	goto	l5720
  6276  0EB6  2EB8               	
  6277                           l1079:	
  6278  0EB7                     	goto	l5720
  6279  0EB7  2EB8               	line	37
  6280                           	
  6281                           l1073:	
  6282  0EB8                     	line	38
  6283                           	
  6284                           l5720:	
  6285  0EB8                     	movf	((___awdiv@sign)),w
  6286  0EB8  0832               	btfsc	status,2
  6287  0EB9  1903               	goto	u3991
  6288  0EBA  2EBC               	goto	u3990
  6289  0EBB  2EBD               u3991:
  6290  0EBC                     	goto	l5724
  6291  0EBC  2EC3               u3990:
  6292  0EBD                     	line	39
  6293                           	
  6294                           l5722:	
  6295  0EBD                     	comf	(___awdiv@quotient),f
  6296  0EBD  09B3               	comf	(___awdiv@quotient+1),f
  6297  0EBE  09B4               	incf	(___awdiv@quotient),f
  6298  0EBF  0AB3               	skipnz
  6299  0EC0  1903               	incf	(___awdiv@quotient+1),f
  6300  0EC1  0AB4               	goto	l5724
  6301  0EC2  2EC3               	
  6302                           l1080:	
  6303  0EC3                     	line	40
  6304                           	
  6305                           l5724:	
  6306  0EC3                     	movf	(___awdiv@quotient+1),w
  6307  0EC3  0834               	movwf	(?___awdiv+1)
  6308  0EC4  00AD               	movf	(___awdiv@quotient),w
  6309  0EC5  0833               	movwf	(?___awdiv)
  6310  0EC6  00AC               	goto	l1081
  6311  0EC7  2EC8               	
  6312                           l5726:	
  6313  0EC8                     	line	41
  6314                           	
  6315                           l1081:	
  6316  0EC8                     	return
  6317  0EC8  0008               	opt stack 0
  6318                           GLOBAL	__end_of___awdiv
  6319                           	__end_of___awdiv:
  6320  0EC9                     	signat	___awdiv,8314
  6321                           	global	_powerOnLcd
  6322                           
  6323 ;; *************** function _powerOnLcd *****************
  6324 ;; Defined at:
  6325 ;;		line 267 in file "LCD_hd44780u_qy_2004a.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;		None
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;		None
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  1    wreg      void 
  6332 ;; Registers used:
  6333 ;;		wreg, status,2, status,0, pclath, cstack
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6341 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6342 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6343 ;;Total ram usage:        1 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:    9
  6346 ;; This function calls:
  6347 ;;		_writeInsChk
  6348 ;; This function is called by:
  6349 ;;		_main
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  6353                           	file	"LCD_hd44780u_qy_2004a.c"
  6354                           	line	267
  6355                           global __ptext6
  6356                           __ptext6:	;psect for function _powerOnLcd
  6357  0966                     psect	text6
  6358                           	file	"LCD_hd44780u_qy_2004a.c"
  6359                           	line	267
  6360                           	global	__size_of_powerOnLcd
  6361                           	__size_of_powerOnLcd	equ	__end_of_powerOnLcd-_powerOnLcd
  6362  000B                     	
  6363                           _powerOnLcd:	
  6364  0966                     ;incstack = 0
  6365                           	opt	stack 6
  6366                           ; Regs used in _powerOnLcd: [wreg+status,2+status,0+pclath+cstack]
  6367                           	line	269
  6368                           	
  6369                           l5874:	
  6370  0966                     ;LCD_hd44780u_qy_2004a.c: 269:   mDisplayOnOffReg = mDisplayOnOffReg | 0x04;
  6371                           	movlb 0	; select bank0
  6372  0966  0020               	movf	(_mDisplayOnOffReg),w
  6373  0967  085D               	iorlw	04h
  6374  0968  3804               	movwf	(??_powerOnLcd+0)+0
  6375  0969  00B2               	movf	(??_powerOnLcd+0)+0,w
  6376  096A  0832               	movwf	(_mDisplayOnOffReg)
  6377  096B  00DD               	line	270
  6378                           	
  6379                           l5876:	
  6380  096C                     ;LCD_hd44780u_qy_2004a.c: 270:   writeInsChk(mDisplayOnOffReg);
  6381                           	movf	(_mDisplayOnOffReg),w
  6382  096C  085D               	fcall	_writeInsChk
  6383  096D  3189  215B  3189   	line	271
  6384                           	
  6385                           l350:	
  6386  0970                     	return
  6387  0970  0008               	opt stack 0
  6388                           GLOBAL	__end_of_powerOnLcd
  6389                           	__end_of_powerOnLcd:
  6390  0971                     	signat	_powerOnLcd,89
  6391                           	global	_moveCursorToHome
  6392                           
  6393 ;; *************** function _moveCursorToHome *****************
  6394 ;; Defined at:
  6395 ;;		line 328 in file "LCD_hd44780u_qy_2004a.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;		None
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;		None
  6400 ;; Return value:  Size  Location     Type
  6401 ;;                  1    wreg      void 
  6402 ;; Registers used:
  6403 ;;		wreg, status,2, status,0, pclath, cstack
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6413 ;;Total ram usage:        0 bytes
  6414 ;; Hardware stack levels used:    1
  6415 ;; Hardware stack levels required when called:    9
  6416 ;; This function calls:
  6417 ;;		_writeInsChk
  6418 ;; This function is called by:
  6419 ;;		_main
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  6423                           	line	328
  6424                           global __ptext7
  6425                           __ptext7:	;psect for function _moveCursorToHome
  6426  093F                     psect	text7
  6427                           	file	"LCD_hd44780u_qy_2004a.c"
  6428                           	line	328
  6429                           	global	__size_of_moveCursorToHome
  6430                           	__size_of_moveCursorToHome	equ	__end_of_moveCursorToHome-_moveCursorToHome
  6431  0008                     	
  6432                           _moveCursorToHome:	
  6433  093F                     ;incstack = 0
  6434                           	opt	stack 6
  6435                           ; Regs used in _moveCursorToHome: [wreg+status,2+status,0+pclath+cstack]
  6436                           	line	330
  6437                           	
  6438                           l5882:	
  6439  093F                     ;LCD_hd44780u_qy_2004a.c: 330:   writeInsChk(0x02);
  6440                           	movlw	low(02h)
  6441  093F  3002               	fcall	_writeInsChk
  6442  0940  3189  215B  3189   	line	331
  6443                           	
  6444                           l5884:	
  6445  0943                     ;LCD_hd44780u_qy_2004a.c: 331:   mWritingPosition=1;
  6446                           	movlb 0	; select bank0
  6447  0943  0020               	clrf	(_mWritingPosition)
  6448  0944  01DB               	incf	(_mWritingPosition),f
  6449  0945  0ADB               	line	332
  6450                           	
  6451                           l386:	
  6452  0946                     	return
  6453  0946  0008               	opt stack 0
  6454                           GLOBAL	__end_of_moveCursorToHome
  6455                           	__end_of_moveCursorToHome:
  6456  0947                     	signat	_moveCursorToHome,89
  6457                           	global	_initLCD
  6458                           
  6459 ;; *************** function _initLCD *****************
  6460 ;; Defined at:
  6461 ;;		line 10 in file "LCD_hd44780u_qy_2004a.c"
  6462 ;; Parameters:    Size  Location     Type
  6463 ;;		None
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;		None
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  1    wreg      void 
  6468 ;; Registers used:
  6469 ;;		wreg, status,2, status,0, pclath, cstack
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6477 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6478 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6479 ;;Total ram usage:        1 bytes
  6480 ;; Hardware stack levels used:    1
  6481 ;; Hardware stack levels required when called:   10
  6482 ;; This function calls:
  6483 ;;		_clearDisplay
  6484 ;;		_setData
  6485 ;;		_writeInsChk
  6486 ;; This function is called by:
  6487 ;;		_main
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  6491                           	line	10
  6492                           global __ptext8
  6493                           __ptext8:	;psect for function _initLCD
  6494  0DFB                     psect	text8
  6495                           	file	"LCD_hd44780u_qy_2004a.c"
  6496                           	line	10
  6497                           	global	__size_of_initLCD
  6498                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  6499  0064                     	
  6500                           _initLCD:	
  6501  0DFB                     ;incstack = 0
  6502                           	opt	stack 5
  6503                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  6504                           	line	13
  6505                           	
  6506                           l5852:	
  6507  0DFB                     ;LCD_hd44780u_qy_2004a.c: 13:   ANSELAbits.ANSA0 = 0;
  6508                           	movlb 3	; select bank3
  6509  0DFB  0023               	bcf	(396)^0180h,0	;volatile
  6510  0DFC  100C               	line	14
  6511                           ;LCD_hd44780u_qy_2004a.c: 14:   ANSELAbits.ANSA1 = 0;
  6512                           	bcf	(396)^0180h,1	;volatile
  6513  0DFD  108C               	line	15
  6514                           ;LCD_hd44780u_qy_2004a.c: 15:   ANSELAbits.ANSA2 = 0;
  6515                           	bcf	(396)^0180h,2	;volatile
  6516  0DFE  110C               	line	16
  6517                           ;LCD_hd44780u_qy_2004a.c: 16:   ANSELAbits.ANSA3 = 0;
  6518                           	bcf	(396)^0180h,3	;volatile
  6519  0DFF  118C               	line	17
  6520                           ;LCD_hd44780u_qy_2004a.c: 17:   ANSELCbits.ANSC2 = 0;
  6521                           	bcf	(398)^0180h,2	;volatile
  6522  0E00  110E               	line	18
  6523                           ;LCD_hd44780u_qy_2004a.c: 18:   ANSELCbits.ANSC1 = 0;
  6524                           	bcf	(398)^0180h,1	;volatile
  6525  0E01  108E               	line	19
  6526                           ;LCD_hd44780u_qy_2004a.c: 19:   ANSELCbits.ANSC0 = 0;
  6527                           	bcf	(398)^0180h,0	;volatile
  6528  0E02  100E               	line	21
  6529                           ;LCD_hd44780u_qy_2004a.c: 21:   PORTAbits.RA0 = 0;
  6530                           	movlb 0	; select bank0
  6531  0E03  0020               	bcf	(12),0	;volatile
  6532  0E04  100C               	line	22
  6533                           ;LCD_hd44780u_qy_2004a.c: 22:   PORTAbits.RA1 = 0;
  6534                           	bcf	(12),1	;volatile
  6535  0E05  108C               	line	23
  6536                           ;LCD_hd44780u_qy_2004a.c: 23:   PORTAbits.RA2 = 0;
  6537                           	bcf	(12),2	;volatile
  6538  0E06  110C               	line	24
  6539                           ;LCD_hd44780u_qy_2004a.c: 24:   PORTAbits.RA3 = 0;
  6540                           	bcf	(12),3	;volatile
  6541  0E07  118C               	line	25
  6542                           ;LCD_hd44780u_qy_2004a.c: 25:   PORTCbits.RC2=0;
  6543                           	bcf	(14),2	;volatile
  6544  0E08  110E               	line	26
  6545                           ;LCD_hd44780u_qy_2004a.c: 26:   PORTCbits.RC1=0;
  6546                           	bcf	(14),1	;volatile
  6547  0E09  108E               	line	27
  6548                           ;LCD_hd44780u_qy_2004a.c: 27:   PORTCbits.RC0=0;
  6549                           	bcf	(14),0	;volatile
  6550  0E0A  100E               	line	29
  6551                           ;LCD_hd44780u_qy_2004a.c: 29:   TRISCbits.TRISC2 = 0;
  6552                           	movlb 1	; select bank1
  6553  0E0B  0021               	bcf	(142)^080h,2	;volatile
  6554  0E0C  110E               	line	30
  6555                           ;LCD_hd44780u_qy_2004a.c: 30:   TRISCbits.TRISC1 = 0;
  6556                           	bcf	(142)^080h,1	;volatile
  6557  0E0D  108E               	line	31
  6558                           ;LCD_hd44780u_qy_2004a.c: 31:   TRISCbits.TRISC0 = 0;
  6559                           	bcf	(142)^080h,0	;volatile
  6560  0E0E  100E               	line	32
  6561                           ;LCD_hd44780u_qy_2004a.c: 32:   TRISAbits.TRISA0 = 0;
  6562                           	bcf	(140)^080h,0	;volatile
  6563  0E0F  100C               	line	33
  6564                           ;LCD_hd44780u_qy_2004a.c: 33:   TRISAbits.TRISA1 = 0;
  6565                           	bcf	(140)^080h,1	;volatile
  6566  0E10  108C               	line	34
  6567                           ;LCD_hd44780u_qy_2004a.c: 34:   TRISAbits.TRISA2 = 0;
  6568                           	bcf	(140)^080h,2	;volatile
  6569  0E11  110C               	line	35
  6570                           ;LCD_hd44780u_qy_2004a.c: 35:   TRISAbits.TRISA3 = 0;
  6571                           	bcf	(140)^080h,3	;volatile
  6572  0E12  118C               	line	38
  6573                           ;LCD_hd44780u_qy_2004a.c: 38:   PORTCbits.RC2 = 0;
  6574                           	movlb 0	; select bank0
  6575  0E13  0020               	bcf	(14),2	;volatile
  6576  0E14  110E               	line	39
  6577                           ;LCD_hd44780u_qy_2004a.c: 39:   PORTCbits.RC1 = 0;
  6578                           	bcf	(14),1	;volatile
  6579  0E15  108E               	line	40
  6580                           ;LCD_hd44780u_qy_2004a.c: 40:   PORTCbits.RC0 = 0;
  6581                           	bcf	(14),0	;volatile
  6582  0E16  100E               	line	43
  6583                           	
  6584                           l5854:	
  6585  0E17                     ;LCD_hd44780u_qy_2004a.c: 43:   _delay((unsigned long)((15)*(16000000/4000.0)));
  6586                           	opt asmopt_push
  6587                           opt asmopt_off
  6588                           movlw	78
  6589  0E17  304E               	movlb 0	; select bank0
  6590  0E18  0020               movwf	((??_initLCD+0)+0),f
  6591  0E19  00B2               	movlw	235
  6592  0E1A  30EB               u4927:
  6593  0E1B                     decfsz	wreg
  6594  0E1B  0B89               	goto	u4927
  6595  0E1C  2E1B               	decfsz	((??_initLCD+0)+0),f
  6596  0E1D  0BB2               	goto	u4927
  6597  0E1E  2E1B               opt asmopt_pop
  6598                           
  6599                           	line	44
  6600                           	
  6601                           l5856:	
  6602  0E1F                     ;LCD_hd44780u_qy_2004a.c: 44:   setData(0x3);
  6603                           	movlw	low(03h)
  6604  0E1F  3003               	fcall	_setData
  6605  0E20  318B  23C0  318D   	line	45
  6606                           	
  6607                           l5858:	
  6608  0E23                     ;LCD_hd44780u_qy_2004a.c: 45:   _delay((unsigned long)((5)*(16000000/4000.0)));
  6609                           	opt asmopt_push
  6610                           opt asmopt_off
  6611                           movlw	26
  6612  0E23  301A               	movlb 0	; select bank0
  6613  0E24  0020               movwf	((??_initLCD+0)+0),f
  6614  0E25  00B2               	movlw	248
  6615  0E26  30F8               u4937:
  6616  0E27                     decfsz	wreg
  6617  0E27  0B89               	goto	u4937
  6618  0E28  2E27               	decfsz	((??_initLCD+0)+0),f
  6619  0E29  0BB2               	goto	u4937
  6620  0E2A  2E27               	nop
  6621  0E2B  0000               opt asmopt_pop
  6622                           
  6623                           	line	46
  6624                           ;LCD_hd44780u_qy_2004a.c: 46:   setData(0x3);
  6625                           	movlw	low(03h)
  6626  0E2C  3003               	fcall	_setData
  6627  0E2D  318B  23C0  318D   	line	47
  6628                           	
  6629                           l5860:	
  6630  0E30                     ;LCD_hd44780u_qy_2004a.c: 47:   _delay((unsigned long)((150)*(16000000/4000000.0)));
  6631                           	opt asmopt_push
  6632                           opt asmopt_off
  6633                           	movlw	200
  6634  0E30  30C8               u4947:
  6635  0E31                     decfsz	wreg
  6636  0E31  0B89               	goto	u4947
  6637  0E32  2E31               opt asmopt_pop
  6638                           
  6639                           	line	48
  6640                           	
  6641                           l5862:	
  6642  0E33                     ;LCD_hd44780u_qy_2004a.c: 48:   setData(0x3);
  6643                           	movlw	low(03h)
  6644  0E33  3003               	fcall	_setData
  6645  0E34  318B  23C0  318D   	line	49
  6646                           ;LCD_hd44780u_qy_2004a.c: 49:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  6647                           	opt asmopt_push
  6648                           opt asmopt_off
  6649                           	movlw	13
  6650  0E37  300D               u4957:
  6651  0E38                     decfsz	wreg
  6652  0E38  0B89               	goto	u4957
  6653  0E39  2E38               	nop
  6654  0E3A  0000               opt asmopt_pop
  6655                           
  6656                           	line	50
  6657                           	
  6658                           l5864:	
  6659  0E3B                     ;LCD_hd44780u_qy_2004a.c: 50:   setData(0x2);
  6660                           	movlw	low(02h)
  6661  0E3B  3002               	fcall	_setData
  6662  0E3C  318B  23C0  318D   	line	51
  6663                           	
  6664                           l5866:	
  6665  0E3F                     ;LCD_hd44780u_qy_2004a.c: 51:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  6666                           	opt asmopt_push
  6667                           opt asmopt_off
  6668                           	movlw	13
  6669  0E3F  300D               u4967:
  6670  0E40                     decfsz	wreg
  6671  0E40  0B89               	goto	u4967
  6672  0E41  2E40               	nop
  6673  0E42  0000               opt asmopt_pop
  6674                           
  6675                           	line	52
  6676                           ;LCD_hd44780u_qy_2004a.c: 52:   writeInsChk(0x28);
  6677                           	movlw	low(028h)
  6678  0E43  3028               	fcall	_writeInsChk
  6679  0E44  3189  215B  318D   	line	53
  6680                           	
  6681                           l5868:	
  6682  0E47                     ;LCD_hd44780u_qy_2004a.c: 53:   mDisplayOnOffReg = 0x0F;
  6683                           	movlw	low(0Fh)
  6684  0E47  300F               	movlb 0	; select bank0
  6685  0E48  0020               	movwf	(??_initLCD+0)+0
  6686  0E49  00B2               	movf	(??_initLCD+0)+0,w
  6687  0E4A  0832               	movwf	(_mDisplayOnOffReg)
  6688  0E4B  00DD               	line	54
  6689                           	
  6690                           l5870:	
  6691  0E4C                     ;LCD_hd44780u_qy_2004a.c: 54:   mCursorDisplayShiftReg= 0x06;
  6692                           	movlw	low(06h)
  6693  0E4C  3006               	movwf	(??_initLCD+0)+0
  6694  0E4D  00B2               	movf	(??_initLCD+0)+0,w
  6695  0E4E  0832               	movwf	(_mCursorDisplayShiftReg)
  6696  0E4F  00DC               	line	55
  6697                           ;LCD_hd44780u_qy_2004a.c: 55:   writeInsChk(mDisplayOnOffReg);
  6698                           	movf	(_mDisplayOnOffReg),w
  6699  0E50  085D               	fcall	_writeInsChk
  6700  0E51  3189  215B  318D   	line	57
  6701                           ;LCD_hd44780u_qy_2004a.c: 57:   clearDisplay();
  6702                           	fcall	_clearDisplay
  6703  0E54  3189  2107  318D   	line	58
  6704                           ;LCD_hd44780u_qy_2004a.c: 58:   writeInsChk(0x06);
  6705                           	movlw	low(06h)
  6706  0E57  3006               	fcall	_writeInsChk
  6707  0E58  3189  215B  318D   	line	59
  6708                           	
  6709                           l5872:	
  6710  0E5B                     ;LCD_hd44780u_qy_2004a.c: 59:   mWritingPosition=1;
  6711                           	movlb 0	; select bank0
  6712  0E5B  0020               	clrf	(_mWritingPosition)
  6713  0E5C  01DB               	incf	(_mWritingPosition),f
  6714  0E5D  0ADB               	line	61
  6715                           	
  6716                           l267:	
  6717  0E5E                     	return
  6718  0E5E  0008               	opt stack 0
  6719                           GLOBAL	__end_of_initLCD
  6720                           	__end_of_initLCD:
  6721  0E5F                     	signat	_initLCD,89
  6722                           	global	_clearDisplay
  6723                           
  6724 ;; *************** function _clearDisplay *****************
  6725 ;; Defined at:
  6726 ;;		line 324 in file "LCD_hd44780u_qy_2004a.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;		None
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;		None
  6731 ;; Return value:  Size  Location     Type
  6732 ;;                  1    wreg      void 
  6733 ;; Registers used:
  6734 ;;		wreg, status,2, status,0, pclath, cstack
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6744 ;;Total ram usage:        0 bytes
  6745 ;; Hardware stack levels used:    1
  6746 ;; Hardware stack levels required when called:    9
  6747 ;; This function calls:
  6748 ;;		_writeInsChk
  6749 ;; This function is called by:
  6750 ;;		_main
  6751 ;;		_initLCD
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  6755                           	line	324
  6756                           global __ptext9
  6757                           __ptext9:	;psect for function _clearDisplay
  6758  0907                     psect	text9
  6759                           	file	"LCD_hd44780u_qy_2004a.c"
  6760                           	line	324
  6761                           	global	__size_of_clearDisplay
  6762                           	__size_of_clearDisplay	equ	__end_of_clearDisplay-_clearDisplay
  6763  0005                     	
  6764                           _clearDisplay:	
  6765  0907                     ;incstack = 0
  6766                           	opt	stack 5
  6767                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  6768                           	line	326
  6769                           	
  6770                           l5604:	
  6771  0907                     ;LCD_hd44780u_qy_2004a.c: 326:   writeInsChk(0x01);
  6772                           	movlw	low(01h)
  6773  0907  3001               	fcall	_writeInsChk
  6774  0908  3189  215B  3189   	line	327
  6775                           	
  6776                           l383:	
  6777  090B                     	return
  6778  090B  0008               	opt stack 0
  6779                           GLOBAL	__end_of_clearDisplay
  6780                           	__end_of_clearDisplay:
  6781  090C                     	signat	_clearDisplay,89
  6782                           	global	_writeInsChk
  6783                           
  6784 ;; *************** function _writeInsChk *****************
  6785 ;; Defined at:
  6786 ;;		line 211 in file "LCD_hd44780u_qy_2004a.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;  iOpCode         1    wreg     unsigned char 
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;  iOpCode         1   17[BANK0 ] unsigned char 
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  1    wreg      void 
  6793 ;; Registers used:
  6794 ;;		wreg, status,2, status,0, pclath, cstack
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6801 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6803 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6804 ;;Total ram usage:        1 bytes
  6805 ;; Hardware stack levels used:    1
  6806 ;; Hardware stack levels required when called:    8
  6807 ;; This function calls:
  6808 ;;		_waitLCDBusy
  6809 ;;		_writeInsNoChk
  6810 ;; This function is called by:
  6811 ;;		_initLCD
  6812 ;;		_powerOnLcd
  6813 ;;		_setNotBlinkingCursor
  6814 ;;		_setCursorOff
  6815 ;;		_clearDisplay
  6816 ;;		_moveCursorToHome
  6817 ;;		_powerOffLcd
  6818 ;;		_setBlinkingCursor
  6819 ;;		_setCursorOn
  6820 ;;		_setCursorMovingLeft
  6821 ;;		_setCursorMovingRight
  6822 ;;		_setDisplayMovingRight
  6823 ;;		_setDisplayMovingLeft
  6824 ;;		_moveCursorRight
  6825 ;;		_moveCursorLeft
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  6829                           	line	211
  6830                           global __ptext10
  6831                           __ptext10:	;psect for function _writeInsChk
  6832  095B                     psect	text10
  6833                           	file	"LCD_hd44780u_qy_2004a.c"
  6834                           	line	211
  6835                           	global	__size_of_writeInsChk
  6836                           	__size_of_writeInsChk	equ	__end_of_writeInsChk-_writeInsChk
  6837  000B                     	
  6838                           _writeInsChk:	
  6839  095B                     ;incstack = 0
  6840                           	opt	stack 6
  6841                           ; Regs used in _writeInsChk: [wreg+status,2+status,0+pclath+cstack]
  6842                           ;writeInsChk@iOpCode stored from wreg
  6843                           	movlb 0	; select bank0
  6844  095B  0020               	movwf	(writeInsChk@iOpCode)
  6845  095C  00B1               	line	213
  6846                           	
  6847                           l5440:	
  6848  095D                     ;LCD_hd44780u_qy_2004a.c: 211: void writeInsChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 2
                                 12: {;LCD_hd44780u_qy_2004a.c: 213:   waitLCDBusy();
  6849                           	fcall	_waitLCDBusy
  6850  095D  318A  22A0  3189   	line	214
  6851                           ;LCD_hd44780u_qy_2004a.c: 214:   writeInsNoChk(iOpCode);
  6852                           	movlb 0	; select bank0
  6853  0960  0020               	movf	(writeInsChk@iOpCode),w
  6854  0961  0831               	fcall	_writeInsNoChk
  6855  0962  3189  21C4  3189   	line	215
  6856                           	
  6857                           l329:	
  6858  0965                     	return
  6859  0965  0008               	opt stack 0
  6860                           GLOBAL	__end_of_writeInsChk
  6861                           	__end_of_writeInsChk:
  6862  0966                     	signat	_writeInsChk,4217
  6863                           	global	_writeInsNoChk
  6864                           
  6865 ;; *************** function _writeInsNoChk *****************
  6866 ;; Defined at:
  6867 ;;		line 217 in file "LCD_hd44780u_qy_2004a.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;  iOpCode         1    wreg     unsigned char 
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;  iOpCode         1   16[BANK0 ] unsigned char 
  6872 ;; Return value:  Size  Location     Type
  6873 ;;                  1    wreg      void 
  6874 ;; Registers used:
  6875 ;;		wreg, status,2, status,0, pclath, cstack
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6882 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6883 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6884 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6885 ;;Total ram usage:        2 bytes
  6886 ;; Hardware stack levels used:    1
  6887 ;; Hardware stack levels required when called:    7
  6888 ;; This function calls:
  6889 ;;		_SetToSendDataToLCD
  6890 ;;		_setData
  6891 ;; This function is called by:
  6892 ;;		_writeInsChk
  6893 ;; This function uses a non-reentrant model
  6894 ;;
  6895                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  6896                           	line	217
  6897                           global __ptext11
  6898                           __ptext11:	;psect for function _writeInsNoChk
  6899  09C4                     psect	text11
  6900                           	file	"LCD_hd44780u_qy_2004a.c"
  6901                           	line	217
  6902                           	global	__size_of_writeInsNoChk
  6903                           	__size_of_writeInsNoChk	equ	__end_of_writeInsNoChk-_writeInsNoChk
  6904  0018                     	
  6905                           _writeInsNoChk:	
  6906  09C4                     ;incstack = 0
  6907                           	opt	stack 6
  6908                           ; Regs used in _writeInsNoChk: [wreg+status,2+status,0+pclath+cstack]
  6909                           ;writeInsNoChk@iOpCode stored from wreg
  6910                           	movlb 0	; select bank0
  6911  09C4  0020               	movwf	(writeInsNoChk@iOpCode)
  6912  09C5  00B0               	line	219
  6913                           	
  6914                           l5392:	
  6915  09C6                     ;LCD_hd44780u_qy_2004a.c: 217: void writeInsNoChk(char iOpCode);LCD_hd44780u_qy_2004a.c:
                                  218: {;LCD_hd44780u_qy_2004a.c: 219:   SetToSendDataToLCD();
  6916                           	fcall	_SetToSendDataToLCD
  6917  09C6  3189  2118  3189   	line	220
  6918                           	
  6919                           l5394:	
  6920  09C9                     ;LCD_hd44780u_qy_2004a.c: 220:   PORTCbits.RC2 = 0;
  6921                           	movlb 0	; select bank0
  6922  09C9  0020               	bcf	(14),2	;volatile
  6923  09CA  110E               	line	221
  6924                           	
  6925                           l5396:	
  6926  09CB                     ;LCD_hd44780u_qy_2004a.c: 221:   PORTCbits.RC1 = 0;
  6927                           	bcf	(14),1	;volatile
  6928  09CB  108E               	line	222
  6929                           	
  6930                           l5398:	
  6931  09CC                     ;LCD_hd44780u_qy_2004a.c: 222:   setData(iOpCode >> 4);
  6932                           	movf	(writeInsNoChk@iOpCode),w
  6933  09CC  0830               	movwf	(??_writeInsNoChk+0)+0
  6934  09CD  00AF               	movlw	04h
  6935  09CE  3004               u3625:
  6936  09CF                     	lsrf	(??_writeInsNoChk+0)+0,f
  6937  09CF  36AF               	decfsz	wreg,f
  6938  09D0  0B89               	goto	u3625
  6939  09D1  29CF               	movf	0+(??_writeInsNoChk+0)+0,w
  6940  09D2  082F               	fcall	_setData
  6941  09D3  318B  23C0  3189   	line	223
  6942                           	
  6943                           l5400:	
  6944  09D6                     ;LCD_hd44780u_qy_2004a.c: 223:   setData(iOpCode);
  6945                           	movlb 0	; select bank0
  6946  09D6  0020               	movf	(writeInsNoChk@iOpCode),w
  6947  09D7  0830               	fcall	_setData
  6948  09D8  318B  23C0  3189   	line	224
  6949                           	
  6950                           l332:	
  6951  09DB                     	return
  6952  09DB  0008               	opt stack 0
  6953                           GLOBAL	__end_of_writeInsNoChk
  6954                           	__end_of_writeInsNoChk:
  6955  09DC                     	signat	_writeInsNoChk,4217
  6956                           	global	_PrintLog
  6957                           
  6958 ;; *************** function _PrintLog *****************
  6959 ;; Defined at:
  6960 ;;		line 65 in file "161518_temp_main.c"
  6961 ;; Parameters:    Size  Location     Type
  6962 ;;  iText           1    wreg     PTR unsigned char 
  6963 ;;		 -> wInterruptText(75), 
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;  iText           1   33[BANK0 ] PTR unsigned char 
  6966 ;;		 -> wInterruptText(75), 
  6967 ;;  wInterruptTe    1   32[BANK0 ] unsigned char 
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  1    wreg      void 
  6970 ;; Registers used:
  6971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6978 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6979 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6980 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6981 ;;Total ram usage:        4 bytes
  6982 ;; Hardware stack levels used:    1
  6983 ;; Hardware stack levels required when called:   11
  6984 ;; This function calls:
  6985 ;;		_lcdWriteText
  6986 ;;		_memset
  6987 ;;		_strlen
  6988 ;; This function is called by:
  6989 ;;		_main
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  6993                           	file	"161518_temp_main.c"
  6994                           	line	65
  6995                           global __ptext12
  6996                           __ptext12:	;psect for function _PrintLog
  6997  0AF4                     psect	text12
  6998                           	file	"161518_temp_main.c"
  6999                           	line	65
  7000                           	global	__size_of_PrintLog
  7001                           	__size_of_PrintLog	equ	__end_of_PrintLog-_PrintLog
  7002  002B                     	
  7003                           _PrintLog:	
  7004  0AF4                     ;incstack = 0
  7005                           	opt	stack 4
  7006                           ; Regs used in _PrintLog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7007                           ;PrintLog@iText stored from wreg
  7008                           	movlb 0	; select bank0
  7009  0AF4  0020               	movwf	(PrintLog@iText)
  7010  0AF5  00C1               	line	66
  7011                           	
  7012                           l5828:	
  7013  0AF6                     	movf	(PrintLog@iText),w
  7014  0AF6  0841               	movwf	(strlen@s)
  7015  0AF7  00AC               	movlw	0x1
  7016  0AF8  3001               
  7017                           	movwf	(strlen@s+1)
  7018  0AF9  00AD               	fcall	_strlen
  7019  0AFA  3189  21FF  318A   	movlb 0	; select bank0
  7020  0AFD  0020               	movf	(0+(?_strlen)),w
  7021  0AFE  082C               	movwf	(??_PrintLog+0)+0
  7022  0AFF  00BE               	movf	(??_PrintLog+0)+0,w
  7023  0B00  083E               	movwf	(PrintLog@wInterruptTextLen)
  7024  0B01  00C0               	line	68
  7025                           	
  7026                           l5830:	
  7027  0B02                     	movf	((PrintLog@wInterruptTextLen)),w
  7028  0B02  0840               	btfsc	status,2
  7029  0B03  1903               	goto	u4151
  7030  0B04  2B06               	goto	u4150
  7031  0B05  2B07               u4151:
  7032  0B06                     	goto	l153
  7033  0B06  2B1E               u4150:
  7034  0B07                     	line	69
  7035                           	
  7036                           l5832:	
  7037  0B07                     	movf	(PrintLog@iText),w
  7038  0B07  0841               	movwf	(lcdWriteText@iText)
  7039  0B08  00B8               	movlw	0x1
  7040  0B09  3001               
  7041                           	movwf	(lcdWriteText@iText+1)
  7042  0B0A  00B9               	fcall	_lcdWriteText
  7043  0B0B  318A  22CA  318A   	line	70
  7044                           	
  7045                           l5834:	
  7046  0B0E                     	movlw	0
  7047  0B0E  3000               	movlb 0	; select bank0
  7048  0B0F  0020               	movwf	(memset@c)
  7049  0B10  00AC               	movwf	(memset@c+1)
  7050  0B11  00AD               	movf	(PrintLog@wInterruptTextLen),w
  7051  0B12  0840               	movwf	(??_PrintLog+0)+0
  7052  0B13  00BE               	clrf	(??_PrintLog+0)+0+1
  7053  0B14  01BF               	movf	0+(??_PrintLog+0)+0,w
  7054  0B15  083E               	movwf	(memset@n)
  7055  0B16  00AE               	movf	1+(??_PrintLog+0)+0,w
  7056  0B17  083F               	movwf	(memset@n+1)
  7057  0B18  00AF               	movf	(PrintLog@iText),w
  7058  0B19  0841               	fcall	_memset
  7059  0B1A  3186  26EE  318A   	goto	l153
  7060  0B1D  2B1E               	line	71
  7061                           	
  7062                           l152:	
  7063  0B1E                     	line	72
  7064                           	
  7065                           l153:	
  7066  0B1E                     	return
  7067  0B1E  0008               	opt stack 0
  7068                           GLOBAL	__end_of_PrintLog
  7069                           	__end_of_PrintLog:
  7070  0B1F                     	signat	_PrintLog,4217
  7071                           	global	_memset
  7072                           
  7073 ;; *************** function _memset *****************
  7074 ;; Defined at:
  7075 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;  dest            1    wreg     PTR void 
  7078 ;;		 -> wI2CRxBuffer(20), wI2CTxBuffer(20), wInterruptText(75), 
  7079 ;;  c               2   12[BANK0 ] int 
  7080 ;;  n               2   14[BANK0 ] unsigned int 
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;  dest            1   20[BANK0 ] PTR void 
  7083 ;;		 -> wI2CRxBuffer(20), wI2CTxBuffer(20), wInterruptText(75), 
  7084 ;;  k               2   18[BANK0 ] unsigned int 
  7085 ;;  s               1   21[BANK0 ] PTR unsigned char 
  7086 ;;		 -> wI2CRxBuffer(20), wI2CTxBuffer(20), wInterruptText(75), 
  7087 ;; Return value:  Size  Location     Type
  7088 ;;                  1    wreg      PTR void 
  7089 ;; Registers used:
  7090 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7091 ;; Tracked objects:
  7092 ;;		On entry : 0/0
  7093 ;;		On exit  : 0/0
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7096 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  7097 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  7098 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7099 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  7100 ;;Total ram usage:       10 bytes
  7101 ;; Hardware stack levels used:    1
  7102 ;; Hardware stack levels required when called:    6
  7103 ;; This function calls:
  7104 ;;		Nothing
  7105 ;; This function is called by:
  7106 ;;		_PrintLog
  7107 ;;		_main
  7108 ;;		_I2CInit
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           psect	text13,local,class=CODE,delta=2,merge=1,group=2
  7112                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  7113                           	line	4
  7114                           global __ptext13
  7115                           __ptext13:	;psect for function _memset
  7116  06EE                     psect	text13
  7117                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  7118                           	line	4
  7119                           	global	__size_of_memset
  7120                           	__size_of_memset	equ	__end_of_memset-_memset
  7121  00B4                     	
  7122                           _memset:	
  7123  06EE                     ;incstack = 0
  7124                           	opt	stack 9
  7125                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7126                           ;memset@dest stored from wreg
  7127                           	movlb 0	; select bank0
  7128  06EE  0020               	movwf	(memset@dest)
  7129  06EF  00B4               	line	6
  7130                           	
  7131                           l5558:	
  7132  06F0                     	movf	(memset@dest),w
  7133  06F0  0834               	movwf	(??_memset+0)+0
  7134  06F1  00B0               	movf	(??_memset+0)+0,w
  7135  06F2  0830               	movwf	(memset@s)
  7136  06F3  00B5               	line	13
  7137                           	
  7138                           l5560:	
  7139  06F4                     	movf	((memset@n)),w
  7140  06F4  082E               iorwf	((memset@n+1)),w
  7141  06F5  042F               	btfss	status,2
  7142  06F6  1D03               	goto	u3771
  7143  06F7  2EF9               	goto	u3770
  7144  06F8  2EFA               u3771:
  7145  06F9                     	goto	l5564
  7146  06F9  2EFC               u3770:
  7147  06FA                     	goto	l1369
  7148  06FA  2FA1               	
  7149                           l5562:	
  7150  06FB                     ;	Return value of _memset is never used
  7151                           	goto	l1369
  7152  06FB  2FA1               	
  7153                           l1368:	
  7154  06FC                     	line	14
  7155                           	
  7156                           l5564:	
  7157  06FC                     	movf	(memset@c),w
  7158  06FC  082C               	movwf	(??_memset+0)+0
  7159  06FD  00B0               	movf	(memset@s),w
  7160  06FE  0835               	movwf	fsr1l
  7161  06FF  0086               	movlw 1	; select bank2/3
  7162  0700  3001               	movwf fsr1h	
  7163  0701  0087               	
  7164                           	movf	(??_memset+0)+0,w
  7165  0702  0830               	movwf	indf1
  7166  0703  0081               	line	15
  7167                           	
  7168                           l5566:	
  7169  0704                     	movf	(memset@c),w
  7170  0704  082C               	movwf	(??_memset+0)+0
  7171  0705  00B0               	movf	(memset@n),w
  7172  0706  082E               	addlw	0FFh
  7173  0707  3EFF               	addwf	(memset@s),w
  7174  0708  0735               	movwf	(??_memset+1)+0
  7175  0709  00B1               	movf	0+(??_memset+1)+0,w
  7176  070A  0831               	movwf	fsr1l
  7177  070B  0086               	movlw 1	; select bank2/3
  7178  070C  3001               	movwf fsr1h	
  7179  070D  0087               	
  7180                           	movf	(??_memset+0)+0,w
  7181  070E  0830               	movwf	indf1
  7182  070F  0081               	line	16
  7183                           	
  7184                           l5568:	
  7185  0710                     	movlw	0
  7186  0710  3000               	subwf	(memset@n+1),w
  7187  0711  022F               	movlw	03h
  7188  0712  3003               	skipnz
  7189  0713  1903               	subwf	(memset@n),w
  7190  0714  022E               	skipnc
  7191  0715  1803               	goto	u3781
  7192  0716  2F18               	goto	u3780
  7193  0717  2F19               u3781:
  7194  0718                     	goto	l5572
  7195  0718  2F1B               u3780:
  7196  0719                     	goto	l1369
  7197  0719  2FA1               	
  7198                           l5570:	
  7199  071A                     ;	Return value of _memset is never used
  7200                           	goto	l1369
  7201  071A  2FA1               	
  7202                           l1370:	
  7203  071B                     	line	17
  7204                           	
  7205                           l5572:	
  7206  071B                     	movf	(memset@c),w
  7207  071B  082C               	movwf	(??_memset+0)+0
  7208  071C  00B0               	incf	(memset@s),w
  7209  071D  0A35               	movwf	fsr1l
  7210  071E  0086               	movlw 1	; select bank2/3
  7211  071F  3001               	movwf fsr1h	
  7212  0720  0087               	
  7213                           	movf	(??_memset+0)+0,w
  7214  0721  0830               	movwf	indf1
  7215  0722  0081               	line	18
  7216                           	
  7217                           l5574:	
  7218  0723                     	movf	(memset@c),w
  7219  0723  082C               	movwf	(??_memset+0)+0
  7220  0724  00B0               	movf	(memset@s),w
  7221  0725  0835               	addlw	02h
  7222  0726  3E02               	movwf	fsr1l
  7223  0727  0086               	movlw 1	; select bank2/3
  7224  0728  3001               	movwf fsr1h	
  7225  0729  0087               	
  7226                           	movf	(??_memset+0)+0,w
  7227  072A  0830               	movwf	indf1
  7228  072B  0081               	line	19
  7229                           	
  7230                           l5576:	
  7231  072C                     	movf	(memset@c),w
  7232  072C  082C               	movwf	(??_memset+0)+0
  7233  072D  00B0               	movf	(memset@n),w
  7234  072E  082E               	addlw	0FEh
  7235  072F  3EFE               	addwf	(memset@s),w
  7236  0730  0735               	movwf	(??_memset+1)+0
  7237  0731  00B1               	movf	0+(??_memset+1)+0,w
  7238  0732  0831               	movwf	fsr1l
  7239  0733  0086               	movlw 1	; select bank2/3
  7240  0734  3001               	movwf fsr1h	
  7241  0735  0087               	
  7242                           	movf	(??_memset+0)+0,w
  7243  0736  0830               	movwf	indf1
  7244  0737  0081               	line	20
  7245                           	
  7246                           l5578:	
  7247  0738                     	movf	(memset@c),w
  7248  0738  082C               	movwf	(??_memset+0)+0
  7249  0739  00B0               	movf	(memset@n),w
  7250  073A  082E               	addlw	0FDh
  7251  073B  3EFD               	addwf	(memset@s),w
  7252  073C  0735               	movwf	(??_memset+1)+0
  7253  073D  00B1               	movf	0+(??_memset+1)+0,w
  7254  073E  0831               	movwf	fsr1l
  7255  073F  0086               	movlw 1	; select bank2/3
  7256  0740  3001               	movwf fsr1h	
  7257  0741  0087               	
  7258                           	movf	(??_memset+0)+0,w
  7259  0742  0830               	movwf	indf1
  7260  0743  0081               	line	21
  7261                           	
  7262                           l5580:	
  7263  0744                     	movlw	0
  7264  0744  3000               	subwf	(memset@n+1),w
  7265  0745  022F               	movlw	07h
  7266  0746  3007               	skipnz
  7267  0747  1903               	subwf	(memset@n),w
  7268  0748  022E               	skipnc
  7269  0749  1803               	goto	u3791
  7270  074A  2F4C               	goto	u3790
  7271  074B  2F4D               u3791:
  7272  074C                     	goto	l5584
  7273  074C  2F4F               u3790:
  7274  074D                     	goto	l1369
  7275  074D  2FA1               	
  7276                           l5582:	
  7277  074E                     ;	Return value of _memset is never used
  7278                           	goto	l1369
  7279  074E  2FA1               	
  7280                           l1371:	
  7281  074F                     	line	22
  7282                           	
  7283                           l5584:	
  7284  074F                     	movf	(memset@c),w
  7285  074F  082C               	movwf	(??_memset+0)+0
  7286  0750  00B0               	movf	(memset@s),w
  7287  0751  0835               	addlw	03h
  7288  0752  3E03               	movwf	fsr1l
  7289  0753  0086               	movlw 1	; select bank2/3
  7290  0754  3001               	movwf fsr1h	
  7291  0755  0087               	
  7292                           	movf	(??_memset+0)+0,w
  7293  0756  0830               	movwf	indf1
  7294  0757  0081               	line	23
  7295                           	movf	(memset@c),w
  7296  0758  082C               	movwf	(??_memset+0)+0
  7297  0759  00B0               	movf	(memset@n),w
  7298  075A  082E               	addlw	0FCh
  7299  075B  3EFC               	addwf	(memset@s),w
  7300  075C  0735               	movwf	(??_memset+1)+0
  7301  075D  00B1               	movf	0+(??_memset+1)+0,w
  7302  075E  0831               	movwf	fsr1l
  7303  075F  0086               	movlw 1	; select bank2/3
  7304  0760  3001               	movwf fsr1h	
  7305  0761  0087               	
  7306                           	movf	(??_memset+0)+0,w
  7307  0762  0830               	movwf	indf1
  7308  0763  0081               	line	24
  7309                           	
  7310                           l5586:	
  7311  0764                     	movlw	0
  7312  0764  3000               	subwf	(memset@n+1),w
  7313  0765  022F               	movlw	09h
  7314  0766  3009               	skipnz
  7315  0767  1903               	subwf	(memset@n),w
  7316  0768  022E               	skipnc
  7317  0769  1803               	goto	u3801
  7318  076A  2F6C               	goto	u3800
  7319  076B  2F6D               u3801:
  7320  076C                     	goto	l5590
  7321  076C  2F6F               u3800:
  7322  076D                     	goto	l1369
  7323  076D  2FA1               	
  7324                           l5588:	
  7325  076E                     ;	Return value of _memset is never used
  7326                           	goto	l1369
  7327  076E  2FA1               	
  7328                           l1372:	
  7329  076F                     	line	31
  7330                           	
  7331                           l5590:	
  7332  076F                     	comf	(memset@s),w
  7333  076F  0935               	movwf	(??_memset+0)+0
  7334  0770  00B0               	comf	(memset@s+1),w
  7335  0771  0936               	movwf	((??_memset+0)+0+1)
  7336  0772  00B1               	incf	(??_memset+0)+0,f
  7337  0773  0AB0               	skipnz
  7338  0774  1903               	incf	((??_memset+0)+0+1),f
  7339  0775  0AB1               	movlw	0
  7340  0776  3000               	andwf	0+(??_memset+0)+0,w
  7341  0777  0530               	movwf	(memset@k)
  7342  0778  00B2               	movlw	0
  7343  0779  3000               	andwf	1+(??_memset+0)+0,w
  7344  077A  0531               	movwf	1+(memset@k)
  7345  077B  00B3               	line	32
  7346                           	movf	(memset@k),w
  7347  077C  0832               	movwf	(??_memset+0)+0
  7348  077D  00B0               	movf	(??_memset+0)+0,w
  7349  077E  0830               	addwf	(memset@s),f
  7350  077F  07B5               	line	33
  7351                           	
  7352                           l5592:	
  7353  0780                     	movf	(memset@k),w
  7354  0780  0832               	subwf	(memset@n),f
  7355  0781  02AE               	movf	(memset@k+1),w
  7356  0782  0833               	subwfb	(memset@n+1),f
  7357  0783  3BAF               	line	34
  7358                           	
  7359                           l5594:	
  7360  0784                     	movlw	0FCh
  7361  0784  30FC               	andwf	(memset@n),f
  7362  0785  05AE               	movlw	0FFh
  7363  0786  30FF               	andwf	(memset@n+1),f
  7364  0787  05AF               	line	86
  7365                           	goto	l5602
  7366  0788  2F9A               	
  7367                           l1374:	
  7368  0789                     	
  7369                           l5596:	
  7370  0789                     	movf	(memset@c),w
  7371  0789  082C               	movwf	(??_memset+0)+0
  7372  078A  00B0               	movf	(memset@s),w
  7373  078B  0835               	movwf	fsr1l
  7374  078C  0086               	movlw 1	; select bank2/3
  7375  078D  3001               	movwf fsr1h	
  7376  078E  0087               	
  7377                           	movf	(??_memset+0)+0,w
  7378  078F  0830               	movwf	indf1
  7379  0790  0081               	
  7380                           l5598:	
  7381  0791                     	movlw	01h
  7382  0791  3001               	subwf	(memset@n),f
  7383  0792  02AE               	movlw	0
  7384  0793  3000               	subwfb	(memset@n+1),f
  7385  0794  3BAF               	
  7386                           l5600:	
  7387  0795                     	movlw	low(01h)
  7388  0795  3001               	movwf	(??_memset+0)+0
  7389  0796  00B0               	movf	(??_memset+0)+0,w
  7390  0797  0830               	addwf	(memset@s),f
  7391  0798  07B5               	goto	l5602
  7392  0799  2F9A               	
  7393                           l1373:	
  7394  079A                     	
  7395                           l5602:	
  7396  079A                     	movf	((memset@n)),w
  7397  079A  082E               iorwf	((memset@n+1)),w
  7398  079B  042F               	btfss	status,2
  7399  079C  1D03               	goto	u3811
  7400  079D  2F9F               	goto	u3810
  7401  079E  2FA0               u3811:
  7402  079F                     	goto	l5596
  7403  079F  2F89               u3810:
  7404  07A0                     	goto	l1369
  7405  07A0  2FA1               	
  7406                           l1375:	
  7407  07A1                     	line	90
  7408                           ;	Return value of _memset is never used
  7409                           	
  7410                           l1369:	
  7411  07A1                     	return
  7412  07A1  0008               	opt stack 0
  7413                           GLOBAL	__end_of_memset
  7414                           	__end_of_memset:
  7415  07A2                     	signat	_memset,12409
  7416                           	global	_lcdWriteText
  7417                           
  7418 ;; *************** function _lcdWriteText *****************
  7419 ;; Defined at:
  7420 ;;		line 63 in file "LCD_hd44780u_qy_2004a.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;  iText           2   24[BANK0 ] PTR unsigned char 
  7423 ;;		 -> Esp8266Entrypoint@wText(3), Esp8266Entrypoint@wReturnNumber(4), STR_39(4), STR_36(10), 
  7424 ;;		 -> STR_34(4), STR_10(14), NULL(0), myint@wText(3), 
  7425 ;;		 -> STR_7(16), STR_6(17), STR_5(17), STR_4(17), 
  7426 ;;		 -> STR_3(16), main@wReadout(20), STR_2(17), STR_1(16), 
  7427 ;;		 -> wInterruptText(75), 
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;  wCharReading    1   29[BANK0 ] unsigned char 
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  1    wreg      void 
  7432 ;; Registers used:
  7433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7439 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7440 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7441 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  7442 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  7443 ;;Total ram usage:        6 bytes
  7444 ;; Hardware stack levels used:    1
  7445 ;; Hardware stack levels required when called:   10
  7446 ;; This function calls:
  7447 ;;		_writeTxtChk
  7448 ;; This function is called by:
  7449 ;;		_PrintLog
  7450 ;;		_main
  7451 ;;		_Esp8266Init
  7452 ;;		_Esp8266Entrypoint
  7453 ;; This function uses a non-reentrant model
  7454 ;;
  7455                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  7456                           	file	"LCD_hd44780u_qy_2004a.c"
  7457                           	line	63
  7458                           global __ptext14
  7459                           __ptext14:	;psect for function _lcdWriteText
  7460  0ACA                     psect	text14
  7461                           	file	"LCD_hd44780u_qy_2004a.c"
  7462                           	line	63
  7463                           	global	__size_of_lcdWriteText
  7464                           	__size_of_lcdWriteText	equ	__end_of_lcdWriteText-_lcdWriteText
  7465  002A                     	
  7466                           _lcdWriteText:	
  7467  0ACA                     ;incstack = 0
  7468                           	opt	stack 5
  7469                           ; Regs used in _lcdWriteText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7470                           	line	65
  7471                           	
  7472                           l5550:	
  7473  0ACA                     ;LCD_hd44780u_qy_2004a.c: 63: void lcdWriteText(char *iText);LCD_hd44780u_qy_2004a.c: 64
                                 :  {;LCD_hd44780u_qy_2004a.c: 65:   unsigned char wCharReadingPos = 0;
  7474                           	movlb 0	; select bank0
  7475  0ACA  0020               	clrf	(lcdWriteText@wCharReadingPos)
  7476  0ACB  01BD               	line	66
  7477                           ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
  7478                           	goto	l5556
  7479  0ACC  2AE2               	
  7480                           l271:	
  7481  0ACD                     	line	68
  7482                           	
  7483                           l5552:	
  7484  0ACD                     ;LCD_hd44780u_qy_2004a.c: 67:   {;LCD_hd44780u_qy_2004a.c: 68:     writeTxtChk(iText[wCh
                                 arReadingPos]);
  7485                           	movf	(lcdWriteText@iText+1),w
  7486  0ACD  0839               	movwf	(??_lcdWriteText+0)+0+1
  7487  0ACE  00BB               	movf	(lcdWriteText@iText),w
  7488  0ACF  0838               	movwf	(??_lcdWriteText+0)+0
  7489  0AD0  00BA               	movf	(lcdWriteText@wCharReadingPos),w
  7490  0AD1  083D               	addwf	(??_lcdWriteText+0)+0,w
  7491  0AD2  073A               	movwf	fsr0l
  7492  0AD3  0084               	movf	(??_lcdWriteText+0)+1,w
  7493  0AD4  083B               	skipnc
  7494  0AD5  1803               	incf	(??_lcdWriteText+0)+1,w
  7495  0AD6  0A3B               	movwf	fsr0h
  7496  0AD7  0085               
  7497                           	movf	indf0,w ;code access
  7498  0AD8  0800               	fcall	_writeTxtChk
  7499  0AD9  318F  2761  318A   	line	69
  7500                           	
  7501                           l5554:	
  7502  0ADC                     ;LCD_hd44780u_qy_2004a.c: 69:     wCharReadingPos++;
  7503                           	movlw	low(01h)
  7504  0ADC  3001               	movlb 0	; select bank0
  7505  0ADD  0020               	movwf	(??_lcdWriteText+0)+0
  7506  0ADE  00BA               	movf	(??_lcdWriteText+0)+0,w
  7507  0ADF  083A               	addwf	(lcdWriteText@wCharReadingPos),f
  7508  0AE0  07BD               	goto	l5556
  7509  0AE1  2AE2               	line	70
  7510                           ;LCD_hd44780u_qy_2004a.c: 70:   }
  7511                           	
  7512                           l270:	
  7513  0AE2                     	line	66
  7514                           	
  7515                           l5556:	
  7516  0AE2                     ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
  7517                           	movf	(lcdWriteText@iText+1),w
  7518  0AE2  0839               	movwf	(??_lcdWriteText+0)+0+1
  7519  0AE3  00BB               	movf	(lcdWriteText@iText),w
  7520  0AE4  0838               	movwf	(??_lcdWriteText+0)+0
  7521  0AE5  00BA               	movf	(lcdWriteText@wCharReadingPos),w
  7522  0AE6  083D               	addwf	(??_lcdWriteText+0)+0,w
  7523  0AE7  073A               	movwf	fsr0l
  7524  0AE8  0084               	movf	(??_lcdWriteText+0)+1,w
  7525  0AE9  083B               	skipnc
  7526  0AEA  1803               	incf	(??_lcdWriteText+0)+1,w
  7527  0AEB  0A3B               	movwf	fsr0h
  7528  0AEC  0085               
  7529                           	moviw	fsr0++
  7530  0AED  0012               	btfss	status,2
  7531  0AEE  1D03               	goto	u3761
  7532  0AEF  2AF1               	goto	u3760
  7533  0AF0  2AF2               u3761:
  7534  0AF1                     	goto	l5552
  7535  0AF1  2ACD               u3760:
  7536  0AF2                     	goto	l273
  7537  0AF2  2AF3               	
  7538                           l272:	
  7539  0AF3                     	line	72
  7540                           	
  7541                           l273:	
  7542  0AF3                     	return
  7543  0AF3  0008               	opt stack 0
  7544                           GLOBAL	__end_of_lcdWriteText
  7545                           	__end_of_lcdWriteText:
  7546  0AF4                     	signat	_lcdWriteText,4217
  7547                           	global	_writeTxtChk
  7548                           
  7549 ;; *************** function _writeTxtChk *****************
  7550 ;; Defined at:
  7551 ;;		line 154 in file "LCD_hd44780u_qy_2004a.c"
  7552 ;; Parameters:    Size  Location     Type
  7553 ;;  iOpCode         1    wreg     unsigned char 
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;  iOpCode         1   23[BANK0 ] unsigned char 
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  1    wreg      void 
  7558 ;; Registers used:
  7559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7566 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7567 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7568 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  7569 ;;Total ram usage:        3 bytes
  7570 ;; Hardware stack levels used:    1
  7571 ;; Hardware stack levels required when called:    9
  7572 ;; This function calls:
  7573 ;;		_SetToSendDataToLCD
  7574 ;;		_setCursorPosition
  7575 ;;		_setData
  7576 ;;		_waitLCDBusy
  7577 ;; This function is called by:
  7578 ;;		_lcdWriteText
  7579 ;;		_lcdWriteAllText
  7580 ;;		_lcdWriteRotaryBuffer
  7581 ;;		_lcdWriteRotText
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  7585                           	line	154
  7586                           global __ptext15
  7587                           __ptext15:	;psect for function _writeTxtChk
  7588  0F61                     psect	text15
  7589                           	file	"LCD_hd44780u_qy_2004a.c"
  7590                           	line	154
  7591                           	global	__size_of_writeTxtChk
  7592                           	__size_of_writeTxtChk	equ	__end_of_writeTxtChk-_writeTxtChk
  7593  009F                     	
  7594                           _writeTxtChk:	
  7595  0F61                     ;incstack = 0
  7596                           	opt	stack 5
  7597                           ; Regs used in _writeTxtChk: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7598                           ;writeTxtChk@iOpCode stored from wreg
  7599                           	movlb 0	; select bank0
  7600  0F61  0020               	movwf	(writeTxtChk@iOpCode)
  7601  0F62  00B7               	line	156
  7602                           	
  7603                           l5442:	
  7604  0F63                     ;LCD_hd44780u_qy_2004a.c: 154: void writeTxtChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 55: {;LCD_hd44780u_qy_2004a.c: 156:     if(iOpCode == '\r')
  7605                           		movlw	13
  7606  0F63  300D               	xorwf	((writeTxtChk@iOpCode)),w
  7607  0F64  0637               	btfss	status,2
  7608  0F65  1D03               	goto	u3671
  7609  0F66  2F68               	goto	u3670
  7610  0F67  2F69               u3671:
  7611  0F68                     	goto	l5446
  7612  0F68  2F6B               u3670:
  7613  0F69                     	goto	l312
  7614  0F69  2FFF               	line	158
  7615                           	
  7616                           l5444:	
  7617  0F6A                     ;LCD_hd44780u_qy_2004a.c: 157:     {;LCD_hd44780u_qy_2004a.c: 158:       return;
  7618                           	goto	l312
  7619  0F6A  2FFF               	line	159
  7620                           ;LCD_hd44780u_qy_2004a.c: 159:     }
  7621                           	
  7622                           l311:	
  7623  0F6B                     	line	160
  7624                           	
  7625                           l5446:	
  7626  0F6B                     ;LCD_hd44780u_qy_2004a.c: 160:   SetToSendDataToLCD();
  7627                           	fcall	_SetToSendDataToLCD
  7628  0F6B  3189  2118  318F   	line	161
  7629                           	
  7630                           l5448:	
  7631  0F6E                     ;LCD_hd44780u_qy_2004a.c: 161:   PORTCbits.RC2 = 1;
  7632                           	movlb 0	; select bank0
  7633  0F6E  0020               	bsf	(14),2	;volatile
  7634  0F6F  150E               	line	162
  7635                           	
  7636                           l5450:	
  7637  0F70                     ;LCD_hd44780u_qy_2004a.c: 162:   PORTCbits.RC1 = 0;
  7638                           	bcf	(14),1	;volatile
  7639  0F70  108E               	line	163
  7640                           	
  7641                           l5452:	
  7642  0F71                     ;LCD_hd44780u_qy_2004a.c: 163:   if(iOpCode == '\n')
  7643                           		movlw	10
  7644  0F71  300A               	xorwf	((writeTxtChk@iOpCode)),w
  7645  0F72  0637               	btfss	status,2
  7646  0F73  1D03               	goto	u3681
  7647  0F74  2F76               	goto	u3680
  7648  0F75  2F77               u3681:
  7649  0F76                     	goto	l5482
  7650  0F76  2FC9               u3680:
  7651  0F77                     	line	165
  7652                           	
  7653                           l5454:	
  7654  0F77                     ;LCD_hd44780u_qy_2004a.c: 164:   {;LCD_hd44780u_qy_2004a.c: 165:    if(mWritingPosition 
                                 < 20)
  7655                           	movlw	low(014h)
  7656  0F77  3014               	subwf	(_mWritingPosition),w
  7657  0F78  025B               	skipnc
  7658  0F79  1803               	goto	u3691
  7659  0F7A  2F7C               	goto	u3690
  7660  0F7B  2F7D               u3691:
  7661  0F7C                     	goto	l5458
  7662  0F7C  2F83               u3690:
  7663  0F7D                     	line	167
  7664                           	
  7665                           l5456:	
  7666  0F7D                     ;LCD_hd44780u_qy_2004a.c: 166:    {;LCD_hd44780u_qy_2004a.c: 167:        setCursorPositi
                                 on(1,0);
  7667                           	clrf	(setCursorPosition@iPosition)
  7668  0F7D  01B0               	movlw	low(01h)
  7669  0F7E  3001               	fcall	_setCursorPosition
  7670  0F7F  318C  24D6  318F   	line	168
  7671                           ;LCD_hd44780u_qy_2004a.c: 168:    }
  7672                           	goto	l312
  7673  0F82  2FFF               	line	169
  7674                           ;LCD_hd44780u_qy_2004a.c: 169:    else if(mWritingPosition < 40)
  7675                           	
  7676                           l314:	
  7677  0F83                     	
  7678                           l5458:	
  7679  0F83                     	movlw	low(028h)
  7680  0F83  3028               	movlb 0	; select bank0
  7681  0F84  0020               	subwf	(_mWritingPosition),w
  7682  0F85  025B               	skipnc
  7683  0F86  1803               	goto	u3701
  7684  0F87  2F89               	goto	u3700
  7685  0F88  2F8A               u3701:
  7686  0F89                     	goto	l5462
  7687  0F89  2F90               u3700:
  7688  0F8A                     	line	171
  7689                           	
  7690                           l5460:	
  7691  0F8A                     ;LCD_hd44780u_qy_2004a.c: 170:    {;LCD_hd44780u_qy_2004a.c: 171:        setCursorPositi
                                 on(2,0);
  7692                           	clrf	(setCursorPosition@iPosition)
  7693  0F8A  01B0               	movlw	low(02h)
  7694  0F8B  3002               	fcall	_setCursorPosition
  7695  0F8C  318C  24D6  318F   	line	172
  7696                           ;LCD_hd44780u_qy_2004a.c: 172:    }
  7697                           	goto	l312
  7698  0F8F  2FFF               	line	173
  7699                           ;LCD_hd44780u_qy_2004a.c: 173:    else if(mWritingPosition < 60)
  7700                           	
  7701                           l316:	
  7702  0F90                     	
  7703                           l5462:	
  7704  0F90                     	movlw	low(03Ch)
  7705  0F90  303C               	movlb 0	; select bank0
  7706  0F91  0020               	subwf	(_mWritingPosition),w
  7707  0F92  025B               	skipnc
  7708  0F93  1803               	goto	u3711
  7709  0F94  2F96               	goto	u3710
  7710  0F95  2F97               u3711:
  7711  0F96                     	goto	l5466
  7712  0F96  2F9D               u3710:
  7713  0F97                     	line	175
  7714                           	
  7715                           l5464:	
  7716  0F97                     ;LCD_hd44780u_qy_2004a.c: 174:    {;LCD_hd44780u_qy_2004a.c: 175:        setCursorPositi
                                 on(3,0);
  7717                           	clrf	(setCursorPosition@iPosition)
  7718  0F97  01B0               	movlw	low(03h)
  7719  0F98  3003               	fcall	_setCursorPosition
  7720  0F99  318C  24D6  318F   	line	176
  7721                           ;LCD_hd44780u_qy_2004a.c: 176:    }
  7722                           	goto	l312
  7723  0F9C  2FFF               	line	177
  7724                           ;LCD_hd44780u_qy_2004a.c: 177:    else
  7725                           	
  7726                           l318:	
  7727  0F9D                     	line	179
  7728                           	
  7729                           l5466:	
  7730  0F9D                     ;LCD_hd44780u_qy_2004a.c: 178:    {;LCD_hd44780u_qy_2004a.c: 179:        setCursorPositi
                                 on(0,0);
  7731                           	movlb 0	; select bank0
  7732  0F9D  0020               	clrf	(setCursorPosition@iPosition)
  7733  0F9E  01B0               	movlw	low(0)
  7734  0F9F  3000               	fcall	_setCursorPosition
  7735  0FA0  318C  24D6  318F   	goto	l312
  7736  0FA3  2FFF               	line	180
  7737                           ;LCD_hd44780u_qy_2004a.c: 180:    }
  7738                           	
  7739                           l319:	
  7740  0FA4                     	goto	l312
  7741  0FA4  2FFF               	
  7742                           l317:	
  7743  0FA5                     	goto	l312
  7744  0FA5  2FFF               	
  7745                           l315:	
  7746  0FA6                     	goto	l312
  7747  0FA6  2FFF               	line	181
  7748                           	
  7749                           l5468:	
  7750  0FA7                     ;LCD_hd44780u_qy_2004a.c: 181:    return;
  7751                           	goto	l312
  7752  0FA7  2FFF               	line	182
  7753                           ;LCD_hd44780u_qy_2004a.c: 182:   }
  7754                           	
  7755                           l313:	
  7756  0FA8                     	line	183
  7757                           ;LCD_hd44780u_qy_2004a.c: 183:   switch(mWritingPosition)
  7758                           	goto	l5482
  7759  0FA8  2FC9               	line	185
  7760                           ;LCD_hd44780u_qy_2004a.c: 184:   {;LCD_hd44780u_qy_2004a.c: 185:     case 20:
  7761                           	
  7762                           l321:	
  7763  0FA9                     	line	186
  7764                           	
  7765                           l5470:	
  7766  0FA9                     ;LCD_hd44780u_qy_2004a.c: 186:       setCursorPosition(1,0);
  7767                           	movlb 0	; select bank0
  7768  0FA9  0020               	clrf	(setCursorPosition@iPosition)
  7769  0FAA  01B0               	movlw	low(01h)
  7770  0FAB  3001               	fcall	_setCursorPosition
  7771  0FAC  318C  24D6  318F   	line	187
  7772                           ;LCD_hd44780u_qy_2004a.c: 187:       break;
  7773                           	goto	l5484
  7774  0FAF  2FE0               	line	188
  7775                           ;LCD_hd44780u_qy_2004a.c: 188:     case 40:
  7776                           	
  7777                           l323:	
  7778  0FB0                     	line	189
  7779                           	
  7780                           l5472:	
  7781  0FB0                     ;LCD_hd44780u_qy_2004a.c: 189:       setCursorPosition(2,0);
  7782                           	movlb 0	; select bank0
  7783  0FB0  0020               	clrf	(setCursorPosition@iPosition)
  7784  0FB1  01B0               	movlw	low(02h)
  7785  0FB2  3002               	fcall	_setCursorPosition
  7786  0FB3  318C  24D6  318F   	line	190
  7787                           ;LCD_hd44780u_qy_2004a.c: 190:       break;
  7788                           	goto	l5484
  7789  0FB6  2FE0               	line	191
  7790                           ;LCD_hd44780u_qy_2004a.c: 191:     case 60:
  7791                           	
  7792                           l324:	
  7793  0FB7                     	line	192
  7794                           	
  7795                           l5474:	
  7796  0FB7                     ;LCD_hd44780u_qy_2004a.c: 192:       setCursorPosition(3,0);
  7797                           	movlb 0	; select bank0
  7798  0FB7  0020               	clrf	(setCursorPosition@iPosition)
  7799  0FB8  01B0               	movlw	low(03h)
  7800  0FB9  3003               	fcall	_setCursorPosition
  7801  0FBA  318C  24D6  318F   	line	193
  7802                           ;LCD_hd44780u_qy_2004a.c: 193:       break;
  7803                           	goto	l5484
  7804  0FBD  2FE0               	line	194
  7805                           ;LCD_hd44780u_qy_2004a.c: 194:     case 80:
  7806                           	
  7807                           l325:	
  7808  0FBE                     	line	195
  7809                           	
  7810                           l5476:	
  7811  0FBE                     ;LCD_hd44780u_qy_2004a.c: 195:       setCursorPosition(0,0);
  7812                           	movlb 0	; select bank0
  7813  0FBE  0020               	clrf	(setCursorPosition@iPosition)
  7814  0FBF  01B0               	movlw	low(0)
  7815  0FC0  3000               	fcall	_setCursorPosition
  7816  0FC1  318C  24D6  318F   	line	196
  7817                           	
  7818                           l5478:	
  7819  0FC4                     ;LCD_hd44780u_qy_2004a.c: 196:       mWritingPosition = 0;
  7820                           	movlb 0	; select bank0
  7821  0FC4  0020               	clrf	(_mWritingPosition)
  7822  0FC5  01DB               	line	197
  7823                           ;LCD_hd44780u_qy_2004a.c: 197:       break;
  7824                           	goto	l5484
  7825  0FC6  2FE0               	line	198
  7826                           ;LCD_hd44780u_qy_2004a.c: 198:     default:
  7827                           	
  7828                           l326:	
  7829  0FC7                     	line	199
  7830                           ;LCD_hd44780u_qy_2004a.c: 199:       break;
  7831                           	goto	l5484
  7832  0FC7  2FE0               	line	200
  7833                           	
  7834                           l5480:	
  7835  0FC8                     ;LCD_hd44780u_qy_2004a.c: 200:   }
  7836                           	goto	l5484
  7837  0FC8  2FE0               	
  7838                           l320:	
  7839  0FC9                     	
  7840                           l5482:	
  7841  0FC9                     	movlb 0	; select bank0
  7842  0FC9  0020               	movf	(_mWritingPosition),w
  7843  0FCA  085B               	movwf	(??_writeTxtChk+0)+0
  7844  0FCB  00B5               	clrf	(??_writeTxtChk+0)+0+1
  7845  0FCC  01B6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  7846                           ; Switch size 1, requested type "space"
  7847                           ; Number of cases is 1, Range of values is 0 to 0
  7848                           ; switch strategies available:
  7849                           ; Name         Instructions Cycles
  7850                           ; simple_byte            4     3 (average)
  7851                           ; direct_byte            8     6 (fixed)
  7852                           ; jumptable            260     6 (fixed)
  7853                           ;	Chosen strategy is simple_byte
  7854                           
  7855                           	movf 1+(??_writeTxtChk+0)+0,w
  7856  0FCD  0836               	opt asmopt_push
  7857                           	opt asmopt_off
  7858                           	xorlw	0^0	; case 0
  7859  0FCE  3A00               	skipnz
  7860  0FCF  1903               	goto	l6986
  7861  0FD0  2FD2               	goto	l5484
  7862  0FD1  2FE0               	opt asmopt_pop
  7863                           	
  7864                           l6986:	
  7865  0FD2                     ; Switch size 1, requested type "space"
  7866                           ; Number of cases is 4, Range of values is 20 to 80
  7867                           ; switch strategies available:
  7868                           ; Name         Instructions Cycles
  7869                           ; simple_byte           13     7 (average)
  7870                           ; direct_byte          131     9 (fixed)
  7871                           ; jumptable            263     9 (fixed)
  7872                           ;	Chosen strategy is simple_byte
  7873                           
  7874                           	movf 0+(??_writeTxtChk+0)+0,w
  7875  0FD2  0835               	opt asmopt_push
  7876                           	opt asmopt_off
  7877                           	xorlw	20^0	; case 20
  7878  0FD3  3A14               	skipnz
  7879  0FD4  1903               	goto	l5470
  7880  0FD5  2FA9               	xorlw	40^20	; case 40
  7881  0FD6  3A3C               	skipnz
  7882  0FD7  1903               	goto	l5472
  7883  0FD8  2FB0               	xorlw	60^40	; case 60
  7884  0FD9  3A14               	skipnz
  7885  0FDA  1903               	goto	l5474
  7886  0FDB  2FB7               	xorlw	80^60	; case 80
  7887  0FDC  3A6C               	skipnz
  7888  0FDD  1903               	goto	l5476
  7889  0FDE  2FBE               	goto	l5484
  7890  0FDF  2FE0               	opt asmopt_pop
  7891                           
  7892                           	
  7893                           l322:	
  7894  0FE0                     	line	201
  7895                           	
  7896                           l5484:	
  7897  0FE0                     ;LCD_hd44780u_qy_2004a.c: 201:   waitLCDBusy();
  7898                           	fcall	_waitLCDBusy
  7899  0FE0  318A  22A0  318F   	line	202
  7900                           	
  7901                           l5486:	
  7902  0FE3                     ;LCD_hd44780u_qy_2004a.c: 202:   SetToSendDataToLCD();
  7903                           	fcall	_SetToSendDataToLCD
  7904  0FE3  3189  2118  318F   	line	203
  7905                           	
  7906                           l5488:	
  7907  0FE6                     ;LCD_hd44780u_qy_2004a.c: 203:   PORTCbits.RC2 = 1;
  7908                           	movlb 0	; select bank0
  7909  0FE6  0020               	bsf	(14),2	;volatile
  7910  0FE7  150E               	line	204
  7911                           	
  7912                           l5490:	
  7913  0FE8                     ;LCD_hd44780u_qy_2004a.c: 204:   PORTCbits.RC1 = 0;
  7914                           	bcf	(14),1	;volatile
  7915  0FE8  108E               	line	205
  7916                           	
  7917                           l5492:	
  7918  0FE9                     ;LCD_hd44780u_qy_2004a.c: 205:   setData(iOpCode >> 4);
  7919                           	movf	(writeTxtChk@iOpCode),w
  7920  0FE9  0837               	movwf	(??_writeTxtChk+0)+0
  7921  0FEA  00B5               	movlw	04h
  7922  0FEB  3004               u3725:
  7923  0FEC                     	lsrf	(??_writeTxtChk+0)+0,f
  7924  0FEC  36B5               	decfsz	wreg,f
  7925  0FED  0B89               	goto	u3725
  7926  0FEE  2FEC               	movf	0+(??_writeTxtChk+0)+0,w
  7927  0FEF  0835               	fcall	_setData
  7928  0FF0  318B  23C0  318F   	line	206
  7929                           	
  7930                           l5494:	
  7931  0FF3                     ;LCD_hd44780u_qy_2004a.c: 206:   setData(iOpCode);
  7932                           	movlb 0	; select bank0
  7933  0FF3  0020               	movf	(writeTxtChk@iOpCode),w
  7934  0FF4  0837               	fcall	_setData
  7935  0FF5  318B  23C0  318F   	line	207
  7936                           	
  7937                           l5496:	
  7938  0FF8                     ;LCD_hd44780u_qy_2004a.c: 207:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  7939                           		opt asmopt_push
  7940                           	opt asmopt_off
  7941                           	nop2	;2 cycle nop
  7942  0FF8  3200               	nop2	;2 cycle nop
  7943  0FF9  3200               	opt asmopt_pop
  7944                           
  7945                           	line	208
  7946                           	
  7947                           l5498:	
  7948  0FFA                     ;LCD_hd44780u_qy_2004a.c: 208:   mWritingPosition++;
  7949                           	movlw	low(01h)
  7950  0FFA  3001               	movlb 0	; select bank0
  7951  0FFB  0020               	movwf	(??_writeTxtChk+0)+0
  7952  0FFC  00B5               	movf	(??_writeTxtChk+0)+0,w
  7953  0FFD  0835               	addwf	(_mWritingPosition),f
  7954  0FFE  07DB               	line	209
  7955                           	
  7956                           l312:	
  7957  0FFF                     	return
  7958  0FFF  0008               	opt stack 0
  7959                           GLOBAL	__end_of_writeTxtChk
  7960                           	__end_of_writeTxtChk:
  7961  1000                     	signat	_writeTxtChk,4217
  7962                           	global	_setCursorPosition
  7963                           
  7964 ;; *************** function _setCursorPosition *****************
  7965 ;; Defined at:
  7966 ;;		line 333 in file "LCD_hd44780u_qy_2004a.c"
  7967 ;; Parameters:    Size  Location     Type
  7968 ;;  iLine           1    wreg     unsigned char 
  7969 ;;  iPosition       1   16[BANK0 ] unsigned char 
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;  iLine           1   19[BANK0 ] unsigned char 
  7972 ;;  wLCDIndex       1   20[BANK0 ] unsigned char 
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  1    wreg      void 
  7975 ;; Registers used:
  7976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7977 ;; Tracked objects:
  7978 ;;		On entry : 0/0
  7979 ;;		On exit  : 0/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7982 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7983 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7984 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7985 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7986 ;;Total ram usage:        5 bytes
  7987 ;; Hardware stack levels used:    1
  7988 ;; Hardware stack levels required when called:    8
  7989 ;; This function calls:
  7990 ;;		_SetToSendDataToLCD
  7991 ;;		_setData
  7992 ;;		_waitLCDBusy
  7993 ;; This function is called by:
  7994 ;;		_main
  7995 ;;		_writeTxtChk
  7996 ;; This function uses a non-reentrant model
  7997 ;;
  7998                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  7999                           	line	333
  8000                           global __ptext16
  8001                           __ptext16:	;psect for function _setCursorPosition
  8002  0CD6                     psect	text16
  8003                           	file	"LCD_hd44780u_qy_2004a.c"
  8004                           	line	333
  8005                           	global	__size_of_setCursorPosition
  8006                           	__size_of_setCursorPosition	equ	__end_of_setCursorPosition-_setCursorPosition
  8007  0060                     	
  8008                           _setCursorPosition:	
  8009  0CD6                     ;incstack = 0
  8010                           	opt	stack 7
  8011                           ; Regs used in _setCursorPosition: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8012                           ;setCursorPosition@iLine stored from wreg
  8013                           	movlb 0	; select bank0
  8014  0CD6  0020               	movwf	(setCursorPosition@iLine)
  8015  0CD7  00B3               	line	335
  8016                           	
  8017                           l5362:	
  8018  0CD8                     ;LCD_hd44780u_qy_2004a.c: 333: void setCursorPosition(char iLine, char iPosition);LCD_hd
                                 44780u_qy_2004a.c: 334: {;LCD_hd44780u_qy_2004a.c: 335:   char wLCDIndex=0;
  8019                           	clrf	(setCursorPosition@wLCDIndex)
  8020  0CD8  01B4               	line	337
  8021                           ;LCD_hd44780u_qy_2004a.c: 337:   switch(iLine)
  8022                           	goto	l5374
  8023  0CD9  2D06               	line	339
  8024                           ;LCD_hd44780u_qy_2004a.c: 338:   {;LCD_hd44780u_qy_2004a.c: 339:       case 0:
  8025                           	
  8026                           l390:	
  8027  0CDA                     	line	340
  8028                           	
  8029                           l5364:	
  8030  0CDA                     ;LCD_hd44780u_qy_2004a.c: 340:           wLCDIndex = 0x00 + iPosition;
  8031                           	movf	(setCursorPosition@iPosition),w
  8032  0CDA  0830               	movwf	(??_setCursorPosition+0)+0
  8033  0CDB  00B1               	movf	(??_setCursorPosition+0)+0,w
  8034  0CDC  0831               	movwf	(setCursorPosition@wLCDIndex)
  8035  0CDD  00B4               	line	341
  8036                           ;LCD_hd44780u_qy_2004a.c: 341:           mWritingPosition = iPosition;
  8037                           	movf	(setCursorPosition@iPosition),w
  8038  0CDE  0830               	movwf	(??_setCursorPosition+0)+0
  8039  0CDF  00B1               	movf	(??_setCursorPosition+0)+0,w
  8040  0CE0  0831               	movwf	(_mWritingPosition)
  8041  0CE1  00DB               	line	342
  8042                           ;LCD_hd44780u_qy_2004a.c: 342:           break;
  8043                           	goto	l5376
  8044  0CE2  2D1C               	line	343
  8045                           ;LCD_hd44780u_qy_2004a.c: 343:       case 1:
  8046                           	
  8047                           l392:	
  8048  0CE3                     	line	344
  8049                           	
  8050                           l5366:	
  8051  0CE3                     ;LCD_hd44780u_qy_2004a.c: 344:           wLCDIndex = 0x40 + iPosition;
  8052                           	movf	(setCursorPosition@iPosition),w
  8053  0CE3  0830               	addlw	040h
  8054  0CE4  3E40               	movwf	(??_setCursorPosition+0)+0
  8055  0CE5  00B1               	movf	(??_setCursorPosition+0)+0,w
  8056  0CE6  0831               	movwf	(setCursorPosition@wLCDIndex)
  8057  0CE7  00B4               	line	345
  8058                           ;LCD_hd44780u_qy_2004a.c: 345:           mWritingPosition = 20 + iPosition;
  8059                           	movf	(setCursorPosition@iPosition),w
  8060  0CE8  0830               	addlw	014h
  8061  0CE9  3E14               	movwf	(??_setCursorPosition+0)+0
  8062  0CEA  00B1               	movf	(??_setCursorPosition+0)+0,w
  8063  0CEB  0831               	movwf	(_mWritingPosition)
  8064  0CEC  00DB               	line	346
  8065                           ;LCD_hd44780u_qy_2004a.c: 346:           break;
  8066                           	goto	l5376
  8067  0CED  2D1C               	line	347
  8068                           ;LCD_hd44780u_qy_2004a.c: 347:       case 2:
  8069                           	
  8070                           l393:	
  8071  0CEE                     	line	348
  8072                           	
  8073                           l5368:	
  8074  0CEE                     ;LCD_hd44780u_qy_2004a.c: 348:           wLCDIndex = 0x14 + iPosition;
  8075                           	movf	(setCursorPosition@iPosition),w
  8076  0CEE  0830               	addlw	014h
  8077  0CEF  3E14               	movwf	(??_setCursorPosition+0)+0
  8078  0CF0  00B1               	movf	(??_setCursorPosition+0)+0,w
  8079  0CF1  0831               	movwf	(setCursorPosition@wLCDIndex)
  8080  0CF2  00B4               	line	349
  8081                           ;LCD_hd44780u_qy_2004a.c: 349:           mWritingPosition = 40 + iPosition;
  8082                           	movf	(setCursorPosition@iPosition),w
  8083  0CF3  0830               	addlw	028h
  8084  0CF4  3E28               	movwf	(??_setCursorPosition+0)+0
  8085  0CF5  00B1               	movf	(??_setCursorPosition+0)+0,w
  8086  0CF6  0831               	movwf	(_mWritingPosition)
  8087  0CF7  00DB               	line	350
  8088                           ;LCD_hd44780u_qy_2004a.c: 350:           break;
  8089                           	goto	l5376
  8090  0CF8  2D1C               	line	351
  8091                           ;LCD_hd44780u_qy_2004a.c: 351:       case 3:
  8092                           	
  8093                           l394:	
  8094  0CF9                     	line	352
  8095                           	
  8096                           l5370:	
  8097  0CF9                     ;LCD_hd44780u_qy_2004a.c: 352:           wLCDIndex = 0x54 + iPosition;
  8098                           	movf	(setCursorPosition@iPosition),w
  8099  0CF9  0830               	addlw	054h
  8100  0CFA  3E54               	movwf	(??_setCursorPosition+0)+0
  8101  0CFB  00B1               	movf	(??_setCursorPosition+0)+0,w
  8102  0CFC  0831               	movwf	(setCursorPosition@wLCDIndex)
  8103  0CFD  00B4               	line	353
  8104                           ;LCD_hd44780u_qy_2004a.c: 353:           mWritingPosition = 60 + iPosition;
  8105                           	movf	(setCursorPosition@iPosition),w
  8106  0CFE  0830               	addlw	03Ch
  8107  0CFF  3E3C               	movwf	(??_setCursorPosition+0)+0
  8108  0D00  00B1               	movf	(??_setCursorPosition+0)+0,w
  8109  0D01  0831               	movwf	(_mWritingPosition)
  8110  0D02  00DB               	line	354
  8111                           ;LCD_hd44780u_qy_2004a.c: 354:           break;
  8112                           	goto	l5376
  8113  0D03  2D1C               	line	355
  8114                           ;LCD_hd44780u_qy_2004a.c: 355:       default:
  8115                           	
  8116                           l395:	
  8117  0D04                     	line	356
  8118                           ;LCD_hd44780u_qy_2004a.c: 356:       break;
  8119                           	goto	l5376
  8120  0D04  2D1C               	line	357
  8121                           	
  8122                           l5372:	
  8123  0D05                     ;LCD_hd44780u_qy_2004a.c: 357:   }
  8124                           	goto	l5376
  8125  0D05  2D1C               	
  8126                           l389:	
  8127  0D06                     	
  8128                           l5374:	
  8129  0D06                     	movf	(setCursorPosition@iLine),w
  8130  0D06  0833               	movwf	(??_setCursorPosition+0)+0
  8131  0D07  00B1               	clrf	(??_setCursorPosition+0)+0+1
  8132  0D08  01B2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  8133                           ; Switch size 1, requested type "space"
  8134                           ; Number of cases is 1, Range of values is 0 to 0
  8135                           ; switch strategies available:
  8136                           ; Name         Instructions Cycles
  8137                           ; simple_byte            4     3 (average)
  8138                           ; direct_byte            8     6 (fixed)
  8139                           ; jumptable            260     6 (fixed)
  8140                           ;	Chosen strategy is simple_byte
  8141                           
  8142                           	movf 1+(??_setCursorPosition+0)+0,w
  8143  0D09  0832               	opt asmopt_push
  8144                           	opt asmopt_off
  8145                           	xorlw	0^0	; case 0
  8146  0D0A  3A00               	skipnz
  8147  0D0B  1903               	goto	l6988
  8148  0D0C  2D0E               	goto	l5376
  8149  0D0D  2D1C               	opt asmopt_pop
  8150                           	
  8151                           l6988:	
  8152  0D0E                     ; Switch size 1, requested type "space"
  8153                           ; Number of cases is 4, Range of values is 0 to 3
  8154                           ; switch strategies available:
  8155                           ; Name         Instructions Cycles
  8156                           ; simple_byte           13     7 (average)
  8157                           ; direct_byte           14     6 (fixed)
  8158                           ; jumptable            260     6 (fixed)
  8159                           ;	Chosen strategy is simple_byte
  8160                           
  8161                           	movf 0+(??_setCursorPosition+0)+0,w
  8162  0D0E  0831               	opt asmopt_push
  8163                           	opt asmopt_off
  8164                           	xorlw	0^0	; case 0
  8165  0D0F  3A00               	skipnz
  8166  0D10  1903               	goto	l5364
  8167  0D11  2CDA               	xorlw	1^0	; case 1
  8168  0D12  3A01               	skipnz
  8169  0D13  1903               	goto	l5366
  8170  0D14  2CE3               	xorlw	2^1	; case 2
  8171  0D15  3A03               	skipnz
  8172  0D16  1903               	goto	l5368
  8173  0D17  2CEE               	xorlw	3^2	; case 3
  8174  0D18  3A01               	skipnz
  8175  0D19  1903               	goto	l5370
  8176  0D1A  2CF9               	goto	l5376
  8177  0D1B  2D1C               	opt asmopt_pop
  8178                           
  8179                           	
  8180                           l391:	
  8181  0D1C                     	line	359
  8182                           	
  8183                           l5376:	
  8184  0D1C                     ;LCD_hd44780u_qy_2004a.c: 359:   waitLCDBusy();
  8185                           	fcall	_waitLCDBusy
  8186  0D1C  318A  22A0  318C   	line	361
  8187                           	
  8188                           l5378:	
  8189  0D1F                     ;LCD_hd44780u_qy_2004a.c: 361:   SetToSendDataToLCD();
  8190                           	fcall	_SetToSendDataToLCD
  8191  0D1F  3189  2118  318C   	line	362
  8192                           	
  8193                           l5380:	
  8194  0D22                     ;LCD_hd44780u_qy_2004a.c: 362:   PORTCbits.RC2 = 0;
  8195                           	movlb 0	; select bank0
  8196  0D22  0020               	bcf	(14),2	;volatile
  8197  0D23  110E               	line	363
  8198                           	
  8199                           l5382:	
  8200  0D24                     ;LCD_hd44780u_qy_2004a.c: 363:   PORTCbits.RC1 = 0;
  8201                           	bcf	(14),1	;volatile
  8202  0D24  108E               	line	364
  8203                           	
  8204                           l5384:	
  8205  0D25                     ;LCD_hd44780u_qy_2004a.c: 364:   setData((wLCDIndex >> 4) | 0x8 );
  8206                           	movf	(setCursorPosition@wLCDIndex),w
  8207  0D25  0834               	movwf	(??_setCursorPosition+0)+0
  8208  0D26  00B1               	movlw	04h
  8209  0D27  3004               u3615:
  8210  0D28                     	lsrf	(??_setCursorPosition+0)+0,f
  8211  0D28  36B1               	decfsz	wreg,f
  8212  0D29  0B89               	goto	u3615
  8213  0D2A  2D28               	movf	0+(??_setCursorPosition+0)+0,w
  8214  0D2B  0831               	iorlw	08h
  8215  0D2C  3808               	fcall	_setData
  8216  0D2D  318B  23C0  318C   	line	365
  8217                           	
  8218                           l5386:	
  8219  0D30                     ;LCD_hd44780u_qy_2004a.c: 365:   setData(wLCDIndex);
  8220                           	movlb 0	; select bank0
  8221  0D30  0020               	movf	(setCursorPosition@wLCDIndex),w
  8222  0D31  0834               	fcall	_setData
  8223  0D32  318B  23C0  318C   	line	367
  8224                           	
  8225                           l396:	
  8226  0D35                     	return
  8227  0D35  0008               	opt stack 0
  8228                           GLOBAL	__end_of_setCursorPosition
  8229                           	__end_of_setCursorPosition:
  8230  0D36                     	signat	_setCursorPosition,8313
  8231                           	global	_waitLCDBusy
  8232                           
  8233 ;; *************** function _waitLCDBusy *****************
  8234 ;; Defined at:
  8235 ;;		line 241 in file "LCD_hd44780u_qy_2004a.c"
  8236 ;; Parameters:    Size  Location     Type
  8237 ;;		None
  8238 ;; Auto vars:     Size  Location     Type
  8239 ;;  busyFlag        2   14[BANK0 ] int 
  8240 ;; Return value:  Size  Location     Type
  8241 ;;                  1    wreg      void 
  8242 ;; Registers used:
  8243 ;;		wreg, status,2, status,0, pclath, cstack
  8244 ;; Tracked objects:
  8245 ;;		On entry : 0/0
  8246 ;;		On exit  : 0/0
  8247 ;;		Unchanged: 0/0
  8248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8250 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8251 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8252 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  8253 ;;Total ram usage:        4 bytes
  8254 ;; Hardware stack levels used:    1
  8255 ;; Hardware stack levels required when called:    7
  8256 ;; This function calls:
  8257 ;;		_SetToReadDataFromLCD
  8258 ;; This function is called by:
  8259 ;;		_writeTxtChk
  8260 ;;		_writeInsChk
  8261 ;;		_setCursorPosition
  8262 ;; This function uses a non-reentrant model
  8263 ;;
  8264                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  8265                           	line	241
  8266                           global __ptext17
  8267                           __ptext17:	;psect for function _waitLCDBusy
  8268  0AA0                     psect	text17
  8269                           	file	"LCD_hd44780u_qy_2004a.c"
  8270                           	line	241
  8271                           	global	__size_of_waitLCDBusy
  8272                           	__size_of_waitLCDBusy	equ	__end_of_waitLCDBusy-_waitLCDBusy
  8273  002A                     	
  8274                           _waitLCDBusy:	
  8275  0AA0                     ;incstack = 0
  8276                           	opt	stack 6
  8277                           ; Regs used in _waitLCDBusy: [wreg+status,2+status,0+pclath+cstack]
  8278                           	line	243
  8279                           	
  8280                           l5344:	
  8281  0AA0                     ;LCD_hd44780u_qy_2004a.c: 243:   PORTCbits.RC2 = 0;
  8282                           	movlb 0	; select bank0
  8283  0AA0  0020               	bcf	(14),2	;volatile
  8284  0AA1  110E               	line	244
  8285                           ;LCD_hd44780u_qy_2004a.c: 244:   PORTCbits.RC1 = 1;
  8286                           	bsf	(14),1	;volatile
  8287  0AA2  148E               	line	246
  8288                           	
  8289                           l5346:	
  8290  0AA3                     ;LCD_hd44780u_qy_2004a.c: 246:   SetToReadDataFromLCD();
  8291                           	fcall	_SetToReadDataFromLCD
  8292  0AA3  3189  211E  318A   	line	248
  8293                           	
  8294                           l5348:	
  8295  0AA6                     ;LCD_hd44780u_qy_2004a.c: 248:   int busyFlag = 1;
  8296                           	movlw	01h
  8297  0AA6  3001               	movlb 0	; select bank0
  8298  0AA7  0020               	movwf	(waitLCDBusy@busyFlag)
  8299  0AA8  00AE               	movlw	0
  8300  0AA9  3000               	movwf	((waitLCDBusy@busyFlag))+1
  8301  0AAA  00AF               	line	249
  8302                           ;LCD_hd44780u_qy_2004a.c: 249:   while(busyFlag == 1)
  8303                           	goto	l341
  8304  0AAB  2AC1               	
  8305                           l342:	
  8306  0AAC                     	line	252
  8307                           ;LCD_hd44780u_qy_2004a.c: 250:   {;LCD_hd44780u_qy_2004a.c: 252:     PORTCbits.RC0 = 1;

  8308                           	bsf	(14),0	;volatile
  8309  0AAC  140E               	line	253
  8310                           ;LCD_hd44780u_qy_2004a.c: 253:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  8311                           		opt asmopt_push
  8312                           	opt asmopt_off
  8313                           	nop2	;2 cycle nop
  8314  0AAD  3200               	nop2	;2 cycle nop
  8315  0AAE  3200               	opt asmopt_pop
  8316                           
  8317                           	line	254
  8318                           	
  8319                           l5350:	
  8320  0AAF                     ;LCD_hd44780u_qy_2004a.c: 254:     busyFlag = PORTAbits.RA0;
  8321                           	movlb 0	; select bank0
  8322  0AAF  0020               	movf	(12),w	;volatile
  8323  0AB0  080C               	andlw	(1<<1)-1
  8324  0AB1  3901               	movwf	(??_waitLCDBusy+0)+0
  8325  0AB2  00AC               	clrf	(??_waitLCDBusy+0)+0+1
  8326  0AB3  01AD               	movf	0+(??_waitLCDBusy+0)+0,w
  8327  0AB4  082C               	movwf	(waitLCDBusy@busyFlag)
  8328  0AB5  00AE               	movf	1+(??_waitLCDBusy+0)+0,w
  8329  0AB6  082D               	movwf	(waitLCDBusy@busyFlag+1)
  8330  0AB7  00AF               	line	255
  8331                           	
  8332                           l5352:	
  8333  0AB8                     ;LCD_hd44780u_qy_2004a.c: 255:     PORTCbits.RC0 = 0;
  8334                           	bcf	(14),0	;volatile
  8335  0AB8  100E               	line	256
  8336                           	
  8337                           l5354:	
  8338  0AB9                     ;LCD_hd44780u_qy_2004a.c: 256:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  8339                           		opt asmopt_push
  8340                           	opt asmopt_off
  8341                           	nop2	;2 cycle nop
  8342  0AB9  3200               	nop2	;2 cycle nop
  8343  0ABA  3200               	nop2	;2 cycle nop
  8344  0ABB  3200               	nop2	;2 cycle nop
  8345  0ABC  3200               	opt asmopt_pop
  8346                           
  8347                           	line	258
  8348                           	
  8349                           l5356:	
  8350  0ABD                     ;LCD_hd44780u_qy_2004a.c: 258:     PORTCbits.RC0 = 1;
  8351                           	movlb 0	; select bank0
  8352  0ABD  0020               	bsf	(14),0	;volatile
  8353  0ABE  140E               	line	259
  8354                           	
  8355                           l5358:	
  8356  0ABF                     ;LCD_hd44780u_qy_2004a.c: 259:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  8357                           		opt asmopt_push
  8358                           	opt asmopt_off
  8359                           	nop2	;2 cycle nop
  8360  0ABF  3200               	nop2	;2 cycle nop
  8361  0AC0  3200               	opt asmopt_pop
  8362                           
  8363                           	line	260
  8364                           ;LCD_hd44780u_qy_2004a.c: 260:   }
  8365                           	
  8366                           l341:	
  8367  0AC1                     	line	249
  8368                           ;LCD_hd44780u_qy_2004a.c: 249:   while(busyFlag == 1)
  8369                           	movlb 0	; select bank0
  8370  0AC1  0020               		decf	((waitLCDBusy@busyFlag)),w
  8371  0AC2  032E               iorwf	((waitLCDBusy@busyFlag+1)),w
  8372  0AC3  042F               	btfsc	status,2
  8373  0AC4  1903               	goto	u3601
  8374  0AC5  2AC7               	goto	u3600
  8375  0AC6  2AC8               u3601:
  8376  0AC7                     	goto	l342
  8377  0AC7  2AAC               u3600:
  8378  0AC8                     	goto	l344
  8379  0AC8  2AC9               	
  8380                           l343:	
  8381  0AC9                     	line	261
  8382                           	
  8383                           l344:	
  8384  0AC9                     	return
  8385  0AC9  0008               	opt stack 0
  8386                           GLOBAL	__end_of_waitLCDBusy
  8387                           	__end_of_waitLCDBusy:
  8388  0ACA                     	signat	_waitLCDBusy,89
  8389                           	global	_SetToReadDataFromLCD
  8390                           
  8391 ;; *************** function _SetToReadDataFromLCD *****************
  8392 ;; Defined at:
  8393 ;;		line 226 in file "LCD_hd44780u_qy_2004a.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;		None
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;		None
  8398 ;; Return value:  Size  Location     Type
  8399 ;;                  1    wreg      void 
  8400 ;; Registers used:
  8401 ;;		None
  8402 ;; Tracked objects:
  8403 ;;		On entry : 0/0
  8404 ;;		On exit  : 0/0
  8405 ;;		Unchanged: 0/0
  8406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8411 ;;Total ram usage:        0 bytes
  8412 ;; Hardware stack levels used:    1
  8413 ;; Hardware stack levels required when called:    6
  8414 ;; This function calls:
  8415 ;;		Nothing
  8416 ;; This function is called by:
  8417 ;;		_waitLCDBusy
  8418 ;; This function uses a non-reentrant model
  8419 ;;
  8420                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  8421                           	line	226
  8422                           global __ptext18
  8423                           __ptext18:	;psect for function _SetToReadDataFromLCD
  8424  091E                     psect	text18
  8425                           	file	"LCD_hd44780u_qy_2004a.c"
  8426                           	line	226
  8427                           	global	__size_of_SetToReadDataFromLCD
  8428                           	__size_of_SetToReadDataFromLCD	equ	__end_of_SetToReadDataFromLCD-_SetToReadDataFromLCD

  8429  0006                     	
  8430                           _SetToReadDataFromLCD:	
  8431  091E                     ;incstack = 0
  8432                           	opt	stack 6
  8433                           ; Regs used in _SetToReadDataFromLCD: []
  8434                           	line	228
  8435                           	
  8436                           l5330:	
  8437  091E                     ;LCD_hd44780u_qy_2004a.c: 228:   TRISAbits.TRISA0 = 1;
  8438                           	movlb 1	; select bank1
  8439  091E  0021               	bsf	(140)^080h,0	;volatile
  8440  091F  140C               	line	229
  8441                           ;LCD_hd44780u_qy_2004a.c: 229:   TRISAbits.TRISA1 = 1;
  8442                           	bsf	(140)^080h,1	;volatile
  8443  0920  148C               	line	230
  8444                           ;LCD_hd44780u_qy_2004a.c: 230:   TRISAbits.TRISA2 = 1;
  8445                           	bsf	(140)^080h,2	;volatile
  8446  0921  150C               	line	231
  8447                           ;LCD_hd44780u_qy_2004a.c: 231:   TRISAbits.TRISA3 = 1;
  8448                           	bsf	(140)^080h,3	;volatile
  8449  0922  158C               	line	232
  8450                           	
  8451                           l335:	
  8452  0923                     	return
  8453  0923  0008               	opt stack 0
  8454                           GLOBAL	__end_of_SetToReadDataFromLCD
  8455                           	__end_of_SetToReadDataFromLCD:
  8456  0924                     	signat	_SetToReadDataFromLCD,89
  8457                           	global	_setData
  8458                           
  8459 ;; *************** function _setData *****************
  8460 ;; Defined at:
  8461 ;;		line 142 in file "LCD_hd44780u_qy_2004a.c"
  8462 ;; Parameters:    Size  Location     Type
  8463 ;;  iValue          1    wreg     unsigned char 
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;  iValue          1   14[BANK0 ] unsigned char 
  8466 ;; Return value:  Size  Location     Type
  8467 ;;                  1    wreg      void 
  8468 ;; Registers used:
  8469 ;;		wreg, status,2, status,0
  8470 ;; Tracked objects:
  8471 ;;		On entry : 0/0
  8472 ;;		On exit  : 0/0
  8473 ;;		Unchanged: 0/0
  8474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8476 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8477 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8478 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  8479 ;;Total ram usage:        3 bytes
  8480 ;; Hardware stack levels used:    1
  8481 ;; Hardware stack levels required when called:    6
  8482 ;; This function calls:
  8483 ;;		Nothing
  8484 ;; This function is called by:
  8485 ;;		_initLCD
  8486 ;;		_writeTxtChk
  8487 ;;		_writeInsNoChk
  8488 ;;		_setCursorPosition
  8489 ;; This function uses a non-reentrant model
  8490 ;;
  8491                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  8492                           	line	142
  8493                           global __ptext19
  8494                           __ptext19:	;psect for function _setData
  8495  0BC0                     psect	text19
  8496                           	file	"LCD_hd44780u_qy_2004a.c"
  8497                           	line	142
  8498                           	global	__size_of_setData
  8499                           	__size_of_setData	equ	__end_of_setData-_setData
  8500  003C                     	
  8501                           _setData:	
  8502  0BC0                     ;incstack = 0
  8503                           	opt	stack 6
  8504                           ; Regs used in _setData: [wreg+status,2+status,0]
  8505                           ;setData@iValue stored from wreg
  8506                           	movlb 0	; select bank0
  8507  0BC0  0020               	movwf	(setData@iValue)
  8508  0BC1  00AE               	line	144
  8509                           	
  8510                           l5332:	
  8511  0BC2                     ;LCD_hd44780u_qy_2004a.c: 142: void setData(char iValue);LCD_hd44780u_qy_2004a.c: 143: {
                                 ;LCD_hd44780u_qy_2004a.c: 144:   PORTCbits.RC0 = 1;
  8512                           	bsf	(14),0	;volatile
  8513  0BC2  140E               	line	145
  8514                           	
  8515                           l5334:	
  8516  0BC3                     ;LCD_hd44780u_qy_2004a.c: 145:   PORTAbits.RA0 = (iValue & 0x8) >> 3;
  8517                           	movf	(setData@iValue),w
  8518  0BC3  082E               	movwf	(??_setData+0)+0
  8519  0BC4  00AC               	movlw	03h
  8520  0BC5  3003               u3585:
  8521  0BC6                     	lsrf	(??_setData+0)+0,f
  8522  0BC6  36AC               	decfsz	wreg,f
  8523  0BC7  0B89               	goto	u3585
  8524  0BC8  2BC6               	movlw	low(01h)
  8525  0BC9  3001               	andwf	0+(??_setData+0)+0,w
  8526  0BCA  052C               	movwf	(??_setData+1)+0
  8527  0BCB  00AD               	movf	(12),w	;volatile
  8528  0BCC  080C               	xorwf	0+(??_setData+1)+0,w
  8529  0BCD  062D               	andlw	not ((1<<1)-1)
  8530  0BCE  39FE               	xorwf	0+(??_setData+1)+0,w
  8531  0BCF  062D               	movwf	(12)	;volatile
  8532  0BD0  008C               	line	146
  8533                           ;LCD_hd44780u_qy_2004a.c: 146:   PORTAbits.RA1 = (iValue & 0x4) >> 2;
  8534                           	movf	(setData@iValue),w
  8535  0BD1  082E               	movwf	(??_setData+0)+0
  8536  0BD2  00AC               	movlw	02h
  8537  0BD3  3002               u3595:
  8538  0BD4                     	lsrf	(??_setData+0)+0,f
  8539  0BD4  36AC               	decfsz	wreg,f
  8540  0BD5  0B89               	goto	u3595
  8541  0BD6  2BD4               	movf	0+(??_setData+0)+0,w
  8542  0BD7  082C               	andlw	01h
  8543  0BD8  3901               	movwf	(??_setData+1)+0
  8544  0BD9  00AD               	rlf	(??_setData+1)+0,f
  8545  0BDA  0DAD               	movf	(12),w	;volatile
  8546  0BDB  080C               	xorwf	(??_setData+1)+0,w
  8547  0BDC  062D               	andlw	not (((1<<1)-1)<<1)
  8548  0BDD  39FD               	xorwf	(??_setData+1)+0,w
  8549  0BDE  062D               	movwf	(12)	;volatile
  8550  0BDF  008C               	line	147
  8551                           ;LCD_hd44780u_qy_2004a.c: 147:   PORTAbits.RA2 = (iValue & 0x2) >> 1;
  8552                           	lsrf	(setData@iValue),w
  8553  0BE0  362E               	andlw	01h
  8554  0BE1  3901               	movwf	(??_setData+0)+0
  8555  0BE2  00AC               	rlf	(??_setData+0)+0,f
  8556  0BE3  0DAC               	rlf	(??_setData+0)+0,f
  8557  0BE4  0DAC               	movf	(12),w	;volatile
  8558  0BE5  080C               	xorwf	(??_setData+0)+0,w
  8559  0BE6  062C               	andlw	not (((1<<1)-1)<<2)
  8560  0BE7  39FB               	xorwf	(??_setData+0)+0,w
  8561  0BE8  062C               	movwf	(12)	;volatile
  8562  0BE9  008C               	line	148
  8563                           ;LCD_hd44780u_qy_2004a.c: 148:   PORTAbits.RA3 = (iValue & 0x1) ;
  8564                           	movf	(setData@iValue),w
  8565  0BEA  082E               	andlw	01h
  8566  0BEB  3901               	movwf	(??_setData+0)+0
  8567  0BEC  00AC               	rlf	(??_setData+0)+0,f
  8568  0BED  0DAC               	rlf	(??_setData+0)+0,f
  8569  0BEE  0DAC               	rlf	(??_setData+0)+0,f
  8570  0BEF  0DAC               	movf	(12),w	;volatile
  8571  0BF0  080C               	xorwf	(??_setData+0)+0,w
  8572  0BF1  062C               	andlw	not (((1<<1)-1)<<3)
  8573  0BF2  39F7               	xorwf	(??_setData+0)+0,w
  8574  0BF3  062C               	movwf	(12)	;volatile
  8575  0BF4  008C               	line	149
  8576                           	
  8577                           l5336:	
  8578  0BF5                     ;LCD_hd44780u_qy_2004a.c: 149:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  8579                           		opt asmopt_push
  8580                           	opt asmopt_off
  8581                           	nop2	;2 cycle nop
  8582  0BF5  3200               	nop2	;2 cycle nop
  8583  0BF6  3200               	opt asmopt_pop
  8584                           
  8585                           	line	150
  8586                           	
  8587                           l5338:	
  8588  0BF7                     ;LCD_hd44780u_qy_2004a.c: 150:   PORTCbits.RC0 = 0;
  8589                           	movlb 0	; select bank0
  8590  0BF7  0020               	bcf	(14),0	;volatile
  8591  0BF8  100E               	line	151
  8592                           	
  8593                           l5340:	
  8594  0BF9                     ;LCD_hd44780u_qy_2004a.c: 151:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  8595                           		opt asmopt_push
  8596                           	opt asmopt_off
  8597                           	nop2	;2 cycle nop
  8598  0BF9  3200               	nop2	;2 cycle nop
  8599  0BFA  3200               	opt asmopt_pop
  8600                           
  8601                           	line	152
  8602                           	
  8603                           l308:	
  8604  0BFB                     	return
  8605  0BFB  0008               	opt stack 0
  8606                           GLOBAL	__end_of_setData
  8607                           	__end_of_setData:
  8608  0BFC                     	signat	_setData,4217
  8609                           	global	_SetToSendDataToLCD
  8610                           
  8611 ;; *************** function _SetToSendDataToLCD *****************
  8612 ;; Defined at:
  8613 ;;		line 233 in file "LCD_hd44780u_qy_2004a.c"
  8614 ;; Parameters:    Size  Location     Type
  8615 ;;		None
  8616 ;; Auto vars:     Size  Location     Type
  8617 ;;		None
  8618 ;; Return value:  Size  Location     Type
  8619 ;;                  1    wreg      void 
  8620 ;; Registers used:
  8621 ;;		None
  8622 ;; Tracked objects:
  8623 ;;		On entry : 0/0
  8624 ;;		On exit  : 0/0
  8625 ;;		Unchanged: 0/0
  8626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8631 ;;Total ram usage:        0 bytes
  8632 ;; Hardware stack levels used:    1
  8633 ;; Hardware stack levels required when called:    6
  8634 ;; This function calls:
  8635 ;;		Nothing
  8636 ;; This function is called by:
  8637 ;;		_writeTxtChk
  8638 ;;		_writeInsNoChk
  8639 ;;		_setCursorPosition
  8640 ;; This function uses a non-reentrant model
  8641 ;;
  8642                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  8643                           	line	233
  8644                           global __ptext20
  8645                           __ptext20:	;psect for function _SetToSendDataToLCD
  8646  0918                     psect	text20
  8647                           	file	"LCD_hd44780u_qy_2004a.c"
  8648                           	line	233
  8649                           	global	__size_of_SetToSendDataToLCD
  8650                           	__size_of_SetToSendDataToLCD	equ	__end_of_SetToSendDataToLCD-_SetToSendDataToLCD
  8651  0006                     	
  8652                           _SetToSendDataToLCD:	
  8653  0918                     ;incstack = 0
  8654                           	opt	stack 6
  8655                           ; Regs used in _SetToSendDataToLCD: []
  8656                           	line	235
  8657                           	
  8658                           l5342:	
  8659  0918                     ;LCD_hd44780u_qy_2004a.c: 235:   TRISAbits.TRISA0 = 0;;
  8660                           	movlb 1	; select bank1
  8661  0918  0021               	bcf	(140)^080h,0	;volatile
  8662  0919  100C               	line	236
  8663                           ;LCD_hd44780u_qy_2004a.c: 236:   TRISAbits.TRISA1 = 0;;
  8664                           	bcf	(140)^080h,1	;volatile
  8665  091A  108C               	line	237
  8666                           ;LCD_hd44780u_qy_2004a.c: 237:   TRISAbits.TRISA2 = 0;;
  8667                           	bcf	(140)^080h,2	;volatile
  8668  091B  110C               	line	238
  8669                           ;LCD_hd44780u_qy_2004a.c: 238:   TRISAbits.TRISA3 = 0;;
  8670                           	bcf	(140)^080h,3	;volatile
  8671  091C  118C               	line	239
  8672                           	
  8673                           l338:	
  8674  091D                     	return
  8675  091D  0008               	opt stack 0
  8676                           GLOBAL	__end_of_SetToSendDataToLCD
  8677                           	__end_of_SetToSendDataToLCD:
  8678  091E                     	signat	_SetToSendDataToLCD,89
  8679                           	global	_Esp8266SetupWifi
  8680                           
  8681 ;; *************** function _Esp8266SetupWifi *****************
  8682 ;; Defined at:
  8683 ;;		line 105 in file "ESP8266.c"
  8684 ;; Parameters:    Size  Location     Type
  8685 ;;		None
  8686 ;; Auto vars:     Size  Location     Type
  8687 ;;		None
  8688 ;; Return value:  Size  Location     Type
  8689 ;;                  1    wreg      void 
  8690 ;; Registers used:
  8691 ;;		wreg, status,2
  8692 ;; Tracked objects:
  8693 ;;		On entry : 0/0
  8694 ;;		On exit  : 0/0
  8695 ;;		Unchanged: 0/0
  8696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8699 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8700 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8701 ;;Total ram usage:        1 bytes
  8702 ;; Hardware stack levels used:    1
  8703 ;; Hardware stack levels required when called:    6
  8704 ;; This function calls:
  8705 ;;		Nothing
  8706 ;; This function is called by:
  8707 ;;		_main
  8708 ;;		_Esp8266Init
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  8712                           	file	"ESP8266.c"
  8713                           	line	105
  8714                           global __ptext21
  8715                           __ptext21:	;psect for function _Esp8266SetupWifi
  8716  0938                     psect	text21
  8717                           	file	"ESP8266.c"
  8718                           	line	105
  8719                           	global	__size_of_Esp8266SetupWifi
  8720                           	__size_of_Esp8266SetupWifi	equ	__end_of_Esp8266SetupWifi-_Esp8266SetupWifi
  8721  0007                     	
  8722                           _Esp8266SetupWifi:	
  8723  0938                     ;incstack = 0
  8724                           	opt	stack 9
  8725                           ; Regs used in _Esp8266SetupWifi: [wreg+status,2]
  8726                           	line	107
  8727                           	
  8728                           l6032:	
  8729  0938                     ;ESP8266.c: 107:     gEsp8266State = eSettingUpCommand;
  8730                           	movlb 0	; select bank0
  8731  0938  0020               	clrf	(_gEsp8266State)
  8732  0939  01E0               	line	108
  8733                           	
  8734                           l6034:	
  8735  093A                     ;ESP8266.c: 108:     gESPCommand = eSettingWiFiMode;
  8736                           	movlw	low(05h)
  8737  093A  3005               	movwf	(??_Esp8266SetupWifi+0)+0
  8738  093B  00AC               	movf	(??_Esp8266SetupWifi+0)+0,w
  8739  093C  082C               	movwf	(_gESPCommand)
  8740  093D  00DF               	line	109
  8741                           	
  8742                           l777:	
  8743  093E                     	return
  8744  093E  0008               	opt stack 0
  8745                           GLOBAL	__end_of_Esp8266SetupWifi
  8746                           	__end_of_Esp8266SetupWifi:
  8747  093F                     	signat	_Esp8266SetupWifi,89
  8748                           	global	_Esp8266SetAccessPointMode
  8749                           
  8750 ;; *************** function _Esp8266SetAccessPointMode *****************
  8751 ;; Defined at:
  8752 ;;		line 100 in file "ESP8266.c"
  8753 ;; Parameters:    Size  Location     Type
  8754 ;;		None
  8755 ;; Auto vars:     Size  Location     Type
  8756 ;;		None
  8757 ;; Return value:  Size  Location     Type
  8758 ;;                  1    wreg      void 
  8759 ;; Registers used:
  8760 ;;		wreg, status,2
  8761 ;; Tracked objects:
  8762 ;;		On entry : 0/0
  8763 ;;		On exit  : 0/0
  8764 ;;		Unchanged: 0/0
  8765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8768 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8769 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8770 ;;Total ram usage:        1 bytes
  8771 ;; Hardware stack levels used:    1
  8772 ;; Hardware stack levels required when called:    6
  8773 ;; This function calls:
  8774 ;;		Nothing
  8775 ;; This function is called by:
  8776 ;;		_main
  8777 ;;		_Esp8266Init
  8778 ;; This function uses a non-reentrant model
  8779 ;;
  8780                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  8781                           	line	100
  8782                           global __ptext22
  8783                           __ptext22:	;psect for function _Esp8266SetAccessPointMode
  8784  0931                     psect	text22
  8785                           	file	"ESP8266.c"
  8786                           	line	100
  8787                           	global	__size_of_Esp8266SetAccessPointMode
  8788                           	__size_of_Esp8266SetAccessPointMode	equ	__end_of_Esp8266SetAccessPointMode-_Esp8266SetA
                                 ccessPointMode
  8789  0007                     	
  8790                           _Esp8266SetAccessPointMode:	
  8791  0931                     ;incstack = 0
  8792                           	opt	stack 9
  8793                           ; Regs used in _Esp8266SetAccessPointMode: [wreg+status,2]
  8794                           	line	102
  8795                           	
  8796                           l6028:	
  8797  0931                     ;ESP8266.c: 102:     gEsp8266State = eSettingUpCommand;
  8798                           	movlb 0	; select bank0
  8799  0931  0020               	clrf	(_gEsp8266State)
  8800  0932  01E0               	line	103
  8801                           	
  8802                           l6030:	
  8803  0933                     ;ESP8266.c: 103:     gESPCommand = eSettingAPMode;
  8804                           	movlw	low(04h)
  8805  0933  3004               	movwf	(??_Esp8266SetAccessPointMode+0)+0
  8806  0934  00AC               	movf	(??_Esp8266SetAccessPointMode+0)+0,w
  8807  0935  082C               	movwf	(_gESPCommand)
  8808  0936  00DF               	line	104
  8809                           	
  8810                           l774:	
  8811  0937                     	return
  8812  0937  0008               	opt stack 0
  8813                           GLOBAL	__end_of_Esp8266SetAccessPointMode
  8814                           	__end_of_Esp8266SetAccessPointMode:
  8815  0938                     	signat	_Esp8266SetAccessPointMode,89
  8816                           	global	_Esp8266OpenSocket
  8817                           
  8818 ;; *************** function _Esp8266OpenSocket *****************
  8819 ;; Defined at:
  8820 ;;		line 110 in file "ESP8266.c"
  8821 ;; Parameters:    Size  Location     Type
  8822 ;;		None
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;		None
  8825 ;; Return value:  Size  Location     Type
  8826 ;;                  1    wreg      void 
  8827 ;; Registers used:
  8828 ;;		wreg, status,2
  8829 ;; Tracked objects:
  8830 ;;		On entry : 0/0
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8836 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8837 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8838 ;;Total ram usage:        1 bytes
  8839 ;; Hardware stack levels used:    1
  8840 ;; Hardware stack levels required when called:    6
  8841 ;; This function calls:
  8842 ;;		Nothing
  8843 ;; This function is called by:
  8844 ;;		_main
  8845 ;;		_Esp8266Init
  8846 ;; This function uses a non-reentrant model
  8847 ;;
  8848                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  8849                           	line	110
  8850                           global __ptext23
  8851                           __ptext23:	;psect for function _Esp8266OpenSocket
  8852  092A                     psect	text23
  8853                           	file	"ESP8266.c"
  8854                           	line	110
  8855                           	global	__size_of_Esp8266OpenSocket
  8856                           	__size_of_Esp8266OpenSocket	equ	__end_of_Esp8266OpenSocket-_Esp8266OpenSocket
  8857  0007                     	
  8858                           _Esp8266OpenSocket:	
  8859  092A                     ;incstack = 0
  8860                           	opt	stack 9
  8861                           ; Regs used in _Esp8266OpenSocket: [wreg+status,2]
  8862                           	line	112
  8863                           	
  8864                           l6024:	
  8865  092A                     ;ESP8266.c: 112:     gEsp8266State = eSettingUpCommand;
  8866                           	movlb 0	; select bank0
  8867  092A  0020               	clrf	(_gEsp8266State)
  8868  092B  01E0               	line	113
  8869                           	
  8870                           l6026:	
  8871  092C                     ;ESP8266.c: 113:     gESPCommand = eOpenUDPSocket;
  8872                           	movlw	low(08h)
  8873  092C  3008               	movwf	(??_Esp8266OpenSocket+0)+0
  8874  092D  00AC               	movf	(??_Esp8266OpenSocket+0)+0,w
  8875  092E  082C               	movwf	(_gESPCommand)
  8876  092F  00DF               	line	114
  8877                           	
  8878                           l780:	
  8879  0930                     	return
  8880  0930  0008               	opt stack 0
  8881                           GLOBAL	__end_of_Esp8266OpenSocket
  8882                           	__end_of_Esp8266OpenSocket:
  8883  0931                     	signat	_Esp8266OpenSocket,89
  8884                           	global	_EM1812EntryPoint
  8885                           
  8886 ;; *************** function _EM1812EntryPoint *****************
  8887 ;; Defined at:
  8888 ;;		line 95 in file "EM1812.c"
  8889 ;; Parameters:    Size  Location     Type
  8890 ;;  oHumidity       1    wreg     PTR short 
  8891 ;;		 -> wHumidity(2), 
  8892 ;;  oTemperature    1   29[BANK0 ] PTR short 
  8893 ;;		 -> wTemperature(2), 
  8894 ;; Auto vars:     Size  Location     Type
  8895 ;;  oHumidity       1   12[BANK1 ] PTR short 
  8896 ;;		 -> wHumidity(2), 
  8897 ;;  ReceptionBuf    8    4[BANK1 ] unsigned char [8]
  8898 ;;  SetGetTempCo    4    0[BANK1 ] unsigned char [4]
  8899 ;; Return value:  Size  Location     Type
  8900 ;;                  2   29[BANK0 ] int 
  8901 ;; Registers used:
  8902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8903 ;; Tracked objects:
  8904 ;;		On entry : 0/0
  8905 ;;		On exit  : 0/0
  8906 ;;		Unchanged: 0/0
  8907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8908 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8909 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
       0       0
  8910 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  8911 ;;      Totals:         0       7      13       0       0       0       0       0       0       0       0       0       
       0       0
  8912 ;;Total ram usage:       20 bytes
  8913 ;; Hardware stack levels used:    1
  8914 ;; Hardware stack levels required when called:    8
  8915 ;; This function calls:
  8916 ;;		_GetI2CStatus
  8917 ;;		_GetNewReceivedData
  8918 ;;		_I2C_GetData
  8919 ;;		_I2C_SendData
  8920 ;; This function is called by:
  8921 ;;		_main
  8922 ;; This function uses a non-reentrant model
  8923 ;;
  8924                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  8925                           	file	"EM1812.c"
  8926                           	line	95
  8927                           global __ptext24
  8928                           __ptext24:	;psect for function _EM1812EntryPoint
  8929  03E2                     psect	text24
  8930                           	file	"EM1812.c"
  8931                           	line	95
  8932                           	global	__size_of_EM1812EntryPoint
  8933                           	__size_of_EM1812EntryPoint	equ	__end_of_EM1812EntryPoint-_EM1812EntryPoint
  8934  0130                     	
  8935                           _EM1812EntryPoint:	
  8936  03E2                     ;incstack = 0
  8937                           	opt	stack 7
  8938                           ; Regs used in _EM1812EntryPoint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8939                           ;EM1812EntryPoint@oHumidity stored from wreg
  8940                           	movlb 1	; select bank1
  8941  03E2  0021               	movwf	(EM1812EntryPoint@oHumidity)^080h
  8942  03E3  00C3               	line	97
  8943                           	
  8944                           l5928:	
  8945  03E4                     ;EM1812.c: 95: int EM1812EntryPoint(int16_t* oHumidity, int16_t* oTemperature);EM1812.c:
                                  96: {;EM1812.c: 97:     uint8_t SetGetTempCommand[4] = {0xB8,0x03,0x00,0x04};
  8946                           	movf	(EM1812EntryPoint@F1960+3)^080h,w
  8947  03E4  0849               	movwf	(EM1812EntryPoint@SetGetTempCommand+3)^080h
  8948  03E5  00BA               	movf	(EM1812EntryPoint@F1960+2)^080h,w
  8949  03E6  0848               	movwf	(EM1812EntryPoint@SetGetTempCommand+2)^080h
  8950  03E7  00B9               	movf	(EM1812EntryPoint@F1960+1)^080h,w
  8951  03E8  0847               	movwf	(EM1812EntryPoint@SetGetTempCommand+1)^080h
  8952  03E9  00B8               	movf	(EM1812EntryPoint@F1960)^080h,w
  8953  03EA  0846               	movwf	(EM1812EntryPoint@SetGetTempCommand)^080h
  8954  03EB  00B7               
  8955                           	line	98
  8956                           	
  8957                           l5930:	
  8958  03EC                     ;EM1812.c: 98:     uint8_t ReceptionBuffer[8] = {0,0,0,0};
  8959                           	movlw	low(EM1812EntryPoint@F1962)
  8960  03EC  30A0               	movwf	fsr1l
  8961  03ED  0086               	movlw	high(EM1812EntryPoint@F1962)
  8962  03EE  3000               	movwf	fsr1h
  8963  03EF  0087               	movlw	low(EM1812EntryPoint@ReceptionBuffer)
  8964  03F0  30BB               	movwf	fsr0l
  8965  03F1  0084               	movlw	high(EM1812EntryPoint@ReceptionBuffer)
  8966  03F2  3000               	movwf	fsr0h
  8967  03F3  0085               	movlw	8
  8968  03F4  3008               	movlb 0	; select bank0
  8969  03F5  0020               	movwf	(??_EM1812EntryPoint+0)+0
  8970  03F6  00BF               u4220:
  8971  03F7                     	moviw	fsr1++
  8972  03F7  0016               	movwi	fsr0++
  8973  03F8  001A               	decfsz	(??_EM1812EntryPoint+0)+0,f
  8974  03F9  0BBF               	goto	u4220
  8975  03FA  2BF7               	line	101
  8976                           ;EM1812.c: 99:     static uint8_t wTry =0;;EM1812.c: 101:     switch( wTempState )
  8977                           	goto	l6006
  8978  03FB  2CFC               	line	103
  8979                           ;EM1812.c: 102:     {;EM1812.c: 103:         case eSetGetTemp:
  8980                           	
  8981                           l478:	
  8982  03FC                     	line	104
  8983                           	
  8984                           l5932:	
  8985  03FC                     ;EM1812.c: 104:             if(I2C_SendData(SetGetTempCommand,4))
  8986                           	movlw	low(04h)
  8987  03FC  3004               	movwf	(??_EM1812EntryPoint+0)+0
  8988  03FD  00BF               	movf	(??_EM1812EntryPoint+0)+0,w
  8989  03FE  083F               	movwf	(I2C_SendData@iNumberofByte)
  8990  03FF  00B8               	movlw	(low(EM1812EntryPoint@SetGetTempCommand|((0x0)<<8)))&0ffh
  8991  0400  30B7               	fcall	_I2C_SendData
  8992  0401  318B  23FC  3183   	movlb 0	; select bank0
  8993  0404  0020               	movf	((0+(?_I2C_SendData))),w
  8994  0405  0838               iorwf	((1+(?_I2C_SendData))),w
  8995  0406  0439               	btfsc	status,2
  8996  0407  1903               	goto	u4231
  8997  0408  2C0A               	goto	u4230
  8998  0409  2C0B               u4231:
  8999  040A                     	goto	l6008
  9000  040A  2D0E               u4230:
  9001  040B                     	line	106
  9002                           	
  9003                           l5934:	
  9004  040B                     ;EM1812.c: 105:             {;EM1812.c: 106:                 wTempState = eWaitSetGetTem
                                 pProcessing;
  9005                           	clrf	(_wTempState)
  9006  040B  01DA               	incf	(_wTempState),f
  9007  040C  0ADA               	line	107
  9008                           ;EM1812.c: 107:                 INTCONbits.TMR0IE = 0;
  9009                           	bcf	(11),5	;volatile
  9010  040D  128B               	line	108
  9011                           	
  9012                           l5936:	
  9013  040E                     ;EM1812.c: 108:                 TMR0 = 0;
  9014                           	clrf	(21)	;volatile
  9015  040E  0195               	line	109
  9016                           ;EM1812.c: 109:                 wTimer0Counter=0;
  9017                           	clrf	(_wTimer0Counter)
  9018  040F  01D9               	line	110
  9019                           	
  9020                           l5938:	
  9021  0410                     ;EM1812.c: 110:                 INTCONbits.TMR0IE = 1;
  9022                           	bsf	(11),5	;volatile
  9023  0410  168B               	goto	l6008
  9024  0411  2D0E               	line	111
  9025                           ;EM1812.c: 111:             }
  9026                           	
  9027                           l479:	
  9028  0412                     	line	112
  9029                           ;EM1812.c: 112:             break;
  9030                           	goto	l6008
  9031  0412  2D0E               	line	113
  9032                           ;EM1812.c: 113:         case eWaitSetGetTempProcessing:
  9033                           	
  9034                           l481:	
  9035  0413                     	line	114
  9036                           	
  9037                           l5940:	
  9038  0413                     ;EM1812.c: 114:             if(wTimer0Counter == 2)
  9039                           		movlw	2
  9040  0413  3002               	xorwf	((_wTimer0Counter)),w
  9041  0414  0659               	btfss	status,2
  9042  0415  1D03               	goto	u4241
  9043  0416  2C18               	goto	u4240
  9044  0417  2C19               u4241:
  9045  0418                     	goto	l6008
  9046  0418  2D0E               u4240:
  9047  0419                     	line	116
  9048                           	
  9049                           l5942:	
  9050  0419                     ;EM1812.c: 115:             {;EM1812.c: 116:                 wTempState = eGetTemp;
  9051                           	movlw	low(02h)
  9052  0419  3002               	movwf	(??_EM1812EntryPoint+0)+0
  9053  041A  00BF               	movf	(??_EM1812EntryPoint+0)+0,w
  9054  041B  083F               	movwf	(_wTempState)
  9055  041C  00DA               	line	117
  9056                           	
  9057                           l5944:	
  9058  041D                     ;EM1812.c: 117:                 INTCONbits.TMR0IE = 0;
  9059                           	bcf	(11),5	;volatile
  9060  041D  128B               	goto	l6008
  9061  041E  2D0E               	line	118
  9062                           ;EM1812.c: 118:             }
  9063                           	
  9064                           l482:	
  9065  041F                     	line	119
  9066                           ;EM1812.c: 119:             break;
  9067                           	goto	l6008
  9068  041F  2D0E               	line	120
  9069                           ;EM1812.c: 120:         case eGetTemp:
  9070                           	
  9071                           l483:	
  9072  0420                     	line	121
  9073                           	
  9074                           l5946:	
  9075  0420                     ;EM1812.c: 121:             if(GetI2CStatus() == CommandFailed)
  9076                           	fcall	_GetI2CStatus
  9077  0420  3189  2147  3183   		movlw	5
  9078  0423  3005               	movlb 0	; select bank0
  9079  0424  0020               	xorwf	((0+(?_GetI2CStatus))),w
  9080  0425  062C               iorwf	((1+(?_GetI2CStatus))),w
  9081  0426  042D               	btfss	status,2
  9082  0427  1D03               	goto	u4251
  9083  0428  2C2A               	goto	u4250
  9084  0429  2C2B               u4251:
  9085  042A                     	goto	l5956
  9086  042A  2C3C               u4250:
  9087  042B                     	line	123
  9088                           	
  9089                           l5948:	
  9090  042B                     ;EM1812.c: 122:             {;EM1812.c: 123:                 wTempState = eSetGetTemp;
  9091                           	clrf	(_wTempState)
  9092  042B  01DA               	line	124
  9093                           	
  9094                           l5950:	
  9095  042C                     ;EM1812.c: 124:                 wTry++;
  9096                           	movlw	low(01h)
  9097  042C  3001               	movwf	(??_EM1812EntryPoint+0)+0
  9098  042D  00BF               	movf	(??_EM1812EntryPoint+0)+0,w
  9099  042E  083F               	addwf	(EM1812EntryPoint@wTry),f
  9100  042F  07CA               	line	125
  9101                           	
  9102                           l5952:	
  9103  0430                     ;EM1812.c: 125:                 if(wTry == 6)
  9104                           		movlw	6
  9105  0430  3006               	xorwf	((EM1812EntryPoint@wTry)),w
  9106  0431  064A               	btfss	status,2
  9107  0432  1D03               	goto	u4261
  9108  0433  2C35               	goto	u4260
  9109  0434  2C36               u4261:
  9110  0435                     	goto	l6008
  9111  0435  2D0E               u4260:
  9112  0436                     	line	127
  9113                           	
  9114                           l5954:	
  9115  0436                     ;EM1812.c: 126:                 {;EM1812.c: 127:                    wTempState = eError;
                                 
  9116                           	movlw	low(06h)
  9117  0436  3006               	movwf	(??_EM1812EntryPoint+0)+0
  9118  0437  00BF               	movf	(??_EM1812EntryPoint+0)+0,w
  9119  0438  083F               	movwf	(_wTempState)
  9120  0439  00DA               	goto	l6008
  9121  043A  2D0E               	line	128
  9122                           ;EM1812.c: 128:                 }
  9123                           	
  9124                           l485:	
  9125  043B                     	line	129
  9126                           ;EM1812.c: 129:             }
  9127                           	goto	l6008
  9128  043B  2D0E               	line	130
  9129                           ;EM1812.c: 130:             else if (GetI2CStatus() == CommandCompleted)
  9130                           	
  9131                           l484:	
  9132  043C                     	
  9133                           l5956:	
  9134  043C                     	fcall	_GetI2CStatus
  9135  043C  3189  2147  3183   		movlw	3
  9136  043F  3003               	movlb 0	; select bank0
  9137  0440  0020               	xorwf	((0+(?_GetI2CStatus))),w
  9138  0441  062C               iorwf	((1+(?_GetI2CStatus))),w
  9139  0442  042D               	btfss	status,2
  9140  0443  1D03               	goto	u4271
  9141  0444  2C46               	goto	u4270
  9142  0445  2C47               u4271:
  9143  0446                     	goto	l6008
  9144  0446  2D0E               u4270:
  9145  0447                     	line	132
  9146                           	
  9147                           l5958:	
  9148  0447                     ;EM1812.c: 131:             {;EM1812.c: 132:                 if(I2C_GetData(0xB9,8))
  9149                           	movlw	low(08h)
  9150  0447  3008               	movwf	(??_EM1812EntryPoint+0)+0
  9151  0448  00BF               	movf	(??_EM1812EntryPoint+0)+0,w
  9152  0449  083F               	movwf	(I2C_GetData@iRxNumberOfByteExpected)
  9153  044A  00AC               	movlw	low(0B9h)
  9154  044B  30B9               	fcall	_I2C_GetData
  9155  044C  318B  234E  3183   	movlb 0	; select bank0
  9156  044F  0020               	movf	((0+(?_I2C_GetData))),w
  9157  0450  082C               iorwf	((1+(?_I2C_GetData))),w
  9158  0451  042D               	btfsc	status,2
  9159  0452  1903               	goto	u4281
  9160  0453  2C55               	goto	u4280
  9161  0454  2C56               u4281:
  9162  0455                     	goto	l6008
  9163  0455  2D0E               u4280:
  9164  0456                     	line	134
  9165                           	
  9166                           l5960:	
  9167  0456                     ;EM1812.c: 133:                 {;EM1812.c: 134:                     wTempState = eWaitG
                                 etTempProcessing;
  9168                           	movlw	low(03h)
  9169  0456  3003               	movwf	(??_EM1812EntryPoint+0)+0
  9170  0457  00BF               	movf	(??_EM1812EntryPoint+0)+0,w
  9171  0458  083F               	movwf	(_wTempState)
  9172  0459  00DA               	line	135
  9173                           	
  9174                           l5962:	
  9175  045A                     ;EM1812.c: 135:                     INTCONbits.TMR0IE = 0;
  9176                           	bcf	(11),5	;volatile
  9177  045A  128B               	line	136
  9178                           	
  9179                           l5964:	
  9180  045B                     ;EM1812.c: 136:                     TMR0 = 0;
  9181                           	clrf	(21)	;volatile
  9182  045B  0195               	line	137
  9183                           	
  9184                           l5966:	
  9185  045C                     ;EM1812.c: 137:                     wTimer0Counter=0;
  9186                           	clrf	(_wTimer0Counter)
  9187  045C  01D9               	line	138
  9188                           	
  9189                           l5968:	
  9190  045D                     ;EM1812.c: 138:                     INTCONbits.TMR0IE = 1;
  9191                           	bsf	(11),5	;volatile
  9192  045D  168B               	goto	l6008
  9193  045E  2D0E               	line	139
  9194                           ;EM1812.c: 139:                 }
  9195                           	
  9196                           l488:	
  9197  045F                     	goto	l6008
  9198  045F  2D0E               	line	140
  9199                           ;EM1812.c: 140:             }
  9200                           	
  9201                           l487:	
  9202  0460                     	goto	l6008
  9203  0460  2D0E               	
  9204                           l486:	
  9205  0461                     	line	141
  9206                           ;EM1812.c: 141:             break;
  9207                           	goto	l6008
  9208  0461  2D0E               	line	142
  9209                           ;EM1812.c: 142:         case eWaitGetTempProcessing:
  9210                           	
  9211                           l489:	
  9212  0462                     	line	143
  9213                           	
  9214                           l5970:	
  9215  0462                     ;EM1812.c: 143:             if(wTimer0Counter == 2)
  9216                           		movlw	2
  9217  0462  3002               	xorwf	((_wTimer0Counter)),w
  9218  0463  0659               	btfss	status,2
  9219  0464  1D03               	goto	u4291
  9220  0465  2C67               	goto	u4290
  9221  0466  2C68               u4291:
  9222  0467                     	goto	l6008
  9223  0467  2D0E               u4290:
  9224  0468                     	line	145
  9225                           	
  9226                           l5972:	
  9227  0468                     ;EM1812.c: 144:             {;EM1812.c: 145:                 wTempState = eValueReceptio
                                 n;
  9228                           	movlw	low(04h)
  9229  0468  3004               	movwf	(??_EM1812EntryPoint+0)+0
  9230  0469  00BF               	movf	(??_EM1812EntryPoint+0)+0,w
  9231  046A  083F               	movwf	(_wTempState)
  9232  046B  00DA               	line	146
  9233                           	
  9234                           l5974:	
  9235  046C                     ;EM1812.c: 146:                 INTCONbits.TMR0IE = 0;
  9236                           	bcf	(11),5	;volatile
  9237  046C  128B               	goto	l6008
  9238  046D  2D0E               	line	147
  9239                           ;EM1812.c: 147:             }
  9240                           	
  9241                           l490:	
  9242  046E                     	line	148
  9243                           ;EM1812.c: 148:             break;
  9244                           	goto	l6008
  9245  046E  2D0E               	line	149
  9246                           ;EM1812.c: 149:         case eValueReception:
  9247                           	
  9248                           l491:	
  9249  046F                     	line	150
  9250                           	
  9251                           l5976:	
  9252  046F                     ;EM1812.c: 150:             if(GetI2CStatus() == CommandFailed)
  9253                           	fcall	_GetI2CStatus
  9254  046F  3189  2147  3183   		movlw	5
  9255  0472  3005               	movlb 0	; select bank0
  9256  0473  0020               	xorwf	((0+(?_GetI2CStatus))),w
  9257  0474  062C               iorwf	((1+(?_GetI2CStatus))),w
  9258  0475  042D               	btfss	status,2
  9259  0476  1D03               	goto	u4301
  9260  0477  2C79               	goto	u4300
  9261  0478  2C7A               u4301:
  9262  0479                     	goto	l5980
  9263  0479  2C7C               u4300:
  9264  047A                     	line	152
  9265                           	
  9266                           l5978:	
  9267  047A                     ;EM1812.c: 151:             {;EM1812.c: 152:                 wTempState=eSetGetTemp;
  9268                           	clrf	(_wTempState)
  9269  047A  01DA               	line	153
  9270                           ;EM1812.c: 153:             }
  9271                           	goto	l6008
  9272  047B  2D0E               	line	154
  9273                           ;EM1812.c: 154:             else if(GetI2CStatus() == CommandCompleted)
  9274                           	
  9275                           l492:	
  9276  047C                     	
  9277                           l5980:	
  9278  047C                     	fcall	_GetI2CStatus
  9279  047C  3189  2147  3183   		movlw	3
  9280  047F  3003               	movlb 0	; select bank0
  9281  0480  0020               	xorwf	((0+(?_GetI2CStatus))),w
  9282  0481  062C               iorwf	((1+(?_GetI2CStatus))),w
  9283  0482  042D               	btfss	status,2
  9284  0483  1D03               	goto	u4311
  9285  0484  2C86               	goto	u4310
  9286  0485  2C87               u4311:
  9287  0486                     	goto	l6008
  9288  0486  2D0E               u4310:
  9289  0487                     	line	156
  9290                           	
  9291                           l5982:	
  9292  0487                     ;EM1812.c: 155:             {;EM1812.c: 156:                 GetNewReceivedData(Receptio
                                 nBuffer,8);
  9293                           	movlw	low(08h)
  9294  0487  3008               	movwf	(??_EM1812EntryPoint+0)+0
  9295  0488  00BF               	movf	(??_EM1812EntryPoint+0)+0,w
  9296  0489  083F               	movwf	(GetNewReceivedData@oDataSize)
  9297  048A  00B8               	movlw	(low(EM1812EntryPoint@ReceptionBuffer|((0x0)<<8)))&0ffh
  9298  048B  30BB               	fcall	_GetNewReceivedData
  9299  048C  3189  21DC  3183   	line	157
  9300                           	
  9301                           l5984:	
  9302  048F                     ;EM1812.c: 157:                 if(ReceptionBuffer[2] & 0x80 )
  9303                           	movlb 1	; select bank1
  9304  048F  0021               	btfss	0+(EM1812EntryPoint@ReceptionBuffer)^080h+02h,(7)&7
  9305  0490  1FBD               	goto	u4321
  9306  0491  2C93               	goto	u4320
  9307  0492  2C94               u4321:
  9308  0493                     	goto	l5988
  9309  0493  2CB4               u4320:
  9310  0494                     	line	159
  9311                           	
  9312                           l5986:	
  9313  0494                     ;EM1812.c: 158:                 {;EM1812.c: 159:                   *oHumidity = -((Recep
                                 tionBuffer[2] & 0x7F)*256) + ReceptionBuffer[3];
  9314                           	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+02h,w
  9315  0494  083D               	andlw	07Fh
  9316  0495  397F               	movlb 0	; select bank0
  9317  0496  0020               	movwf	(??_EM1812EntryPoint+0)+0
  9318  0497  00BF               	clrf	(??_EM1812EntryPoint+0)+0+1
  9319  0498  01C0               	movf	(??_EM1812EntryPoint+0)+0,w
  9320  0499  083F               	movwf	(??_EM1812EntryPoint+0)+1
  9321  049A  00C0               	clrf	(??_EM1812EntryPoint+0)+0
  9322  049B  01BF               	comf	(??_EM1812EntryPoint+0)+0,f
  9323  049C  09BF               	comf	(??_EM1812EntryPoint+0)+1,f
  9324  049D  09C0               	incf	(??_EM1812EntryPoint+0)+0,f
  9325  049E  0ABF               	skipnz
  9326  049F  1903               	incf	(??_EM1812EntryPoint+0)+1,f
  9327  04A0  0AC0               	movlb 1	; select bank1
  9328  04A1  0021               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+03h,w
  9329  04A2  083E               	movlb 0	; select bank0
  9330  04A3  0020               	addwf	0+(??_EM1812EntryPoint+0)+0,w
  9331  04A4  073F               	movwf	(??_EM1812EntryPoint+3)+0
  9332  04A5  00C2               	movf	1+(??_EM1812EntryPoint+0)+0,w
  9333  04A6  0840               	skipnc
  9334  04A7  1803               	incf	1+(??_EM1812EntryPoint+0)+0,w
  9335  04A8  0A40               	movwf	((??_EM1812EntryPoint+3)+0)+1
  9336  04A9  00C3               	movlb 1	; select bank1
  9337  04AA  0021               	movf	(EM1812EntryPoint@oHumidity)^080h,w
  9338  04AB  0843               	movwf	fsr1l
  9339  04AC  0086               	clrf fsr1h	
  9340  04AD  0187               	
  9341                           	movlb 0	; select bank0
  9342  04AE  0020               	movf	0+(??_EM1812EntryPoint+3)+0,w
  9343  04AF  0842               	movwi	[0]fsr1
  9344  04B0  3FC0               	movf	1+(??_EM1812EntryPoint+3)+0,w
  9345  04B1  0843               	movwi	[1]fsr1
  9346  04B2  3FC1               	line	160
  9347                           ;EM1812.c: 160:                 }
  9348                           	goto	l5990
  9349  04B3  2CBD               	line	161
  9350                           ;EM1812.c: 161:                 else
  9351                           	
  9352                           l495:	
  9353  04B4                     	line	163
  9354                           	
  9355                           l5988:	
  9356  04B4                     ;EM1812.c: 162:                 {;EM1812.c: 163:                   *oHumidity = (Recepti
                                 onBuffer[2]*256) + ReceptionBuffer[3];
  9357                           	movlb 1	; select bank1
  9358  04B4  0021               	movf	(EM1812EntryPoint@oHumidity)^080h,w
  9359  04B5  0843               	movwf	fsr1l
  9360  04B6  0086               	clrf fsr1h	
  9361  04B7  0187               	
  9362                           	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+03h,w
  9363  04B8  083E               	movwi	[0]fsr1
  9364  04B9  3FC0               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+02h,w
  9365  04BA  083D               	movwi	[1]fsr1
  9366  04BB  3FC1               	goto	l5990
  9367  04BC  2CBD               	line	164
  9368                           ;EM1812.c: 164:                 }
  9369                           	
  9370                           l496:	
  9371  04BD                     	line	165
  9372                           	
  9373                           l5990:	
  9374  04BD                     ;EM1812.c: 165:                 if(ReceptionBuffer[4] & 0x80 )
  9375                           	movlb 1	; select bank1
  9376  04BD  0021               	btfss	0+(EM1812EntryPoint@ReceptionBuffer)^080h+04h,(7)&7
  9377  04BE  1FBF               	goto	u4331
  9378  04BF  2CC1               	goto	u4330
  9379  04C0  2CC2               u4331:
  9380  04C1                     	goto	l5994
  9381  04C1  2CE0               u4330:
  9382  04C2                     	line	167
  9383                           	
  9384                           l5992:	
  9385  04C2                     ;EM1812.c: 166:                 {;EM1812.c: 167:                   *oTemperature = -((Re
                                 ceptionBuffer[4] & 0x7F)*256) + ReceptionBuffer[5];
  9386                           	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+04h,w
  9387  04C2  083F               	andlw	07Fh
  9388  04C3  397F               	movlb 0	; select bank0
  9389  04C4  0020               	movwf	(??_EM1812EntryPoint+0)+0
  9390  04C5  00BF               	clrf	(??_EM1812EntryPoint+0)+0+1
  9391  04C6  01C0               	movf	(??_EM1812EntryPoint+0)+0,w
  9392  04C7  083F               	movwf	(??_EM1812EntryPoint+0)+1
  9393  04C8  00C0               	clrf	(??_EM1812EntryPoint+0)+0
  9394  04C9  01BF               	comf	(??_EM1812EntryPoint+0)+0,f
  9395  04CA  09BF               	comf	(??_EM1812EntryPoint+0)+1,f
  9396  04CB  09C0               	incf	(??_EM1812EntryPoint+0)+0,f
  9397  04CC  0ABF               	skipnz
  9398  04CD  1903               	incf	(??_EM1812EntryPoint+0)+1,f
  9399  04CE  0AC0               	movlb 1	; select bank1
  9400  04CF  0021               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+05h,w
  9401  04D0  0840               	movlb 0	; select bank0
  9402  04D1  0020               	addwf	0+(??_EM1812EntryPoint+0)+0,w
  9403  04D2  073F               	movwf	(??_EM1812EntryPoint+3)+0
  9404  04D3  00C2               	movf	1+(??_EM1812EntryPoint+0)+0,w
  9405  04D4  0840               	skipnc
  9406  04D5  1803               	incf	1+(??_EM1812EntryPoint+0)+0,w
  9407  04D6  0A40               	movwf	((??_EM1812EntryPoint+3)+0)+1
  9408  04D7  00C3               	movf	(EM1812EntryPoint@oTemperature),w
  9409  04D8  083D               	movwf	fsr1l
  9410  04D9  0086               	clrf fsr1h	
  9411  04DA  0187               	
  9412                           	movf	0+(??_EM1812EntryPoint+3)+0,w
  9413  04DB  0842               	movwi	[0]fsr1
  9414  04DC  3FC0               	movf	1+(??_EM1812EntryPoint+3)+0,w
  9415  04DD  0843               	movwi	[1]fsr1
  9416  04DE  3FC1               	line	168
  9417                           ;EM1812.c: 168:                 }
  9418                           	goto	l5996
  9419  04DF  2CEA               	line	169
  9420                           ;EM1812.c: 169:                 else
  9421                           	
  9422                           l497:	
  9423  04E0                     	line	171
  9424                           	
  9425                           l5994:	
  9426  04E0                     ;EM1812.c: 170:                 {;EM1812.c: 171:                   *oTemperature = (Rece
                                 ptionBuffer[4] *256) + ReceptionBuffer[5];
  9427                           	movlb 0	; select bank0
  9428  04E0  0020               	movf	(EM1812EntryPoint@oTemperature),w
  9429  04E1  083D               	movwf	fsr1l
  9430  04E2  0086               	clrf fsr1h	
  9431  04E3  0187               	
  9432                           	movlb 1	; select bank1
  9433  04E4  0021               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+05h,w
  9434  04E5  0840               	movwi	[0]fsr1
  9435  04E6  3FC0               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+04h,w
  9436  04E7  083F               	movwi	[1]fsr1
  9437  04E8  3FC1               	goto	l5996
  9438  04E9  2CEA               	line	172
  9439                           ;EM1812.c: 172:                 }
  9440                           	
  9441                           l498:	
  9442  04EA                     	line	173
  9443                           	
  9444                           l5996:	
  9445  04EA                     ;EM1812.c: 173:                 wTempState = eIdle;
  9446                           	movlw	low(05h)
  9447  04EA  3005               	movlb 0	; select bank0
  9448  04EB  0020               	movwf	(??_EM1812EntryPoint+0)+0
  9449  04EC  00BF               	movf	(??_EM1812EntryPoint+0)+0,w
  9450  04ED  083F               	movwf	(_wTempState)
  9451  04EE  00DA               	line	174
  9452                           	
  9453                           l5998:	
  9454  04EF                     ;EM1812.c: 174:                 return 1;
  9455                           	movlw	01h
  9456  04EF  3001               	movwf	(?_EM1812EntryPoint)
  9457  04F0  00BD               	movlw	0
  9458  04F1  3000               	movwf	((?_EM1812EntryPoint))+1
  9459  04F2  00BE               	goto	l499
  9460  04F3  2D11               	
  9461                           l6000:	
  9462  04F4                     	goto	l499
  9463  04F4  2D11               	line	175
  9464                           ;EM1812.c: 175:             }
  9465                           	
  9466                           l494:	
  9467  04F5                     	goto	l6008
  9468  04F5  2D0E               	
  9469                           l493:	
  9470  04F6                     	line	176
  9471                           ;EM1812.c: 176:             break;
  9472                           	goto	l6008
  9473  04F6  2D0E               	line	177
  9474                           ;EM1812.c: 177:         case eIdle:
  9475                           	
  9476                           l500:	
  9477  04F7                     	line	178
  9478                           	
  9479                           l6002:	
  9480  04F7                     ;EM1812.c: 178:             wTry=0;
  9481                           	clrf	(EM1812EntryPoint@wTry)
  9482  04F7  01CA               	line	179
  9483                           ;EM1812.c: 179:             break;
  9484                           	goto	l6008
  9485  04F8  2D0E               	line	180
  9486                           ;EM1812.c: 180:         case eError:
  9487                           	
  9488                           l501:	
  9489  04F9                     	goto	l6008
  9490  04F9  2D0E               	line	181
  9491                           ;EM1812.c: 181:         default:
  9492                           	
  9493                           l502:	
  9494  04FA                     	line	182
  9495                           ;EM1812.c: 182:             break;
  9496                           	goto	l6008
  9497  04FA  2D0E               	line	183
  9498                           	
  9499                           l6004:	
  9500  04FB                     ;EM1812.c: 183:     }
  9501                           	goto	l6008
  9502  04FB  2D0E               	
  9503                           l477:	
  9504  04FC                     	
  9505                           l6006:	
  9506  04FC                     	movf	(_wTempState),w
  9507  04FC  085A               	movwf	(??_EM1812EntryPoint+0)+0
  9508  04FD  00BF               	clrf	(??_EM1812EntryPoint+0)+0+1
  9509  04FE  01C0               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9510                           ; Switch size 1, requested type "space"
  9511                           ; Number of cases is 1, Range of values is 0 to 0
  9512                           ; switch strategies available:
  9513                           ; Name         Instructions Cycles
  9514                           ; simple_byte            4     3 (average)
  9515                           ; direct_byte            8     6 (fixed)
  9516                           ; jumptable            260     6 (fixed)
  9517                           ;	Chosen strategy is simple_byte
  9518                           
  9519                           	movf 1+(??_EM1812EntryPoint+0)+0,w
  9520  04FF  0840               	opt asmopt_push
  9521                           	opt asmopt_off
  9522                           	xorlw	0^0	; case 0
  9523  0500  3A00               	skipnz
  9524  0501  1903               	goto	l6990
  9525  0502  2D04               	goto	l6008
  9526  0503  2D0E               	opt asmopt_pop
  9527                           	
  9528                           l6990:	
  9529  0504                     ; Switch size 1, requested type "space"
  9530                           ; Number of cases is 7, Range of values is 0 to 6
  9531                           ; switch strategies available:
  9532                           ; Name         Instructions Cycles
  9533                           ; direct_byte           20     6 (fixed)
  9534                           ; simple_byte           22    12 (average)
  9535                           ; jumptable            260     6 (fixed)
  9536                           ;	Chosen strategy is direct_byte
  9537                           
  9538                           	movf 0+(??_EM1812EntryPoint+0)+0,w
  9539  0504  083F               	movwf fsr0l
  9540  0505  0084               	movlw	7
  9541  0506  3007               	subwf	fsr0l,w
  9542  0507  0204               skipnc
  9543  0508  1803               goto l6008
  9544  0509  2D0E               movlp high(S6992)
  9545  050A  3188               	lslf fsr0l,w
  9546  050B  3504               	addlw low(S6992)
  9547  050C  3E00               	movwf pc
  9548  050D  0082               psect	swtext1,local,class=CONST,delta=2
  9549                           global __pswtext1
  9550                           __pswtext1:
  9551  0800                     S6992:
  9552  0800                     	ljmp	l5932
  9553  0800  3183  2BFC         	ljmp	l5940
  9554  0802  3184  2C13         	ljmp	l5946
  9555  0804  3184  2C20         	ljmp	l5970
  9556  0806  3184  2C62         	ljmp	l5976
  9557  0808  3184  2C6F         	ljmp	l6002
  9558  080A  3184  2CF7         	ljmp	l6008
  9559  080C  3185  2D0E         psect	text24
  9560                           
  9561                           	
  9562                           l480:	
  9563  050E                     	line	184
  9564                           	
  9565                           l6008:	
  9566  050E                     ;EM1812.c: 184:     return 0;
  9567                           	clrf	(?_EM1812EntryPoint)
  9568  050E  01BD               	clrf	(?_EM1812EntryPoint+1)
  9569  050F  01BE               	goto	l499
  9570  0510  2D11               	
  9571                           l6010:	
  9572  0511                     	line	185
  9573                           	
  9574                           l499:	
  9575  0511                     	return
  9576  0511  0008               	opt stack 0
  9577                           GLOBAL	__end_of_EM1812EntryPoint
  9578                           	__end_of_EM1812EntryPoint:
  9579  0512                     	signat	_EM1812EntryPoint,8314
  9580                           	global	_I2C_SendData
  9581                           
  9582 ;; *************** function _I2C_SendData *****************
  9583 ;; Defined at:
  9584 ;;		line 43 in file "I2C.c"
  9585 ;; Parameters:    Size  Location     Type
  9586 ;;  iData           1    wreg     PTR unsigned char 
  9587 ;;		 -> EM1812EntryPoint@SetGetTempCommand(4), 
  9588 ;;  iNumberofByt    1   24[BANK0 ] unsigned char 
  9589 ;; Auto vars:     Size  Location     Type
  9590 ;;  iData           1   28[BANK0 ] PTR unsigned char 
  9591 ;;		 -> EM1812EntryPoint@SetGetTempCommand(4), 
  9592 ;; Return value:  Size  Location     Type
  9593 ;;                  2   24[BANK0 ] int 
  9594 ;; Registers used:
  9595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9596 ;; Tracked objects:
  9597 ;;		On entry : 0/0
  9598 ;;		On exit  : 0/0
  9599 ;;		Unchanged: 0/0
  9600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9601 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9602 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9603 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9604 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  9605 ;;Total ram usage:        5 bytes
  9606 ;; Hardware stack levels used:    1
  9607 ;; Hardware stack levels required when called:    7
  9608 ;; This function calls:
  9609 ;;		_memcpy
  9610 ;; This function is called by:
  9611 ;;		_EM1812EntryPoint
  9612 ;; This function uses a non-reentrant model
  9613 ;;
  9614                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  9615                           	file	"I2C.c"
  9616                           	line	43
  9617                           global __ptext25
  9618                           __ptext25:	;psect for function _I2C_SendData
  9619  0BFC                     psect	text25
  9620                           	file	"I2C.c"
  9621                           	line	43
  9622                           	global	__size_of_I2C_SendData
  9623                           	__size_of_I2C_SendData	equ	__end_of_I2C_SendData-_I2C_SendData
  9624  0045                     	
  9625                           _I2C_SendData:	
  9626  0BFC                     ;incstack = 0
  9627                           	opt	stack 7
  9628                           ; Regs used in _I2C_SendData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9629                           ;I2C_SendData@iData stored from wreg
  9630                           	movlb 0	; select bank0
  9631  0BFC  0020               	movwf	(I2C_SendData@iData)
  9632  0BFD  00BC               	line	45
  9633                           	
  9634                           l5606:	
  9635  0BFE                     ;I2C.c: 43: int I2C_SendData(uint8_t* iData,uint8_t iNumberofByte);I2C.c: 44: {;I2C.c: 4
                                 5:     if(wI2CCommandState == CommandCompleted || wI2CCommandState == CommandFailed)
  9636                           		movlw	3
  9637  0BFE  3003               	xorwf	((_wI2CCommandState)),w
  9638  0BFF  0663               	btfsc	status,2
  9639  0C00  1903               	goto	u3821
  9640  0C01  2C03               	goto	u3820
  9641  0C02  2C04               u3821:
  9642  0C03                     	goto	l5610
  9643  0C03  2C0B               u3820:
  9644  0C04                     	
  9645                           l5608:	
  9646  0C04                     		movlw	5
  9647  0C04  3005               	xorwf	((_wI2CCommandState)),w
  9648  0C05  0663               	btfss	status,2
  9649  0C06  1D03               	goto	u3831
  9650  0C07  2C09               	goto	u3830
  9651  0C08  2C0A               u3831:
  9652  0C09                     	goto	l5632
  9653  0C09  2C3D               u3830:
  9654  0C0A                     	goto	l5610
  9655  0C0A  2C0B               	
  9656                           l575:	
  9657  0C0B                     	line	47
  9658                           	
  9659                           l5610:	
  9660  0C0B                     ;I2C.c: 46:     {;I2C.c: 47:         if(iNumberofByte < wI2CTxBufferSize )
  9661                           	movf	(_wI2CTxBufferSize),w
  9662  0C0B  0862               	subwf	(I2C_SendData@iNumberofByte),w
  9663  0C0C  0238               	skipnc
  9664  0C0D  1803               	goto	u3841
  9665  0C0E  2C10               	goto	u3840
  9666  0C0F  2C11               u3841:
  9667  0C10                     	goto	l5616
  9668  0C10  2C29               u3840:
  9669  0C11                     	line	49
  9670                           	
  9671                           l5612:	
  9672  0C11                     ;I2C.c: 48:         {;I2C.c: 49:             memcpy(wI2CTxBuffer,iData,iNumberofByte);
  9673                           	movlw	low(_wI2CTxBuffer)
  9674  0C11  3048               	movwf	(memcpy@d1)
  9675  0C12  00AC               	movlw	high(_wI2CTxBuffer)
  9676  0C13  3001               	movwf	(memcpy@d1+1)
  9677  0C14  00AD               	movf	(I2C_SendData@iData),w
  9678  0C15  083C               	movwf	(memcpy@s1)
  9679  0C16  00AE               	movlw	0x0
  9680  0C17  3000               
  9681                           	movwf	(memcpy@s1+1)
  9682  0C18  00AF               	movf	(I2C_SendData@iNumberofByte),w
  9683  0C19  0838               	movwf	(??_I2C_SendData+0)+0
  9684  0C1A  00BA               	clrf	(??_I2C_SendData+0)+0+1
  9685  0C1B  01BB               	movf	0+(??_I2C_SendData+0)+0,w
  9686  0C1C  083A               	movwf	(memcpy@n)
  9687  0C1D  00B0               	movf	1+(??_I2C_SendData+0)+0,w
  9688  0C1E  083B               	movwf	(memcpy@n+1)
  9689  0C1F  00B1               	fcall	_memcpy
  9690  0C20  318B  231F  318B   	line	50
  9691                           	
  9692                           l5614:	
  9693  0C23                     ;I2C.c: 50:             wI2CTxNbOfByteToSend = iNumberofByte;
  9694                           	movlb 0	; select bank0
  9695  0C23  0020               	movf	(I2C_SendData@iNumberofByte),w
  9696  0C24  0838               	movwf	(??_I2C_SendData+0)+0
  9697  0C25  00BA               	movf	(??_I2C_SendData+0)+0,w
  9698  0C26  083A               	movwf	(_wI2CTxNbOfByteToSend)
  9699  0C27  00D5               	line	51
  9700                           ;I2C.c: 51:         }
  9701                           	goto	l5620
  9702  0C28  2C2D               	line	52
  9703                           ;I2C.c: 52:         else
  9704                           	
  9705                           l576:	
  9706  0C29                     	line	54
  9707                           	
  9708                           l5616:	
  9709  0C29                     ;I2C.c: 53:         {;I2C.c: 54:             return 0;
  9710                           	clrf	(?_I2C_SendData)
  9711  0C29  01B8               	clrf	(?_I2C_SendData+1)
  9712  0C2A  01B9               	goto	l578
  9713  0C2B  2C40               	
  9714                           l5618:	
  9715  0C2C                     	goto	l578
  9716  0C2C  2C40               	line	55
  9717                           ;I2C.c: 55:         }
  9718                           	
  9719                           l577:	
  9720  0C2D                     	line	56
  9721                           	
  9722                           l5620:	
  9723  0C2D                     ;I2C.c: 56:         wI2CTxSendPos = 0;
  9724                           	clrf	(_wI2CTxSendPos)
  9725  0C2D  01D2               	line	57
  9726                           	
  9727                           l5622:	
  9728  0C2E                     ;I2C.c: 57:         PIE1bits.SSPIE = 1;
  9729                           	movlb 1	; select bank1
  9730  0C2E  0021               	bsf	(145)^080h,3	;volatile
  9731  0C2F  1591               	line	58
  9732                           	
  9733                           l5624:	
  9734  0C30                     ;I2C.c: 58:         SSPCON3bits.ACKTIM = 1;
  9735                           	movlb 4	; select bank4
  9736  0C30  0024               	bsf	(535)^0200h,7	;volatile
  9737  0C31  1797               	line	59
  9738                           ;I2C.c: 59:         wI2CCommandState = CommandSent;
  9739                           	movlb 0	; select bank0
  9740  0C32  0020               	clrf	(_wI2CCommandState)
  9741  0C33  01E3               	line	60
  9742                           	
  9743                           l5626:	
  9744  0C34                     ;I2C.c: 60:         SSPCON2bits.SEN = 1;
  9745                           	movlb 4	; select bank4
  9746  0C34  0024               	bsf	(534)^0200h,0	;volatile
  9747  0C35  1416               	line	61
  9748                           	
  9749                           l5628:	
  9750  0C36                     ;I2C.c: 61:         return 1;
  9751                           	movlw	01h
  9752  0C36  3001               	movlb 0	; select bank0
  9753  0C37  0020               	movwf	(?_I2C_SendData)
  9754  0C38  00B8               	movlw	0
  9755  0C39  3000               	movwf	((?_I2C_SendData))+1
  9756  0C3A  00B9               	goto	l578
  9757  0C3B  2C40               	
  9758                           l5630:	
  9759  0C3C                     	goto	l578
  9760  0C3C  2C40               	line	62
  9761                           ;I2C.c: 62:     }
  9762                           	
  9763                           l573:	
  9764  0C3D                     	line	63
  9765                           	
  9766                           l5632:	
  9767  0C3D                     ;I2C.c: 63:     return 0;
  9768                           	clrf	(?_I2C_SendData)
  9769  0C3D  01B8               	clrf	(?_I2C_SendData+1)
  9770  0C3E  01B9               	goto	l578
  9771  0C3F  2C40               	
  9772                           l5634:	
  9773  0C40                     	line	64
  9774                           	
  9775                           l578:	
  9776  0C40                     	return
  9777  0C40  0008               	opt stack 0
  9778                           GLOBAL	__end_of_I2C_SendData
  9779                           	__end_of_I2C_SendData:
  9780  0C41                     	signat	_I2C_SendData,8314
  9781                           	global	_I2C_GetData
  9782                           
  9783 ;; *************** function _I2C_GetData *****************
  9784 ;; Defined at:
  9785 ;;		line 66 in file "I2C.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;  iAdress         1    wreg     unsigned char 
  9788 ;;  iRxNumberOfB    1   12[BANK0 ] unsigned char 
  9789 ;; Auto vars:     Size  Location     Type
  9790 ;;  iAdress         1   15[BANK0 ] unsigned char 
  9791 ;; Return value:  Size  Location     Type
  9792 ;;                  2   12[BANK0 ] int 
  9793 ;; Registers used:
  9794 ;;		wreg, status,2, status,0
  9795 ;; Tracked objects:
  9796 ;;		On entry : 0/0
  9797 ;;		On exit  : 0/0
  9798 ;;		Unchanged: 0/0
  9799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9800 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9801 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9802 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9803 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  9804 ;;Total ram usage:        4 bytes
  9805 ;; Hardware stack levels used:    1
  9806 ;; Hardware stack levels required when called:    6
  9807 ;; This function calls:
  9808 ;;		Nothing
  9809 ;; This function is called by:
  9810 ;;		_EM1812EntryPoint
  9811 ;; This function uses a non-reentrant model
  9812 ;;
  9813                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  9814                           	line	66
  9815                           global __ptext26
  9816                           __ptext26:	;psect for function _I2C_GetData
  9817  0B4E                     psect	text26
  9818                           	file	"I2C.c"
  9819                           	line	66
  9820                           	global	__size_of_I2C_GetData
  9821                           	__size_of_I2C_GetData	equ	__end_of_I2C_GetData-_I2C_GetData
  9822  0036                     	
  9823                           _I2C_GetData:	
  9824  0B4E                     ;incstack = 0
  9825                           	opt	stack 8
  9826                           ; Regs used in _I2C_GetData: [wreg+status,2+status,0]
  9827                           ;I2C_GetData@iAdress stored from wreg
  9828                           	movlb 0	; select bank0
  9829  0B4E  0020               	movwf	(I2C_GetData@iAdress)
  9830  0B4F  00AF               	line	68
  9831                           	
  9832                           l5640:	
  9833  0B50                     ;I2C.c: 66: int I2C_GetData(uint8_t iAdress, uint8_t iRxNumberOfByteExpected);I2C.c: 67:
                                  {;I2C.c: 68:     if((wI2CCommandState == CommandCompleted || wI2CCommandState == Comman
                                 dFailed) && iRxNumberOfByteExpected <= wI2CRxBufferSize)
  9834                           		movlw	3
  9835  0B50  3003               	xorwf	((_wI2CCommandState)),w
  9836  0B51  0663               	btfsc	status,2
  9837  0B52  1903               	goto	u3851
  9838  0B53  2B55               	goto	u3850
  9839  0B54  2B56               u3851:
  9840  0B55                     	goto	l5644
  9841  0B55  2B5D               u3850:
  9842  0B56                     	
  9843                           l5642:	
  9844  0B56                     		movlw	5
  9845  0B56  3005               	xorwf	((_wI2CCommandState)),w
  9846  0B57  0663               	btfss	status,2
  9847  0B58  1D03               	goto	u3861
  9848  0B59  2B5B               	goto	u3860
  9849  0B5A  2B5C               u3861:
  9850  0B5B                     	goto	l5666
  9851  0B5B  2B80               u3860:
  9852  0B5C                     	goto	l5644
  9853  0B5C  2B5D               	
  9854                           l583:	
  9855  0B5D                     	
  9856                           l5644:	
  9857  0B5D                     	movf	(I2C_GetData@iRxNumberOfByteExpected),w
  9858  0B5D  082C               	subwf	(_wI2CRxBufferSize),w
  9859  0B5E  0261               	skipc
  9860  0B5F  1C03               	goto	u3871
  9861  0B60  2B62               	goto	u3870
  9862  0B61  2B63               u3871:
  9863  0B62                     	goto	l5666
  9864  0B62  2B80               u3870:
  9865  0B63                     	line	70
  9866                           	
  9867                           l5646:	
  9868  0B63                     ;I2C.c: 69:     {;I2C.c: 70:         wI2CTxBuffer[0]= iAdress;
  9869                           	movf	(I2C_GetData@iAdress),w
  9870  0B63  082F               	movwf	(??_I2C_GetData+0)+0
  9871  0B64  00AE               	movf	(??_I2C_GetData+0)+0,w
  9872  0B65  082E               	movlb 2	; select bank2
  9873  0B66  0022               	movwf	(_wI2CTxBuffer)^0100h
  9874  0B67  00C8               	line	71
  9875                           	
  9876                           l5648:	
  9877  0B68                     ;I2C.c: 71:         wI2CTxNbOfByteToSend = 1;
  9878                           	movlb 0	; select bank0
  9879  0B68  0020               	clrf	(_wI2CTxNbOfByteToSend)
  9880  0B69  01D5               	incf	(_wI2CTxNbOfByteToSend),f
  9881  0B6A  0AD5               	line	72
  9882                           ;I2C.c: 72:         wI2CRxNbOfByteToReceived = iRxNumberOfByteExpected;
  9883                           	movf	(I2C_GetData@iRxNumberOfByteExpected),w
  9884  0B6B  082C               	movwf	(??_I2C_GetData+0)+0
  9885  0B6C  00AE               	movf	(??_I2C_GetData+0)+0,w
  9886  0B6D  082E               	movwf	(_wI2CRxNbOfByteToReceived)
  9887  0B6E  00D4               	line	73
  9888                           	
  9889                           l5650:	
  9890  0B6F                     ;I2C.c: 73:         wI2CTxSendPos = 0;
  9891                           	clrf	(_wI2CTxSendPos)
  9892  0B6F  01D2               	line	74
  9893                           	
  9894                           l5652:	
  9895  0B70                     ;I2C.c: 74:         wReceptionBufferPosition = 0;
  9896                           	clrf	(_wReceptionBufferPosition)
  9897  0B70  01D8               	line	75
  9898                           	
  9899                           l5654:	
  9900  0B71                     ;I2C.c: 75:         PIE1bits.SSPIE = 1;
  9901                           	movlb 1	; select bank1
  9902  0B71  0021               	bsf	(145)^080h,3	;volatile
  9903  0B72  1591               	line	76
  9904                           	
  9905                           l5656:	
  9906  0B73                     ;I2C.c: 76:         SSPCON3bits.ACKTIM = 1;
  9907                           	movlb 4	; select bank4
  9908  0B73  0024               	bsf	(535)^0200h,7	;volatile
  9909  0B74  1797               	line	77
  9910                           	
  9911                           l5658:	
  9912  0B75                     ;I2C.c: 77:         wI2CCommandState = CommandSent;
  9913                           	movlb 0	; select bank0
  9914  0B75  0020               	clrf	(_wI2CCommandState)
  9915  0B76  01E3               	line	78
  9916                           	
  9917                           l5660:	
  9918  0B77                     ;I2C.c: 78:         SSPCON2bits.SEN = 1;
  9919                           	movlb 4	; select bank4
  9920  0B77  0024               	bsf	(534)^0200h,0	;volatile
  9921  0B78  1416               	line	79
  9922                           	
  9923                           l5662:	
  9924  0B79                     ;I2C.c: 79:         return 1;
  9925                           	movlw	01h
  9926  0B79  3001               	movlb 0	; select bank0
  9927  0B7A  0020               	movwf	(?_I2C_GetData)
  9928  0B7B  00AC               	movlw	0
  9929  0B7C  3000               	movwf	((?_I2C_GetData))+1
  9930  0B7D  00AD               	goto	l584
  9931  0B7E  2B83               	
  9932                           l5664:	
  9933  0B7F                     	goto	l584
  9934  0B7F  2B83               	line	80
  9935                           ;I2C.c: 80:     }
  9936                           	
  9937                           l581:	
  9938  0B80                     	line	81
  9939                           	
  9940                           l5666:	
  9941  0B80                     ;I2C.c: 81:     return 0;
  9942                           	clrf	(?_I2C_GetData)
  9943  0B80  01AC               	clrf	(?_I2C_GetData+1)
  9944  0B81  01AD               	goto	l584
  9945  0B82  2B83               	
  9946                           l5668:	
  9947  0B83                     	line	82
  9948                           	
  9949                           l584:	
  9950  0B83                     	return
  9951  0B83  0008               	opt stack 0
  9952                           GLOBAL	__end_of_I2C_GetData
  9953                           	__end_of_I2C_GetData:
  9954  0B84                     	signat	_I2C_GetData,8314
  9955                           	global	_GetNewReceivedData
  9956                           
  9957 ;; *************** function _GetNewReceivedData *****************
  9958 ;; Defined at:
  9959 ;;		line 84 in file "I2C.c"
  9960 ;; Parameters:    Size  Location     Type
  9961 ;;  oData           1    wreg     PTR unsigned char 
  9962 ;;		 -> EM1812EntryPoint@ReceptionBuffer(8), 
  9963 ;;  oDataSize       1   24[BANK0 ] unsigned char 
  9964 ;; Auto vars:     Size  Location     Type
  9965 ;;  oData           1   27[BANK0 ] PTR unsigned char 
  9966 ;;		 -> EM1812EntryPoint@ReceptionBuffer(8), 
  9967 ;; Return value:  Size  Location     Type
  9968 ;;                  2   24[BANK0 ] int 
  9969 ;; Registers used:
  9970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9971 ;; Tracked objects:
  9972 ;;		On entry : 0/0
  9973 ;;		On exit  : 0/0
  9974 ;;		Unchanged: 0/0
  9975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9976 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9977 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9978 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9979 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  9980 ;;Total ram usage:        4 bytes
  9981 ;; Hardware stack levels used:    1
  9982 ;; Hardware stack levels required when called:    7
  9983 ;; This function calls:
  9984 ;;		_memcpy
  9985 ;; This function is called by:
  9986 ;;		_EM1812EntryPoint
  9987 ;; This function uses a non-reentrant model
  9988 ;;
  9989                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
  9990                           	line	84
  9991                           global __ptext27
  9992                           __ptext27:	;psect for function _GetNewReceivedData
  9993  09DC                     psect	text27
  9994                           	file	"I2C.c"
  9995                           	line	84
  9996                           	global	__size_of_GetNewReceivedData
  9997                           	__size_of_GetNewReceivedData	equ	__end_of_GetNewReceivedData-_GetNewReceivedData
  9998  0023                     	
  9999                           _GetNewReceivedData:	
 10000  09DC                     ;incstack = 0
 10001                           	opt	stack 7
 10002                           ; Regs used in _GetNewReceivedData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10003                           ;GetNewReceivedData@oData stored from wreg
 10004                           	movlb 0	; select bank0
 10005  09DC  0020               	movwf	(GetNewReceivedData@oData)
 10006  09DD  00BB               	line	86
 10007                           	
 10008                           l5670:	
 10009  09DE                     ;I2C.c: 84: int GetNewReceivedData(uint8_t* oData, uint8_t oDataSize);I2C.c: 85: {;I2C.c
                                 : 86:     if(wNewI2CReception == 1 && wI2CCommandState == CommandCompleted)
 10010                           		decf	((_wNewI2CReception)),w
 10011  09DE  0353               	btfss	status,2
 10012  09DF  1D03               	goto	u3881
 10013  09E0  29E2               	goto	u3880
 10014  09E1  29E3               u3881:
 10015  09E2                     	goto	l588
 10016  09E2  29FE               u3880:
 10017  09E3                     	
 10018                           l5672:	
 10019  09E3                     		movlw	3
 10020  09E3  3003               	xorwf	((_wI2CCommandState)),w
 10021  09E4  0663               	btfss	status,2
 10022  09E5  1D03               	goto	u3891
 10023  09E6  29E8               	goto	u3890
 10024  09E7  29E9               u3891:
 10025  09E8                     	goto	l588
 10026  09E8  29FE               u3890:
 10027  09E9                     	line	88
 10028                           	
 10029                           l5674:	
 10030  09E9                     ;I2C.c: 87:     {;I2C.c: 88:         wNewI2CReception = 0;
 10031                           	clrf	(_wNewI2CReception)
 10032  09E9  01D3               	line	89
 10033                           	
 10034                           l5676:	
 10035  09EA                     ;I2C.c: 89:         memcpy(oData,wI2CRxBuffer,oDataSize);
 10036                           	movf	(GetNewReceivedData@oData),w
 10037  09EA  083B               	movwf	(memcpy@d1)
 10038  09EB  00AC               	movlw	0x0
 10039  09EC  3000               
 10040                           	movwf	(memcpy@d1+1)
 10041  09ED  00AD               	movlw	low(_wI2CRxBuffer)
 10042  09EE  3034               	movwf	(memcpy@s1)
 10043  09EF  00AE               	movlw	high(_wI2CRxBuffer)
 10044  09F0  3001               	movwf	(memcpy@s1+1)
 10045  09F1  00AF               	movf	(GetNewReceivedData@oDataSize),w
 10046  09F2  0838               	movwf	(??_GetNewReceivedData+0)+0
 10047  09F3  00B9               	clrf	(??_GetNewReceivedData+0)+0+1
 10048  09F4  01BA               	movf	0+(??_GetNewReceivedData+0)+0,w
 10049  09F5  0839               	movwf	(memcpy@n)
 10050  09F6  00B0               	movf	1+(??_GetNewReceivedData+0)+0,w
 10051  09F7  083A               	movwf	(memcpy@n+1)
 10052  09F8  00B1               	fcall	_memcpy
 10053  09F9  318B  231F  3189   	goto	l588
 10054  09FC  29FE               	line	90
 10055                           	
 10056                           l5678:	
 10057  09FD                     ;I2C.c: 90:         return 1;;	Return value of _GetNewReceivedData is never used
 10058                           	goto	l588
 10059  09FD  29FE               	line	91
 10060                           ;I2C.c: 91:     }
 10061                           	
 10062                           l587:	
 10063  09FE                     	line	93
 10064                           ;I2C.c: 92:     return 0;;	Return value of _GetNewReceivedData is never used
 10065                           	
 10066                           l588:	
 10067  09FE                     	return
 10068  09FE  0008               	opt stack 0
 10069                           GLOBAL	__end_of_GetNewReceivedData
 10070                           	__end_of_GetNewReceivedData:
 10071  09FF                     	signat	_GetNewReceivedData,8314
 10072                           	global	_memcpy
 10073                           
 10074 ;; *************** function _memcpy *****************
 10075 ;; Defined at:
 10076 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
 10077 ;; Parameters:    Size  Location     Type
 10078 ;;  d1              2   12[BANK0 ] PTR void 
 10079 ;;		 -> gEusartTXBuffer(70), wI2CTxBuffer(20), EM1812EntryPoint@ReceptionBuffer(8), 
 10080 ;;  s1              2   14[BANK0 ] PTR const void 
 10081 ;;		 -> STR_26(14), STR_24(6), STR_22(13), Esp8266SetNetworkParameters@wCommand(70), 
 10082 ;;		 -> Esp8266OpenSocketCommand@wCommand(70), wI2CRxBuffer(20), EM1812EntryPoint@SetGetTempCommand(4), 
 10083 ;;  n               2   16[BANK0 ] unsigned int 
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;  s               2   22[BANK0 ] PTR const unsigned char 
 10086 ;;		 -> STR_26(14), STR_24(6), STR_22(13), Esp8266SetNetworkParameters@wCommand(70), 
 10087 ;;		 -> Esp8266OpenSocketCommand@wCommand(70), wI2CRxBuffer(20), EM1812EntryPoint@SetGetTempCommand(4), 
 10088 ;;  d               2   20[BANK0 ] PTR unsigned char 
 10089 ;;		 -> gEusartTXBuffer(70), wI2CTxBuffer(20), EM1812EntryPoint@ReceptionBuffer(8), 
 10090 ;;  tmp             1   19[BANK0 ] unsigned char 
 10091 ;; Return value:  Size  Location     Type
 10092 ;;                  2   12[BANK0 ] PTR void 
 10093 ;; Registers used:
 10094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10095 ;; Tracked objects:
 10096 ;;		On entry : 0/0
 10097 ;;		On exit  : 0/0
 10098 ;;		Unchanged: 0/0
 10099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10100 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 10101 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 10102 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10103 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0
 10104 ;;Total ram usage:       12 bytes
 10105 ;; Hardware stack levels used:    1
 10106 ;; Hardware stack levels required when called:    6
 10107 ;; This function calls:
 10108 ;;		Nothing
 10109 ;; This function is called by:
 10110 ;;		_I2C_SendData
 10111 ;;		_GetNewReceivedData
 10112 ;;		_Send_UART_Data
 10113 ;; This function uses a non-reentrant model
 10114 ;;
 10115                           psect	text28,local,class=CODE,delta=2,merge=1,group=2
 10116                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
 10117                           	line	4
 10118                           global __ptext28
 10119                           __ptext28:	;psect for function _memcpy
 10120  0B1F                     psect	text28
 10121                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
 10122                           	line	4
 10123                           	global	__size_of_memcpy
 10124                           	__size_of_memcpy	equ	__end_of_memcpy-_memcpy
 10125  002F                     	
 10126                           _memcpy:	
 10127  0B1F                     ;incstack = 0
 10128                           	opt	stack 7
 10129                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
 10130                           	line	11
 10131                           	
 10132                           l5504:	
 10133  0B1F                     	movlb 0	; select bank0
 10134  0B1F  0020               	movf	(memcpy@s1+1),w
 10135  0B20  082F               	movwf	(memcpy@s+1)
 10136  0B21  00B7               	movf	(memcpy@s1),w
 10137  0B22  082E               	movwf	(memcpy@s)
 10138  0B23  00B6               	line	12
 10139                           	movf	(memcpy@d1+1),w
 10140  0B24  082D               	movwf	(memcpy@d+1)
 10141  0B25  00B5               	movf	(memcpy@d1),w
 10142  0B26  082C               	movwf	(memcpy@d)
 10143  0B27  00B4               	line	13
 10144                           	goto	l5514
 10145  0B28  2B40               	
 10146                           l1363:	
 10147  0B29                     	line	14
 10148                           	
 10149                           l5506:	
 10150  0B29                     	movf	(memcpy@s),w
 10151  0B29  0836               	movwf	fsr0l
 10152  0B2A  0084               	movf	((memcpy@s+1)),w
 10153  0B2B  0837               	movwf	fsr0h
 10154  0B2C  0085               	movf	indf0,w ;code access
 10155  0B2D  0800               	movwf	(??_memcpy+0)+0
 10156  0B2E  00B2               	movf	(??_memcpy+0)+0,w
 10157  0B2F  0832               	movwf	(memcpy@tmp)
 10158  0B30  00B3               	
 10159                           l5508:	
 10160  0B31                     	movlw	01h
 10161  0B31  3001               	addwf	(memcpy@s),f
 10162  0B32  07B6               	movlw	0
 10163  0B33  3000               	addwfc	(memcpy@s+1),f
 10164  0B34  3DB7               	line	15
 10165                           	
 10166                           l5510:	
 10167  0B35                     	movf	(memcpy@d),w
 10168  0B35  0834               	movwf	fsr1l
 10169  0B36  0086               	movf	(memcpy@d+1),w
 10170  0B37  0835               	movwf	fsr1h
 10171  0B38  0087               	movf	(memcpy@tmp),w
 10172  0B39  0833               	movwf	indf1
 10173  0B3A  0081               	
 10174                           l5512:	
 10175  0B3B                     	movlw	01h
 10176  0B3B  3001               	addwf	(memcpy@d),f
 10177  0B3C  07B4               	movlw	0
 10178  0B3D  3000               	addwfc	(memcpy@d+1),f
 10179  0B3E  3DB5               	goto	l5514
 10180  0B3F  2B40               	line	16
 10181                           	
 10182                           l1362:	
 10183  0B40                     	line	13
 10184                           	
 10185                           l5514:	
 10186  0B40                     	movlw	01h
 10187  0B40  3001               	subwf	(memcpy@n),f
 10188  0B41  02B0               	movlw	0
 10189  0B42  3000               	subwfb	(memcpy@n+1),f
 10190  0B43  3BB1               		incf	(((memcpy@n))),w
 10191  0B44  0A30               	skipz
 10192  0B45  1D03               	goto	u3731
 10193  0B46  2B4B               	incf	(((memcpy@n+1))),w
 10194  0B47  0A31               	btfss	status,2
 10195  0B48  1D03               	goto	u3731
 10196  0B49  2B4B               	goto	u3730
 10197  0B4A  2B4C               u3731:
 10198  0B4B                     	goto	l5506
 10199  0B4B  2B29               u3730:
 10200  0B4C                     	goto	l1365
 10201  0B4C  2B4D               	
 10202                           l1364:	
 10203  0B4D                     	line	18
 10204                           ;	Return value of _memcpy is never used
 10205                           	
 10206                           l1365:	
 10207  0B4D                     	return
 10208  0B4D  0008               	opt stack 0
 10209                           GLOBAL	__end_of_memcpy
 10210                           	__end_of_memcpy:
 10211  0B4E                     	signat	_memcpy,12409
 10212                           	global	_GetI2CStatus
 10213                           
 10214 ;; *************** function _GetI2CStatus *****************
 10215 ;; Defined at:
 10216 ;;		line 38 in file "I2C.c"
 10217 ;; Parameters:    Size  Location     Type
 10218 ;;		None
 10219 ;; Auto vars:     Size  Location     Type
 10220 ;;		None
 10221 ;; Return value:  Size  Location     Type
 10222 ;;                  2   12[BANK0 ] int 
 10223 ;; Registers used:
 10224 ;;		wreg
 10225 ;; Tracked objects:
 10226 ;;		On entry : 0/0
 10227 ;;		On exit  : 0/0
 10228 ;;		Unchanged: 0/0
 10229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10230 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10232 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10233 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 10234 ;;Total ram usage:        4 bytes
 10235 ;; Hardware stack levels used:    1
 10236 ;; Hardware stack levels required when called:    6
 10237 ;; This function calls:
 10238 ;;		Nothing
 10239 ;; This function is called by:
 10240 ;;		_EM1812EntryPoint
 10241 ;; This function uses a non-reentrant model
 10242 ;;
 10243                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
 10244                           	file	"I2C.c"
 10245                           	line	38
 10246                           global __ptext29
 10247                           __ptext29:	;psect for function _GetI2CStatus
 10248  0947                     psect	text29
 10249                           	file	"I2C.c"
 10250                           	line	38
 10251                           	global	__size_of_GetI2CStatus
 10252                           	__size_of_GetI2CStatus	equ	__end_of_GetI2CStatus-_GetI2CStatus
 10253  000A                     	
 10254                           _GetI2CStatus:	
 10255  0947                     ;incstack = 0
 10256                           	opt	stack 8
 10257                           ; Regs used in _GetI2CStatus: [wreg]
 10258                           	line	40
 10259                           	
 10260                           l5636:	
 10261  0947                     ;I2C.c: 40:   return wI2CCommandState;
 10262                           	movlb 0	; select bank0
 10263  0947  0020               	movf	(_wI2CCommandState),w
 10264  0948  0863               	movwf	(??_GetI2CStatus+0)+0
 10265  0949  00AE               	clrf	(??_GetI2CStatus+0)+0+1
 10266  094A  01AF               	movf	0+(??_GetI2CStatus+0)+0,w
 10267  094B  082E               	movwf	(?_GetI2CStatus)
 10268  094C  00AC               	movf	1+(??_GetI2CStatus+0)+0,w
 10269  094D  082F               	movwf	(?_GetI2CStatus+1)
 10270  094E  00AD               	goto	l570
 10271  094F  2950               	
 10272                           l5638:	
 10273  0950                     	line	41
 10274                           	
 10275                           l570:	
 10276  0950                     	return
 10277  0950  0008               	opt stack 0
 10278                           GLOBAL	__end_of_GetI2CStatus
 10279                           	__end_of_GetI2CStatus:
 10280  0951                     	signat	_GetI2CStatus,90
 10281                           	global	_Debounce
 10282                           
 10283 ;; *************** function _Debounce *****************
 10284 ;; Defined at:
 10285 ;;		line 74 in file "161518_temp_main.c"
 10286 ;; Parameters:    Size  Location     Type
 10287 ;;  iSwitch         1    wreg     unsigned char 
 10288 ;;  ioTimer         1   12[BANK0 ] PTR unsigned short 
 10289 ;;		 -> main@wDebounceDown(2), main@wDebounceUp(2), main@wDebounceEnter(2), 
 10290 ;;  swPressed       1   13[BANK0 ] PTR unsigned char 
 10291 ;;		 -> main@wEnterBottonPressed(1), main@wDownBottonPressed(1), main@wUpBottonPressed(1), 
 10292 ;; Auto vars:     Size  Location     Type
 10293 ;;  iSwitch         1   16[BANK0 ] unsigned char 
 10294 ;; Return value:  Size  Location     Type
 10295 ;;                  1    wreg      void 
 10296 ;; Registers used:
 10297 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10298 ;; Tracked objects:
 10299 ;;		On entry : 0/0
 10300 ;;		On exit  : 0/0
 10301 ;;		Unchanged: 0/0
 10302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10303 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10304 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10305 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10306 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 10307 ;;Total ram usage:        5 bytes
 10308 ;; Hardware stack levels used:    1
 10309 ;; Hardware stack levels required when called:    6
 10310 ;; This function calls:
 10311 ;;		Nothing
 10312 ;; This function is called by:
 10313 ;;		_main
 10314 ;; This function uses a non-reentrant model
 10315 ;;
 10316                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
 10317                           	file	"161518_temp_main.c"
 10318                           	line	74
 10319                           global __ptext30
 10320                           __ptext30:	;psect for function _Debounce
 10321  0C8A                     psect	text30
 10322                           	file	"161518_temp_main.c"
 10323                           	line	74
 10324                           	global	__size_of_Debounce
 10325                           	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 10326  004C                     	
 10327                           _Debounce:	
 10328  0C8A                     ;incstack = 0
 10329                           	opt	stack 9
 10330                           ; Regs used in _Debounce: [wreg+fsr1l+fsr1h+status,2+status,0]
 10331                           ;Debounce@iSwitch stored from wreg
 10332                           	movlb 0	; select bank0
 10333  0C8A  0020               	movwf	(Debounce@iSwitch)
 10334  0C8B  00B0               	line	75
 10335                           	
 10336                           l5836:	
 10337  0C8C                     	movf	((Debounce@iSwitch)),w
 10338  0C8C  0830               	btfss	status,2
 10339  0C8D  1D03               	goto	u4161
 10340  0C8E  2C90               	goto	u4160
 10341  0C8F  2C91               u4161:
 10342  0C90                     	goto	l5840
 10343  0C90  2C9B               u4160:
 10344  0C91                     	line	77
 10345                           	
 10346                           l5838:	
 10347  0C91                     	movf	(Debounce@ioTimer),w
 10348  0C91  082C               	movwf	fsr1l
 10349  0C92  0086               	movlw 2	; select bank4/5
 10350  0C93  3002               	movwf fsr1h	
 10351  0C94  0087               	
 10352                           	movlw	01h
 10353  0C95  3001               	addwf	indf1,f
 10354  0C96  0781               	addfsr	fsr1,1
 10355  0C97  3141               	skipnc
 10356  0C98  1803               	incf	indf1,f
 10357  0C99  0A81               	line	78
 10358                           	goto	l5842
 10359  0C9A  2CA3               	
 10360                           l156:	
 10361  0C9B                     	line	79
 10362                           	
 10363                           l5840:	
 10364  0C9B                     	movf	(Debounce@ioTimer),w
 10365  0C9B  082C               	movwf	fsr1l
 10366  0C9C  0086               	movlw 2	; select bank4/5
 10367  0C9D  3002               	movwf fsr1h	
 10368  0C9E  0087               	
 10369                           	movlw	0
 10370  0C9F  3000               	movwi	[0]fsr1
 10371  0CA0  3FC0               	movwi	[1]fsr1
 10372  0CA1  3FC1               	goto	l5842
 10373  0CA2  2CA3               	line	80
 10374                           	
 10375                           l157:	
 10376  0CA3                     	line	81
 10377                           	
 10378                           l5842:	
 10379  0CA3                     	movf	(Debounce@ioTimer),w
 10380  0CA3  082C               	movwf	fsr1l
 10381  0CA4  0086               	movlw 2	; select bank4/5
 10382  0CA5  3002               	movwf fsr1h	
 10383  0CA6  0087               	
 10384                           	moviw	fsr1++
 10385  0CA7  0016               xorlw	208
 10386  0CA8  3AD0               movwf	(??_Debounce+0)+0
 10387  0CA9  00AE               moviw	fsr1++
 10388  0CAA  0016               xorlw	7
 10389  0CAB  3A07               iorwf	(??_Debounce+0)+0
 10390  0CAC  04AE               	btfss	status,2
 10391  0CAD  1D03               	goto	u4171
 10392  0CAE  2CB0               	goto	u4170
 10393  0CAF  2CB1               u4171:
 10394  0CB0                     	goto	l5846
 10395  0CB0  2CB8               u4170:
 10396  0CB1                     	line	82
 10397                           	
 10398                           l5844:	
 10399  0CB1                     	movf	(Debounce@swPressed),w
 10400  0CB1  082D               	movwf	fsr1l
 10401  0CB2  0086               	movlw 2	; select bank4/5
 10402  0CB3  3002               	movwf fsr1h	
 10403  0CB4  0087               	
 10404                           	clrf	indf1
 10405  0CB5  0181               	incf	indf1,f
 10406  0CB6  0A81               	goto	l5846
 10407  0CB7  2CB8               	line	83
 10408                           	
 10409                           l158:	
 10410  0CB8                     	line	84
 10411                           	
 10412                           l5846:	
 10413  0CB8                     	movf	(Debounce@ioTimer),w
 10414  0CB8  082C               	movwf	fsr1l
 10415  0CB9  0086               	movlw 2	; select bank4/5
 10416  0CBA  3002               	movwf fsr1h	
 10417  0CBB  0087               	
 10418                           	moviw	fsr1++
 10419  0CBC  0016               xorlw	64
 10420  0CBD  3A40               movwf	(??_Debounce+0)+0
 10421  0CBE  00AE               moviw	fsr1++
 10422  0CBF  0016               xorlw	31
 10423  0CC0  3A1F               iorwf	(??_Debounce+0)+0
 10424  0CC1  04AE               	btfss	status,2
 10425  0CC2  1D03               	goto	u4181
 10426  0CC3  2CC5               	goto	u4180
 10427  0CC4  2CC6               u4181:
 10428  0CC5                     	goto	l160
 10429  0CC5  2CD5               u4180:
 10430  0CC6                     	line	85
 10431                           	
 10432                           l5848:	
 10433  0CC6                     	movf	(Debounce@ioTimer),w
 10434  0CC6  082C               	movwf	fsr1l
 10435  0CC7  0086               	movlw 2	; select bank4/5
 10436  0CC8  3002               	movwf fsr1h	
 10437  0CC9  0087               	
 10438                           	movlw	0D1h
 10439  0CCA  30D1               	movwi	[0]fsr1
 10440  0CCB  3FC0               	movlw	07h
 10441  0CCC  3007               	movwi	[1]fsr1
 10442  0CCD  3FC1               	line	86
 10443                           	
 10444                           l5850:	
 10445  0CCE                     	movf	(Debounce@swPressed),w
 10446  0CCE  082D               	movwf	fsr1l
 10447  0CCF  0086               	movlw 2	; select bank4/5
 10448  0CD0  3002               	movwf fsr1h	
 10449  0CD1  0087               	
 10450                           	clrf	indf1
 10451  0CD2  0181               	incf	indf1,f
 10452  0CD3  0A81               	goto	l160
 10453  0CD4  2CD5               	line	87
 10454                           	
 10455                           l159:	
 10456  0CD5                     	line	88
 10457                           	
 10458                           l160:	
 10459  0CD5                     	return
 10460  0CD5  0008               	opt stack 0
 10461                           GLOBAL	__end_of_Debounce
 10462                           	__end_of_Debounce:
 10463  0CD6                     	signat	_Debounce,12409
 10464                           	global	_AddTrace
 10465                           
 10466 ;; *************** function _AddTrace *****************
 10467 ;; Defined at:
 10468 ;;		line 51 in file "GeneralFunction.c"
 10469 ;; Parameters:    Size  Location     Type
 10470 ;;  oText           1    wreg     PTR unsigned char 
 10471 ;;		 -> wInterruptText(75), 
 10472 ;;  iSizeOfoText    1   34[BANK0 ] unsigned char 
 10473 ;;  iText           2   35[BANK0 ] PTR unsigned char 
 10474 ;;		 -> STR_9(9), STR_8(12), main@wReadout(20), 
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;  oText           1    6[BANK1 ] PTR unsigned char 
 10477 ;;		 -> wInterruptText(75), 
 10478 ;; Return value:  Size  Location     Type
 10479 ;;                  1    wreg      void 
 10480 ;; Registers used:
 10481 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10482 ;; Tracked objects:
 10483 ;;		On entry : 0/0
 10484 ;;		On exit  : 0/0
 10485 ;;		Unchanged: 0/0
 10486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10487 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 10488 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
 10489 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
       0       0
 10490 ;;      Totals:         0       3       7       0       0       0       0       0       0       0       0       0       
       0       0
 10491 ;;Total ram usage:       10 bytes
 10492 ;; Hardware stack levels used:    1
 10493 ;; Hardware stack levels required when called:    8
 10494 ;; This function calls:
 10495 ;;		_strcat
 10496 ;;		_strlen
 10497 ;; This function is called by:
 10498 ;;		_main
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
 10502                           	file	"GeneralFunction.c"
 10503                           	line	51
 10504                           global __ptext31
 10505                           __ptext31:	;psect for function _AddTrace
 10506  0C41                     psect	text31
 10507                           	file	"GeneralFunction.c"
 10508                           	line	51
 10509                           	global	__size_of_AddTrace
 10510                           	__size_of_AddTrace	equ	__end_of_AddTrace-_AddTrace
 10511  0049                     	
 10512                           _AddTrace:	
 10513  0C41                     ;incstack = 0
 10514                           	opt	stack 7
 10515                           ; Regs used in _AddTrace: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10516                           ;AddTrace@oText stored from wreg
 10517                           	movlb 1	; select bank1
 10518  0C41  0021               	movwf	(AddTrace@oText)^080h
 10519  0C42  00BD               	line	53
 10520                           	
 10521                           l6020:	
 10522  0C43                     ;GeneralFunction.c: 51: void AddTrace(char* oText, char iSizeOfoText, char* iText);Gener
                                 alFunction.c: 52: {;GeneralFunction.c: 53:     if((iSizeOfoText - 1 - strlen(oText)) > s
                                 trlen(iText))
 10523                           	movf	(AddTrace@oText)^080h,w
 10524  0C43  083D               	movlb 0	; select bank0
 10525  0C44  0020               	movwf	(strlen@s)
 10526  0C45  00AC               	movlw	0x1
 10527  0C46  3001               
 10528                           	movwf	(strlen@s+1)
 10529  0C47  00AD               	fcall	_strlen
 10530  0C48  3189  21FF  318C   	movlb 0	; select bank0
 10531  0C4B  0020               	comf	(0+(?_strlen)),w
 10532  0C4C  092C               	movlb 1	; select bank1
 10533  0C4D  0021               	movwf	(??_AddTrace+0)^080h+0
 10534  0C4E  00B7               	movlb 0	; select bank0
 10535  0C4F  0020               	comf	(1+(?_strlen)),w
 10536  0C50  092D               	movlb 1	; select bank1
 10537  0C51  0021               	movwf	((??_AddTrace+0)^080h+0+1)
 10538  0C52  00B8               	incf	(??_AddTrace+0)^080h+0,f
 10539  0C53  0AB7               	skipnz
 10540  0C54  1903               	incf	((??_AddTrace+0)^080h+0+1),f
 10541  0C55  0AB8               	movlb 0	; select bank0
 10542  0C56  0020               	movf	(AddTrace@iSizeOfoText),w
 10543  0C57  0842               	movlb 1	; select bank1
 10544  0C58  0021               	addwf	0+(??_AddTrace+0)^080h+0,w
 10545  0C59  0737               	movwf	(??_AddTrace+2)^080h+0
 10546  0C5A  00B9               	movf	1+(??_AddTrace+0)^080h+0,w
 10547  0C5B  0838               	skipnc
 10548  0C5C  1803               	incf	1+(??_AddTrace+0)^080h+0,w
 10549  0C5D  0A38               	movwf	((??_AddTrace+2)^080h+0)+1
 10550  0C5E  00BA               	movf	0+(??_AddTrace+2)^080h+0,w
 10551  0C5F  0839               	addlw	0FFh
 10552  0C60  3EFF               	movwf	(??_AddTrace+4)^080h+0
 10553  0C61  00BB               	movlw	0FFh
 10554  0C62  30FF               	addwfc	1+(??_AddTrace+2)^080h+0,w
 10555  0C63  3D3A               	movwf	1+(??_AddTrace+4)^080h+0
 10556  0C64  00BC               	movlb 0	; select bank0
 10557  0C65  0020               	movf	(AddTrace@iText+1),w
 10558  0C66  0844               	movwf	(strlen@s+1)
 10559  0C67  00AD               	movf	(AddTrace@iText),w
 10560  0C68  0843               	movwf	(strlen@s)
 10561  0C69  00AC               	fcall	_strlen
 10562  0C6A  3189  21FF  318C   	movlb 1	; select bank1
 10563  0C6D  0021               	movf	1+(??_AddTrace+4)^080h+0,w
 10564  0C6E  083C               	movlb 0	; select bank0
 10565  0C6F  0020               	subwf	(1+(?_strlen)),w
 10566  0C70  022D               	skipz
 10567  0C71  1D03               	goto	u4345
 10568  0C72  2C77               	movlb 1	; select bank1
 10569  0C73  0021               	movf	0+(??_AddTrace+4)^080h+0,w
 10570  0C74  083B               	movlb 0	; select bank0
 10571  0C75  0020               	subwf	(0+(?_strlen)),w
 10572  0C76  022C               u4345:
 10573  0C77                     	skipnc
 10574  0C77  1803               	goto	u4341
 10575  0C78  2C7A               	goto	u4340
 10576  0C79  2C7B               u4341:
 10577  0C7A                     	goto	l648
 10578  0C7A  2C89               u4340:
 10579  0C7B                     	line	55
 10580                           	
 10581                           l6022:	
 10582  0C7B                     ;GeneralFunction.c: 54:     {;GeneralFunction.c: 55:         strcat(oText,iText);
 10583                           	movlb 1	; select bank1
 10584  0C7B  0021               	movf	(AddTrace@oText)^080h,w
 10585  0C7C  083D               	movlb 0	; select bank0
 10586  0C7D  0020               	movwf	(strcat@dest)
 10587  0C7E  00BE               	movlw	0x1
 10588  0C7F  3001               
 10589                           	movwf	(strcat@dest+1)
 10590  0C80  00BF               	movf	(AddTrace@iText+1),w
 10591  0C81  0844               	movwf	(strcat@src+1)
 10592  0C82  00C1               	movf	(AddTrace@iText),w
 10593  0C83  0843               	movwf	(strcat@src)
 10594  0C84  00C0               	fcall	_strcat
 10595  0C85  3189  21AC  318C   	goto	l648
 10596  0C88  2C89               	line	56
 10597                           ;GeneralFunction.c: 56:     }
 10598                           	
 10599                           l647:	
 10600  0C89                     	line	57
 10601                           	
 10602                           l648:	
 10603  0C89                     	return
 10604  0C89  0008               	opt stack 0
 10605                           GLOBAL	__end_of_AddTrace
 10606                           	__end_of_AddTrace:
 10607  0C8A                     	signat	_AddTrace,12409
 10608                           	global	_strcat
 10609                           
 10610 ;; *************** function _strcat *****************
 10611 ;; Defined at:
 10612 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
 10613 ;; Parameters:    Size  Location     Type
 10614 ;;  dest            2   30[BANK0 ] PTR unsigned char 
 10615 ;;		 -> Esp8266SetNetworkParameters@wCommand(70), Esp8266OpenSocketCommand@wCommand(70), wInterruptText(75), 
 10616 ;;  src             2   32[BANK0 ] PTR const unsigned char 
 10617 ;;		 -> STR_31(14), STR_30(4), STR_28(9), STR_27(7), 
 10618 ;;		 -> STR_20(5), STR_19(5), Esp8266SetNetworkParameters@wNumber(3), STR_18(3), 
 10619 ;;		 -> STR_17(4), STR_14(3), Esp8266OpenSocketCommand@wPort(7), STR_13(3), 
 10620 ;;		 -> STR_12(4), NULL(0), STR_9(9), STR_8(12), 
 10621 ;;		 -> main@wReadout(20), 
 10622 ;; Auto vars:     Size  Location     Type
 10623 ;;		None
 10624 ;; Return value:  Size  Location     Type
 10625 ;;                  2   30[BANK0 ] PTR unsigned char 
 10626 ;; Registers used:
 10627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10628 ;; Tracked objects:
 10629 ;;		On entry : 0/0
 10630 ;;		On exit  : 0/0
 10631 ;;		Unchanged: 0/0
 10632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10633 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 10634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10636 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 10637 ;;Total ram usage:        4 bytes
 10638 ;; Hardware stack levels used:    1
 10639 ;; Hardware stack levels required when called:    7
 10640 ;; This function calls:
 10641 ;;		_strcpy
 10642 ;;		_strlen
 10643 ;; This function is called by:
 10644 ;;		_AddTrace
 10645 ;;		_Esp8266OpenSocketCommand
 10646 ;;		_Esp8266SetNetworkParameters
 10647 ;; This function uses a non-reentrant model
 10648 ;;
 10649                           psect	text32,local,class=CODE,delta=2,merge=1,group=2
 10650                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
 10651                           	line	3
 10652                           global __ptext32
 10653                           __ptext32:	;psect for function _strcat
 10654  09AC                     psect	text32
 10655                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
 10656                           	line	3
 10657                           	global	__size_of_strcat
 10658                           	__size_of_strcat	equ	__end_of_strcat-_strcat
 10659  0018                     	
 10660                           _strcat:	
 10661  09AC                     ;incstack = 0
 10662                           	opt	stack 7
 10663                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10664                           	line	5
 10665                           	
 10666                           l5680:	
 10667  09AC                     	movlb 0	; select bank0
 10668  09AC  0020               	movf	(strcat@dest+1),w
 10669  09AD  083F               	movwf	(strlen@s+1)
 10670  09AE  00AD               	movf	(strcat@dest),w
 10671  09AF  083E               	movwf	(strlen@s)
 10672  09B0  00AC               	fcall	_strlen
 10673  09B1  3189  21FF  3189   	movlb 0	; select bank0
 10674  09B4  0020               	movf	(0+(?_strlen)),w
 10675  09B5  082C               	addwf	(strcat@dest),w
 10676  09B6  073E               	movwf	(strcpy@dest)
 10677  09B7  00B2               	movf	(1+(?_strlen)),w
 10678  09B8  082D               	addwfc	(strcat@dest+1),w
 10679  09B9  3D3F               	movwf	1+(strcpy@dest)
 10680  09BA  00B3               	movf	(strcat@src+1),w
 10681  09BB  0841               	movwf	(strcpy@src+1)
 10682  09BC  00B5               	movf	(strcat@src),w
 10683  09BD  0840               	movwf	(strcpy@src)
 10684  09BE  00B4               	fcall	_strcpy
 10685  09BF  318A  2276  3189   	goto	l1382
 10686  09C2  29C3               	line	6
 10687                           	
 10688                           l5682:	
 10689  09C3                     	line	7
 10690                           ;	Return value of _strcat is never used
 10691                           	
 10692                           l1382:	
 10693  09C3                     	return
 10694  09C3  0008               	opt stack 0
 10695                           GLOBAL	__end_of_strcat
 10696                           	__end_of_strcat:
 10697  09C4                     	signat	_strcat,8313
 10698                           	global	_strlen
 10699                           
 10700 ;; *************** function _strlen *****************
 10701 ;; Defined at:
 10702 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 10705 ;;		 -> STR_28(9), STR_27(7), Esp8266SetNetworkParameters@wCommand(70), STR_15(17), 
 10706 ;;		 -> Esp8266OpenSocketCommand@wCommand(70), STR_9(9), STR_8(12), main@wReadout(20), 
 10707 ;;		 -> wInterruptText(75), 
 10708 ;; Auto vars:     Size  Location     Type
 10709 ;;  a               2   16[BANK0 ] PTR const unsigned char 
 10710 ;;		 -> STR_28(9), STR_27(7), Esp8266SetNetworkParameters@wCommand(70), STR_15(17), 
 10711 ;;		 -> Esp8266OpenSocketCommand@wCommand(70), STR_9(9), STR_8(12), main@wReadout(20), 
 10712 ;;		 -> wInterruptText(75), 
 10713 ;; Return value:  Size  Location     Type
 10714 ;;                  2   12[BANK0 ] unsigned int 
 10715 ;; Registers used:
 10716 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10717 ;; Tracked objects:
 10718 ;;		On entry : 0/0
 10719 ;;		On exit  : 0/0
 10720 ;;		Unchanged: 0/0
 10721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10722 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10723 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10724 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10725 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 10726 ;;Total ram usage:        6 bytes
 10727 ;; Hardware stack levels used:    1
 10728 ;; Hardware stack levels required when called:    6
 10729 ;; This function calls:
 10730 ;;		Nothing
 10731 ;; This function is called by:
 10732 ;;		_PrintLog
 10733 ;;		_AddTrace
 10734 ;;		_strcat
 10735 ;;		_Esp8266OpenSocketCommand
 10736 ;;		_Esp8266SetNetworkParameters
 10737 ;; This function uses a non-reentrant model
 10738 ;;
 10739                           psect	text33,local,class=CODE,delta=2,merge=1,group=2
 10740                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 10741                           	line	12
 10742                           global __ptext33
 10743                           __ptext33:	;psect for function _strlen
 10744  09FF                     psect	text33
 10745                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 10746                           	line	12
 10747                           	global	__size_of_strlen
 10748                           	__size_of_strlen	equ	__end_of_strlen-_strlen
 10749  0024                     	
 10750                           _strlen:	
 10751  09FF                     ;incstack = 0
 10752                           	opt	stack 8
 10753                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 10754                           	line	14
 10755                           	
 10756                           l5430:	
 10757  09FF                     	movlb 0	; select bank0
 10758  09FF  0020               	movf	(strlen@s+1),w
 10759  0A00  082D               	movwf	(strlen@a+1)
 10760  0A01  00B1               	movf	(strlen@s),w
 10761  0A02  082C               	movwf	(strlen@a)
 10762  0A03  00B0               	line	16
 10763                           	goto	l5434
 10764  0A04  2A0A               	
 10765                           l1392:	
 10766  0A05                     	line	17
 10767                           	
 10768                           l5432:	
 10769  0A05                     	movlw	01h
 10770  0A05  3001               	addwf	(strlen@s),f
 10771  0A06  07AC               	movlw	0
 10772  0A07  3000               	addwfc	(strlen@s+1),f
 10773  0A08  3DAD               	goto	l5434
 10774  0A09  2A0A               	line	18
 10775                           	
 10776                           l1391:	
 10777  0A0A                     	line	16
 10778                           	
 10779                           l5434:	
 10780  0A0A                     	movf	(strlen@s),w
 10781  0A0A  082C               	movwf	fsr0l
 10782  0A0B  0084               	movf	((strlen@s+1)),w
 10783  0A0C  082D               	movwf	fsr0h
 10784  0A0D  0085               	moviw	fsr0++
 10785  0A0E  0012               	btfss	status,2
 10786  0A0F  1D03               	goto	u3661
 10787  0A10  2A12               	goto	u3660
 10788  0A11  2A13               u3661:
 10789  0A12                     	goto	l5432
 10790  0A12  2A05               u3660:
 10791  0A13                     	goto	l5436
 10792  0A13  2A14               	
 10793                           l1393:	
 10794  0A14                     	line	25
 10795                           	
 10796                           l5436:	
 10797  0A14                     	comf	(strlen@a),w
 10798  0A14  0930               	movwf	(??_strlen+0)+0
 10799  0A15  00AE               	comf	(strlen@a+1),w
 10800  0A16  0931               	movwf	((??_strlen+0)+0+1)
 10801  0A17  00AF               	incf	(??_strlen+0)+0,f
 10802  0A18  0AAE               	skipnz
 10803  0A19  1903               	incf	((??_strlen+0)+0+1),f
 10804  0A1A  0AAF               	movf	(strlen@s),w
 10805  0A1B  082C               	addwf	0+(??_strlen+0)+0,w
 10806  0A1C  072E               	movwf	(?_strlen)
 10807  0A1D  00AC               	movf	(strlen@s+1),w
 10808  0A1E  082D               	addwfc	1+(??_strlen+0)+0,w
 10809  0A1F  3D2F               	movwf	1+(?_strlen)
 10810  0A20  00AD               	goto	l1394
 10811  0A21  2A22               	
 10812                           l5438:	
 10813  0A22                     	line	26
 10814                           	
 10815                           l1394:	
 10816  0A22                     	return
 10817  0A22  0008               	opt stack 0
 10818                           GLOBAL	__end_of_strlen
 10819                           	__end_of_strlen:
 10820  0A23                     	signat	_strlen,4218
 10821                           	global	_strcpy
 10822                           
 10823 ;; *************** function _strcpy *****************
 10824 ;; Defined at:
 10825 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 10826 ;; Parameters:    Size  Location     Type
 10827 ;;  dest            2   18[BANK0 ] PTR unsigned char 
 10828 ;;		 -> Esp8266SetNetworkParameters@wCommand(70), Esp8266OpenSocketCommand@wCommand(70), wInterruptText(75), 
 10829 ;;  src             2   20[BANK0 ] PTR const unsigned char 
 10830 ;;		 -> STR_31(14), STR_30(4), STR_28(9), STR_27(7), 
 10831 ;;		 -> STR_20(5), STR_19(5), Esp8266SetNetworkParameters@wNumber(3), STR_18(3), 
 10832 ;;		 -> STR_17(4), STR_16(11), STR_14(3), Esp8266OpenSocketCommand@wPort(7), 
 10833 ;;		 -> STR_13(3), STR_12(4), STR_11(14), NULL(0), 
 10834 ;;		 -> STR_9(9), STR_8(12), main@wReadout(20), 
 10835 ;; Auto vars:     Size  Location     Type
 10836 ;;  d               2   28[BANK0 ] PTR unsigned char 
 10837 ;;		 -> Esp8266SetNetworkParameters@wCommand(70), Esp8266OpenSocketCommand@wCommand(70), wInterruptText(75), 
 10838 ;;  s               2   26[BANK0 ] PTR const unsigned char 
 10839 ;;		 -> STR_31(14), STR_30(4), STR_28(9), STR_27(7), 
 10840 ;;		 -> STR_20(5), STR_19(5), Esp8266SetNetworkParameters@wNumber(3), STR_18(3), 
 10841 ;;		 -> STR_17(4), STR_16(11), STR_14(3), Esp8266OpenSocketCommand@wPort(7), 
 10842 ;;		 -> STR_13(3), STR_12(4), STR_11(14), NULL(0), 
 10843 ;;		 -> STR_9(9), STR_8(12), main@wReadout(20), 
 10844 ;; Return value:  Size  Location     Type
 10845 ;;                  2   18[BANK0 ] PTR unsigned char 
 10846 ;; Registers used:
 10847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, pclath
 10848 ;; Tracked objects:
 10849 ;;		On entry : 0/0
 10850 ;;		On exit  : 0/0
 10851 ;;		Unchanged: 0/0
 10852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10853 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 10854 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 10855 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 10856 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0
 10857 ;;Total ram usage:       12 bytes
 10858 ;; Hardware stack levels used:    1
 10859 ;; Hardware stack levels required when called:    6
 10860 ;; This function calls:
 10861 ;;		Nothing
 10862 ;; This function is called by:
 10863 ;;		_strcat
 10864 ;;		_Esp8266OpenSocketCommand
 10865 ;;		_Esp8266SetNetworkParameters
 10866 ;; This function uses a non-reentrant model
 10867 ;;
 10868                           psect	text34,local,class=CODE,delta=2,merge=1,group=2
 10869                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 10870                           	line	7
 10871                           global __ptext34
 10872                           __ptext34:	;psect for function _strcpy
 10873  0A76                     psect	text34
 10874                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 10875                           	line	7
 10876                           	global	__size_of_strcpy
 10877                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
 10878  002A                     	
 10879                           _strcpy:	
 10880  0A76                     ;incstack = 0
 10881                           	opt	stack 7
 10882                           ; Regs used in _strcpy: [wreg-fsr1h+pclath]
 10883                           	line	13
 10884                           	
 10885                           l5516:	
 10886  0A76                     	movlb 0	; select bank0
 10887  0A76  0020               	movf	(strcpy@src+1),w
 10888  0A77  0835               	movwf	(strcpy@s+1)
 10889  0A78  00BB               	movf	(strcpy@src),w
 10890  0A79  0834               	movwf	(strcpy@s)
 10891  0A7A  00BA               	line	14
 10892                           	movf	(strcpy@dest+1),w
 10893  0A7B  0833               	movwf	(strcpy@d+1)
 10894  0A7C  00BD               	movf	(strcpy@dest),w
 10895  0A7D  0832               	movwf	(strcpy@d)
 10896  0A7E  00BC               	line	15
 10897                           	goto	l5518
 10898  0A7F  2A81               	
 10899                           l1386:	
 10900  0A80                     	goto	l5518
 10901  0A80  2A81               	
 10902                           l1385:	
 10903  0A81                     	
 10904                           l5518:	
 10905  0A81                     	movf	(strcpy@d+1),w
 10906  0A81  083D               	movwf	(??_strcpy+0)+0+1
 10907  0A82  00B7               	movf	(strcpy@d),w
 10908  0A83  083C               	movwf	(??_strcpy+0)+0
 10909  0A84  00B6               	incf	(strcpy@d),f
 10910  0A85  0ABC               	skipnz
 10911  0A86  1903               	incf	(strcpy@d+1),f
 10912  0A87  0ABD               	movf	0+(??_strcpy+0)+0,w
 10913  0A88  0836               	movwf	fsr1l
 10914  0A89  0086               	movf	1+(??_strcpy+0)+0,w
 10915  0A8A  0837               	movwf	fsr1h
 10916  0A8B  0087               
 10917                           	movf	(strcpy@s+1),w
 10918  0A8C  083B               	movwf	(??_strcpy+2)+0+1
 10919  0A8D  00B9               	movf	(strcpy@s),w
 10920  0A8E  083A               	movwf	(??_strcpy+2)+0
 10921  0A8F  00B8               	incf	(strcpy@s),f
 10922  0A90  0ABA               	skipnz
 10923  0A91  1903               	incf	(strcpy@s+1),f
 10924  0A92  0ABB               	movf	0+(??_strcpy+2)+0,w
 10925  0A93  0838               	movwf	fsr0l
 10926  0A94  0084               	movf	(1+(??_strcpy+2)+0),w
 10927  0A95  0839               	movwf	fsr0h
 10928  0A96  0085               	movf	indf0,w ;code access
 10929  0A97  0800               	movwi	[0]fsr1
 10930  0A98  3FC0               	movf	wreg
 10931  0A99  0889               	btfss	status,2
 10932  0A9A  1D03               	goto	u3741
 10933  0A9B  2A9D               	goto	u3740
 10934  0A9C  2A9E               u3741:
 10935  0A9D                     	goto	l5518
 10936  0A9D  2A81               u3740:
 10937  0A9E                     	goto	l1388
 10938  0A9E  2A9F               	
 10939                           l1387:	
 10940  0A9F                     	line	18
 10941                           ;	Return value of _strcpy is never used
 10942                           	
 10943                           l1388:	
 10944  0A9F                     	return
 10945  0A9F  0008               	opt stack 0
 10946                           GLOBAL	__end_of_strcpy
 10947                           	__end_of_strcpy:
 10948  0AA0                     	signat	_strcpy,8313
 10949                           	global	_myint
 10950                           
 10951 ;; *************** function _myint *****************
 10952 ;; Defined at:
 10953 ;;		line 362 in file "161518_temp_main.c"
 10954 ;; Parameters:    Size  Location     Type
 10955 ;;		None
 10956 ;; Auto vars:     Size  Location     Type
 10957 ;;  wText           3    7[BANK0 ] unsigned char [3]
 10958 ;;  wI2CError       2   10[BANK0 ] int 
 10959 ;;  wEUSARTError    2    5[BANK0 ] int 
 10960 ;; Return value:  Size  Location     Type
 10961 ;;                  1    wreg      void 
 10962 ;; Registers used:
 10963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10964 ;; Tracked objects:
 10965 ;;		On entry : 0/0
 10966 ;;		On exit  : 0/0
 10967 ;;		Unchanged: 0/0
 10968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10970 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
 10971 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10972 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 10973 ;;Total ram usage:        8 bytes
 10974 ;; Hardware stack levels used:    1
 10975 ;; Hardware stack levels required when called:    5
 10976 ;; This function calls:
 10977 ;;		_EUSARTInterrupt
 10978 ;;		_I2C_Interrupt
 10979 ;;		_TempUpdateRequest
 10980 ;;		i1_lcdWriteText
 10981 ;; This function is called by:
 10982 ;;		Interrupt level 1
 10983 ;; This function uses a non-reentrant model
 10984 ;;
 10985                           psect	intentry,class=CODE,delta=2
 10986                           global __pintentry
 10987                           __pintentry:
 10988  0004                     psect	intentry
 10989                           	file	"161518_temp_main.c"
 10990                           	line	362
 10991                           	global	__size_of_myint
 10992                           	__size_of_myint	equ	__end_of_myint-_myint
 10993  005C                     	
 10994                           _myint:	
 10995  0004                     ;incstack = 0
 10996                           	opt	stack 4
 10997                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
 10998  0004  147E               ; Regs used in _myint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10999                           psect	intentry
 11000                           	pagesel	$
 11001  0005  3180               	line	363
 11002                           	
 11003                           i1l6440:	
 11004  0006                     	movlb 0	; select bank0
 11005  0006  0020               	clrf	(myint@wI2CError)
 11006  0007  01AA               	clrf	(myint@wI2CError+1)
 11007  0008  01AB               	clrf	(myint@wEUSARTError)
 11008  0009  01A5               	clrf	(myint@wEUSARTError+1)
 11009  000A  01A6               	line	364
 11010                           	
 11011                           i1l6442:	
 11012  000B                     	fcall	_I2C_Interrupt
 11013  000B  3185  2512  3180   	movf	(1+(?_I2C_Interrupt)),w
 11014  000E  0871               	movlb 0	; select bank0
 11015  000F  0020               	movwf	(myint@wI2CError+1)
 11016  0010  00AB               	movf	(0+(?_I2C_Interrupt)),w
 11017  0011  0870               	movwf	(myint@wI2CError)
 11018  0012  00AA               	line	365
 11019                           	
 11020                           i1l6444:	
 11021  0013                     	movf	((myint@wI2CError)),w
 11022  0013  082A               iorwf	((myint@wI2CError+1)),w
 11023  0014  042B               	btfsc	status,2
 11024  0015  1903               	goto	u458_21
 11025  0016  2818               	goto	u458_20
 11026  0017  2819               u458_21:
 11027  0018                     	goto	i1l6454
 11028  0018  282B               u458_20:
 11029  0019                     	line	367
 11030                           	
 11031                           i1l6446:	
 11032  0019                     	movlw	low(069h)
 11033  0019  3069               	movwf	(??_myint+0)+0
 11034  001A  00A4               	movf	(??_myint+0)+0,w
 11035  001B  0824               	movwf	(myint@wText)
 11036  001C  00A7               	line	368
 11037                           	
 11038                           i1l6448:	
 11039  001D                     	movf	(myint@wI2CError),w
 11040  001D  082A               	addlw	030h
 11041  001E  3E30               	movwf	(??_myint+0)+0
 11042  001F  00A4               	movf	(??_myint+0)+0,w
 11043  0020  0824               	movwf	0+(myint@wText)+01h
 11044  0021  00A8               	line	369
 11045                           	
 11046                           i1l6450:	
 11047  0022                     	clrf	0+(myint@wText)+02h
 11048  0022  01A9               	line	370
 11049                           	
 11050                           i1l6452:	
 11051  0023                     	movlw	low(myint@wText)
 11052  0023  3027               	movwf	(i1lcdWriteText@iText)
 11053  0024  00FC               	movlw	high(myint@wText)
 11054  0025  3000               	movwf	(i1lcdWriteText@iText+1)
 11055  0026  00FD               	fcall	i1_lcdWriteText
 11056  0027  318A  224C  3180   	goto	i1l6454
 11057  002A  282B               	line	371
 11058                           	
 11059                           i1l221:	
 11060  002B                     	line	373
 11061                           	
 11062                           i1l6454:	
 11063  002B                     	fcall	_EUSARTInterrupt
 11064  002B  318D  2598  3180   	movf	(1+(?_EUSARTInterrupt)),w
 11065  002E  0871               	movlb 0	; select bank0
 11066  002F  0020               	movwf	(myint@wEUSARTError+1)
 11067  0030  00A6               	movf	(0+(?_EUSARTInterrupt)),w
 11068  0031  0870               	movwf	(myint@wEUSARTError)
 11069  0032  00A5               	line	375
 11070                           	
 11071                           i1l6456:	
 11072  0033                     	btfss	(17),0	;volatile
 11073  0033  1C11               	goto	u459_21
 11074  0034  2836               	goto	u459_20
 11075  0035  2837               u459_21:
 11076  0036                     	goto	i1l6470
 11077  0036  2853               u459_20:
 11078  0037                     	line	376
 11079                           	
 11080                           i1l6458:	
 11081  0037                     	movlw	low(01h)
 11082  0037  3001               	movwf	(??_myint+0)+0
 11083  0038  00A4               	movf	(??_myint+0)+0,w
 11084  0039  0824               	addwf	(_wTimer1IntCounter),f
 11085  003A  07CB               	line	377
 11086                           	
 11087                           i1l6460:	
 11088  003B                     	bcf	(17),0	;volatile
 11089  003B  1011               	line	379
 11090                           		movlw	7
 11091  003C  3007               	xorwf	((_wTimer1IntCounter)),w
 11092  003D  064B               	btfss	status,2
 11093  003E  1D03               	goto	u460_21
 11094  003F  2841               	goto	u460_20
 11095  0040  2842               u460_21:
 11096  0041                     	goto	i1l6464
 11097  0041  2847               u460_20:
 11098  0042                     	line	380
 11099                           	
 11100                           i1l6462:	
 11101  0042                     	movlw	low(04Ch)
 11102  0042  304C               	movwf	(23)	;volatile
 11103  0043  0097               	line	381
 11104                           	movlw	low(083h)
 11105  0044  3083               	movwf	(22)	;volatile
 11106  0045  0096               	goto	i1l6464
 11107  0046  2847               	line	382
 11108                           	
 11109                           i1l223:	
 11110  0047                     	line	383
 11111                           	
 11112                           i1l6464:	
 11113  0047                     		movlw	8
 11114  0047  3008               	xorwf	((_wTimer1IntCounter)),w
 11115  0048  064B               	btfss	status,2
 11116  0049  1D03               	goto	u461_21
 11117  004A  284C               	goto	u461_20
 11118  004B  284D               u461_21:
 11119  004C                     	goto	i1l6470
 11120  004C  2853               u461_20:
 11121  004D                     	line	384
 11122                           	
 11123                           i1l6466:	
 11124  004D                     	clrf	(_wTimer1IntCounter)
 11125  004D  01CB               	line	385
 11126                           	
 11127                           i1l6468:	
 11128  004E                     	fcall	_TempUpdateRequest
 11129  004E  3189  219F  3180   	goto	i1l6470
 11130  0051  2853               	line	386
 11131                           	
 11132                           i1l224:	
 11133  0052                     	goto	i1l6470
 11134  0052  2853               	line	387
 11135                           	
 11136                           i1l222:	
 11137  0053                     	line	388
 11138                           	
 11139                           i1l6470:	
 11140  0053                     	btfss	(11),2	;volatile
 11141  0053  1D0B               	goto	u462_21
 11142  0054  2856               	goto	u462_20
 11143  0055  2857               u462_21:
 11144  0056                     	goto	i1l226
 11145  0056  285E               u462_20:
 11146  0057                     	line	389
 11147                           	
 11148                           i1l6472:	
 11149  0057                     	bcf	(11),2	;volatile
 11150  0057  110B               	line	390
 11151                           	
 11152                           i1l6474:	
 11153  0058                     	movlw	low(01h)
 11154  0058  3001               	movlb 0	; select bank0
 11155  0059  0020               	movwf	(??_myint+0)+0
 11156  005A  00A4               	movf	(??_myint+0)+0,w
 11157  005B  0824               	addwf	(_wTimer0Counter),f
 11158  005C  07D9               	goto	i1l226
 11159  005D  285E               	line	391
 11160                           	
 11161                           i1l225:	
 11162  005E                     	line	392
 11163                           	
 11164                           i1l226:	
 11165  005E                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
 11166  005E  107E               	retfie
 11167  005F  0009               	opt stack 0
 11168                           GLOBAL	__end_of_myint
 11169                           	__end_of_myint:
 11170  0060                     	signat	_myint,89
 11171                           	global	i1_lcdWriteText
 11172                           
 11173 ;; *************** function i1_lcdWriteText *****************
 11174 ;; Defined at:
 11175 ;;		line 63 in file "LCD_hd44780u_qy_2004a.c"
 11176 ;; Parameters:    Size  Location     Type
 11177 ;;  iText           2   12[COMMON] PTR unsigned char 
 11178 ;;		 -> Esp8266Entrypoint@wText(3), Esp8266Entrypoint@wReturnNumber(4), STR_39(4), STR_36(10), 
 11179 ;;		 -> STR_34(4), STR_10(14), NULL(0), myint@wText(3), 
 11180 ;;		 -> STR_7(16), STR_6(17), STR_5(17), STR_4(17), 
 11181 ;;		 -> STR_3(16), main@wReadout(20), STR_2(17), STR_1(16), 
 11182 ;;		 -> wInterruptText(75), 
 11183 ;; Auto vars:     Size  Location     Type
 11184 ;;  lcdWriteText    1    3[BANK0 ] unsigned char 
 11185 ;; Return value:  Size  Location     Type
 11186 ;;                  1    wreg      void 
 11187 ;; Registers used:
 11188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11189 ;; Tracked objects:
 11190 ;;		On entry : 0/0
 11191 ;;		On exit  : 0/0
 11192 ;;		Unchanged: 0/0
 11193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11195 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11196 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 11197 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 11198 ;;Total ram usage:        6 bytes
 11199 ;; Hardware stack levels used:    1
 11200 ;; Hardware stack levels required when called:    4
 11201 ;; This function calls:
 11202 ;;		i1_writeTxtChk
 11203 ;; This function is called by:
 11204 ;;		_myint
 11205 ;; This function uses a non-reentrant model
 11206 ;;
 11207                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
 11208                           	file	"LCD_hd44780u_qy_2004a.c"
 11209                           	line	63
 11210                           global __ptext36
 11211                           __ptext36:	;psect for function i1_lcdWriteText
 11212  0A4C                     psect	text36
 11213                           	file	"LCD_hd44780u_qy_2004a.c"
 11214                           	line	63
 11215                           	global	__size_ofi1_lcdWriteText
 11216                           	__size_ofi1_lcdWriteText	equ	__end_ofi1_lcdWriteText-i1_lcdWriteText
 11217  002A                     	
 11218                           i1_lcdWriteText:	
 11219  0A4C                     ;incstack = 0
 11220                           	opt	stack 4
 11221                           ; Regs used in i1_lcdWriteText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11222                           	line	65
 11223                           	
 11224                           i1l6168:	
 11225  0A4C                     ;LCD_hd44780u_qy_2004a.c: 63: void lcdWriteText(char *iText);LCD_hd44780u_qy_2004a.c: 64
                                 :  {;LCD_hd44780u_qy_2004a.c: 65:   unsigned char wCharReadingPos = 0;
 11226                           	movlb 0	; select bank0
 11227  0A4C  0020               	clrf	(i1lcdWriteText@wCharReadingPos)
 11228  0A4D  01A3               	line	66
 11229                           ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
 11230                           	goto	i1l6174
 11231  0A4E  2A64               	
 11232                           i1l271:	
 11233  0A4F                     	line	68
 11234                           	
 11235                           i1l6170:	
 11236  0A4F                     ;LCD_hd44780u_qy_2004a.c: 67:   {;LCD_hd44780u_qy_2004a.c: 68:     writeTxtChk(iText[wCh
                                 arReadingPos]);
 11237                           	movf	(i1lcdWriteText@iText+1),w
 11238  0A4F  087D               	movwf	(??i1_lcdWriteText+0)+0+1
 11239  0A50  00A1               	movf	(i1lcdWriteText@iText),w
 11240  0A51  087C               	movwf	(??i1_lcdWriteText+0)+0
 11241  0A52  00A0               	movf	(i1lcdWriteText@wCharReadingPos),w
 11242  0A53  0823               	addwf	(??i1_lcdWriteText+0)+0,w
 11243  0A54  0720               	movwf	fsr0l
 11244  0A55  0084               	movf	(??i1_lcdWriteText+0)+1,w
 11245  0A56  0821               	skipnc
 11246  0A57  1803               	incf	(??i1_lcdWriteText+0)+1,w
 11247  0A58  0A21               	movwf	fsr0h
 11248  0A59  0085               
 11249                           	movf	indf0,w ;code access
 11250  0A5A  0800               	fcall	i1_writeTxtChk
 11251  0A5B  318E  26C9  318A   	line	69
 11252                           	
 11253                           i1l6172:	
 11254  0A5E                     ;LCD_hd44780u_qy_2004a.c: 69:     wCharReadingPos++;
 11255                           	movlw	low(01h)
 11256  0A5E  3001               	movlb 0	; select bank0
 11257  0A5F  0020               	movwf	(??i1_lcdWriteText+0)+0
 11258  0A60  00A0               	movf	(??i1_lcdWriteText+0)+0,w
 11259  0A61  0820               	addwf	(i1lcdWriteText@wCharReadingPos),f
 11260  0A62  07A3               	goto	i1l6174
 11261  0A63  2A64               	line	70
 11262                           ;LCD_hd44780u_qy_2004a.c: 70:   }
 11263                           	
 11264                           i1l270:	
 11265  0A64                     	line	66
 11266                           	
 11267                           i1l6174:	
 11268  0A64                     ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
 11269                           	movf	(i1lcdWriteText@iText+1),w
 11270  0A64  087D               	movwf	(??i1_lcdWriteText+0)+0+1
 11271  0A65  00A1               	movf	(i1lcdWriteText@iText),w
 11272  0A66  087C               	movwf	(??i1_lcdWriteText+0)+0
 11273  0A67  00A0               	movf	(i1lcdWriteText@wCharReadingPos),w
 11274  0A68  0823               	addwf	(??i1_lcdWriteText+0)+0,w
 11275  0A69  0720               	movwf	fsr0l
 11276  0A6A  0084               	movf	(??i1_lcdWriteText+0)+1,w
 11277  0A6B  0821               	skipnc
 11278  0A6C  1803               	incf	(??i1_lcdWriteText+0)+1,w
 11279  0A6D  0A21               	movwf	fsr0h
 11280  0A6E  0085               
 11281                           	moviw	fsr0++
 11282  0A6F  0012               	btfss	status,2
 11283  0A70  1D03               	goto	u446_21
 11284  0A71  2A73               	goto	u446_20
 11285  0A72  2A74               u446_21:
 11286  0A73                     	goto	i1l6170
 11287  0A73  2A4F               u446_20:
 11288  0A74                     	goto	i1l273
 11289  0A74  2A75               	
 11290                           i1l272:	
 11291  0A75                     	line	72
 11292                           	
 11293                           i1l273:	
 11294  0A75                     	return
 11295  0A75  0008               	opt stack 0
 11296                           GLOBAL	__end_ofi1_lcdWriteText
 11297                           	__end_ofi1_lcdWriteText:
 11298  0A76                     	signat	i1_lcdWriteText,89
 11299                           	global	i1_writeTxtChk
 11300                           
 11301 ;; *************** function i1_writeTxtChk *****************
 11302 ;; Defined at:
 11303 ;;		line 154 in file "LCD_hd44780u_qy_2004a.c"
 11304 ;; Parameters:    Size  Location     Type
 11305 ;;  iOpCode         1    wreg     unsigned char 
 11306 ;; Auto vars:     Size  Location     Type
 11307 ;;  iOpCode         1   11[COMMON] unsigned char 
 11308 ;; Return value:  Size  Location     Type
 11309 ;;                  1    wreg      void 
 11310 ;; Registers used:
 11311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11312 ;; Tracked objects:
 11313 ;;		On entry : 0/0
 11314 ;;		On exit  : 0/0
 11315 ;;		Unchanged: 0/0
 11316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11318 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11319 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11320 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11321 ;;Total ram usage:        3 bytes
 11322 ;; Hardware stack levels used:    1
 11323 ;; Hardware stack levels required when called:    3
 11324 ;; This function calls:
 11325 ;;		i1_SetToSendDataToLCD
 11326 ;;		i1_setCursorPosition
 11327 ;;		i1_setData
 11328 ;;		i1_waitLCDBusy
 11329 ;; This function is called by:
 11330 ;;		i1_lcdWriteText
 11331 ;; This function uses a non-reentrant model
 11332 ;;
 11333                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
 11334                           	line	154
 11335                           global __ptext37
 11336                           __ptext37:	;psect for function i1_writeTxtChk
 11337  0EC9                     psect	text37
 11338                           	file	"LCD_hd44780u_qy_2004a.c"
 11339                           	line	154
 11340                           	global	__size_ofi1_writeTxtChk
 11341                           	__size_ofi1_writeTxtChk	equ	__end_ofi1_writeTxtChk-i1_writeTxtChk
 11342  0098                     	
 11343                           i1_writeTxtChk:	
 11344  0EC9                     ;incstack = 0
 11345                           	opt	stack 4
 11346                           ; Regs used in i1_writeTxtChk: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11347                           ;i1writeTxtChk@iOpCode stored from wreg
 11348                           	movwf	(i1writeTxtChk@iOpCode)
 11349  0EC9  00FB               	line	156
 11350                           	
 11351                           i1l5766:	
 11352  0ECA                     ;LCD_hd44780u_qy_2004a.c: 154: void writeTxtChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 55: {;LCD_hd44780u_qy_2004a.c: 156:     if(iOpCode == '\r')
 11353                           		movlw	13
 11354  0ECA  300D               	xorwf	((i1writeTxtChk@iOpCode)),w
 11355  0ECB  067B               	btfss	status,2
 11356  0ECC  1D03               	goto	u409_21
 11357  0ECD  2ECF               	goto	u409_20
 11358  0ECE  2ED0               u409_21:
 11359  0ECF                     	goto	i1l5770
 11360  0ECF  2ED2               u409_20:
 11361  0ED0                     	goto	i1l312
 11362  0ED0  2F60               	line	158
 11363                           	
 11364                           i1l5768:	
 11365  0ED1                     ;LCD_hd44780u_qy_2004a.c: 157:     {;LCD_hd44780u_qy_2004a.c: 158:       return;
 11366                           	goto	i1l312
 11367  0ED1  2F60               	line	159
 11368                           ;LCD_hd44780u_qy_2004a.c: 159:     }
 11369                           	
 11370                           i1l311:	
 11371  0ED2                     	line	160
 11372                           	
 11373                           i1l5770:	
 11374  0ED2                     ;LCD_hd44780u_qy_2004a.c: 160:   SetToSendDataToLCD();
 11375                           	fcall	i1_SetToSendDataToLCD
 11376  0ED2  3189  210C  318E   	line	161
 11377                           	
 11378                           i1l5772:	
 11379  0ED5                     ;LCD_hd44780u_qy_2004a.c: 161:   PORTCbits.RC2 = 1;
 11380                           	movlb 0	; select bank0
 11381  0ED5  0020               	bsf	(14),2	;volatile
 11382  0ED6  150E               	line	162
 11383                           	
 11384                           i1l5774:	
 11385  0ED7                     ;LCD_hd44780u_qy_2004a.c: 162:   PORTCbits.RC1 = 0;
 11386                           	bcf	(14),1	;volatile
 11387  0ED7  108E               	line	163
 11388                           	
 11389                           i1l5776:	
 11390  0ED8                     ;LCD_hd44780u_qy_2004a.c: 163:   if(iOpCode == '\n')
 11391                           		movlw	10
 11392  0ED8  300A               	xorwf	((i1writeTxtChk@iOpCode)),w
 11393  0ED9  067B               	btfss	status,2
 11394  0EDA  1D03               	goto	u410_21
 11395  0EDB  2EDD               	goto	u410_20
 11396  0EDC  2EDE               u410_21:
 11397  0EDD                     	goto	i1l5806
 11398  0EDD  2F2B               u410_20:
 11399  0EDE                     	line	165
 11400                           	
 11401                           i1l5778:	
 11402  0EDE                     ;LCD_hd44780u_qy_2004a.c: 164:   {;LCD_hd44780u_qy_2004a.c: 165:    if(mWritingPosition 
                                 < 20)
 11403                           	movlw	low(014h)
 11404  0EDE  3014               	subwf	(_mWritingPosition),w
 11405  0EDF  025B               	skipnc
 11406  0EE0  1803               	goto	u411_21
 11407  0EE1  2EE3               	goto	u411_20
 11408  0EE2  2EE4               u411_21:
 11409  0EE3                     	goto	i1l5782
 11410  0EE3  2EEA               u411_20:
 11411  0EE4                     	line	167
 11412                           	
 11413                           i1l5780:	
 11414  0EE4                     ;LCD_hd44780u_qy_2004a.c: 166:    {;LCD_hd44780u_qy_2004a.c: 167:        setCursorPositi
                                 on(1,0);
 11415                           	clrf	(i1setCursorPosition@iPosition)
 11416  0EE4  01F4               	movlw	low(01h)
 11417  0EE5  3001               	fcall	i1_setCursorPosition
 11418  0EE6  318D  2536  318E   	line	168
 11419                           ;LCD_hd44780u_qy_2004a.c: 168:    }
 11420                           	goto	i1l312
 11421  0EE9  2F60               	line	169
 11422                           ;LCD_hd44780u_qy_2004a.c: 169:    else if(mWritingPosition < 40)
 11423                           	
 11424                           i1l314:	
 11425  0EEA                     	
 11426                           i1l5782:	
 11427  0EEA                     	movlw	low(028h)
 11428  0EEA  3028               	movlb 0	; select bank0
 11429  0EEB  0020               	subwf	(_mWritingPosition),w
 11430  0EEC  025B               	skipnc
 11431  0EED  1803               	goto	u412_21
 11432  0EEE  2EF0               	goto	u412_20
 11433  0EEF  2EF1               u412_21:
 11434  0EF0                     	goto	i1l5786
 11435  0EF0  2EF7               u412_20:
 11436  0EF1                     	line	171
 11437                           	
 11438                           i1l5784:	
 11439  0EF1                     ;LCD_hd44780u_qy_2004a.c: 170:    {;LCD_hd44780u_qy_2004a.c: 171:        setCursorPositi
                                 on(2,0);
 11440                           	clrf	(i1setCursorPosition@iPosition)
 11441  0EF1  01F4               	movlw	low(02h)
 11442  0EF2  3002               	fcall	i1_setCursorPosition
 11443  0EF3  318D  2536  318E   	line	172
 11444                           ;LCD_hd44780u_qy_2004a.c: 172:    }
 11445                           	goto	i1l312
 11446  0EF6  2F60               	line	173
 11447                           ;LCD_hd44780u_qy_2004a.c: 173:    else if(mWritingPosition < 60)
 11448                           	
 11449                           i1l316:	
 11450  0EF7                     	
 11451                           i1l5786:	
 11452  0EF7                     	movlw	low(03Ch)
 11453  0EF7  303C               	movlb 0	; select bank0
 11454  0EF8  0020               	subwf	(_mWritingPosition),w
 11455  0EF9  025B               	skipnc
 11456  0EFA  1803               	goto	u413_21
 11457  0EFB  2EFD               	goto	u413_20
 11458  0EFC  2EFE               u413_21:
 11459  0EFD                     	goto	i1l5790
 11460  0EFD  2F04               u413_20:
 11461  0EFE                     	line	175
 11462                           	
 11463                           i1l5788:	
 11464  0EFE                     ;LCD_hd44780u_qy_2004a.c: 174:    {;LCD_hd44780u_qy_2004a.c: 175:        setCursorPositi
                                 on(3,0);
 11465                           	clrf	(i1setCursorPosition@iPosition)
 11466  0EFE  01F4               	movlw	low(03h)
 11467  0EFF  3003               	fcall	i1_setCursorPosition
 11468  0F00  318D  2536  318E   	line	176
 11469                           ;LCD_hd44780u_qy_2004a.c: 176:    }
 11470                           	goto	i1l312
 11471  0F03  2F60               	line	177
 11472                           ;LCD_hd44780u_qy_2004a.c: 177:    else
 11473                           	
 11474                           i1l318:	
 11475  0F04                     	line	179
 11476                           	
 11477                           i1l5790:	
 11478  0F04                     ;LCD_hd44780u_qy_2004a.c: 178:    {;LCD_hd44780u_qy_2004a.c: 179:        setCursorPositi
                                 on(0,0);
 11479                           	clrf	(i1setCursorPosition@iPosition)
 11480  0F04  01F4               	movlw	low(0)
 11481  0F05  3000               	fcall	i1_setCursorPosition
 11482  0F06  318D  2536  318E   	goto	i1l312
 11483  0F09  2F60               	line	180
 11484                           ;LCD_hd44780u_qy_2004a.c: 180:    }
 11485                           	
 11486                           i1l319:	
 11487  0F0A                     	goto	i1l312
 11488  0F0A  2F60               	
 11489                           i1l317:	
 11490  0F0B                     	goto	i1l312
 11491  0F0B  2F60               	
 11492                           i1l315:	
 11493  0F0C                     	goto	i1l312
 11494  0F0C  2F60               	line	181
 11495                           	
 11496                           i1l5792:	
 11497  0F0D                     ;LCD_hd44780u_qy_2004a.c: 181:    return;
 11498                           	goto	i1l312
 11499  0F0D  2F60               	line	182
 11500                           ;LCD_hd44780u_qy_2004a.c: 182:   }
 11501                           	
 11502                           i1l313:	
 11503  0F0E                     	line	183
 11504                           ;LCD_hd44780u_qy_2004a.c: 183:   switch(mWritingPosition)
 11505                           	goto	i1l5806
 11506  0F0E  2F2B               	line	185
 11507                           ;LCD_hd44780u_qy_2004a.c: 184:   {;LCD_hd44780u_qy_2004a.c: 185:     case 20:
 11508                           	
 11509                           i1l321:	
 11510  0F0F                     	line	186
 11511                           	
 11512                           i1l5794:	
 11513  0F0F                     ;LCD_hd44780u_qy_2004a.c: 186:       setCursorPosition(1,0);
 11514                           	clrf	(i1setCursorPosition@iPosition)
 11515  0F0F  01F4               	movlw	low(01h)
 11516  0F10  3001               	fcall	i1_setCursorPosition
 11517  0F11  318D  2536  318E   	line	187
 11518                           ;LCD_hd44780u_qy_2004a.c: 187:       break;
 11519                           	goto	i1l5808
 11520  0F14  2F42               	line	188
 11521                           ;LCD_hd44780u_qy_2004a.c: 188:     case 40:
 11522                           	
 11523                           i1l323:	
 11524  0F15                     	line	189
 11525                           	
 11526                           i1l5796:	
 11527  0F15                     ;LCD_hd44780u_qy_2004a.c: 189:       setCursorPosition(2,0);
 11528                           	clrf	(i1setCursorPosition@iPosition)
 11529  0F15  01F4               	movlw	low(02h)
 11530  0F16  3002               	fcall	i1_setCursorPosition
 11531  0F17  318D  2536  318E   	line	190
 11532                           ;LCD_hd44780u_qy_2004a.c: 190:       break;
 11533                           	goto	i1l5808
 11534  0F1A  2F42               	line	191
 11535                           ;LCD_hd44780u_qy_2004a.c: 191:     case 60:
 11536                           	
 11537                           i1l324:	
 11538  0F1B                     	line	192
 11539                           	
 11540                           i1l5798:	
 11541  0F1B                     ;LCD_hd44780u_qy_2004a.c: 192:       setCursorPosition(3,0);
 11542                           	clrf	(i1setCursorPosition@iPosition)
 11543  0F1B  01F4               	movlw	low(03h)
 11544  0F1C  3003               	fcall	i1_setCursorPosition
 11545  0F1D  318D  2536  318E   	line	193
 11546                           ;LCD_hd44780u_qy_2004a.c: 193:       break;
 11547                           	goto	i1l5808
 11548  0F20  2F42               	line	194
 11549                           ;LCD_hd44780u_qy_2004a.c: 194:     case 80:
 11550                           	
 11551                           i1l325:	
 11552  0F21                     	line	195
 11553                           	
 11554                           i1l5800:	
 11555  0F21                     ;LCD_hd44780u_qy_2004a.c: 195:       setCursorPosition(0,0);
 11556                           	clrf	(i1setCursorPosition@iPosition)
 11557  0F21  01F4               	movlw	low(0)
 11558  0F22  3000               	fcall	i1_setCursorPosition
 11559  0F23  318D  2536  318E   	line	196
 11560                           	
 11561                           i1l5802:	
 11562  0F26                     ;LCD_hd44780u_qy_2004a.c: 196:       mWritingPosition = 0;
 11563                           	movlb 0	; select bank0
 11564  0F26  0020               	clrf	(_mWritingPosition)
 11565  0F27  01DB               	line	197
 11566                           ;LCD_hd44780u_qy_2004a.c: 197:       break;
 11567                           	goto	i1l5808
 11568  0F28  2F42               	line	198
 11569                           ;LCD_hd44780u_qy_2004a.c: 198:     default:
 11570                           	
 11571                           i1l326:	
 11572  0F29                     	line	199
 11573                           ;LCD_hd44780u_qy_2004a.c: 199:       break;
 11574                           	goto	i1l5808
 11575  0F29  2F42               	line	200
 11576                           	
 11577                           i1l5804:	
 11578  0F2A                     ;LCD_hd44780u_qy_2004a.c: 200:   }
 11579                           	goto	i1l5808
 11580  0F2A  2F42               	
 11581                           i1l320:	
 11582  0F2B                     	
 11583                           i1l5806:	
 11584  0F2B                     	movlb 0	; select bank0
 11585  0F2B  0020               	movf	(_mWritingPosition),w
 11586  0F2C  085B               	movwf	(??i1_writeTxtChk+0)+0
 11587  0F2D  00F9               	clrf	(??i1_writeTxtChk+0)+0+1
 11588  0F2E  01FA               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 11589                           ; Switch size 1, requested type "space"
 11590                           ; Number of cases is 1, Range of values is 0 to 0
 11591                           ; switch strategies available:
 11592                           ; Name         Instructions Cycles
 11593                           ; simple_byte            4     3 (average)
 11594                           ; direct_byte            8     6 (fixed)
 11595                           ; jumptable            260     6 (fixed)
 11596                           ;	Chosen strategy is simple_byte
 11597                           
 11598                           	movf 1+(??i1_writeTxtChk+0)+0,w
 11599  0F2F  087A               	opt asmopt_push
 11600                           	opt asmopt_off
 11601                           	xorlw	0^0	; case 0
 11602  0F30  3A00               	skipnz
 11603  0F31  1903               	goto	i1l6994
 11604  0F32  2F34               	goto	i1l5808
 11605  0F33  2F42               	opt asmopt_pop
 11606                           	
 11607                           i1l6994:	
 11608  0F34                     ; Switch size 1, requested type "space"
 11609                           ; Number of cases is 4, Range of values is 20 to 80
 11610                           ; switch strategies available:
 11611                           ; Name         Instructions Cycles
 11612                           ; simple_byte           13     7 (average)
 11613                           ; direct_byte          131     9 (fixed)
 11614                           ; jumptable            263     9 (fixed)
 11615                           ;	Chosen strategy is simple_byte
 11616                           
 11617                           	movf 0+(??i1_writeTxtChk+0)+0,w
 11618  0F34  0879               	opt asmopt_push
 11619                           	opt asmopt_off
 11620                           	xorlw	20^0	; case 20
 11621  0F35  3A14               	skipnz
 11622  0F36  1903               	goto	i1l5794
 11623  0F37  2F0F               	xorlw	40^20	; case 40
 11624  0F38  3A3C               	skipnz
 11625  0F39  1903               	goto	i1l5796
 11626  0F3A  2F15               	xorlw	60^40	; case 60
 11627  0F3B  3A14               	skipnz
 11628  0F3C  1903               	goto	i1l5798
 11629  0F3D  2F1B               	xorlw	80^60	; case 80
 11630  0F3E  3A6C               	skipnz
 11631  0F3F  1903               	goto	i1l5800
 11632  0F40  2F21               	goto	i1l5808
 11633  0F41  2F42               	opt asmopt_pop
 11634                           
 11635                           	
 11636                           i1l322:	
 11637  0F42                     	line	201
 11638                           	
 11639                           i1l5808:	
 11640  0F42                     ;LCD_hd44780u_qy_2004a.c: 201:   waitLCDBusy();
 11641                           	fcall	i1_waitLCDBusy
 11642  0F42  318A  2223  318E   	line	202
 11643                           	
 11644                           i1l5810:	
 11645  0F45                     ;LCD_hd44780u_qy_2004a.c: 202:   SetToSendDataToLCD();
 11646                           	fcall	i1_SetToSendDataToLCD
 11647  0F45  3189  210C  318E   	line	203
 11648                           	
 11649                           i1l5812:	
 11650  0F48                     ;LCD_hd44780u_qy_2004a.c: 203:   PORTCbits.RC2 = 1;
 11651                           	movlb 0	; select bank0
 11652  0F48  0020               	bsf	(14),2	;volatile
 11653  0F49  150E               	line	204
 11654                           	
 11655                           i1l5814:	
 11656  0F4A                     ;LCD_hd44780u_qy_2004a.c: 204:   PORTCbits.RC1 = 0;
 11657                           	bcf	(14),1	;volatile
 11658  0F4A  108E               	line	205
 11659                           	
 11660                           i1l5816:	
 11661  0F4B                     ;LCD_hd44780u_qy_2004a.c: 205:   setData(iOpCode >> 4);
 11662                           	movf	(i1writeTxtChk@iOpCode),w
 11663  0F4B  087B               	movwf	(??i1_writeTxtChk+0)+0
 11664  0F4C  00F9               	movlw	04h
 11665  0F4D  3004               u414_25:
 11666  0F4E                     	lsrf	(??i1_writeTxtChk+0)+0,f
 11667  0F4E  36F9               	decfsz	wreg,f
 11668  0F4F  0B89               	goto	u414_25
 11669  0F50  2F4E               	movf	0+(??i1_writeTxtChk+0)+0,w
 11670  0F51  0879               	fcall	i1_setData
 11671  0F52  318B  2384  318E   	line	206
 11672                           	
 11673                           i1l5818:	
 11674  0F55                     ;LCD_hd44780u_qy_2004a.c: 206:   setData(iOpCode);
 11675                           	movf	(i1writeTxtChk@iOpCode),w
 11676  0F55  087B               	fcall	i1_setData
 11677  0F56  318B  2384  318E   	line	207
 11678                           	
 11679                           i1l5820:	
 11680  0F59                     ;LCD_hd44780u_qy_2004a.c: 207:   _delay((unsigned long)((1)*(16000000/4000000.0)));
 11681                           		opt asmopt_push
 11682                           	opt asmopt_off
 11683                           	nop2	;2 cycle nop
 11684  0F59  3200               	nop2	;2 cycle nop
 11685  0F5A  3200               	opt asmopt_pop
 11686                           
 11687                           	line	208
 11688                           	
 11689                           i1l5822:	
 11690  0F5B                     ;LCD_hd44780u_qy_2004a.c: 208:   mWritingPosition++;
 11691                           	movlw	low(01h)
 11692  0F5B  3001               	movwf	(??i1_writeTxtChk+0)+0
 11693  0F5C  00F9               	movf	(??i1_writeTxtChk+0)+0,w
 11694  0F5D  0879               	movlb 0	; select bank0
 11695  0F5E  0020               	addwf	(_mWritingPosition),f
 11696  0F5F  07DB               	line	209
 11697                           	
 11698                           i1l312:	
 11699  0F60                     	return
 11700  0F60  0008               	opt stack 0
 11701                           GLOBAL	__end_ofi1_writeTxtChk
 11702                           	__end_ofi1_writeTxtChk:
 11703  0F61                     	signat	i1_writeTxtChk,89
 11704                           	global	i1_setCursorPosition
 11705                           
 11706 ;; *************** function i1_setCursorPosition *****************
 11707 ;; Defined at:
 11708 ;;		line 333 in file "LCD_hd44780u_qy_2004a.c"
 11709 ;; Parameters:    Size  Location     Type
 11710 ;;  iLine           1    wreg     unsigned char 
 11711 ;;  iPosition       1    4[COMMON] unsigned char 
 11712 ;; Auto vars:     Size  Location     Type
 11713 ;;  iLine           1    7[COMMON] unsigned char 
 11714 ;;  setCursorPos    1    8[COMMON] unsigned char 
 11715 ;; Return value:  Size  Location     Type
 11716 ;;                  1    wreg      void 
 11717 ;; Registers used:
 11718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11719 ;; Tracked objects:
 11720 ;;		On entry : 0/0
 11721 ;;		On exit  : 0/0
 11722 ;;		Unchanged: 0/0
 11723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11724 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11725 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11726 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11727 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11728 ;;Total ram usage:        5 bytes
 11729 ;; Hardware stack levels used:    1
 11730 ;; Hardware stack levels required when called:    2
 11731 ;; This function calls:
 11732 ;;		i1_SetToSendDataToLCD
 11733 ;;		i1_setData
 11734 ;;		i1_waitLCDBusy
 11735 ;; This function is called by:
 11736 ;;		i1_writeTxtChk
 11737 ;; This function uses a non-reentrant model
 11738 ;;
 11739                           psect	text38,local,class=CODE,delta=2,merge=1,group=0
 11740                           	line	333
 11741                           global __ptext38
 11742                           __ptext38:	;psect for function i1_setCursorPosition
 11743  0D36                     psect	text38
 11744                           	file	"LCD_hd44780u_qy_2004a.c"
 11745                           	line	333
 11746                           	global	__size_ofi1_setCursorPosition
 11747                           	__size_ofi1_setCursorPosition	equ	__end_ofi1_setCursorPosition-i1_setCursorPosition
 11748  0062                     	
 11749                           i1_setCursorPosition:	
 11750  0D36                     ;incstack = 0
 11751                           	opt	stack 4
 11752                           ; Regs used in i1_setCursorPosition: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11753                           ;i1setCursorPosition@iLine stored from wreg
 11754                           	movwf	(i1setCursorPosition@iLine)
 11755  0D36  00F7               	line	335
 11756                           	
 11757                           i1l5520:	
 11758  0D37                     ;LCD_hd44780u_qy_2004a.c: 333: void setCursorPosition(char iLine, char iPosition);LCD_hd
                                 44780u_qy_2004a.c: 334: {;LCD_hd44780u_qy_2004a.c: 335:   char wLCDIndex=0;
 11759                           	clrf	(i1setCursorPosition@wLCDIndex)
 11760  0D37  01F8               	line	337
 11761                           ;LCD_hd44780u_qy_2004a.c: 337:   switch(iLine)
 11762                           	goto	i1l5532
 11763  0D38  2D69               	line	339
 11764                           ;LCD_hd44780u_qy_2004a.c: 338:   {;LCD_hd44780u_qy_2004a.c: 339:       case 0:
 11765                           	
 11766                           i1l390:	
 11767  0D39                     	line	340
 11768                           	
 11769                           i1l5522:	
 11770  0D39                     ;LCD_hd44780u_qy_2004a.c: 340:           wLCDIndex = 0x00 + iPosition;
 11771                           	movf	(i1setCursorPosition@iPosition),w
 11772  0D39  0874               	movwf	(??i1_setCursorPosition+0)+0
 11773  0D3A  00F5               	movf	(??i1_setCursorPosition+0)+0,w
 11774  0D3B  0875               	movwf	(i1setCursorPosition@wLCDIndex)
 11775  0D3C  00F8               	line	341
 11776                           ;LCD_hd44780u_qy_2004a.c: 341:           mWritingPosition = iPosition;
 11777                           	movf	(i1setCursorPosition@iPosition),w
 11778  0D3D  0874               	movwf	(??i1_setCursorPosition+0)+0
 11779  0D3E  00F5               	movf	(??i1_setCursorPosition+0)+0,w
 11780  0D3F  0875               	movlb 0	; select bank0
 11781  0D40  0020               	movwf	(_mWritingPosition)
 11782  0D41  00DB               	line	342
 11783                           ;LCD_hd44780u_qy_2004a.c: 342:           break;
 11784                           	goto	i1l5534
 11785  0D42  2D7F               	line	343
 11786                           ;LCD_hd44780u_qy_2004a.c: 343:       case 1:
 11787                           	
 11788                           i1l392:	
 11789  0D43                     	line	344
 11790                           	
 11791                           i1l5524:	
 11792  0D43                     ;LCD_hd44780u_qy_2004a.c: 344:           wLCDIndex = 0x40 + iPosition;
 11793                           	movf	(i1setCursorPosition@iPosition),w
 11794  0D43  0874               	addlw	040h
 11795  0D44  3E40               	movwf	(??i1_setCursorPosition+0)+0
 11796  0D45  00F5               	movf	(??i1_setCursorPosition+0)+0,w
 11797  0D46  0875               	movwf	(i1setCursorPosition@wLCDIndex)
 11798  0D47  00F8               	line	345
 11799                           ;LCD_hd44780u_qy_2004a.c: 345:           mWritingPosition = 20 + iPosition;
 11800                           	movf	(i1setCursorPosition@iPosition),w
 11801  0D48  0874               	addlw	014h
 11802  0D49  3E14               	movwf	(??i1_setCursorPosition+0)+0
 11803  0D4A  00F5               	movf	(??i1_setCursorPosition+0)+0,w
 11804  0D4B  0875               	movlb 0	; select bank0
 11805  0D4C  0020               	movwf	(_mWritingPosition)
 11806  0D4D  00DB               	line	346
 11807                           ;LCD_hd44780u_qy_2004a.c: 346:           break;
 11808                           	goto	i1l5534
 11809  0D4E  2D7F               	line	347
 11810                           ;LCD_hd44780u_qy_2004a.c: 347:       case 2:
 11811                           	
 11812                           i1l393:	
 11813  0D4F                     	line	348
 11814                           	
 11815                           i1l5526:	
 11816  0D4F                     ;LCD_hd44780u_qy_2004a.c: 348:           wLCDIndex = 0x14 + iPosition;
 11817                           	movf	(i1setCursorPosition@iPosition),w
 11818  0D4F  0874               	addlw	014h
 11819  0D50  3E14               	movwf	(??i1_setCursorPosition+0)+0
 11820  0D51  00F5               	movf	(??i1_setCursorPosition+0)+0,w
 11821  0D52  0875               	movwf	(i1setCursorPosition@wLCDIndex)
 11822  0D53  00F8               	line	349
 11823                           ;LCD_hd44780u_qy_2004a.c: 349:           mWritingPosition = 40 + iPosition;
 11824                           	movf	(i1setCursorPosition@iPosition),w
 11825  0D54  0874               	addlw	028h
 11826  0D55  3E28               	movwf	(??i1_setCursorPosition+0)+0
 11827  0D56  00F5               	movf	(??i1_setCursorPosition+0)+0,w
 11828  0D57  0875               	movlb 0	; select bank0
 11829  0D58  0020               	movwf	(_mWritingPosition)
 11830  0D59  00DB               	line	350
 11831                           ;LCD_hd44780u_qy_2004a.c: 350:           break;
 11832                           	goto	i1l5534
 11833  0D5A  2D7F               	line	351
 11834                           ;LCD_hd44780u_qy_2004a.c: 351:       case 3:
 11835                           	
 11836                           i1l394:	
 11837  0D5B                     	line	352
 11838                           	
 11839                           i1l5528:	
 11840  0D5B                     ;LCD_hd44780u_qy_2004a.c: 352:           wLCDIndex = 0x54 + iPosition;
 11841                           	movf	(i1setCursorPosition@iPosition),w
 11842  0D5B  0874               	addlw	054h
 11843  0D5C  3E54               	movwf	(??i1_setCursorPosition+0)+0
 11844  0D5D  00F5               	movf	(??i1_setCursorPosition+0)+0,w
 11845  0D5E  0875               	movwf	(i1setCursorPosition@wLCDIndex)
 11846  0D5F  00F8               	line	353
 11847                           ;LCD_hd44780u_qy_2004a.c: 353:           mWritingPosition = 60 + iPosition;
 11848                           	movf	(i1setCursorPosition@iPosition),w
 11849  0D60  0874               	addlw	03Ch
 11850  0D61  3E3C               	movwf	(??i1_setCursorPosition+0)+0
 11851  0D62  00F5               	movf	(??i1_setCursorPosition+0)+0,w
 11852  0D63  0875               	movlb 0	; select bank0
 11853  0D64  0020               	movwf	(_mWritingPosition)
 11854  0D65  00DB               	line	354
 11855                           ;LCD_hd44780u_qy_2004a.c: 354:           break;
 11856                           	goto	i1l5534
 11857  0D66  2D7F               	line	355
 11858                           ;LCD_hd44780u_qy_2004a.c: 355:       default:
 11859                           	
 11860                           i1l395:	
 11861  0D67                     	line	356
 11862                           ;LCD_hd44780u_qy_2004a.c: 356:       break;
 11863                           	goto	i1l5534
 11864  0D67  2D7F               	line	357
 11865                           	
 11866                           i1l5530:	
 11867  0D68                     ;LCD_hd44780u_qy_2004a.c: 357:   }
 11868                           	goto	i1l5534
 11869  0D68  2D7F               	
 11870                           i1l389:	
 11871  0D69                     	
 11872                           i1l5532:	
 11873  0D69                     	movf	(i1setCursorPosition@iLine),w
 11874  0D69  0877               	movwf	(??i1_setCursorPosition+0)+0
 11875  0D6A  00F5               	clrf	(??i1_setCursorPosition+0)+0+1
 11876  0D6B  01F6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 11877                           ; Switch size 1, requested type "space"
 11878                           ; Number of cases is 1, Range of values is 0 to 0
 11879                           ; switch strategies available:
 11880                           ; Name         Instructions Cycles
 11881                           ; simple_byte            4     3 (average)
 11882                           ; direct_byte            8     6 (fixed)
 11883                           ; jumptable            260     6 (fixed)
 11884                           ;	Chosen strategy is simple_byte
 11885                           
 11886                           	movf 1+(??i1_setCursorPosition+0)+0,w
 11887  0D6C  0876               	opt asmopt_push
 11888                           	opt asmopt_off
 11889                           	xorlw	0^0	; case 0
 11890  0D6D  3A00               	skipnz
 11891  0D6E  1903               	goto	i1l6996
 11892  0D6F  2D71               	goto	i1l5534
 11893  0D70  2D7F               	opt asmopt_pop
 11894                           	
 11895                           i1l6996:	
 11896  0D71                     ; Switch size 1, requested type "space"
 11897                           ; Number of cases is 4, Range of values is 0 to 3
 11898                           ; switch strategies available:
 11899                           ; Name         Instructions Cycles
 11900                           ; simple_byte           13     7 (average)
 11901                           ; direct_byte           14     6 (fixed)
 11902                           ; jumptable            260     6 (fixed)
 11903                           ;	Chosen strategy is simple_byte
 11904                           
 11905                           	movf 0+(??i1_setCursorPosition+0)+0,w
 11906  0D71  0875               	opt asmopt_push
 11907                           	opt asmopt_off
 11908                           	xorlw	0^0	; case 0
 11909  0D72  3A00               	skipnz
 11910  0D73  1903               	goto	i1l5522
 11911  0D74  2D39               	xorlw	1^0	; case 1
 11912  0D75  3A01               	skipnz
 11913  0D76  1903               	goto	i1l5524
 11914  0D77  2D43               	xorlw	2^1	; case 2
 11915  0D78  3A03               	skipnz
 11916  0D79  1903               	goto	i1l5526
 11917  0D7A  2D4F               	xorlw	3^2	; case 3
 11918  0D7B  3A01               	skipnz
 11919  0D7C  1903               	goto	i1l5528
 11920  0D7D  2D5B               	goto	i1l5534
 11921  0D7E  2D7F               	opt asmopt_pop
 11922                           
 11923                           	
 11924                           i1l391:	
 11925  0D7F                     	line	359
 11926                           	
 11927                           i1l5534:	
 11928  0D7F                     ;LCD_hd44780u_qy_2004a.c: 359:   waitLCDBusy();
 11929                           	fcall	i1_waitLCDBusy
 11930  0D7F  318A  2223  318D   	line	361
 11931                           	
 11932                           i1l5536:	
 11933  0D82                     ;LCD_hd44780u_qy_2004a.c: 361:   SetToSendDataToLCD();
 11934                           	fcall	i1_SetToSendDataToLCD
 11935  0D82  3189  210C  318D   	line	362
 11936                           	
 11937                           i1l5538:	
 11938  0D85                     ;LCD_hd44780u_qy_2004a.c: 362:   PORTCbits.RC2 = 0;
 11939                           	movlb 0	; select bank0
 11940  0D85  0020               	bcf	(14),2	;volatile
 11941  0D86  110E               	line	363
 11942                           	
 11943                           i1l5540:	
 11944  0D87                     ;LCD_hd44780u_qy_2004a.c: 363:   PORTCbits.RC1 = 0;
 11945                           	bcf	(14),1	;volatile
 11946  0D87  108E               	line	364
 11947                           	
 11948                           i1l5542:	
 11949  0D88                     ;LCD_hd44780u_qy_2004a.c: 364:   setData((wLCDIndex >> 4) | 0x8 );
 11950                           	movf	(i1setCursorPosition@wLCDIndex),w
 11951  0D88  0878               	movwf	(??i1_setCursorPosition+0)+0
 11952  0D89  00F5               	movlw	04h
 11953  0D8A  3004               u375_25:
 11954  0D8B                     	lsrf	(??i1_setCursorPosition+0)+0,f
 11955  0D8B  36F5               	decfsz	wreg,f
 11956  0D8C  0B89               	goto	u375_25
 11957  0D8D  2D8B               	movf	0+(??i1_setCursorPosition+0)+0,w
 11958  0D8E  0875               	iorlw	08h
 11959  0D8F  3808               	fcall	i1_setData
 11960  0D90  318B  2384  318D   	line	365
 11961                           	
 11962                           i1l5544:	
 11963  0D93                     ;LCD_hd44780u_qy_2004a.c: 365:   setData(wLCDIndex);
 11964                           	movf	(i1setCursorPosition@wLCDIndex),w
 11965  0D93  0878               	fcall	i1_setData
 11966  0D94  318B  2384  318D   	line	367
 11967                           	
 11968                           i1l396:	
 11969  0D97                     	return
 11970  0D97  0008               	opt stack 0
 11971                           GLOBAL	__end_ofi1_setCursorPosition
 11972                           	__end_ofi1_setCursorPosition:
 11973  0D98                     	signat	i1_setCursorPosition,89
 11974                           	global	i1_waitLCDBusy
 11975                           
 11976 ;; *************** function i1_waitLCDBusy *****************
 11977 ;; Defined at:
 11978 ;;		line 241 in file "LCD_hd44780u_qy_2004a.c"
 11979 ;; Parameters:    Size  Location     Type
 11980 ;;		None
 11981 ;; Auto vars:     Size  Location     Type
 11982 ;;  waitLCDBusy     2    2[COMMON] int 
 11983 ;; Return value:  Size  Location     Type
 11984 ;;                  1    wreg      void 
 11985 ;; Registers used:
 11986 ;;		wreg, status,2, status,0, pclath, cstack
 11987 ;; Tracked objects:
 11988 ;;		On entry : 0/0
 11989 ;;		On exit  : 0/0
 11990 ;;		Unchanged: 0/0
 11991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11993 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11994 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11995 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11996 ;;Total ram usage:        4 bytes
 11997 ;; Hardware stack levels used:    1
 11998 ;; Hardware stack levels required when called:    1
 11999 ;; This function calls:
 12000 ;;		i1_SetToReadDataFromLCD
 12001 ;; This function is called by:
 12002 ;;		i1_writeTxtChk
 12003 ;;		i1_setCursorPosition
 12004 ;; This function uses a non-reentrant model
 12005 ;;
 12006                           psect	text39,local,class=CODE,delta=2,merge=1,group=0
 12007                           	line	241
 12008                           global __ptext39
 12009                           __ptext39:	;psect for function i1_waitLCDBusy
 12010  0A23                     psect	text39
 12011                           	file	"LCD_hd44780u_qy_2004a.c"
 12012                           	line	241
 12013                           	global	__size_ofi1_waitLCDBusy
 12014                           	__size_ofi1_waitLCDBusy	equ	__end_ofi1_waitLCDBusy-i1_waitLCDBusy
 12015  0029                     	
 12016                           i1_waitLCDBusy:	
 12017  0A23                     ;incstack = 0
 12018                           	opt	stack 5
 12019                           ; Regs used in i1_waitLCDBusy: [wreg+status,2+status,0+pclath+cstack]
 12020                           	line	243
 12021                           	
 12022                           i1l5414:	
 12023  0A23                     ;LCD_hd44780u_qy_2004a.c: 243:   PORTCbits.RC2 = 0;
 12024                           	movlb 0	; select bank0
 12025  0A23  0020               	bcf	(14),2	;volatile
 12026  0A24  110E               	line	244
 12027                           ;LCD_hd44780u_qy_2004a.c: 244:   PORTCbits.RC1 = 1;
 12028                           	bsf	(14),1	;volatile
 12029  0A25  148E               	line	246
 12030                           	
 12031                           i1l5416:	
 12032  0A26                     ;LCD_hd44780u_qy_2004a.c: 246:   SetToReadDataFromLCD();
 12033                           	fcall	i1_SetToReadDataFromLCD
 12034  0A26  3189  2112  318A   	line	248
 12035                           	
 12036                           i1l5418:	
 12037  0A29                     ;LCD_hd44780u_qy_2004a.c: 248:   int busyFlag = 1;
 12038                           	movlw	01h
 12039  0A29  3001               	movwf	(i1waitLCDBusy@busyFlag)
 12040  0A2A  00F2               	movlw	0
 12041  0A2B  3000               	movwf	((i1waitLCDBusy@busyFlag))+1
 12042  0A2C  00F3               	line	249
 12043                           ;LCD_hd44780u_qy_2004a.c: 249:   while(busyFlag == 1)
 12044                           	goto	i1l341
 12045  0A2D  2A44               	
 12046                           i1l342:	
 12047  0A2E                     	line	252
 12048                           ;LCD_hd44780u_qy_2004a.c: 250:   {;LCD_hd44780u_qy_2004a.c: 252:     PORTCbits.RC0 = 1;

 12049                           	movlb 0	; select bank0
 12050  0A2E  0020               	bsf	(14),0	;volatile
 12051  0A2F  140E               	line	253
 12052                           ;LCD_hd44780u_qy_2004a.c: 253:     _delay((unsigned long)((1)*(16000000/4000000.0)));
 12053                           		opt asmopt_push
 12054                           	opt asmopt_off
 12055                           	nop2	;2 cycle nop
 12056  0A30  3200               	nop2	;2 cycle nop
 12057  0A31  3200               	opt asmopt_pop
 12058                           
 12059                           	line	254
 12060                           	
 12061                           i1l5420:	
 12062  0A32                     ;LCD_hd44780u_qy_2004a.c: 254:     busyFlag = PORTAbits.RA0;
 12063                           	movlb 0	; select bank0
 12064  0A32  0020               	movf	(12),w	;volatile
 12065  0A33  080C               	andlw	(1<<1)-1
 12066  0A34  3901               	movwf	(??i1_waitLCDBusy+0)+0
 12067  0A35  00F0               	clrf	(??i1_waitLCDBusy+0)+0+1
 12068  0A36  01F1               	movf	0+(??i1_waitLCDBusy+0)+0,w
 12069  0A37  0870               	movwf	(i1waitLCDBusy@busyFlag)
 12070  0A38  00F2               	movf	1+(??i1_waitLCDBusy+0)+0,w
 12071  0A39  0871               	movwf	(i1waitLCDBusy@busyFlag+1)
 12072  0A3A  00F3               	line	255
 12073                           	
 12074                           i1l5422:	
 12075  0A3B                     ;LCD_hd44780u_qy_2004a.c: 255:     PORTCbits.RC0 = 0;
 12076                           	bcf	(14),0	;volatile
 12077  0A3B  100E               	line	256
 12078                           	
 12079                           i1l5424:	
 12080  0A3C                     ;LCD_hd44780u_qy_2004a.c: 256:     _delay((unsigned long)((2)*(16000000/4000000.0)));
 12081                           		opt asmopt_push
 12082                           	opt asmopt_off
 12083                           	nop2	;2 cycle nop
 12084  0A3C  3200               	nop2	;2 cycle nop
 12085  0A3D  3200               	nop2	;2 cycle nop
 12086  0A3E  3200               	nop2	;2 cycle nop
 12087  0A3F  3200               	opt asmopt_pop
 12088                           
 12089                           	line	258
 12090                           	
 12091                           i1l5426:	
 12092  0A40                     ;LCD_hd44780u_qy_2004a.c: 258:     PORTCbits.RC0 = 1;
 12093                           	movlb 0	; select bank0
 12094  0A40  0020               	bsf	(14),0	;volatile
 12095  0A41  140E               	line	259
 12096                           	
 12097                           i1l5428:	
 12098  0A42                     ;LCD_hd44780u_qy_2004a.c: 259:     _delay((unsigned long)((1)*(16000000/4000000.0)));
 12099                           		opt asmopt_push
 12100                           	opt asmopt_off
 12101                           	nop2	;2 cycle nop
 12102  0A42  3200               	nop2	;2 cycle nop
 12103  0A43  3200               	opt asmopt_pop
 12104                           
 12105                           	line	260
 12106                           ;LCD_hd44780u_qy_2004a.c: 260:   }
 12107                           	
 12108                           i1l341:	
 12109  0A44                     	line	249
 12110                           ;LCD_hd44780u_qy_2004a.c: 249:   while(busyFlag == 1)
 12111                           		decf	((i1waitLCDBusy@busyFlag)),w
 12112  0A44  0372               iorwf	((i1waitLCDBusy@busyFlag+1)),w
 12113  0A45  0473               	btfsc	status,2
 12114  0A46  1903               	goto	u365_21
 12115  0A47  2A49               	goto	u365_20
 12116  0A48  2A4A               u365_21:
 12117  0A49                     	goto	i1l342
 12118  0A49  2A2E               u365_20:
 12119  0A4A                     	goto	i1l344
 12120  0A4A  2A4B               	
 12121                           i1l343:	
 12122  0A4B                     	line	261
 12123                           	
 12124                           i1l344:	
 12125  0A4B                     	return
 12126  0A4B  0008               	opt stack 0
 12127                           GLOBAL	__end_ofi1_waitLCDBusy
 12128                           	__end_ofi1_waitLCDBusy:
 12129  0A4C                     	signat	i1_waitLCDBusy,89
 12130                           	global	i1_SetToReadDataFromLCD
 12131                           
 12132 ;; *************** function i1_SetToReadDataFromLCD *****************
 12133 ;; Defined at:
 12134 ;;		line 226 in file "LCD_hd44780u_qy_2004a.c"
 12135 ;; Parameters:    Size  Location     Type
 12136 ;;		None
 12137 ;; Auto vars:     Size  Location     Type
 12138 ;;		None
 12139 ;; Return value:  Size  Location     Type
 12140 ;;                  1    wreg      void 
 12141 ;; Registers used:
 12142 ;;		None
 12143 ;; Tracked objects:
 12144 ;;		On entry : 0/0
 12145 ;;		On exit  : 0/0
 12146 ;;		Unchanged: 0/0
 12147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12152 ;;Total ram usage:        0 bytes
 12153 ;; Hardware stack levels used:    1
 12154 ;; This function calls:
 12155 ;;		Nothing
 12156 ;; This function is called by:
 12157 ;;		i1_waitLCDBusy
 12158 ;; This function uses a non-reentrant model
 12159 ;;
 12160                           psect	text40,local,class=CODE,delta=2,merge=1,group=0
 12161                           	line	226
 12162                           global __ptext40
 12163                           __ptext40:	;psect for function i1_SetToReadDataFromLCD
 12164  0912                     psect	text40
 12165                           	file	"LCD_hd44780u_qy_2004a.c"
 12166                           	line	226
 12167                           	global	__size_ofi1_SetToReadDataFromLCD
 12168                           	__size_ofi1_SetToReadDataFromLCD	equ	__end_ofi1_SetToReadDataFromLCD-i1_SetToReadDataFr
                                 omLCD
 12169  0006                     	
 12170                           i1_SetToReadDataFromLCD:	
 12171  0912                     ;incstack = 0
 12172                           	opt	stack 5
 12173                           ; Regs used in i1_SetToReadDataFromLCD: []
 12174                           	line	228
 12175                           	
 12176                           i1l5360:	
 12177  0912                     ;LCD_hd44780u_qy_2004a.c: 228:   TRISAbits.TRISA0 = 1;
 12178                           	movlb 1	; select bank1
 12179  0912  0021               	bsf	(140)^080h,0	;volatile
 12180  0913  140C               	line	229
 12181                           ;LCD_hd44780u_qy_2004a.c: 229:   TRISAbits.TRISA1 = 1;
 12182                           	bsf	(140)^080h,1	;volatile
 12183  0914  148C               	line	230
 12184                           ;LCD_hd44780u_qy_2004a.c: 230:   TRISAbits.TRISA2 = 1;
 12185                           	bsf	(140)^080h,2	;volatile
 12186  0915  150C               	line	231
 12187                           ;LCD_hd44780u_qy_2004a.c: 231:   TRISAbits.TRISA3 = 1;
 12188                           	bsf	(140)^080h,3	;volatile
 12189  0916  158C               	line	232
 12190                           	
 12191                           i1l335:	
 12192  0917                     	return
 12193  0917  0008               	opt stack 0
 12194                           GLOBAL	__end_ofi1_SetToReadDataFromLCD
 12195                           	__end_ofi1_SetToReadDataFromLCD:
 12196  0918                     	signat	i1_SetToReadDataFromLCD,89
 12197                           	global	i1_setData
 12198                           
 12199 ;; *************** function i1_setData *****************
 12200 ;; Defined at:
 12201 ;;		line 142 in file "LCD_hd44780u_qy_2004a.c"
 12202 ;; Parameters:    Size  Location     Type
 12203 ;;  iValue          1    wreg     unsigned char 
 12204 ;; Auto vars:     Size  Location     Type
 12205 ;;  iValue          1    2[COMMON] unsigned char 
 12206 ;; Return value:  Size  Location     Type
 12207 ;;                  1    wreg      void 
 12208 ;; Registers used:
 12209 ;;		wreg, status,2, status,0
 12210 ;; Tracked objects:
 12211 ;;		On entry : 0/0
 12212 ;;		On exit  : 0/0
 12213 ;;		Unchanged: 0/0
 12214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12216 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12217 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12218 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12219 ;;Total ram usage:        3 bytes
 12220 ;; Hardware stack levels used:    1
 12221 ;; This function calls:
 12222 ;;		Nothing
 12223 ;; This function is called by:
 12224 ;;		i1_writeTxtChk
 12225 ;;		i1_setCursorPosition
 12226 ;; This function uses a non-reentrant model
 12227 ;;
 12228                           psect	text41,local,class=CODE,delta=2,merge=1,group=0
 12229                           	line	142
 12230                           global __ptext41
 12231                           __ptext41:	;psect for function i1_setData
 12232  0B84                     psect	text41
 12233                           	file	"LCD_hd44780u_qy_2004a.c"
 12234                           	line	142
 12235                           	global	__size_ofi1_setData
 12236                           	__size_ofi1_setData	equ	__end_ofi1_setData-i1_setData
 12237  003C                     	
 12238                           i1_setData:	
 12239  0B84                     ;incstack = 0
 12240                           	opt	stack 6
 12241                           ; Regs used in i1_setData: [wreg+status,2+status,0]
 12242                           ;i1setData@iValue stored from wreg
 12243                           	movwf	(i1setData@iValue)
 12244  0B84  00F2               	line	144
 12245                           	
 12246                           i1l5402:	
 12247  0B85                     ;LCD_hd44780u_qy_2004a.c: 142: void setData(char iValue);LCD_hd44780u_qy_2004a.c: 143: {
                                 ;LCD_hd44780u_qy_2004a.c: 144:   PORTCbits.RC0 = 1;
 12248                           	movlb 0	; select bank0
 12249  0B85  0020               	bsf	(14),0	;volatile
 12250  0B86  140E               	line	145
 12251                           	
 12252                           i1l5404:	
 12253  0B87                     ;LCD_hd44780u_qy_2004a.c: 145:   PORTAbits.RA0 = (iValue & 0x8) >> 3;
 12254                           	movf	(i1setData@iValue),w
 12255  0B87  0872               	movwf	(??i1_setData+0)+0
 12256  0B88  00F0               	movlw	03h
 12257  0B89  3003               u363_25:
 12258  0B8A                     	lsrf	(??i1_setData+0)+0,f
 12259  0B8A  36F0               	decfsz	wreg,f
 12260  0B8B  0B89               	goto	u363_25
 12261  0B8C  2B8A               	movlw	low(01h)
 12262  0B8D  3001               	andwf	0+(??i1_setData+0)+0,w
 12263  0B8E  0570               	movwf	(??i1_setData+1)+0
 12264  0B8F  00F1               	movf	(12),w	;volatile
 12265  0B90  080C               	xorwf	0+(??i1_setData+1)+0,w
 12266  0B91  0671               	andlw	not ((1<<1)-1)
 12267  0B92  39FE               	xorwf	0+(??i1_setData+1)+0,w
 12268  0B93  0671               	movwf	(12)	;volatile
 12269  0B94  008C               	line	146
 12270                           ;LCD_hd44780u_qy_2004a.c: 146:   PORTAbits.RA1 = (iValue & 0x4) >> 2;
 12271                           	movf	(i1setData@iValue),w
 12272  0B95  0872               	movwf	(??i1_setData+0)+0
 12273  0B96  00F0               	movlw	02h
 12274  0B97  3002               u364_25:
 12275  0B98                     	lsrf	(??i1_setData+0)+0,f
 12276  0B98  36F0               	decfsz	wreg,f
 12277  0B99  0B89               	goto	u364_25
 12278  0B9A  2B98               	movf	0+(??i1_setData+0)+0,w
 12279  0B9B  0870               	andlw	01h
 12280  0B9C  3901               	movwf	(??i1_setData+1)+0
 12281  0B9D  00F1               	rlf	(??i1_setData+1)+0,f
 12282  0B9E  0DF1               	movf	(12),w	;volatile
 12283  0B9F  080C               	xorwf	(??i1_setData+1)+0,w
 12284  0BA0  0671               	andlw	not (((1<<1)-1)<<1)
 12285  0BA1  39FD               	xorwf	(??i1_setData+1)+0,w
 12286  0BA2  0671               	movwf	(12)	;volatile
 12287  0BA3  008C               	line	147
 12288                           ;LCD_hd44780u_qy_2004a.c: 147:   PORTAbits.RA2 = (iValue & 0x2) >> 1;
 12289                           	lsrf	(i1setData@iValue),w
 12290  0BA4  3672               	andlw	01h
 12291  0BA5  3901               	movwf	(??i1_setData+0)+0
 12292  0BA6  00F0               	rlf	(??i1_setData+0)+0,f
 12293  0BA7  0DF0               	rlf	(??i1_setData+0)+0,f
 12294  0BA8  0DF0               	movf	(12),w	;volatile
 12295  0BA9  080C               	xorwf	(??i1_setData+0)+0,w
 12296  0BAA  0670               	andlw	not (((1<<1)-1)<<2)
 12297  0BAB  39FB               	xorwf	(??i1_setData+0)+0,w
 12298  0BAC  0670               	movwf	(12)	;volatile
 12299  0BAD  008C               	line	148
 12300                           ;LCD_hd44780u_qy_2004a.c: 148:   PORTAbits.RA3 = (iValue & 0x1) ;
 12301                           	movf	(i1setData@iValue),w
 12302  0BAE  0872               	andlw	01h
 12303  0BAF  3901               	movwf	(??i1_setData+0)+0
 12304  0BB0  00F0               	rlf	(??i1_setData+0)+0,f
 12305  0BB1  0DF0               	rlf	(??i1_setData+0)+0,f
 12306  0BB2  0DF0               	rlf	(??i1_setData+0)+0,f
 12307  0BB3  0DF0               	movf	(12),w	;volatile
 12308  0BB4  080C               	xorwf	(??i1_setData+0)+0,w
 12309  0BB5  0670               	andlw	not (((1<<1)-1)<<3)
 12310  0BB6  39F7               	xorwf	(??i1_setData+0)+0,w
 12311  0BB7  0670               	movwf	(12)	;volatile
 12312  0BB8  008C               	line	149
 12313                           	
 12314                           i1l5406:	
 12315  0BB9                     ;LCD_hd44780u_qy_2004a.c: 149:   _delay((unsigned long)((1)*(16000000/4000000.0)));
 12316                           		opt asmopt_push
 12317                           	opt asmopt_off
 12318                           	nop2	;2 cycle nop
 12319  0BB9  3200               	nop2	;2 cycle nop
 12320  0BBA  3200               	opt asmopt_pop
 12321                           
 12322                           	line	150
 12323                           	
 12324                           i1l5408:	
 12325  0BBB                     ;LCD_hd44780u_qy_2004a.c: 150:   PORTCbits.RC0 = 0;
 12326                           	movlb 0	; select bank0
 12327  0BBB  0020               	bcf	(14),0	;volatile
 12328  0BBC  100E               	line	151
 12329                           	
 12330                           i1l5410:	
 12331  0BBD                     ;LCD_hd44780u_qy_2004a.c: 151:   _delay((unsigned long)((1)*(16000000/4000000.0)));
 12332                           		opt asmopt_push
 12333                           	opt asmopt_off
 12334                           	nop2	;2 cycle nop
 12335  0BBD  3200               	nop2	;2 cycle nop
 12336  0BBE  3200               	opt asmopt_pop
 12337                           
 12338                           	line	152
 12339                           	
 12340                           i1l308:	
 12341  0BBF                     	return
 12342  0BBF  0008               	opt stack 0
 12343                           GLOBAL	__end_ofi1_setData
 12344                           	__end_ofi1_setData:
 12345  0BC0                     	signat	i1_setData,89
 12346                           	global	i1_SetToSendDataToLCD
 12347                           
 12348 ;; *************** function i1_SetToSendDataToLCD *****************
 12349 ;; Defined at:
 12350 ;;		line 233 in file "LCD_hd44780u_qy_2004a.c"
 12351 ;; Parameters:    Size  Location     Type
 12352 ;;		None
 12353 ;; Auto vars:     Size  Location     Type
 12354 ;;		None
 12355 ;; Return value:  Size  Location     Type
 12356 ;;                  1    wreg      void 
 12357 ;; Registers used:
 12358 ;;		None
 12359 ;; Tracked objects:
 12360 ;;		On entry : 0/0
 12361 ;;		On exit  : 0/0
 12362 ;;		Unchanged: 0/0
 12363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12368 ;;Total ram usage:        0 bytes
 12369 ;; Hardware stack levels used:    1
 12370 ;; This function calls:
 12371 ;;		Nothing
 12372 ;; This function is called by:
 12373 ;;		i1_writeTxtChk
 12374 ;;		i1_setCursorPosition
 12375 ;; This function uses a non-reentrant model
 12376 ;;
 12377                           psect	text42,local,class=CODE,delta=2,merge=1,group=0
 12378                           	line	233
 12379                           global __ptext42
 12380                           __ptext42:	;psect for function i1_SetToSendDataToLCD
 12381  090C                     psect	text42
 12382                           	file	"LCD_hd44780u_qy_2004a.c"
 12383                           	line	233
 12384                           	global	__size_ofi1_SetToSendDataToLCD
 12385                           	__size_ofi1_SetToSendDataToLCD	equ	__end_ofi1_SetToSendDataToLCD-i1_SetToSendDataToLCD

 12386  0006                     	
 12387                           i1_SetToSendDataToLCD:	
 12388  090C                     ;incstack = 0
 12389                           	opt	stack 5
 12390                           ; Regs used in i1_SetToSendDataToLCD: []
 12391                           	line	235
 12392                           	
 12393                           i1l5412:	
 12394  090C                     ;LCD_hd44780u_qy_2004a.c: 235:   TRISAbits.TRISA0 = 0;;
 12395                           	movlb 1	; select bank1
 12396  090C  0021               	bcf	(140)^080h,0	;volatile
 12397  090D  100C               	line	236
 12398                           ;LCD_hd44780u_qy_2004a.c: 236:   TRISAbits.TRISA1 = 0;;
 12399                           	bcf	(140)^080h,1	;volatile
 12400  090E  108C               	line	237
 12401                           ;LCD_hd44780u_qy_2004a.c: 237:   TRISAbits.TRISA2 = 0;;
 12402                           	bcf	(140)^080h,2	;volatile
 12403  090F  110C               	line	238
 12404                           ;LCD_hd44780u_qy_2004a.c: 238:   TRISAbits.TRISA3 = 0;;
 12405                           	bcf	(140)^080h,3	;volatile
 12406  0910  118C               	line	239
 12407                           	
 12408                           i1l338:	
 12409  0911                     	return
 12410  0911  0008               	opt stack 0
 12411                           GLOBAL	__end_ofi1_SetToSendDataToLCD
 12412                           	__end_ofi1_SetToSendDataToLCD:
 12413  0912                     	signat	i1_SetToSendDataToLCD,89
 12414                           	global	_TempUpdateRequest
 12415                           
 12416 ;; *************** function _TempUpdateRequest *****************
 12417 ;; Defined at:
 12418 ;;		line 80 in file "EM1812.c"
 12419 ;; Parameters:    Size  Location     Type
 12420 ;;		None
 12421 ;; Auto vars:     Size  Location     Type
 12422 ;;		None
 12423 ;; Return value:  Size  Location     Type
 12424 ;;                  2   76[None  ] int 
 12425 ;; Registers used:
 12426 ;;		wreg, status,2, status,0
 12427 ;; Tracked objects:
 12428 ;;		On entry : 0/0
 12429 ;;		On exit  : 0/0
 12430 ;;		Unchanged: 0/0
 12431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12436 ;;Total ram usage:        0 bytes
 12437 ;; Hardware stack levels used:    1
 12438 ;; This function calls:
 12439 ;;		Nothing
 12440 ;; This function is called by:
 12441 ;;		_myint
 12442 ;; This function uses a non-reentrant model
 12443 ;;
 12444                           psect	text43,local,class=CODE,delta=2,merge=1,group=0
 12445                           	file	"EM1812.c"
 12446                           	line	80
 12447                           global __ptext43
 12448                           __ptext43:	;psect for function _TempUpdateRequest
 12449  099F                     psect	text43
 12450                           	file	"EM1812.c"
 12451                           	line	80
 12452                           	global	__size_of_TempUpdateRequest
 12453                           	__size_of_TempUpdateRequest	equ	__end_of_TempUpdateRequest-_TempUpdateRequest
 12454  000D                     	
 12455                           _TempUpdateRequest:	
 12456  099F                     ;incstack = 0
 12457                           	opt	stack 8
 12458                           ; Regs used in _TempUpdateRequest: [wreg+status,2+status,0]
 12459                           	line	82
 12460                           	
 12461                           i1l4212:	
 12462  099F                     ;EM1812.c: 82:     if(wTempState == eIdle)
 12463                           		movlw	5
 12464  099F  3005               	movlb 0	; select bank0
 12465  09A0  0020               	xorwf	((_wTempState)),w
 12466  09A1  065A               	btfss	status,2
 12467  09A2  1D03               	goto	u283_21
 12468  09A3  29A5               	goto	u283_20
 12469  09A4  29A6               u283_21:
 12470  09A5                     	goto	i1l467
 12471  09A5  29AB               u283_20:
 12472  09A6                     	line	84
 12473                           	
 12474                           i1l4214:	
 12475  09A6                     ;EM1812.c: 83:     {;EM1812.c: 84:         wTempState = eSetGetTemp;
 12476                           	clrf	(_wTempState)
 12477  09A6  01DA               	goto	i1l467
 12478  09A7  29AB               	line	85
 12479                           	
 12480                           i1l4216:	
 12481  09A8                     ;EM1812.c: 85:         return 1;;	Return value of _TempUpdateRequest is never used
 12482                           	goto	i1l467
 12483  09A8  29AB               	line	86
 12484                           	
 12485                           i1l4218:	
 12486  09A9                     ;EM1812.c: 86:     }
 12487                           	goto	i1l467
 12488  09A9  29AB               	line	87
 12489                           ;EM1812.c: 87:     else
 12490                           	
 12491                           i1l466:	
 12492  09AA                     	line	89
 12493                           ;EM1812.c: 88:     {;EM1812.c: 89:         return 0;;	Return value of _TempUpdateRequest
                                  is never used
 12494                           	goto	i1l467
 12495  09AA  29AB               	line	90
 12496                           ;EM1812.c: 90:     }
 12497                           	
 12498                           i1l468:	
 12499  09AB                     	line	92
 12500                           	
 12501                           i1l467:	
 12502  09AB                     	return
 12503  09AB  0008               	opt stack 0
 12504                           GLOBAL	__end_of_TempUpdateRequest
 12505                           	__end_of_TempUpdateRequest:
 12506  09AC                     	signat	_TempUpdateRequest,90
 12507                           	global	_I2C_Interrupt
 12508                           
 12509 ;; *************** function _I2C_Interrupt *****************
 12510 ;; Defined at:
 12511 ;;		line 95 in file "I2C.c"
 12512 ;; Parameters:    Size  Location     Type
 12513 ;;		None
 12514 ;; Auto vars:     Size  Location     Type
 12515 ;;  oErrorCode      1    4[COMMON] unsigned char 
 12516 ;; Return value:  Size  Location     Type
 12517 ;;                  2    0[COMMON] int 
 12518 ;; Registers used:
 12519 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12520 ;; Tracked objects:
 12521 ;;		On entry : 0/0
 12522 ;;		On exit  : 0/0
 12523 ;;		Unchanged: 0/0
 12524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12527 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12528 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12529 ;;Total ram usage:        5 bytes
 12530 ;; Hardware stack levels used:    1
 12531 ;; This function calls:
 12532 ;;		Nothing
 12533 ;; This function is called by:
 12534 ;;		_myint
 12535 ;; This function uses a non-reentrant model
 12536 ;;
 12537                           psect	text44,local,class=CODE,delta=2,merge=1,group=0
 12538                           	file	"I2C.c"
 12539                           	line	95
 12540                           global __ptext44
 12541                           __ptext44:	;psect for function _I2C_Interrupt
 12542  0512                     psect	text44
 12543                           	file	"I2C.c"
 12544                           	line	95
 12545                           	global	__size_of_I2C_Interrupt
 12546                           	__size_of_I2C_Interrupt	equ	__end_of_I2C_Interrupt-_I2C_Interrupt
 12547  0126                     	
 12548                           _I2C_Interrupt:	
 12549  0512                     ;incstack = 0
 12550                           	opt	stack 8
 12551                           ; Regs used in _I2C_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 12552                           	line	97
 12553                           	
 12554                           i1l4078:	
 12555  0512                     ;I2C.c: 97:     uint8_t oErrorCode=0;
 12556                           	clrf	(I2C_Interrupt@oErrorCode)
 12557  0512  01F4               	line	99
 12558                           	
 12559                           i1l4080:	
 12560  0513                     ;I2C.c: 99:     if(PIR1bits.SSPIF == 1)
 12561                           	movlb 0	; select bank0
 12562  0513  0020               	btfss	(17),3	;volatile
 12563  0514  1D91               	goto	u254_21
 12564  0515  2D17               	goto	u254_20
 12565  0516  2D18               u254_21:
 12566  0517                     	goto	i1l4168
 12567  0517  2E25               u254_20:
 12568  0518                     	line	101
 12569                           	
 12570                           i1l4082:	
 12571  0518                     ;I2C.c: 100:     {;I2C.c: 101:         PIR1bits.SSPIF = 0;
 12572                           	bcf	(17),3	;volatile
 12573  0518  1191               	line	102
 12574                           	
 12575                           i1l4084:	
 12576  0519                     ;I2C.c: 102:         if( wI2CTxNbOfByteToSend != 0)
 12577                           	movf	((_wI2CTxNbOfByteToSend)),w
 12578  0519  0855               	btfsc	status,2
 12579  051A  1903               	goto	u255_21
 12580  051B  2D1D               	goto	u255_20
 12581  051C  2D1E               u255_21:
 12582  051D                     	goto	i1l4168
 12583  051D  2E25               u255_20:
 12584  051E                     	line	104
 12585                           	
 12586                           i1l4086:	
 12587  051E                     ;I2C.c: 103:         {;I2C.c: 104:             if((wI2CTxBuffer[0] & 0x01) == 1)
 12588                           	movlb 2	; select bank2
 12589  051E  0022               	btfss	(_wI2CTxBuffer)^0100h,(0)&7
 12590  051F  1C48               	goto	u256_21
 12591  0520  2D22               	goto	u256_20
 12592  0521  2D23               u256_21:
 12593  0522                     	goto	i1l593
 12594  0522  2DAA               u256_20:
 12595  0523                     	line	106
 12596                           	
 12597                           i1l4088:	
 12598  0523                     ;I2C.c: 105:             {;I2C.c: 106:                 if(SSPSTATbits.P)
 12599                           	movlb 4	; select bank4
 12600  0523  0024               	btfss	(532)^0200h,4	;volatile
 12601  0524  1E14               	goto	u257_21
 12602  0525  2D27               	goto	u257_20
 12603  0526  2D28               u257_21:
 12604  0527                     	goto	i1l594
 12605  0527  2D2E               u257_20:
 12606  0528                     	line	108
 12607                           	
 12608                           i1l4090:	
 12609  0528                     ;I2C.c: 107:                 {;I2C.c: 108:                   PIE1bits.SSPIE = 0;
 12610                           	movlb 1	; select bank1
 12611  0528  0021               	bcf	(145)^080h,3	;volatile
 12612  0529  1191               	line	109
 12613                           	
 12614                           i1l4092:	
 12615  052A                     ;I2C.c: 109:                   wI2CTxNbOfByteToSend=0;
 12616                           	movlb 0	; select bank0
 12617  052A  0020               	clrf	(_wI2CTxNbOfByteToSend)
 12618  052B  01D5               	line	110
 12619                           ;I2C.c: 110:                   wI2CTxSendPos=0;
 12620                           	clrf	(_wI2CTxSendPos)
 12621  052C  01D2               	line	111
 12622                           ;I2C.c: 111:                 }
 12623                           	goto	i1l4168
 12624  052D  2E25               	line	112
 12625                           ;I2C.c: 112:                 else if(SSPSTATbits.S && wI2CTxSendPos == 0)
 12626                           	
 12627                           i1l594:	
 12628  052E                     	btfss	(532)^0200h,3	;volatile
 12629  052E  1D94               	goto	u258_21
 12630  052F  2D31               	goto	u258_20
 12631  0530  2D32               u258_21:
 12632  0531                     	goto	i1l596
 12633  0531  2D48               u258_20:
 12634  0532                     	
 12635                           i1l4094:	
 12636  0532                     	movlb 0	; select bank0
 12637  0532  0020               	movf	((_wI2CTxSendPos)),w
 12638  0533  0852               	btfss	status,2
 12639  0534  1D03               	goto	u259_21
 12640  0535  2D37               	goto	u259_20
 12641  0536  2D38               u259_21:
 12642  0537                     	goto	i1l596
 12643  0537  2D48               u259_20:
 12644  0538                     	line	114
 12645                           	
 12646                           i1l4096:	
 12647  0538                     ;I2C.c: 113:                 {;I2C.c: 114:                     SSPBUF = wI2CTxBuffer[wI2
                                 CTxSendPos];
 12648                           	movf	(_wI2CTxSendPos),w
 12649  0538  0852               	addlw	low(_wI2CTxBuffer|((0x1)<<8))&0ffh
 12650  0539  3E48               	movwf	fsr1l
 12651  053A  0086               	movlw 1	; select bank2/3
 12652  053B  3001               	movwf fsr1h	
 12653  053C  0087               	
 12654                           	movf	indf1,w
 12655  053D  0801               	movlb 4	; select bank4
 12656  053E  0024               	movwf	(529)^0200h	;volatile
 12657  053F  0091               	line	115
 12658                           	
 12659                           i1l4098:	
 12660  0540                     ;I2C.c: 115:                     wI2CCommandState = ProcessingCommand;
 12661                           	movlb 0	; select bank0
 12662  0540  0020               	clrf	(_wI2CCommandState)
 12663  0541  01E3               	incf	(_wI2CCommandState),f
 12664  0542  0AE3               	line	116
 12665                           	
 12666                           i1l4100:	
 12667  0543                     ;I2C.c: 116:                     wI2CTxSendPos++;
 12668                           	movlw	low(01h)
 12669  0543  3001               	movwf	(??_I2C_Interrupt+0)+0
 12670  0544  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 12671  0545  0872               	addwf	(_wI2CTxSendPos),f
 12672  0546  07D2               	line	117
 12673                           ;I2C.c: 117:                 }
 12674                           	goto	i1l4168
 12675  0547  2E25               	line	118
 12676                           ;I2C.c: 118:                 else if(SSPSTATbits.BF == 1)
 12677                           	
 12678                           i1l596:	
 12679  0548                     	movlb 4	; select bank4
 12680  0548  0024               	btfss	(532)^0200h,0	;volatile
 12681  0549  1C14               	goto	u260_21
 12682  054A  2D4C               	goto	u260_20
 12683  054B  2D4D               u260_21:
 12684  054C                     	goto	i1l598
 12685  054C  2D74               u260_20:
 12686  054D                     	line	120
 12687                           	
 12688                           i1l4102:	
 12689  054D                     ;I2C.c: 119:                 {;I2C.c: 120:                     wI2CRxBuffer[wReceptionBu
                                 fferPosition] = SSPBUF;
 12690                           	movf	(529)^0200h,w	;volatile
 12691  054D  0811               	movwf	(??_I2C_Interrupt+0)+0
 12692  054E  00F2               	movlb 0	; select bank0
 12693  054F  0020               	movf	(_wReceptionBufferPosition),w
 12694  0550  0858               	addlw	low(_wI2CRxBuffer|((0x1)<<8))&0ffh
 12695  0551  3E34               	movwf	fsr1l
 12696  0552  0086               	movlw 1	; select bank2/3
 12697  0553  3001               	movwf fsr1h	
 12698  0554  0087               	
 12699                           	movf	(??_I2C_Interrupt+0)+0,w
 12700  0555  0872               	movwf	indf1
 12701  0556  0081               	line	121
 12702                           	
 12703                           i1l4104:	
 12704  0557                     ;I2C.c: 121:                     wReceptionBufferPosition++;
 12705                           	movlw	low(01h)
 12706  0557  3001               	movwf	(??_I2C_Interrupt+0)+0
 12707  0558  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 12708  0559  0872               	addwf	(_wReceptionBufferPosition),f
 12709  055A  07D8               	line	123
 12710                           	
 12711                           i1l4106:	
 12712  055B                     ;I2C.c: 123:                     SSPSTATbits.BF = 0 ;
 12713                           	movlb 4	; select bank4
 12714  055B  0024               	bcf	(532)^0200h,0	;volatile
 12715  055C  1014               	line	124
 12716                           	
 12717                           i1l4108:	
 12718  055D                     ;I2C.c: 124:                     if( wReceptionBufferPosition < wI2CRxNbOfByteToReceived
                                 )
 12719                           	movlb 0	; select bank0
 12720  055D  0020               	movf	(_wI2CRxNbOfByteToReceived),w
 12721  055E  0854               	subwf	(_wReceptionBufferPosition),w
 12722  055F  0258               	skipnc
 12723  0560  1803               	goto	u261_21
 12724  0561  2D63               	goto	u261_20
 12725  0562  2D64               u261_21:
 12726  0563                     	goto	i1l599
 12727  0563  2D67               u261_20:
 12728  0564                     	line	126
 12729                           	
 12730                           i1l4110:	
 12731  0564                     ;I2C.c: 125:                     {;I2C.c: 126:                         SSPCON2bits.ACKDT
                                  = 0;
 12732                           	movlb 4	; select bank4
 12733  0564  0024               	bcf	(534)^0200h,5	;volatile
 12734  0565  1296               	line	127
 12735                           ;I2C.c: 127:                     }
 12736                           	goto	i1l4116
 12737  0566  2D71               	line	128
 12738                           ;I2C.c: 128:                     else
 12739                           	
 12740                           i1l599:	
 12741  0567                     	line	130
 12742                           ;I2C.c: 129:                     {;I2C.c: 130:                         SSPCON2bits.ACKDT
                                  = 1;
 12743                           	movlb 4	; select bank4
 12744  0567  0024               	bsf	(534)^0200h,5	;volatile
 12745  0568  1696               	line	131
 12746                           	
 12747                           i1l4112:	
 12748  0569                     ;I2C.c: 131:                         wI2CCommandState = CommandCompleted;
 12749                           	movlw	low(03h)
 12750  0569  3003               	movwf	(??_I2C_Interrupt+0)+0
 12751  056A  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 12752  056B  0872               	movlb 0	; select bank0
 12753  056C  0020               	movwf	(_wI2CCommandState)
 12754  056D  00E3               	line	132
 12755                           	
 12756                           i1l4114:	
 12757  056E                     ;I2C.c: 132:                         wNewI2CReception = 1;
 12758                           	clrf	(_wNewI2CReception)
 12759  056E  01D3               	incf	(_wNewI2CReception),f
 12760  056F  0AD3               	goto	i1l4116
 12761  0570  2D71               	line	133
 12762                           ;I2C.c: 133:                     }
 12763                           	
 12764                           i1l600:	
 12765  0571                     	line	134
 12766                           	
 12767                           i1l4116:	
 12768  0571                     ;I2C.c: 134:                     SSPCON2bits.ACKEN = 1;
 12769                           	movlb 4	; select bank4
 12770  0571  0024               	bsf	(534)^0200h,4	;volatile
 12771  0572  1616               	line	135
 12772                           ;I2C.c: 135:                 }
 12773                           	goto	i1l4168
 12774  0573  2E25               	line	136
 12775                           ;I2C.c: 136:                 else
 12776                           	
 12777                           i1l598:	
 12778  0574                     	line	138
 12779                           ;I2C.c: 137:                 {;I2C.c: 138:                     if(SSPCON2bits.ACKSTAT ==
                                  0 && wI2CTxSendPos != 0)
 12780                           	btfsc	(534)^0200h,6	;volatile
 12781  0574  1B16               	goto	u262_21
 12782  0575  2D77               	goto	u262_20
 12783  0576  2D78               u262_21:
 12784  0577                     	goto	i1l602
 12785  0577  2D8B               u262_20:
 12786  0578                     	
 12787                           i1l4118:	
 12788  0578                     	movlb 0	; select bank0
 12789  0578  0020               	movf	((_wI2CTxSendPos)),w
 12790  0579  0852               	btfsc	status,2
 12791  057A  1903               	goto	u263_21
 12792  057B  2D7D               	goto	u263_20
 12793  057C  2D7E               u263_21:
 12794  057D                     	goto	i1l602
 12795  057D  2D8B               u263_20:
 12796  057E                     	line	140
 12797                           	
 12798                           i1l4120:	
 12799  057E                     ;I2C.c: 139:                     {;I2C.c: 140:                         if( wReceptionBuf
                                 ferPosition < wI2CRxNbOfByteToReceived)
 12800                           	movf	(_wI2CRxNbOfByteToReceived),w
 12801  057E  0854               	subwf	(_wReceptionBufferPosition),w
 12802  057F  0258               	skipnc
 12803  0580  1803               	goto	u264_21
 12804  0581  2D83               	goto	u264_20
 12805  0582  2D84               u264_21:
 12806  0583                     	goto	i1l603
 12807  0583  2D87               u264_20:
 12808  0584                     	line	143
 12809                           	
 12810                           i1l4122:	
 12811  0584                     ;I2C.c: 141:                         {;I2C.c: 143:                           SSPCON2bits
                                 .RCEN = 1;
 12812                           	movlb 4	; select bank4
 12813  0584  0024               	bsf	(534)^0200h,3	;volatile
 12814  0585  1596               	line	144
 12815                           ;I2C.c: 144:                         }
 12816                           	goto	i1l4168
 12817  0586  2E25               	line	145
 12818                           ;I2C.c: 145:                         else
 12819                           	
 12820                           i1l603:	
 12821  0587                     	line	147
 12822                           ;I2C.c: 146:                         {;I2C.c: 147:                           SSPCON2bits
                                 .PEN = 1;
 12823                           	movlb 4	; select bank4
 12824  0587  0024               	bsf	(534)^0200h,2	;volatile
 12825  0588  1516               	goto	i1l4168
 12826  0589  2E25               	line	148
 12827                           ;I2C.c: 148:                         }
 12828                           	
 12829                           i1l604:	
 12830  058A                     	line	149
 12831                           ;I2C.c: 149:                     }
 12832                           	goto	i1l4168
 12833  058A  2E25               	line	150
 12834                           ;I2C.c: 150:                     else if(SSPCON2bits.ACKSTAT == 1)
 12835                           	
 12836                           i1l602:	
 12837  058B                     	movlb 4	; select bank4
 12838  058B  0024               	btfss	(534)^0200h,6	;volatile
 12839  058C  1F16               	goto	u265_21
 12840  058D  2D8F               	goto	u265_20
 12841  058E  2D90               u265_21:
 12842  058F                     	goto	i1l606
 12843  058F  2DA2               u265_20:
 12844  0590                     	line	152
 12845                           	
 12846                           i1l4124:	
 12847  0590                     ;I2C.c: 151:                     {;I2C.c: 152:                         SSPCON2bits.ACKST
                                 AT = 0;
 12848                           	bcf	(534)^0200h,6	;volatile
 12849  0590  1316               	line	153
 12850                           	
 12851                           i1l4126:	
 12852  0591                     ;I2C.c: 153:                         wI2CCommandState = CommandFailed;
 12853                           	movlw	low(05h)
 12854  0591  3005               	movwf	(??_I2C_Interrupt+0)+0
 12855  0592  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 12856  0593  0872               	movlb 0	; select bank0
 12857  0594  0020               	movwf	(_wI2CCommandState)
 12858  0595  00E3               	line	154
 12859                           	
 12860                           i1l4128:	
 12861  0596                     ;I2C.c: 154:                         if(wI2CTxSendPos != 0)
 12862                           	movf	((_wI2CTxSendPos)),w
 12863  0596  0852               	btfsc	status,2
 12864  0597  1903               	goto	u266_21
 12865  0598  2D9A               	goto	u266_20
 12866  0599  2D9B               u266_21:
 12867  059A                     	goto	i1l607
 12868  059A  2D9E               u266_20:
 12869  059B                     	line	156
 12870                           	
 12871                           i1l4130:	
 12872  059B                     ;I2C.c: 155:                         {;I2C.c: 156:                           SSPCON2bits
                                 .PEN = 1;
 12873                           	movlb 4	; select bank4
 12874  059B  0024               	bsf	(534)^0200h,2	;volatile
 12875  059C  1516               	line	157
 12876                           ;I2C.c: 157:                         }
 12877                           	goto	i1l4168
 12878  059D  2E25               	line	158
 12879                           ;I2C.c: 158:                         else
 12880                           	
 12881                           i1l607:	
 12882  059E                     	line	160
 12883                           ;I2C.c: 159:                         {;I2C.c: 160:                           SSPCON2bits
                                 .PEN = 1;
 12884                           	movlb 4	; select bank4
 12885  059E  0024               	bsf	(534)^0200h,2	;volatile
 12886  059F  1516               	goto	i1l4168
 12887  05A0  2E25               	line	161
 12888                           ;I2C.c: 161:                         }
 12889                           	
 12890                           i1l608:	
 12891  05A1                     	line	162
 12892                           ;I2C.c: 162:                     }
 12893                           	goto	i1l4168
 12894  05A1  2E25               	line	163
 12895                           ;I2C.c: 163:                     else
 12896                           	
 12897                           i1l606:	
 12898  05A2                     	line	165
 12899                           ;I2C.c: 164:                     {;I2C.c: 165:                         oErrorCode = 1;
 12900                           	clrf	(I2C_Interrupt@oErrorCode)
 12901  05A2  01F4               	incf	(I2C_Interrupt@oErrorCode),f
 12902  05A3  0AF4               	goto	i1l4168
 12903  05A4  2E25               	line	166
 12904                           ;I2C.c: 166:                     }
 12905                           	
 12906                           i1l609:	
 12907  05A5                     	goto	i1l4168
 12908  05A5  2E25               	
 12909                           i1l605:	
 12910  05A6                     	goto	i1l4168
 12911  05A6  2E25               	line	167
 12912                           ;I2C.c: 167:                 }
 12913                           	
 12914                           i1l601:	
 12915  05A7                     	goto	i1l4168
 12916  05A7  2E25               	
 12917                           i1l597:	
 12918  05A8                     	goto	i1l4168
 12919  05A8  2E25               	
 12920                           i1l595:	
 12921  05A9                     	line	169
 12922                           ;I2C.c: 169:             }
 12923                           	goto	i1l4168
 12924  05A9  2E25               	line	170
 12925                           ;I2C.c: 170:             else
 12926                           	
 12927                           i1l593:	
 12928  05AA                     	line	172
 12929                           ;I2C.c: 171:             {;I2C.c: 172:                 if(SSPSTATbits.P)
 12930                           	movlb 4	; select bank4
 12931  05AA  0024               	btfss	(532)^0200h,4	;volatile
 12932  05AB  1E14               	goto	u267_21
 12933  05AC  2DAE               	goto	u267_20
 12934  05AD  2DAF               u267_21:
 12935  05AE                     	goto	i1l611
 12936  05AE  2DCB               u267_20:
 12937  05AF                     	line	174
 12938                           	
 12939                           i1l4132:	
 12940  05AF                     ;I2C.c: 173:                 {;I2C.c: 174:                   PIE1bits.SSPIE = 0;
 12941                           	movlb 1	; select bank1
 12942  05AF  0021               	bcf	(145)^080h,3	;volatile
 12943  05B0  1191               	line	175
 12944                           	
 12945                           i1l4134:	
 12946  05B1                     ;I2C.c: 175:                   wI2CTxNbOfByteToSend=0;
 12947                           	movlb 0	; select bank0
 12948  05B1  0020               	clrf	(_wI2CTxNbOfByteToSend)
 12949  05B2  01D5               	line	176
 12950                           ;I2C.c: 176:                   wI2CTxSendPos = 0;
 12951                           	clrf	(_wI2CTxSendPos)
 12952  05B3  01D2               	line	177
 12953                           	
 12954                           i1l4136:	
 12955  05B4                     ;I2C.c: 177:                   if(wI2CCommandState == CommandWillComplet)
 12956                           		movlw	2
 12957  05B4  3002               	xorwf	((_wI2CCommandState)),w
 12958  05B5  0663               	btfss	status,2
 12959  05B6  1D03               	goto	u268_21
 12960  05B7  2DB9               	goto	u268_20
 12961  05B8  2DBA               u268_21:
 12962  05B9                     	goto	i1l4140
 12963  05B9  2DBF               u268_20:
 12964  05BA                     	line	179
 12965                           	
 12966                           i1l4138:	
 12967  05BA                     ;I2C.c: 178:                   {;I2C.c: 179:                       wI2CCommandState = Co
                                 mmandCompleted;
 12968                           	movlw	low(03h)
 12969  05BA  3003               	movwf	(??_I2C_Interrupt+0)+0
 12970  05BB  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 12971  05BC  0872               	movwf	(_wI2CCommandState)
 12972  05BD  00E3               	goto	i1l4140
 12973  05BE  2DBF               	line	180
 12974                           ;I2C.c: 180:                   }
 12975                           	
 12976                           i1l612:	
 12977  05BF                     	line	181
 12978                           	
 12979                           i1l4140:	
 12980  05BF                     ;I2C.c: 181:                   if(wI2CCommandState == CommandWillFail)
 12981                           		movlw	4
 12982  05BF  3004               	xorwf	((_wI2CCommandState)),w
 12983  05C0  0663               	btfss	status,2
 12984  05C1  1D03               	goto	u269_21
 12985  05C2  2DC4               	goto	u269_20
 12986  05C3  2DC5               u269_21:
 12987  05C4                     	goto	i1l4168
 12988  05C4  2E25               u269_20:
 12989  05C5                     	line	183
 12990                           	
 12991                           i1l4142:	
 12992  05C5                     ;I2C.c: 182:                   {;I2C.c: 183:                       wI2CCommandState = Co
                                 mmandFailed;
 12993                           	movlw	low(05h)
 12994  05C5  3005               	movwf	(??_I2C_Interrupt+0)+0
 12995  05C6  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 12996  05C7  0872               	movwf	(_wI2CCommandState)
 12997  05C8  00E3               	goto	i1l4168
 12998  05C9  2E25               	line	184
 12999                           ;I2C.c: 184:                   }
 13000                           	
 13001                           i1l613:	
 13002  05CA                     	line	185
 13003                           ;I2C.c: 185:                 }
 13004                           	goto	i1l4168
 13005  05CA  2E25               	line	186
 13006                           ;I2C.c: 186:                 else if(SSPSTATbits.S && wI2CTxSendPos == 0)
 13007                           	
 13008                           i1l611:	
 13009  05CB                     	btfss	(532)^0200h,3	;volatile
 13010  05CB  1D94               	goto	u270_21
 13011  05CC  2DCE               	goto	u270_20
 13012  05CD  2DCF               u270_21:
 13013  05CE                     	goto	i1l615
 13014  05CE  2DE5               u270_20:
 13015  05CF                     	
 13016                           i1l4144:	
 13017  05CF                     	movlb 0	; select bank0
 13018  05CF  0020               	movf	((_wI2CTxSendPos)),w
 13019  05D0  0852               	btfss	status,2
 13020  05D1  1D03               	goto	u271_21
 13021  05D2  2DD4               	goto	u271_20
 13022  05D3  2DD5               u271_21:
 13023  05D4                     	goto	i1l615
 13024  05D4  2DE5               u271_20:
 13025  05D5                     	line	188
 13026                           	
 13027                           i1l4146:	
 13028  05D5                     ;I2C.c: 187:                 {;I2C.c: 188:                     wI2CCommandState = Proces
                                 singCommand;
 13029                           	clrf	(_wI2CCommandState)
 13030  05D5  01E3               	incf	(_wI2CCommandState),f
 13031  05D6  0AE3               	line	189
 13032                           	
 13033                           i1l4148:	
 13034  05D7                     ;I2C.c: 189:                     SSPBUF = wI2CTxBuffer[wI2CTxSendPos];
 13035                           	movf	(_wI2CTxSendPos),w
 13036  05D7  0852               	addlw	low(_wI2CTxBuffer|((0x1)<<8))&0ffh
 13037  05D8  3E48               	movwf	fsr1l
 13038  05D9  0086               	movlw 1	; select bank2/3
 13039  05DA  3001               	movwf fsr1h	
 13040  05DB  0087               	
 13041                           	movf	indf1,w
 13042  05DC  0801               	movlb 4	; select bank4
 13043  05DD  0024               	movwf	(529)^0200h	;volatile
 13044  05DE  0091               	line	190
 13045                           	
 13046                           i1l4150:	
 13047  05DF                     ;I2C.c: 190:                     wI2CTxSendPos++;
 13048                           	movlw	low(01h)
 13049  05DF  3001               	movwf	(??_I2C_Interrupt+0)+0
 13050  05E0  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 13051  05E1  0872               	movlb 0	; select bank0
 13052  05E2  0020               	addwf	(_wI2CTxSendPos),f
 13053  05E3  07D2               	line	191
 13054                           ;I2C.c: 191:                 }
 13055                           	goto	i1l4168
 13056  05E4  2E25               	line	192
 13057                           ;I2C.c: 192:                 else
 13058                           	
 13059                           i1l615:	
 13060  05E5                     	line	194
 13061                           ;I2C.c: 193:                 {;I2C.c: 194:                     if(SSPCON2bits.ACKSTAT ==
                                  0 && wI2CTxSendPos != 0)
 13062                           	movlb 4	; select bank4
 13063  05E5  0024               	btfsc	(534)^0200h,6	;volatile
 13064  05E6  1B16               	goto	u272_21
 13065  05E7  2DE9               	goto	u272_20
 13066  05E8  2DEA               u272_21:
 13067  05E9                     	goto	i1l617
 13068  05E9  2E0D               u272_20:
 13069  05EA                     	
 13070                           i1l4152:	
 13071  05EA                     	movlb 0	; select bank0
 13072  05EA  0020               	movf	((_wI2CTxSendPos)),w
 13073  05EB  0852               	btfsc	status,2
 13074  05EC  1903               	goto	u273_21
 13075  05ED  2DEF               	goto	u273_20
 13076  05EE  2DF0               u273_21:
 13077  05EF                     	goto	i1l617
 13078  05EF  2E0D               u273_20:
 13079  05F0                     	line	196
 13080                           	
 13081                           i1l4154:	
 13082  05F0                     ;I2C.c: 195:                     {;I2C.c: 196:                       if(wI2CTxSendPos < 
                                 wI2CTxNbOfByteToSend)
 13083                           	movf	(_wI2CTxNbOfByteToSend),w
 13084  05F0  0855               	subwf	(_wI2CTxSendPos),w
 13085  05F1  0252               	skipnc
 13086  05F2  1803               	goto	u274_21
 13087  05F3  2DF5               	goto	u274_20
 13088  05F4  2DF6               u274_21:
 13089  05F5                     	goto	i1l618
 13090  05F5  2E04               u274_20:
 13091  05F6                     	line	198
 13092                           	
 13093                           i1l4156:	
 13094  05F6                     ;I2C.c: 197:                       {;I2C.c: 198:                         SSPBUF = wI2CTx
                                 Buffer[wI2CTxSendPos];
 13095                           	movf	(_wI2CTxSendPos),w
 13096  05F6  0852               	addlw	low(_wI2CTxBuffer|((0x1)<<8))&0ffh
 13097  05F7  3E48               	movwf	fsr1l
 13098  05F8  0086               	movlw 1	; select bank2/3
 13099  05F9  3001               	movwf fsr1h	
 13100  05FA  0087               	
 13101                           	movf	indf1,w
 13102  05FB  0801               	movlb 4	; select bank4
 13103  05FC  0024               	movwf	(529)^0200h	;volatile
 13104  05FD  0091               	line	199
 13105                           	
 13106                           i1l4158:	
 13107  05FE                     ;I2C.c: 199:                         wI2CTxSendPos++;
 13108                           	movlw	low(01h)
 13109  05FE  3001               	movwf	(??_I2C_Interrupt+0)+0
 13110  05FF  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 13111  0600  0872               	movlb 0	; select bank0
 13112  0601  0020               	addwf	(_wI2CTxSendPos),f
 13113  0602  07D2               	line	200
 13114                           ;I2C.c: 200:                       }
 13115                           	goto	i1l4168
 13116  0603  2E25               	line	201
 13117                           ;I2C.c: 201:                       else
 13118                           	
 13119                           i1l618:	
 13120  0604                     	line	203
 13121                           ;I2C.c: 202:                       {;I2C.c: 203:                             SSPCON2bits
                                 .PEN = 1;
 13122                           	movlb 4	; select bank4
 13123  0604  0024               	bsf	(534)^0200h,2	;volatile
 13124  0605  1516               	line	204
 13125                           	
 13126                           i1l4160:	
 13127  0606                     ;I2C.c: 204:                             wI2CCommandState = CommandWillComplet;
 13128                           	movlw	low(02h)
 13129  0606  3002               	movwf	(??_I2C_Interrupt+0)+0
 13130  0607  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 13131  0608  0872               	movlb 0	; select bank0
 13132  0609  0020               	movwf	(_wI2CCommandState)
 13133  060A  00E3               	goto	i1l4168
 13134  060B  2E25               	line	205
 13135                           ;I2C.c: 205:                       }
 13136                           	
 13137                           i1l619:	
 13138  060C                     	line	206
 13139                           ;I2C.c: 206:                     }
 13140                           	goto	i1l4168
 13141  060C  2E25               	line	207
 13142                           ;I2C.c: 207:                     else if(SSPCON2bits.ACKSTAT == 1)
 13143                           	
 13144                           i1l617:	
 13145  060D                     	movlb 4	; select bank4
 13146  060D  0024               	btfss	(534)^0200h,6	;volatile
 13147  060E  1F16               	goto	u275_21
 13148  060F  2E11               	goto	u275_20
 13149  0610  2E12               u275_21:
 13150  0611                     	goto	i1l4166
 13151  0611  2E1A               u275_20:
 13152  0612                     	line	209
 13153                           	
 13154                           i1l4162:	
 13155  0612                     ;I2C.c: 208:                     {;I2C.c: 209:                         SSPCON2bits.ACKST
                                 AT = 0;
 13156                           	bcf	(534)^0200h,6	;volatile
 13157  0612  1316               	line	210
 13158                           ;I2C.c: 210:                         SSPCON2bits.PEN = 1;
 13159                           	bsf	(534)^0200h,2	;volatile
 13160  0613  1516               	line	211
 13161                           	
 13162                           i1l4164:	
 13163  0614                     ;I2C.c: 211:                         wI2CCommandState = CommandWillFail;
 13164                           	movlw	low(04h)
 13165  0614  3004               	movwf	(??_I2C_Interrupt+0)+0
 13166  0615  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 13167  0616  0872               	movlb 0	; select bank0
 13168  0617  0020               	movwf	(_wI2CCommandState)
 13169  0618  00E3               	line	212
 13170                           ;I2C.c: 212:                     }
 13171                           	goto	i1l4168
 13172  0619  2E25               	line	213
 13173                           ;I2C.c: 213:                     else
 13174                           	
 13175                           i1l621:	
 13176  061A                     	line	215
 13177                           	
 13178                           i1l4166:	
 13179  061A                     ;I2C.c: 214:                     {;I2C.c: 215:                        oErrorCode = 3;
 13180                           	movlw	low(03h)
 13181  061A  3003               	movwf	(??_I2C_Interrupt+0)+0
 13182  061B  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 13183  061C  0872               	movwf	(I2C_Interrupt@oErrorCode)
 13184  061D  00F4               	goto	i1l4168
 13185  061E  2E25               	line	216
 13186                           ;I2C.c: 216:                     }
 13187                           	
 13188                           i1l622:	
 13189  061F                     	goto	i1l4168
 13190  061F  2E25               	
 13191                           i1l620:	
 13192  0620                     	goto	i1l4168
 13193  0620  2E25               	line	217
 13194                           ;I2C.c: 217:                 }
 13195                           	
 13196                           i1l616:	
 13197  0621                     	goto	i1l4168
 13198  0621  2E25               	
 13199                           i1l614:	
 13200  0622                     	goto	i1l4168
 13201  0622  2E25               	line	218
 13202                           ;I2C.c: 218:             }
 13203                           	
 13204                           i1l610:	
 13205  0623                     	goto	i1l4168
 13206  0623  2E25               	line	219
 13207                           ;I2C.c: 219:         }
 13208                           	
 13209                           i1l592:	
 13210  0624                     	goto	i1l4168
 13211  0624  2E25               	line	220
 13212                           ;I2C.c: 220:     }
 13213                           	
 13214                           i1l591:	
 13215  0625                     	line	221
 13216                           	
 13217                           i1l4168:	
 13218  0625                     ;I2C.c: 221:     if(PIR2bits.BCLIF == 1)
 13219                           	movlb 0	; select bank0
 13220  0625  0020               	btfss	(18),3	;volatile
 13221  0626  1D92               	goto	u276_21
 13222  0627  2E29               	goto	u276_20
 13223  0628  2E2A               u276_21:
 13224  0629                     	goto	i1l623
 13225  0629  2E2F               u276_20:
 13226  062A                     	line	223
 13227                           	
 13228                           i1l4170:	
 13229  062A                     ;I2C.c: 222:     {;I2C.c: 223:         PIR2bits.BCLIF = 0;
 13230                           	bcf	(18),3	;volatile
 13231  062A  1192               	line	224
 13232                           	
 13233                           i1l4172:	
 13234  062B                     ;I2C.c: 224:         oErrorCode = 2;
 13235                           	movlw	low(02h)
 13236  062B  3002               	movwf	(??_I2C_Interrupt+0)+0
 13237  062C  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 13238  062D  0872               	movwf	(I2C_Interrupt@oErrorCode)
 13239  062E  00F4               	line	225
 13240                           ;I2C.c: 225:     }
 13241                           	
 13242                           i1l623:	
 13243  062F                     	line	227
 13244                           ;I2C.c: 227:     return oErrorCode;
 13245                           	movf	(I2C_Interrupt@oErrorCode),w
 13246  062F  0874               	movwf	(??_I2C_Interrupt+0)+0
 13247  0630  00F2               	clrf	(??_I2C_Interrupt+0)+0+1
 13248  0631  01F3               	movf	0+(??_I2C_Interrupt+0)+0,w
 13249  0632  0872               	movwf	(?_I2C_Interrupt)
 13250  0633  00F0               	movf	1+(??_I2C_Interrupt+0)+0,w
 13251  0634  0873               	movwf	(?_I2C_Interrupt+1)
 13252  0635  00F1               	goto	i1l624
 13253  0636  2E37               	
 13254                           i1l4174:	
 13255  0637                     	line	228
 13256                           	
 13257                           i1l624:	
 13258  0637                     	return
 13259  0637  0008               	opt stack 0
 13260                           GLOBAL	__end_of_I2C_Interrupt
 13261                           	__end_of_I2C_Interrupt:
 13262  0638                     	signat	_I2C_Interrupt,90
 13263                           	global	_EUSARTInterrupt
 13264                           
 13265 ;; *************** function _EUSARTInterrupt *****************
 13266 ;; Defined at:
 13267 ;;		line 48 in file "EUSART.c"
 13268 ;; Parameters:    Size  Location     Type
 13269 ;;		None
 13270 ;; Auto vars:     Size  Location     Type
 13271 ;;		None
 13272 ;; Return value:  Size  Location     Type
 13273 ;;                  2    0[COMMON] int 
 13274 ;; Registers used:
 13275 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13276 ;; Tracked objects:
 13277 ;;		On entry : 0/0
 13278 ;;		On exit  : 0/0
 13279 ;;		Unchanged: 0/0
 13280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13281 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13283 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13284 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13285 ;;Total ram usage:        4 bytes
 13286 ;; Hardware stack levels used:    1
 13287 ;; This function calls:
 13288 ;;		Nothing
 13289 ;; This function is called by:
 13290 ;;		_myint
 13291 ;; This function uses a non-reentrant model
 13292 ;;
 13293                           psect	text45,local,class=CODE,delta=2,merge=1,group=0
 13294                           	file	"EUSART.c"
 13295                           	line	48
 13296                           global __ptext45
 13297                           __ptext45:	;psect for function _EUSARTInterrupt
 13298  0D98                     psect	text45
 13299                           	file	"EUSART.c"
 13300                           	line	48
 13301                           	global	__size_of_EUSARTInterrupt
 13302                           	__size_of_EUSARTInterrupt	equ	__end_of_EUSARTInterrupt-_EUSARTInterrupt
 13303  0063                     	
 13304                           _EUSARTInterrupt:	
 13305  0D98                     ;incstack = 0
 13306                           	opt	stack 8
 13307                           ; Regs used in _EUSARTInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 13308                           	line	50
 13309                           	
 13310                           i1l4176:	
 13311  0D98                     ;EUSART.c: 50:     if( PIR1bits.TXIF == 1 )
 13312                           	movlb 0	; select bank0
 13313  0D98  0020               	btfss	(17),4	;volatile
 13314  0D99  1E11               	goto	u277_21
 13315  0D9A  2D9C               	goto	u277_20
 13316  0D9B  2D9D               u277_21:
 13317  0D9C                     	goto	i1l4188
 13318  0D9C  2DB7               u277_20:
 13319  0D9D                     	line	52
 13320                           	
 13321                           i1l4178:	
 13322  0D9D                     ;EUSART.c: 51:     {;EUSART.c: 52:       if(gTxReadingPosition < gTxTransmitSize)
 13323                           	movf	(_gTxTransmitSize),w
 13324  0D9D  084E               	subwf	(_gTxReadingPosition),w
 13325  0D9E  0250               	skipnc
 13326  0D9F  1803               	goto	u278_21
 13327  0DA0  2DA2               	goto	u278_20
 13328  0DA1  2DA3               u278_21:
 13329  0DA2                     	goto	i1l4184
 13330  0DA2  2DB1               u278_20:
 13331  0DA3                     	line	54
 13332                           	
 13333                           i1l4180:	
 13334  0DA3                     ;EUSART.c: 53:       {;EUSART.c: 54:           TXREG = gEusartTXBuffer[gTxReadingPositio
                                 n];
 13335                           	movf	(_gTxReadingPosition),w
 13336  0DA3  0850               	addlw	low(_gEusartTXBuffer|((0x2)<<8))&0ffh
 13337  0DA4  3E20               	movwf	fsr1l
 13338  0DA5  0086               	movlw 2	; select bank4/5
 13339  0DA6  3002               	movwf fsr1h	
 13340  0DA7  0087               	
 13341                           	movf	indf1,w
 13342  0DA8  0801               	movlb 3	; select bank3
 13343  0DA9  0023               	movwf	(410)^0180h	;volatile
 13344  0DAA  009A               	line	55
 13345                           	
 13346                           i1l4182:	
 13347  0DAB                     ;EUSART.c: 55:           gTxReadingPosition++;
 13348                           	movlw	low(01h)
 13349  0DAB  3001               	movwf	(??_EUSARTInterrupt+0)+0
 13350  0DAC  00F2               	movf	(??_EUSARTInterrupt+0)+0,w
 13351  0DAD  0872               	movlb 0	; select bank0
 13352  0DAE  0020               	addwf	(_gTxReadingPosition),f
 13353  0DAF  07D0               	line	56
 13354                           ;EUSART.c: 56:       }
 13355                           	goto	i1l4188
 13356  0DB0  2DB7               	line	57
 13357                           ;EUSART.c: 57:       else
 13358                           	
 13359                           i1l907:	
 13360  0DB1                     	line	59
 13361                           	
 13362                           i1l4184:	
 13363  0DB1                     ;EUSART.c: 58:       {;EUSART.c: 59:            gTxReadingPosition = 0;
 13364                           	clrf	(_gTxReadingPosition)
 13365  0DB1  01D0               	line	60
 13366                           ;EUSART.c: 60:            gTxTransmitSize = 0;
 13367                           	clrf	(_gTxTransmitSize)
 13368  0DB2  01CE               	line	61
 13369                           	
 13370                           i1l4186:	
 13371  0DB3                     ;EUSART.c: 61:            PIE1bits.TXIE =0;
 13372                           	movlb 1	; select bank1
 13373  0DB3  0021               	bcf	(145)^080h,4	;volatile
 13374  0DB4  1211               	goto	i1l4188
 13375  0DB5  2DB7               	line	62
 13376                           ;EUSART.c: 62:       }
 13377                           	
 13378                           i1l908:	
 13379  0DB6                     	goto	i1l4188
 13380  0DB6  2DB7               	line	63
 13381                           ;EUSART.c: 63:     }
 13382                           	
 13383                           i1l906:	
 13384  0DB7                     	line	64
 13385                           	
 13386                           i1l4188:	
 13387  0DB7                     ;EUSART.c: 64:     if( PIR1bits.RCIF == 1)
 13388                           	movlb 0	; select bank0
 13389  0DB7  0020               	btfss	(17),5	;volatile
 13390  0DB8  1E91               	goto	u279_21
 13391  0DB9  2DBB               	goto	u279_20
 13392  0DBA  2DBC               u279_21:
 13393  0DBB                     	goto	i1l4208
 13394  0DBB  2DF2               u279_20:
 13395  0DBC                     	line	66
 13396                           	
 13397                           i1l4190:	
 13398  0DBC                     ;EUSART.c: 65:     {;EUSART.c: 66:         if(RCSTAbits.OERR == 1)
 13399                           	movlb 3	; select bank3
 13400  0DBC  0023               	btfss	(413)^0180h,1	;volatile
 13401  0DBD  1C9D               	goto	u280_21
 13402  0DBE  2DC0               	goto	u280_20
 13403  0DBF  2DC1               u280_21:
 13404  0DC0                     	goto	i1l4196
 13405  0DC0  2DCA               u280_20:
 13406  0DC1                     	line	68
 13407                           	
 13408                           i1l4192:	
 13409  0DC1                     ;EUSART.c: 67:         {;EUSART.c: 68:           RCSTAbits.CREN = 0;
 13410                           	bcf	(413)^0180h,4	;volatile
 13411  0DC1  121D               	line	69
 13412                           ;EUSART.c: 69:           RCSTAbits.CREN = 1;
 13413                           	bsf	(413)^0180h,4	;volatile
 13414  0DC2  161D               	line	70
 13415                           	
 13416                           i1l4194:	
 13417  0DC3                     ;EUSART.c: 70:           gEUSARTError = gEUSARTError | 0x01;
 13418                           	movlb 0	; select bank0
 13419  0DC3  0020               	movf	(_gEUSARTError),w
 13420  0DC4  084F               	iorlw	01h
 13421  0DC5  3801               	movwf	(??_EUSARTInterrupt+0)+0
 13422  0DC6  00F2               	movf	(??_EUSARTInterrupt+0)+0,w
 13423  0DC7  0872               	movwf	(_gEUSARTError)
 13424  0DC8  00CF               	goto	i1l4196
 13425  0DC9  2DCA               	line	71
 13426                           ;EUSART.c: 71:         }
 13427                           	
 13428                           i1l910:	
 13429  0DCA                     	line	72
 13430                           	
 13431                           i1l4196:	
 13432  0DCA                     ;EUSART.c: 72:         if(RCSTAbits.FERR == 1)
 13433                           	movlb 3	; select bank3
 13434  0DCA  0023               	btfss	(413)^0180h,2	;volatile
 13435  0DCB  1D1D               	goto	u281_21
 13436  0DCC  2DCE               	goto	u281_20
 13437  0DCD  2DCF               u281_21:
 13438  0DCE                     	goto	i1l4200
 13439  0DCE  2DD6               u281_20:
 13440  0DCF                     	line	74
 13441                           	
 13442                           i1l4198:	
 13443  0DCF                     ;EUSART.c: 73:         {;EUSART.c: 74:             gEUSARTError = gEUSARTError | 0x02;
 13444                           	movlb 0	; select bank0
 13445  0DCF  0020               	movf	(_gEUSARTError),w
 13446  0DD0  084F               	iorlw	02h
 13447  0DD1  3802               	movwf	(??_EUSARTInterrupt+0)+0
 13448  0DD2  00F2               	movf	(??_EUSARTInterrupt+0)+0,w
 13449  0DD3  0872               	movwf	(_gEUSARTError)
 13450  0DD4  00CF               	goto	i1l4200
 13451  0DD5  2DD6               	line	75
 13452                           ;EUSART.c: 75:         }
 13453                           	
 13454                           i1l911:	
 13455  0DD6                     	line	76
 13456                           	
 13457                           i1l4200:	
 13458  0DD6                     ;EUSART.c: 76:         gEusartRXBuffer[gEusartRXBufferWritePtr] = RCREG;
 13459                           	movlb 0	; select bank0
 13460  0DD6  0020               	movf	(_gEusartRXBufferWritePtr),w
 13461  0DD7  0851               	addlw	low 9000
 13462  0DD8  3E28               	movwf	(??_EUSARTInterrupt+0)+0
 13463  0DD9  00F2               	clrf	((??_EUSARTInterrupt+0)+0)+1
 13464  0DDA  01F3               	movlw	high 9000
 13465  0DDB  3023               	addwfc	((??_EUSARTInterrupt+0)+0)+1,f
 13466  0DDC  3DF3               	movf	0+(??_EUSARTInterrupt+0)+0,w
 13467  0DDD  0872               	movwf	fsr1l
 13468  0DDE  0086               	movf	1+(??_EUSARTInterrupt+0)+0,w
 13469  0DDF  0873               	movwf	fsr1h
 13470  0DE0  0087               	movlb 3	; select bank3
 13471  0DE1  0023               	movf	(409)^0180h,w	;volatile
 13472  0DE2  0819               	movwf	indf1
 13473  0DE3  0081               	line	77
 13474                           	
 13475                           i1l4202:	
 13476  0DE4                     ;EUSART.c: 77:         gEusartRXBufferWritePtr++;
 13477                           	movlw	low(01h)
 13478  0DE4  3001               	movwf	(??_EUSARTInterrupt+0)+0
 13479  0DE5  00F2               	movf	(??_EUSARTInterrupt+0)+0,w
 13480  0DE6  0872               	movlb 0	; select bank0
 13481  0DE7  0020               	addwf	(_gEusartRXBufferWritePtr),f
 13482  0DE8  07D1               	line	79
 13483                           	
 13484                           i1l4204:	
 13485  0DE9                     ;EUSART.c: 79:         if(gEusartRXBufferWritePtr > sizeof(gEusartRXBuffer))
 13486                           	movlw	low(0C9h)
 13487  0DE9  30C9               	subwf	(_gEusartRXBufferWritePtr),w
 13488  0DEA  0251               	skipc
 13489  0DEB  1C03               	goto	u282_21
 13490  0DEC  2DEE               	goto	u282_20
 13491  0DED  2DEF               u282_21:
 13492  0DEE                     	goto	i1l4208
 13493  0DEE  2DF2               u282_20:
 13494  0DEF                     	line	81
 13495                           	
 13496                           i1l4206:	
 13497  0DEF                     ;EUSART.c: 80:         {;EUSART.c: 81:           gEusartRXBufferWritePtr = 0;
 13498                           	clrf	(_gEusartRXBufferWritePtr)
 13499  0DEF  01D1               	goto	i1l4208
 13500  0DF0  2DF2               	line	82
 13501                           ;EUSART.c: 82:         }
 13502                           	
 13503                           i1l912:	
 13504  0DF1                     	goto	i1l4208
 13505  0DF1  2DF2               	line	84
 13506                           ;EUSART.c: 84:     }
 13507                           	
 13508                           i1l909:	
 13509  0DF2                     	line	85
 13510                           	
 13511                           i1l4208:	
 13512  0DF2                     ;EUSART.c: 85:     return gEUSARTError;
 13513                           	movf	(_gEUSARTError),w
 13514  0DF2  084F               	movwf	(??_EUSARTInterrupt+0)+0
 13515  0DF3  00F2               	clrf	(??_EUSARTInterrupt+0)+0+1
 13516  0DF4  01F3               	movf	0+(??_EUSARTInterrupt+0)+0,w
 13517  0DF5  0872               	movwf	(?_EUSARTInterrupt)
 13518  0DF6  00F0               	movf	1+(??_EUSARTInterrupt+0)+0,w
 13519  0DF7  0873               	movwf	(?_EUSARTInterrupt+1)
 13520  0DF8  00F1               	goto	i1l913
 13521  0DF9  2DFA               	
 13522                           i1l4210:	
 13523  0DFA                     	line	86
 13524                           	
 13525                           i1l913:	
 13526  0DFA                     	return
 13527  0DFA  0008               	opt stack 0
 13528                           GLOBAL	__end_of_EUSARTInterrupt
 13529                           	__end_of_EUSARTInterrupt:
 13530  0DFB                     	signat	_EUSARTInterrupt,90
 13531                           global	___latbits
 13532                           ___latbits	equ	3
 13533  0003                     	global	btemp
 13534                           	btemp set 07Eh
 13535  007E                     
 13536                           	DABS	1,126,2	;btemp
 13537                           	global	int$flags
 13538                           	int$flags	set btemp
 13539  007E                     	global	wtemp0
 13540                           	wtemp0 set btemp+0
 13541  007E                     global __pbssBIGRAM
 13542                           __pbssBIGRAM	equ	9000
 13543  2328                     	end


Data Sizes:
    Strings     354
    Constant    0
    Data        16
    BSS         253
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     37      68
    BANK1            80     15      48
    BANK2            80      0      60
    BANK3            80      0      75
    BANK4            80      0      70
    BANK5            80     46      46
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10            8      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_28(CODE[9]), STR_27(CODE[7]), Esp8266SetNetworkParameters@wCommand(BANK0[70]), STR_15(CODE[17]), 
		 -> Esp8266OpenSocketCommand@wCommand(BANK0[70]), STR_9(CODE[9]), STR_8(CODE[12]), main@wReadout(BANK5[20]), 
		 -> wInterruptText(BANK3[75]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_28(CODE[9]), STR_27(CODE[7]), Esp8266SetNetworkParameters@wCommand(BANK0[70]), STR_15(CODE[17]), 
		 -> Esp8266OpenSocketCommand@wCommand(BANK0[70]), STR_9(CODE[9]), STR_8(CODE[12]), main@wReadout(BANK5[20]), 
		 -> wInterruptText(BANK3[75]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 75
		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wCommand(BANK0[70]), wInterruptText(BANK3[75]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 75
		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wCommand(BANK0[70]), wInterruptText(BANK3[75]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_31(CODE[14]), STR_30(CODE[4]), STR_28(CODE[9]), STR_27(CODE[7]), 
		 -> STR_20(CODE[5]), STR_19(CODE[5]), Esp8266SetNetworkParameters@wNumber(COMMON[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[4]), STR_16(CODE[11]), STR_14(CODE[3]), Esp8266OpenSocketCommand@wPort(COMMON[7]), 
		 -> STR_13(CODE[3]), STR_12(CODE[4]), STR_11(CODE[14]), NULL(NULL[0]), 
		 -> STR_9(CODE[9]), STR_8(CODE[12]), main@wReadout(BANK5[20]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_31(CODE[14]), STR_30(CODE[4]), STR_28(CODE[9]), STR_27(CODE[7]), 
		 -> STR_20(CODE[5]), STR_19(CODE[5]), Esp8266SetNetworkParameters@wNumber(COMMON[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[4]), STR_16(CODE[11]), STR_14(CODE[3]), Esp8266OpenSocketCommand@wPort(COMMON[7]), 
		 -> STR_13(CODE[3]), STR_12(CODE[4]), STR_11(CODE[14]), NULL(NULL[0]), 
		 -> STR_9(CODE[9]), STR_8(CODE[12]), main@wReadout(BANK5[20]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_31(CODE[14]), STR_30(CODE[4]), STR_28(CODE[9]), STR_27(CODE[7]), 
		 -> STR_20(CODE[5]), STR_19(CODE[5]), Esp8266SetNetworkParameters@wNumber(COMMON[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[4]), STR_14(CODE[3]), Esp8266OpenSocketCommand@wPort(COMMON[7]), STR_13(CODE[3]), 
		 -> STR_12(CODE[4]), NULL(NULL[0]), STR_9(CODE[9]), STR_8(CODE[12]), 
		 -> main@wReadout(BANK5[20]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 75
		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wCommand(BANK0[70]), wInterruptText(BANK3[75]), 

    memset@dest	PTR void  size(1) Largest target is 75
		 -> wI2CRxBuffer(BANK2[20]), wI2CTxBuffer(BANK2[20]), wInterruptText(BANK3[75]), 

    memset@s	PTR unsigned char  size(1) Largest target is 75
		 -> wI2CRxBuffer(BANK2[20]), wI2CTxBuffer(BANK2[20]), wInterruptText(BANK3[75]), 

    memcpy@d1	PTR void  size(2) Largest target is 70
		 -> gEusartTXBuffer(BANK4[70]), wI2CTxBuffer(BANK2[20]), EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 70
		 -> gEusartTXBuffer(BANK4[70]), wI2CTxBuffer(BANK2[20]), EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 70
		 -> STR_26(CODE[14]), STR_24(CODE[6]), STR_22(CODE[13]), Esp8266SetNetworkParameters@wCommand(BANK0[70]), 
		 -> Esp8266OpenSocketCommand@wCommand(BANK0[70]), wI2CRxBuffer(BANK2[20]), EM1812EntryPoint@SetGetTempCommand(BANK1[4]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_26(CODE[14]), STR_24(CODE[6]), STR_22(CODE[13]), Esp8266SetNetworkParameters@wCommand(BANK0[70]), 
		 -> Esp8266OpenSocketCommand@wCommand(BANK0[70]), wI2CRxBuffer(BANK2[20]), EM1812EntryPoint@SetGetTempCommand(BANK1[4]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 75
		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wCommand(BANK0[70]), wInterruptText(BANK3[75]), 

    sp__EusartGetRxBuffer	PTR unsigned char  size(2) Largest target is 200
		 -> gEusartRXBuffer(BIGRAM[200]), 

    gEspRxBufferPtr	PTR unsigned char  size(2) Largest target is 200
		 -> gEusartRXBuffer(BIGRAM[200]), NULL(NULL[0]), 

    sp__uint16_tToa	PTR unsigned char  size(1) Largest target is 7
		 -> Esp8266OpenSocketCommand@wPort(COMMON[7]), NULL(NULL[0]), 

    sp__uint8_tToa	PTR unsigned char  size(1) Largest target is 4
		 -> Esp8266Entrypoint@wReturnNumber(COMMON[4]), NULL(NULL[0]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 75
		 -> Esp8266SetNetworkParameters@wCommand(BANK0[70]), Esp8266OpenSocketCommand@wCommand(BANK0[70]), wInterruptText(BANK3[75]), 

    AddTrace@iText	PTR unsigned char  size(2) Largest target is 20
		 -> STR_9(CODE[9]), STR_8(CODE[12]), main@wReadout(BANK5[20]), 

    AddTrace@oText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    GetNewReceivedData@oData	PTR unsigned char  size(1) Largest target is 8
		 -> EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 

    sp__memcpy	PTR void  size(2) Largest target is 70
		 -> gEusartTXBuffer(BANK4[70]), wI2CTxBuffer(BANK2[20]), EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 

    I2C_SendData@iData	PTR unsigned char  size(1) Largest target is 4
		 -> EM1812EntryPoint@SetGetTempCommand(BANK1[4]), 

    EM1812EntryPoint@oTemperature	PTR short  size(1) Largest target is 2
		 -> wTemperature(BANK1[2]), 

    EM1812EntryPoint@oHumidity	PTR short  size(1) Largest target is 2
		 -> wHumidity(BANK1[2]), 

    printEM1812@oTextOut	PTR unsigned char  size(1) Largest target is 20
		 -> main@wReadout(BANK5[20]), 

    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
		 -> Esp8266Entrypoint@wText(COMMON[3]), Esp8266Entrypoint@wReturnNumber(COMMON[4]), STR_39(CODE[4]), STR_36(CODE[10]), 
		 -> STR_34(CODE[4]), STR_10(CODE[14]), NULL(NULL[0]), myint@wText(BANK0[3]), 
		 -> STR_7(CODE[16]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[16]), main@wReadout(BANK5[20]), STR_2(CODE[17]), STR_1(CODE[16]), 
		 -> wInterruptText(BANK3[75]), 

    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
		 -> main@wEnterBottonPressed(BANK5[1]), main@wDownBottonPressed(BANK5[1]), main@wUpBottonPressed(BANK5[1]), 

    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
		 -> main@wDebounceDown(BANK5[2]), main@wDebounceUp(BANK5[2]), main@wDebounceEnter(BANK5[2]), 

    sp__memset	PTR void  size(1) Largest target is 75
		 -> wI2CRxBuffer(BANK2[20]), wI2CTxBuffer(BANK2[20]), wInterruptText(BANK3[75]), 

    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myint in COMMON

    _myint->i1_lcdWriteText
    i1_lcdWriteText->i1_writeTxtChk
    i1_writeTxtChk->i1_setCursorPosition
    i1_setCursorPosition->i1_waitLCDBusy

Critical Paths under _main in BANK0

    _main->_AddTrace
    _setNotBlinkingCursor->_writeInsChk
    _setCursorOff->_writeInsChk
    _printEM1812->___awdiv
    _powerOnLcd->_writeInsChk
    _moveCursorToHome->_writeInsChk
    _initLCD->_writeInsChk
    _clearDisplay->_writeInsChk
    _writeInsChk->_writeInsNoChk
    _writeInsNoChk->_setData
    _PrintLog->_lcdWriteText
    _lcdWriteText->_writeTxtChk
    _writeTxtChk->_setCursorPosition
    _setCursorPosition->_waitLCDBusy
    _EM1812EntryPoint->_I2C_SendData
    _I2C_SendData->_memcpy
    _GetNewReceivedData->_memcpy
    _AddTrace->_strcat
    _strcat->_strcpy
    _strcpy->_strlen

Critical Paths under _myint in BANK0

    _myint->i1_lcdWriteText

Critical Paths under _main in BANK1

    _main->_EM1812EntryPoint

Critical Paths under _myint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myint in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myint in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myint in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myint in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myint in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myint in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0   30994
                                             13 BANK1      2     2      0
                                              0 BANK5     46    46      0
                           _AddTrace
                           _Debounce
                   _EM1812EntryPoint
                  _Esp8266OpenSocket
          _Esp8266SetAccessPointMode
                   _Esp8266SetupWifi
                           _PrintLog
                       _clearDisplay
                            _initLCD
                       _lcdWriteText
                             _memset
                   _moveCursorToHome
                         _powerOnLcd
                        _printEM1812
                       _setCursorOff
                  _setCursorPosition
               _setNotBlinkingCursor
 ---------------------------------------------------------------------------------
 (1) _setNotBlinkingCursor                                 1     1      0     254
                                             18 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _setCursorOff                                         1     1      0     254
                                             18 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _printEM1812                                         10     7      3    4184
                                             21 BANK0     10     7      3
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1333
                                             12 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1345
                                             12 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _powerOnLcd                                           1     1      0     254
                                             18 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _moveCursorToHome                                     0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     632
                                             18 BANK0      1     1      0
                       _clearDisplay
                            _setData
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _clearDisplay                                         0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _writeInsChk                                          1     1      0     254
                                             17 BANK0      1     1      0
                        _waitLCDBusy
                      _writeInsNoChk
 ---------------------------------------------------------------------------------
 (3) _writeInsNoChk                                        2     2      0     186
                                             15 BANK0      2     2      0
                 _SetToSendDataToLCD
                            _setData
 ---------------------------------------------------------------------------------
 (1) _PrintLog                                             4     4      0    6882
                                             30 BANK0      4     4      0
                       _lcdWriteText
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _memset                                              10     6      4    1881
                                             12 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _lcdWriteText                                         6     4      2    3867
                                             24 BANK0      6     4      2
                        _writeTxtChk
 ---------------------------------------------------------------------------------
 (2) _writeTxtChk                                          3     3      0    2242
                                             21 BANK0      3     3      0
                 _SetToSendDataToLCD
                  _setCursorPosition
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (1) _setCursorPosition                                    5     4      1    1957
                                             16 BANK0      5     4      1
                 _SetToSendDataToLCD
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (3) _waitLCDBusy                                          4     4      0      37
                                             12 BANK0      4     4      0
               _SetToReadDataFromLCD
 ---------------------------------------------------------------------------------
 (4) _SetToReadDataFromLCD                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setData                                              3     3      0     124
                                             12 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _SetToSendDataToLCD                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Esp8266SetupWifi                                     1     1      0       0
                                             12 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Esp8266SetAccessPointMode                            1     1      0       0
                                             12 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Esp8266OpenSocket                                    1     1      0       0
                                             12 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EM1812EntryPoint                                    20    18      2    3024
                                             29 BANK0      7     5      2
                                              0 BANK1     13    13      0
                       _GetI2CStatus
                 _GetNewReceivedData
                        _I2C_GetData
                       _I2C_SendData
 ---------------------------------------------------------------------------------
 (2) _I2C_SendData                                         5     3      2    1118
                                             24 BANK0      5     3      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _I2C_GetData                                          4     2      2     183
                                             12 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _GetNewReceivedData                                   4     3      1    1056
                                             24 BANK0      4     3      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              12     6      6     868
                                             12 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) _GetI2CStatus                                         4     2      2       0
                                             12 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Debounce                                             5     3      2     788
                                             12 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _AddTrace                                            10     7      3    5346
                                             34 BANK0      3     0      3
                                              0 BANK1      7     7      0
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     0      4    3387
                                             30 BANK0      4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     940
                                             12 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                              12     8      4     527
                                             18 BANK0     12     8      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _myint                                                8     8      0    1467
                                              4 BANK0      8     8      0
                    _EUSARTInterrupt
                      _I2C_Interrupt
                  _TempUpdateRequest
                     i1_lcdWriteText
 ---------------------------------------------------------------------------------
 (8) i1_lcdWriteText                                       6     4      2    1247
                                             12 COMMON     2     0      2
                                              0 BANK0      4     4      0
                      i1_writeTxtChk
 ---------------------------------------------------------------------------------
 (9) i1_writeTxtChk                                        3     3      0    1082
                                              9 COMMON     3     3      0
               i1_SetToSendDataToLCD
                i1_setCursorPosition
                          i1_setData
                      i1_waitLCDBusy
 ---------------------------------------------------------------------------------
 (10) i1_setCursorPosition                                 5     4      1     797
                                              4 COMMON     5     4      1
               i1_SetToSendDataToLCD
                          i1_setData
                      i1_waitLCDBusy
 ---------------------------------------------------------------------------------
 (10) i1_waitLCDBusy                                       4     4      0      37
                                              0 COMMON     4     4      0
             i1_SetToReadDataFromLCD
 ---------------------------------------------------------------------------------
 (11) i1_SetToReadDataFromLCD                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_setData                                           3     3      0     124
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (11) i1_SetToSendDataToLCD                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TempUpdateRequest                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_Interrupt                                        5     3      2      26
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (8) _EUSARTInterrupt                                      4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AddTrace
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _Debounce
   _EM1812EntryPoint
     _GetI2CStatus
     _GetNewReceivedData
       _memcpy
     _I2C_GetData
     _I2C_SendData
       _memcpy
   _Esp8266OpenSocket
   _Esp8266SetAccessPointMode
   _Esp8266SetupWifi
   _PrintLog
     _lcdWriteText
       _writeTxtChk
         _SetToSendDataToLCD
         _setCursorPosition
           _SetToSendDataToLCD
           _setData
           _waitLCDBusy
             _SetToReadDataFromLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
     _memset
     _strlen
   _clearDisplay
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _initLCD
     _clearDisplay
       _writeInsChk
         _waitLCDBusy
           _SetToReadDataFromLCD
         _writeInsNoChk
           _SetToSendDataToLCD
           _setData
     _setData
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _lcdWriteText
     _writeTxtChk
       _SetToSendDataToLCD
       _setCursorPosition
         _SetToSendDataToLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
       _setData
       _waitLCDBusy
         _SetToReadDataFromLCD
   _memset
   _moveCursorToHome
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _powerOnLcd
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _printEM1812
     ___awdiv
     ___awmod
   _setCursorOff
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _setCursorPosition
     _SetToSendDataToLCD
     _setData
     _waitLCDBusy
       _SetToReadDataFromLCD
   _setNotBlinkingCursor
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData

 _myint (ROOT)
   _EUSARTInterrupt
   _I2C_Interrupt
   _TempUpdateRequest
   i1_lcdWriteText
     i1_writeTxtChk
       i1_SetToSendDataToLCD
       i1_setCursorPosition
         i1_SetToSendDataToLCD
         i1_setData
         i1_waitLCDBusy
           i1_SetToReadDataFromLCD
       i1_setData
       i1_waitLCDBusy
         i1_SetToReadDataFromLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     25      44       5       85.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      F      30       7       60.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3C       9       75.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4B      11       93.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      46      13       87.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50     2E      2E      15       57.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     17D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10               8      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     17D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Apr 19 22:45:03 2019

                                        pc 0002                                 __CFG_FOSC$ 0002  
                              __CFG_CP$OFF 0000                                _SSPSTATbits 0214  
                             ___awdiv@sign 0032                         _SetToSendDataToLCD 0918  
                     __size_of_I2C_GetData 0036                                        l200 0352  
                                      l201 03A3                                        l210 03C4  
                                      l202 038D                                        l211 03D4  
                                      l203 037E                                        l212 03DE  
                                      l204 03A2                                        l213 03DF  
                                      l205 037F                                        l214 03E0  
                                      l206 0387                                        l311 0F6B  
                                      l207 0388                                        l160 0CD5  
                                      l320 0FC9                                        l312 0FFF  
                                      l152 0B1E                                        l208 03C5  
                                      l321 0FA9                                        l313 0FA8  
                                      l153 0B1E                                        l209 03BE  
                                      l322 0FE0                                        l314 0F83  
                                      l323 0FB0                                        l315 0FA6  
                                      l156 0C9B                                        l500 04F7  
                                      l308 0BFB                                        l324 0FB7  
                                      l316 0F90                                        l332 09DB  
                                      l180 0262                                        l157 0CA3  
                                      l501 04F9                                        l341 0AC1  
                                      l325 0FBE                                        l317 0FA5  
                                      l181 0243                                        l173 03E0  
                                      l158 0CB8                                        l502 04FA  
                                      l342 0AAC                                        l326 0FC7  
                                      l318 0F9D                                        l270 0AE2  
                                      l350 0970                                        l190 0301  
                                      l182 01A7                                        l159 0CD5  
                                      l335 0923                                        l343 0AC9  
                                      l319 0FA4                                        l271 0ACD  
                                      l191 0300                                        l183 0261  
                                      l344 0AC9                                        l272 0AF3  
                                      l184 01B6                                        l176 019D  
                                      l273 0AF3                                        l329 0965  
                                      l193 028B                                        l185 01DE  
                                      l177 019D                                        l338 091D  
                                      l194 036E                                        l186 01ED  
                                      l178 019E                                        l267 0E5E  
                                      l451 0647                                        l195 0359  
                                      l187 01FC                                        l179 019F  
                                      l452 06A0                                        l356 0986  
                                      l196 0348                                        l188 0224  
                                      l453 06B6                                        l197 036D  
                                      l189 0233                                        l390 0CDA  
                                      l454 06ED                                        l198 0349  
                                      l391 0D1C                                        l383 090B  
                                      l359 097B                                        l199 0351  
                                      l480 050E                                        l392 0CE3  
                                      l481 0413                                        l393 0CEE  
                                      l570 0950                                        l490 046E  
                                      l482 041F                                        l394 0CF9  
                                      l386 0946                                        l491 046F  
                                      l483 0420                                        l395 0D04  
                                      l492 047C                                        l484 043C  
                                      l396 0D35                                        l581 0B80  
                                      l573 0C3D                                        l477 04FC  
                                      l493 04F6                                        l485 043B  
                                      l389 0D06                                        l494 04F5  
                                      l486 0461                                        l478 03FC  
                                      l647 0C89                                        l583 0B5D  
                                      l575 0C0B                                        l495 04B4  
                                      l487 0460                                        l479 0412  
                                      l648 0C89                                        l584 0B83  
                                      l576 0C29                                        l496 04BD  
                                      l488 045F                                        l577 0C2D  
                                      l497 04E0                                        l489 0462  
                                      l578 0C40                                        l498 04EA  
                                      l587 09FE                                        l499 0511  
                                      l588 09FE                                        l780 0930  
                                      l774 0937                                        l777 093E  
                    _wReceptionCounterPrev 0056                               ___awmod@sign 0032  
                             __CFG_BORV$LO 0000                                        wreg 0009  
                      ?_SetToSendDataToLCD 0070         I2C_GetData@iRxNumberOfByteExpected 002C  
                                     S6992 0800                  EM1812EntryPoint@oHumidity 00C3  
                             __CFG_LVP$OFF 0000                             ??_lcdWriteText 003A  
                           myint@wI2CError 002A                                       l1071 0E6D  
                                     l1080 0EC3                                       l1072 0E7B  
                                     l1081 0EC8                                       l1073 0EB8  
                                     l1074 0E90                                       l1090 07D3  
                                     l1075 0E86                                       l1091 07E2  
                                     l1076 0E95                                       l1092 07EE  
                                     l1084 07B0                                       l1077 0E96  
                                     l1093 07FA                                       l1085 07BA  
                                     l1078 0EAB                                       l1094 07FF  
                                     l1086 07EF                                       l1079 0EB7  
                                     l1087 07CD                                       l1088 07C3  
                                     l1089 07D2                                       l1362 0B40  
                                     l1370 071B                                       l1363 0B29  
                                     l1371 074F                                       l1364 0B4D  
                                     l1372 076F                                       l1365 0B4D  
                                     l1373 079A                                       l1382 09C3  
                                     l1374 0789                                       l1391 0A0A  
                                     l1375 07A1                                       l1392 0A05  
                                     l1368 06FC                                       l1385 0A81  
                                     l1393 0A14                                       l1369 07A1  
                                     l1386 0A80                                       l1394 0A22  
                                     l1387 0A9F                                       l1388 0A9F  
                                     l6000 04F4                                       l6010 0511  
                                     l6002 04F7                                       l6020 0C43  
                                     l6004 04FB                                       l6022 0C7B  
                                     l6006 04FC                                       l6030 0933  
                                     l6008 050E                                       l6024 092A  
                                     l6032 0938                                       l5400 09D6  
                                     l6200 00DF                                       l6026 092C  
                                     l6034 093A                                       l5330 091E  
                                     l6210 00F4                                       l6202 00E0  
                                     l6028 0931                                       l5340 0BF9  
                                     l5332 0BC2                                       l6300 01B6  
                                     l6220 00FB                                       l6212 00F5  
                                     l6204 00E5                                       l5430 09FF  
                                     l5510 0B35                                       l5342 0918  
                                     l5334 0BC3                                       l5350 0AAF  
                                     l6310 01FC                                       l6302 01C4  
                                     l6230 0105                                       l6222 00FD  
                                     l6214 00F6                                       l6206 00F1  
                                     l5432 0A05                                       l5512 0B3B  
                                     l5504 0B1F                                       l5336 0BF5  
                                     l5352 0AB8                                       l5344 0AA0  
                                     l5600 0795                                       l5440 095D  
                                     l6400 03B1                                       l6320 0242  
                                     l6312 020A                                       l6304 01D5  
                                     l6240 010C                                       l6232 0106  
                                     l6224 00FF                                       l6216 00F7  
                                     l6208 00F3                                       l5434 0A0A  
                                     l5506 0B29                                       l5514 0B40  
                                     l5610 0C0B                                       l5338 0BF7  
                                     l5354 0AB9                                       l5346 0AA3  
                                     l5370 0CF9                                       l5362 0CD8  
                                     l5450 0F70                                       l5442 0F63  
                                     l5602 079A                                       l6402 03B3  
                                     l6410 03C5                                       l6330 027C  
                                     l6314 021B                                       l6306 01DE  
                                     l6322 0243                                       l6250 0115  
                                     l6242 0110                                       l6234 0108  
                                     l6226 0101                                       l6218 00F9  
                                     l5516 0A76                                       l5436 0A14  
                                     l5508 0B31                                       l5620 0C2D  
                                     l5612 0C11                                       l5356 0ABD  
                                     l5348 0AA6                                       l5380 0D22  
                                     l5372 0D05                                       l5364 0CDA  
                                     l5460 0F8A                                       l5452 0F71  
                                     l5444 0F6A                                       l5604 0907  
                                     l5700 0E7D                                       l6420 03DC  
                                     l6412 03CB                                       l6404 03BA  
                                     l6340 02C0                                       l6332 028B  
                                     l6316 0224                                       l6308 01ED  
                                     l6324 0262                                       l6260 0122  
                                     l6252 0117                                       l6244 0111  
                                     l6236 0109                                       l6228 0103  
                                     l6180 00CA                                       l5518 0A81  
                                     l5438 0A22                                       l5630 0C3C  
                                     l5622 0C2E                                       l5614 0C23  
                                     l5606 0BFE                                       l5358 0ABF  
                                     l5382 0D24                                       l5366 0CE3  
                                     l5374 0D06                                       l5470 0FA9  
                                     l5462 0F90                                       l5454 0F77  
                                     l5446 0F6B                                       l5550 0ACA  
                                     l5710 0E96                                       l5702 0E83  
                                     l6414 03CD                                       l6406 03BE  
                                     l6342 02CE                                       l6334 029B  
                                     l6326 026D                                       l6350 0301  
                                     l6318 0233                                       l6270 0143  
                                     l6262 0125                                       l6254 011A  
                                     l6246 0112                                       l6238 010A  
                                     l6190 00D1                                       l6182 00CB  
                                     l5640 0B50                                       l5624 0C30  
                                     l5616 0C29                                       l5632 0C3D  
                                     l5608 0C04                                       l5384 0D25  
                                     l5368 0CEE                                       l5376 0D1C  
                                     l5480 0FC8                                       l5472 0FB0  
                                     l5464 0F97                                       l5456 0F7D  
                                     l5448 0F6E                                       l5552 0ACD  
                                     l5560 06F4                                       l5392 09C6  
                                     l5712 0EA5                                       l5704 0E86  
                                     l5720 0EB8                                       l6416 03D4  
                                     l6408 03C1                                       l6360 0340  
                                     l6352 0306                                       l6344 02DF  
                                     l6336 02A1                                       l6328 026E  
                                     l6280 016D                                       l6272 014F  
                                     l6264 0131                                       l6256 011D  
                                     l6248 0113                                       l6192 00DA  
                                     l6184 00CC                                       l6176 00C4  
                                     l5650 0B6F                                       l5642 0B56  
                                     l5634 0C40                                       l5626 0C34  
                                     l5618 0C2C                                       l5386 0D30  
                                     l5378 0D1F                                       l5490 0FE8  
                                     l5474 0FB7                                       l5466 0F9D  
                                     l5458 0F83                                       l5482 0FC9  
                                     l5554 0ADC                                       l5570 071A  
                                     l5562 06FB                                       l5394 09C9  
                                     l5722 0EBD                                       l5714 0EA9  
                                     l5706 0E8B                                       l5730 07A4  
                                     l6418 03DA                                       l6370 0358  
                                     l6362 0343                                       l6354 0317  
                                     l6346 02ED                                       l6338 02B2  
                                     l6290 0188                                       l6282 0170  
                                     l6274 0152                                       l6266 0134  
                                     l6258 011F                                       l6194 00DB  
                                     l6186 00CE                                       l6178 00C5  
                                     l5636 0947                                       l5660 0B77  
                                     l5652 0B70                                       l5644 0B5D  
                                     l5628 0C36                                       l5492 0FE9  
                                     l5476 0FBE                                       l5484 0FE0  
                                     l5468 0FA7                                       l5556 0AE2  
                                     l5580 0744                                       l5572 071B  
                                     l5564 06FC                                       l5396 09CB  
                                     l5724 0EC3                                       l5716 0EAB  
                                     l5708 0E90                                       l5740 07BA  
                                     l5732 07A8                                       l5900 0657  
                                     l6380 0377                                       l6372 0359  
                                     l6364 0346                                       l6356 0328  
                                     l6348 02FB                                       l6292 0190  
                                     l6284 0180                                       l6276 015E  
                                     l6268 0140                                       l6196 00DC  
                                     l6188 00D0                                       l5638 0950  
                                     l5670 09DE                                       l5662 0B79  
                                     l5654 0B71                                       l5646 0B63  
                                     l5494 0FF3                                       l5486 0FE3  
                                     l5478 0FC4                                       l5590 076F  
                                     l5582 074E                                       l5574 0723  
                                     l5566 0704                                       l5558 06F0  
                                     l5830 0B02                                       l5398 09CC  
                                     l5726 0EC8                                       l5718 0EB0  
                                     l5750 07D3                                       l5742 07C0  
                                     l5734 07AD                                       l5910 069B  
                                     l5902 0667                                       l6390 038D  
                                     l6382 037A                                       l6366 0349  
                                     l6374 036E                                       l6358 033A  
                                     l6294 019F                                       l6286 0182  
                                     l6278 0161                                       l6198 00DD  
                                     l5680 09AC                                       l5840 0C9B  
                                     l5672 09E3                                       l5664 0B7F  
                                     l5656 0B73                                       l5648 0B68  
                                     l5496 0FF8                                       l5488 0FE6  
                                     l5592 0780                                       l5584 074F  
                                     l5576 072C                                       l5568 0710  
                                     l5832 0B07                                       l5760 07F4  
                                     l5752 07DD                                       l5744 07C3  
                                     l5736 07B0                                       l5728 07A2  
                                     l5920 06C6                                       l5912 06A0  
                                     l5904 0677                                       l6384 037F  
                                     l6376 0374                                       l6392 03A3  
                                     l6368 0352                                       l6296 01A5  
                                     l6288 0185                                       l5682 09C3  
                                     l5850 0CCE                                       l5842 0CA3  
                                     l5674 09E9                                       l5658 0B75  
                                     l5666 0B80                                       l5930 03EC  
                                     l5498 0FFA                                       l5594 0784  
                                     l5586 0764                                       l5578 0738  
                                     l5834 0B0E                                       l5690 0E6A  
                                     l5762 07FA                                       l5754 07E2  
                                     l5746 07C8                                       l5738 07B4  
                                     l5922 06D1                                       l5914 06A5  
                                     l5906 0687                                       l6394 03A9  
                                     l6386 0388                                       l6378 0376  
                                     l6298 01A7                                       l5844 0CB1  
                                     l5836 0C8C                                       l5676 09EA  
                                     l5668 0B83                                       l5940 0413  
                                     l5932 03FC                                       l5596 0789  
                                     l5588 076E                                       l5828 0AF6  
                                     l5860 0E30                                       l5852 0DFB  
                                     l5692 0E6D                                       l5684 0E5F  
                                     l5764 07FF                                       l5756 07E7  
                                     l5748 07CD                                       l5924 06E1  
                                     l5916 06B1                                       l5908 0690  
                                     l6396 03AB                                       l6388 038C  
                                     l5846 0CB8                                       l5838 0C91  
                                     l5678 09FD                                       l5950 042C  
                                     l5942 0419                                       l5934 040B  
                                     l5598 0791                                       l5870 0E4C  
                                     l5862 0E33                                       l5854 0E17  
                                     l5694 0E71                                       l5686 0E61  
                                     l5758 07EF                                       l5926 06E5  
                                     l5918 06B6                                       l6398 03AC  
                                     l5848 0CC6                                       l5960 0456  
                                     l5952 0430                                       l5944 041D  
                                     l5936 040E                                       l5928 03E4  
                                     l5872 0E5B                                       l5864 0E3B  
                                     l5856 0E1F                                       l5696 0E76  
                                     l5688 0E65                                       l5880 0977  
                                     l5970 0462                                       l5962 045A  
                                     l5954 0436                                       l5946 0420  
                                     l5938 0410                                       l5866 0E3F  
                                     l5858 0E23                                       l5882 093F  
                                     l5874 0966                                       l5698 0E7B  
                                     l5890 0638                                       l5980 047C  
                                     l5972 0468                                       l5964 045B  
                                     l5948 042B                                       l5956 043C  
                                     l5868 0E47                                       l5884 0943  
                                     l5876 096C                                       l5892 063B  
                                     l5990 04BD                                       l5982 0487  
                                     l5974 046C                                       l5966 045C  
                                     l5958 0447                                       l5894 063F  
                                     l5878 0971                                       l5886 097C  
                                     l5992 04C2                                       l5984 048F  
                                     l5976 046F                                       l5968 045D  
                                     l5896 0641                                       l5888 0982  
                                     l5994 04E0                                       l5986 0494  
                                     l5978 047A                                       l5898 0647  
                                     l5996 04EA                                       l5988 04B4  
                                     l6980 024D                                       l6990 0504  
                                     l5998 04EF                                       l6982 0362  
                                     l6984 0397                                       l6986 0FD2  
                                     l6988 0D0E                                       STR_1 1077  
                                     STR_2 1056                                       STR_3 1087  
                                     STR_4 1034                                       STR_5 1045  
                                     STR_6 1023                                       STR_7 1067  
                                     STR_8 10DC                                       STR_9 1118  
                                     u4000 07A8                                       u4001 07A7  
                                     u4010 07B4                                       u4011 07B3  
                                     u4020 07C0                                       u4021 07BF  
                                     u4040 07D1                                       u4200 0690  
                                     u4041 07D0                                       u4201 068F  
                                     u4050 07DD                                       u4210 06A5  
                                     u4051 07DC                                       u4035 07C4  
                                     u4211 06A4                                       u4300 047A  
                                     u4220 03F7                                       u4301 0479  
                                     u4310 0487                                       u4230 040B  
                                     u4150 0B07                                       u4070 07ED  
                                     u4311 0486                                       u4231 040A  
                                     u4151 0B06                                       u4071 07EC  
                                     u4055 07D9                                       u4160 0C91  
                                     u4320 0494                                       u4240 0419  
                                     u3600 0AC8                                       u4080 07F4  
                                     u4161 0C90                                       u4321 0493  
                                     u4241 0418                                       u3601 0AC7  
                                     u4081 07F3                                       u4065 07E3  
                                     u4170 0CB1                                       u4330 04C2  
                                     u4250 042B                                       u4171 0CB0  
                                     u4331 04C1                                       u4251 042A  
                                     u4340 0C7B                                       u4180 0CC6  
                                     u4260 0436                                       u3700 0F8A  
                                     u4500 027C                                       u4341 0C7A  
                                     u4181 0CC5                                       u4261 0435  
                                     u3701 0F89                                       u4501 027B  
                                     u4270 0447                                       u3710 0F97  
                                     u4190 063F                                       u4510 028A  
                                     u4271 0446                                       u3615 0D28  
                                     u3711 0F96                                       u4191 063E  
                                     u4511 0289                                       u4280 0456  
                                     u3800 076D                                       u4520 0340  
                                     u4345 0C77                                       u4281 0455  
                                     u3801 076C                                       u3625 09CF  
                                     u4521 033F                                       u4505 0278  
                                     u3730 0B4C                                       u4290 0468  
                                     u3810 07A0                                       u4530 0374  
                                     u3731 0B4B                                       u4291 0467  
                                     u3811 079F                                       u4531 0373  
                                     u4515 0286                                       u3740 0A9E  
                                     u3660 0A13                                       u3820 0C04  
                                     u3900 0E65                                       u4540 03A9  
                                     u3741 0A9D                                       u3661 0A12  
                                     u3821 0C03                                       u3725 0FEC  
                                     u3901 0E64                                       u4541 03A8  
                                     u3830 0C0A                                       u3670 0F69  
                                     u3910 0E71                                       u4550 03B1  
                                     u4470 00D8                                       u3831 0C09  
                                     u3671 0F68                                       u3911 0E70  
                                     u4551 03B0                                       u4471 00D5  
                                     u3840 0C11                                       u3680 0F77  
                                     u3760 0AF2                                       u3920 0E83  
                                     u4560 03CB                                       u3841 0C10  
                                     u3585 0BC6                                       u3681 0F76  
                                     u3761 0AF1                                       u3921 0E82  
                                     u4561 03CA                                       u3850 0B56  
                                     u3690 0F7D                                       u3770 06FA  
                                     u4570 03DA                                       u4490 01A5  
                                     u3851 0B55                                       u3595 0BD4  
                                     u3691 0F7C                                       u3771 06F9  
                                     u4571 03D9                                       u4491 01A4  
                                     u3860 0B5C                                       u3780 0719  
                                     u3940 0E94                                       u4484 00DA  
                                     u3861 0B5B                                       u3781 0718  
                                     u3941 0E93                                       u3870 0B63  
                                     u3790 074D                                       u3871 0B62  
                                     u3791 074C                                       u3935 0E87  
                                     u3880 09E3                                       u3960 0EA5  
                                     u3881 09E2                                       u3961 0EA4  
                                     u3890 09E9                                       u3891 09E8  
                                     u3955 0E97                                       u4907 018C  
                                     u3980 0EB6                                       u3981 0EB5  
                                     u3965 0EA1                                       u4917 0196  
                                     u3990 0EBD                                       u4927 0E1B  
                                     u3991 0EBC                                       u3975 0EAC  
                                     u4937 0E27                                       u4857 012B  
                                     u4947 0E31                                       u4867 013A  
                                     u4957 0E38                                       u4877 0149  
                                     u4967 0E40                                       u4887 0158  
                                     u4897 0167                                       _TMR0 0015  
                                     _WPUB 020D                               __CFG_WRT$OFF 0000  
                     printEM1812@wVariable 0035                                       _main 00C4  
                                     _test 00AE                                       fsr0h 0005  
                                     fsr1h 0007                                       indf0 0000  
                                     fsr0l 0004                                       indf1 0001  
                                     fsr1l 0006                                       btemp 007E  
                            __CFG_BOREN$ON 0000                                       start 0060  
                    __size_of_I2C_SendData 0045                              __CFG_IESO$OFF 0000  
                     ??_SetToSendDataToLCD 002C                      __size_of_GetI2CStatus 000A  
                     __end_of_clearDisplay 090C                  __size_of_Esp8266SetupWifi 0007  
                  I2C_Interrupt@oErrorCode 0074                               main@wCounter 02A4  
                                    ?_main 0070                                _writeInsChk 095B  
                          __end_of___awdiv 0EC9                                      STR_10 10A5  
                                    STR_11 10B3                                      STR_12 1154  
                                    STR_20 113C                                      STR_13 115C  
                                    STR_21 110F                                      STR_30 1158  
                                    STR_22 10CF                                      STR_23 1146  
                                    STR_31 10C1                                      STR_15 1012  
                                    STR_24 1130                                      STR_32 1121  
                                    STR_16 10E8                                      STR_33 115F  
                                    STR_25 1106                              __CFG_WDTE$OFF 0000  
                                    STR_34 1150                                      STR_26 1097  
                                    STR_35 114B                                      STR_19 1141  
                                    STR_27 1129                                      STR_28 10FD  
                                    STR_36 10F3                            __end_of___awmod 0800  
                                    STR_29 1136                                      STR_38 1000  
                          ___awdiv@divisor 002C                               main@wReadout 02A8  
                                    i1l221 002B                                      i1l222 0053  
                                    i1l311 0ED2                                      i1l223 0047  
                                    i1l320 0F2B                                      i1l312 0F60  
                                    i1l224 0052                                      i1l321 0F0F  
                                    i1l313 0F0E                                      i1l225 005E  
                                    i1l322 0F42                                      i1l314 0EEA  
                                    i1l226 005E                                      i1l323 0F15  
                                    i1l315 0F0C                                      i1l308 0BBF  
                                    i1l324 0F1B                                      i1l316 0EF7  
                                    i1l341 0A44                                      i1l325 0F21  
                                    i1l317 0F0B                                      i1l342 0A2E  
                                    i1l326 0F29                                      i1l318 0F04  
                                    i1l270 0A64                                      i1l335 0917  
                                    i1l343 0A4B                                      i1l319 0F0A  
                                    i1l271 0A4F                                      i1l600 0571  
                                    i1l344 0A4B                                      i1l272 0A75  
                                    i1l601 05A7                                      i1l273 0A75  
                                    i1l610 0623                                      i1l602 058B  
                                    i1l338 0911                                      i1l611 05CB  
                                    i1l603 0587                                      i1l620 0620  
                                    i1l612 05BF                                      i1l604 058A  
                                    i1l621 061A                                      i1l613 05CA  
                                    i1l605 05A6                                      i1l614 0622  
                                    i1l622 061F                                      i1l606 05A2  
                                    i1l390 0D39                                      i1l623 062F  
                                    i1l615 05E5                                      i1l607 059E  
                                    i1l391 0D7F                                      i1l624 0637  
                                    i1l616 0621                                      i1l608 05A1  
                                    i1l392 0D43                                      i1l617 060D  
                                    i1l609 05A5                                      i1l393 0D4F  
                                    i1l618 0604                                      i1l466 09AA  
                                    i1l394 0D5B                                      i1l619 060C  
                                    i1l467 09AB                                      i1l395 0D67  
                                    i1l468 09AB                                      i1l396 0D97  
                                    i1l389 0D69                                      i1l910 0DCA  
                                    i1l911 0DD6                                      i1l591 0625  
                                    i1l912 0DF1                                      i1l592 0624  
                                    i1l913 0DFA                                      i1l593 05AA  
                                    i1l906 0DB7                                      i1l594 052E  
                                    i1l907 0DB1                                      i1l595 05A9  
                                    i1l908 0DB6                                      i1l596 0548  
                                    i1l909 0DF2                                      i1l597 05A8  
                                    i1l598 0574                                      i1l599 0567  
                          ___awdiv@counter 0031                                      _RCREG 0199  
                                    _TMR1H 0017                                      _TMR1L 0016  
                                    _PORTA 000C                                      _PORTB 000D  
                   printEM1812@wIsNegative 003C                                      _TRISB 008D  
                                    _TXREG 019A                                _writeTxtChk 0F61  
                            __CFG_PWRTE$ON 0000                             __CFG_FCMEN$OFF 0000  
                  ?i1_SetToReadDataFromLCD 0070                            __end_of_initLCD 0E5F  
                   ??_SetToReadDataFromLCD 002C                           __end_of_AddTrace 0C8A  
                             _I2C_SendData 0BFC                                      _myint 0004  
                          __end_of_setData 0BFC                          ??_EUSARTInterrupt 0072  
                             _GetI2CStatus 0947                          ?_EM1812EntryPoint 003D  
                 _wI2CRxNbOfByteToReceived 0054                     __size_of_I2C_Interrupt 0126  
            Esp8266Entrypoint@wCommandsize 0047                                      status 0003  
                                    wtemp0 007E                           __end_of_Debounce 0CD6  
                   ??_setNotBlinkingCursor 0032                         ??_EM1812EntryPoint 003F  
                           __CFG_MCLRE$OFF 0000                            __initialization 0062  
            i1lcdWriteText@wCharReadingPos 0023                               __end_of_main 03E2  
                      i1lcdWriteText@iText 007C                         __size_ofi1_setData 003C  
                           __CFG_LPBOR$OFF 0000                                     ??_main 00C4  
                  _gEusartRXBufferWritePtr 0051                         I2C_GetData@iAdress 002F  
                            AddTrace@iText 0043             __end_ofi1_SetToReadDataFromLCD 0918  
                            AddTrace@oText 00BD                      __end_ofi1_writeTxtChk 0F61  
                         __end_of_PrintLog 0B1F                               ?_waitLCDBusy 0070  
                     EM1812EntryPoint@wTry 004A                           ___awdiv@dividend 002E  
                                   ?_myint 0070                                     _ANSELB 018D  
                                   i1l4100 0543                                     i1l4110 0564  
                                   i1l4102 054D                                     i1l4200 0DD6  
                                   i1l4120 057E                                     i1l4112 0569  
                                   i1l4104 0557                                     i1l4210 0DFA  
                                   i1l4202 0DE4                                     i1l4130 059B  
                                   i1l4122 0584                                     i1l4114 056E  
                                   i1l4106 055B                                     i1l4204 0DE9  
                                   i1l4140 05BF                                     i1l4132 05AF  
                                   i1l4124 0590                                     i1l4116 0571  
                                   i1l4108 055D                                     i1l4212 099F  
                                   i1l4206 0DEF                                     i1l4150 05DF  
                                   i1l4142 05C5                                     i1l4134 05B1  
                                   i1l4126 0591                                     i1l4118 0578  
                                   i1l4214 09A6                                     i1l4208 0DF2  
                                   i1l4160 0606                                     i1l4152 05EA  
                                   i1l4144 05CF                                     i1l4136 05B4  
                                   i1l4128 0596                                     i1l4080 0513  
                                   i1l4216 09A8                                     i1l4170 062A  
                                   i1l4162 0612                                     i1l4154 05F0  
                                   i1l4146 05D5                                     i1l4138 05BA  
                                   i1l4090 0528                                     i1l4082 0518  
                                   i1l4218 09A9                                     i1l4180 0DA3  
                                   i1l4172 062B                                     i1l4164 0614  
                                   i1l4156 05F6                                     i1l4148 05D7  
                                   i1l4092 052A                                     i1l4084 0519  
                                   i1l4190 0DBC                                     i1l4182 0DAB  
                                   i1l4174 0637                                     i1l4166 061A  
                                   i1l4158 05FE                                     i1l4094 0532  
                                   i1l4086 051E                                     i1l4078 0512  
                                   i1l4192 0DC1                                     i1l4184 0DB1  
                                   i1l4176 0D98                                     i1l4096 0538  
                                   i1l4088 0523                                     i1l4168 0625  
                                   i1l4194 0DC3                                     i1l4186 0DB3  
                                   i1l4178 0D9D                                     i1l4098 0540  
                                   i1l5410 0BBD                                     i1l5402 0B85  
                                   i1l4196 0DCA                                     i1l4188 0DB7  
                                   i1l5412 090C                                     i1l5404 0B87  
                                   i1l5420 0A32                                     i1l4198 0DCF  
                                   i1l5406 0BB9                                     i1l5422 0A3B  
                                   i1l5414 0A23                                     i1l5408 0BBB  
                                   i1l5360 0912                                     i1l5424 0A3C  
                                   i1l5416 0A26                                     i1l5520 0D37  
                                   i1l5426 0A40                                     i1l5418 0A29  
                                   i1l5530 0D68                                     i1l5522 0D39  
                                   i1l6170 0A4F                                     i1l5428 0A42  
                                   i1l5540 0D87                                     i1l5524 0D43  
                                   i1l5532 0D69                                     i1l6172 0A5E  
                                   i1l5542 0D88                                     i1l5526 0D4F  
                                   i1l5534 0D7F                                     i1l6174 0A64  
                                   i1l5544 0D93                                     i1l5536 0D82  
                                   i1l5528 0D5B                                     i1l5800 0F21  
                                   i1l6168 0A4C                                     i1l6440 0006  
                                   i1l5538 0D85                                     i1l5810 0F45  
                                   i1l5802 0F26                                     i1l6450 0022  
                                   i1l6442 000B                                     i1l5820 0F59  
                                   i1l5812 0F48                                     i1l5804 0F2A  
                                   i1l6460 003B                                     i1l6452 0023  
                                   i1l6444 0013                                     i1l5822 0F5B  
                                   i1l5814 0F4A                                     i1l5806 0F2B  
                                   i1l6462 0042                                     i1l6470 0053  
                                   i1l6446 0019                                     i1l6454 002B  
                                   i1l5816 0F4B                                     i1l5808 0F42  
                                   i1l6472 0057                                     i1l6464 0047  
                                   i1l6456 0033                                     i1l6448 001D  
                                   i1l5818 0F55                                     i1l5770 0ED2  
                                   i1l6474 0058                                     i1l6466 004D  
                                   i1l6458 0037                                     i1l5780 0EE4  
                                   i1l5772 0ED5                                     i1l6468 004E  
                                   i1l5790 0F04                                     i1l5782 0EEA  
                                   i1l5774 0ED7                                     i1l5766 0ECA  
                                   i1l5792 0F0D                                     i1l5784 0EF1  
                                   i1l5776 0ED8                                     i1l5768 0ED1  
                                   i1l5794 0F0F                                     i1l5786 0EF7  
                                   i1l5778 0EDE                                     i1l5796 0F15  
                                   i1l5788 0EFE                                     i1l5798 0F1B  
                            setData@iValue 002E                                     i1l6994 0F34  
                                   i1l6996 0D71                                     u410_20 0EDE  
                                   u410_21 0EDD                                     u411_20 0EE4  
                                   u411_21 0EE3                                     u260_20 054D  
                                   u412_20 0EF1                                     u260_21 054C  
                                   u412_21 0EF0                                     u261_20 0564  
                                   u413_20 0EFE                                     u261_21 0563  
                                   u413_21 0EFD                                     u270_20 05CF  
                                   u262_20 0578                                     u254_20 0518  
                                   u270_21 05CE                                     u262_21 0577  
                                   u254_21 0517                                     u414_25 0F4E  
                                   u271_20 05D5                                     u263_20 057E  
                                   u255_20 051E                                     u271_21 05D4  
                                   u263_21 057D                                     u255_21 051D  
                                   u280_20 0DC1                                     u272_20 05EA  
                                   u264_20 0584                                     u256_20 0523  
                                   u280_21 0DC0                                     u272_21 05E9  
                                   u264_21 0583                                     u256_21 0522  
                                   u281_20 0DCF                                     u273_20 05F0  
                                   u265_20 0590                                     u257_20 0528  
                                   u409_20 0ED0                                     u281_21 0DCE  
                                   u273_21 05EF                                     u265_21 058F  
                                   u257_21 0527                                     u409_21 0ECF  
                        _setCursorPosition 0CD6                                     u282_20 0DEF  
                                   u274_20 05F6                                     u266_20 059B  
                                   u258_20 0532                                     u282_21 0DEE  
                                   u274_21 05F5                                     u266_21 059A  
                                   u258_21 0531                                     u275_20 0612  
                                   u267_20 05AF                                     u259_20 0538  
                                   u283_20 09A6                                     u275_21 0611  
                                   u267_21 05AE                                     u259_21 0537  
                                   u283_21 09A5                                     u363_25 0B8A  
                                   u276_20 062A                                     u268_20 05BA  
                                   u460_20 0042                                     u276_21 0629  
                                   u268_21 05B9                                     u460_21 0041  
                                   u364_25 0B98                                     u277_20 0D9D  
                                   u269_20 05C5                                     u365_20 0A4A  
                                   u461_20 004D                                     u277_21 0D9C  
                                   u269_21 05C4                                     u365_21 0A49  
                                   u461_21 004C                                     u278_20 0DA3  
                                   u446_20 0A74                                     u462_20 0057  
                                   u278_21 0DA2                                     u446_21 0A73  
                                   u462_21 0056                                     u279_20 0DBC  
                                   u279_21 0DBB                                     u375_25 0D8B  
                                   u458_20 0019                                     u458_21 0018  
                                   u459_20 0037                                     u459_21 0036  
                                   _SPBRGH 019C                                     _SPBRGL 019B  
                                   _SSPADD 0212                                     _SSPBUF 0211  
                       ?_setCursorPosition 0030                          _TempUpdateRequest 099F  
                      ??_setCursorPosition 0031                                  ??___awdiv 0030  
                                ??___awmod 0030                       __end_of_lcdWriteText 0AF4  
                  main@wEnterBottonPressed 02CC                                     _memcpy 0B1F  
                             ?_printEM1812 0035                                     _memset 06EE  
                       ?_TempUpdateRequest 0070                                     _wTrial 00B2  
                         ___awdiv@quotient 0033                            ___awmod@divisor 002C  
              __size_of_GetNewReceivedData 0023                              _I2C_Interrupt 0512  
                          ___awmod@counter 0031                                     _strcat 09AC  
                                   _strcpy 0A76                                     _strlen 09FF  
                                ??_initLCD 0032                                  ??_setData 002C  
                      ??_TempUpdateRequest 0070                   __end_of_moveCursorToHome 0947  
                __end_of_setCursorPosition 0D36                         _gTxReadingPosition 0050  
                               _gErrorCode 00B1                          __end_ofi1_setData 0BC0  
                   __size_of_writeInsNoChk 0018                                _gESPCommand 005F  
                  __end_of__initialization 00C0                           main@wEditingMode 02BE  
                    __size_of_clearDisplay 0005                 setCursorPosition@wLCDIndex 0034  
                __end_of_TempUpdateRequest 09AC                             __pcstackCOMMON 0070  
                         _Esp8266SetupWifi 0938                               __pidataBANK0 0924  
                             __pidataBANK1 0951                          I2C_SendData@iData 003C  
                            __end_of_myint 0060                             ?_I2C_Interrupt 0070  
            __size_ofi1_SetToSendDataToLCD 0006                                  ?_AddTrace 0042  
                     writeInsNoChk@iOpCode 0030                 setCursorPosition@iPosition 0030  
                           _wInterruptText 01A0                             _OPTION_REGbits 0095  
                                ?_Debounce 002C                               _clearDisplay 0907  
                                  ??_myint 0024                                 __pbssBANK0 0045  
                               __pbssBANK1 00A0                                 __pbssBANK2 0120  
                               __pbssBANK3 01A0                                 __pbssBANK4 0220  
                        _wReceptionCounter 0057               __size_ofi1_setCursorPosition 0062  
                            ?_setCursorOff 0070                      EM1812EntryPoint@F1960 00C6  
                    EM1812EntryPoint@F1962 00A0                            __CFG_VCAPEN$OFF 0000  
                  __size_ofi1_lcdWriteText 002A                            i1setData@iValue 0072  
                               __pmaintext 00C4                                  ?_PrintLog 0070  
                   __size_ofi1_waitLCDBusy 0029                              ??_I2C_GetData 002E  
                               __pintentry 0004                                    ?_memcpy 002C  
                            _writeInsNoChk 09C4                                    ?_memset 002C  
                               ??_AddTrace 00B7                               ?_writeInsChk 0070  
                                  ?_strcat 003E                                    ?_strcpy 0032  
                                  ?_strlen 002C                            _EUSARTInterrupt 0D98  
              GetNewReceivedData@oDataSize 0038                               ?_writeTxtChk 0070  
                               ??_Debounce 002E                 __size_of_setCursorPosition 0060  
                     __size_of_waitLCDBusy 002A                             ??_setCursorOff 0032  
                     AddTrace@iSizeOfoText 0042               EM1812EntryPoint@oTemperature 003D  
                          _gTxTransmitSize 004E                      __size_of_lcdWriteText 002A  
                     main@wTemperaturePrev 02C1                 __size_of_TempUpdateRequest 000D  
              __size_of_SetToSendDataToLCD 0006                 ?_Esp8266SetAccessPointMode 0070  
                               ??_PrintLog 003E          EM1812EntryPoint@SetGetTempCommand 00B7  
                          ??_I2C_Interrupt 0072                                    ___awdiv 0E5F  
                                  ___awmod 07A2                            printEM1812@wTen 003D  
                           ?_writeInsNoChk 0070                                 _wTempState 005A  
                          __CFG_STVREN$OFF 0000                  __size_of_EM1812EntryPoint 0130  
                          Debounce@iSwitch 0030                           _wI2CCommandState 0063  
                          __size_of_memcpy 002F                            __size_of_memset 00B4  
                                  __ptext1 097C                                    __ptext2 0971  
                                  __ptext3 0638                                    __ptext4 07A2  
                                  __ptext5 0E5F                                    __ptext6 0966  
                                  __ptext7 093F                                    __ptext8 0DFB  
                                  __ptext9 0907                            Debounce@ioTimer 002C  
                          __size_of_strcat 0018                       __size_of_printEM1812 00B6  
                          __size_of_strcpy 002A                            __size_of_strlen 0024  
                                  _initLCD 0DFB                        __end_of_I2C_GetData 0B84  
                                _T1CONbits 0018                            _gEspRxBufferPtr 0045  
                         ___awmod@dividend 002E                                    _setData 0BC0  
                        main@wDebounceDown 02C8                              i1_waitLCDBusy 0A23  
                                  clrloop0 0988                       end_of_initialization 00C0  
                             _lcdWriteText 0ACA              __size_of_SetToReadDataFromLCD 0006  
                                  memcpy@d 0034                                    memcpy@n 0030  
                                  memcpy@s 0036                                    init_ram 0993  
                                  memset@c 002C                                    memset@k 0032  
                                  memset@n 002E                                    memset@s 0035  
                                  initloop 0994               i1setCursorPosition@wLCDIndex 0078  
                         __CFG_CLKOUTEN$ON 0000              __size_of_setNotBlinkingCursor 000B  
                     _wI2CTxNbOfByteToSend 0055                                  _RCSTAbits 019D  
        __end_of_Esp8266SetAccessPointMode 0938                    __end_of_EUSARTInterrupt 0DFB  
                             _gEUSARTError 004F                                    strcpy@d 003C  
                                  strlen@a 0030                                    strcpy@s 003A  
                                  strlen@s 002C                                  _PORTAbits 000C  
                                _PORTBbits 000D                                  _PORTCbits 000E  
             i1setCursorPosition@iPosition 0074                                 _powerOnLcd 0966  
                     main@wUpBottonPressed 02CA                                  _TRISAbits 008C  
                           ?i1_waitLCDBusy 0070                                  _TRISCbits 008E  
                        ?_moveCursorToHome 0070                          _Esp8266OpenSocket 092A  
                 __end_of_Esp8266SetupWifi 093F                        printEM1812@wDecimal 003B  
                        _wTimer1IntCounter 004B                         ??_moveCursorToHome 0032  
                      printEM1812@oTextOut 0037                         ?_Esp8266OpenSocket 0070  
                           i1_lcdWriteText 0A4C                                  _TXSTAbits 019E  
                                i1_setData 0B84                        waitLCDBusy@busyFlag 002E  
                      ??_Esp8266OpenSocket 002C                     __size_ofi1_writeTxtChk 0098  
                          ??_writeInsNoChk 002F                 __end_of_GetNewReceivedData 09FF  
                              _I2C_GetData 0B4E                        i1_setCursorPosition 0D36  
                            _gEsp8266State 0060                           _mWritingPosition 005B  
                     __end_of_setCursorOff 097C                             __end_of_memcpy 0B4E  
                           __end_of_memset 07A2                printEM1812@wWritingPosition 003E  
                        myint@wEUSARTError 0025                          __size_of_AddTrace 0049  
                           __end_of_strcat 09C4                             _wTimer0Counter 0059  
                           __end_of_strcpy 0AA0                             __end_of_strlen 0A23  
                     __size_of_writeInsChk 000B                  __end_of_Esp8266OpenSocket 0931  
                      start_initialization 0062                       __size_of_writeTxtChk 009F  
                        __size_of_Debounce 004C                     __end_ofi1_lcdWriteText 0A76  
             __end_ofi1_SetToSendDataToLCD 0912                       ?i1_setCursorPosition 0074  
                               ?i1_setData 0070                       i1writeTxtChk@iOpCode 007B  
                          main@wDebounceUp 02C6                           ?_EUSARTInterrupt 0070  
                 ??i1_SetToReadDataFromLCD 0070                                __pdataBANK0 005E  
                              __pdataBANK1 00C6                           _EM1812EntryPoint 03E2  
                            _wI2CTxSendPos 0052                                   ??_memcpy 0032  
                        __size_of_PrintLog 002B                                   ??_memset 0030  
                               memset@dest 0034                                   ??_strcat 0042  
                                 ??_strcpy 0036                                   ??_strlen 002E  
                 i1setCursorPosition@iLine 0077                                ?_powerOnLcd 0070  
                          ??i1_waitLCDBusy 0070                                __pbssBIGRAM 2328  
                         uint16_tToa@F1884 00A8                                  ___latbits 0003  
                            i1_writeTxtChk 0EC9                              __pcstackBANK0 0020  
                            __pcstackBANK1 00B7                              __pcstackBANK5 02A0  
                        printEM1812@wUnity 003A                  Esp8266Entrypoint@wCounter 0048  
                            ?_I2C_SendData 0038                      ??i1_setCursorPosition 0075  
                          ?i1_lcdWriteText 007C                              ?_GetI2CStatus 002C  
                             _wTemperature 00B3                         writeInsChk@iOpCode 0031  
              ??_Esp8266SetAccessPointMode 002C                                   ?___awdiv 002C  
                                 ?___awmod 002C                                  __pswtext1 0800  
                                _wCounter2 00B0                                   ?_initLCD 0070  
                           ?i1_writeTxtChk 0070                 __size_of_Esp8266OpenSocket 0007  
                                 ?_setData 0070                              ??_waitLCDBusy 002C  
                                _wHumidity 00B5                             ??_I2C_SendData 003A  
                            PrintLog@iText 0041                             ??_GetI2CStatus 002E  
                           __size_of_myint 005C                           _mDisplayOnOffReg 005D  
               __end_of_SetToSendDataToLCD 091E                                  clear_ram0 0987  
                              ??i1_setData 0070                                   _PIE1bits 0091  
                                 _PIE2bits 0092                        __size_of_powerOnLcd 000B  
                                 _PIR1bits 0011                                   _PIR2bits 0012  
                    __size_of_setCursorOff 000B                                  main@F2379 00CA  
                 _wReceptionBufferPosition 0058                          Debounce@swPressed 002D  
             __end_of_SetToReadDataFromLCD 0924                              ??_printEM1812 0038  
                    __end_of_I2C_Interrupt 0638            __size_ofi1_SetToReadDataFromLCD 0006  
              lcdWriteText@wCharReadingPos 003D                                   _AddTrace 0C41  
                     i1_SetToSendDataToLCD 090C                           _wI2CRxBufferSize 0061  
                               myint@wText 0027                                  main@wConv 02A0  
                                main@wMenu 02CD               __end_of_setNotBlinkingCursor 0987  
                                main@wTemp 02A6                                   _Debounce 0C8A  
                _Esp8266SetAccessPointMode 0931                               _gEsp8266Echo 005E  
                        ?_Esp8266SetupWifi 0070                          lcdWriteText@iText 0038  
                      __end_of_waitLCDBusy 0ACA                         ??_Esp8266SetupWifi 002C  
                          main@wUpdateMenu 02C3                               _setCursorOff 0971  
                             _wI2CRxBuffer 0134                  __size_of_moveCursorToHome 0008  
                                memcpy@tmp 0033                               _wI2CTxBuffer 0148  
                                 _PrintLog 0AF4                               ?_I2C_GetData 002C  
                         __size_of___awdiv 006A                           __size_of___awmod 005E  
                    ?i1_SetToSendDataToLCD 0070                           _wI2CTxBufferSize 0062  
                          ??i1_writeTxtChk 0079                                 _ANSELAbits 018C  
                               _ANSELCbits 018E                           __size_of_initLCD 0064  
                               strcat@dest 003E                        __end_of_printEM1812 06EE  
                       _GetNewReceivedData 09DC                  PrintLog@wInterruptTextLen 0040  
                         __size_of_setData 003C                              ?_clearDisplay 0070  
                                 __ptext10 095B                                   __ptext11 09C4  
                                 __ptext20 0918                                   __ptext12 0AF4  
                                 __ptext21 0938                                   __ptext13 06EE  
                                 __ptext30 0C8A                                   __ptext22 0931  
                                 __ptext14 0ACA                                   __ptext31 0C41  
                                 __ptext23 092A                                   __ptext15 0F61  
                                 __ptext40 0912                                   __ptext32 09AC  
                                 __ptext24 03E2                                   __ptext16 0CD6  
                                 __ptext41 0B84                                   __ptext33 09FF  
                                 __ptext25 0BFC                                   __ptext17 0AA0  
                                 __ptext42 090C                                   __ptext34 0A76  
                                 __ptext26 0B4E                                   __ptext18 091E  
                                 __ptext43 099F                                   __ptext27 09DC  
                                 __ptext19 0BC0                                   __ptext44 0512  
                                 __ptext36 0A4C                                   __ptext28 0B1F  
                                 __ptext45 0D98                                   __ptext37 0EC9  
                                 __ptext29 0947                                   __ptext38 0D36  
                                 __ptext39 0A23                    GetNewReceivedData@oData 003B  
                                 _wHexTemp 0120                      main@wIterationCounter 02BC  
                   i1_SetToReadDataFromLCD 0912                   __end_of_EM1812EntryPoint 0512  
                               strcpy@dest 0032                        ?_GetNewReceivedData 0038  
                         _gEspRxBufferSize 004D                                   _wTempSet 00CE  
                            __size_of_main 031E                         main@wDebounceEnter 02C4  
                I2C_SendData@iNumberofByte 0038                         writeTxtChk@iOpCode 0037  
                                 int$flags 007E                       __end_of_I2C_SendData 0C41  
                    __end_of_writeInsNoChk 09DC                          main@wHumidityPrev 02BF  
                     __end_of_GetI2CStatus 0951                       ??_GetNewReceivedData 0039  
                            ??_writeInsChk 0031                                _OSCSTATbits 009A  
                             ??_powerOnLcd 0032                              ??_writeTxtChk 0035  
                               _INTCONbits 000B                _gEspRxBufferReadingPosition 004C  
                         ??i1_lcdWriteText 0020                                   memcpy@d1 002C  
                                 memcpy@s1 002E                                _waitLCDBusy 0AA0  
                           ??_clearDisplay 0032                             __pstringtext10 1097  
                           __pstringtext11 10A5                             __pstringtext20 110F  
                           __pstringtext12 10B3                             __pstringtext21 1118  
                           __pstringtext13 10C1                             __pstringtext30 1150  
                           __pstringtext22 1121                             __pstringtext14 10CF  
                           __pstringtext31 1154                             __pstringtext23 1129  
                           __pstringtext15 10DC                             __pstringtext32 1158  
                           __pstringtext24 1130                             __pstringtext16 10E8  
                           __pstringtext33 115C                             __pstringtext25 1136  
                           __pstringtext17 10F3                             __pstringtext34 115F  
                           __pstringtext26 113C                             __pstringtext18 10FD  
                           __pstringtext35 0000                             __pstringtext27 1141  
                           __pstringtext19 1106                             __pstringtext28 1146  
                           __pstringtext29 114B                           _wNewI2CReception 0053  
                   setCursorPosition@iLine 0033                                   intlevel1 0000  
                   main@wDownBottonPressed 02CB                       _SetToReadDataFromLCD 091E  
                                strcat@src 0040                                  strcpy@src 0034  
                               _OSCCONbits 0099                       _setNotBlinkingCursor 097C  
                       __end_of_powerOnLcd 0971                     ??i1_SetToSendDataToLCD 0070  
                              _printEM1812 0638                              __pstringtext1 1000  
                            __pstringtext2 1012                              __pstringtext3 1023  
                            __pstringtext4 1034                              __pstringtext5 1045  
                            __pstringtext6 1056                              __pstringtext7 1067  
                            __pstringtext8 1077                              __pstringtext9 1087  
                 __size_of_EUSARTInterrupt 0063                __end_ofi1_setCursorPosition 0D98  
                    __end_ofi1_waitLCDBusy 0A4C  Esp8266Entrypoint@prevEusartNbByteReceived 0049  
                      __end_of_writeInsChk 0966                                _SSPCON1bits 0215  
                              _SSPCON2bits 0216                                _SSPCON3bits 0217  
                          _gEusartRXBuffer 2328                              ?_lcdWriteText 0038  
                      __end_of_writeTxtChk 1000                            _gEusartTXBuffer 0220  
                    ?_SetToReadDataFromLCD 0070            EM1812EntryPoint@ReceptionBuffer 00BB  
       __size_of_Esp8266SetAccessPointMode 0007                      i1waitLCDBusy@busyFlag 0072  
                    ?_setNotBlinkingCursor 0070                           _moveCursorToHome 093F  
                   _mCursorDisplayShiftReg 005C  
