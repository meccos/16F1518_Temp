

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Mar 13 21:53:19 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F1518 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   120                           PORTB equ 0Dh ;# 
   121  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   122                           PORTC equ 0Eh ;# 
   123  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   124                           PORTE equ 010h ;# 
   125  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   126                           PIR1 equ 011h ;# 
   127  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   128                           PIR2 equ 012h ;# 
   129  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   130                           TMR0 equ 015h ;# 
   131  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   132                           TMR1 equ 016h ;# 
   133  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   134                           TMR1L equ 016h ;# 
   135  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   136                           TMR1H equ 017h ;# 
   137  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   138                           T1CON equ 018h ;# 
   139  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   140                           T1GCON equ 019h ;# 
   141  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   142                           TMR2 equ 01Ah ;# 
   143  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   144                           PR2 equ 01Bh ;# 
   145  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   146                           T2CON equ 01Ch ;# 
   147  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   148                           TRISA equ 08Ch ;# 
   149  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   150                           TRISB equ 08Dh ;# 
   151  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   152                           TRISC equ 08Eh ;# 
   153  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   154                           TRISE equ 090h ;# 
   155  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   156                           PIE1 equ 091h ;# 
   157  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   158                           PIE2 equ 092h ;# 
   159  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   160                           OPTION_REG equ 095h ;# 
   161  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   162                           PCON equ 096h ;# 
   163  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   164                           WDTCON equ 097h ;# 
   165  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   166                           OSCCON equ 099h ;# 
   167  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   168                           OSCSTAT equ 09Ah ;# 
   169  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   170                           ADRES equ 09Bh ;# 
   171  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   172                           ADRESL equ 09Bh ;# 
   173  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   174                           ADRESH equ 09Ch ;# 
   175  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   176                           ADCON0 equ 09Dh ;# 
   177  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   178                           ADCON1 equ 09Eh ;# 
   179  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   180                           LATA equ 010Ch ;# 
   181  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   182                           LATB equ 010Dh ;# 
   183  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   184                           LATC equ 010Eh ;# 
   185  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   186                           BORCON equ 0116h ;# 
   187  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   188                           FVRCON equ 0117h ;# 
   189  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   190                           APFCON equ 011Dh ;# 
   191  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   192                           ANSELA equ 018Ch ;# 
   193  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   194                           ANSELB equ 018Dh ;# 
   195  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   196                           ANSELC equ 018Eh ;# 
   197  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   198                           PMADR equ 0191h ;# 
   199  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   200                           PMADRL equ 0191h ;# 
   201  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   202                           PMADRH equ 0192h ;# 
   203  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   204                           PMDAT equ 0193h ;# 
   205  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   206                           PMDATL equ 0193h ;# 
   207  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   208                           PMDATH equ 0194h ;# 
   209  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   210                           PMCON1 equ 0195h ;# 
   211  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   212                           PMCON2 equ 0196h ;# 
   213  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   214                           VREGCON equ 0197h ;# 
   215  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   216                           RCREG equ 0199h ;# 
   217  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   218                           TXREG equ 019Ah ;# 
   219  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   220                           SP1BRG equ 019Bh ;# 
   221  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   222                           SP1BRGL equ 019Bh ;# 
   223  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   224                           SPBRG equ 019Bh ;# 
   225  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   226                           SPBRGL equ 019Bh ;# 
   227  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   228                           SP1BRGH equ 019Ch ;# 
   229  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   230                           SPBRGH equ 019Ch ;# 
   231  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   232                           RCSTA equ 019Dh ;# 
   233  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   234                           TXSTA equ 019Eh ;# 
   235  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   236                           BAUDCON equ 019Fh ;# 
   237  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   238                           WPUB equ 020Dh ;# 
   239  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   240                           WPUE equ 0210h ;# 
   241  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   242                           SSPBUF equ 0211h ;# 
   243  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   244                           SSP1BUF equ 0211h ;# 
   245  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   246                           SSPADD equ 0212h ;# 
   247  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   248                           SSP1ADD equ 0212h ;# 
   249  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   250                           SSPMSK equ 0213h ;# 
   251  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   252                           SSP1MSK equ 0213h ;# 
   253  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   254                           SSPSTAT equ 0214h ;# 
   255  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   256                           SSP1STAT equ 0214h ;# 
   257  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   258                           SSPCON1 equ 0215h ;# 
   259  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   260                           SSPCON equ 0215h ;# 
   261  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   262                           SSP1CON1 equ 0215h ;# 
   263  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   264                           SSPCON2 equ 0216h ;# 
   265  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   266                           SSP1CON2 equ 0216h ;# 
   267  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   268                           SSPCON3 equ 0217h ;# 
   269  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   270                           SSP1CON3 equ 0217h ;# 
   271  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   272                           CCPR1 equ 0291h ;# 
   273  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   274                           CCPR1L equ 0291h ;# 
   275  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   276                           CCPR1H equ 0292h ;# 
   277  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   278                           CCP1CON equ 0293h ;# 
   279  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   280                           CCPR2 equ 0298h ;# 
   281  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   282                           CCPR2L equ 0298h ;# 
   283  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   284                           CCPR2H equ 0299h ;# 
   285  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   286                           CCP2CON equ 029Ah ;# 
   287  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   288                           IOCBP equ 0394h ;# 
   289  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   290                           IOCBN equ 0395h ;# 
   291  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   292                           IOCBF equ 0396h ;# 
   293  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   294                           STATUS_SHAD equ 0FE4h ;# 
   295  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   296                           WREG_SHAD equ 0FE5h ;# 
   297  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   298                           BSR_SHAD equ 0FE6h ;# 
   299  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   300                           PCLATH_SHAD equ 0FE7h ;# 
   301  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   302                           FSR0L_SHAD equ 0FE8h ;# 
   303  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   304                           FSR0H_SHAD equ 0FE9h ;# 
   305  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   306                           FSR1L_SHAD equ 0FEAh ;# 
   307  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   308                           FSR1H_SHAD equ 0FEBh ;# 
   309  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   310                           STKPTR equ 0FEDh ;# 
   311  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   312                           TOSL equ 0FEEh ;# 
   313  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   314                           TOSH equ 0FEFh ;# 
   315  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   316                           INDF0 equ 00h ;# 
   317  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   318                           INDF1 equ 01h ;# 
   319  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   320                           PCL equ 02h ;# 
   321  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   322                           STATUS equ 03h ;# 
   323  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   324                           FSR0L equ 04h ;# 
   325  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   326                           FSR0H equ 05h ;# 
   327  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   328                           FSR1L equ 06h ;# 
   329  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   330                           FSR1H equ 07h ;# 
   331  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   332                           BSR equ 08h ;# 
   333  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   334                           WREG equ 09h ;# 
   335  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   336                           PCLATH equ 0Ah ;# 
   337  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   338                           INTCON equ 0Bh ;# 
   339  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   340                           PORTA equ 0Ch ;# 
   341  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   342                           PORTB equ 0Dh ;# 
   343  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   344                           PORTC equ 0Eh ;# 
   345  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   346                           PORTE equ 010h ;# 
   347  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   348                           PIR1 equ 011h ;# 
   349  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   350                           PIR2 equ 012h ;# 
   351  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   352                           TMR0 equ 015h ;# 
   353  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   354                           TMR1 equ 016h ;# 
   355  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   356                           TMR1L equ 016h ;# 
   357  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   358                           TMR1H equ 017h ;# 
   359  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   360                           T1CON equ 018h ;# 
   361  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   362                           T1GCON equ 019h ;# 
   363  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   364                           TMR2 equ 01Ah ;# 
   365  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   366                           PR2 equ 01Bh ;# 
   367  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   368                           T2CON equ 01Ch ;# 
   369  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   370                           TRISA equ 08Ch ;# 
   371  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   372                           TRISB equ 08Dh ;# 
   373  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   374                           TRISC equ 08Eh ;# 
   375  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   376                           TRISE equ 090h ;# 
   377  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   378                           PIE1 equ 091h ;# 
   379  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   380                           PIE2 equ 092h ;# 
   381  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   382                           OPTION_REG equ 095h ;# 
   383  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   384                           PCON equ 096h ;# 
   385  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   386                           WDTCON equ 097h ;# 
   387  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   388                           OSCCON equ 099h ;# 
   389  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   390                           OSCSTAT equ 09Ah ;# 
   391  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   392                           ADRES equ 09Bh ;# 
   393  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   394                           ADRESL equ 09Bh ;# 
   395  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   396                           ADRESH equ 09Ch ;# 
   397  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   398                           ADCON0 equ 09Dh ;# 
   399  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   400                           ADCON1 equ 09Eh ;# 
   401  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   402                           LATA equ 010Ch ;# 
   403  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   404                           LATB equ 010Dh ;# 
   405  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   406                           LATC equ 010Eh ;# 
   407  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   408                           BORCON equ 0116h ;# 
   409  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   410                           FVRCON equ 0117h ;# 
   411  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   412                           APFCON equ 011Dh ;# 
   413  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   414                           ANSELA equ 018Ch ;# 
   415  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   416                           ANSELB equ 018Dh ;# 
   417  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   418                           ANSELC equ 018Eh ;# 
   419  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   420                           PMADR equ 0191h ;# 
   421  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   422                           PMADRL equ 0191h ;# 
   423  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   424                           PMADRH equ 0192h ;# 
   425  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   426                           PMDAT equ 0193h ;# 
   427  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   428                           PMDATL equ 0193h ;# 
   429  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   430                           PMDATH equ 0194h ;# 
   431  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   432                           PMCON1 equ 0195h ;# 
   433  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   434                           PMCON2 equ 0196h ;# 
   435  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   436                           VREGCON equ 0197h ;# 
   437  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   438                           RCREG equ 0199h ;# 
   439  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   440                           TXREG equ 019Ah ;# 
   441  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   442                           SP1BRG equ 019Bh ;# 
   443  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   444                           SP1BRGL equ 019Bh ;# 
   445  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   446                           SPBRG equ 019Bh ;# 
   447  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   448                           SPBRGL equ 019Bh ;# 
   449  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   450                           SP1BRGH equ 019Ch ;# 
   451  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   452                           SPBRGH equ 019Ch ;# 
   453  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   454                           RCSTA equ 019Dh ;# 
   455  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   456                           TXSTA equ 019Eh ;# 
   457  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   458                           BAUDCON equ 019Fh ;# 
   459  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   460                           WPUB equ 020Dh ;# 
   461  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   462                           WPUE equ 0210h ;# 
   463  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   464                           SSPBUF equ 0211h ;# 
   465  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   466                           SSP1BUF equ 0211h ;# 
   467  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   468                           SSPADD equ 0212h ;# 
   469  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   470                           SSP1ADD equ 0212h ;# 
   471  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   472                           SSPMSK equ 0213h ;# 
   473  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   474                           SSP1MSK equ 0213h ;# 
   475  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   476                           SSPSTAT equ 0214h ;# 
   477  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   478                           SSP1STAT equ 0214h ;# 
   479  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   480                           SSPCON1 equ 0215h ;# 
   481  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   482                           SSPCON equ 0215h ;# 
   483  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   484                           SSP1CON1 equ 0215h ;# 
   485  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   486                           SSPCON2 equ 0216h ;# 
   487  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   488                           SSP1CON2 equ 0216h ;# 
   489  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   490                           SSPCON3 equ 0217h ;# 
   491  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   492                           SSP1CON3 equ 0217h ;# 
   493  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   494                           CCPR1 equ 0291h ;# 
   495  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   496                           CCPR1L equ 0291h ;# 
   497  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   498                           CCPR1H equ 0292h ;# 
   499  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   500                           CCP1CON equ 0293h ;# 
   501  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   502                           CCPR2 equ 0298h ;# 
   503  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   504                           CCPR2L equ 0298h ;# 
   505  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   506                           CCPR2H equ 0299h ;# 
   507  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   508                           CCP2CON equ 029Ah ;# 
   509  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   510                           IOCBP equ 0394h ;# 
   511  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   512                           IOCBN equ 0395h ;# 
   513  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   514                           IOCBF equ 0396h ;# 
   515  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   516                           STATUS_SHAD equ 0FE4h ;# 
   517  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   518                           WREG_SHAD equ 0FE5h ;# 
   519  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   520                           BSR_SHAD equ 0FE6h ;# 
   521  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   522                           PCLATH_SHAD equ 0FE7h ;# 
   523  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   524                           FSR0L_SHAD equ 0FE8h ;# 
   525  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   526                           FSR0H_SHAD equ 0FE9h ;# 
   527  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   528                           FSR1L_SHAD equ 0FEAh ;# 
   529  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   530                           FSR1H_SHAD equ 0FEBh ;# 
   531  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   532                           STKPTR equ 0FEDh ;# 
   533  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   534                           TOSL equ 0FEEh ;# 
   535  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   536                           TOSH equ 0FEFh ;# 
   537  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   538                           INDF0 equ 00h ;# 
   539  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   540                           INDF1 equ 01h ;# 
   541  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   542                           PCL equ 02h ;# 
   543  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   544                           STATUS equ 03h ;# 
   545  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   546                           FSR0L equ 04h ;# 
   547  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   548                           FSR0H equ 05h ;# 
   549  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   550                           FSR1L equ 06h ;# 
   551  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   552                           FSR1H equ 07h ;# 
   553  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   554                           BSR equ 08h ;# 
   555  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   556                           WREG equ 09h ;# 
   557  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   558                           PCLATH equ 0Ah ;# 
   559  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   560                           INTCON equ 0Bh ;# 
   561  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   562                           PORTA equ 0Ch ;# 
   563  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   564                           PORTB equ 0Dh ;# 
   565  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   566                           PORTC equ 0Eh ;# 
   567  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   568                           PORTE equ 010h ;# 
   569  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   570                           PIR1 equ 011h ;# 
   571  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   572                           PIR2 equ 012h ;# 
   573  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   574                           TMR0 equ 015h ;# 
   575  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   576                           TMR1 equ 016h ;# 
   577  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   578                           TMR1L equ 016h ;# 
   579  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   580                           TMR1H equ 017h ;# 
   581  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   582                           T1CON equ 018h ;# 
   583  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   584                           T1GCON equ 019h ;# 
   585  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   586                           TMR2 equ 01Ah ;# 
   587  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   588                           PR2 equ 01Bh ;# 
   589  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   590                           T2CON equ 01Ch ;# 
   591  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   592                           TRISA equ 08Ch ;# 
   593  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   594                           TRISB equ 08Dh ;# 
   595  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   596                           TRISC equ 08Eh ;# 
   597  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   598                           TRISE equ 090h ;# 
   599  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   600                           PIE1 equ 091h ;# 
   601  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   602                           PIE2 equ 092h ;# 
   603  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   604                           OPTION_REG equ 095h ;# 
   605  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   606                           PCON equ 096h ;# 
   607  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   608                           WDTCON equ 097h ;# 
   609  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   610                           OSCCON equ 099h ;# 
   611  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   612                           OSCSTAT equ 09Ah ;# 
   613  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   614                           ADRES equ 09Bh ;# 
   615  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   616                           ADRESL equ 09Bh ;# 
   617  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   618                           ADRESH equ 09Ch ;# 
   619  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   620                           ADCON0 equ 09Dh ;# 
   621  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   622                           ADCON1 equ 09Eh ;# 
   623  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   624                           LATA equ 010Ch ;# 
   625  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   626                           LATB equ 010Dh ;# 
   627  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   628                           LATC equ 010Eh ;# 
   629  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   630                           BORCON equ 0116h ;# 
   631  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   632                           FVRCON equ 0117h ;# 
   633  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   634                           APFCON equ 011Dh ;# 
   635  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   636                           ANSELA equ 018Ch ;# 
   637  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   638                           ANSELB equ 018Dh ;# 
   639  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   640                           ANSELC equ 018Eh ;# 
   641  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   642                           PMADR equ 0191h ;# 
   643  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   644                           PMADRL equ 0191h ;# 
   645  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   646                           PMADRH equ 0192h ;# 
   647  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   648                           PMDAT equ 0193h ;# 
   649  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   650                           PMDATL equ 0193h ;# 
   651  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   652                           PMDATH equ 0194h ;# 
   653  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   654                           PMCON1 equ 0195h ;# 
   655  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   656                           PMCON2 equ 0196h ;# 
   657  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   658                           VREGCON equ 0197h ;# 
   659  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   660                           RCREG equ 0199h ;# 
   661  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   662                           TXREG equ 019Ah ;# 
   663  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   664                           SP1BRG equ 019Bh ;# 
   665  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   666                           SP1BRGL equ 019Bh ;# 
   667  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   668                           SPBRG equ 019Bh ;# 
   669  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   670                           SPBRGL equ 019Bh ;# 
   671  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   672                           SP1BRGH equ 019Ch ;# 
   673  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   674                           SPBRGH equ 019Ch ;# 
   675  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   676                           RCSTA equ 019Dh ;# 
   677  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   678                           TXSTA equ 019Eh ;# 
   679  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   680                           BAUDCON equ 019Fh ;# 
   681  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   682                           WPUB equ 020Dh ;# 
   683  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   684                           WPUE equ 0210h ;# 
   685  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   686                           SSPBUF equ 0211h ;# 
   687  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   688                           SSP1BUF equ 0211h ;# 
   689  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   690                           SSPADD equ 0212h ;# 
   691  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   692                           SSP1ADD equ 0212h ;# 
   693  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   694                           SSPMSK equ 0213h ;# 
   695  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   696                           SSP1MSK equ 0213h ;# 
   697  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   698                           SSPSTAT equ 0214h ;# 
   699  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   700                           SSP1STAT equ 0214h ;# 
   701  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   702                           SSPCON1 equ 0215h ;# 
   703  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   704                           SSPCON equ 0215h ;# 
   705  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   706                           SSP1CON1 equ 0215h ;# 
   707  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   708                           SSPCON2 equ 0216h ;# 
   709  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   710                           SSP1CON2 equ 0216h ;# 
   711  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   712                           SSPCON3 equ 0217h ;# 
   713  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   714                           SSP1CON3 equ 0217h ;# 
   715  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   716                           CCPR1 equ 0291h ;# 
   717  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   718                           CCPR1L equ 0291h ;# 
   719  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   720                           CCPR1H equ 0292h ;# 
   721  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   722                           CCP1CON equ 0293h ;# 
   723  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   724                           CCPR2 equ 0298h ;# 
   725  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   726                           CCPR2L equ 0298h ;# 
   727  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   728                           CCPR2H equ 0299h ;# 
   729  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   730                           CCP2CON equ 029Ah ;# 
   731  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   732                           IOCBP equ 0394h ;# 
   733  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   734                           IOCBN equ 0395h ;# 
   735  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   736                           IOCBF equ 0396h ;# 
   737  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   738                           STATUS_SHAD equ 0FE4h ;# 
   739  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   740                           WREG_SHAD equ 0FE5h ;# 
   741  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   742                           BSR_SHAD equ 0FE6h ;# 
   743  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   744                           PCLATH_SHAD equ 0FE7h ;# 
   745  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   746                           FSR0L_SHAD equ 0FE8h ;# 
   747  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   748                           FSR0H_SHAD equ 0FE9h ;# 
   749  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   750                           FSR1L_SHAD equ 0FEAh ;# 
   751  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   752                           FSR1H_SHAD equ 0FEBh ;# 
   753  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   754                           STKPTR equ 0FEDh ;# 
   755  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   756                           TOSL equ 0FEEh ;# 
   757  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   758                           TOSH equ 0FEFh ;# 
   759  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   760                           INDF0 equ 00h ;# 
   761  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   762                           INDF1 equ 01h ;# 
   763  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   764                           PCL equ 02h ;# 
   765  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   766                           STATUS equ 03h ;# 
   767  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   768                           FSR0L equ 04h ;# 
   769  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   770                           FSR0H equ 05h ;# 
   771  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   772                           FSR1L equ 06h ;# 
   773  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   774                           FSR1H equ 07h ;# 
   775  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   776                           BSR equ 08h ;# 
   777  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   778                           WREG equ 09h ;# 
   779  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   780                           PCLATH equ 0Ah ;# 
   781  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   782                           INTCON equ 0Bh ;# 
   783  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   784                           PORTA equ 0Ch ;# 
   785  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   786                           PORTB equ 0Dh ;# 
   787  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   788                           PORTC equ 0Eh ;# 
   789  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   790                           PORTE equ 010h ;# 
   791  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   792                           PIR1 equ 011h ;# 
   793  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   794                           PIR2 equ 012h ;# 
   795  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   796                           TMR0 equ 015h ;# 
   797  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   798                           TMR1 equ 016h ;# 
   799  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   800                           TMR1L equ 016h ;# 
   801  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   802                           TMR1H equ 017h ;# 
   803  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   804                           T1CON equ 018h ;# 
   805  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   806                           T1GCON equ 019h ;# 
   807  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   808                           TMR2 equ 01Ah ;# 
   809  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   810                           PR2 equ 01Bh ;# 
   811  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   812                           T2CON equ 01Ch ;# 
   813  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   814                           TRISA equ 08Ch ;# 
   815  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   816                           TRISB equ 08Dh ;# 
   817  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   818                           TRISC equ 08Eh ;# 
   819  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   820                           TRISE equ 090h ;# 
   821  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   822                           PIE1 equ 091h ;# 
   823  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   824                           PIE2 equ 092h ;# 
   825  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   826                           OPTION_REG equ 095h ;# 
   827  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   828                           PCON equ 096h ;# 
   829  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   830                           WDTCON equ 097h ;# 
   831  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   832                           OSCCON equ 099h ;# 
   833  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   834                           OSCSTAT equ 09Ah ;# 
   835  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   836                           ADRES equ 09Bh ;# 
   837  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   838                           ADRESL equ 09Bh ;# 
   839  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   840                           ADRESH equ 09Ch ;# 
   841  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   842                           ADCON0 equ 09Dh ;# 
   843  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   844                           ADCON1 equ 09Eh ;# 
   845  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   846                           LATA equ 010Ch ;# 
   847  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   848                           LATB equ 010Dh ;# 
   849  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   850                           LATC equ 010Eh ;# 
   851  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   852                           BORCON equ 0116h ;# 
   853  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   854                           FVRCON equ 0117h ;# 
   855  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   856                           APFCON equ 011Dh ;# 
   857  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   858                           ANSELA equ 018Ch ;# 
   859  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   860                           ANSELB equ 018Dh ;# 
   861  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   862                           ANSELC equ 018Eh ;# 
   863  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   864                           PMADR equ 0191h ;# 
   865  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   866                           PMADRL equ 0191h ;# 
   867  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   868                           PMADRH equ 0192h ;# 
   869  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   870                           PMDAT equ 0193h ;# 
   871  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   872                           PMDATL equ 0193h ;# 
   873  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   874                           PMDATH equ 0194h ;# 
   875  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   876                           PMCON1 equ 0195h ;# 
   877  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   878                           PMCON2 equ 0196h ;# 
   879  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   880                           VREGCON equ 0197h ;# 
   881  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   882                           RCREG equ 0199h ;# 
   883  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   884                           TXREG equ 019Ah ;# 
   885  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   886                           SP1BRG equ 019Bh ;# 
   887  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   888                           SP1BRGL equ 019Bh ;# 
   889  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   890                           SPBRG equ 019Bh ;# 
   891  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   892                           SPBRGL equ 019Bh ;# 
   893  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   894                           SP1BRGH equ 019Ch ;# 
   895  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   896                           SPBRGH equ 019Ch ;# 
   897  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   898                           RCSTA equ 019Dh ;# 
   899  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   900                           TXSTA equ 019Eh ;# 
   901  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   902                           BAUDCON equ 019Fh ;# 
   903  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   904                           WPUB equ 020Dh ;# 
   905  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   906                           WPUE equ 0210h ;# 
   907  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   908                           SSPBUF equ 0211h ;# 
   909  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   910                           SSP1BUF equ 0211h ;# 
   911  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   912                           SSPADD equ 0212h ;# 
   913  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   914                           SSP1ADD equ 0212h ;# 
   915  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   916                           SSPMSK equ 0213h ;# 
   917  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   918                           SSP1MSK equ 0213h ;# 
   919  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   920                           SSPSTAT equ 0214h ;# 
   921  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   922                           SSP1STAT equ 0214h ;# 
   923  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   924                           SSPCON1 equ 0215h ;# 
   925  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   926                           SSPCON equ 0215h ;# 
   927  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   928                           SSP1CON1 equ 0215h ;# 
   929  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   930                           SSPCON2 equ 0216h ;# 
   931  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   932                           SSP1CON2 equ 0216h ;# 
   933  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   934                           SSPCON3 equ 0217h ;# 
   935  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   936                           SSP1CON3 equ 0217h ;# 
   937  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   938                           CCPR1 equ 0291h ;# 
   939  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   940                           CCPR1L equ 0291h ;# 
   941  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   942                           CCPR1H equ 0292h ;# 
   943  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   944                           CCP1CON equ 0293h ;# 
   945  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   946                           CCPR2 equ 0298h ;# 
   947  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   948                           CCPR2L equ 0298h ;# 
   949  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   950                           CCPR2H equ 0299h ;# 
   951  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   952                           CCP2CON equ 029Ah ;# 
   953  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   954                           IOCBP equ 0394h ;# 
   955  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   956                           IOCBN equ 0395h ;# 
   957  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   958                           IOCBF equ 0396h ;# 
   959  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   960                           STATUS_SHAD equ 0FE4h ;# 
   961  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   962                           WREG_SHAD equ 0FE5h ;# 
   963  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   964                           BSR_SHAD equ 0FE6h ;# 
   965  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   966                           PCLATH_SHAD equ 0FE7h ;# 
   967  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   968                           FSR0L_SHAD equ 0FE8h ;# 
   969  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   970                           FSR0H_SHAD equ 0FE9h ;# 
   971  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   972                           FSR1L_SHAD equ 0FEAh ;# 
   973  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   974                           FSR1H_SHAD equ 0FEBh ;# 
   975  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   976                           STKPTR equ 0FEDh ;# 
   977  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   978                           TOSL equ 0FEEh ;# 
   979  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   980                           TOSH equ 0FEFh ;# 
   981  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   982                           INDF0 equ 00h ;# 
   983  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   984                           INDF1 equ 01h ;# 
   985  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   986                           PCL equ 02h ;# 
   987  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   988                           STATUS equ 03h ;# 
   989  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   990                           FSR0L equ 04h ;# 
   991  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   992                           FSR0H equ 05h ;# 
   993  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   994                           FSR1L equ 06h ;# 
   995  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   996                           FSR1H equ 07h ;# 
   997  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   998                           BSR equ 08h ;# 
   999  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1000                           WREG equ 09h ;# 
  1001  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1002                           PCLATH equ 0Ah ;# 
  1003  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1004                           INTCON equ 0Bh ;# 
  1005  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1006                           PORTA equ 0Ch ;# 
  1007  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1008                           PORTB equ 0Dh ;# 
  1009  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1010                           PORTC equ 0Eh ;# 
  1011  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1012                           PORTE equ 010h ;# 
  1013  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1014                           PIR1 equ 011h ;# 
  1015  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1016                           PIR2 equ 012h ;# 
  1017  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1018                           TMR0 equ 015h ;# 
  1019  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1020                           TMR1 equ 016h ;# 
  1021  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1022                           TMR1L equ 016h ;# 
  1023  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1024                           TMR1H equ 017h ;# 
  1025  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1026                           T1CON equ 018h ;# 
  1027  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1028                           T1GCON equ 019h ;# 
  1029  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1030                           TMR2 equ 01Ah ;# 
  1031  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1032                           PR2 equ 01Bh ;# 
  1033  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1034                           T2CON equ 01Ch ;# 
  1035  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1036                           TRISA equ 08Ch ;# 
  1037  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1038                           TRISB equ 08Dh ;# 
  1039  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1040                           TRISC equ 08Eh ;# 
  1041  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1042                           TRISE equ 090h ;# 
  1043  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1044                           PIE1 equ 091h ;# 
  1045  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1046                           PIE2 equ 092h ;# 
  1047  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1048                           OPTION_REG equ 095h ;# 
  1049  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1050                           PCON equ 096h ;# 
  1051  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1052                           WDTCON equ 097h ;# 
  1053  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1054                           OSCCON equ 099h ;# 
  1055  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1056                           OSCSTAT equ 09Ah ;# 
  1057  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1058                           ADRES equ 09Bh ;# 
  1059  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1060                           ADRESL equ 09Bh ;# 
  1061  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1062                           ADRESH equ 09Ch ;# 
  1063  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1064                           ADCON0 equ 09Dh ;# 
  1065  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1066                           ADCON1 equ 09Eh ;# 
  1067  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1068                           LATA equ 010Ch ;# 
  1069  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1070                           LATB equ 010Dh ;# 
  1071  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1072                           LATC equ 010Eh ;# 
  1073  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1074                           BORCON equ 0116h ;# 
  1075  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1076                           FVRCON equ 0117h ;# 
  1077  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1078                           APFCON equ 011Dh ;# 
  1079  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1080                           ANSELA equ 018Ch ;# 
  1081  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1082                           ANSELB equ 018Dh ;# 
  1083  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1084                           ANSELC equ 018Eh ;# 
  1085  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1086                           PMADR equ 0191h ;# 
  1087  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1088                           PMADRL equ 0191h ;# 
  1089  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1090                           PMADRH equ 0192h ;# 
  1091  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1092                           PMDAT equ 0193h ;# 
  1093  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1094                           PMDATL equ 0193h ;# 
  1095  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1096                           PMDATH equ 0194h ;# 
  1097  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1098                           PMCON1 equ 0195h ;# 
  1099  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1100                           PMCON2 equ 0196h ;# 
  1101  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1102                           VREGCON equ 0197h ;# 
  1103  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1104                           RCREG equ 0199h ;# 
  1105  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1106                           TXREG equ 019Ah ;# 
  1107  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1108                           SP1BRG equ 019Bh ;# 
  1109  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1110                           SP1BRGL equ 019Bh ;# 
  1111  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1112                           SPBRG equ 019Bh ;# 
  1113  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1114                           SPBRGL equ 019Bh ;# 
  1115  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1116                           SP1BRGH equ 019Ch ;# 
  1117  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1118                           SPBRGH equ 019Ch ;# 
  1119  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1120                           RCSTA equ 019Dh ;# 
  1121  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1122                           TXSTA equ 019Eh ;# 
  1123  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1124                           BAUDCON equ 019Fh ;# 
  1125  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1126                           WPUB equ 020Dh ;# 
  1127  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1128                           WPUE equ 0210h ;# 
  1129  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1130                           SSPBUF equ 0211h ;# 
  1131  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1132                           SSP1BUF equ 0211h ;# 
  1133  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1134                           SSPADD equ 0212h ;# 
  1135  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1136                           SSP1ADD equ 0212h ;# 
  1137  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1138                           SSPMSK equ 0213h ;# 
  1139  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1140                           SSP1MSK equ 0213h ;# 
  1141  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1142                           SSPSTAT equ 0214h ;# 
  1143  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1144                           SSP1STAT equ 0214h ;# 
  1145  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1146                           SSPCON1 equ 0215h ;# 
  1147  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1148                           SSPCON equ 0215h ;# 
  1149  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1150                           SSP1CON1 equ 0215h ;# 
  1151  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1152                           SSPCON2 equ 0216h ;# 
  1153  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1154                           SSP1CON2 equ 0216h ;# 
  1155  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1156                           SSPCON3 equ 0217h ;# 
  1157  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1158                           SSP1CON3 equ 0217h ;# 
  1159  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1160                           CCPR1 equ 0291h ;# 
  1161  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1162                           CCPR1L equ 0291h ;# 
  1163  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1164                           CCPR1H equ 0292h ;# 
  1165  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1166                           CCP1CON equ 0293h ;# 
  1167  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1168                           CCPR2 equ 0298h ;# 
  1169  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1170                           CCPR2L equ 0298h ;# 
  1171  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1172                           CCPR2H equ 0299h ;# 
  1173  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1174                           CCP2CON equ 029Ah ;# 
  1175  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1176                           IOCBP equ 0394h ;# 
  1177  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1178                           IOCBN equ 0395h ;# 
  1179  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1180                           IOCBF equ 0396h ;# 
  1181  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1182                           STATUS_SHAD equ 0FE4h ;# 
  1183  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1184                           WREG_SHAD equ 0FE5h ;# 
  1185  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1186                           BSR_SHAD equ 0FE6h ;# 
  1187  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1188                           PCLATH_SHAD equ 0FE7h ;# 
  1189  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1190                           FSR0L_SHAD equ 0FE8h ;# 
  1191  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1192                           FSR0H_SHAD equ 0FE9h ;# 
  1193  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1194                           FSR1L_SHAD equ 0FEAh ;# 
  1195  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1196                           FSR1H_SHAD equ 0FEBh ;# 
  1197  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1198                           STKPTR equ 0FEDh ;# 
  1199  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1200                           TOSL equ 0FEEh ;# 
  1201  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1202                           TOSH equ 0FEFh ;# 
  1203  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1204                           INDF0 equ 00h ;# 
  1205  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1206                           INDF1 equ 01h ;# 
  1207  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1208                           PCL equ 02h ;# 
  1209  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1210                           STATUS equ 03h ;# 
  1211  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1212                           FSR0L equ 04h ;# 
  1213  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1214                           FSR0H equ 05h ;# 
  1215  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1216                           FSR1L equ 06h ;# 
  1217  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1218                           FSR1H equ 07h ;# 
  1219  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1220                           BSR equ 08h ;# 
  1221  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1222                           WREG equ 09h ;# 
  1223  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1224                           PCLATH equ 0Ah ;# 
  1225  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1226                           INTCON equ 0Bh ;# 
  1227  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1228                           PORTA equ 0Ch ;# 
  1229  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1230                           PORTB equ 0Dh ;# 
  1231  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1232                           PORTC equ 0Eh ;# 
  1233  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1234                           PORTE equ 010h ;# 
  1235  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1236                           PIR1 equ 011h ;# 
  1237  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1238                           PIR2 equ 012h ;# 
  1239  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1240                           TMR0 equ 015h ;# 
  1241  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1242                           TMR1 equ 016h ;# 
  1243  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1244                           TMR1L equ 016h ;# 
  1245  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1246                           TMR1H equ 017h ;# 
  1247  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1248                           T1CON equ 018h ;# 
  1249  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1250                           T1GCON equ 019h ;# 
  1251  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1252                           TMR2 equ 01Ah ;# 
  1253  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1254                           PR2 equ 01Bh ;# 
  1255  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1256                           T2CON equ 01Ch ;# 
  1257  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1258                           TRISA equ 08Ch ;# 
  1259  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1260                           TRISB equ 08Dh ;# 
  1261  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1262                           TRISC equ 08Eh ;# 
  1263  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1264                           TRISE equ 090h ;# 
  1265  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1266                           PIE1 equ 091h ;# 
  1267  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1268                           PIE2 equ 092h ;# 
  1269  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1270                           OPTION_REG equ 095h ;# 
  1271  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1272                           PCON equ 096h ;# 
  1273  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1274                           WDTCON equ 097h ;# 
  1275  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1276                           OSCCON equ 099h ;# 
  1277  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1278                           OSCSTAT equ 09Ah ;# 
  1279  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1280                           ADRES equ 09Bh ;# 
  1281  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1282                           ADRESL equ 09Bh ;# 
  1283  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1284                           ADRESH equ 09Ch ;# 
  1285  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1286                           ADCON0 equ 09Dh ;# 
  1287  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1288                           ADCON1 equ 09Eh ;# 
  1289  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1290                           LATA equ 010Ch ;# 
  1291  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1292                           LATB equ 010Dh ;# 
  1293  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1294                           LATC equ 010Eh ;# 
  1295  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1296                           BORCON equ 0116h ;# 
  1297  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1298                           FVRCON equ 0117h ;# 
  1299  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1300                           APFCON equ 011Dh ;# 
  1301  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1302                           ANSELA equ 018Ch ;# 
  1303  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1304                           ANSELB equ 018Dh ;# 
  1305  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1306                           ANSELC equ 018Eh ;# 
  1307  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1308                           PMADR equ 0191h ;# 
  1309  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1310                           PMADRL equ 0191h ;# 
  1311  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1312                           PMADRH equ 0192h ;# 
  1313  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1314                           PMDAT equ 0193h ;# 
  1315  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1316                           PMDATL equ 0193h ;# 
  1317  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1318                           PMDATH equ 0194h ;# 
  1319  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1320                           PMCON1 equ 0195h ;# 
  1321  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1322                           PMCON2 equ 0196h ;# 
  1323  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1324                           VREGCON equ 0197h ;# 
  1325  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1326                           RCREG equ 0199h ;# 
  1327  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1328                           TXREG equ 019Ah ;# 
  1329  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1330                           SP1BRG equ 019Bh ;# 
  1331  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1332                           SP1BRGL equ 019Bh ;# 
  1333  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1334                           SPBRG equ 019Bh ;# 
  1335  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1336                           SPBRGL equ 019Bh ;# 
  1337  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1338                           SP1BRGH equ 019Ch ;# 
  1339  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1340                           SPBRGH equ 019Ch ;# 
  1341  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1342                           RCSTA equ 019Dh ;# 
  1343  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1344                           TXSTA equ 019Eh ;# 
  1345  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1346                           BAUDCON equ 019Fh ;# 
  1347  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1348                           WPUB equ 020Dh ;# 
  1349  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1350                           WPUE equ 0210h ;# 
  1351  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1352                           SSPBUF equ 0211h ;# 
  1353  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1354                           SSP1BUF equ 0211h ;# 
  1355  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1356                           SSPADD equ 0212h ;# 
  1357  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1358                           SSP1ADD equ 0212h ;# 
  1359  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1360                           SSPMSK equ 0213h ;# 
  1361  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1362                           SSP1MSK equ 0213h ;# 
  1363  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1364                           SSPSTAT equ 0214h ;# 
  1365  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1366                           SSP1STAT equ 0214h ;# 
  1367  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1368                           SSPCON1 equ 0215h ;# 
  1369  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1370                           SSPCON equ 0215h ;# 
  1371  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1372                           SSP1CON1 equ 0215h ;# 
  1373  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1374                           SSPCON2 equ 0216h ;# 
  1375  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1376                           SSP1CON2 equ 0216h ;# 
  1377  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1378                           SSPCON3 equ 0217h ;# 
  1379  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1380                           SSP1CON3 equ 0217h ;# 
  1381  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1382                           CCPR1 equ 0291h ;# 
  1383  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1384                           CCPR1L equ 0291h ;# 
  1385  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1386                           CCPR1H equ 0292h ;# 
  1387  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1388                           CCP1CON equ 0293h ;# 
  1389  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1390                           CCPR2 equ 0298h ;# 
  1391  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1392                           CCPR2L equ 0298h ;# 
  1393  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1394                           CCPR2H equ 0299h ;# 
  1395  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1396                           CCP2CON equ 029Ah ;# 
  1397  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1398                           IOCBP equ 0394h ;# 
  1399  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1400                           IOCBN equ 0395h ;# 
  1401  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1402                           IOCBF equ 0396h ;# 
  1403  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1404                           STATUS_SHAD equ 0FE4h ;# 
  1405  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1406                           WREG_SHAD equ 0FE5h ;# 
  1407  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1408                           BSR_SHAD equ 0FE6h ;# 
  1409  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1410                           PCLATH_SHAD equ 0FE7h ;# 
  1411  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1412                           FSR0L_SHAD equ 0FE8h ;# 
  1413  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1414                           FSR0H_SHAD equ 0FE9h ;# 
  1415  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1416                           FSR1L_SHAD equ 0FEAh ;# 
  1417  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1418                           FSR1H_SHAD equ 0FEBh ;# 
  1419  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1420                           STKPTR equ 0FEDh ;# 
  1421  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1422                           TOSL equ 0FEEh ;# 
  1423  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1424                           TOSH equ 0FEFh ;# 
  1425  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1426                           INDF0 equ 00h ;# 
  1427  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1428                           INDF1 equ 01h ;# 
  1429  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1430                           PCL equ 02h ;# 
  1431  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1432                           STATUS equ 03h ;# 
  1433  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1434                           FSR0L equ 04h ;# 
  1435  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1436                           FSR0H equ 05h ;# 
  1437  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1438                           FSR1L equ 06h ;# 
  1439  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1440                           FSR1H equ 07h ;# 
  1441  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1442                           BSR equ 08h ;# 
  1443  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1444                           WREG equ 09h ;# 
  1445  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1446                           PCLATH equ 0Ah ;# 
  1447  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1448                           INTCON equ 0Bh ;# 
  1449  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1450                           PORTA equ 0Ch ;# 
  1451  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1452                           PORTB equ 0Dh ;# 
  1453  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1454                           PORTC equ 0Eh ;# 
  1455  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1456                           PORTE equ 010h ;# 
  1457  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1458                           PIR1 equ 011h ;# 
  1459  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1460                           PIR2 equ 012h ;# 
  1461  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1462                           TMR0 equ 015h ;# 
  1463  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1464                           TMR1 equ 016h ;# 
  1465  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1466                           TMR1L equ 016h ;# 
  1467  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1468                           TMR1H equ 017h ;# 
  1469  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1470                           T1CON equ 018h ;# 
  1471  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1472                           T1GCON equ 019h ;# 
  1473  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1474                           TMR2 equ 01Ah ;# 
  1475  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1476                           PR2 equ 01Bh ;# 
  1477  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1478                           T2CON equ 01Ch ;# 
  1479  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1480                           TRISA equ 08Ch ;# 
  1481  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1482                           TRISB equ 08Dh ;# 
  1483  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1484                           TRISC equ 08Eh ;# 
  1485  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1486                           TRISE equ 090h ;# 
  1487  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1488                           PIE1 equ 091h ;# 
  1489  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1490                           PIE2 equ 092h ;# 
  1491  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1492                           OPTION_REG equ 095h ;# 
  1493  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1494                           PCON equ 096h ;# 
  1495  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1496                           WDTCON equ 097h ;# 
  1497  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1498                           OSCCON equ 099h ;# 
  1499  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1500                           OSCSTAT equ 09Ah ;# 
  1501  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1502                           ADRES equ 09Bh ;# 
  1503  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1504                           ADRESL equ 09Bh ;# 
  1505  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1506                           ADRESH equ 09Ch ;# 
  1507  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1508                           ADCON0 equ 09Dh ;# 
  1509  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1510                           ADCON1 equ 09Eh ;# 
  1511  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1512                           LATA equ 010Ch ;# 
  1513  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1514                           LATB equ 010Dh ;# 
  1515  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1516                           LATC equ 010Eh ;# 
  1517  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1518                           BORCON equ 0116h ;# 
  1519  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1520                           FVRCON equ 0117h ;# 
  1521  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1522                           APFCON equ 011Dh ;# 
  1523  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1524                           ANSELA equ 018Ch ;# 
  1525  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1526                           ANSELB equ 018Dh ;# 
  1527  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1528                           ANSELC equ 018Eh ;# 
  1529  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1530                           PMADR equ 0191h ;# 
  1531  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1532                           PMADRL equ 0191h ;# 
  1533  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1534                           PMADRH equ 0192h ;# 
  1535  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1536                           PMDAT equ 0193h ;# 
  1537  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1538                           PMDATL equ 0193h ;# 
  1539  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1540                           PMDATH equ 0194h ;# 
  1541  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1542                           PMCON1 equ 0195h ;# 
  1543  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1544                           PMCON2 equ 0196h ;# 
  1545  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1546                           VREGCON equ 0197h ;# 
  1547  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1548                           RCREG equ 0199h ;# 
  1549  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1550                           TXREG equ 019Ah ;# 
  1551  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1552                           SP1BRG equ 019Bh ;# 
  1553  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1554                           SP1BRGL equ 019Bh ;# 
  1555  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1556                           SPBRG equ 019Bh ;# 
  1557  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1558                           SPBRGL equ 019Bh ;# 
  1559  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1560                           SP1BRGH equ 019Ch ;# 
  1561  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1562                           SPBRGH equ 019Ch ;# 
  1563  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1564                           RCSTA equ 019Dh ;# 
  1565  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1566                           TXSTA equ 019Eh ;# 
  1567  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1568                           BAUDCON equ 019Fh ;# 
  1569  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1570                           WPUB equ 020Dh ;# 
  1571  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1572                           WPUE equ 0210h ;# 
  1573  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1574                           SSPBUF equ 0211h ;# 
  1575  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1576                           SSP1BUF equ 0211h ;# 
  1577  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1578                           SSPADD equ 0212h ;# 
  1579  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1580                           SSP1ADD equ 0212h ;# 
  1581  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1582                           SSPMSK equ 0213h ;# 
  1583  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1584                           SSP1MSK equ 0213h ;# 
  1585  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1586                           SSPSTAT equ 0214h ;# 
  1587  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1588                           SSP1STAT equ 0214h ;# 
  1589  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1590                           SSPCON1 equ 0215h ;# 
  1591  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1592                           SSPCON equ 0215h ;# 
  1593  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1594                           SSP1CON1 equ 0215h ;# 
  1595  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1596                           SSPCON2 equ 0216h ;# 
  1597  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1598                           SSP1CON2 equ 0216h ;# 
  1599  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1600                           SSPCON3 equ 0217h ;# 
  1601  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1602                           SSP1CON3 equ 0217h ;# 
  1603  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1604                           CCPR1 equ 0291h ;# 
  1605  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1606                           CCPR1L equ 0291h ;# 
  1607  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1608                           CCPR1H equ 0292h ;# 
  1609  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1610                           CCP1CON equ 0293h ;# 
  1611  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1612                           CCPR2 equ 0298h ;# 
  1613  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1614                           CCPR2L equ 0298h ;# 
  1615  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1616                           CCPR2H equ 0299h ;# 
  1617  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1618                           CCP2CON equ 029Ah ;# 
  1619  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1620                           IOCBP equ 0394h ;# 
  1621  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1622                           IOCBN equ 0395h ;# 
  1623  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1624                           IOCBF equ 0396h ;# 
  1625  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1626                           STATUS_SHAD equ 0FE4h ;# 
  1627  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1628                           WREG_SHAD equ 0FE5h ;# 
  1629  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1630                           BSR_SHAD equ 0FE6h ;# 
  1631  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1632                           PCLATH_SHAD equ 0FE7h ;# 
  1633  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1634                           FSR0L_SHAD equ 0FE8h ;# 
  1635  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1636                           FSR0H_SHAD equ 0FE9h ;# 
  1637  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1638                           FSR1L_SHAD equ 0FEAh ;# 
  1639  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1640                           FSR1H_SHAD equ 0FEBh ;# 
  1641  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1642                           STKPTR equ 0FEDh ;# 
  1643  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1644                           TOSL equ 0FEEh ;# 
  1645  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1646                           TOSH equ 0FEFh ;# 
  1647  0FEF                     	FNCALL	_main,_AddTrace
  1648                           	FNCALL	_main,_Debounce
  1649                           	FNCALL	_main,_EM1812EntryPoint
  1650                           	FNCALL	_main,_EUSARTInit
  1651                           	FNCALL	_main,_Esp8266Entrypoint
  1652                           	FNCALL	_main,_Esp8266OpenSocket
  1653                           	FNCALL	_main,_Esp8266SetAccessPointMode
  1654                           	FNCALL	_main,_Esp8266SetupWifi
  1655                           	FNCALL	_main,_I2CInit
  1656                           	FNCALL	_main,_PrintLog
  1657                           	FNCALL	_main,_clearDisplay
  1658                           	FNCALL	_main,_initLCD
  1659                           	FNCALL	_main,_memset
  1660                           	FNCALL	_main,_moveCursorToHome
  1661                           	FNCALL	_main,_powerOnLcd
  1662                           	FNCALL	_main,_printEM1812
  1663                           	FNCALL	_main,_setCursorOff
  1664                           	FNCALL	_main,_setCursorPosition
  1665                           	FNCALL	_main,_setNotBlinkingCursor
  1666                           	FNCALL	_setNotBlinkingCursor,_writeInsChk
  1667                           	FNCALL	_setCursorOff,_writeInsChk
  1668                           	FNCALL	_printEM1812,___awdiv
  1669                           	FNCALL	_printEM1812,___awmod
  1670                           	FNCALL	_powerOnLcd,_writeInsChk
  1671                           	FNCALL	_moveCursorToHome,_writeInsChk
  1672                           	FNCALL	_initLCD,_clearDisplay
  1673                           	FNCALL	_initLCD,_setData
  1674                           	FNCALL	_initLCD,_writeInsChk
  1675                           	FNCALL	_clearDisplay,_writeInsChk
  1676                           	FNCALL	_writeInsChk,_waitLCDBusy
  1677                           	FNCALL	_writeInsChk,_writeInsNoChk
  1678                           	FNCALL	_writeInsNoChk,_SetToSendDataToLCD
  1679                           	FNCALL	_writeInsNoChk,_setData
  1680                           	FNCALL	_PrintLog,_lcdWriteText
  1681                           	FNCALL	_PrintLog,_memset
  1682                           	FNCALL	_PrintLog,_strlen
  1683                           	FNCALL	_I2CInit,_memset
  1684                           	FNCALL	_Esp8266Entrypoint,_Esp8266OpenSocketCommand
  1685                           	FNCALL	_Esp8266Entrypoint,_Esp8266SetNetworkParameters
  1686                           	FNCALL	_Esp8266Entrypoint,_EusartGetNbByteReceived
  1687                           	FNCALL	_Esp8266Entrypoint,_EusartGetRxBuffer
  1688                           	FNCALL	_Esp8266Entrypoint,_Send_UART_Data
  1689                           	FNCALL	_Esp8266Entrypoint,_lcdWriteAllText
  1690                           	FNCALL	_Esp8266Entrypoint,_lcdWriteText
  1691                           	FNCALL	_Esp8266Entrypoint,_memcmp
  1692                           	FNCALL	_Esp8266Entrypoint,_moveToNextChar
  1693                           	FNCALL	_Esp8266Entrypoint,_uint8_tToa
  1694                           	FNCALL	_uint8_tToa,___awdiv
  1695                           	FNCALL	_uint8_tToa,___awmod
  1696                           	FNCALL	_lcdWriteText,_writeTxtChk
  1697                           	FNCALL	_lcdWriteAllText,_writeTxtChk
  1698                           	FNCALL	_writeTxtChk,_SetToSendDataToLCD
  1699                           	FNCALL	_writeTxtChk,_setCursorPosition
  1700                           	FNCALL	_writeTxtChk,_setData
  1701                           	FNCALL	_writeTxtChk,_waitLCDBusy
  1702                           	FNCALL	_setCursorPosition,_SetToSendDataToLCD
  1703                           	FNCALL	_setCursorPosition,_setData
  1704                           	FNCALL	_setCursorPosition,_waitLCDBusy
  1705                           	FNCALL	_waitLCDBusy,_SetToReadDataFromLCD
  1706                           	FNCALL	_EusartGetRxBuffer,_memcpy
  1707                           	FNCALL	_Esp8266SetNetworkParameters,_Send_UART_Data
  1708                           	FNCALL	_Esp8266SetNetworkParameters,___awdiv
  1709                           	FNCALL	_Esp8266SetNetworkParameters,___awmod
  1710                           	FNCALL	_Esp8266SetNetworkParameters,_strcat
  1711                           	FNCALL	_Esp8266SetNetworkParameters,_strcpy
  1712                           	FNCALL	_Esp8266SetNetworkParameters,_strlen
  1713                           	FNCALL	_Esp8266OpenSocketCommand,_Send_UART_Data
  1714                           	FNCALL	_Esp8266OpenSocketCommand,_strcat
  1715                           	FNCALL	_Esp8266OpenSocketCommand,_strcpy
  1716                           	FNCALL	_Esp8266OpenSocketCommand,_strlen
  1717                           	FNCALL	_Esp8266OpenSocketCommand,_uint16_tToa
  1718                           	FNCALL	_uint16_tToa,___lwdiv
  1719                           	FNCALL	_uint16_tToa,___lwmod
  1720                           	FNCALL	_Send_UART_Data,_memcpy
  1721                           	FNCALL	_EM1812EntryPoint,_GetI2CStatus
  1722                           	FNCALL	_EM1812EntryPoint,_GetNewReceivedData
  1723                           	FNCALL	_EM1812EntryPoint,_I2C_GetData
  1724                           	FNCALL	_EM1812EntryPoint,_I2C_SendData
  1725                           	FNCALL	_I2C_SendData,_memcpy
  1726                           	FNCALL	_GetNewReceivedData,_memcpy
  1727                           	FNCALL	_AddTrace,_strcat
  1728                           	FNCALL	_AddTrace,_strlen
  1729                           	FNCALL	_strcat,_strcpy
  1730                           	FNCALL	_strcat,_strlen
  1731                           	FNROOT	_main
  1732                           	FNCALL	_myint,_EUSARTInterrupt
  1733                           	FNCALL	_myint,_I2C_Interrupt
  1734                           	FNCALL	_myint,_TempUpdateRequest
  1735                           	FNCALL	_myint,i1_lcdWriteText
  1736                           	FNCALL	i1_lcdWriteText,i1_writeTxtChk
  1737                           	FNCALL	i1_writeTxtChk,i1_SetToSendDataToLCD
  1738                           	FNCALL	i1_writeTxtChk,i1_setCursorPosition
  1739                           	FNCALL	i1_writeTxtChk,i1_setData
  1740                           	FNCALL	i1_writeTxtChk,i1_waitLCDBusy
  1741                           	FNCALL	i1_setCursorPosition,i1_SetToSendDataToLCD
  1742                           	FNCALL	i1_setCursorPosition,i1_setData
  1743                           	FNCALL	i1_setCursorPosition,i1_waitLCDBusy
  1744                           	FNCALL	i1_waitLCDBusy,i1_SetToReadDataFromLCD
  1745                           	FNCALL	intlevel1,_myint
  1746                           	global	intlevel1
  1747                           	FNROOT	intlevel1
  1748                           	global	_wI2CRxBufferSize
  1749                           	global	_wI2CTxBufferSize
  1750                           	global	_wI2CCommandState
  1751                           	global	_gESPCommand
  1752                           	global	_gEsp8266State
  1753                           	global	EM1812EntryPoint@F1955
  1754                           	global	main@F2356
  1755                           	global	_wTempSet
  1756                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1757                           global __pidataBANK0
  1758                           __pidataBANK0:
  1759  12C2                     	file	"./I2C.h"
  1760                           	line	24
  1761                           
  1762                           ;initializer for _wI2CRxBufferSize
  1763                           	retlw	014h
  1764  12C2  3414               	line	23
  1765                           
  1766                           ;initializer for _wI2CTxBufferSize
  1767                           	retlw	014h
  1768  12C3  3414               	line	14
  1769                           
  1770                           ;initializer for _wI2CCommandState
  1771                           	retlw	03h
  1772  12C4  3403               psect	idataBANK2,class=CODE,space=0,delta=2,noexec
  1773                           global __pidataBANK2
  1774                           __pidataBANK2:
  1775  0002                     	file	"./ESP8266.h"
  1776                           	line	13
  1777                           
  1778                           ;initializer for _gESPCommand
  1779                           	retlw	03h
  1780  0002  3403               	line	12
  1781                           
  1782                           ;initializer for _gEsp8266State
  1783                           	retlw	01h
  1784  0003  3401               psect	idataBANK3,class=CODE,space=0,delta=2,noexec
  1785                           global __pidataBANK3
  1786                           __pidataBANK3:
  1787  1316                     	file	"EM1812.c"
  1788                           	line	96
  1789                           
  1790                           ;initializer for EM1812EntryPoint@F1955
  1791                           	retlw	0B8h
  1792  1316  34B8               	retlw	03h
  1793  1317  3403               	retlw	low(0)
  1794  1318  3400               	retlw	04h
  1795  1319  3404               	file	"161518_temp_main.c"
  1796                           	line	199
  1797                           
  1798                           ;initializer for main@F2356
  1799                           	retlw	02Bh
  1800  131A  342B               	retlw	low(0)
  1801  131B  3400               	retlw	078h
  1802  131C  3478               	retlw	low(0)
  1803  131D  3400               	line	113
  1804                           
  1805                           ;initializer for _wTempSet
  1806                           	retlw	0D2h
  1807  131E  34D2               	retlw	0
  1808  131F  3400               
  1809                           	global	EM1812EntryPoint@wTry
  1810                           	global	_wTimer1IntCounter
  1811                           	global	_gTxTransmitSize
  1812                           	global	_gTxReadingPosition
  1813                           	global	_gEusartRXBufferIndex
  1814                           	global	_wI2CTxSendPos
  1815                           	global	_wNewI2CReception
  1816                           	global	_wI2CRxNbOfByteToReceived
  1817                           	global	_wI2CTxNbOfByteToSend
  1818                           	global	_wReceptionBufferPosition
  1819                           	global	_wTimer0Counter
  1820                           	global	_wTempState
  1821                           	global	_mWritingPosition
  1822                           	global	_mCursorDisplayShiftReg
  1823                           	global	_mDisplayOnOffReg
  1824                           	global	Esp8266Entrypoint@wCounter
  1825                           	global	Esp8266Entrypoint@wCommandsize
  1826                           	global	Esp8266Entrypoint@prevEusartNbByteReceived
  1827                           	global	uint16_tToa@F1867
  1828                           	global	_gErrorCode
  1829                           	global	_wTemperature
  1830                           	global	_wHumidity
  1831                           	global	EM1812EntryPoint@F1957
  1832                           	global	_wI2CRxBuffer
  1833                           	global	_wI2CTxBuffer
  1834                           	global	_wInterruptText
  1835                           	global	_gEusartRXBuffer
  1836                           	global	_gEusartTXBuffer
  1837                           	global	_PIR2bits
  1838                           _PIR2bits	set	0x12
  1839  0012                     	global	_TMR0
  1840                           _TMR0	set	0x15
  1841  0015                     	global	_PORTCbits
  1842                           _PORTCbits	set	0xE
  1843  000E                     	global	_PORTAbits
  1844                           _PORTAbits	set	0xC
  1845  000C                     	global	_TMR1L
  1846                           _TMR1L	set	0x16
  1847  0016                     	global	_TMR1H
  1848                           _TMR1H	set	0x17
  1849  0017                     	global	_PIR1bits
  1850                           _PIR1bits	set	0x11
  1851  0011                     	global	_PORTB
  1852                           _PORTB	set	0xD
  1853  000D                     	global	_T1CONbits
  1854                           _T1CONbits	set	0x18
  1855  0018                     	global	_PORTA
  1856                           _PORTA	set	0xC
  1857  000C                     	global	_INTCONbits
  1858                           _INTCONbits	set	0xB
  1859  000B                     	global	_PORTBbits
  1860                           _PORTBbits	set	0xD
  1861  000D                     	global	_PIE2bits
  1862                           _PIE2bits	set	0x92
  1863  0092                     	global	_TRISCbits
  1864                           _TRISCbits	set	0x8E
  1865  008E                     	global	_TRISAbits
  1866                           _TRISAbits	set	0x8C
  1867  008C                     	global	_TRISB
  1868                           _TRISB	set	0x8D
  1869  008D                     	global	_OPTION_REGbits
  1870                           _OPTION_REGbits	set	0x95
  1871  0095                     	global	_PIE1bits
  1872                           _PIE1bits	set	0x91
  1873  0091                     	global	_OSCCONbits
  1874                           _OSCCONbits	set	0x99
  1875  0099                     	global	_RCREG
  1876                           _RCREG	set	0x199
  1877  0199                     	global	_TXREG
  1878                           _TXREG	set	0x19A
  1879  019A                     	global	_TXSTAbits
  1880                           _TXSTAbits	set	0x19E
  1881  019E                     	global	_SPBRGL
  1882                           _SPBRGL	set	0x19B
  1883  019B                     	global	_SPBRGH
  1884                           _SPBRGH	set	0x19C
  1885  019C                     	global	_ANSELCbits
  1886                           _ANSELCbits	set	0x18E
  1887  018E                     	global	_ANSELAbits
  1888                           _ANSELAbits	set	0x18C
  1889  018C                     	global	_RCSTAbits
  1890                           _RCSTAbits	set	0x19D
  1891  019D                     	global	_ANSELB
  1892                           _ANSELB	set	0x18D
  1893  018D                     	global	_SSPBUF
  1894                           _SSPBUF	set	0x211
  1895  0211                     	global	_SSPSTATbits
  1896                           _SSPSTATbits	set	0x214
  1897  0214                     	global	_SSPCON2bits
  1898                           _SSPCON2bits	set	0x216
  1899  0216                     	global	_SSPADD
  1900                           _SSPADD	set	0x212
  1901  0212                     	global	_SSPCON1bits
  1902                           _SSPCON1bits	set	0x215
  1903  0215                     	global	_SSPCON3bits
  1904                           _SSPCON3bits	set	0x217
  1905  0217                     	global	_WPUB
  1906                           _WPUB	set	0x20D
  1907  020D                     psect	stringtext1,class=STRCODE,delta=2,noexec
  1908                           global __pstringtext1
  1909                           __pstringtext1:
  1910  1800                     	
  1911                           STR_24:	
  1912  1800                     	retlw	65	;'A'
  1913  1800  3441               	retlw	76	;'L'
  1914  1801  344C               	retlw	82	;'R'
  1915  1802  3452               	retlw	69	;'E'
  1916  1803  3445               	retlw	65	;'A'
  1917  1804  3441               	retlw	68	;'D'
  1918  1805  3444               	retlw	89	;'Y'
  1919  1806  3459               	retlw	32	;' '
  1920  1807  3420               	retlw	67	;'C'
  1921  1808  3443               	retlw	79	;'O'
  1922  1809  344F               	retlw	78	;'N'
  1923  180A  344E               	retlw	78	;'N'
  1924  180B  344E               	retlw	69	;'E'
  1925  180C  3445               	retlw	67	;'C'
  1926  180D  3443               	retlw	84	;'T'
  1927  180E  3454               	retlw	69	;'E'
  1928  180F  3445               	retlw	68	;'D'
  1929  1810  3444               	retlw	0
  1930  1811  3400               psect	stringtext2,class=STRCODE,delta=2,noexec
  1931                           global __pstringtext2
  1932                           __pstringtext2:
  1933  1812                     	
  1934                           STR_7:	
  1935  1812                     	retlw	65	;'A'
  1936  1812  3441               	retlw	84	;'T'
  1937  1813  3454               	retlw	43	;'+'
  1938  1814  342B               	retlw	67	;'C'
  1939  1815  3443               	retlw	87	;'W'
  1940  1816  3457               	retlw	83	;'S'
  1941  1817  3453               	retlw	65	;'A'
  1942  1818  3441               	retlw	80	;'P'
  1943  1819  3450               	retlw	61	;'='
  1944  181A  343D               	retlw	34	;'"'
  1945  181B  3422               	retlw	34	;'"'
  1946  181C  3422               	retlw	44	;','
  1947  181D  342C               	retlw	34	;'"'
  1948  181E  3422               	retlw	34	;'"'
  1949  181F  3422               	retlw	44	;','
  1950  1820  342C               	retlw	44	;','
  1951  1821  342C               	retlw	0
  1952  1822  3400               psect	stringtext3,class=STRCODE,delta=2,noexec
  1953                           global __pstringtext3
  1954                           __pstringtext3:
  1955  1823                     	
  1956                           STR_14:	
  1957  1823                     	retlw	65	;'A'
  1958  1823  3441               	retlw	84	;'T'
  1959  1824  3454               	retlw	43	;'+'
  1960  1825  342B               	retlw	67	;'C'
  1961  1826  3443               	retlw	87	;'W'
  1962  1827  3457               	retlw	77	;'M'
  1963  1828  344D               	retlw	79	;'O'
  1964  1829  344F               	retlw	68	;'D'
  1965  182A  3444               	retlw	69	;'E'
  1966  182B  3445               	retlw	61	;'='
  1967  182C  343D               	retlw	50	;'2'
  1968  182D  3432               	retlw	13
  1969  182E  340D               	retlw	10
  1970  182F  340A               	retlw	0
  1971  1830  3400               psect	stringtext4,class=STRCODE,delta=2,noexec
  1972                           global __pstringtext4
  1973                           __pstringtext4:
  1974  1831                     	
  1975                           STR_3:	
  1976  1831                     	retlw	65	;'A'
  1977  1831  3441               	retlw	84	;'T'
  1978  1832  3454               	retlw	43	;'+'
  1979  1833  342B               	retlw	67	;'C'
  1980  1834  3443               	retlw	73	;'I'
  1981  1835  3449               	retlw	80	;'P'
  1982  1836  3450               	retlw	83	;'S'
  1983  1837  3453               	retlw	84	;'T'
  1984  1838  3454               	retlw	65	;'A'
  1985  1839  3441               	retlw	82	;'R'
  1986  183A  3452               	retlw	84	;'T'
  1987  183B  3454               	retlw	61	;'='
  1988  183C  343D               	retlw	34	;'"'
  1989  183D  3422               	retlw	0
  1990  183E  3400               psect	stringtext5,class=STRCODE,delta=2,noexec
  1991                           global __pstringtext5
  1992                           __pstringtext5:
  1993  183F                     	
  1994                           STR_19:	
  1995  183F                     	retlw	49	;'1'
  1996  183F  3431               	retlw	57	;'9'
  1997  1840  3439               	retlw	50	;'2'
  1998  1841  3432               	retlw	46	;'.'
  1999  1842  342E               	retlw	49	;'1'
  2000  1843  3431               	retlw	54	;'6'
  2001  1844  3436               	retlw	56	;'8'
  2002  1845  3438               	retlw	46	;'.'
  2003  1846  342E               	retlw	52	;'4'
  2004  1847  3434               	retlw	46	;'.'
  2005  1848  342E               	retlw	50	;'2'
  2006  1849  3432               	retlw	53	;'5'
  2007  184A  3435               	retlw	53	;'5'
  2008  184B  3435               	retlw	0
  2009  184C  3400               psect	stringtext6,class=STRCODE,delta=2,noexec
  2010                           global __pstringtext6
  2011                           __pstringtext6:
  2012  184D                     	
  2013                           STR_1:	
  2014  184D                     	retlw	72	;'H'
  2015  184D  3448               	retlw	117	;'u'
  2016  184E  3475               	retlw	109	;'m'
  2017  184F  346D               	retlw	105	;'i'
  2018  1850  3469               	retlw	100	;'d'
  2019  1851  3464               	retlw	105	;'i'
  2020  1852  3469               	retlw	116	;'t'
  2021  1853  3474               	retlw	121	;'y'
  2022  1854  3479               	retlw	32	;' '
  2023  1855  3420               	retlw	58	;':'
  2024  1856  343A               	retlw	32	;' '
  2025  1857  3420               	retlw	0
  2026  1858  3400               psect	stringtext7,class=STRCODE,delta=2,noexec
  2027                           global __pstringtext7
  2028                           __pstringtext7:
  2029  1859                     	
  2030                           STR_8:	
  2031  1859                     	retlw	65	;'A'
  2032  1859  3441               	retlw	84	;'T'
  2033  185A  3454               	retlw	43	;'+'
  2034  185B  342B               	retlw	67	;'C'
  2035  185C  3443               	retlw	87	;'W'
  2036  185D  3457               	retlw	83	;'S'
  2037  185E  3453               	retlw	65	;'A'
  2038  185F  3441               	retlw	80	;'P'
  2039  1860  3450               	retlw	61	;'='
  2040  1861  343D               	retlw	34	;'"'
  2041  1862  3422               	retlw	0
  2042  1863  3400               psect	stringtext8,class=STRCODE,delta=2,noexec
  2043                           global __pstringtext8
  2044                           __pstringtext8:
  2045  1864                     	
  2046                           STR_16:	
  2047  1864                     	retlw	49	;'1'
  2048  1864  3431               	retlw	50	;'2'
  2049  1865  3432               	retlw	51	;'3'
  2050  1866  3433               	retlw	52	;'4'
  2051  1867  3434               	retlw	53	;'5'
  2052  1868  3435               	retlw	54	;'6'
  2053  1869  3436               	retlw	55	;'7'
  2054  186A  3437               	retlw	56	;'8'
  2055  186B  3438               	retlw	0
  2056  186C  3400               psect	stringtext9,class=STRCODE,delta=2,noexec
  2057                           global __pstringtext9
  2058                           __pstringtext9:
  2059  186D                     	
  2060                           STR_13:	
  2061  186D                     	retlw	65	;'A'
  2062  186D  3441               	retlw	80	;'P'
  2063  186E  3450               	retlw	32	;' '
  2064  186F  3420               	retlw	77	;'M'
  2065  1870  344D               	retlw	79	;'O'
  2066  1871  344F               	retlw	68	;'D'
  2067  1872  3444               	retlw	69	;'E'
  2068  1873  3445               	retlw	58	;':'
  2069  1874  343A               	retlw	0
  2070  1875  3400               psect	stringtext10,class=STRCODE,delta=2,noexec
  2071                           global __pstringtext10
  2072                           __pstringtext10:
  2073  1876                     	
  2074                           STR_2:	
  2075  1876                     	retlw	10
  2076  1876  340A               	retlw	84	;'T'
  2077  1877  3454               	retlw	101	;'e'
  2078  1878  3465               	retlw	109	;'m'
  2079  1879  346D               	retlw	112	;'p'
  2080  187A  3470               	retlw	32	;' '
  2081  187B  3420               	retlw	58	;':'
  2082  187C  343A               	retlw	32	;' '
  2083  187D  3420               	retlw	0
  2084  187E  3400               psect	stringtext11,class=STRCODE,delta=2,noexec
  2085                           global __pstringtext11
  2086                           __pstringtext11:
  2087  187F                     	
  2088                           STR_20:	
  2089  187F                     	retlw	83	;'S'
  2090  187F  3453               	retlw	79	;'O'
  2091  1880  344F               	retlw	67	;'C'
  2092  1881  3443               	retlw	75	;'K'
  2093  1882  344B               	retlw	69	;'E'
  2094  1883  3445               	retlw	84	;'T'
  2095  1884  3454               	retlw	58	;':'
  2096  1885  343A               	retlw	0
  2097  1886  3400               psect	stringtext12,class=STRCODE,delta=2,noexec
  2098                           global __pstringtext12
  2099                           __pstringtext12:
  2100  1887                     	
  2101                           STR_15:	
  2102  1887                     	retlw	77	;'M'
  2103  1887  344D               	retlw	101	;'e'
  2104  1888  3465               	retlw	99	;'c'
  2105  1889  3463               	retlw	99	;'c'
  2106  188A  3463               	retlw	111	;'o'
  2107  188B  346F               	retlw	115	;'s'
  2108  188C  3473               	retlw	0
  2109  188D  3400               psect	stringtext13,class=STRCODE,delta=2,noexec
  2110                           global __pstringtext13
  2111                           __pstringtext13:
  2112  188E                     	
  2113                           STR_17:	
  2114  188E                     	retlw	87	;'W'
  2115  188E  3457               	retlw	73	;'I'
  2116  188F  3449               	retlw	70	;'F'
  2117  1890  3446               	retlw	73	;'I'
  2118  1891  3449               	retlw	58	;':'
  2119  1892  343A               	retlw	0
  2120  1893  3400               psect	stringtext14,class=STRCODE,delta=2,noexec
  2121                           global __pstringtext14
  2122                           __pstringtext14:
  2123  1894                     	
  2124                           STR_12:	
  2125  1894                     	retlw	44	;','
  2126  1894  342C               	retlw	48	;'0'
  2127  1895  3430               	retlw	13
  2128  1896  340D               	retlw	10
  2129  1897  340A               	retlw	0
  2130  1898  3400               psect	stringtext15,class=STRCODE,delta=2,noexec
  2131                           global __pstringtext15
  2132                           __pstringtext15:
  2133  1899                     	
  2134                           STR_11:	
  2135  1899                     	retlw	44	;','
  2136  1899  342C               	retlw	49	;'1'
  2137  189A  3431               	retlw	13
  2138  189B  340D               	retlw	10
  2139  189C  340A               	retlw	0
  2140  189D  3400               psect	stringtext16,class=STRCODE,delta=2,noexec
  2141                           global __pstringtext16
  2142                           __pstringtext16:
  2143  189E                     	
  2144                           STR_22:	
  2145  189E                     	retlw	79	;'O'
  2146  189E  344F               	retlw	75	;'K'
  2147  189F  344B               	retlw	33	;'!'
  2148  18A0  3421               	retlw	0
  2149  18A1  3400               psect	stringtext17,class=STRCODE,delta=2,noexec
  2150                           global __pstringtext17
  2151                           __pstringtext17:
  2152  18A2                     	
  2153                           STR_4:	
  2154  18A2                     	retlw	34	;'"'
  2155  18A2  3422               	retlw	44	;','
  2156  18A3  342C               	retlw	34	;'"'
  2157  18A4  3422               	retlw	0
  2158  18A5  3400               psect	stringtext18,class=STRCODE,delta=2,noexec
  2159                           global __pstringtext18
  2160                           __pstringtext18:
  2161  18A6                     	
  2162                           STR_18:	
  2163  18A6                     	retlw	85	;'U'
  2164  18A6  3455               	retlw	68	;'D'
  2165  18A7  3444               	retlw	80	;'P'
  2166  18A8  3450               	retlw	0
  2167  18A9  3400               psect	stringtext19,class=STRCODE,delta=2,noexec
  2168                           global __pstringtext19
  2169                           __pstringtext19:
  2170  18AA                     	
  2171                           STR_5:	
  2172  18AA                     	retlw	34	;'"'
  2173  18AA  3422               	retlw	44	;','
  2174  18AB  342C               	retlw	0
  2175  18AC  3400               psect	stringtext20,class=STRCODE,delta=2,noexec
  2176                           global __pstringtext20
  2177                           __pstringtext20:
  2178  18AD                     	
  2179                           STR_21:	
  2180  18AD                     	retlw	79	;'O'
  2181  18AD  344F               	retlw	75	;'K'
  2182  18AE  344B               	retlw	0
  2183  18AF  3400               psect	stringtext21,class=STRCODE,delta=2,noexec
  2184                           global __pstringtext21
  2185                           __pstringtext21:
  2186  0000                     STR_23	equ	STR_21+0
  2187  18AD                     STR_10	equ	STR_5+0
  2188  18AA                     STR_9	equ	STR_4+0
  2189  18A2                     STR_25	equ	STR_22+0
  2190  189E                     STR_6	equ	STR_12+2
  2191  1896                     ; #config settings
  2192                           global __CFG_FOSC$
  2193                           __CFG_FOSC$ equ 0x2
  2194  0002                     global __CFG_WDTE$OFF
  2195                           __CFG_WDTE$OFF equ 0x0
  2196  0000                     global __CFG_PWRTE$ON
  2197                           __CFG_PWRTE$ON equ 0x0
  2198  0000                     global __CFG_MCLRE$OFF
  2199                           __CFG_MCLRE$OFF equ 0x0
  2200  0000                     global __CFG_CP$OFF
  2201                           __CFG_CP$OFF equ 0x0
  2202  0000                     global __CFG_BOREN$ON
  2203                           __CFG_BOREN$ON equ 0x0
  2204  0000                     global __CFG_CLKOUTEN$ON
  2205                           __CFG_CLKOUTEN$ON equ 0x0
  2206  0000                     global __CFG_IESO$OFF
  2207                           __CFG_IESO$OFF equ 0x0
  2208  0000                     global __CFG_FCMEN$OFF
  2209                           __CFG_FCMEN$OFF equ 0x0
  2210  0000                     global __CFG_WRT$OFF
  2211                           __CFG_WRT$OFF equ 0x0
  2212  0000                     global __CFG_VCAPEN$OFF
  2213                           __CFG_VCAPEN$OFF equ 0x0
  2214  0000                     global __CFG_STVREN$OFF
  2215                           __CFG_STVREN$OFF equ 0x0
  2216  0000                     global __CFG_BORV$LO
  2217                           __CFG_BORV$LO equ 0x0
  2218  0000                     global __CFG_LPBOR$OFF
  2219                           __CFG_LPBOR$OFF equ 0x0
  2220  0000                     global __CFG_LVP$OFF
  2221                           __CFG_LVP$OFF equ 0x0
  2222  0000                     	file	"C:\Users\dell\AppData\Local\Temp\sfr8."
  2223                           	line	#
  2224                           psect cinit,class=CODE,delta=2
  2225                           global start_initialization
  2226                           start_initialization:
  2227  007B                     
  2228                           global __initialization
  2229                           __initialization:
  2230  007B                     psect	bssBANK0,class=BANK0,space=1,noexec
  2231                           global __pbssBANK0
  2232                           __pbssBANK0:
  2233  004E                     EM1812EntryPoint@wTry:
  2234  004E                            ds      1
  2235  004E                     
  2236                           _wTimer1IntCounter:
  2237  004F                            ds      1
  2238  004F                     
  2239                           _gTxTransmitSize:
  2240  0050                            ds      1
  2241  0050                     
  2242                           _gTxReadingPosition:
  2243  0051                            ds      1
  2244  0051                     
  2245                           _gEusartRXBufferIndex:
  2246  0052                            ds      1
  2247  0052                     
  2248                           _wI2CTxSendPos:
  2249  0053                            ds      1
  2250  0053                     
  2251                           _wNewI2CReception:
  2252  0054                            ds      1
  2253  0054                     
  2254                           _wI2CRxNbOfByteToReceived:
  2255  0055                            ds      1
  2256  0055                     
  2257                           _wI2CTxNbOfByteToSend:
  2258  0056                            ds      1
  2259  0056                     
  2260                           _wReceptionBufferPosition:
  2261  0057                            ds      1
  2262  0057                     
  2263                           _wTimer0Counter:
  2264  0058                            ds      1
  2265  0058                     
  2266                           _wTempState:
  2267  0059                            ds      1
  2268  0059                     
  2269                           _mWritingPosition:
  2270  005A                            ds      1
  2271  005A                     
  2272                           _mCursorDisplayShiftReg:
  2273  005B                            ds      1
  2274  005B                     
  2275                           _mDisplayOnOffReg:
  2276  005C                            ds      1
  2277  005C                     
  2278                           psect	dataBANK0,class=BANK0,space=1,noexec
  2279                           global __pdataBANK0
  2280                           __pdataBANK0:
  2281  005D                     	file	"./I2C.h"
  2282                           	line	24
  2283                           _wI2CRxBufferSize:
  2284  005D                            ds      1
  2285  005D                     
  2286                           psect	dataBANK0
  2287                           	file	"./I2C.h"
  2288                           	line	23
  2289                           _wI2CTxBufferSize:
  2290  005E                            ds      1
  2291  005E                     
  2292                           psect	dataBANK0
  2293                           	file	"./I2C.h"
  2294                           	line	14
  2295                           _wI2CCommandState:
  2296  005F                            ds      1
  2297  005F                     
  2298                           psect	bssBANK1,class=BANK1,space=1,noexec
  2299                           global __pbssBANK1
  2300                           __pbssBANK1:
  2301  00DE                     Esp8266Entrypoint@wCounter:
  2302  00DE                            ds      1
  2303  00DE                     
  2304                           psect	bssBANK2,class=BANK2,space=1,noexec
  2305                           global __pbssBANK2
  2306                           __pbssBANK2:
  2307  016B                     Esp8266Entrypoint@wCommandsize:
  2308  016B                            ds      1
  2309  016B                     
  2310                           Esp8266Entrypoint@prevEusartNbByteReceived:
  2311  016C                            ds      1
  2312  016C                     
  2313                           psect	dataBANK2,class=BANK2,space=1,noexec
  2314                           global __pdataBANK2
  2315                           __pdataBANK2:
  2316  016D                     	file	"./ESP8266.h"
  2317                           	line	13
  2318                           _gESPCommand:
  2319  016D                            ds      1
  2320  016D                     
  2321                           psect	dataBANK2
  2322                           	file	"./ESP8266.h"
  2323                           	line	12
  2324                           _gEsp8266State:
  2325  016E                            ds      1
  2326  016E                     
  2327                           psect	bssBANK3,class=BANK3,space=1,noexec
  2328                           global __pbssBANK3
  2329                           __pbssBANK3:
  2330  01A0                     uint16_tToa@F1867:
  2331  01A0                            ds      6
  2332  01A0                     
  2333                           _test:
  2334  01A6                            ds      2
  2335  01A6                     
  2336                           _wCounter2:
  2337  01A8                            ds      1
  2338  01A8                     
  2339                           _gErrorCode:
  2340  01A9                            ds      1
  2341  01A9                     
  2342                           _wTrial:
  2343  01AA                            ds      1
  2344  01AA                     
  2345                           _wReceptionCounterPrev:
  2346  01AB                            ds      1
  2347  01AB                     
  2348                           _wReceptionCounter:
  2349  01AC                            ds      1
  2350  01AC                     
  2351                           _wTemperature:
  2352  01AD                            ds      2
  2353  01AD                     
  2354                           _wHumidity:
  2355  01AF                            ds      2
  2356  01AF                     
  2357                           psect	dataBANK3,class=BANK3,space=1,noexec
  2358                           global __pdataBANK3
  2359                           __pdataBANK3:
  2360  01B1                     	file	"EM1812.c"
  2361                           	line	96
  2362                           EM1812EntryPoint@F1955:
  2363  01B1                            ds      4
  2364  01B1                     
  2365                           psect	dataBANK3
  2366                           	file	"161518_temp_main.c"
  2367                           	line	199
  2368                           main@F2356:
  2369  01B5                            ds      4
  2370  01B5                     
  2371                           psect	dataBANK3
  2372                           	file	"161518_temp_main.c"
  2373                           	line	113
  2374                           _wTempSet:
  2375  01B9                            ds      2
  2376  01B9                     
  2377                           psect	bssBANK4,class=BANK4,space=1,noexec
  2378                           global __pbssBANK4
  2379                           __pbssBANK4:
  2380  0220                     _wHexTemp:
  2381  0220                            ds      20
  2382  0220                     
  2383                           EM1812EntryPoint@F1957:
  2384  0234                            ds      8
  2385  0234                     
  2386                           _wI2CRxBuffer:
  2387  023C                            ds      20
  2388  023C                     
  2389                           _wI2CTxBuffer:
  2390  0250                            ds      20
  2391  0250                     
  2392                           psect	bssBANK5,class=BANK5,space=1,noexec
  2393                           global __pbssBANK5
  2394                           __pbssBANK5:
  2395  02A0                     _wInterruptText:
  2396  02A0                            ds      75
  2397  02A0                     
  2398                           psect	bssBANK6,class=BANK6,space=1,noexec
  2399                           global __pbssBANK6
  2400                           __pbssBANK6:
  2401  0320                     _gEusartRXBuffer:
  2402  0320                            ds      70
  2403  0320                     
  2404                           psect	bssBANK7,class=BANK7,space=1,noexec
  2405                           global __pbssBANK7
  2406                           __pbssBANK7:
  2407  03A0                     _gEusartTXBuffer:
  2408  03A0                            ds      70
  2409  03A0                     
  2410                           	file	"C:\Users\dell\AppData\Local\Temp\sfr8."
  2411                           	line	#
  2412                           psect inittext,class=CODE,delta=2
  2413                           global init_ram,btemp
  2414                           init_ram:
  2415  12F5                     	movwf btemp,f
  2416  12F5  00FE               initloop:
  2417  12F6                     	moviw fsr0++
  2418  12F6  0012               	movwi fsr1++
  2419  12F7  001E               	decfsz btemp
  2420  12F8  0BFE               	goto initloop
  2421  12F9  2AF6               	retlw 0
  2422  12FA  3400               ; Initialize objects allocated to BANK0
  2423                           	global __pidataBANK0,__pdataBANK0
  2424                           psect cinit,class=CODE,delta=2,merge=1
  2425                           	movlw low(__pidataBANK0)
  2426  007B  30C2               	movwf fsr0l
  2427  007C  0084               	movlw high(__pidataBANK0)|80h
  2428  007D  3092               	movwf fsr0h
  2429  007E  0085               	movlw low(__pdataBANK0)
  2430  007F  305D               	movwf fsr1l
  2431  0080  0086               	movlw high(__pdataBANK0)
  2432  0081  3000               	movwf fsr1h
  2433  0082  0087               	movlw 03h
  2434  0083  3003               	fcall init_ram
  2435  0084  3192  22F5  3180   ; Initialize objects allocated to BANK2
  2436                           	global __pidataBANK2,__pdataBANK2
  2437                           psect cinit,class=CODE,delta=2,merge=1
  2438                           	movlb 2	; select bank2
  2439  0087  0022               	fcall	__pidataBANK2+0		;fetch initializer
  2440  0088  3180  2002  3180   	movwf	__pdataBANK2+0&07fh		
  2441  008B  00ED               	fcall	__pidataBANK2+1		;fetch initializer
  2442  008C  3180  2003  3180   	movwf	__pdataBANK2+1&07fh		
  2443  008F  00EE               ; Initialize objects allocated to BANK3
  2444                           	global __pidataBANK3,__pdataBANK3
  2445                           psect cinit,class=CODE,delta=2,merge=1
  2446                           	movlw low(__pidataBANK3)
  2447  0090  3016               	movwf fsr0l
  2448  0091  0084               	movlw high(__pidataBANK3)|80h
  2449  0092  3093               	movwf fsr0h
  2450  0093  0085               	movlw low(__pdataBANK3)
  2451  0094  30B1               	movwf fsr1l
  2452  0095  0086               	movlw high(__pdataBANK3)
  2453  0096  3001               	movwf fsr1h
  2454  0097  0087               	movlw 0Ah
  2455  0098  300A               	fcall init_ram
  2456  0099  3192  22F5  3180   	line	#
  2457                           psect clrtext,class=CODE,delta=2
  2458                           global clear_ram0
  2459                           ;	Called with FSR0 containing the base address, and
  2460                           ;	WREG with the size to clear
  2461                           clear_ram0:
  2462  12EF                     	clrwdt			;clear the watchdog before getting into this loop
  2463  12EF  0064               clrloop0:
  2464  12F0                     	clrf	indf0		;clear RAM location pointed to by FSR
  2465  12F0  0180               	addfsr	0,1
  2466  12F1  3101               	decfsz wreg		;Have we reached the end of clearing yet?
  2467  12F2  0B89               	goto clrloop0	;have we reached the end yet?
  2468  12F3  2AF0               	retlw	0		;all done for this memory range, return
  2469  12F4  3400               ; Clear objects allocated to BANK0
  2470                           psect cinit,class=CODE,delta=2,merge=1
  2471                           	global __pbssBANK0
  2472                           	movlw	low(__pbssBANK0)
  2473  009C  304E               	movwf	fsr0l
  2474  009D  0084               	movlw	high(__pbssBANK0)
  2475  009E  3000               	movwf	fsr0h
  2476  009F  0085               	movlw	0Fh
  2477  00A0  300F               	fcall	clear_ram0
  2478  00A1  3192  22EF  3180   ; Clear objects allocated to BANK1
  2479                           psect cinit,class=CODE,delta=2,merge=1
  2480                           	global __pbssBANK1
  2481                           	movlb 1	; select bank1
  2482  00A4  0021               	clrf	((__pbssBANK1)+0)&07Fh
  2483  00A5  01DE               ; Clear objects allocated to BANK2
  2484                           psect cinit,class=CODE,delta=2,merge=1
  2485                           	global __pbssBANK2
  2486                           	movlb 2	; select bank2
  2487  00A6  0022               	clrf	((__pbssBANK2)+0)&07Fh
  2488  00A7  01EB               	clrf	((__pbssBANK2)+1)&07Fh
  2489  00A8  01EC               ; Clear objects allocated to BANK3
  2490                           psect cinit,class=CODE,delta=2,merge=1
  2491                           	global __pbssBANK3
  2492                           	movlw	low(__pbssBANK3)
  2493  00A9  30A0               	movwf	fsr0l
  2494  00AA  0084               	movlw	high(__pbssBANK3)
  2495  00AB  3001               	movwf	fsr0h
  2496  00AC  0085               	movlw	011h
  2497  00AD  3011               	fcall	clear_ram0
  2498  00AE  3192  22EF  3180   ; Clear objects allocated to BANK4
  2499                           psect cinit,class=CODE,delta=2,merge=1
  2500                           	global __pbssBANK4
  2501                           	movlw	low(__pbssBANK4)
  2502  00B1  3020               	movwf	fsr0l
  2503  00B2  0084               	movlw	high(__pbssBANK4)
  2504  00B3  3002               	movwf	fsr0h
  2505  00B4  0085               	movlw	044h
  2506  00B5  3044               	fcall	clear_ram0
  2507  00B6  3192  22EF  3180   ; Clear objects allocated to BANK5
  2508                           psect cinit,class=CODE,delta=2,merge=1
  2509                           	global __pbssBANK5
  2510                           	movlw	low(__pbssBANK5)
  2511  00B9  30A0               	movwf	fsr0l
  2512  00BA  0084               	movlw	high(__pbssBANK5)
  2513  00BB  3002               	movwf	fsr0h
  2514  00BC  0085               	movlw	04Bh
  2515  00BD  304B               	fcall	clear_ram0
  2516  00BE  3192  22EF  3180   ; Clear objects allocated to BANK6
  2517                           psect cinit,class=CODE,delta=2,merge=1
  2518                           	global __pbssBANK6
  2519                           	movlw	low(__pbssBANK6)
  2520  00C1  3020               	movwf	fsr0l
  2521  00C2  0084               	movlw	high(__pbssBANK6)
  2522  00C3  3003               	movwf	fsr0h
  2523  00C4  0085               	movlw	046h
  2524  00C5  3046               	fcall	clear_ram0
  2525  00C6  3192  22EF  3180   ; Clear objects allocated to BANK7
  2526                           psect cinit,class=CODE,delta=2,merge=1
  2527                           	global __pbssBANK7
  2528                           	movlw	low(__pbssBANK7)
  2529  00C9  30A0               	movwf	fsr0l
  2530  00CA  0084               	movlw	high(__pbssBANK7)
  2531  00CB  3003               	movwf	fsr0h
  2532  00CC  0085               	movlw	046h
  2533  00CD  3046               	fcall	clear_ram0
  2534  00CE  3192  22EF  3180   psect cinit,class=CODE,delta=2,merge=1
  2535                           global end_of_initialization,__end_of__initialization
  2536                           
  2537                           ;End of C runtime variable initialization code
  2538                           
  2539                           end_of_initialization:
  2540  00D1                     __end_of__initialization:
  2541  00D1                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  2542  00D1  107E               movlb 0
  2543  00D2  0020               ljmp _main	;jump to C main() function
  2544  00D3  3180  28D5         psect	cstackBANK9,class=BANK9,space=1,noexec
  2545                           global __pcstackBANK9
  2546                           __pcstackBANK9:
  2547  04A0                     	global	Esp8266Entrypoint@wEspBuffer
  2548                           Esp8266Entrypoint@wEspBuffer:	; 70 bytes @ 0x0
  2549  04A0                     	ds	70
  2550  04A0                     	global	Esp8266Entrypoint@wReturnNumber
  2551                           Esp8266Entrypoint@wReturnNumber:	; 4 bytes @ 0x46
  2552  04E6                     	ds	4
  2553  04E6                     	global	Esp8266Entrypoint@wCommandAnswer
  2554                           Esp8266Entrypoint@wCommandAnswer:	; 1 bytes @ 0x4A
  2555  04EA                     	ds	1
  2556  04EA                     	global	Esp8266Entrypoint@wEusartNbByteReceived
  2557                           Esp8266Entrypoint@wEusartNbByteReceived:	; 1 bytes @ 0x4B
  2558  04EB                     	ds	1
  2559  04EB                     psect	cstackBANK8,class=BANK8,space=1,noexec
  2560                           global __pcstackBANK8
  2561                           __pcstackBANK8:
  2562  0420                     	global	Esp8266OpenSocketCommand@wCommand
  2563                           Esp8266OpenSocketCommand@wCommand:	; 70 bytes @ 0x0
  2564  0420                     	ds	70
  2565  0420                     	global	Esp8266OpenSocketCommand@wPort
  2566                           Esp8266OpenSocketCommand@wPort:	; 7 bytes @ 0x46
  2567  0466                     	ds	7
  2568  0466                     	global	Esp8266OpenSocketCommand@wCommandSizeReturn
  2569                           Esp8266OpenSocketCommand@wCommandSizeReturn:	; 2 bytes @ 0x4D
  2570  046D                     	ds	2
  2571  046D                     psect	cstackBANK2,class=BANK2,space=1,noexec
  2572                           global __pcstackBANK2
  2573                           __pcstackBANK2:
  2574  0120                     	global	Esp8266SetNetworkParameters@wCommand
  2575                           Esp8266SetNetworkParameters@wCommand:	; 70 bytes @ 0x0
  2576  0120                     	ds	70
  2577  0120                     	global	Esp8266SetNetworkParameters@wNumber
  2578                           Esp8266SetNetworkParameters@wNumber:	; 3 bytes @ 0x46
  2579  0166                     	ds	3
  2580  0166                     	global	Esp8266SetNetworkParameters@wCommandSizeReturn
  2581                           Esp8266SetNetworkParameters@wCommandSizeReturn:	; 2 bytes @ 0x49
  2582  0169                     	ds	2
  2583  0169                     psect	cstackBANK1,class=BANK1,space=1,noexec
  2584                           global __pcstackBANK1
  2585                           __pcstackBANK1:
  2586  00A0                     ??_AddTrace:	; 1 bytes @ 0x0
  2587  00A0                     	global	?_Esp8266OpenSocketCommand
  2588                           ?_Esp8266OpenSocketCommand:	; 2 bytes @ 0x0
  2589  00A0                     	global	?_Esp8266SetNetworkParameters
  2590                           ?_Esp8266SetNetworkParameters:	; 2 bytes @ 0x0
  2591  00A0                     	global	Esp8266OpenSocketCommand@iType
  2592                           Esp8266OpenSocketCommand@iType:	; 2 bytes @ 0x0
  2593  00A0                     	global	Esp8266SetNetworkParameters@iWifiNetworkName
  2594                           Esp8266SetNetworkParameters@iWifiNetworkName:	; 2 bytes @ 0x0
  2595  00A0                     	global	EM1812EntryPoint@SetGetTempCommand
  2596                           EM1812EntryPoint@SetGetTempCommand:	; 4 bytes @ 0x0
  2597  00A0                     	ds	2
  2598  00A0                     	global	Esp8266OpenSocketCommand@iDestination
  2599                           Esp8266OpenSocketCommand@iDestination:	; 2 bytes @ 0x2
  2600  00A2                     	global	Esp8266SetNetworkParameters@iWifiPassword
  2601                           Esp8266SetNetworkParameters@iWifiPassword:	; 2 bytes @ 0x2
  2602  00A2                     	ds	2
  2603  00A2                     	global	Esp8266SetNetworkParameters@iChannel
  2604                           Esp8266SetNetworkParameters@iChannel:	; 1 bytes @ 0x4
  2605  00A4                     	global	Esp8266OpenSocketCommand@DestinationPort
  2606                           Esp8266OpenSocketCommand@DestinationPort:	; 2 bytes @ 0x4
  2607  00A4                     	global	EM1812EntryPoint@ReceptionBuffer
  2608                           EM1812EntryPoint@ReceptionBuffer:	; 8 bytes @ 0x4
  2609  00A4                     	ds	1
  2610  00A4                     	global	Esp8266SetNetworkParameters@iHidden
  2611                           Esp8266SetNetworkParameters@iHidden:	; 1 bytes @ 0x5
  2612  00A5                     	ds	1
  2613  00A5                     ??_Esp8266SetNetworkParameters:	; 1 bytes @ 0x6
  2614  00A6                     	global	AddTrace@oText
  2615                           AddTrace@oText:	; 1 bytes @ 0x6
  2616  00A6                     	ds	6
  2617  00A6                     	global	EM1812EntryPoint@oHumidity
  2618                           EM1812EntryPoint@oHumidity:	; 1 bytes @ 0xC
  2619  00AC                     	ds	2
  2620  00AC                     ??_main:	; 1 bytes @ 0xE
  2621  00AE                     	ds	2
  2622  00AE                     	global	main@wConv
  2623                           main@wConv:	; 4 bytes @ 0x10
  2624  00B0                     	ds	4
  2625  00B0                     	global	main@wReadout
  2626                           main@wReadout:	; 20 bytes @ 0x14
  2627  00B4                     	ds	20
  2628  00B4                     	global	main@wCounter
  2629                           main@wCounter:	; 2 bytes @ 0x28
  2630  00C8                     	ds	2
  2631  00C8                     	global	main@wTemp
  2632                           main@wTemp:	; 2 bytes @ 0x2A
  2633  00CA                     	ds	2
  2634  00CA                     	global	main@wIterationCounter
  2635                           main@wIterationCounter:	; 2 bytes @ 0x2C
  2636  00CC                     	ds	2
  2637  00CC                     	global	main@wUpdateMenu
  2638                           main@wUpdateMenu:	; 1 bytes @ 0x2E
  2639  00CE                     	ds	1
  2640  00CE                     	global	main@wEditingMode
  2641                           main@wEditingMode:	; 1 bytes @ 0x2F
  2642  00CF                     	ds	1
  2643  00CF                     	global	main@wHumidityPrev
  2644                           main@wHumidityPrev:	; 2 bytes @ 0x30
  2645  00D0                     	ds	2
  2646  00D0                     	global	main@wTemperaturePrev
  2647                           main@wTemperaturePrev:	; 2 bytes @ 0x32
  2648  00D2                     	ds	2
  2649  00D2                     	global	main@wDebounceEnter
  2650                           main@wDebounceEnter:	; 2 bytes @ 0x34
  2651  00D4                     	ds	2
  2652  00D4                     	global	main@wDebounceUp
  2653                           main@wDebounceUp:	; 2 bytes @ 0x36
  2654  00D6                     	ds	2
  2655  00D6                     	global	main@wDebounceDown
  2656                           main@wDebounceDown:	; 2 bytes @ 0x38
  2657  00D8                     	ds	2
  2658  00D8                     	global	main@wUpBottonPressed
  2659                           main@wUpBottonPressed:	; 1 bytes @ 0x3A
  2660  00DA                     	ds	1
  2661  00DA                     	global	main@wDownBottonPressed
  2662                           main@wDownBottonPressed:	; 1 bytes @ 0x3B
  2663  00DB                     	ds	1
  2664  00DB                     	global	main@wEnterBottonPressed
  2665                           main@wEnterBottonPressed:	; 1 bytes @ 0x3C
  2666  00DC                     	ds	1
  2667  00DC                     	global	main@wMenu
  2668                           main@wMenu:	; 1 bytes @ 0x3D
  2669  00DD                     	ds	1
  2670  00DD                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2671                           global __pcstackCOMMON
  2672                           __pcstackCOMMON:
  2673  0070                     ?_I2CInit:	; 1 bytes @ 0x0
  2674  0070                     ?_EUSARTInit:	; 1 bytes @ 0x0
  2675  0070                     ?_initLCD:	; 1 bytes @ 0x0
  2676  0070                     ?_clearDisplay:	; 1 bytes @ 0x0
  2677  0070                     ?_powerOnLcd:	; 1 bytes @ 0x0
  2678  0070                     ?_setCursorOff:	; 1 bytes @ 0x0
  2679  0070                     ?_moveCursorToHome:	; 1 bytes @ 0x0
  2680  0070                     ?_setNotBlinkingCursor:	; 1 bytes @ 0x0
  2681  0070                     ?_Esp8266Entrypoint:	; 1 bytes @ 0x0
  2682  0070                     ?_Esp8266OpenSocket:	; 1 bytes @ 0x0
  2683  0070                     ?_Esp8266SetAccessPointMode:	; 1 bytes @ 0x0
  2684  0070                     ?_Esp8266SetupWifi:	; 1 bytes @ 0x0
  2685  0070                     ??_TempUpdateRequest:	; 1 bytes @ 0x0
  2686  0070                     ?_setData:	; 1 bytes @ 0x0
  2687  0070                     ?_writeInsChk:	; 1 bytes @ 0x0
  2688  0070                     ?_writeTxtChk:	; 1 bytes @ 0x0
  2689  0070                     ?_SetToSendDataToLCD:	; 1 bytes @ 0x0
  2690  0070                     ?_waitLCDBusy:	; 1 bytes @ 0x0
  2691  0070                     ?_writeInsNoChk:	; 1 bytes @ 0x0
  2692  0070                     ?_EusartGetNbByteReceived:	; 1 bytes @ 0x0
  2693  0070                     ?_PrintLog:	; 1 bytes @ 0x0
  2694  0070                     ?_main:	; 1 bytes @ 0x0
  2695  0070                     ?_myint:	; 1 bytes @ 0x0
  2696  0070                     ?_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  2697  0070                     ?i1_setData:	; 1 bytes @ 0x0
  2698  0070                     ??i1_setData:	; 1 bytes @ 0x0
  2699  0070                     ?i1_writeTxtChk:	; 1 bytes @ 0x0
  2700  0070                     ?i1_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  2701  0070                     ??i1_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  2702  0070                     ?i1_SetToSendDataToLCD:	; 1 bytes @ 0x0
  2703  0070                     ??i1_SetToSendDataToLCD:	; 1 bytes @ 0x0
  2704  0070                     ?i1_waitLCDBusy:	; 1 bytes @ 0x0
  2705  0070                     ??i1_waitLCDBusy:	; 1 bytes @ 0x0
  2706  0070                     	global	?_I2C_Interrupt
  2707                           ?_I2C_Interrupt:	; 2 bytes @ 0x0
  2708  0070                     	global	?_EUSARTInterrupt
  2709                           ?_EUSARTInterrupt:	; 2 bytes @ 0x0
  2710  0070                     ?_TempUpdateRequest:	; 2 bytes @ 0x0
  2711  0070                     	ds	2
  2712  0070                     ??_I2C_Interrupt:	; 1 bytes @ 0x2
  2713  0072                     ??_EUSARTInterrupt:	; 1 bytes @ 0x2
  2714  0072                     	global	i1setData@iValue
  2715                           i1setData@iValue:	; 1 bytes @ 0x2
  2716  0072                     	ds	1
  2717  0072                     	global	i1waitLCDBusy@busyFlag
  2718                           i1waitLCDBusy@busyFlag:	; 2 bytes @ 0x3
  2719  0073                     	ds	1
  2720  0073                     	global	I2C_Interrupt@oErrorCode
  2721                           I2C_Interrupt@oErrorCode:	; 1 bytes @ 0x4
  2722  0074                     	global	EUSARTInterrupt@gErrorCode
  2723                           EUSARTInterrupt@gErrorCode:	; 1 bytes @ 0x4
  2724  0074                     	ds	1
  2725  0074                     ?i1_setCursorPosition:	; 1 bytes @ 0x5
  2726  0075                     	global	i1setCursorPosition@iPosition
  2727                           i1setCursorPosition@iPosition:	; 1 bytes @ 0x5
  2728  0075                     	ds	1
  2729  0075                     ??i1_setCursorPosition:	; 1 bytes @ 0x6
  2730  0076                     	ds	2
  2731  0076                     	global	i1setCursorPosition@iLine
  2732                           i1setCursorPosition@iLine:	; 1 bytes @ 0x8
  2733  0078                     	ds	1
  2734  0078                     	global	i1setCursorPosition@wLCDIndex
  2735                           i1setCursorPosition@wLCDIndex:	; 1 bytes @ 0x9
  2736  0079                     	ds	1
  2737  0079                     ??i1_writeTxtChk:	; 1 bytes @ 0xA
  2738  007A                     	ds	2
  2739  007A                     	global	i1writeTxtChk@iOpCode
  2740                           i1writeTxtChk@iOpCode:	; 1 bytes @ 0xC
  2741  007C                     	ds	1
  2742  007C                     	global	i1lcdWriteText@wCharReadingPos
  2743                           i1lcdWriteText@wCharReadingPos:	; 1 bytes @ 0xD
  2744  007D                     	ds	1
  2745  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2746                           global __pcstackBANK0
  2747                           __pcstackBANK0:
  2748  0020                     ?i1_lcdWriteText:	; 1 bytes @ 0x0
  2749  0020                     	global	i1lcdWriteText@iText
  2750                           i1lcdWriteText@iText:	; 2 bytes @ 0x0
  2751  0020                     	ds	2
  2752  0020                     ??i1_lcdWriteText:	; 1 bytes @ 0x2
  2753  0022                     	ds	3
  2754  0022                     ??_myint:	; 1 bytes @ 0x5
  2755  0025                     	ds	1
  2756  0025                     	global	myint@wText
  2757                           myint@wText:	; 3 bytes @ 0x6
  2758  0026                     	ds	3
  2759  0026                     	global	myint@wText_501
  2760                           myint@wText_501:	; 3 bytes @ 0x9
  2761  0029                     	ds	3
  2762  0029                     	global	myint@wI2CError
  2763                           myint@wI2CError:	; 2 bytes @ 0xC
  2764  002C                     	ds	2
  2765  002C                     	global	myint@wEUSARTError
  2766                           myint@wEUSARTError:	; 2 bytes @ 0xE
  2767  002E                     	ds	2
  2768  002E                     ?_memset:	; 1 bytes @ 0x10
  2769  0030                     ??_EUSARTInit:	; 1 bytes @ 0x10
  2770  0030                     ??_Esp8266OpenSocket:	; 1 bytes @ 0x10
  2771  0030                     ??_Esp8266SetAccessPointMode:	; 1 bytes @ 0x10
  2772  0030                     ??_Esp8266SetupWifi:	; 1 bytes @ 0x10
  2773  0030                     ??_setData:	; 1 bytes @ 0x10
  2774  0030                     ??_SetToSendDataToLCD:	; 1 bytes @ 0x10
  2775  0030                     ??_waitLCDBusy:	; 1 bytes @ 0x10
  2776  0030                     ?_moveToNextChar:	; 1 bytes @ 0x10
  2777  0030                     ??_EusartGetNbByteReceived:	; 1 bytes @ 0x10
  2778  0030                     ?_Debounce:	; 1 bytes @ 0x10
  2779  0030                     ??_SetToReadDataFromLCD:	; 1 bytes @ 0x10
  2780  0030                     	global	?_strlen
  2781                           ?_strlen:	; 2 bytes @ 0x10
  2782  0030                     	global	?_GetI2CStatus
  2783                           ?_GetI2CStatus:	; 2 bytes @ 0x10
  2784  0030                     	global	?_I2C_GetData
  2785                           ?_I2C_GetData:	; 2 bytes @ 0x10
  2786  0030                     ?_memcpy:	; 2 bytes @ 0x10
  2787  0030                     	global	?_memcmp
  2788                           ?_memcmp:	; 2 bytes @ 0x10
  2789  0030                     	global	?___awdiv
  2790                           ?___awdiv:	; 2 bytes @ 0x10
  2791  0030                     	global	?___awmod
  2792                           ?___awmod:	; 2 bytes @ 0x10
  2793  0030                     	global	?___lwdiv
  2794                           ?___lwdiv:	; 2 bytes @ 0x10
  2795  0030                     	global	?___lwmod
  2796                           ?___lwmod:	; 2 bytes @ 0x10
  2797  0030                     	global	Debounce@ioTimer
  2798                           Debounce@ioTimer:	; 1 bytes @ 0x10
  2799  0030                     	global	I2C_GetData@iRxNumberOfByteExpected
  2800                           I2C_GetData@iRxNumberOfByteExpected:	; 1 bytes @ 0x10
  2801  0030                     	global	moveToNextChar@iTextSize
  2802                           moveToNextChar@iTextSize:	; 1 bytes @ 0x10
  2803  0030                     	global	___awdiv@divisor
  2804                           ___awdiv@divisor:	; 2 bytes @ 0x10
  2805  0030                     	global	___awmod@divisor
  2806                           ___awmod@divisor:	; 2 bytes @ 0x10
  2807  0030                     	global	___lwdiv@divisor
  2808                           ___lwdiv@divisor:	; 2 bytes @ 0x10
  2809  0030                     	global	___lwmod@divisor
  2810                           ___lwmod@divisor:	; 2 bytes @ 0x10
  2811  0030                     	global	memcmp@vr
  2812                           memcmp@vr:	; 2 bytes @ 0x10
  2813  0030                     	global	memcpy@d1
  2814                           memcpy@d1:	; 2 bytes @ 0x10
  2815  0030                     	global	memset@c
  2816                           memset@c:	; 2 bytes @ 0x10
  2817  0030                     	global	strlen@s
  2818                           strlen@s:	; 2 bytes @ 0x10
  2819  0030                     	ds	1
  2820  0030                     ??_moveToNextChar:	; 1 bytes @ 0x11
  2821  0031                     	global	Debounce@swPressed
  2822                           Debounce@swPressed:	; 1 bytes @ 0x11
  2823  0031                     	ds	1
  2824  0031                     ??_strlen:	; 1 bytes @ 0x12
  2825  0032                     ??_GetI2CStatus:	; 1 bytes @ 0x12
  2826  0032                     ??_I2C_GetData:	; 1 bytes @ 0x12
  2827  0032                     ??_Debounce:	; 1 bytes @ 0x12
  2828  0032                     	global	setData@iValue
  2829                           setData@iValue:	; 1 bytes @ 0x12
  2830  0032                     	global	moveToNextChar@iText
  2831                           moveToNextChar@iText:	; 1 bytes @ 0x12
  2832  0032                     	global	___awdiv@dividend
  2833                           ___awdiv@dividend:	; 2 bytes @ 0x12
  2834  0032                     	global	___awmod@dividend
  2835                           ___awmod@dividend:	; 2 bytes @ 0x12
  2836  0032                     	global	___lwdiv@dividend
  2837                           ___lwdiv@dividend:	; 2 bytes @ 0x12
  2838  0032                     	global	___lwmod@dividend
  2839                           ___lwmod@dividend:	; 2 bytes @ 0x12
  2840  0032                     	global	memcmp@n
  2841                           memcmp@n:	; 2 bytes @ 0x12
  2842  0032                     	global	memcpy@s1
  2843                           memcpy@s1:	; 2 bytes @ 0x12
  2844  0032                     	global	memset@n
  2845                           memset@n:	; 2 bytes @ 0x12
  2846  0032                     	ds	1
  2847  0032                     ??_writeInsNoChk:	; 1 bytes @ 0x13
  2848  0033                     	global	I2C_GetData@iAdress
  2849                           I2C_GetData@iAdress:	; 1 bytes @ 0x13
  2850  0033                     	global	waitLCDBusy@busyFlag
  2851                           waitLCDBusy@busyFlag:	; 2 bytes @ 0x13
  2852  0033                     	global	moveToNextChar@i
  2853                           moveToNextChar@i:	; 2 bytes @ 0x13
  2854  0033                     	ds	1
  2855  0033                     ??_memset:	; 1 bytes @ 0x14
  2856  0034                     ??_memcmp:	; 1 bytes @ 0x14
  2857  0034                     ??___awdiv:	; 1 bytes @ 0x14
  2858  0034                     ??___awmod:	; 1 bytes @ 0x14
  2859  0034                     ??___lwdiv:	; 1 bytes @ 0x14
  2860  0034                     ??___lwmod:	; 1 bytes @ 0x14
  2861  0034                     	global	Debounce@iSwitch
  2862                           Debounce@iSwitch:	; 1 bytes @ 0x14
  2863  0034                     	global	writeInsNoChk@iOpCode
  2864                           writeInsNoChk@iOpCode:	; 1 bytes @ 0x14
  2865  0034                     	global	memcpy@n
  2866                           memcpy@n:	; 2 bytes @ 0x14
  2867  0034                     	global	strlen@a
  2868                           strlen@a:	; 2 bytes @ 0x14
  2869  0034                     	ds	1
  2870  0034                     ?_setCursorPosition:	; 1 bytes @ 0x15
  2871  0035                     ??_writeInsChk:	; 1 bytes @ 0x15
  2872  0035                     	global	writeInsChk@iOpCode
  2873                           writeInsChk@iOpCode:	; 1 bytes @ 0x15
  2874  0035                     	global	setCursorPosition@iPosition
  2875                           setCursorPosition@iPosition:	; 1 bytes @ 0x15
  2876  0035                     	global	___awdiv@counter
  2877                           ___awdiv@counter:	; 1 bytes @ 0x15
  2878  0035                     	global	___awmod@counter
  2879                           ___awmod@counter:	; 1 bytes @ 0x15
  2880  0035                     	global	___lwdiv@counter
  2881                           ___lwdiv@counter:	; 1 bytes @ 0x15
  2882  0035                     	global	___lwmod@counter
  2883                           ___lwmod@counter:	; 1 bytes @ 0x15
  2884  0035                     	ds	1
  2885  0035                     ??_initLCD:	; 1 bytes @ 0x16
  2886  0036                     ??_clearDisplay:	; 1 bytes @ 0x16
  2887  0036                     ??_powerOnLcd:	; 1 bytes @ 0x16
  2888  0036                     ??_setCursorOff:	; 1 bytes @ 0x16
  2889  0036                     ??_moveCursorToHome:	; 1 bytes @ 0x16
  2890  0036                     ??_setNotBlinkingCursor:	; 1 bytes @ 0x16
  2891  0036                     ??_setCursorPosition:	; 1 bytes @ 0x16
  2892  0036                     ??_memcpy:	; 1 bytes @ 0x16
  2893  0036                     ?_strcpy:	; 2 bytes @ 0x16
  2894  0036                     	global	___awdiv@sign
  2895                           ___awdiv@sign:	; 1 bytes @ 0x16
  2896  0036                     	global	___awmod@sign
  2897                           ___awmod@sign:	; 1 bytes @ 0x16
  2898  0036                     	global	memcmp@vl
  2899                           memcmp@vl:	; 1 bytes @ 0x16
  2900  0036                     	global	___lwdiv@quotient
  2901                           ___lwdiv@quotient:	; 2 bytes @ 0x16
  2902  0036                     	global	memset@k
  2903                           memset@k:	; 2 bytes @ 0x16
  2904  0036                     	global	strcpy@dest
  2905                           strcpy@dest:	; 2 bytes @ 0x16
  2906  0036                     	ds	1
  2907  0036                     	global	memcpy@tmp
  2908                           memcpy@tmp:	; 1 bytes @ 0x17
  2909  0037                     	global	___awdiv@quotient
  2910                           ___awdiv@quotient:	; 2 bytes @ 0x17
  2911  0037                     	global	memcmp@r
  2912                           memcmp@r:	; 2 bytes @ 0x17
  2913  0037                     	ds	1
  2914  0037                     ?_uint16_tToa:	; 1 bytes @ 0x18
  2915  0038                     	global	setCursorPosition@iLine
  2916                           setCursorPosition@iLine:	; 1 bytes @ 0x18
  2917  0038                     	global	uint16_tToa@iSizeofText
  2918                           uint16_tToa@iSizeofText:	; 1 bytes @ 0x18
  2919  0038                     	global	memset@dest
  2920                           memset@dest:	; 1 bytes @ 0x18
  2921  0038                     	global	memcpy@d
  2922                           memcpy@d:	; 2 bytes @ 0x18
  2923  0038                     	global	strcpy@src
  2924                           strcpy@src:	; 2 bytes @ 0x18
  2925  0038                     	ds	1
  2926  0038                     ?_printEM1812:	; 1 bytes @ 0x19
  2927  0039                     ?_uint8_tToa:	; 1 bytes @ 0x19
  2928  0039                     	global	setCursorPosition@wLCDIndex
  2929                           setCursorPosition@wLCDIndex:	; 1 bytes @ 0x19
  2930  0039                     	global	uint8_tToa@iSizeofText
  2931                           uint8_tToa@iSizeofText:	; 1 bytes @ 0x19
  2932  0039                     	global	memcmp@l
  2933                           memcmp@l:	; 1 bytes @ 0x19
  2934  0039                     	global	memset@s
  2935                           memset@s:	; 1 bytes @ 0x19
  2936  0039                     	global	printEM1812@wVariable
  2937                           printEM1812@wVariable:	; 2 bytes @ 0x19
  2938  0039                     	global	uint16_tToa@iNumber
  2939                           uint16_tToa@iNumber:	; 2 bytes @ 0x19
  2940  0039                     	ds	1
  2941  0039                     ??_I2CInit:	; 1 bytes @ 0x1A
  2942  003A                     ??_writeTxtChk:	; 1 bytes @ 0x1A
  2943  003A                     ??_strcpy:	; 1 bytes @ 0x1A
  2944  003A                     	global	uint8_tToa@iNumber
  2945                           uint8_tToa@iNumber:	; 1 bytes @ 0x1A
  2946  003A                     	global	memcpy@s
  2947                           memcpy@s:	; 2 bytes @ 0x1A
  2948  003A                     	ds	1
  2949  003A                     ??_uint8_tToa:	; 1 bytes @ 0x1B
  2950  003B                     ??_uint16_tToa:	; 1 bytes @ 0x1B
  2951  003B                     	global	printEM1812@oTextOut
  2952                           printEM1812@oTextOut:	; 1 bytes @ 0x1B
  2953  003B                     	ds	1
  2954  003B                     ??_printEM1812:	; 1 bytes @ 0x1C
  2955  003C                     ?_Send_UART_Data:	; 1 bytes @ 0x1C
  2956  003C                     ?_EusartGetRxBuffer:	; 1 bytes @ 0x1C
  2957  003C                     	global	?_I2C_SendData
  2958                           ?_I2C_SendData:	; 2 bytes @ 0x1C
  2959  003C                     ?_GetNewReceivedData:	; 2 bytes @ 0x1C
  2960  003C                     	global	writeTxtChk@iOpCode
  2961                           writeTxtChk@iOpCode:	; 1 bytes @ 0x1C
  2962  003C                     	global	I2C_SendData@iNumberofByte
  2963                           I2C_SendData@iNumberofByte:	; 1 bytes @ 0x1C
  2964  003C                     	global	GetNewReceivedData@oDataSize
  2965                           GetNewReceivedData@oDataSize:	; 1 bytes @ 0x1C
  2966  003C                     	global	EusartGetRxBuffer@iDataSize
  2967                           EusartGetRxBuffer@iDataSize:	; 1 bytes @ 0x1C
  2968  003C                     	global	Send_UART_Data@iData
  2969                           Send_UART_Data@iData:	; 2 bytes @ 0x1C
  2970  003C                     	ds	1
  2971  003C                     ??_GetNewReceivedData:	; 1 bytes @ 0x1D
  2972  003D                     ?_lcdWriteAllText:	; 1 bytes @ 0x1D
  2973  003D                     	global	EusartGetRxBuffer@oNbOfByteReceived
  2974                           EusartGetRxBuffer@oNbOfByteReceived:	; 1 bytes @ 0x1D
  2975  003D                     	global	lcdWriteAllText@iText
  2976                           lcdWriteAllText@iText:	; 2 bytes @ 0x1D
  2977  003D                     	global	uint16_tToa@wNumbers
  2978                           uint16_tToa@wNumbers:	; 6 bytes @ 0x1D
  2979  003D                     	ds	1
  2980  003D                     ??_I2C_SendData:	; 1 bytes @ 0x1E
  2981  003E                     ??_EusartGetRxBuffer:	; 1 bytes @ 0x1E
  2982  003E                     	global	printEM1812@wUnity
  2983                           printEM1812@wUnity:	; 1 bytes @ 0x1E
  2984  003E                     	global	uint8_tToa@wHundred
  2985                           uint8_tToa@wHundred:	; 1 bytes @ 0x1E
  2986  003E                     	global	Send_UART_Data@iData_Length
  2987                           Send_UART_Data@iData_Length:	; 1 bytes @ 0x1E
  2988  003E                     	global	strcpy@s
  2989                           strcpy@s:	; 2 bytes @ 0x1E
  2990  003E                     	ds	1
  2991  003E                     ??_Send_UART_Data:	; 1 bytes @ 0x1F
  2992  003F                     ??_lcdWriteAllText:	; 1 bytes @ 0x1F
  2993  003F                     	global	printEM1812@wDecimal
  2994                           printEM1812@wDecimal:	; 1 bytes @ 0x1F
  2995  003F                     	global	GetNewReceivedData@oData
  2996                           GetNewReceivedData@oData:	; 1 bytes @ 0x1F
  2997  003F                     	global	uint8_tToa@wTen
  2998                           uint8_tToa@wTen:	; 1 bytes @ 0x1F
  2999  003F                     	ds	1
  3000  003F                     	global	printEM1812@wIsNegative
  3001                           printEM1812@wIsNegative:	; 1 bytes @ 0x20
  3002  0040                     	global	I2C_SendData@iData
  3003                           I2C_SendData@iData:	; 1 bytes @ 0x20
  3004  0040                     	global	uint8_tToa@wUnit
  3005                           uint8_tToa@wUnit:	; 1 bytes @ 0x20
  3006  0040                     	global	EusartGetRxBuffer@oData
  3007                           EusartGetRxBuffer@oData:	; 1 bytes @ 0x20
  3008  0040                     	global	strcpy@d
  3009                           strcpy@d:	; 2 bytes @ 0x20
  3010  0040                     	ds	1
  3011  0040                     	global	?_EM1812EntryPoint
  3012                           ?_EM1812EntryPoint:	; 2 bytes @ 0x21
  3013  0041                     	global	printEM1812@wTen
  3014                           printEM1812@wTen:	; 1 bytes @ 0x21
  3015  0041                     	global	EM1812EntryPoint@oTemperature
  3016                           EM1812EntryPoint@oTemperature:	; 1 bytes @ 0x21
  3017  0041                     	global	uint8_tToa@wText
  3018                           uint8_tToa@wText:	; 1 bytes @ 0x21
  3019  0041                     	ds	1
  3020  0041                     ?_lcdWriteText:	; 1 bytes @ 0x22
  3021  0042                     	global	printEM1812@wWritingPosition
  3022                           printEM1812@wWritingPosition:	; 1 bytes @ 0x22
  3023  0042                     	global	lcdWriteText@iText
  3024                           lcdWriteText@iText:	; 2 bytes @ 0x22
  3025  0042                     	ds	1
  3026  0042                     ??_EM1812EntryPoint:	; 1 bytes @ 0x23
  3027  0043                     	global	lcdWriteAllText@wCharReadingPos
  3028                           lcdWriteAllText@wCharReadingPos:	; 1 bytes @ 0x23
  3029  0043                     	global	uint16_tToa@wText
  3030                           uint16_tToa@wText:	; 1 bytes @ 0x23
  3031  0043                     	ds	1
  3032  0043                     ??_lcdWriteText:	; 1 bytes @ 0x24
  3033  0044                     	global	uint16_tToa@i
  3034                           uint16_tToa@i:	; 2 bytes @ 0x24
  3035  0044                     	ds	2
  3036  0044                     	global	uint16_tToa@wPosition
  3037                           uint16_tToa@wPosition:	; 1 bytes @ 0x26
  3038  0046                     	ds	1
  3039  0046                     ?_strcat:	; 2 bytes @ 0x27
  3040  0047                     	global	lcdWriteText@wCharReadingPos
  3041                           lcdWriteText@wCharReadingPos:	; 1 bytes @ 0x27
  3042  0047                     	global	strcat@dest
  3043                           strcat@dest:	; 2 bytes @ 0x27
  3044  0047                     	ds	1
  3045  0047                     ??_PrintLog:	; 1 bytes @ 0x28
  3046  0048                     	ds	1
  3047  0048                     	global	strcat@src
  3048                           strcat@src:	; 2 bytes @ 0x29
  3049  0049                     	ds	1
  3050  0049                     	global	PrintLog@wInterruptTextLen
  3051                           PrintLog@wInterruptTextLen:	; 1 bytes @ 0x2A
  3052  004A                     	ds	1
  3053  004A                     ?_AddTrace:	; 1 bytes @ 0x2B
  3054  004B                     ??_strcat:	; 1 bytes @ 0x2B
  3055  004B                     ??_Esp8266OpenSocketCommand:	; 1 bytes @ 0x2B
  3056  004B                     	global	PrintLog@iText
  3057                           PrintLog@iText:	; 1 bytes @ 0x2B
  3058  004B                     	global	AddTrace@iSizeOfoText
  3059                           AddTrace@iSizeOfoText:	; 1 bytes @ 0x2B
  3060  004B                     	ds	1
  3061  004B                     ??_Esp8266Entrypoint:	; 1 bytes @ 0x2C
  3062  004C                     	global	AddTrace@iText
  3063                           AddTrace@iText:	; 2 bytes @ 0x2C
  3064  004C                     	ds	2
  3065  004C                     ;!
  3066                           ;!Data Sizes:
  3067                           ;!    Strings     176
  3068                           ;!    Constant    0
  3069                           ;!    Data        15
  3070                           ;!    BSS         318
  3071                           ;!    Persistent  0
  3072                           ;!    Stack       0
  3073                           ;!
  3074                           ;!Auto Spaces:
  3075                           ;!    Space          Size  Autos    Used
  3076                           ;!    COMMON           14     14      14
  3077                           ;!    BANK0            80     46      64
  3078                           ;!    BANK1            80     62      63
  3079                           ;!    BANK2            80     75      79
  3080                           ;!    BANK3            80      0      27
  3081                           ;!    BANK4            80      0      68
  3082                           ;!    BANK5            80      0      75
  3083                           ;!    BANK6            80      0      70
  3084                           ;!    BANK7            80      0      70
  3085                           ;!    BANK8            80     79      79
  3086                           ;!    BANK9            80     76      76
  3087                           ;!    BANK10           80      0       0
  3088                           ;!    BANK11           80      0       0
  3089                           ;!    BANK12           48      0       0
  3090                           
  3091                           ;!
  3092                           ;!Pointer List with Targets:
  3093                           ;!
  3094                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 75
  3095                           ;!		 -> STR_16(CODE[9]), STR_15(CODE[7]), Esp8266SetNetworkParameters@wCommand(BANK2[70]
                                 ), STR_7(CODE[17]), 
  3096                           ;!		 -> Esp8266OpenSocketCommand@wCommand(BANK8[70]), STR_2(CODE[9]), STR_1(CODE[12]), m
                                 ain@wReadout(BANK1[20]), 
  3097                           ;!		 -> wInterruptText(BANK5[75]), 
  3098                           ;!
  3099                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 75
  3100                           ;!		 -> STR_16(CODE[9]), STR_15(CODE[7]), Esp8266SetNetworkParameters@wCommand(BANK2[70]
                                 ), STR_7(CODE[17]), 
  3101                           ;!		 -> Esp8266OpenSocketCommand@wCommand(BANK8[70]), STR_2(CODE[9]), STR_1(CODE[12]), m
                                 ain@wReadout(BANK1[20]), 
  3102                           ;!		 -> wInterruptText(BANK5[75]), 
  3103                           ;!
  3104                           ;!    strcpy@dest	PTR unsigned char  size(2) Largest target is 75
  3105                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK2[70]), Esp8266OpenSocketCommand@wComma
                                 nd(BANK8[70]), wInterruptText(BANK5[75]), 
  3106                           ;!
  3107                           ;!    strcpy@d	PTR unsigned char  size(2) Largest target is 75
  3108                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK2[70]), Esp8266OpenSocketCommand@wComma
                                 nd(BANK8[70]), wInterruptText(BANK5[75]), 
  3109                           ;!
  3110                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
  3111                           ;!		 -> STR_19(CODE[14]), STR_18(CODE[4]), STR_16(CODE[9]), STR_15(CODE[7]), 
  3112                           ;!		 -> STR_12(CODE[5]), STR_11(CODE[5]), Esp8266SetNetworkParameters@wNumber(BANK2[3]),
                                  STR_10(CODE[3]), 
  3113                           ;!		 -> STR_9(CODE[4]), STR_8(CODE[11]), STR_6(CODE[3]), Esp8266OpenSocketCommand@wPort(
                                 BANK8[7]), 
  3114                           ;!		 -> STR_5(CODE[3]), STR_4(CODE[4]), STR_3(CODE[14]), NULL(NULL[0]), 
  3115                           ;!		 -> STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), 
  3116                           ;!
  3117                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
  3118                           ;!		 -> STR_19(CODE[14]), STR_18(CODE[4]), STR_16(CODE[9]), STR_15(CODE[7]), 
  3119                           ;!		 -> STR_12(CODE[5]), STR_11(CODE[5]), Esp8266SetNetworkParameters@wNumber(BANK2[3]),
                                  STR_10(CODE[3]), 
  3120                           ;!		 -> STR_9(CODE[4]), STR_8(CODE[11]), STR_6(CODE[3]), Esp8266OpenSocketCommand@wPort(
                                 BANK8[7]), 
  3121                           ;!		 -> STR_5(CODE[3]), STR_4(CODE[4]), STR_3(CODE[14]), NULL(NULL[0]), 
  3122                           ;!		 -> STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), 
  3123                           ;!
  3124                           ;!    strcat@src	PTR const unsigned char  size(2) Largest target is 20
  3125                           ;!		 -> STR_19(CODE[14]), STR_18(CODE[4]), STR_16(CODE[9]), STR_15(CODE[7]), 
  3126                           ;!		 -> STR_12(CODE[5]), STR_11(CODE[5]), Esp8266SetNetworkParameters@wNumber(BANK2[3]),
                                  STR_10(CODE[3]), 
  3127                           ;!		 -> STR_9(CODE[4]), STR_6(CODE[3]), Esp8266OpenSocketCommand@wPort(BANK8[7]), STR_5(
                                 CODE[3]), 
  3128                           ;!		 -> STR_4(CODE[4]), NULL(NULL[0]), STR_2(CODE[9]), STR_1(CODE[12]), 
  3129                           ;!		 -> main@wReadout(BANK1[20]), 
  3130                           ;!
  3131                           ;!    strcat@dest	PTR unsigned char  size(2) Largest target is 75
  3132                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK2[70]), Esp8266OpenSocketCommand@wComma
                                 nd(BANK8[70]), wInterruptText(BANK5[75]), 
  3133                           ;!
  3134                           ;!    memset@dest	PTR void  size(1) Largest target is 75
  3135                           ;!		 -> wI2CRxBuffer(BANK4[20]), wI2CTxBuffer(BANK4[20]), wInterruptText(BANK5[75]), 
  3136                           ;!
  3137                           ;!    memset@s	PTR unsigned char  size(1) Largest target is 75
  3138                           ;!		 -> wI2CRxBuffer(BANK4[20]), wI2CTxBuffer(BANK4[20]), wInterruptText(BANK5[75]), 
  3139                           ;!
  3140                           ;!    memcpy@d1	PTR void  size(2) Largest target is 70
  3141                           ;!		 -> gEusartTXBuffer(BANK7[70]), Esp8266Entrypoint@wEspBuffer(BANK9[70]), wI2CTxBuffe
                                 r(BANK4[20]), EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 
  3142                           ;!
  3143                           ;!    memcpy@d	PTR unsigned char  size(2) Largest target is 70
  3144                           ;!		 -> gEusartTXBuffer(BANK7[70]), Esp8266Entrypoint@wEspBuffer(BANK9[70]), wI2CTxBuffe
                                 r(BANK4[20]), EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 
  3145                           ;!
  3146                           ;!    memcpy@s1	PTR const void  size(2) Largest target is 70
  3147                           ;!		 -> gEusartRXBuffer(BANK6[70]), STR_14(CODE[14]), Esp8266SetNetworkParameters@wComma
                                 nd(BANK2[70]), Esp8266OpenSocketCommand@wCommand(BANK8[70]), 
  3148                           ;!		 -> wI2CRxBuffer(BANK4[20]), EM1812EntryPoint@SetGetTempCommand(BANK1[4]), 
  3149                           ;!
  3150                           ;!    memcpy@s	PTR const unsigned char  size(2) Largest target is 70
  3151                           ;!		 -> gEusartRXBuffer(BANK6[70]), STR_14(CODE[14]), Esp8266SetNetworkParameters@wComma
                                 nd(BANK2[70]), Esp8266OpenSocketCommand@wCommand(BANK8[70]), 
  3152                           ;!		 -> wI2CRxBuffer(BANK4[20]), EM1812EntryPoint@SetGetTempCommand(BANK1[4]), 
  3153                           ;!
  3154                           ;!    memcmp@vr	PTR const void  size(2) Largest target is 18
  3155                           ;!		 -> STR_24(CODE[18]), STR_23(CODE[3]), STR_21(CODE[3]), 
  3156                           ;!
  3157                           ;!    memcmp@r	PTR const unsigned char  size(2) Largest target is 18
  3158                           ;!		 -> STR_24(CODE[18]), STR_23(CODE[3]), STR_21(CODE[3]), 
  3159                           ;!
  3160                           ;!    memcmp@vl	PTR const void  size(1) Largest target is 70
  3161                           ;!		 -> Esp8266Entrypoint@wEspBuffer(BANK9[70]), 
  3162                           ;!
  3163                           ;!    memcmp@l	PTR const unsigned char  size(1) Largest target is 70
  3164                           ;!		 -> Esp8266Entrypoint@wEspBuffer(BANK9[70]), 
  3165                           ;!
  3166                           ;!    EusartGetRxBuffer@oData	PTR unsigned char  size(1) Largest target is 70
  3167                           ;!		 -> Esp8266Entrypoint@wEspBuffer(BANK9[70]), 
  3168                           ;!
  3169                           ;!    EusartGetRxBuffer@oNbOfByteReceived	PTR unsigned char  size(1) Largest target is 1
                                 
  3170                           ;!		 -> Esp8266Entrypoint@wEusartNbByteReceived(BANK9[1]), 
  3171                           ;!
  3172                           ;!    Send_UART_Data@iData	PTR unsigned char  size(2) Largest target is 70
  3173                           ;!		 -> STR_14(CODE[14]), Esp8266SetNetworkParameters@wCommand(BANK2[70]), Esp8266OpenSo
                                 cketCommand@wCommand(BANK8[70]), 
  3174                           ;!
  3175                           ;!    Esp8266Entrypoint@wCommandAnswer	PTR unsigned char  size(1) Largest target is 70
  3176                           ;!		 -> Esp8266Entrypoint@wEspBuffer(BANK9[70]), 
  3177                           ;!
  3178                           ;!    Esp8266SetNetworkParameters@iWifiPassword	PTR unsigned char  size(2) Largest targe
                                 t is 9
  3179                           ;!		 -> STR_16(CODE[9]), 
  3180                           ;!
  3181                           ;!    Esp8266SetNetworkParameters@iWifiNetworkName	PTR unsigned char  size(2) Largest ta
                                 rget is 7
  3182                           ;!		 -> STR_15(CODE[7]), 
  3183                           ;!
  3184                           ;!    Esp8266OpenSocketCommand@iDestination	PTR unsigned char  size(2) Largest target is
                                  14
  3185                           ;!		 -> STR_19(CODE[14]), 
  3186                           ;!
  3187                           ;!    Esp8266OpenSocketCommand@iType	PTR unsigned char  size(2) Largest target is 4
  3188                           ;!		 -> STR_18(CODE[4]), 
  3189                           ;!
  3190                           ;!    sp__strcpy	PTR unsigned char  size(2) Largest target is 75
  3191                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK2[70]), Esp8266OpenSocketCommand@wComma
                                 nd(BANK8[70]), wInterruptText(BANK5[75]), 
  3192                           ;!
  3193                           ;!    uint16_tToa@wText	PTR unsigned char  size(1) Largest target is 7
  3194                           ;!		 -> Esp8266OpenSocketCommand@wPort(BANK8[7]), 
  3195                           ;!
  3196                           ;!    sp__uint16_tToa	PTR unsigned char  size(1) Largest target is 7
  3197                           ;!		 -> Esp8266OpenSocketCommand@wPort(BANK8[7]), NULL(NULL[0]), 
  3198                           ;!
  3199                           ;!    uint8_tToa@wText	PTR unsigned char  size(1) Largest target is 4
  3200                           ;!		 -> Esp8266Entrypoint@wReturnNumber(BANK9[4]), 
  3201                           ;!
  3202                           ;!    sp__uint8_tToa	PTR unsigned char  size(1) Largest target is 4
  3203                           ;!		 -> Esp8266Entrypoint@wReturnNumber(BANK9[4]), NULL(NULL[0]), 
  3204                           ;!
  3205                           ;!    sp__strcat	PTR unsigned char  size(2) Largest target is 75
  3206                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK2[70]), Esp8266OpenSocketCommand@wComma
                                 nd(BANK8[70]), wInterruptText(BANK5[75]), 
  3207                           ;!
  3208                           ;!    AddTrace@iText	PTR unsigned char  size(2) Largest target is 20
  3209                           ;!		 -> STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), 
  3210                           ;!
  3211                           ;!    AddTrace@oText	PTR unsigned char  size(1) Largest target is 75
  3212                           ;!		 -> wInterruptText(BANK5[75]), 
  3213                           ;!
  3214                           ;!    sp__moveToNextChar	PTR unsigned char  size(1) Largest target is 70
  3215                           ;!		 -> Esp8266Entrypoint@wEspBuffer(BANK9[70]), 
  3216                           ;!
  3217                           ;!    moveToNextChar@iText	PTR unsigned char  size(1) Largest target is 70
  3218                           ;!		 -> Esp8266Entrypoint@wEspBuffer(BANK9[70]), 
  3219                           ;!
  3220                           ;!    GetNewReceivedData@oData	PTR unsigned char  size(1) Largest target is 8
  3221                           ;!		 -> EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 
  3222                           ;!
  3223                           ;!    sp__memcpy	PTR void  size(2) Largest target is 70
  3224                           ;!		 -> gEusartTXBuffer(BANK7[70]), Esp8266Entrypoint@wEspBuffer(BANK9[70]), wI2CTxBuffe
                                 r(BANK4[20]), EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 
  3225                           ;!
  3226                           ;!    I2C_SendData@iData	PTR unsigned char  size(1) Largest target is 4
  3227                           ;!		 -> EM1812EntryPoint@SetGetTempCommand(BANK1[4]), 
  3228                           ;!
  3229                           ;!    EM1812EntryPoint@oTemperature	PTR short  size(1) Largest target is 2
  3230                           ;!		 -> wTemperature(BANK3[2]), 
  3231                           ;!
  3232                           ;!    EM1812EntryPoint@oHumidity	PTR short  size(1) Largest target is 2
  3233                           ;!		 -> wHumidity(BANK3[2]), 
  3234                           ;!
  3235                           ;!    printEM1812@oTextOut	PTR unsigned char  size(1) Largest target is 20
  3236                           ;!		 -> main@wReadout(BANK1[20]), 
  3237                           ;!
  3238                           ;!    lcdWriteAllText@iText	PTR unsigned char  size(2) Largest target is 70
  3239                           ;!		 -> Esp8266Entrypoint@wEspBuffer(BANK9[70]), STR_20(CODE[8]), STR_17(CODE[6]), STR_1
                                 3(CODE[9]), 
  3240                           ;!
  3241                           ;!    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
  3242                           ;!		 -> Esp8266Entrypoint@wReturnNumber(BANK9[4]), STR_25(CODE[4]), STR_22(CODE[4]), NUL
                                 L(NULL[0]), 
  3243                           ;!		 -> myint@wText_501(BANK0[3]), myint@wText(BANK0[3]), wInterruptText(BANK5[75]), 
  3244                           ;!
  3245                           ;!    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
  3246                           ;!		 -> main@wEnterBottonPressed(BANK1[1]), main@wDownBottonPressed(BANK1[1]), main@wUpB
                                 ottonPressed(BANK1[1]), 
  3247                           ;!
  3248                           ;!    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
  3249                           ;!		 -> main@wDebounceDown(BANK1[2]), main@wDebounceUp(BANK1[2]), main@wDebounceEnter(BA
                                 NK1[2]), 
  3250                           ;!
  3251                           ;!    sp__memset	PTR void  size(1) Largest target is 75
  3252                           ;!		 -> wI2CRxBuffer(BANK4[20]), wI2CTxBuffer(BANK4[20]), wInterruptText(BANK5[75]), 
  3253                           ;!
  3254                           ;!    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
  3255                           ;!		 -> wInterruptText(BANK5[75]), 
  3256                           ;!
  3257                           
  3258                           
  3259                           ;!
  3260                           ;!Critical Paths under _main in COMMON
  3261                           ;!
  3262                           ;!    None.
  3263                           ;!
  3264                           ;!Critical Paths under _myint in COMMON
  3265                           ;!
  3266                           ;!    _myint->i1_lcdWriteText
  3267                           ;!    i1_lcdWriteText->i1_writeTxtChk
  3268                           ;!    i1_writeTxtChk->i1_setCursorPosition
  3269                           ;!    i1_setCursorPosition->i1_waitLCDBusy
  3270                           ;!
  3271                           ;!Critical Paths under _main in BANK0
  3272                           ;!
  3273                           ;!    _main->_AddTrace
  3274                           ;!    _main->_Esp8266Entrypoint
  3275                           ;!    _setNotBlinkingCursor->_writeInsChk
  3276                           ;!    _setCursorOff->_writeInsChk
  3277                           ;!    _printEM1812->___awdiv
  3278                           ;!    _powerOnLcd->_writeInsChk
  3279                           ;!    _moveCursorToHome->_writeInsChk
  3280                           ;!    _initLCD->_writeInsChk
  3281                           ;!    _clearDisplay->_writeInsChk
  3282                           ;!    _writeInsChk->_waitLCDBusy
  3283                           ;!    _writeInsChk->_writeInsNoChk
  3284                           ;!    _writeInsNoChk->_setData
  3285                           ;!    _PrintLog->_lcdWriteText
  3286                           ;!    _I2CInit->_memset
  3287                           ;!    _Esp8266Entrypoint->_Esp8266OpenSocketCommand
  3288                           ;!    _uint8_tToa->___awdiv
  3289                           ;!    _lcdWriteText->_uint8_tToa
  3290                           ;!    _lcdWriteAllText->_writeTxtChk
  3291                           ;!    _writeTxtChk->_setCursorPosition
  3292                           ;!    _setCursorPosition->_waitLCDBusy
  3293                           ;!    _EusartGetRxBuffer->_memcpy
  3294                           ;!    _Esp8266SetNetworkParameters->_strcat
  3295                           ;!    _Esp8266OpenSocketCommand->_strcat
  3296                           ;!    _uint16_tToa->___lwdiv
  3297                           ;!    _Send_UART_Data->_memcpy
  3298                           ;!    _EM1812EntryPoint->_I2C_SendData
  3299                           ;!    _I2C_SendData->_memcpy
  3300                           ;!    _GetNewReceivedData->_memcpy
  3301                           ;!    _AddTrace->_strcat
  3302                           ;!    _strcat->_uint16_tToa
  3303                           ;!    _strcpy->_strlen
  3304                           ;!
  3305                           ;!Critical Paths under _myint in BANK0
  3306                           ;!
  3307                           ;!    _myint->i1_lcdWriteText
  3308                           ;!
  3309                           ;!Critical Paths under _main in BANK1
  3310                           ;!
  3311                           ;!    _Esp8266Entrypoint->_Esp8266SetNetworkParameters
  3312                           ;!
  3313                           ;!Critical Paths under _myint in BANK1
  3314                           ;!
  3315                           ;!    None.
  3316                           ;!
  3317                           ;!Critical Paths under _main in BANK2
  3318                           ;!
  3319                           ;!    _Esp8266Entrypoint->_Esp8266SetNetworkParameters
  3320                           ;!
  3321                           ;!Critical Paths under _myint in BANK2
  3322                           ;!
  3323                           ;!    None.
  3324                           ;!
  3325                           ;!Critical Paths under _main in BANK3
  3326                           ;!
  3327                           ;!    None.
  3328                           ;!
  3329                           ;!Critical Paths under _myint in BANK3
  3330                           ;!
  3331                           ;!    None.
  3332                           ;!
  3333                           ;!Critical Paths under _main in BANK4
  3334                           ;!
  3335                           ;!    None.
  3336                           ;!
  3337                           ;!Critical Paths under _myint in BANK4
  3338                           ;!
  3339                           ;!    None.
  3340                           ;!
  3341                           ;!Critical Paths under _main in BANK5
  3342                           ;!
  3343                           ;!    None.
  3344                           ;!
  3345                           ;!Critical Paths under _myint in BANK5
  3346                           ;!
  3347                           ;!    None.
  3348                           ;!
  3349                           ;!Critical Paths under _main in BANK6
  3350                           ;!
  3351                           ;!    None.
  3352                           ;!
  3353                           ;!Critical Paths under _myint in BANK6
  3354                           ;!
  3355                           ;!    None.
  3356                           ;!
  3357                           ;!Critical Paths under _main in BANK7
  3358                           ;!
  3359                           ;!    None.
  3360                           ;!
  3361                           ;!Critical Paths under _myint in BANK7
  3362                           ;!
  3363                           ;!    None.
  3364                           ;!
  3365                           ;!Critical Paths under _main in BANK8
  3366                           ;!
  3367                           ;!    _Esp8266Entrypoint->_Esp8266OpenSocketCommand
  3368                           ;!
  3369                           ;!Critical Paths under _myint in BANK8
  3370                           ;!
  3371                           ;!    None.
  3372                           ;!
  3373                           ;!Critical Paths under _main in BANK9
  3374                           ;!
  3375                           ;!    _main->_Esp8266Entrypoint
  3376                           ;!
  3377                           ;!Critical Paths under _myint in BANK9
  3378                           ;!
  3379                           ;!    None.
  3380                           ;!
  3381                           ;!Critical Paths under _main in BANK10
  3382                           ;!
  3383                           ;!    None.
  3384                           ;!
  3385                           ;!Critical Paths under _myint in BANK10
  3386                           ;!
  3387                           ;!    None.
  3388                           ;!
  3389                           ;!Critical Paths under _main in BANK11
  3390                           ;!
  3391                           ;!    None.
  3392                           ;!
  3393                           ;!Critical Paths under _myint in BANK11
  3394                           ;!
  3395                           ;!    None.
  3396                           ;!
  3397                           ;!Critical Paths under _main in BANK12
  3398                           ;!
  3399                           ;!    None.
  3400                           ;!
  3401                           ;!Critical Paths under _myint in BANK12
  3402                           ;!
  3403                           ;!    None.
  3404                           
  3405 ;;
  3406 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3407 ;;
  3408                           
  3409                           ;!
  3410                           ;!Call Graph Tables:
  3411                           ;!
  3412                           ;! ---------------------------------------------------------------------------------
  3413                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3414                           ;! ---------------------------------------------------------------------------------
  3415                           ;! (0) _main                                                48    48      0   60781
  3416                           ;!                                             14 BANK1     48    48      0
  3417                           ;!                           _AddTrace
  3418                           ;!                           _Debounce
  3419                           ;!                   _EM1812EntryPoint
  3420                           ;!                         _EUSARTInit
  3421                           ;!                  _Esp8266Entrypoint
  3422                           ;!                  _Esp8266OpenSocket
  3423                           ;!          _Esp8266SetAccessPointMode
  3424                           ;!                   _Esp8266SetupWifi
  3425                           ;!                            _I2CInit
  3426                           ;!                           _PrintLog
  3427                           ;!                       _clearDisplay
  3428                           ;!                            _initLCD
  3429                           ;!                             _memset
  3430                           ;!                   _moveCursorToHome
  3431                           ;!                         _powerOnLcd
  3432                           ;!                        _printEM1812
  3433                           ;!                       _setCursorOff
  3434                           ;!                  _setCursorPosition
  3435                           ;!               _setNotBlinkingCursor
  3436                           ;! ---------------------------------------------------------------------------------
  3437                           ;! (1) _setNotBlinkingCursor                                 1     1      0     254
  3438                           ;!                                             22 BANK0      1     1      0
  3439                           ;!                        _writeInsChk
  3440                           ;! ---------------------------------------------------------------------------------
  3441                           ;! (1) _setCursorOff                                         1     1      0     254
  3442                           ;!                                             22 BANK0      1     1      0
  3443                           ;!                        _writeInsChk
  3444                           ;! ---------------------------------------------------------------------------------
  3445                           ;! (1) _printEM1812                                         10     7      3    3824
  3446                           ;!                                             25 BANK0     10     7      3
  3447                           ;!                            ___awdiv
  3448                           ;!                            ___awmod
  3449                           ;! ---------------------------------------------------------------------------------
  3450                           ;! (1) _powerOnLcd                                           1     1      0     254
  3451                           ;!                                             22 BANK0      1     1      0
  3452                           ;!                        _writeInsChk
  3453                           ;! ---------------------------------------------------------------------------------
  3454                           ;! (1) _moveCursorToHome                                     0     0      0     254
  3455                           ;!                        _writeInsChk
  3456                           ;! ---------------------------------------------------------------------------------
  3457                           ;! (1) _initLCD                                              1     1      0     632
  3458                           ;!                                             22 BANK0      1     1      0
  3459                           ;!                       _clearDisplay
  3460                           ;!                            _setData
  3461                           ;!                        _writeInsChk
  3462                           ;! ---------------------------------------------------------------------------------
  3463                           ;! (2) _clearDisplay                                         0     0      0     254
  3464                           ;!                        _writeInsChk
  3465                           ;! ---------------------------------------------------------------------------------
  3466                           ;! (2) _writeInsChk                                          1     1      0     254
  3467                           ;!                                             21 BANK0      1     1      0
  3468                           ;!                        _waitLCDBusy
  3469                           ;!                      _writeInsNoChk
  3470                           ;! ---------------------------------------------------------------------------------
  3471                           ;! (3) _writeInsNoChk                                        2     2      0     186
  3472                           ;!                                             19 BANK0      2     2      0
  3473                           ;!                 _SetToSendDataToLCD
  3474                           ;!                            _setData
  3475                           ;! ---------------------------------------------------------------------------------
  3476                           ;! (1) _PrintLog                                             4     4      0    5227
  3477                           ;!                                             40 BANK0      4     4      0
  3478                           ;!                       _lcdWriteText
  3479                           ;!                             _memset
  3480                           ;!                             _strlen
  3481                           ;! ---------------------------------------------------------------------------------
  3482                           ;! (1) _I2CInit                                              0     0      0    1881
  3483                           ;!                             _memset
  3484                           ;! ---------------------------------------------------------------------------------
  3485                           ;! (1) _memset                                              10     6      4    1881
  3486                           ;!                                             16 BANK0     10     6      4
  3487                           ;! ---------------------------------------------------------------------------------
  3488                           ;! (1) _Esp8266SetupWifi                                     0     0      0       0
  3489                           ;! ---------------------------------------------------------------------------------
  3490                           ;! (1) _Esp8266SetAccessPointMode                            0     0      0       0
  3491                           ;! ---------------------------------------------------------------------------------
  3492                           ;! (1) _Esp8266OpenSocket                                    1     1      0       0
  3493                           ;!                                             16 BANK0      1     1      0
  3494                           ;! ---------------------------------------------------------------------------------
  3495                           ;! (1) _Esp8266Entrypoint                                   78    78      0   33689
  3496                           ;!                                             44 BANK0      2     2      0
  3497                           ;!                                              0 BANK9     76    76      0
  3498                           ;!           _Esp8266OpenSocketCommand
  3499                           ;!        _Esp8266SetNetworkParameters
  3500                           ;!            _EusartGetNbByteReceived
  3501                           ;!                  _EusartGetRxBuffer
  3502                           ;!                     _Send_UART_Data
  3503                           ;!                    _lcdWriteAllText
  3504                           ;!                       _lcdWriteText
  3505                           ;!                             _memcmp
  3506                           ;!                     _moveToNextChar
  3507                           ;!                         _uint8_tToa
  3508                           ;! ---------------------------------------------------------------------------------
  3509                           ;! (2) _uint8_tToa                                           9     7      2    3653
  3510                           ;!                                             25 BANK0      9     7      2
  3511                           ;!                            ___awdiv
  3512                           ;!                            ___awmod
  3513                           ;! ---------------------------------------------------------------------------------
  3514                           ;! (2) _moveToNextChar                                       5     4      1     442
  3515                           ;!                                             16 BANK0      5     4      1
  3516                           ;! ---------------------------------------------------------------------------------
  3517                           ;! (2) _memcmp                                              10     6      4     911
  3518                           ;!                                             16 BANK0     10     6      4
  3519                           ;! ---------------------------------------------------------------------------------
  3520                           ;! (2) _lcdWriteText                                         6     4      2    2212
  3521                           ;!                                             34 BANK0      6     4      2
  3522                           ;!                         _uint8_tToa (ARG)
  3523                           ;!                        _writeTxtChk
  3524                           ;! ---------------------------------------------------------------------------------
  3525                           ;! (2) _lcdWriteAllText                                      7     5      2    2164
  3526                           ;!                                             29 BANK0      7     5      2
  3527                           ;!                        _writeTxtChk
  3528                           ;! ---------------------------------------------------------------------------------
  3529                           ;! (3) _writeTxtChk                                          3     3      0    1612
  3530                           ;!                                             26 BANK0      3     3      0
  3531                           ;!                 _SetToSendDataToLCD
  3532                           ;!                  _setCursorPosition
  3533                           ;!                            _setData
  3534                           ;!                        _waitLCDBusy
  3535                           ;! ---------------------------------------------------------------------------------
  3536                           ;! (1) _setCursorPosition                                    5     4      1    1327
  3537                           ;!                                             21 BANK0      5     4      1
  3538                           ;!                 _SetToSendDataToLCD
  3539                           ;!                            _setData
  3540                           ;!                        _waitLCDBusy
  3541                           ;! ---------------------------------------------------------------------------------
  3542                           ;! (3) _waitLCDBusy                                          5     5      0      37
  3543                           ;!                                             16 BANK0      5     5      0
  3544                           ;!               _SetToReadDataFromLCD
  3545                           ;! ---------------------------------------------------------------------------------
  3546                           ;! (4) _SetToReadDataFromLCD                                 0     0      0       0
  3547                           ;! ---------------------------------------------------------------------------------
  3548                           ;! (4) _setData                                              3     3      0     124
  3549                           ;!                                             16 BANK0      3     3      0
  3550                           ;! ---------------------------------------------------------------------------------
  3551                           ;! (4) _SetToSendDataToLCD                                   0     0      0       0
  3552                           ;! ---------------------------------------------------------------------------------
  3553                           ;! (2) _EusartGetRxBuffer                                    5     3      2    1766
  3554                           ;!                                             28 BANK0      5     3      2
  3555                           ;!                             _memcpy
  3556                           ;! ---------------------------------------------------------------------------------
  3557                           ;! (2) _EusartGetNbByteReceived                              0     0      0       0
  3558                           ;! ---------------------------------------------------------------------------------
  3559                           ;! (2) _Esp8266SetNetworkParameters                         89    83      6   10771
  3560                           ;!                                              0 BANK1     14     8      6
  3561                           ;!                                              0 BANK2     75    75      0
  3562                           ;!                     _Send_UART_Data
  3563                           ;!                            ___awdiv
  3564                           ;!                            ___awmod
  3565                           ;!                             _strcat
  3566                           ;!                             _strcpy
  3567                           ;!                             _strlen
  3568                           ;! ---------------------------------------------------------------------------------
  3569                           ;! (2) ___awmod                                              7     3      4    1333
  3570                           ;!                                             16 BANK0      7     3      4
  3571                           ;! ---------------------------------------------------------------------------------
  3572                           ;! (2) ___awdiv                                              9     5      4    1345
  3573                           ;!                                             16 BANK0      9     5      4
  3574                           ;! ---------------------------------------------------------------------------------
  3575                           ;! (2) _Esp8266OpenSocketCommand                            86    80      6    9287
  3576                           ;!                                             43 BANK0      1     1      0
  3577                           ;!                                              0 BANK1      6     0      6
  3578                           ;!                                              0 BANK8     79    79      0
  3579                           ;!                     _Send_UART_Data
  3580                           ;!                             _strcat
  3581                           ;!                             _strcpy
  3582                           ;!                             _strlen
  3583                           ;!                        _uint16_tToa
  3584                           ;! ---------------------------------------------------------------------------------
  3585                           ;! (3) _uint16_tToa                                         15    12      3    1637
  3586                           ;!                                             24 BANK0     15    12      3
  3587                           ;!                            ___lwdiv
  3588                           ;!                            ___lwmod
  3589                           ;! ---------------------------------------------------------------------------------
  3590                           ;! (4) ___lwmod                                              6     2      4     412
  3591                           ;!                                             16 BANK0      6     2      4
  3592                           ;! ---------------------------------------------------------------------------------
  3593                           ;! (4) ___lwdiv                                              8     4      4     421
  3594                           ;!                                             16 BANK0      8     4      4
  3595                           ;! ---------------------------------------------------------------------------------
  3596                           ;! (2) _Send_UART_Data                                       5     2      3    1997
  3597                           ;!                                             28 BANK0      5     2      3
  3598                           ;!                             _memcpy
  3599                           ;! ---------------------------------------------------------------------------------
  3600                           ;! (1) _EUSARTInit                                           0     0      0       0
  3601                           ;! ---------------------------------------------------------------------------------
  3602                           ;! (1) _EM1812EntryPoint                                    20    18      2    3954
  3603                           ;!                                             33 BANK0      7     5      2
  3604                           ;!                                              0 BANK1     13    13      0
  3605                           ;!                       _GetI2CStatus
  3606                           ;!                 _GetNewReceivedData
  3607                           ;!                        _I2C_GetData
  3608                           ;!                       _I2C_SendData
  3609                           ;! ---------------------------------------------------------------------------------
  3610                           ;! (2) _I2C_SendData                                         5     3      2    1583
  3611                           ;!                                             28 BANK0      5     3      2
  3612                           ;!                             _memcpy
  3613                           ;! ---------------------------------------------------------------------------------
  3614                           ;! (2) _I2C_GetData                                          4     2      2     183
  3615                           ;!                                             16 BANK0      4     2      2
  3616                           ;! ---------------------------------------------------------------------------------
  3617                           ;! (2) _GetNewReceivedData                                   4     3      1    1521
  3618                           ;!                                             28 BANK0      4     3      1
  3619                           ;!                             _memcpy
  3620                           ;! ---------------------------------------------------------------------------------
  3621                           ;! (3) _memcpy                                              12     6      6    1333
  3622                           ;!                                             16 BANK0     12     6      6
  3623                           ;! ---------------------------------------------------------------------------------
  3624                           ;! (2) _GetI2CStatus                                         4     2      2       0
  3625                           ;!                                             16 BANK0      4     2      2
  3626                           ;! ---------------------------------------------------------------------------------
  3627                           ;! (1) _Debounce                                             5     3      2     788
  3628                           ;!                                             16 BANK0      5     3      2
  3629                           ;! ---------------------------------------------------------------------------------
  3630                           ;! (1) _AddTrace                                            10     7      3    5346
  3631                           ;!                                             43 BANK0      3     0      3
  3632                           ;!                                              0 BANK1      7     7      0
  3633                           ;!                             _strcat
  3634                           ;!                             _strlen
  3635                           ;! ---------------------------------------------------------------------------------
  3636                           ;! (3) _strcat                                               4     0      4    3387
  3637                           ;!                                             39 BANK0      4     0      4
  3638                           ;!                             _strcpy
  3639                           ;!                             _strlen
  3640                           ;!                        _uint16_tToa (ARG)
  3641                           ;! ---------------------------------------------------------------------------------
  3642                           ;! (2) _strlen                                               6     4      2     940
  3643                           ;!                                             16 BANK0      6     4      2
  3644                           ;! ---------------------------------------------------------------------------------
  3645                           ;! (3) _strcpy                                              12     8      4     527
  3646                           ;!                                             22 BANK0     12     8      4
  3647                           ;!                             _strlen (ARG)
  3648                           ;! ---------------------------------------------------------------------------------
  3649                           ;! Estimated maximum stack depth 4
  3650                           ;! ---------------------------------------------------------------------------------
  3651                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3652                           ;! ---------------------------------------------------------------------------------
  3653                           ;! (7) _myint                                               11    11      0    1708
  3654                           ;!                                              5 BANK0     11    11      0
  3655                           ;!                    _EUSARTInterrupt
  3656                           ;!                      _I2C_Interrupt
  3657                           ;!                  _TempUpdateRequest
  3658                           ;!                     i1_lcdWriteText
  3659                           ;! ---------------------------------------------------------------------------------
  3660                           ;! (8) i1_lcdWriteText                                       6     4      2    1282
  3661                           ;!                                             13 COMMON     1     1      0
  3662                           ;!                                              0 BANK0      5     3      2
  3663                           ;!                      i1_writeTxtChk
  3664                           ;! ---------------------------------------------------------------------------------
  3665                           ;! (9) i1_writeTxtChk                                        3     3      0    1082
  3666                           ;!                                             10 COMMON     3     3      0
  3667                           ;!               i1_SetToSendDataToLCD
  3668                           ;!                i1_setCursorPosition
  3669                           ;!                          i1_setData
  3670                           ;!                      i1_waitLCDBusy
  3671                           ;! ---------------------------------------------------------------------------------
  3672                           ;! (10) i1_setCursorPosition                                 5     4      1     797
  3673                           ;!                                              5 COMMON     5     4      1
  3674                           ;!               i1_SetToSendDataToLCD
  3675                           ;!                          i1_setData
  3676                           ;!                      i1_waitLCDBusy
  3677                           ;! ---------------------------------------------------------------------------------
  3678                           ;! (10) i1_waitLCDBusy                                       5     5      0      37
  3679                           ;!                                              0 COMMON     5     5      0
  3680                           ;!             i1_SetToReadDataFromLCD
  3681                           ;! ---------------------------------------------------------------------------------
  3682                           ;! (11) i1_SetToReadDataFromLCD                              0     0      0       0
  3683                           ;! ---------------------------------------------------------------------------------
  3684                           ;! (10) i1_setData                                           3     3      0     124
  3685                           ;!                                              0 COMMON     3     3      0
  3686                           ;! ---------------------------------------------------------------------------------
  3687                           ;! (11) i1_SetToSendDataToLCD                                0     0      0       0
  3688                           ;! ---------------------------------------------------------------------------------
  3689                           ;! (8) _TempUpdateRequest                                    0     0      0       0
  3690                           ;! ---------------------------------------------------------------------------------
  3691                           ;! (8) _I2C_Interrupt                                        5     3      2      26
  3692                           ;!                                              0 COMMON     5     3      2
  3693                           ;! ---------------------------------------------------------------------------------
  3694                           ;! (8) _EUSARTInterrupt                                      5     3      2      24
  3695                           ;!                                              0 COMMON     5     3      2
  3696                           ;! ---------------------------------------------------------------------------------
  3697                           ;! Estimated maximum stack depth 11
  3698                           ;! ---------------------------------------------------------------------------------
  3699                           ;!
  3700                           ;! Call Graph Graphs:
  3701                           ;!
  3702                           ;! _main (ROOT)
  3703                           ;!   _AddTrace
  3704                           ;!     _strcat
  3705                           ;!       _strcpy
  3706                           ;!         _strlen (ARG)
  3707                           ;!       _strlen
  3708                           ;!       _uint16_tToa (ARG)
  3709                           ;!         ___lwdiv
  3710                           ;!         ___lwmod
  3711                           ;!     _strlen
  3712                           ;!   _Debounce
  3713                           ;!   _EM1812EntryPoint
  3714                           ;!     _GetI2CStatus
  3715                           ;!     _GetNewReceivedData
  3716                           ;!       _memcpy
  3717                           ;!     _I2C_GetData
  3718                           ;!     _I2C_SendData
  3719                           ;!       _memcpy
  3720                           ;!   _EUSARTInit
  3721                           ;!   _Esp8266Entrypoint
  3722                           ;!     _Esp8266OpenSocketCommand
  3723                           ;!       _Send_UART_Data
  3724                           ;!         _memcpy
  3725                           ;!       _strcat
  3726                           ;!         _strcpy
  3727                           ;!           _strlen (ARG)
  3728                           ;!         _strlen
  3729                           ;!         _uint16_tToa (ARG)
  3730                           ;!           ___lwdiv
  3731                           ;!           ___lwmod
  3732                           ;!       _strcpy
  3733                           ;!         _strlen (ARG)
  3734                           ;!       _strlen
  3735                           ;!       _uint16_tToa
  3736                           ;!         ___lwdiv
  3737                           ;!         ___lwmod
  3738                           ;!     _Esp8266SetNetworkParameters
  3739                           ;!       _Send_UART_Data
  3740                           ;!         _memcpy
  3741                           ;!       ___awdiv
  3742                           ;!       ___awmod
  3743                           ;!       _strcat
  3744                           ;!         _strcpy
  3745                           ;!           _strlen (ARG)
  3746                           ;!         _strlen
  3747                           ;!         _uint16_tToa (ARG)
  3748                           ;!           ___lwdiv
  3749                           ;!           ___lwmod
  3750                           ;!       _strcpy
  3751                           ;!         _strlen (ARG)
  3752                           ;!       _strlen
  3753                           ;!     _EusartGetNbByteReceived
  3754                           ;!     _EusartGetRxBuffer
  3755                           ;!       _memcpy
  3756                           ;!     _Send_UART_Data
  3757                           ;!       _memcpy
  3758                           ;!     _lcdWriteAllText
  3759                           ;!       _writeTxtChk
  3760                           ;!         _SetToSendDataToLCD
  3761                           ;!         _setCursorPosition
  3762                           ;!           _SetToSendDataToLCD
  3763                           ;!           _setData
  3764                           ;!           _waitLCDBusy
  3765                           ;!             _SetToReadDataFromLCD
  3766                           ;!         _setData
  3767                           ;!         _waitLCDBusy
  3768                           ;!           _SetToReadDataFromLCD
  3769                           ;!     _lcdWriteText
  3770                           ;!       _uint8_tToa (ARG)
  3771                           ;!         ___awdiv
  3772                           ;!         ___awmod
  3773                           ;!       _writeTxtChk (ARG)
  3774                           ;!         _SetToSendDataToLCD
  3775                           ;!         _setCursorPosition
  3776                           ;!           _SetToSendDataToLCD
  3777                           ;!           _setData
  3778                           ;!           _waitLCDBusy
  3779                           ;!             _SetToReadDataFromLCD
  3780                           ;!         _setData
  3781                           ;!         _waitLCDBusy
  3782                           ;!           _SetToReadDataFromLCD
  3783                           ;!     _memcmp
  3784                           ;!     _moveToNextChar
  3785                           ;!     _uint8_tToa
  3786                           ;!       ___awdiv
  3787                           ;!       ___awmod
  3788                           ;!   _Esp8266OpenSocket
  3789                           ;!   _Esp8266SetAccessPointMode
  3790                           ;!   _Esp8266SetupWifi
  3791                           ;!   _I2CInit
  3792                           ;!     _memset
  3793                           ;!   _PrintLog
  3794                           ;!     _lcdWriteText
  3795                           ;!       _uint8_tToa (ARG)
  3796                           ;!         ___awdiv
  3797                           ;!         ___awmod
  3798                           ;!       _writeTxtChk (ARG)
  3799                           ;!         _SetToSendDataToLCD
  3800                           ;!         _setCursorPosition
  3801                           ;!           _SetToSendDataToLCD
  3802                           ;!           _setData
  3803                           ;!           _waitLCDBusy
  3804                           ;!             _SetToReadDataFromLCD
  3805                           ;!         _setData
  3806                           ;!         _waitLCDBusy
  3807                           ;!           _SetToReadDataFromLCD
  3808                           ;!     _memset
  3809                           ;!     _strlen
  3810                           ;!   _clearDisplay
  3811                           ;!     _writeInsChk
  3812                           ;!       _waitLCDBusy
  3813                           ;!         _SetToReadDataFromLCD
  3814                           ;!       _writeInsNoChk
  3815                           ;!         _SetToSendDataToLCD
  3816                           ;!         _setData
  3817                           ;!   _initLCD
  3818                           ;!     _clearDisplay
  3819                           ;!       _writeInsChk
  3820                           ;!         _waitLCDBusy
  3821                           ;!           _SetToReadDataFromLCD
  3822                           ;!         _writeInsNoChk
  3823                           ;!           _SetToSendDataToLCD
  3824                           ;!           _setData
  3825                           ;!     _setData
  3826                           ;!     _writeInsChk
  3827                           ;!       _waitLCDBusy
  3828                           ;!         _SetToReadDataFromLCD
  3829                           ;!       _writeInsNoChk
  3830                           ;!         _SetToSendDataToLCD
  3831                           ;!         _setData
  3832                           ;!   _memset
  3833                           ;!   _moveCursorToHome
  3834                           ;!     _writeInsChk
  3835                           ;!       _waitLCDBusy
  3836                           ;!         _SetToReadDataFromLCD
  3837                           ;!       _writeInsNoChk
  3838                           ;!         _SetToSendDataToLCD
  3839                           ;!         _setData
  3840                           ;!   _powerOnLcd
  3841                           ;!     _writeInsChk
  3842                           ;!       _waitLCDBusy
  3843                           ;!         _SetToReadDataFromLCD
  3844                           ;!       _writeInsNoChk
  3845                           ;!         _SetToSendDataToLCD
  3846                           ;!         _setData
  3847                           ;!   _printEM1812
  3848                           ;!     ___awdiv
  3849                           ;!     ___awmod
  3850                           ;!   _setCursorOff
  3851                           ;!     _writeInsChk
  3852                           ;!       _waitLCDBusy
  3853                           ;!         _SetToReadDataFromLCD
  3854                           ;!       _writeInsNoChk
  3855                           ;!         _SetToSendDataToLCD
  3856                           ;!         _setData
  3857                           ;!   _setCursorPosition
  3858                           ;!     _SetToSendDataToLCD
  3859                           ;!     _setData
  3860                           ;!     _waitLCDBusy
  3861                           ;!       _SetToReadDataFromLCD
  3862                           ;!   _setNotBlinkingCursor
  3863                           ;!     _writeInsChk
  3864                           ;!       _waitLCDBusy
  3865                           ;!         _SetToReadDataFromLCD
  3866                           ;!       _writeInsNoChk
  3867                           ;!         _SetToSendDataToLCD
  3868                           ;!         _setData
  3869                           ;!
  3870                           ;! _myint (ROOT)
  3871                           ;!   _EUSARTInterrupt
  3872                           ;!   _I2C_Interrupt
  3873                           ;!   _TempUpdateRequest
  3874                           ;!   i1_lcdWriteText
  3875                           ;!     i1_writeTxtChk
  3876                           ;!       i1_SetToSendDataToLCD
  3877                           ;!       i1_setCursorPosition
  3878                           ;!         i1_SetToSendDataToLCD
  3879                           ;!         i1_setData
  3880                           ;!         i1_waitLCDBusy
  3881                           ;!           i1_SetToReadDataFromLCD
  3882                           ;!       i1_setData
  3883                           ;!       i1_waitLCDBusy
  3884                           ;!         i1_SetToReadDataFromLCD
  3885                           ;!
  3886                           
  3887                           ;! Address spaces:
  3888                           
  3889                           ;!Name               Size   Autos  Total    Cost      Usage
  3890                           ;!BIGRAM             3F0      0       0       0        0.0%
  3891                           ;!NULL                 0      0       0       0        0.0%
  3892                           ;!CODE                 0      0       0       0        0.0%
  3893                           ;!BITCOMMON            E      0       0       1        0.0%
  3894                           ;!BITSFR0              0      0       0       1        0.0%
  3895                           ;!SFR0                 0      0       0       1        0.0%
  3896                           ;!COMMON               E      E       E       2      100.0%
  3897                           ;!BITSFR1              0      0       0       2        0.0%
  3898                           ;!SFR1                 0      0       0       2        0.0%
  3899                           ;!BITSFR2              0      0       0       3        0.0%
  3900                           ;!SFR2                 0      0       0       3        0.0%
  3901                           ;!STACK                0      0       0       3        0.0%
  3902                           ;!BITBANK0            50      0       0       4        0.0%
  3903                           ;!BITSFR3              0      0       0       4        0.0%
  3904                           ;!SFR3                 0      0       0       4        0.0%
  3905                           ;!BANK0               50     2E      40       5       80.0%
  3906                           ;!BITSFR4              0      0       0       5        0.0%
  3907                           ;!SFR4                 0      0       0       5        0.0%
  3908                           ;!BITBANK1            50      0       0       6        0.0%
  3909                           ;!BITSFR5              0      0       0       6        0.0%
  3910                           ;!SFR5                 0      0       0       6        0.0%
  3911                           ;!BANK1               50     3E      3F       7       78.8%
  3912                           ;!BITSFR6              0      0       0       7        0.0%
  3913                           ;!SFR6                 0      0       0       7        0.0%
  3914                           ;!BITBANK2            50      0       0       8        0.0%
  3915                           ;!BITSFR7              0      0       0       8        0.0%
  3916                           ;!SFR7                 0      0       0       8        0.0%
  3917                           ;!BANK2               50     4B      4F       9       98.8%
  3918                           ;!BITSFR8              0      0       0       9        0.0%
  3919                           ;!SFR8                 0      0       0       9        0.0%
  3920                           ;!BITBANK3            50      0       0      10        0.0%
  3921                           ;!BITSFR9              0      0       0      10        0.0%
  3922                           ;!SFR9                 0      0       0      10        0.0%
  3923                           ;!BANK3               50      0      1B      11       33.8%
  3924                           ;!BITSFR10             0      0       0      11        0.0%
  3925                           ;!SFR10                0      0       0      11        0.0%
  3926                           ;!BITBANK4            50      0       0      12        0.0%
  3927                           ;!BITSFR11             0      0       0      12        0.0%
  3928                           ;!SFR11                0      0       0      12        0.0%
  3929                           ;!BANK4               50      0      44      13       85.0%
  3930                           ;!BITSFR12             0      0       0      13        0.0%
  3931                           ;!SFR12                0      0       0      13        0.0%
  3932                           ;!BITBANK5            50      0       0      14        0.0%
  3933                           ;!BITSFR13             0      0       0      14        0.0%
  3934                           ;!SFR13                0      0       0      14        0.0%
  3935                           ;!BANK5               50      0      4B      15       93.8%
  3936                           ;!BITSFR14             0      0       0      15        0.0%
  3937                           ;!SFR14                0      0       0      15        0.0%
  3938                           ;!BITBANK6            50      0       0      16        0.0%
  3939                           ;!BITSFR15             0      0       0      16        0.0%
  3940                           ;!SFR15                0      0       0      16        0.0%
  3941                           ;!BANK6               50      0      46      17       87.5%
  3942                           ;!BITSFR16             0      0       0      17        0.0%
  3943                           ;!SFR16                0      0       0      17        0.0%
  3944                           ;!BITBANK7            50      0       0      18        0.0%
  3945                           ;!BITSFR17             0      0       0      18        0.0%
  3946                           ;!SFR17                0      0       0      18        0.0%
  3947                           ;!BANK7               50      0      46      19       87.5%
  3948                           ;!BITSFR18             0      0       0      19        0.0%
  3949                           ;!SFR18                0      0       0      19        0.0%
  3950                           ;!BITSFR19             0      0       0      20        0.0%
  3951                           ;!SFR19                0      0       0      20        0.0%
  3952                           ;!ABS                  0      0     2AD      20        0.0%
  3953                           ;!BITBANK8            50      0       0      21        0.0%
  3954                           ;!BITSFR20             0      0       0      21        0.0%
  3955                           ;!SFR20                0      0       0      21        0.0%
  3956                           ;!BANK8               50     4F      4F      22       98.8%
  3957                           ;!BITSFR21             0      0       0      22        0.0%
  3958                           ;!SFR21                0      0       0      22        0.0%
  3959                           ;!BITBANK9            50      0       0      23        0.0%
  3960                           ;!BITSFR22             0      0       0      23        0.0%
  3961                           ;!SFR22                0      0       0      23        0.0%
  3962                           ;!BANK9               50     4C      4C      24       95.0%
  3963                           ;!BITSFR23             0      0       0      24        0.0%
  3964                           ;!SFR23                0      0       0      24        0.0%
  3965                           ;!BITBANK10           50      0       0      25        0.0%
  3966                           ;!BITSFR24             0      0       0      25        0.0%
  3967                           ;!SFR24                0      0       0      25        0.0%
  3968                           ;!BANK10              50      0       0      26        0.0%
  3969                           ;!BITSFR25             0      0       0      26        0.0%
  3970                           ;!SFR25                0      0       0      26        0.0%
  3971                           ;!BITBANK11           50      0       0      27        0.0%
  3972                           ;!BITSFR26             0      0       0      27        0.0%
  3973                           ;!SFR26                0      0       0      27        0.0%
  3974                           ;!BANK11              50      0       0      28        0.0%
  3975                           ;!BITSFR27             0      0       0      28        0.0%
  3976                           ;!SFR27                0      0       0      28        0.0%
  3977                           ;!BITBANK12           30      0       0      29        0.0%
  3978                           ;!BITSFR28             0      0       0      29        0.0%
  3979                           ;!SFR28                0      0       0      29        0.0%
  3980                           ;!BANK12              30      0       0      30        0.0%
  3981                           ;!BITSFR29             0      0       0      30        0.0%
  3982                           ;!SFR29                0      0       0      30        0.0%
  3983                           ;!BITSFR30             0      0       0      31        0.0%
  3984                           ;!SFR30                0      0       0      31        0.0%
  3985                           ;!DATA                 0      0     2AD      31        0.0%
  3986                           ;!BITSFR31             0      0       0      32        0.0%
  3987                           ;!SFR31                0      0       0      32        0.0%
  3988                           
  3989                           	global	_main
  3990                           
  3991 ;; *************** function _main *****************
  3992 ;; Defined at:
  3993 ;;		line 122 in file "161518_temp_main.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;		None
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;  wReadout       20   20[BANK1 ] unsigned char [20]
  3998 ;;  wConv           4   16[BANK1 ] unsigned char [4]
  3999 ;;  wDebounceDow    2   56[BANK1 ] unsigned short 
  4000 ;;  wDebounceUp     2   54[BANK1 ] unsigned short 
  4001 ;;  wDebounceEnt    2   52[BANK1 ] unsigned short 
  4002 ;;  wTemperature    2   50[BANK1 ] short 
  4003 ;;  wHumidityPre    2   48[BANK1 ] short 
  4004 ;;  wIterationCo    2   44[BANK1 ] unsigned short 
  4005 ;;  wTemp           2   42[BANK1 ] int 
  4006 ;;  wCounter        2   40[BANK1 ] int 
  4007 ;;  wMenu           1   61[BANK1 ] unsigned char 
  4008 ;;  wEnterBotton    1   60[BANK1 ] unsigned char 
  4009 ;;  wDownBottonP    1   59[BANK1 ] unsigned char 
  4010 ;;  wUpBottonPre    1   58[BANK1 ] unsigned char 
  4011 ;;  wEditingMode    1   47[BANK1 ] unsigned char 
  4012 ;;  wUpdateMenu     1   46[BANK1 ] unsigned char 
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      void 
  4015 ;; Registers used:
  4016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4017 ;; Tracked objects:
  4018 ;;		On entry : B1F/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4023 ;;      Locals:         0       0      46       0       0       0       0       0       0       0       0       0       
       0       0
  4024 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  4025 ;;      Totals:         0       0      48       0       0       0       0       0       0       0       0       0       
       0       0
  4026 ;;Total ram usage:       48 bytes
  4027 ;; Hardware stack levels required when called:   12
  4028 ;; This function calls:
  4029 ;;		_AddTrace
  4030 ;;		_Debounce
  4031 ;;		_EM1812EntryPoint
  4032 ;;		_EUSARTInit
  4033 ;;		_Esp8266Entrypoint
  4034 ;;		_Esp8266OpenSocket
  4035 ;;		_Esp8266SetAccessPointMode
  4036 ;;		_Esp8266SetupWifi
  4037 ;;		_I2CInit
  4038 ;;		_PrintLog
  4039 ;;		_clearDisplay
  4040 ;;		_initLCD
  4041 ;;		_memset
  4042 ;;		_moveCursorToHome
  4043 ;;		_powerOnLcd
  4044 ;;		_printEM1812
  4045 ;;		_setCursorOff
  4046 ;;		_setCursorPosition
  4047 ;;		_setNotBlinkingCursor
  4048 ;; This function is called by:
  4049 ;;		Startup code after reset
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  4053                           	file	"161518_temp_main.c"
  4054                           	line	122
  4055                           global __pmaintext
  4056                           __pmaintext:	;psect for function _main
  4057  00D5                     psect	maintext
  4058                           	file	"161518_temp_main.c"
  4059                           	line	122
  4060                           	global	__size_of_main
  4061                           	__size_of_main	equ	__end_of_main-_main
  4062  024D                     	
  4063                           _main:	
  4064  00D5                     ;incstack = 0
  4065                           	opt	stack 4
  4066                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4067                           	line	125
  4068                           	
  4069                           l6228:	
  4070  00D5                     	movlb 3	; select bank3
  4071  00D5  0023               	clrf	(_gErrorCode)^0180h
  4072  00D6  01A9               	line	128
  4073                           	movlb 1	; select bank1
  4074  00D7  0021               	clrf	(main@wHumidityPrev)^080h
  4075  00D8  01D0               	clrf	(main@wHumidityPrev+1)^080h
  4076  00D9  01D1               	line	129
  4077                           	clrf	(main@wTemperaturePrev)^080h
  4078  00DA  01D2               	clrf	(main@wTemperaturePrev+1)^080h
  4079  00DB  01D3               	line	130
  4080                           	
  4081                           l6230:	
  4082  00DC                     	movlw	0
  4083  00DC  3000               	movlb 0	; select bank0
  4084  00DD  0020               	movwf	(memset@c)
  4085  00DE  00B0               	movwf	(memset@c+1)
  4086  00DF  00B1               	movlw	04Bh
  4087  00E0  304B               	movwf	(memset@n)
  4088  00E1  00B2               	movlw	0
  4089  00E2  3000               	movwf	((memset@n))+1
  4090  00E3  00B3               	movlw	(low(_wInterruptText|((0x2)<<8)))&0ffh
  4091  00E4  30A0               	fcall	_memset
  4092  00E5  318E  2628  3180   	line	133
  4093                           	
  4094                           l6232:	
  4095  00E8                     	movlw	(0Fh & ((1<<4)-1))<<3
  4096  00E8  3078               	movlb 1	; select bank1
  4097  00E9  0021               	iorwf	(153)^080h,f	;volatile
  4098  00EA  0499               	line	134
  4099                           	
  4100                           l6234:	
  4101  00EB                     	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
  4102  00EB  30FC               	andwf	(153)^080h,f	;volatile
  4103  00EC  0599               	line	135
  4104                           	
  4105                           l6236:	
  4106  00ED                     	bcf	(11),7	;volatile
  4107  00ED  138B               	line	137
  4108                           	
  4109                           l6238:	
  4110  00EE                     	clrf	(main@wUpBottonPressed)^080h
  4111  00EE  01DA               	line	138
  4112                           	
  4113                           l6240:	
  4114  00EF                     	clrf	(main@wDownBottonPressed)^080h
  4115  00EF  01DB               	line	139
  4116                           	
  4117                           l6242:	
  4118  00F0                     	clrf	(main@wEnterBottonPressed)^080h
  4119  00F0  01DC               	line	141
  4120                           	
  4121                           l6244:	
  4122  00F1                     	clrf	(main@wEditingMode)^080h
  4123  00F1  01CF               	line	142
  4124                           	
  4125                           l6246:	
  4126  00F2                     	clrf	(main@wMenu)^080h
  4127  00F2  01DD               	line	143
  4128                           	
  4129                           l6248:	
  4130  00F3                     	clrf	(main@wUpdateMenu)^080h
  4131  00F3  01CE               	incf	(main@wUpdateMenu)^080h,f
  4132  00F4  0ACE               	line	145
  4133                           	
  4134                           l6250:	
  4135  00F5                     	clrf	(main@wIterationCounter)^080h
  4136  00F5  01CC               	clrf	(main@wIterationCounter+1)^080h
  4137  00F6  01CD               	line	146
  4138                           	
  4139                           l6252:	
  4140  00F7                     	clrf	(main@wDebounceEnter)^080h
  4141  00F7  01D4               	clrf	(main@wDebounceEnter+1)^080h
  4142  00F8  01D5               	line	147
  4143                           	
  4144                           l6254:	
  4145  00F9                     	clrf	(main@wDebounceUp)^080h
  4146  00F9  01D6               	clrf	(main@wDebounceUp+1)^080h
  4147  00FA  01D7               	line	148
  4148                           	
  4149                           l6256:	
  4150  00FB                     	clrf	(main@wDebounceDown)^080h
  4151  00FB  01D8               	clrf	(main@wDebounceDown+1)^080h
  4152  00FC  01D9               	line	150
  4153                           	
  4154                           l6258:	
  4155  00FD                     	movlb 0	; select bank0
  4156  00FD  0020               	clrf	(12)	;volatile
  4157  00FE  018C               	line	154
  4158                           	
  4159                           l6260:	
  4160  00FF                     	movlw	((0 & ((1<<2)-1))<<6)|not (((1<<2)-1)<<6)
  4161  00FF  303F               	andwf	(24),f	;volatile
  4162  0100  0598               	line	155
  4163                           	
  4164                           l6262:	
  4165  0101                     	bcf	(24),3	;volatile
  4166  0101  1198               	line	156
  4167                           	
  4168                           l6264:	
  4169  0102                     	movlw	(03h & ((1<<2)-1))<<4
  4170  0102  3030               	iorwf	(24),f	;volatile
  4171  0103  0498               	line	157
  4172                           	
  4173                           l6266:	
  4174  0104                     	bcf	(24),2	;volatile
  4175  0104  1118               	line	158
  4176                           	
  4177                           l6268:	
  4178  0105                     	bsf	(24),0	;volatile
  4179  0105  1418               	line	159
  4180                           	
  4181                           l6270:	
  4182  0106                     	movlb 1	; select bank1
  4183  0106  0021               	bsf	(145)^080h,0	;volatile
  4184  0107  1411               	line	163
  4185                           	
  4186                           l6272:	
  4187  0108                     	movf	(149)^080h,w	;volatile
  4188  0108  0815               	andlw	not (((1<<3)-1)<<0)
  4189  0109  39F8               	iorlw	(02h & ((1<<3)-1))<<0
  4190  010A  3802               	movwf	(149)^080h	;volatile
  4191  010B  0095               	line	164
  4192                           	
  4193                           l6274:	
  4194  010C                     	bcf	(149)^080h,5	;volatile
  4195  010C  1295               	line	165
  4196                           	
  4197                           l6276:	
  4198  010D                     	bcf	(149)^080h,3	;volatile
  4199  010D  1195               	line	166
  4200                           	
  4201                           l6278:	
  4202  010E                     	bcf	(11),5	;volatile
  4203  010E  128B               	line	170
  4204                           	
  4205                           l6280:	
  4206  010F                     	movlb 0	; select bank0
  4207  010F  0020               	clrf	(13)	;volatile
  4208  0110  018D               	line	171
  4209                           	
  4210                           l6282:	
  4211  0111                     	movlb 3	; select bank3
  4212  0111  0023               	clrf	(397)^0180h	;volatile
  4213  0112  018D               	line	172
  4214                           	
  4215                           l6284:	
  4216  0113                     	movlw	low(0Fh)
  4217  0113  300F               	movlb 1	; select bank1
  4218  0114  0021               	movwf	(141)^080h	;volatile
  4219  0115  008D               	line	173
  4220                           	
  4221                           l6286:	
  4222  0116                     	movlw	low(0Fh)
  4223  0116  300F               	movlb 4	; select bank4
  4224  0117  0024               	movwf	(525)^0200h	;volatile
  4225  0118  008D               	line	174
  4226                           	
  4227                           l6288:	
  4228  0119                     	movlb 1	; select bank1
  4229  0119  0021               	bcf	(149)^080h,7	;volatile
  4230  011A  1395               	line	178
  4231                           	
  4232                           l6290:	
  4233  011B                     	fcall	_I2CInit
  4234  011B  3195  253E  3180   	line	179
  4235                           	
  4236                           l6292:	
  4237  011E                     	fcall	_EUSARTInit
  4238  011E  3193  2359  3180   	line	183
  4239                           	
  4240                           l6294:	
  4241  0121                     	bsf	(11),7	;volatile
  4242  0121  178B               	line	186
  4243                           	
  4244                           l6296:	
  4245  0122                     	fcall	_initLCD
  4246  0122  3189  21BE  3180   	line	187
  4247                           	
  4248                           l6298:	
  4249  0125                     	fcall	_clearDisplay
  4250  0125  3192  22D2  3180   	line	188
  4251                           	
  4252                           l6300:	
  4253  0128                     	opt asmopt_push
  4254                           opt asmopt_off
  4255                           movlw  3
  4256  0128  3003               	movlb 1	; select bank1
  4257  0129  0021               movwf	((??_main+0)^080h+0+1),f
  4258  012A  00AF               movlw	8
  4259  012B  3008               movwf	((??_main+0)^080h+0),f
  4260  012C  00AE               	movlw	119
  4261  012D  3077               u4877:
  4262  012E                     decfsz	wreg
  4263  012E  0B89               	goto	u4877
  4264  012F  292E               	decfsz	((??_main+0)^080h+0),f
  4265  0130  0BAE               	goto	u4877
  4266  0131  292E               	decfsz	((??_main+0)^080h+0+1),f
  4267  0132  0BAF               	goto	u4877
  4268  0133  292E               opt asmopt_pop
  4269                           
  4270                           	line	189
  4271                           	
  4272                           l6302:	
  4273  0134                     	fcall	_powerOnLcd
  4274  0134  3193  232B  3180   	line	190
  4275                           	
  4276                           l6304:	
  4277  0137                     	opt asmopt_push
  4278                           opt asmopt_off
  4279                           movlw  3
  4280  0137  3003               	movlb 1	; select bank1
  4281  0138  0021               movwf	((??_main+0)^080h+0+1),f
  4282  0139  00AF               movlw	8
  4283  013A  3008               movwf	((??_main+0)^080h+0),f
  4284  013B  00AE               	movlw	119
  4285  013C  3077               u4887:
  4286  013D                     decfsz	wreg
  4287  013D  0B89               	goto	u4887
  4288  013E  293D               	decfsz	((??_main+0)^080h+0),f
  4289  013F  0BAE               	goto	u4887
  4290  0140  293D               	decfsz	((??_main+0)^080h+0+1),f
  4291  0141  0BAF               	goto	u4887
  4292  0142  293D               opt asmopt_pop
  4293                           
  4294                           	line	191
  4295                           	
  4296                           l6306:	
  4297  0143                     	fcall	_setCursorOff
  4298  0143  3193  2336  3180   	line	192
  4299                           	
  4300                           l6308:	
  4301  0146                     	opt asmopt_push
  4302                           opt asmopt_off
  4303                           movlw  3
  4304  0146  3003               	movlb 1	; select bank1
  4305  0147  0021               movwf	((??_main+0)^080h+0+1),f
  4306  0148  00AF               movlw	8
  4307  0149  3008               movwf	((??_main+0)^080h+0),f
  4308  014A  00AE               	movlw	119
  4309  014B  3077               u4897:
  4310  014C                     decfsz	wreg
  4311  014C  0B89               	goto	u4897
  4312  014D  294C               	decfsz	((??_main+0)^080h+0),f
  4313  014E  0BAE               	goto	u4897
  4314  014F  294C               	decfsz	((??_main+0)^080h+0+1),f
  4315  0150  0BAF               	goto	u4897
  4316  0151  294C               opt asmopt_pop
  4317                           
  4318                           	line	193
  4319                           	
  4320                           l6310:	
  4321  0152                     	fcall	_moveCursorToHome
  4322  0152  3192  22FB  3180   	line	194
  4323                           	
  4324                           l6312:	
  4325  0155                     	opt asmopt_push
  4326                           opt asmopt_off
  4327                           movlw  3
  4328  0155  3003               	movlb 1	; select bank1
  4329  0156  0021               movwf	((??_main+0)^080h+0+1),f
  4330  0157  00AF               movlw	8
  4331  0158  3008               movwf	((??_main+0)^080h+0),f
  4332  0159  00AE               	movlw	119
  4333  015A  3077               u4907:
  4334  015B                     decfsz	wreg
  4335  015B  0B89               	goto	u4907
  4336  015C  295B               	decfsz	((??_main+0)^080h+0),f
  4337  015D  0BAE               	goto	u4907
  4338  015E  295B               	decfsz	((??_main+0)^080h+0+1),f
  4339  015F  0BAF               	goto	u4907
  4340  0160  295B               opt asmopt_pop
  4341                           
  4342                           	line	195
  4343                           	
  4344                           l6314:	
  4345  0161                     	fcall	_setNotBlinkingCursor
  4346  0161  3193  2341  3180   	line	196
  4347                           	
  4348                           l6316:	
  4349  0164                     	opt asmopt_push
  4350                           opt asmopt_off
  4351                           movlw  3
  4352  0164  3003               	movlb 1	; select bank1
  4353  0165  0021               movwf	((??_main+0)^080h+0+1),f
  4354  0166  00AF               movlw	8
  4355  0167  3008               movwf	((??_main+0)^080h+0),f
  4356  0168  00AE               	movlw	119
  4357  0169  3077               u4917:
  4358  016A                     decfsz	wreg
  4359  016A  0B89               	goto	u4917
  4360  016B  296A               	decfsz	((??_main+0)^080h+0),f
  4361  016C  0BAE               	goto	u4917
  4362  016D  296A               	decfsz	((??_main+0)^080h+0+1),f
  4363  016E  0BAF               	goto	u4917
  4364  016F  296A               opt asmopt_pop
  4365                           
  4366                           	line	199
  4367                           	
  4368                           l6318:	
  4369  0170                     	movlb 1	; select bank1
  4370  0170  0021               	clrf	(main@wCounter)^080h
  4371  0171  01C8               	clrf	(main@wCounter+1)^080h
  4372  0172  01C9               	line	200
  4373                           	
  4374                           l6320:	
  4375  0173                     	movlb 3	; select bank3
  4376  0173  0023               	movf	(main@F2356+3)^0180h,w
  4377  0174  0838               	movlb 1	; select bank1
  4378  0175  0021               	movwf	(main@wConv+3)^080h
  4379  0176  00B3               	movlb 3	; select bank3
  4380  0177  0023               	movf	(main@F2356+2)^0180h,w
  4381  0178  0837               	movlb 1	; select bank1
  4382  0179  0021               	movwf	(main@wConv+2)^080h
  4383  017A  00B2               	movlb 3	; select bank3
  4384  017B  0023               	movf	(main@F2356+1)^0180h,w
  4385  017C  0836               	movlb 1	; select bank1
  4386  017D  0021               	movwf	(main@wConv+1)^080h
  4387  017E  00B1               	movlb 3	; select bank3
  4388  017F  0023               	movf	(main@F2356)^0180h,w
  4389  0180  0835               	movlb 1	; select bank1
  4390  0181  0021               	movwf	(main@wConv)^080h
  4391  0182  00B0               
  4392                           	line	201
  4393                           	
  4394                           l6322:	
  4395  0183                     	clrf	(main@wTemp)^080h
  4396  0183  01CA               	clrf	(main@wTemp+1)^080h
  4397  0184  01CB               	line	204
  4398                           	
  4399                           l6324:	
  4400  0185                     	fcall	_clearDisplay
  4401  0185  3192  22D2  3180   	line	205
  4402                           	
  4403                           l6326:	
  4404  0188                     	fcall	_moveCursorToHome
  4405  0188  3192  22FB  3180   	line	206
  4406                           	
  4407                           l6328:	
  4408  018B                     	opt asmopt_push
  4409                           opt asmopt_off
  4410                           movlw	156
  4411  018B  309C               	movlb 1	; select bank1
  4412  018C  0021               movwf	((??_main+0)^080h+0),f
  4413  018D  00AE               	movlw	215
  4414  018E  30D7               u4927:
  4415  018F                     decfsz	wreg
  4416  018F  0B89               	goto	u4927
  4417  0190  298F               	decfsz	((??_main+0)^080h+0),f
  4418  0191  0BAE               	goto	u4927
  4419  0192  298F               opt asmopt_pop
  4420                           
  4421                           	line	209
  4422                           	
  4423                           l6330:	
  4424  0193                     	movlb 3	; select bank3
  4425  0193  0023               	bsf	(413)^0180h,7	;volatile
  4426  0194  179D               	line	210
  4427                           	
  4428                           l6332:	
  4429  0195                     	bsf	(413)^0180h,4	;volatile
  4430  0195  161D               	line	211
  4431                           	
  4432                           l6334:	
  4433  0196                     	bcf	(413)^0180h,3	;volatile
  4434  0196  119D               	line	212
  4435                           	
  4436                           l6336:	
  4437  0197                     	bcf	(413)^0180h,6	;volatile
  4438  0197  131D               	line	214
  4439                           	
  4440                           l6338:	
  4441  0198                     	opt asmopt_push
  4442                           opt asmopt_off
  4443                           movlw  21
  4444  0198  3015               	movlb 1	; select bank1
  4445  0199  0021               movwf	((??_main+0)^080h+0+1),f
  4446  019A  00AF               movlw	75
  4447  019B  304B               movwf	((??_main+0)^080h+0),f
  4448  019C  00AE               	movlw	190
  4449  019D  30BE               u4937:
  4450  019E                     decfsz	wreg
  4451  019E  0B89               	goto	u4937
  4452  019F  299E               	decfsz	((??_main+0)^080h+0),f
  4453  01A0  0BAE               	goto	u4937
  4454  01A1  299E               	decfsz	((??_main+0)^080h+0+1),f
  4455  01A2  0BAF               	goto	u4937
  4456  01A3  299E               	nop
  4457  01A4  0000               opt asmopt_pop
  4458                           
  4459                           	goto	l6340
  4460  01A5  29A6               	line	215
  4461                           	
  4462                           l165:	
  4463  01A6                     	line	259
  4464                           	
  4465                           l6340:	
  4466  01A6                     	fcall	_Esp8266Entrypoint
  4467  01A6  3183  2322  3180   	line	260
  4468                           	
  4469                           l6342:	
  4470  01A9                     	movlw	(low(_wTemperature|((0x1)<<8)))&0ffh
  4471  01A9  30AD               	movlb 1	; select bank1
  4472  01AA  0021               	movwf	(??_main+0)^080h+0
  4473  01AB  00AE               	movf	(??_main+0)^080h+0,w
  4474  01AC  082E               	movlb 0	; select bank0
  4475  01AD  0020               	movwf	(EM1812EntryPoint@oTemperature)
  4476  01AE  00C1               	movlw	(low(_wHumidity|((0x1)<<8)))&0ffh
  4477  01AF  30AF               	fcall	_EM1812EntryPoint
  4478  01B0  3184  24E8  3180   	goto	l6368
  4479  01B3  2A48               	line	263
  4480                           	
  4481                           l6344:	
  4482  01B4                     	goto	l6368
  4483  01B4  2A48               	
  4484                           l6346:	
  4485  01B5                     	movlb 3	; select bank3
  4486  01B5  0023               	movf	(_wHumidity+1)^0180h,w
  4487  01B6  0830               	movlb 1	; select bank1
  4488  01B7  0021               	xorwf	(main@wHumidityPrev+1)^080h,w
  4489  01B8  0651               	skipz
  4490  01B9  1D03               	goto	u4695
  4491  01BA  29BF               	movlb 3	; select bank3
  4492  01BB  0023               	movf	(_wHumidity)^0180h,w
  4493  01BC  082F               	movlb 1	; select bank1
  4494  01BD  0021               	xorwf	(main@wHumidityPrev)^080h,w
  4495  01BE  0650               u4695:
  4496  01BF                     
  4497                           	skipz
  4498  01BF  1D03               	goto	u4691
  4499  01C0  29C2               	goto	u4690
  4500  01C1  29C3               u4691:
  4501  01C2                     	goto	l6350
  4502  01C2  29D2               u4690:
  4503  01C3                     	
  4504                           l6348:	
  4505  01C3                     	movlb 3	; select bank3
  4506  01C3  0023               	movf	(_wTemperature+1)^0180h,w
  4507  01C4  082E               	movlb 1	; select bank1
  4508  01C5  0021               	xorwf	(main@wTemperaturePrev+1)^080h,w
  4509  01C6  0653               	skipz
  4510  01C7  1D03               	goto	u4705
  4511  01C8  29CD               	movlb 3	; select bank3
  4512  01C9  0023               	movf	(_wTemperature)^0180h,w
  4513  01CA  082D               	movlb 1	; select bank1
  4514  01CB  0021               	xorwf	(main@wTemperaturePrev)^080h,w
  4515  01CC  0652               u4705:
  4516  01CD                     
  4517                           	skipnz
  4518  01CD  1903               	goto	u4701
  4519  01CE  29D0               	goto	u4700
  4520  01CF  29D1               u4701:
  4521  01D0                     	goto	l6368
  4522  01D0  2A48               u4700:
  4523  01D1                     	goto	l6350
  4524  01D1  29D2               	
  4525                           l169:	
  4526  01D2                     	line	265
  4527                           	
  4528                           l6350:	
  4529  01D2                     	movlb 3	; select bank3
  4530  01D2  0023               	movf	(_wHumidity+1)^0180h,w
  4531  01D3  0830               	movlb 1	; select bank1
  4532  01D4  0021               	movwf	(main@wHumidityPrev+1)^080h
  4533  01D5  00D1               	movlb 3	; select bank3
  4534  01D6  0023               	movf	(_wHumidity)^0180h,w
  4535  01D7  082F               	movlb 1	; select bank1
  4536  01D8  0021               	movwf	(main@wHumidityPrev)^080h
  4537  01D9  00D0               	line	266
  4538                           	movlb 3	; select bank3
  4539  01DA  0023               	movf	(_wTemperature+1)^0180h,w
  4540  01DB  082E               	movlb 1	; select bank1
  4541  01DC  0021               	movwf	(main@wTemperaturePrev+1)^080h
  4542  01DD  00D3               	movlb 3	; select bank3
  4543  01DE  0023               	movf	(_wTemperature)^0180h,w
  4544  01DF  082D               	movlb 1	; select bank1
  4545  01E0  0021               	movwf	(main@wTemperaturePrev)^080h
  4546  01E1  00D2               	line	267
  4547                           	
  4548                           l6352:	
  4549  01E2                     	movlb 0	; select bank0
  4550  01E2  0020               	clrf	(setCursorPosition@iPosition)
  4551  01E3  01B5               	movlw	low(02h)
  4552  01E4  3002               	fcall	_setCursorPosition
  4553  01E5  3188  20FC  3180   	line	268
  4554                           	
  4555                           l6354:	
  4556  01E8                     	movlb 1	; select bank1
  4557  01E8  0021               	movf	(main@wHumidityPrev+1)^080h,w
  4558  01E9  0851               	movlb 0	; select bank0
  4559  01EA  0020               	movwf	(printEM1812@wVariable+1)
  4560  01EB  00BA               	movlb 1	; select bank1
  4561  01EC  0021               	movf	(main@wHumidityPrev)^080h,w
  4562  01ED  0850               	movlb 0	; select bank0
  4563  01EE  0020               	movwf	(printEM1812@wVariable)
  4564  01EF  00B9               	movlw	(low(main@wReadout|((0x0)<<8)))&0ffh
  4565  01F0  30B4               	movlb 1	; select bank1
  4566  01F1  0021               	movwf	(??_main+0)^080h+0
  4567  01F2  00AE               	movf	(??_main+0)^080h+0,w
  4568  01F3  082E               	movlb 0	; select bank0
  4569  01F4  0020               	movwf	(printEM1812@oTextOut)
  4570  01F5  00BB               	fcall	_printEM1812
  4571  01F6  318C  24C4  3180   	line	269
  4572                           	
  4573                           l6356:	
  4574  01F9                     	movlw	low(04Bh)
  4575  01F9  304B               	movlb 1	; select bank1
  4576  01FA  0021               	movwf	(??_main+0)^080h+0
  4577  01FB  00AE               	movf	(??_main+0)^080h+0,w
  4578  01FC  082E               	movlb 0	; select bank0
  4579  01FD  0020               	movwf	(AddTrace@iSizeOfoText)
  4580  01FE  00CB               	movlw	low(((STR_1)|8000h))
  4581  01FF  304D               	movwf	(AddTrace@iText)
  4582  0200  00CC               	movlw	high(((STR_1)|8000h))
  4583  0201  3098               	movwf	((AddTrace@iText))+1
  4584  0202  00CD               	movlw	(low(_wInterruptText|((0x2)<<8)))&0ffh
  4585  0203  30A0               	fcall	_AddTrace
  4586  0204  3197  2765  3180   	line	270
  4587                           	
  4588                           l6358:	
  4589  0207                     	movlw	low(04Bh)
  4590  0207  304B               	movlb 1	; select bank1
  4591  0208  0021               	movwf	(??_main+0)^080h+0
  4592  0209  00AE               	movf	(??_main+0)^080h+0,w
  4593  020A  082E               	movlb 0	; select bank0
  4594  020B  0020               	movwf	(AddTrace@iSizeOfoText)
  4595  020C  00CB               	movlw	low(main@wReadout)
  4596  020D  30B4               	movwf	(AddTrace@iText)
  4597  020E  00CC               	movlw	high(main@wReadout)
  4598  020F  3000               	movwf	(AddTrace@iText+1)
  4599  0210  00CD               	movlw	(low(_wInterruptText|((0x2)<<8)))&0ffh
  4600  0211  30A0               	fcall	_AddTrace
  4601  0212  3197  2765  3180   	line	271
  4602                           	
  4603                           l6360:	
  4604  0215                     	movlb 1	; select bank1
  4605  0215  0021               	movf	(main@wTemperaturePrev+1)^080h,w
  4606  0216  0853               	movlb 0	; select bank0
  4607  0217  0020               	movwf	(printEM1812@wVariable+1)
  4608  0218  00BA               	movlb 1	; select bank1
  4609  0219  0021               	movf	(main@wTemperaturePrev)^080h,w
  4610  021A  0852               	movlb 0	; select bank0
  4611  021B  0020               	movwf	(printEM1812@wVariable)
  4612  021C  00B9               	movlw	(low(main@wReadout|((0x0)<<8)))&0ffh
  4613  021D  30B4               	movlb 1	; select bank1
  4614  021E  0021               	movwf	(??_main+0)^080h+0
  4615  021F  00AE               	movf	(??_main+0)^080h+0,w
  4616  0220  082E               	movlb 0	; select bank0
  4617  0221  0020               	movwf	(printEM1812@oTextOut)
  4618  0222  00BB               	fcall	_printEM1812
  4619  0223  318C  24C4  3180   	line	272
  4620                           	
  4621                           l6362:	
  4622  0226                     	movlw	low(04Bh)
  4623  0226  304B               	movlb 1	; select bank1
  4624  0227  0021               	movwf	(??_main+0)^080h+0
  4625  0228  00AE               	movf	(??_main+0)^080h+0,w
  4626  0229  082E               	movlb 0	; select bank0
  4627  022A  0020               	movwf	(AddTrace@iSizeOfoText)
  4628  022B  00CB               	movlw	low(((STR_2)|8000h))
  4629  022C  3076               	movwf	(AddTrace@iText)
  4630  022D  00CC               	movlw	high(((STR_2)|8000h))
  4631  022E  3098               	movwf	((AddTrace@iText))+1
  4632  022F  00CD               	movlw	(low(_wInterruptText|((0x2)<<8)))&0ffh
  4633  0230  30A0               	fcall	_AddTrace
  4634  0231  3197  2765  3180   	line	273
  4635                           	
  4636                           l6364:	
  4637  0234                     	movlw	low(04Bh)
  4638  0234  304B               	movlb 1	; select bank1
  4639  0235  0021               	movwf	(??_main+0)^080h+0
  4640  0236  00AE               	movf	(??_main+0)^080h+0,w
  4641  0237  082E               	movlb 0	; select bank0
  4642  0238  0020               	movwf	(AddTrace@iSizeOfoText)
  4643  0239  00CB               	movlw	low(main@wReadout)
  4644  023A  30B4               	movwf	(AddTrace@iText)
  4645  023B  00CC               	movlw	high(main@wReadout)
  4646  023C  3000               	movwf	(AddTrace@iText+1)
  4647  023D  00CD               	movlw	(low(_wInterruptText|((0x2)<<8)))&0ffh
  4648  023E  30A0               	fcall	_AddTrace
  4649  023F  3197  2765  3180   	line	274
  4650                           	
  4651                           l6366:	
  4652  0242                     	movlw	(low(_wInterruptText|((0x2)<<8)))&0ffh
  4653  0242  30A0               	fcall	_PrintLog
  4654  0243  3194  248B  3180   	goto	l6368
  4655  0246  2A48               	line	275
  4656                           	
  4657                           l167:	
  4658  0247                     	goto	l6368
  4659  0247  2A48               	line	276
  4660                           	
  4661                           l166:	
  4662  0248                     	line	277
  4663                           	
  4664                           l6368:	
  4665  0248                     	movlw	01h
  4666  0248  3001               	movlb 1	; select bank1
  4667  0249  0021               	addwf	(main@wIterationCounter)^080h,f
  4668  024A  07CC               	movlw	0
  4669  024B  3000               	addwfc	(main@wIterationCounter+1)^080h,f
  4670  024C  3DCD               	line	280
  4671                           	
  4672                           l6370:	
  4673  024D                     	movlw	(low(main@wDebounceEnter|((0x0)<<8)))&0ffh
  4674  024D  30D4               	movwf	(??_main+0)^080h+0
  4675  024E  00AE               	movf	(??_main+0)^080h+0,w
  4676  024F  082E               	movlb 0	; select bank0
  4677  0250  0020               	movwf	(Debounce@ioTimer)
  4678  0251  00B0               	movlw	(low(main@wEnterBottonPressed|((0x0)<<8)))&0ffh
  4679  0252  30DC               	movlb 1	; select bank1
  4680  0253  0021               	movwf	(??_main+1)^080h+0
  4681  0254  00AF               	movf	(??_main+1)^080h+0,w
  4682  0255  082F               	movlb 0	; select bank0
  4683  0256  0020               	movwf	(Debounce@swPressed)
  4684  0257  00B1               	movf	(13),w	;volatile
  4685  0258  080D               	andlw	(1<<1)-1
  4686  0259  3901               	fcall	_Debounce
  4687  025A  3196  26DB  3180   	line	281
  4688                           	
  4689                           l6372:	
  4690  025D                     	movlw	(low(main@wDebounceUp|((0x0)<<8)))&0ffh
  4691  025D  30D6               	movlb 1	; select bank1
  4692  025E  0021               	movwf	(??_main+0)^080h+0
  4693  025F  00AE               	movf	(??_main+0)^080h+0,w
  4694  0260  082E               	movlb 0	; select bank0
  4695  0261  0020               	movwf	(Debounce@ioTimer)
  4696  0262  00B0               	movlw	(low(main@wUpBottonPressed|((0x0)<<8)))&0ffh
  4697  0263  30DA               	movlb 1	; select bank1
  4698  0264  0021               	movwf	(??_main+1)^080h+0
  4699  0265  00AF               	movf	(??_main+1)^080h+0,w
  4700  0266  082F               	movlb 0	; select bank0
  4701  0267  0020               	movwf	(Debounce@swPressed)
  4702  0268  00B1               	rrf	(13),w	;volatile
  4703  0269  0C0D               	andlw	(1<<1)-1
  4704  026A  3901               	fcall	_Debounce
  4705  026B  3196  26DB  3180   	line	282
  4706                           	
  4707                           l6374:	
  4708  026E                     	movlw	(low(main@wDebounceDown|((0x0)<<8)))&0ffh
  4709  026E  30D8               	movlb 1	; select bank1
  4710  026F  0021               	movwf	(??_main+0)^080h+0
  4711  0270  00AE               	movf	(??_main+0)^080h+0,w
  4712  0271  082E               	movlb 0	; select bank0
  4713  0272  0020               	movwf	(Debounce@ioTimer)
  4714  0273  00B0               	movlw	(low(main@wDownBottonPressed|((0x0)<<8)))&0ffh
  4715  0274  30DB               	movlb 1	; select bank1
  4716  0275  0021               	movwf	(??_main+1)^080h+0
  4717  0276  00AF               	movf	(??_main+1)^080h+0,w
  4718  0277  082F               	movlb 0	; select bank0
  4719  0278  0020               	movwf	(Debounce@swPressed)
  4720  0279  00B1               	rrf	(13),w	;volatile
  4721  027A  0C0D               	rrf	wreg,f
  4722  027B  0C89               	andlw	(1<<1)-1
  4723  027C  3901               	fcall	_Debounce
  4724  027D  3196  26DB  3180   	line	286
  4725                           	
  4726                           l6376:	
  4727  0280                     	movlb 1	; select bank1
  4728  0280  0021               		decf	((main@wUpBottonPressed)^080h),w
  4729  0281  035A               	btfss	status,2
  4730  0282  1D03               	goto	u4711
  4731  0283  2A85               	goto	u4710
  4732  0284  2A86               u4711:
  4733  0285                     	goto	l6392
  4734  0285  2AB3               u4710:
  4735  0286                     	line	288
  4736                           	
  4737                           l6378:	
  4738  0286                     	fcall	_Esp8266OpenSocket
  4739  0286  3193  2303  3180   	line	289
  4740                           	
  4741                           l6380:	
  4742  0289                     	movlb 1	; select bank1
  4743  0289  0021               	clrf	(main@wUpdateMenu)^080h
  4744  028A  01CE               	incf	(main@wUpdateMenu)^080h,f
  4745  028B  0ACE               	line	290
  4746                           	
  4747                           l6382:	
  4748  028C                     	clrf	(main@wUpBottonPressed)^080h
  4749  028C  01DA               	line	291
  4750                           	goto	l6390
  4751  028D  2A9F               	line	293
  4752                           	
  4753                           l172:	
  4754  028E                     	line	295
  4755                           	goto	l6392
  4756  028E  2AB3               	line	296
  4757                           	
  4758                           l174:	
  4759  028F                     	line	297
  4760                           	
  4761                           l6384:	
  4762  028F                     	movlb 3	; select bank3
  4763  028F  0023               	movf	(_wTempSet)^0180h,w
  4764  0290  0839               	addlw	01h
  4765  0291  3E01               	movwf	(_wTempSet)^0180h
  4766  0292  00B9               	movlw	0
  4767  0293  3000               	addwfc	(_wTempSet+1)^0180h,w
  4768  0294  3D3A               	movwf	1+(_wTempSet)^0180h
  4769  0295  00BA               	line	298
  4770                           	goto	l6392
  4771  0296  2AB3               	line	299
  4772                           	
  4773                           l175:	
  4774  0297                     	line	300
  4775                           	goto	l6392
  4776  0297  2AB3               	line	301
  4777                           	
  4778                           l176:	
  4779  0298                     	line	302
  4780                           	
  4781                           l6386:	
  4782  0298                     	movlw	low(01h)
  4783  0298  3001               	movlb 1	; select bank1
  4784  0299  0021               	movwf	(??_main+0)^080h+0
  4785  029A  00AE               	movf	(??_main+0)^080h+0,w
  4786  029B  082E               	addwf	(main@wMenu)^080h,f
  4787  029C  07DD               	line	303
  4788                           	goto	l6392
  4789  029D  2AB3               	line	304
  4790                           	
  4791                           l6388:	
  4792  029E                     	goto	l6392
  4793  029E  2AB3               	
  4794                           l171:	
  4795  029F                     	
  4796                           l6390:	
  4797  029F                     	movf	(main@wMenu)^080h,w
  4798  029F  085D               	movwf	(??_main+0)^080h+0
  4799  02A0  00AE               	clrf	(??_main+0)^080h+0+1
  4800  02A1  01AF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4801                           ; Switch size 1, requested type "space"
  4802                           ; Number of cases is 1, Range of values is 0 to 0
  4803                           ; switch strategies available:
  4804                           ; Name         Instructions Cycles
  4805                           ; simple_byte            4     3 (average)
  4806                           ; direct_byte            8     6 (fixed)
  4807                           ; jumptable            260     6 (fixed)
  4808                           ;	Chosen strategy is simple_byte
  4809                           
  4810                           	movf 1+(??_main+0)^080h+0,w
  4811  02A2  082F               	opt asmopt_push
  4812                           	opt asmopt_off
  4813                           	xorlw	0^0	; case 0
  4814  02A3  3A00               	skipnz
  4815  02A4  1903               	goto	l6850
  4816  02A5  2AA7               	goto	l6386
  4817  02A6  2A98               	opt asmopt_pop
  4818                           	
  4819                           l6850:	
  4820  02A7                     ; Switch size 1, requested type "space"
  4821                           ; Number of cases is 3, Range of values is 128 to 130
  4822                           ; switch strategies available:
  4823                           ; Name         Instructions Cycles
  4824                           ; simple_byte           10     6 (average)
  4825                           ; direct_byte           15     9 (fixed)
  4826                           ; jumptable            263     9 (fixed)
  4827                           ;	Chosen strategy is simple_byte
  4828                           
  4829                           	movf 0+(??_main+0)^080h+0,w
  4830  02A7  082E               	opt asmopt_push
  4831                           	opt asmopt_off
  4832                           	xorlw	128^0	; case 128
  4833  02A8  3A80               	skipnz
  4834  02A9  1903               	goto	l6392
  4835  02AA  2AB3               	xorlw	129^128	; case 129
  4836  02AB  3A01               	skipnz
  4837  02AC  1903               	goto	l6384
  4838  02AD  2A8F               	xorlw	130^129	; case 130
  4839  02AE  3A03               	skipnz
  4840  02AF  1903               	goto	l6392
  4841  02B0  2AB3               	goto	l6386
  4842  02B1  2A98               	opt asmopt_pop
  4843                           
  4844                           	
  4845                           l173:	
  4846  02B2                     	goto	l6392
  4847  02B2  2AB3               	line	306
  4848                           	
  4849                           l170:	
  4850  02B3                     	line	307
  4851                           	
  4852                           l6392:	
  4853  02B3                     	movlb 1	; select bank1
  4854  02B3  0021               		decf	((main@wDownBottonPressed)^080h),w
  4855  02B4  035B               	btfss	status,2
  4856  02B5  1D03               	goto	u4721
  4857  02B6  2AB8               	goto	u4720
  4858  02B7  2AB9               u4721:
  4859  02B8                     	goto	l6410
  4860  02B8  2AE7               u4720:
  4861  02B9                     	line	309
  4862                           	
  4863                           l6394:	
  4864  02B9                     	clrf	(main@wUpdateMenu)^080h
  4865  02B9  01CE               	incf	(main@wUpdateMenu)^080h,f
  4866  02BA  0ACE               	line	310
  4867                           	
  4868                           l6396:	
  4869  02BB                     	clrf	(main@wDownBottonPressed)^080h
  4870  02BB  01DB               	line	311
  4871                           	
  4872                           l6398:	
  4873  02BC                     	fcall	_clearDisplay
  4874  02BC  3192  22D2  3180   	line	312
  4875                           	
  4876                           l6400:	
  4877  02BF                     	fcall	_moveCursorToHome
  4878  02BF  3192  22FB  3180   	line	313
  4879                           	goto	l6408
  4880  02C2  2AD2               	line	315
  4881                           	
  4882                           l179:	
  4883  02C3                     	line	317
  4884                           	goto	l6410
  4885  02C3  2AE7               	line	318
  4886                           	
  4887                           l181:	
  4888  02C4                     	line	319
  4889                           	
  4890                           l6402:	
  4891  02C4                     	movlb 3	; select bank3
  4892  02C4  0023               	movf	(_wTempSet)^0180h,w
  4893  02C5  0839               	addlw	0FFh
  4894  02C6  3EFF               	movwf	(_wTempSet)^0180h
  4895  02C7  00B9               	movlw	0FFh
  4896  02C8  30FF               	addwfc	(_wTempSet+1)^0180h,w
  4897  02C9  3D3A               	movwf	1+(_wTempSet)^0180h
  4898  02CA  00BA               	line	320
  4899                           	goto	l6410
  4900  02CB  2AE7               	line	321
  4901                           	
  4902                           l182:	
  4903  02CC                     	line	322
  4904                           	goto	l6410
  4905  02CC  2AE7               	line	323
  4906                           	
  4907                           l183:	
  4908  02CD                     	line	324
  4909                           	
  4910                           l6404:	
  4911  02CD                     	movlw	01h
  4912  02CD  3001               	movlb 1	; select bank1
  4913  02CE  0021               	subwf	(main@wMenu)^080h,f
  4914  02CF  02DD               	line	325
  4915                           	goto	l6410
  4916  02D0  2AE7               	line	326
  4917                           	
  4918                           l6406:	
  4919  02D1                     	goto	l6410
  4920  02D1  2AE7               	
  4921                           l178:	
  4922  02D2                     	
  4923                           l6408:	
  4924  02D2                     	movlb 1	; select bank1
  4925  02D2  0021               	movf	(main@wMenu)^080h,w
  4926  02D3  085D               	movwf	(??_main+0)^080h+0
  4927  02D4  00AE               	clrf	(??_main+0)^080h+0+1
  4928  02D5  01AF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4929                           ; Switch size 1, requested type "space"
  4930                           ; Number of cases is 1, Range of values is 0 to 0
  4931                           ; switch strategies available:
  4932                           ; Name         Instructions Cycles
  4933                           ; simple_byte            4     3 (average)
  4934                           ; direct_byte            8     6 (fixed)
  4935                           ; jumptable            260     6 (fixed)
  4936                           ;	Chosen strategy is simple_byte
  4937                           
  4938                           	movf 1+(??_main+0)^080h+0,w
  4939  02D6  082F               	opt asmopt_push
  4940                           	opt asmopt_off
  4941                           	xorlw	0^0	; case 0
  4942  02D7  3A00               	skipnz
  4943  02D8  1903               	goto	l6852
  4944  02D9  2ADB               	goto	l6404
  4945  02DA  2ACD               	opt asmopt_pop
  4946                           	
  4947                           l6852:	
  4948  02DB                     ; Switch size 1, requested type "space"
  4949                           ; Number of cases is 3, Range of values is 128 to 130
  4950                           ; switch strategies available:
  4951                           ; Name         Instructions Cycles
  4952                           ; simple_byte           10     6 (average)
  4953                           ; direct_byte           15     9 (fixed)
  4954                           ; jumptable            263     9 (fixed)
  4955                           ;	Chosen strategy is simple_byte
  4956                           
  4957                           	movf 0+(??_main+0)^080h+0,w
  4958  02DB  082E               	opt asmopt_push
  4959                           	opt asmopt_off
  4960                           	xorlw	128^0	; case 128
  4961  02DC  3A80               	skipnz
  4962  02DD  1903               	goto	l6410
  4963  02DE  2AE7               	xorlw	129^128	; case 129
  4964  02DF  3A01               	skipnz
  4965  02E0  1903               	goto	l6402
  4966  02E1  2AC4               	xorlw	130^129	; case 130
  4967  02E2  3A03               	skipnz
  4968  02E3  1903               	goto	l6410
  4969  02E4  2AE7               	goto	l6404
  4970  02E5  2ACD               	opt asmopt_pop
  4971                           
  4972                           	
  4973                           l180:	
  4974  02E6                     	goto	l6410
  4975  02E6  2AE7               	line	327
  4976                           	
  4977                           l177:	
  4978  02E7                     	line	328
  4979                           	
  4980                           l6410:	
  4981  02E7                     	movlb 1	; select bank1
  4982  02E7  0021               		decf	((main@wEnterBottonPressed)^080h),w
  4983  02E8  035C               	btfss	status,2
  4984  02E9  1D03               	goto	u4731
  4985  02EA  2AEC               	goto	u4730
  4986  02EB  2AED               u4731:
  4987  02EC                     	goto	l6428
  4988  02EC  2B07               u4730:
  4989  02ED                     	line	330
  4990                           	
  4991                           l6412:	
  4992  02ED                     	clrf	(main@wUpdateMenu)^080h
  4993  02ED  01CE               	incf	(main@wUpdateMenu)^080h,f
  4994  02EE  0ACE               	line	331
  4995                           	
  4996                           l6414:	
  4997  02EF                     	clrf	(main@wEnterBottonPressed)^080h
  4998  02EF  01DC               	line	333
  4999                           	
  5000                           l6416:	
  5001  02F0                     	movf	((main@wEditingMode)^080h),w
  5002  02F0  084F               	btfss	status,2
  5003  02F1  1D03               	goto	u4741
  5004  02F2  2AF4               	goto	u4740
  5005  02F3  2AF5               u4741:
  5006  02F4                     	goto	l6424
  5007  02F4  2B00               u4740:
  5008  02F5                     	line	335
  5009                           	
  5010                           l6418:	
  5011  02F5                     	clrf	(main@wEditingMode)^080h
  5012  02F5  01CF               	incf	(main@wEditingMode)^080h,f
  5013  02F6  0ACF               	line	336
  5014                           	
  5015                           l6420:	
  5016  02F7                     	movf	(main@wMenu)^080h,w
  5017  02F7  085D               	addlw	080h
  5018  02F8  3E80               	movwf	(??_main+0)^080h+0
  5019  02F9  00AE               	movf	(??_main+0)^080h+0,w
  5020  02FA  082E               	movwf	(main@wMenu)^080h
  5021  02FB  00DD               	line	337
  5022                           	
  5023                           l6422:	
  5024  02FC                     	fcall	_Esp8266SetAccessPointMode
  5025  02FC  3192  22C9  3180   	line	338
  5026                           	goto	l6428
  5027  02FF  2B07               	line	339
  5028                           	
  5029                           l185:	
  5030  0300                     	line	341
  5031                           	
  5032                           l6424:	
  5033  0300                     	fcall	_Esp8266SetupWifi
  5034  0300  3192  22CD  3180   	line	342
  5035                           	
  5036                           l6426:	
  5037  0303                     	movlb 1	; select bank1
  5038  0303  0021               	clrf	(main@wEditingMode)^080h
  5039  0304  01CF               	goto	l6428
  5040  0305  2B07               	line	343
  5041                           	
  5042                           l186:	
  5043  0306                     	goto	l6428
  5044  0306  2B07               	line	344
  5045                           	
  5046                           l184:	
  5047  0307                     	line	345
  5048                           	
  5049                           l6428:	
  5050  0307                     	movlb 1	; select bank1
  5051  0307  0021               		incf	((main@wMenu)^080h),w
  5052  0308  0A5D               	btfss	status,2
  5053  0309  1D03               	goto	u4751
  5054  030A  2B0C               	goto	u4750
  5055  030B  2B0D               u4751:
  5056  030C                     	goto	l6434
  5057  030C  2B14               u4750:
  5058  030D                     	line	347
  5059                           	
  5060                           l6430:	
  5061  030D                     	clrf	(main@wUpdateMenu)^080h
  5062  030D  01CE               	incf	(main@wUpdateMenu)^080h,f
  5063  030E  0ACE               	line	348
  5064                           	
  5065                           l6432:	
  5066  030F                     	movlw	low(02h)
  5067  030F  3002               	movwf	(??_main+0)^080h+0
  5068  0310  00AE               	movf	(??_main+0)^080h+0,w
  5069  0311  082E               	movwf	(main@wMenu)^080h
  5070  0312  00DD               	goto	l6434
  5071  0313  2B14               	line	349
  5072                           	
  5073                           l187:	
  5074  0314                     	line	350
  5075                           	
  5076                           l6434:	
  5077  0314                     		movlw	3
  5078  0314  3003               	xorwf	((main@wMenu)^080h),w
  5079  0315  065D               	btfss	status,2
  5080  0316  1D03               	goto	u4761
  5081  0317  2B19               	goto	u4760
  5082  0318  2B1A               u4761:
  5083  0319                     	goto	l6340
  5084  0319  29A6               u4760:
  5085  031A                     	line	352
  5086                           	
  5087                           l6436:	
  5088  031A                     	clrf	(main@wUpdateMenu)^080h
  5089  031A  01CE               	incf	(main@wUpdateMenu)^080h,f
  5090  031B  0ACE               	line	353
  5091                           	
  5092                           l6438:	
  5093  031C                     	clrf	(main@wMenu)^080h
  5094  031C  01DD               	goto	l6340
  5095  031D  29A6               	line	354
  5096                           	
  5097                           l188:	
  5098  031E                     	goto	l6340
  5099  031E  29A6               	line	357
  5100                           	
  5101                           l189:	
  5102  031F                     	goto	l6340
  5103  031F  29A6               	
  5104                           l190:	
  5105  0320                     	line	359
  5106                           	
  5107                           l191:	
  5108  0320                     	global	start
  5109                           	ljmp	start
  5110  0320  3180  2879         	opt stack 0
  5111                           GLOBAL	__end_of_main
  5112                           	__end_of_main:
  5113  0322                     	signat	_main,89
  5114                           	global	_setNotBlinkingCursor
  5115                           
  5116 ;; *************** function _setNotBlinkingCursor *****************
  5117 ;; Defined at:
  5118 ;;		line 248 in file "LCD_hd44780u_qy_2004a.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;		None
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;		None
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      void 
  5125 ;; Registers used:
  5126 ;;		wreg, status,2, status,0, pclath, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5134 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5135 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5136 ;;Total ram usage:        1 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; Hardware stack levels required when called:    9
  5139 ;; This function calls:
  5140 ;;		_writeInsChk
  5141 ;; This function is called by:
  5142 ;;		_main
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  5146                           	file	"LCD_hd44780u_qy_2004a.c"
  5147                           	line	248
  5148                           global __ptext1
  5149                           __ptext1:	;psect for function _setNotBlinkingCursor
  5150  1341                     psect	text1
  5151                           	file	"LCD_hd44780u_qy_2004a.c"
  5152                           	line	248
  5153                           	global	__size_of_setNotBlinkingCursor
  5154                           	__size_of_setNotBlinkingCursor	equ	__end_of_setNotBlinkingCursor-_setNotBlinkingCursor

  5155  000B                     	
  5156                           _setNotBlinkingCursor:	
  5157  1341                     ;incstack = 0
  5158                           	opt	stack 6
  5159                           ; Regs used in _setNotBlinkingCursor: [wreg+status,2+status,0+pclath+cstack]
  5160                           	line	250
  5161                           	
  5162                           l5966:	
  5163  1341                     ;LCD_hd44780u_qy_2004a.c: 250:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFE;
  5164                           	movlb 0	; select bank0
  5165  1341  0020               	movf	(_mDisplayOnOffReg),w
  5166  1342  085C               	andlw	0FEh
  5167  1343  39FE               	movwf	(??_setNotBlinkingCursor+0)+0
  5168  1344  00B6               	movf	(??_setNotBlinkingCursor+0)+0,w
  5169  1345  0836               	movwf	(_mDisplayOnOffReg)
  5170  1346  00DC               	line	251
  5171                           	
  5172                           l5968:	
  5173  1347                     ;LCD_hd44780u_qy_2004a.c: 251:   writeInsChk(mDisplayOnOffReg);
  5174                           	movf	(_mDisplayOnOffReg),w
  5175  1347  085C               	fcall	_writeInsChk
  5176  1348  3193  2320  3193   	line	252
  5177                           	
  5178                           l322:	
  5179  134B                     	return
  5180  134B  0008               	opt stack 0
  5181                           GLOBAL	__end_of_setNotBlinkingCursor
  5182                           	__end_of_setNotBlinkingCursor:
  5183  134C                     	signat	_setNotBlinkingCursor,89
  5184                           	global	_setCursorOff
  5185                           
  5186 ;; *************** function _setCursorOff *****************
  5187 ;; Defined at:
  5188 ;;		line 253 in file "LCD_hd44780u_qy_2004a.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;		None
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;		None
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  1    wreg      void 
  5195 ;; Registers used:
  5196 ;;		wreg, status,2, status,0, pclath, cstack
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5204 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5205 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5206 ;;Total ram usage:        1 bytes
  5207 ;; Hardware stack levels used:    1
  5208 ;; Hardware stack levels required when called:    9
  5209 ;; This function calls:
  5210 ;;		_writeInsChk
  5211 ;; This function is called by:
  5212 ;;		_main
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  5216                           	line	253
  5217                           global __ptext2
  5218                           __ptext2:	;psect for function _setCursorOff
  5219  1336                     psect	text2
  5220                           	file	"LCD_hd44780u_qy_2004a.c"
  5221                           	line	253
  5222                           	global	__size_of_setCursorOff
  5223                           	__size_of_setCursorOff	equ	__end_of_setCursorOff-_setCursorOff
  5224  000B                     	
  5225                           _setCursorOff:	
  5226  1336                     ;incstack = 0
  5227                           	opt	stack 6
  5228                           ; Regs used in _setCursorOff: [wreg+status,2+status,0+pclath+cstack]
  5229                           	line	255
  5230                           	
  5231                           l5958:	
  5232  1336                     ;LCD_hd44780u_qy_2004a.c: 255:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFD;
  5233                           	movlb 0	; select bank0
  5234  1336  0020               	movf	(_mDisplayOnOffReg),w
  5235  1337  085C               	andlw	0FDh
  5236  1338  39FD               	movwf	(??_setCursorOff+0)+0
  5237  1339  00B6               	movf	(??_setCursorOff+0)+0,w
  5238  133A  0836               	movwf	(_mDisplayOnOffReg)
  5239  133B  00DC               	line	256
  5240                           	
  5241                           l5960:	
  5242  133C                     ;LCD_hd44780u_qy_2004a.c: 256:   writeInsChk(mDisplayOnOffReg);
  5243                           	movf	(_mDisplayOnOffReg),w
  5244  133C  085C               	fcall	_writeInsChk
  5245  133D  3193  2320  3193   	line	257
  5246                           	
  5247                           l325:	
  5248  1340                     	return
  5249  1340  0008               	opt stack 0
  5250                           GLOBAL	__end_of_setCursorOff
  5251                           	__end_of_setCursorOff:
  5252  1341                     	signat	_setCursorOff,89
  5253                           	global	_printEM1812
  5254                           
  5255 ;; *************** function _printEM1812 *****************
  5256 ;; Defined at:
  5257 ;;		line 16 in file "EM1812.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;  wVariable       2   25[BANK0 ] short 
  5260 ;;  oTextOut        1   27[BANK0 ] PTR unsigned char 
  5261 ;;		 -> main@wReadout(20), 
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;  wWritingPosi    1   34[BANK0 ] unsigned char 
  5264 ;;  wTen            1   33[BANK0 ] unsigned char 
  5265 ;;  wIsNegative     1   32[BANK0 ] unsigned char 
  5266 ;;  wDecimal        1   31[BANK0 ] unsigned char 
  5267 ;;  wUnity          1   30[BANK0 ] unsigned char 
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  1    wreg      void 
  5270 ;; Registers used:
  5271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5277 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  5278 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  5279 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5280 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  5281 ;;Total ram usage:       10 bytes
  5282 ;; Hardware stack levels used:    1
  5283 ;; Hardware stack levels required when called:    7
  5284 ;; This function calls:
  5285 ;;		___awdiv
  5286 ;;		___awmod
  5287 ;; This function is called by:
  5288 ;;		_main
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  5292                           	file	"EM1812.c"
  5293                           	line	16
  5294                           global __ptext3
  5295                           __ptext3:	;psect for function _printEM1812
  5296  0CC4                     psect	text3
  5297                           	file	"EM1812.c"
  5298                           	line	16
  5299                           	global	__size_of_printEM1812
  5300                           	__size_of_printEM1812	equ	__end_of_printEM1812-_printEM1812
  5301  00B0                     	
  5302                           _printEM1812:	
  5303  0CC4                     ;incstack = 0
  5304                           	opt	stack 8
  5305                           ; Regs used in _printEM1812: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5306                           	line	21
  5307                           	
  5308                           l6168:	
  5309  0CC4                     ;EM1812.c: 16: void printEM1812(int16_t wVariable, char* oTextOut);EM1812.c: 17: {;EM181
                                 2.c: 18:     uint8_t wTen;;EM1812.c: 19:     uint8_t wUnity;;EM1812.c: 20:     uint8_t w
                                 Decimal;;EM1812.c: 21:     uint8_t wIsNegative=0;
  5310                           	movlb 0	; select bank0
  5311  0CC4  0020               	clrf	(printEM1812@wIsNegative)
  5312  0CC5  01C0               	line	22
  5313                           ;EM1812.c: 22:     uint8_t wWritingPosition=0;
  5314                           	clrf	(printEM1812@wWritingPosition)
  5315  0CC6  01C2               	line	24
  5316                           	
  5317                           l6170:	
  5318  0CC7                     ;EM1812.c: 24:     if(wVariable < 0)
  5319                           	btfss	(printEM1812@wVariable+1),7
  5320  0CC7  1FBA               	goto	u4641
  5321  0CC8  2CCA               	goto	u4640
  5322  0CC9  2CCB               u4641:
  5323  0CCA                     	goto	l6176
  5324  0CCA  2CD3               u4640:
  5325  0CCB                     	line	26
  5326                           	
  5327                           l6172:	
  5328  0CCB                     ;EM1812.c: 25:     {;EM1812.c: 26:         wIsNegative = 1;
  5329                           	clrf	(printEM1812@wIsNegative)
  5330  0CCB  01C0               	incf	(printEM1812@wIsNegative),f
  5331  0CCC  0AC0               	line	27
  5332                           	
  5333                           l6174:	
  5334  0CCD                     ;EM1812.c: 27:         wVariable = -wVariable;
  5335                           	comf	(printEM1812@wVariable),f
  5336  0CCD  09B9               	comf	(printEM1812@wVariable+1),f
  5337  0CCE  09BA               	incf	(printEM1812@wVariable),f
  5338  0CCF  0AB9               	skipnz
  5339  0CD0  1903               	incf	(printEM1812@wVariable+1),f
  5340  0CD1  0ABA               	goto	l6176
  5341  0CD2  2CD3               	line	28
  5342                           ;EM1812.c: 28:     }
  5343                           	
  5344                           l417:	
  5345  0CD3                     	line	30
  5346                           	
  5347                           l6176:	
  5348  0CD3                     ;EM1812.c: 30:     wTen = wVariable/100;
  5349                           	movlw	064h
  5350  0CD3  3064               	movwf	(___awdiv@divisor)
  5351  0CD4  00B0               	movlw	0
  5352  0CD5  3000               	movwf	((___awdiv@divisor))+1
  5353  0CD6  00B1               	movf	(printEM1812@wVariable+1),w
  5354  0CD7  083A               	movwf	(___awdiv@dividend+1)
  5355  0CD8  00B3               	movf	(printEM1812@wVariable),w
  5356  0CD9  0839               	movwf	(___awdiv@dividend)
  5357  0CDA  00B2               	fcall	___awdiv
  5358  0CDB  318A  2222  318C   	movlb 0	; select bank0
  5359  0CDE  0020               	movf	(0+(?___awdiv)),w
  5360  0CDF  0830               	movwf	(??_printEM1812+0)+0
  5361  0CE0  00BC               	movf	(??_printEM1812+0)+0,w
  5362  0CE1  083C               	movwf	(printEM1812@wTen)
  5363  0CE2  00C1               	line	31
  5364                           	
  5365                           l6178:	
  5366  0CE3                     ;EM1812.c: 31:     wVariable = wVariable % 100;
  5367                           	movlw	064h
  5368  0CE3  3064               	movwf	(___awmod@divisor)
  5369  0CE4  00B0               	movlw	0
  5370  0CE5  3000               	movwf	((___awmod@divisor))+1
  5371  0CE6  00B1               	movf	(printEM1812@wVariable+1),w
  5372  0CE7  083A               	movwf	(___awmod@dividend+1)
  5373  0CE8  00B3               	movf	(printEM1812@wVariable),w
  5374  0CE9  0839               	movwf	(___awmod@dividend)
  5375  0CEA  00B2               	fcall	___awmod
  5376  0CEB  3188  209E  318C   	movlb 0	; select bank0
  5377  0CEE  0020               	movf	(1+(?___awmod)),w
  5378  0CEF  0831               	movwf	(printEM1812@wVariable+1)
  5379  0CF0  00BA               	movf	(0+(?___awmod)),w
  5380  0CF1  0830               	movwf	(printEM1812@wVariable)
  5381  0CF2  00B9               	line	32
  5382                           	
  5383                           l6180:	
  5384  0CF3                     ;EM1812.c: 32:     wUnity = wVariable/10;
  5385                           	movlw	0Ah
  5386  0CF3  300A               	movwf	(___awdiv@divisor)
  5387  0CF4  00B0               	movlw	0
  5388  0CF5  3000               	movwf	((___awdiv@divisor))+1
  5389  0CF6  00B1               	movf	(printEM1812@wVariable+1),w
  5390  0CF7  083A               	movwf	(___awdiv@dividend+1)
  5391  0CF8  00B3               	movf	(printEM1812@wVariable),w
  5392  0CF9  0839               	movwf	(___awdiv@dividend)
  5393  0CFA  00B2               	fcall	___awdiv
  5394  0CFB  318A  2222  318C   	movlb 0	; select bank0
  5395  0CFE  0020               	movf	(0+(?___awdiv)),w
  5396  0CFF  0830               	movwf	(??_printEM1812+0)+0
  5397  0D00  00BC               	movf	(??_printEM1812+0)+0,w
  5398  0D01  083C               	movwf	(printEM1812@wUnity)
  5399  0D02  00BE               	line	33
  5400                           	
  5401                           l6182:	
  5402  0D03                     ;EM1812.c: 33:     wVariable = wVariable %10;
  5403                           	movlw	0Ah
  5404  0D03  300A               	movwf	(___awmod@divisor)
  5405  0D04  00B0               	movlw	0
  5406  0D05  3000               	movwf	((___awmod@divisor))+1
  5407  0D06  00B1               	movf	(printEM1812@wVariable+1),w
  5408  0D07  083A               	movwf	(___awmod@dividend+1)
  5409  0D08  00B3               	movf	(printEM1812@wVariable),w
  5410  0D09  0839               	movwf	(___awmod@dividend)
  5411  0D0A  00B2               	fcall	___awmod
  5412  0D0B  3188  209E  318C   	movlb 0	; select bank0
  5413  0D0E  0020               	movf	(1+(?___awmod)),w
  5414  0D0F  0831               	movwf	(printEM1812@wVariable+1)
  5415  0D10  00BA               	movf	(0+(?___awmod)),w
  5416  0D11  0830               	movwf	(printEM1812@wVariable)
  5417  0D12  00B9               	line	34
  5418                           	
  5419                           l6184:	
  5420  0D13                     ;EM1812.c: 34:     wDecimal = wVariable;
  5421                           	movf	(printEM1812@wVariable),w
  5422  0D13  0839               	movwf	(??_printEM1812+0)+0
  5423  0D14  00BC               	movf	(??_printEM1812+0)+0,w
  5424  0D15  083C               	movwf	(printEM1812@wDecimal)
  5425  0D16  00BF               	line	37
  5426                           ;EM1812.c: 37:     if(wIsNegative)
  5427                           	movf	((printEM1812@wIsNegative)),w
  5428  0D17  0840               	btfsc	status,2
  5429  0D18  1903               	goto	u4651
  5430  0D19  2D1B               	goto	u4650
  5431  0D1A  2D1C               u4651:
  5432  0D1B                     	goto	l6190
  5433  0D1B  2D2B               u4650:
  5434  0D1C                     	line	39
  5435                           	
  5436                           l6186:	
  5437  0D1C                     ;EM1812.c: 38:     {;EM1812.c: 39:         oTextOut[wWritingPosition] = '-';
  5438                           	movlw	low(02Dh)
  5439  0D1C  302D               	movwf	(??_printEM1812+0)+0
  5440  0D1D  00BC               	movf	(printEM1812@wWritingPosition),w
  5441  0D1E  0842               	addwf	(printEM1812@oTextOut),w
  5442  0D1F  073B               	movwf	(??_printEM1812+1)+0
  5443  0D20  00BD               	movf	0+(??_printEM1812+1)+0,w
  5444  0D21  083D               	movwf	fsr1l
  5445  0D22  0086               	clrf fsr1h	
  5446  0D23  0187               	
  5447                           	movf	(??_printEM1812+0)+0,w
  5448  0D24  083C               	movwf	indf1
  5449  0D25  0081               	line	40
  5450                           	
  5451                           l6188:	
  5452  0D26                     ;EM1812.c: 40:         wWritingPosition++;
  5453                           	movlw	low(01h)
  5454  0D26  3001               	movwf	(??_printEM1812+0)+0
  5455  0D27  00BC               	movf	(??_printEM1812+0)+0,w
  5456  0D28  083C               	addwf	(printEM1812@wWritingPosition),f
  5457  0D29  07C2               	goto	l6190
  5458  0D2A  2D2B               	line	41
  5459                           ;EM1812.c: 41:     }
  5460                           	
  5461                           l418:	
  5462  0D2B                     	line	42
  5463                           	
  5464                           l6190:	
  5465  0D2B                     ;EM1812.c: 42:     if( wTen != 0 )
  5466                           	movf	((printEM1812@wTen)),w
  5467  0D2B  0841               	btfsc	status,2
  5468  0D2C  1903               	goto	u4661
  5469  0D2D  2D2F               	goto	u4660
  5470  0D2E  2D30               u4661:
  5471  0D2F                     	goto	l6196
  5472  0D2F  2D40               u4660:
  5473  0D30                     	line	44
  5474                           	
  5475                           l6192:	
  5476  0D30                     ;EM1812.c: 43:     {;EM1812.c: 44:         oTextOut[wWritingPosition] = '0' + wTen;
  5477                           	movf	(printEM1812@wTen),w
  5478  0D30  0841               	addlw	030h
  5479  0D31  3E30               	movwf	(??_printEM1812+0)+0
  5480  0D32  00BC               	movf	(printEM1812@wWritingPosition),w
  5481  0D33  0842               	addwf	(printEM1812@oTextOut),w
  5482  0D34  073B               	movwf	(??_printEM1812+1)+0
  5483  0D35  00BD               	movf	0+(??_printEM1812+1)+0,w
  5484  0D36  083D               	movwf	fsr1l
  5485  0D37  0086               	clrf fsr1h	
  5486  0D38  0187               	
  5487                           	movf	(??_printEM1812+0)+0,w
  5488  0D39  083C               	movwf	indf1
  5489  0D3A  0081               	line	45
  5490                           	
  5491                           l6194:	
  5492  0D3B                     ;EM1812.c: 45:         wWritingPosition++;
  5493                           	movlw	low(01h)
  5494  0D3B  3001               	movwf	(??_printEM1812+0)+0
  5495  0D3C  00BC               	movf	(??_printEM1812+0)+0,w
  5496  0D3D  083C               	addwf	(printEM1812@wWritingPosition),f
  5497  0D3E  07C2               	goto	l6196
  5498  0D3F  2D40               	line	46
  5499                           ;EM1812.c: 46:     }
  5500                           	
  5501                           l419:	
  5502  0D40                     	line	47
  5503                           	
  5504                           l6196:	
  5505  0D40                     ;EM1812.c: 47:     oTextOut[wWritingPosition] = '0' + wUnity;
  5506                           	movf	(printEM1812@wUnity),w
  5507  0D40  083E               	addlw	030h
  5508  0D41  3E30               	movwf	(??_printEM1812+0)+0
  5509  0D42  00BC               	movf	(printEM1812@wWritingPosition),w
  5510  0D43  0842               	addwf	(printEM1812@oTextOut),w
  5511  0D44  073B               	movwf	(??_printEM1812+1)+0
  5512  0D45  00BD               	movf	0+(??_printEM1812+1)+0,w
  5513  0D46  083D               	movwf	fsr1l
  5514  0D47  0086               	clrf fsr1h	
  5515  0D48  0187               	
  5516                           	movf	(??_printEM1812+0)+0,w
  5517  0D49  083C               	movwf	indf1
  5518  0D4A  0081               	line	48
  5519                           ;EM1812.c: 48:     wWritingPosition++;
  5520                           	movlw	low(01h)
  5521  0D4B  3001               	movwf	(??_printEM1812+0)+0
  5522  0D4C  00BC               	movf	(??_printEM1812+0)+0,w
  5523  0D4D  083C               	addwf	(printEM1812@wWritingPosition),f
  5524  0D4E  07C2               	line	49
  5525                           	
  5526                           l6198:	
  5527  0D4F                     ;EM1812.c: 49:     oTextOut[wWritingPosition] = ',';
  5528                           	movlw	low(02Ch)
  5529  0D4F  302C               	movwf	(??_printEM1812+0)+0
  5530  0D50  00BC               	movf	(printEM1812@wWritingPosition),w
  5531  0D51  0842               	addwf	(printEM1812@oTextOut),w
  5532  0D52  073B               	movwf	(??_printEM1812+1)+0
  5533  0D53  00BD               	movf	0+(??_printEM1812+1)+0,w
  5534  0D54  083D               	movwf	fsr1l
  5535  0D55  0086               	clrf fsr1h	
  5536  0D56  0187               	
  5537                           	movf	(??_printEM1812+0)+0,w
  5538  0D57  083C               	movwf	indf1
  5539  0D58  0081               	line	50
  5540                           	
  5541                           l6200:	
  5542  0D59                     ;EM1812.c: 50:     wWritingPosition++;
  5543                           	movlw	low(01h)
  5544  0D59  3001               	movwf	(??_printEM1812+0)+0
  5545  0D5A  00BC               	movf	(??_printEM1812+0)+0,w
  5546  0D5B  083C               	addwf	(printEM1812@wWritingPosition),f
  5547  0D5C  07C2               	line	51
  5548                           ;EM1812.c: 51:     oTextOut[wWritingPosition] = '0' + wDecimal;
  5549                           	movf	(printEM1812@wDecimal),w
  5550  0D5D  083F               	addlw	030h
  5551  0D5E  3E30               	movwf	(??_printEM1812+0)+0
  5552  0D5F  00BC               	movf	(printEM1812@wWritingPosition),w
  5553  0D60  0842               	addwf	(printEM1812@oTextOut),w
  5554  0D61  073B               	movwf	(??_printEM1812+1)+0
  5555  0D62  00BD               	movf	0+(??_printEM1812+1)+0,w
  5556  0D63  083D               	movwf	fsr1l
  5557  0D64  0086               	clrf fsr1h	
  5558  0D65  0187               	
  5559                           	movf	(??_printEM1812+0)+0,w
  5560  0D66  083C               	movwf	indf1
  5561  0D67  0081               	line	52
  5562                           	
  5563                           l6202:	
  5564  0D68                     ;EM1812.c: 52:     wWritingPosition++;
  5565                           	movlw	low(01h)
  5566  0D68  3001               	movwf	(??_printEM1812+0)+0
  5567  0D69  00BC               	movf	(??_printEM1812+0)+0,w
  5568  0D6A  083C               	addwf	(printEM1812@wWritingPosition),f
  5569  0D6B  07C2               	line	53
  5570                           	
  5571                           l6204:	
  5572  0D6C                     ;EM1812.c: 53:     oTextOut[wWritingPosition] = 0;
  5573                           	movf	(printEM1812@wWritingPosition),w
  5574  0D6C  0842               	addwf	(printEM1812@oTextOut),w
  5575  0D6D  073B               	movwf	(??_printEM1812+0)+0
  5576  0D6E  00BC               	movf	0+(??_printEM1812+0)+0,w
  5577  0D6F  083C               	movwf	fsr1l
  5578  0D70  0086               	clrf fsr1h	
  5579  0D71  0187               	
  5580                           	clrf	indf1
  5581  0D72  0181               	line	55
  5582                           	
  5583                           l420:	
  5584  0D73                     	return
  5585  0D73  0008               	opt stack 0
  5586                           GLOBAL	__end_of_printEM1812
  5587                           	__end_of_printEM1812:
  5588  0D74                     	signat	_printEM1812,8313
  5589                           	global	_powerOnLcd
  5590                           
  5591 ;; *************** function _powerOnLcd *****************
  5592 ;; Defined at:
  5593 ;;		line 238 in file "LCD_hd44780u_qy_2004a.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;		None
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;		None
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  1    wreg      void 
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0, pclath, cstack
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5609 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5610 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5611 ;;Total ram usage:        1 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:    9
  5614 ;; This function calls:
  5615 ;;		_writeInsChk
  5616 ;; This function is called by:
  5617 ;;		_main
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  5621                           	file	"LCD_hd44780u_qy_2004a.c"
  5622                           	line	238
  5623                           global __ptext4
  5624                           __ptext4:	;psect for function _powerOnLcd
  5625  132B                     psect	text4
  5626                           	file	"LCD_hd44780u_qy_2004a.c"
  5627                           	line	238
  5628                           	global	__size_of_powerOnLcd
  5629                           	__size_of_powerOnLcd	equ	__end_of_powerOnLcd-_powerOnLcd
  5630  000B                     	
  5631                           _powerOnLcd:	
  5632  132B                     ;incstack = 0
  5633                           	opt	stack 6
  5634                           ; Regs used in _powerOnLcd: [wreg+status,2+status,0+pclath+cstack]
  5635                           	line	240
  5636                           	
  5637                           l5954:	
  5638  132B                     ;LCD_hd44780u_qy_2004a.c: 240:   mDisplayOnOffReg = mDisplayOnOffReg | 0x04;
  5639                           	movlb 0	; select bank0
  5640  132B  0020               	movf	(_mDisplayOnOffReg),w
  5641  132C  085C               	iorlw	04h
  5642  132D  3804               	movwf	(??_powerOnLcd+0)+0
  5643  132E  00B6               	movf	(??_powerOnLcd+0)+0,w
  5644  132F  0836               	movwf	(_mDisplayOnOffReg)
  5645  1330  00DC               	line	241
  5646                           	
  5647                           l5956:	
  5648  1331                     ;LCD_hd44780u_qy_2004a.c: 241:   writeInsChk(mDisplayOnOffReg);
  5649                           	movf	(_mDisplayOnOffReg),w
  5650  1331  085C               	fcall	_writeInsChk
  5651  1332  3193  2320  3193   	line	242
  5652                           	
  5653                           l316:	
  5654  1335                     	return
  5655  1335  0008               	opt stack 0
  5656                           GLOBAL	__end_of_powerOnLcd
  5657                           	__end_of_powerOnLcd:
  5658  1336                     	signat	_powerOnLcd,89
  5659                           	global	_moveCursorToHome
  5660                           
  5661 ;; *************** function _moveCursorToHome *****************
  5662 ;; Defined at:
  5663 ;;		line 299 in file "LCD_hd44780u_qy_2004a.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;		None
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;		None
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  1    wreg      void 
  5670 ;; Registers used:
  5671 ;;		wreg, status,2, status,0, pclath, cstack
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5681 ;;Total ram usage:        0 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    9
  5684 ;; This function calls:
  5685 ;;		_writeInsChk
  5686 ;; This function is called by:
  5687 ;;		_main
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  5691                           	line	299
  5692                           global __ptext5
  5693                           __ptext5:	;psect for function _moveCursorToHome
  5694  12FB                     psect	text5
  5695                           	file	"LCD_hd44780u_qy_2004a.c"
  5696                           	line	299
  5697                           	global	__size_of_moveCursorToHome
  5698                           	__size_of_moveCursorToHome	equ	__end_of_moveCursorToHome-_moveCursorToHome
  5699  0008                     	
  5700                           _moveCursorToHome:	
  5701  12FB                     ;incstack = 0
  5702                           	opt	stack 6
  5703                           ; Regs used in _moveCursorToHome: [wreg+status,2+status,0+pclath+cstack]
  5704                           	line	301
  5705                           	
  5706                           l5962:	
  5707  12FB                     ;LCD_hd44780u_qy_2004a.c: 301:   writeInsChk(0x02);
  5708                           	movlw	low(02h)
  5709  12FB  3002               	fcall	_writeInsChk
  5710  12FC  3193  2320  3192   	line	302
  5711                           	
  5712                           l5964:	
  5713  12FF                     ;LCD_hd44780u_qy_2004a.c: 302:   mWritingPosition=1;
  5714                           	movlb 0	; select bank0
  5715  12FF  0020               	clrf	(_mWritingPosition)
  5716  1300  01DA               	incf	(_mWritingPosition),f
  5717  1301  0ADA               	line	303
  5718                           	
  5719                           l352:	
  5720  1302                     	return
  5721  1302  0008               	opt stack 0
  5722                           GLOBAL	__end_of_moveCursorToHome
  5723                           	__end_of_moveCursorToHome:
  5724  1303                     	signat	_moveCursorToHome,89
  5725                           	global	_initLCD
  5726                           
  5727 ;; *************** function _initLCD *****************
  5728 ;; Defined at:
  5729 ;;		line 10 in file "LCD_hd44780u_qy_2004a.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;		None
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;		None
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  1    wreg      void 
  5736 ;; Registers used:
  5737 ;;		wreg, status,2, status,0, pclath, cstack
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5745 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5746 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5747 ;;Total ram usage:        1 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; Hardware stack levels required when called:   10
  5750 ;; This function calls:
  5751 ;;		_clearDisplay
  5752 ;;		_setData
  5753 ;;		_writeInsChk
  5754 ;; This function is called by:
  5755 ;;		_main
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  5759                           	line	10
  5760                           global __ptext6
  5761                           __ptext6:	;psect for function _initLCD
  5762  09BE                     psect	text6
  5763                           	file	"LCD_hd44780u_qy_2004a.c"
  5764                           	line	10
  5765                           	global	__size_of_initLCD
  5766                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  5767  0064                     	
  5768                           _initLCD:	
  5769  09BE                     ;incstack = 0
  5770                           	opt	stack 5
  5771                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  5772                           	line	13
  5773                           	
  5774                           l5932:	
  5775  09BE                     ;LCD_hd44780u_qy_2004a.c: 13:   ANSELAbits.ANSA3 = 0;
  5776                           	movlb 3	; select bank3
  5777  09BE  0023               	bcf	(396)^0180h,3	;volatile
  5778  09BF  118C               	line	14
  5779                           ;LCD_hd44780u_qy_2004a.c: 14:   ANSELCbits.ANSC2 = 0;
  5780                           	bcf	(398)^0180h,2	;volatile
  5781  09C0  110E               	line	15
  5782                           ;LCD_hd44780u_qy_2004a.c: 15:   ANSELCbits.ANSC1 = 0;
  5783                           	bcf	(398)^0180h,1	;volatile
  5784  09C1  108E               	line	16
  5785                           ;LCD_hd44780u_qy_2004a.c: 16:   ANSELCbits.ANSC0 = 0;
  5786                           	bcf	(398)^0180h,0	;volatile
  5787  09C2  100E               	line	17
  5788                           ;LCD_hd44780u_qy_2004a.c: 17:   ANSELAbits.ANSA0 = 0;
  5789                           	bcf	(396)^0180h,0	;volatile
  5790  09C3  100C               	line	18
  5791                           ;LCD_hd44780u_qy_2004a.c: 18:   ANSELAbits.ANSA1 = 0;
  5792                           	bcf	(396)^0180h,1	;volatile
  5793  09C4  108C               	line	19
  5794                           ;LCD_hd44780u_qy_2004a.c: 19:   ANSELAbits.ANSA2 = 0;
  5795                           	bcf	(396)^0180h,2	;volatile
  5796  09C5  110C               	line	21
  5797                           ;LCD_hd44780u_qy_2004a.c: 21:   PORTAbits.RA3 = 0;
  5798                           	movlb 0	; select bank0
  5799  09C6  0020               	bcf	(12),3	;volatile
  5800  09C7  118C               	line	22
  5801                           ;LCD_hd44780u_qy_2004a.c: 22:   PORTCbits.RC2 = 0;
  5802                           	bcf	(14),2	;volatile
  5803  09C8  110E               	line	23
  5804                           ;LCD_hd44780u_qy_2004a.c: 23:   PORTCbits.RC1 = 0;
  5805                           	bcf	(14),1	;volatile
  5806  09C9  108E               	line	24
  5807                           ;LCD_hd44780u_qy_2004a.c: 24:   PORTCbits.RC0 = 0;
  5808                           	bcf	(14),0	;volatile
  5809  09CA  100E               	line	25
  5810                           ;LCD_hd44780u_qy_2004a.c: 25:   PORTAbits.RA0=0;
  5811                           	bcf	(12),0	;volatile
  5812  09CB  100C               	line	26
  5813                           ;LCD_hd44780u_qy_2004a.c: 26:   PORTAbits.RA1=0;
  5814                           	bcf	(12),1	;volatile
  5815  09CC  108C               	line	27
  5816                           ;LCD_hd44780u_qy_2004a.c: 27:   PORTAbits.RA2=0;
  5817                           	bcf	(12),2	;volatile
  5818  09CD  110C               	line	29
  5819                           ;LCD_hd44780u_qy_2004a.c: 29:   TRISAbits.TRISA0 = 0;
  5820                           	movlb 1	; select bank1
  5821  09CE  0021               	bcf	(140)^080h,0	;volatile
  5822  09CF  100C               	line	30
  5823                           ;LCD_hd44780u_qy_2004a.c: 30:   TRISAbits.TRISA1 = 0;
  5824                           	bcf	(140)^080h,1	;volatile
  5825  09D0  108C               	line	31
  5826                           ;LCD_hd44780u_qy_2004a.c: 31:   TRISAbits.TRISA2 = 0;
  5827                           	bcf	(140)^080h,2	;volatile
  5828  09D1  110C               	line	32
  5829                           ;LCD_hd44780u_qy_2004a.c: 32:   TRISAbits.TRISA3 = 0;
  5830                           	bcf	(140)^080h,3	;volatile
  5831  09D2  118C               	line	33
  5832                           ;LCD_hd44780u_qy_2004a.c: 33:   TRISCbits.TRISC2 = 0;
  5833                           	bcf	(142)^080h,2	;volatile
  5834  09D3  110E               	line	34
  5835                           ;LCD_hd44780u_qy_2004a.c: 34:   TRISCbits.TRISC1 = 0;
  5836                           	bcf	(142)^080h,1	;volatile
  5837  09D4  108E               	line	35
  5838                           ;LCD_hd44780u_qy_2004a.c: 35:   TRISCbits.TRISC0 = 0;
  5839                           	bcf	(142)^080h,0	;volatile
  5840  09D5  100E               	line	38
  5841                           ;LCD_hd44780u_qy_2004a.c: 38:   PORTAbits.RA0 = 0;
  5842                           	movlb 0	; select bank0
  5843  09D6  0020               	bcf	(12),0	;volatile
  5844  09D7  100C               	line	39
  5845                           ;LCD_hd44780u_qy_2004a.c: 39:   PORTAbits.RA1 = 0;
  5846                           	bcf	(12),1	;volatile
  5847  09D8  108C               	line	40
  5848                           ;LCD_hd44780u_qy_2004a.c: 40:   PORTAbits.RA2 = 0;
  5849                           	bcf	(12),2	;volatile
  5850  09D9  110C               	line	43
  5851                           	
  5852                           l5934:	
  5853  09DA                     ;LCD_hd44780u_qy_2004a.c: 43:   _delay((unsigned long)((15)*(16000000/4000.0)));
  5854                           	opt asmopt_push
  5855                           opt asmopt_off
  5856                           movlw	78
  5857  09DA  304E               	movlb 0	; select bank0
  5858  09DB  0020               movwf	((??_initLCD+0)+0),f
  5859  09DC  00B6               	movlw	235
  5860  09DD  30EB               u4947:
  5861  09DE                     decfsz	wreg
  5862  09DE  0B89               	goto	u4947
  5863  09DF  29DE               	decfsz	((??_initLCD+0)+0),f
  5864  09E0  0BB6               	goto	u4947
  5865  09E1  29DE               opt asmopt_pop
  5866                           
  5867                           	line	44
  5868                           	
  5869                           l5936:	
  5870  09E2                     ;LCD_hd44780u_qy_2004a.c: 44:   setData(0x3);
  5871                           	movlw	low(03h)
  5872  09E2  3003               	fcall	_setData
  5873  09E3  3196  261F  3189   	line	45
  5874                           	
  5875                           l5938:	
  5876  09E6                     ;LCD_hd44780u_qy_2004a.c: 45:   _delay((unsigned long)((5)*(16000000/4000.0)));
  5877                           	opt asmopt_push
  5878                           opt asmopt_off
  5879                           movlw	26
  5880  09E6  301A               	movlb 0	; select bank0
  5881  09E7  0020               movwf	((??_initLCD+0)+0),f
  5882  09E8  00B6               	movlw	248
  5883  09E9  30F8               u4957:
  5884  09EA                     decfsz	wreg
  5885  09EA  0B89               	goto	u4957
  5886  09EB  29EA               	decfsz	((??_initLCD+0)+0),f
  5887  09EC  0BB6               	goto	u4957
  5888  09ED  29EA               	nop
  5889  09EE  0000               opt asmopt_pop
  5890                           
  5891                           	line	46
  5892                           ;LCD_hd44780u_qy_2004a.c: 46:   setData(0x3);
  5893                           	movlw	low(03h)
  5894  09EF  3003               	fcall	_setData
  5895  09F0  3196  261F  3189   	line	47
  5896                           	
  5897                           l5940:	
  5898  09F3                     ;LCD_hd44780u_qy_2004a.c: 47:   _delay((unsigned long)((150)*(16000000/4000000.0)));
  5899                           	opt asmopt_push
  5900                           opt asmopt_off
  5901                           	movlw	200
  5902  09F3  30C8               u4967:
  5903  09F4                     decfsz	wreg
  5904  09F4  0B89               	goto	u4967
  5905  09F5  29F4               opt asmopt_pop
  5906                           
  5907                           	line	48
  5908                           	
  5909                           l5942:	
  5910  09F6                     ;LCD_hd44780u_qy_2004a.c: 48:   setData(0x3);
  5911                           	movlw	low(03h)
  5912  09F6  3003               	fcall	_setData
  5913  09F7  3196  261F  3189   	line	49
  5914                           ;LCD_hd44780u_qy_2004a.c: 49:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  5915                           	opt asmopt_push
  5916                           opt asmopt_off
  5917                           	movlw	13
  5918  09FA  300D               u4977:
  5919  09FB                     decfsz	wreg
  5920  09FB  0B89               	goto	u4977
  5921  09FC  29FB               	nop
  5922  09FD  0000               opt asmopt_pop
  5923                           
  5924                           	line	50
  5925                           	
  5926                           l5944:	
  5927  09FE                     ;LCD_hd44780u_qy_2004a.c: 50:   setData(0x2);
  5928                           	movlw	low(02h)
  5929  09FE  3002               	fcall	_setData
  5930  09FF  3196  261F  3189   	line	51
  5931                           	
  5932                           l5946:	
  5933  0A02                     ;LCD_hd44780u_qy_2004a.c: 51:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  5934                           	opt asmopt_push
  5935                           opt asmopt_off
  5936                           	movlw	13
  5937  0A02  300D               u4987:
  5938  0A03                     decfsz	wreg
  5939  0A03  0B89               	goto	u4987
  5940  0A04  2A03               	nop
  5941  0A05  0000               opt asmopt_pop
  5942                           
  5943                           	line	52
  5944                           ;LCD_hd44780u_qy_2004a.c: 52:   writeInsChk(0x28);
  5945                           	movlw	low(028h)
  5946  0A06  3028               	fcall	_writeInsChk
  5947  0A07  3193  2320  3189   	line	53
  5948                           	
  5949                           l5948:	
  5950  0A0A                     ;LCD_hd44780u_qy_2004a.c: 53:   mDisplayOnOffReg = 0x0F;
  5951                           	movlw	low(0Fh)
  5952  0A0A  300F               	movlb 0	; select bank0
  5953  0A0B  0020               	movwf	(??_initLCD+0)+0
  5954  0A0C  00B6               	movf	(??_initLCD+0)+0,w
  5955  0A0D  0836               	movwf	(_mDisplayOnOffReg)
  5956  0A0E  00DC               	line	54
  5957                           	
  5958                           l5950:	
  5959  0A0F                     ;LCD_hd44780u_qy_2004a.c: 54:   mCursorDisplayShiftReg= 0x06;
  5960                           	movlw	low(06h)
  5961  0A0F  3006               	movwf	(??_initLCD+0)+0
  5962  0A10  00B6               	movf	(??_initLCD+0)+0,w
  5963  0A11  0836               	movwf	(_mCursorDisplayShiftReg)
  5964  0A12  00DB               	line	55
  5965                           ;LCD_hd44780u_qy_2004a.c: 55:   writeInsChk(mDisplayOnOffReg);
  5966                           	movf	(_mDisplayOnOffReg),w
  5967  0A13  085C               	fcall	_writeInsChk
  5968  0A14  3193  2320  3189   	line	57
  5969                           ;LCD_hd44780u_qy_2004a.c: 57:   clearDisplay();
  5970                           	fcall	_clearDisplay
  5971  0A17  3192  22D2  3189   	line	58
  5972                           ;LCD_hd44780u_qy_2004a.c: 58:   writeInsChk(0x06);
  5973                           	movlw	low(06h)
  5974  0A1A  3006               	fcall	_writeInsChk
  5975  0A1B  3193  2320  3189   	line	59
  5976                           	
  5977                           l5952:	
  5978  0A1E                     ;LCD_hd44780u_qy_2004a.c: 59:   mWritingPosition=1;
  5979                           	movlb 0	; select bank0
  5980  0A1E  0020               	clrf	(_mWritingPosition)
  5981  0A1F  01DA               	incf	(_mWritingPosition),f
  5982  0A20  0ADA               	line	61
  5983                           	
  5984                           l245:	
  5985  0A21                     	return
  5986  0A21  0008               	opt stack 0
  5987                           GLOBAL	__end_of_initLCD
  5988                           	__end_of_initLCD:
  5989  0A22                     	signat	_initLCD,89
  5990                           	global	_clearDisplay
  5991                           
  5992 ;; *************** function _clearDisplay *****************
  5993 ;; Defined at:
  5994 ;;		line 295 in file "LCD_hd44780u_qy_2004a.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;		None
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;		None
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  1    wreg      void 
  6001 ;; Registers used:
  6002 ;;		wreg, status,2, status,0, pclath, cstack
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6012 ;;Total ram usage:        0 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; Hardware stack levels required when called:    9
  6015 ;; This function calls:
  6016 ;;		_writeInsChk
  6017 ;; This function is called by:
  6018 ;;		_main
  6019 ;;		_initLCD
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  6023                           	line	295
  6024                           global __ptext7
  6025                           __ptext7:	;psect for function _clearDisplay
  6026  12D2                     psect	text7
  6027                           	file	"LCD_hd44780u_qy_2004a.c"
  6028                           	line	295
  6029                           	global	__size_of_clearDisplay
  6030                           	__size_of_clearDisplay	equ	__end_of_clearDisplay-_clearDisplay
  6031  0005                     	
  6032                           _clearDisplay:	
  6033  12D2                     ;incstack = 0
  6034                           	opt	stack 5
  6035                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  6036                           	line	297
  6037                           	
  6038                           l5568:	
  6039  12D2                     ;LCD_hd44780u_qy_2004a.c: 297:   writeInsChk(0x01);
  6040                           	movlw	low(01h)
  6041  12D2  3001               	fcall	_writeInsChk
  6042  12D3  3193  2320  3192   	line	298
  6043                           	
  6044                           l349:	
  6045  12D6                     	return
  6046  12D6  0008               	opt stack 0
  6047                           GLOBAL	__end_of_clearDisplay
  6048                           	__end_of_clearDisplay:
  6049  12D7                     	signat	_clearDisplay,89
  6050                           	global	_writeInsChk
  6051                           
  6052 ;; *************** function _writeInsChk *****************
  6053 ;; Defined at:
  6054 ;;		line 182 in file "LCD_hd44780u_qy_2004a.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;  iOpCode         1    wreg     unsigned char 
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;  iOpCode         1   21[BANK0 ] unsigned char 
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  1    wreg      void 
  6061 ;; Registers used:
  6062 ;;		wreg, status,2, status,0, pclath, cstack
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6069 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6071 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6072 ;;Total ram usage:        1 bytes
  6073 ;; Hardware stack levels used:    1
  6074 ;; Hardware stack levels required when called:    8
  6075 ;; This function calls:
  6076 ;;		_waitLCDBusy
  6077 ;;		_writeInsNoChk
  6078 ;; This function is called by:
  6079 ;;		_initLCD
  6080 ;;		_powerOnLcd
  6081 ;;		_setNotBlinkingCursor
  6082 ;;		_setCursorOff
  6083 ;;		_clearDisplay
  6084 ;;		_moveCursorToHome
  6085 ;;		_powerOffLcd
  6086 ;;		_setBlinkingCursor
  6087 ;;		_setCursorOn
  6088 ;;		_setCursorMovingLeft
  6089 ;;		_setCursorMovingRight
  6090 ;;		_setDisplayMovingRight
  6091 ;;		_setDisplayMovingLeft
  6092 ;;		_moveCursorRight
  6093 ;;		_moveCursorLeft
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  6097                           	line	182
  6098                           global __ptext8
  6099                           __ptext8:	;psect for function _writeInsChk
  6100  1320                     psect	text8
  6101                           	file	"LCD_hd44780u_qy_2004a.c"
  6102                           	line	182
  6103                           	global	__size_of_writeInsChk
  6104                           	__size_of_writeInsChk	equ	__end_of_writeInsChk-_writeInsChk
  6105  000B                     	
  6106                           _writeInsChk:	
  6107  1320                     ;incstack = 0
  6108                           	opt	stack 6
  6109                           ; Regs used in _writeInsChk: [wreg+status,2+status,0+pclath+cstack]
  6110                           ;writeInsChk@iOpCode stored from wreg
  6111                           	movlb 0	; select bank0
  6112  1320  0020               	movwf	(writeInsChk@iOpCode)
  6113  1321  00B5               	line	184
  6114                           	
  6115                           l5288:	
  6116  1322                     ;LCD_hd44780u_qy_2004a.c: 182: void writeInsChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 83: {;LCD_hd44780u_qy_2004a.c: 184:   waitLCDBusy();
  6117                           	fcall	_waitLCDBusy
  6118  1322  3194  24E2  3193   	line	185
  6119                           ;LCD_hd44780u_qy_2004a.c: 185:   writeInsNoChk(iOpCode);
  6120                           	movlb 0	; select bank0
  6121  1325  0020               	movf	(writeInsChk@iOpCode),w
  6122  1326  0835               	fcall	_writeInsNoChk
  6123  1327  3193  2386  3193   	line	186
  6124                           	
  6125                           l295:	
  6126  132A                     	return
  6127  132A  0008               	opt stack 0
  6128                           GLOBAL	__end_of_writeInsChk
  6129                           	__end_of_writeInsChk:
  6130  132B                     	signat	_writeInsChk,4217
  6131                           	global	_writeInsNoChk
  6132                           
  6133 ;; *************** function _writeInsNoChk *****************
  6134 ;; Defined at:
  6135 ;;		line 188 in file "LCD_hd44780u_qy_2004a.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;  iOpCode         1    wreg     unsigned char 
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;  iOpCode         1   20[BANK0 ] unsigned char 
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  1    wreg      void 
  6142 ;; Registers used:
  6143 ;;		wreg, status,2, status,0, pclath, cstack
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6150 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6151 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6152 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6153 ;;Total ram usage:        2 bytes
  6154 ;; Hardware stack levels used:    1
  6155 ;; Hardware stack levels required when called:    7
  6156 ;; This function calls:
  6157 ;;		_SetToSendDataToLCD
  6158 ;;		_setData
  6159 ;; This function is called by:
  6160 ;;		_writeInsChk
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  6164                           	line	188
  6165                           global __ptext9
  6166                           __ptext9:	;psect for function _writeInsNoChk
  6167  1386                     psect	text9
  6168                           	file	"LCD_hd44780u_qy_2004a.c"
  6169                           	line	188
  6170                           	global	__size_of_writeInsNoChk
  6171                           	__size_of_writeInsNoChk	equ	__end_of_writeInsNoChk-_writeInsNoChk
  6172  0018                     	
  6173                           _writeInsNoChk:	
  6174  1386                     ;incstack = 0
  6175                           	opt	stack 6
  6176                           ; Regs used in _writeInsNoChk: [wreg+status,2+status,0+pclath+cstack]
  6177                           ;writeInsNoChk@iOpCode stored from wreg
  6178                           	movlb 0	; select bank0
  6179  1386  0020               	movwf	(writeInsNoChk@iOpCode)
  6180  1387  00B4               	line	190
  6181                           	
  6182                           l5186:	
  6183  1388                     ;LCD_hd44780u_qy_2004a.c: 188: void writeInsNoChk(char iOpCode);LCD_hd44780u_qy_2004a.c:
                                  189: {;LCD_hd44780u_qy_2004a.c: 190:   SetToSendDataToLCD();
  6184                           	fcall	_SetToSendDataToLCD
  6185  1388  3192  22E3  3193   	line	191
  6186                           	
  6187                           l5188:	
  6188  138B                     ;LCD_hd44780u_qy_2004a.c: 191:   PORTAbits.RA0 = 0;
  6189                           	movlb 0	; select bank0
  6190  138B  0020               	bcf	(12),0	;volatile
  6191  138C  100C               	line	192
  6192                           	
  6193                           l5190:	
  6194  138D                     ;LCD_hd44780u_qy_2004a.c: 192:   PORTAbits.RA1 = 0;
  6195                           	bcf	(12),1	;volatile
  6196  138D  108C               	line	193
  6197                           	
  6198                           l5192:	
  6199  138E                     ;LCD_hd44780u_qy_2004a.c: 193:   setData(iOpCode >> 4);
  6200                           	movf	(writeInsNoChk@iOpCode),w
  6201  138E  0834               	movwf	(??_writeInsNoChk+0)+0
  6202  138F  00B3               	movlw	04h
  6203  1390  3004               u3515:
  6204  1391                     	lsrf	(??_writeInsNoChk+0)+0,f
  6205  1391  36B3               	decfsz	wreg,f
  6206  1392  0B89               	goto	u3515
  6207  1393  2B91               	movf	0+(??_writeInsNoChk+0)+0,w
  6208  1394  0833               	fcall	_setData
  6209  1395  3196  261F  3193   	line	194
  6210                           	
  6211                           l5194:	
  6212  1398                     ;LCD_hd44780u_qy_2004a.c: 194:   setData(iOpCode);
  6213                           	movlb 0	; select bank0
  6214  1398  0020               	movf	(writeInsNoChk@iOpCode),w
  6215  1399  0834               	fcall	_setData
  6216  139A  3196  261F  3193   	line	195
  6217                           	
  6218                           l298:	
  6219  139D                     	return
  6220  139D  0008               	opt stack 0
  6221                           GLOBAL	__end_of_writeInsNoChk
  6222                           	__end_of_writeInsNoChk:
  6223  139E                     	signat	_writeInsNoChk,4217
  6224                           	global	_PrintLog
  6225                           
  6226 ;; *************** function _PrintLog *****************
  6227 ;; Defined at:
  6228 ;;		line 68 in file "161518_temp_main.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  iText           1    wreg     PTR unsigned char 
  6231 ;;		 -> wInterruptText(75), 
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;  iText           1   43[BANK0 ] PTR unsigned char 
  6234 ;;		 -> wInterruptText(75), 
  6235 ;;  wInterruptTe    1   42[BANK0 ] unsigned char 
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  1    wreg      void 
  6238 ;; Registers used:
  6239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6246 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6247 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6248 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6249 ;;Total ram usage:        4 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; Hardware stack levels required when called:   11
  6252 ;; This function calls:
  6253 ;;		_lcdWriteText
  6254 ;;		_memset
  6255 ;;		_strlen
  6256 ;; This function is called by:
  6257 ;;		_main
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  6261                           	file	"161518_temp_main.c"
  6262                           	line	68
  6263                           global __ptext10
  6264                           __ptext10:	;psect for function _PrintLog
  6265  148B                     psect	text10
  6266                           	file	"161518_temp_main.c"
  6267                           	line	68
  6268                           	global	__size_of_PrintLog
  6269                           	__size_of_PrintLog	equ	__end_of_PrintLog-_PrintLog
  6270  002B                     	
  6271                           _PrintLog:	
  6272  148B                     ;incstack = 0
  6273                           	opt	stack 4
  6274                           ; Regs used in _PrintLog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6275                           ;PrintLog@iText stored from wreg
  6276                           	movlb 0	; select bank0
  6277  148B  0020               	movwf	(PrintLog@iText)
  6278  148C  00CB               	line	70
  6279                           	
  6280                           l5856:	
  6281  148D                     	movf	(PrintLog@iText),w
  6282  148D  084B               	movwf	(strlen@s)
  6283  148E  00B0               	movlw	0x2
  6284  148F  3002               
  6285                           	movwf	(strlen@s+1)
  6286  1490  00B1               	fcall	_strlen
  6287  1491  3193  23C1  3194   	movlb 0	; select bank0
  6288  1494  0020               	movf	(0+(?_strlen)),w
  6289  1495  0830               	movwf	(??_PrintLog+0)+0
  6290  1496  00C8               	movf	(??_PrintLog+0)+0,w
  6291  1497  0848               	movwf	(PrintLog@wInterruptTextLen)
  6292  1498  00CA               	line	72
  6293                           	
  6294                           l5858:	
  6295  1499                     	movf	((PrintLog@wInterruptTextLen)),w
  6296  1499  084A               	btfsc	status,2
  6297  149A  1903               	goto	u4391
  6298  149B  2C9D               	goto	u4390
  6299  149C  2C9E               u4391:
  6300  149D                     	goto	l143
  6301  149D  2CB5               u4390:
  6302  149E                     	line	74
  6303                           	
  6304                           l5860:	
  6305  149E                     	movf	(PrintLog@iText),w
  6306  149E  084B               	movwf	(lcdWriteText@iText)
  6307  149F  00C2               	movlw	0x2
  6308  14A0  3002               
  6309                           	movwf	(lcdWriteText@iText+1)
  6310  14A1  00C3               	fcall	_lcdWriteText
  6311  14A2  3194  2436  3194   	line	75
  6312                           	
  6313                           l5862:	
  6314  14A5                     	movlw	0
  6315  14A5  3000               	movlb 0	; select bank0
  6316  14A6  0020               	movwf	(memset@c)
  6317  14A7  00B0               	movwf	(memset@c+1)
  6318  14A8  00B1               	movf	(PrintLog@wInterruptTextLen),w
  6319  14A9  084A               	movwf	(??_PrintLog+0)+0
  6320  14AA  00C8               	clrf	(??_PrintLog+0)+0+1
  6321  14AB  01C9               	movf	0+(??_PrintLog+0)+0,w
  6322  14AC  0848               	movwf	(memset@n)
  6323  14AD  00B2               	movf	1+(??_PrintLog+0)+0,w
  6324  14AE  0849               	movwf	(memset@n+1)
  6325  14AF  00B3               	movf	(PrintLog@iText),w
  6326  14B0  084B               	fcall	_memset
  6327  14B1  318E  2628  3194   	goto	l143
  6328  14B4  2CB5               	line	76
  6329                           	
  6330                           l142:	
  6331  14B5                     	line	77
  6332                           	
  6333                           l143:	
  6334  14B5                     	return
  6335  14B5  0008               	opt stack 0
  6336                           GLOBAL	__end_of_PrintLog
  6337                           	__end_of_PrintLog:
  6338  14B6                     	signat	_PrintLog,4217
  6339                           	global	_I2CInit
  6340                           
  6341 ;; *************** function _I2CInit *****************
  6342 ;; Defined at:
  6343 ;;		line 7 in file "I2C.c"
  6344 ;; Parameters:    Size  Location     Type
  6345 ;;		None
  6346 ;; Auto vars:     Size  Location     Type
  6347 ;;		None
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  1    wreg      void 
  6350 ;; Registers used:
  6351 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6361 ;;Total ram usage:        0 bytes
  6362 ;; Hardware stack levels used:    1
  6363 ;; Hardware stack levels required when called:    7
  6364 ;; This function calls:
  6365 ;;		_memset
  6366 ;; This function is called by:
  6367 ;;		_main
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  6371                           	file	"I2C.c"
  6372                           	line	7
  6373                           global __ptext11
  6374                           __ptext11:	;psect for function _I2CInit
  6375  153E                     psect	text11
  6376                           	file	"I2C.c"
  6377                           	line	7
  6378                           	global	__size_of_I2CInit
  6379                           	__size_of_I2CInit	equ	__end_of_I2CInit-_I2CInit
  6380  0033                     	
  6381                           _I2CInit:	
  6382  153E                     ;incstack = 0
  6383                           	opt	stack 8
  6384                           ; Regs used in _I2CInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6385                           	line	9
  6386                           	
  6387                           l5880:	
  6388  153E                     ;I2C.c: 9:   TRISCbits.TRISC3 = 1;
  6389                           	movlb 1	; select bank1
  6390  153E  0021               	bsf	(142)^080h,3	;volatile
  6391  153F  158E               	line	10
  6392                           ;I2C.c: 10:   TRISCbits.TRISC4 = 1;
  6393                           	bsf	(142)^080h,4	;volatile
  6394  1540  160E               	line	11
  6395                           ;I2C.c: 11:   ANSELCbits.ANSC3 = 0;
  6396                           	movlb 3	; select bank3
  6397  1541  0023               	bcf	(398)^0180h,3	;volatile
  6398  1542  118E               	line	12
  6399                           ;I2C.c: 12:   ANSELCbits.ANSC4 = 0;
  6400                           	bcf	(398)^0180h,4	;volatile
  6401  1543  120E               	line	14
  6402                           	
  6403                           l5882:	
  6404  1544                     ;I2C.c: 14:   memset(wI2CTxBuffer,0,sizeof(wI2CTxBufferSize));
  6405                           	movlw	0
  6406  1544  3000               	movlb 0	; select bank0
  6407  1545  0020               	movwf	(memset@c)
  6408  1546  00B0               	movwf	(memset@c+1)
  6409  1547  00B1               	movlw	01h
  6410  1548  3001               	movwf	(memset@n)
  6411  1549  00B2               	movlw	0
  6412  154A  3000               	movwf	((memset@n))+1
  6413  154B  00B3               	movlw	(low(_wI2CTxBuffer|((0x2)<<8)))&0ffh
  6414  154C  3050               	fcall	_memset
  6415  154D  318E  2628  3195   	line	15
  6416                           ;I2C.c: 15:   memset(wI2CRxBuffer,0,sizeof(wI2CRxBufferSize));
  6417                           	movlw	0
  6418  1550  3000               	movlb 0	; select bank0
  6419  1551  0020               	movwf	(memset@c)
  6420  1552  00B0               	movwf	(memset@c+1)
  6421  1553  00B1               	movlw	01h
  6422  1554  3001               	movwf	(memset@n)
  6423  1555  00B2               	movlw	0
  6424  1556  3000               	movwf	((memset@n))+1
  6425  1557  00B3               	movlw	(low(_wI2CRxBuffer|((0x2)<<8)))&0ffh
  6426  1558  303C               	fcall	_memset
  6427  1559  318E  2628  3195   	line	19
  6428                           	
  6429                           l5884:	
  6430  155C                     ;I2C.c: 19:   SSPCON1bits.SSPM = 0x8;
  6431                           	movlb 4	; select bank4
  6432  155C  0024               	movf	(533)^0200h,w	;volatile
  6433  155D  0815               	andlw	not (((1<<4)-1)<<0)
  6434  155E  39F0               	iorlw	(08h & ((1<<4)-1))<<0
  6435  155F  3808               	movwf	(533)^0200h	;volatile
  6436  1560  0095               	line	20
  6437                           	
  6438                           l5886:	
  6439  1561                     ;I2C.c: 20:   SSPADD = 0x1F;
  6440                           	movlw	low(01Fh)
  6441  1561  301F               	movwf	(530)^0200h	;volatile
  6442  1562  0092               	line	21
  6443                           	
  6444                           l5888:	
  6445  1563                     ;I2C.c: 21:   SSPCON1bits.SSPEN = 1;
  6446                           	bsf	(533)^0200h,5	;volatile
  6447  1563  1695               	line	22
  6448                           	
  6449                           l5890:	
  6450  1564                     ;I2C.c: 22:   SSPCON2bits.GCEN = 0;
  6451                           	bcf	(534)^0200h,7	;volatile
  6452  1564  1396               	line	23
  6453                           	
  6454                           l5892:	
  6455  1565                     ;I2C.c: 23:   SSPCON2bits.ACKEN = 1;
  6456                           	bsf	(534)^0200h,4	;volatile
  6457  1565  1616               	line	24
  6458                           	
  6459                           l5894:	
  6460  1566                     ;I2C.c: 24:   SSPCON3bits.PCIE = 1;
  6461                           	bsf	(535)^0200h,6	;volatile
  6462  1566  1717               	line	25
  6463                           	
  6464                           l5896:	
  6465  1567                     ;I2C.c: 25:   SSPCON3bits.SCIE = 1;
  6466                           	bsf	(535)^0200h,5	;volatile
  6467  1567  1697               	line	26
  6468                           	
  6469                           l5898:	
  6470  1568                     ;I2C.c: 26:   SSPCON3bits.SDAHT = 1;
  6471                           	bsf	(535)^0200h,3	;volatile
  6472  1568  1597               	line	27
  6473                           	
  6474                           l5900:	
  6475  1569                     ;I2C.c: 27:   SSPCON3bits.AHEN = 0 ;
  6476                           	bcf	(535)^0200h,1	;volatile
  6477  1569  1097               	line	28
  6478                           	
  6479                           l5902:	
  6480  156A                     ;I2C.c: 28:   SSPCON3bits.DHEN = 0;
  6481                           	bcf	(535)^0200h,0	;volatile
  6482  156A  1017               	line	29
  6483                           	
  6484                           l5904:	
  6485  156B                     ;I2C.c: 29:   SSPSTATbits.CKE = 0;
  6486                           	bcf	(532)^0200h,6	;volatile
  6487  156B  1314               	line	31
  6488                           	
  6489                           l5906:	
  6490  156C                     ;I2C.c: 31:   INTCONbits.PEIE = 1;
  6491                           	bsf	(11),6	;volatile
  6492  156C  170B               	line	32
  6493                           	
  6494                           l5908:	
  6495  156D                     ;I2C.c: 32:   PIE1bits.SSPIE = 1;
  6496                           	movlb 1	; select bank1
  6497  156D  0021               	bsf	(145)^080h,3	;volatile
  6498  156E  1591               	line	33
  6499                           	
  6500                           l5910:	
  6501  156F                     ;I2C.c: 33:   PIE2bits.BCLIE = 1;
  6502                           	bsf	(146)^080h,3	;volatile
  6503  156F  1592               	line	36
  6504                           	
  6505                           l533:	
  6506  1570                     	return
  6507  1570  0008               	opt stack 0
  6508                           GLOBAL	__end_of_I2CInit
  6509                           	__end_of_I2CInit:
  6510  1571                     	signat	_I2CInit,89
  6511                           	global	_memset
  6512                           
  6513 ;; *************** function _memset *****************
  6514 ;; Defined at:
  6515 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  6516 ;; Parameters:    Size  Location     Type
  6517 ;;  dest            1    wreg     PTR void 
  6518 ;;		 -> wI2CRxBuffer(20), wI2CTxBuffer(20), wInterruptText(75), 
  6519 ;;  c               2   16[BANK0 ] int 
  6520 ;;  n               2   18[BANK0 ] unsigned int 
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;  dest            1   24[BANK0 ] PTR void 
  6523 ;;		 -> wI2CRxBuffer(20), wI2CTxBuffer(20), wInterruptText(75), 
  6524 ;;  k               2   22[BANK0 ] unsigned int 
  6525 ;;  s               1   25[BANK0 ] PTR unsigned char 
  6526 ;;		 -> wI2CRxBuffer(20), wI2CTxBuffer(20), wInterruptText(75), 
  6527 ;; Return value:  Size  Location     Type
  6528 ;;                  1    wreg      PTR void 
  6529 ;; Registers used:
  6530 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6531 ;; Tracked objects:
  6532 ;;		On entry : 0/0
  6533 ;;		On exit  : 0/0
  6534 ;;		Unchanged: 0/0
  6535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6536 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6537 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6538 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6539 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  6540 ;;Total ram usage:       10 bytes
  6541 ;; Hardware stack levels used:    1
  6542 ;; Hardware stack levels required when called:    6
  6543 ;; This function calls:
  6544 ;;		Nothing
  6545 ;; This function is called by:
  6546 ;;		_PrintLog
  6547 ;;		_main
  6548 ;;		_I2CInit
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           psect	text12,local,class=CODE,delta=2,merge=1,group=2
  6552                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  6553                           	line	4
  6554                           global __ptext12
  6555                           __ptext12:	;psect for function _memset
  6556  0E28                     psect	text12
  6557                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  6558                           	line	4
  6559                           	global	__size_of_memset
  6560                           	__size_of_memset	equ	__end_of_memset-_memset
  6561  00B4                     	
  6562                           _memset:	
  6563  0E28                     ;incstack = 0
  6564                           	opt	stack 9
  6565                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6566                           ;memset@dest stored from wreg
  6567                           	movlb 0	; select bank0
  6568  0E28  0020               	movwf	(memset@dest)
  6569  0E29  00B8               	line	6
  6570                           	
  6571                           l5522:	
  6572  0E2A                     	movf	(memset@dest),w
  6573  0E2A  0838               	movwf	(??_memset+0)+0
  6574  0E2B  00B4               	movf	(??_memset+0)+0,w
  6575  0E2C  0834               	movwf	(memset@s)
  6576  0E2D  00B9               	line	13
  6577                           	
  6578                           l5524:	
  6579  0E2E                     	movf	((memset@n)),w
  6580  0E2E  0832               iorwf	((memset@n+1)),w
  6581  0E2F  0433               	btfss	status,2
  6582  0E30  1D03               	goto	u4041
  6583  0E31  2E33               	goto	u4040
  6584  0E32  2E34               u4041:
  6585  0E33                     	goto	l5528
  6586  0E33  2E36               u4040:
  6587  0E34                     	goto	l1263
  6588  0E34  2EDB               	
  6589                           l5526:	
  6590  0E35                     ;	Return value of _memset is never used
  6591                           	goto	l1263
  6592  0E35  2EDB               	
  6593                           l1262:	
  6594  0E36                     	line	14
  6595                           	
  6596                           l5528:	
  6597  0E36                     	movf	(memset@c),w
  6598  0E36  0830               	movwf	(??_memset+0)+0
  6599  0E37  00B4               	movf	(memset@s),w
  6600  0E38  0839               	movwf	fsr1l
  6601  0E39  0086               	movlw 2	; select bank4/5
  6602  0E3A  3002               	movwf fsr1h	
  6603  0E3B  0087               	
  6604                           	movf	(??_memset+0)+0,w
  6605  0E3C  0834               	movwf	indf1
  6606  0E3D  0081               	line	15
  6607                           	
  6608                           l5530:	
  6609  0E3E                     	movf	(memset@c),w
  6610  0E3E  0830               	movwf	(??_memset+0)+0
  6611  0E3F  00B4               	movf	(memset@n),w
  6612  0E40  0832               	addlw	0FFh
  6613  0E41  3EFF               	addwf	(memset@s),w
  6614  0E42  0739               	movwf	(??_memset+1)+0
  6615  0E43  00B5               	movf	0+(??_memset+1)+0,w
  6616  0E44  0835               	movwf	fsr1l
  6617  0E45  0086               	movlw 2	; select bank4/5
  6618  0E46  3002               	movwf fsr1h	
  6619  0E47  0087               	
  6620                           	movf	(??_memset+0)+0,w
  6621  0E48  0834               	movwf	indf1
  6622  0E49  0081               	line	16
  6623                           	
  6624                           l5532:	
  6625  0E4A                     	movlw	0
  6626  0E4A  3000               	subwf	(memset@n+1),w
  6627  0E4B  0233               	movlw	03h
  6628  0E4C  3003               	skipnz
  6629  0E4D  1903               	subwf	(memset@n),w
  6630  0E4E  0232               	skipnc
  6631  0E4F  1803               	goto	u4051
  6632  0E50  2E52               	goto	u4050
  6633  0E51  2E53               u4051:
  6634  0E52                     	goto	l5536
  6635  0E52  2E55               u4050:
  6636  0E53                     	goto	l1263
  6637  0E53  2EDB               	
  6638                           l5534:	
  6639  0E54                     ;	Return value of _memset is never used
  6640                           	goto	l1263
  6641  0E54  2EDB               	
  6642                           l1264:	
  6643  0E55                     	line	17
  6644                           	
  6645                           l5536:	
  6646  0E55                     	movf	(memset@c),w
  6647  0E55  0830               	movwf	(??_memset+0)+0
  6648  0E56  00B4               	incf	(memset@s),w
  6649  0E57  0A39               	movwf	fsr1l
  6650  0E58  0086               	movlw 2	; select bank4/5
  6651  0E59  3002               	movwf fsr1h	
  6652  0E5A  0087               	
  6653                           	movf	(??_memset+0)+0,w
  6654  0E5B  0834               	movwf	indf1
  6655  0E5C  0081               	line	18
  6656                           	
  6657                           l5538:	
  6658  0E5D                     	movf	(memset@c),w
  6659  0E5D  0830               	movwf	(??_memset+0)+0
  6660  0E5E  00B4               	movf	(memset@s),w
  6661  0E5F  0839               	addlw	02h
  6662  0E60  3E02               	movwf	fsr1l
  6663  0E61  0086               	movlw 2	; select bank4/5
  6664  0E62  3002               	movwf fsr1h	
  6665  0E63  0087               	
  6666                           	movf	(??_memset+0)+0,w
  6667  0E64  0834               	movwf	indf1
  6668  0E65  0081               	line	19
  6669                           	
  6670                           l5540:	
  6671  0E66                     	movf	(memset@c),w
  6672  0E66  0830               	movwf	(??_memset+0)+0
  6673  0E67  00B4               	movf	(memset@n),w
  6674  0E68  0832               	addlw	0FEh
  6675  0E69  3EFE               	addwf	(memset@s),w
  6676  0E6A  0739               	movwf	(??_memset+1)+0
  6677  0E6B  00B5               	movf	0+(??_memset+1)+0,w
  6678  0E6C  0835               	movwf	fsr1l
  6679  0E6D  0086               	movlw 2	; select bank4/5
  6680  0E6E  3002               	movwf fsr1h	
  6681  0E6F  0087               	
  6682                           	movf	(??_memset+0)+0,w
  6683  0E70  0834               	movwf	indf1
  6684  0E71  0081               	line	20
  6685                           	
  6686                           l5542:	
  6687  0E72                     	movf	(memset@c),w
  6688  0E72  0830               	movwf	(??_memset+0)+0
  6689  0E73  00B4               	movf	(memset@n),w
  6690  0E74  0832               	addlw	0FDh
  6691  0E75  3EFD               	addwf	(memset@s),w
  6692  0E76  0739               	movwf	(??_memset+1)+0
  6693  0E77  00B5               	movf	0+(??_memset+1)+0,w
  6694  0E78  0835               	movwf	fsr1l
  6695  0E79  0086               	movlw 2	; select bank4/5
  6696  0E7A  3002               	movwf fsr1h	
  6697  0E7B  0087               	
  6698                           	movf	(??_memset+0)+0,w
  6699  0E7C  0834               	movwf	indf1
  6700  0E7D  0081               	line	21
  6701                           	
  6702                           l5544:	
  6703  0E7E                     	movlw	0
  6704  0E7E  3000               	subwf	(memset@n+1),w
  6705  0E7F  0233               	movlw	07h
  6706  0E80  3007               	skipnz
  6707  0E81  1903               	subwf	(memset@n),w
  6708  0E82  0232               	skipnc
  6709  0E83  1803               	goto	u4061
  6710  0E84  2E86               	goto	u4060
  6711  0E85  2E87               u4061:
  6712  0E86                     	goto	l5548
  6713  0E86  2E89               u4060:
  6714  0E87                     	goto	l1263
  6715  0E87  2EDB               	
  6716                           l5546:	
  6717  0E88                     ;	Return value of _memset is never used
  6718                           	goto	l1263
  6719  0E88  2EDB               	
  6720                           l1265:	
  6721  0E89                     	line	22
  6722                           	
  6723                           l5548:	
  6724  0E89                     	movf	(memset@c),w
  6725  0E89  0830               	movwf	(??_memset+0)+0
  6726  0E8A  00B4               	movf	(memset@s),w
  6727  0E8B  0839               	addlw	03h
  6728  0E8C  3E03               	movwf	fsr1l
  6729  0E8D  0086               	movlw 2	; select bank4/5
  6730  0E8E  3002               	movwf fsr1h	
  6731  0E8F  0087               	
  6732                           	movf	(??_memset+0)+0,w
  6733  0E90  0834               	movwf	indf1
  6734  0E91  0081               	line	23
  6735                           	movf	(memset@c),w
  6736  0E92  0830               	movwf	(??_memset+0)+0
  6737  0E93  00B4               	movf	(memset@n),w
  6738  0E94  0832               	addlw	0FCh
  6739  0E95  3EFC               	addwf	(memset@s),w
  6740  0E96  0739               	movwf	(??_memset+1)+0
  6741  0E97  00B5               	movf	0+(??_memset+1)+0,w
  6742  0E98  0835               	movwf	fsr1l
  6743  0E99  0086               	movlw 2	; select bank4/5
  6744  0E9A  3002               	movwf fsr1h	
  6745  0E9B  0087               	
  6746                           	movf	(??_memset+0)+0,w
  6747  0E9C  0834               	movwf	indf1
  6748  0E9D  0081               	line	24
  6749                           	
  6750                           l5550:	
  6751  0E9E                     	movlw	0
  6752  0E9E  3000               	subwf	(memset@n+1),w
  6753  0E9F  0233               	movlw	09h
  6754  0EA0  3009               	skipnz
  6755  0EA1  1903               	subwf	(memset@n),w
  6756  0EA2  0232               	skipnc
  6757  0EA3  1803               	goto	u4071
  6758  0EA4  2EA6               	goto	u4070
  6759  0EA5  2EA7               u4071:
  6760  0EA6                     	goto	l5554
  6761  0EA6  2EA9               u4070:
  6762  0EA7                     	goto	l1263
  6763  0EA7  2EDB               	
  6764                           l5552:	
  6765  0EA8                     ;	Return value of _memset is never used
  6766                           	goto	l1263
  6767  0EA8  2EDB               	
  6768                           l1266:	
  6769  0EA9                     	line	31
  6770                           	
  6771                           l5554:	
  6772  0EA9                     	comf	(memset@s),w
  6773  0EA9  0939               	movwf	(??_memset+0)+0
  6774  0EAA  00B4               	comf	(memset@s+1),w
  6775  0EAB  093A               	movwf	((??_memset+0)+0+1)
  6776  0EAC  00B5               	incf	(??_memset+0)+0,f
  6777  0EAD  0AB4               	skipnz
  6778  0EAE  1903               	incf	((??_memset+0)+0+1),f
  6779  0EAF  0AB5               	movlw	0
  6780  0EB0  3000               	andwf	0+(??_memset+0)+0,w
  6781  0EB1  0534               	movwf	(memset@k)
  6782  0EB2  00B6               	movlw	0
  6783  0EB3  3000               	andwf	1+(??_memset+0)+0,w
  6784  0EB4  0535               	movwf	1+(memset@k)
  6785  0EB5  00B7               	line	32
  6786                           	movf	(memset@k),w
  6787  0EB6  0836               	movwf	(??_memset+0)+0
  6788  0EB7  00B4               	movf	(??_memset+0)+0,w
  6789  0EB8  0834               	addwf	(memset@s),f
  6790  0EB9  07B9               	line	33
  6791                           	
  6792                           l5556:	
  6793  0EBA                     	movf	(memset@k),w
  6794  0EBA  0836               	subwf	(memset@n),f
  6795  0EBB  02B2               	movf	(memset@k+1),w
  6796  0EBC  0837               	subwfb	(memset@n+1),f
  6797  0EBD  3BB3               	line	34
  6798                           	
  6799                           l5558:	
  6800  0EBE                     	movlw	0FCh
  6801  0EBE  30FC               	andwf	(memset@n),f
  6802  0EBF  05B2               	movlw	0FFh
  6803  0EC0  30FF               	andwf	(memset@n+1),f
  6804  0EC1  05B3               	line	86
  6805                           	goto	l5566
  6806  0EC2  2ED4               	
  6807                           l1268:	
  6808  0EC3                     	
  6809                           l5560:	
  6810  0EC3                     	movf	(memset@c),w
  6811  0EC3  0830               	movwf	(??_memset+0)+0
  6812  0EC4  00B4               	movf	(memset@s),w
  6813  0EC5  0839               	movwf	fsr1l
  6814  0EC6  0086               	movlw 2	; select bank4/5
  6815  0EC7  3002               	movwf fsr1h	
  6816  0EC8  0087               	
  6817                           	movf	(??_memset+0)+0,w
  6818  0EC9  0834               	movwf	indf1
  6819  0ECA  0081               	
  6820                           l5562:	
  6821  0ECB                     	movlw	01h
  6822  0ECB  3001               	subwf	(memset@n),f
  6823  0ECC  02B2               	movlw	0
  6824  0ECD  3000               	subwfb	(memset@n+1),f
  6825  0ECE  3BB3               	
  6826                           l5564:	
  6827  0ECF                     	movlw	low(01h)
  6828  0ECF  3001               	movwf	(??_memset+0)+0
  6829  0ED0  00B4               	movf	(??_memset+0)+0,w
  6830  0ED1  0834               	addwf	(memset@s),f
  6831  0ED2  07B9               	goto	l5566
  6832  0ED3  2ED4               	
  6833                           l1267:	
  6834  0ED4                     	
  6835                           l5566:	
  6836  0ED4                     	movf	((memset@n)),w
  6837  0ED4  0832               iorwf	((memset@n+1)),w
  6838  0ED5  0433               	btfss	status,2
  6839  0ED6  1D03               	goto	u4081
  6840  0ED7  2ED9               	goto	u4080
  6841  0ED8  2EDA               u4081:
  6842  0ED9                     	goto	l5560
  6843  0ED9  2EC3               u4080:
  6844  0EDA                     	goto	l1263
  6845  0EDA  2EDB               	
  6846                           l1269:	
  6847  0EDB                     	line	90
  6848                           ;	Return value of _memset is never used
  6849                           	
  6850                           l1263:	
  6851  0EDB                     	return
  6852  0EDB  0008               	opt stack 0
  6853                           GLOBAL	__end_of_memset
  6854                           	__end_of_memset:
  6855  0EDC                     	signat	_memset,12409
  6856                           	global	_Esp8266SetupWifi
  6857                           
  6858 ;; *************** function _Esp8266SetupWifi *****************
  6859 ;; Defined at:
  6860 ;;		line 39 in file "ESP8266.c"
  6861 ;; Parameters:    Size  Location     Type
  6862 ;;		None
  6863 ;; Auto vars:     Size  Location     Type
  6864 ;;		None
  6865 ;; Return value:  Size  Location     Type
  6866 ;;                  1    wreg      void 
  6867 ;; Registers used:
  6868 ;;		status,2
  6869 ;; Tracked objects:
  6870 ;;		On entry : 0/0
  6871 ;;		On exit  : 0/0
  6872 ;;		Unchanged: 0/0
  6873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6878 ;;Total ram usage:        0 bytes
  6879 ;; Hardware stack levels used:    1
  6880 ;; Hardware stack levels required when called:    6
  6881 ;; This function calls:
  6882 ;;		Nothing
  6883 ;; This function is called by:
  6884 ;;		_main
  6885 ;; This function uses a non-reentrant model
  6886 ;;
  6887                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  6888                           	file	"ESP8266.c"
  6889                           	line	39
  6890                           global __ptext13
  6891                           __ptext13:	;psect for function _Esp8266SetupWifi
  6892  12CD                     psect	text13
  6893                           	file	"ESP8266.c"
  6894                           	line	39
  6895                           	global	__size_of_Esp8266SetupWifi
  6896                           	__size_of_Esp8266SetupWifi	equ	__end_of_Esp8266SetupWifi-_Esp8266SetupWifi
  6897  0005                     	
  6898                           _Esp8266SetupWifi:	
  6899  12CD                     ;incstack = 0
  6900                           	opt	stack 9
  6901                           ; Regs used in _Esp8266SetupWifi: [status,2]
  6902                           	line	41
  6903                           	
  6904                           l6216:	
  6905  12CD                     ;ESP8266.c: 41:     gEsp8266State = eSettingUpCommand;
  6906                           	movlb 2	; select bank2
  6907  12CD  0022               	clrf	(_gEsp8266State)^0100h
  6908  12CE  01EE               	line	42
  6909                           	
  6910                           l6218:	
  6911  12CF                     ;ESP8266.c: 42:     gESPCommand = eSettingWiFiMode;
  6912                           	clrf	(_gESPCommand)^0100h
  6913  12CF  01ED               	incf	(_gESPCommand)^0100h,f
  6914  12D0  0AED               	line	43
  6915                           	
  6916                           l685:	
  6917  12D1                     	return
  6918  12D1  0008               	opt stack 0
  6919                           GLOBAL	__end_of_Esp8266SetupWifi
  6920                           	__end_of_Esp8266SetupWifi:
  6921  12D2                     	signat	_Esp8266SetupWifi,89
  6922                           	global	_Esp8266SetAccessPointMode
  6923                           
  6924 ;; *************** function _Esp8266SetAccessPointMode *****************
  6925 ;; Defined at:
  6926 ;;		line 34 in file "ESP8266.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;		None
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;		None
  6931 ;; Return value:  Size  Location     Type
  6932 ;;                  1    wreg      void 
  6933 ;; Registers used:
  6934 ;;		status,2
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6944 ;;Total ram usage:        0 bytes
  6945 ;; Hardware stack levels used:    1
  6946 ;; Hardware stack levels required when called:    6
  6947 ;; This function calls:
  6948 ;;		Nothing
  6949 ;; This function is called by:
  6950 ;;		_main
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  6954                           	line	34
  6955                           global __ptext14
  6956                           __ptext14:	;psect for function _Esp8266SetAccessPointMode
  6957  12C9                     psect	text14
  6958                           	file	"ESP8266.c"
  6959                           	line	34
  6960                           	global	__size_of_Esp8266SetAccessPointMode
  6961                           	__size_of_Esp8266SetAccessPointMode	equ	__end_of_Esp8266SetAccessPointMode-_Esp8266SetA
                                 ccessPointMode
  6962  0004                     	
  6963                           _Esp8266SetAccessPointMode:	
  6964  12C9                     ;incstack = 0
  6965                           	opt	stack 9
  6966                           ; Regs used in _Esp8266SetAccessPointMode: [status,2]
  6967                           	line	36
  6968                           	
  6969                           l6214:	
  6970  12C9                     ;ESP8266.c: 36:     gEsp8266State = eSettingUpCommand;
  6971                           	movlb 2	; select bank2
  6972  12C9  0022               	clrf	(_gEsp8266State)^0100h
  6973  12CA  01EE               	line	37
  6974                           ;ESP8266.c: 37:     gESPCommand = eSettingAPMode;
  6975                           	clrf	(_gESPCommand)^0100h
  6976  12CB  01ED               	line	38
  6977                           	
  6978                           l682:	
  6979  12CC                     	return
  6980  12CC  0008               	opt stack 0
  6981                           GLOBAL	__end_of_Esp8266SetAccessPointMode
  6982                           	__end_of_Esp8266SetAccessPointMode:
  6983  12CD                     	signat	_Esp8266SetAccessPointMode,89
  6984                           	global	_Esp8266OpenSocket
  6985                           
  6986 ;; *************** function _Esp8266OpenSocket *****************
  6987 ;; Defined at:
  6988 ;;		line 44 in file "ESP8266.c"
  6989 ;; Parameters:    Size  Location     Type
  6990 ;;		None
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;		None
  6993 ;; Return value:  Size  Location     Type
  6994 ;;                  1    wreg      void 
  6995 ;; Registers used:
  6996 ;;		wreg, status,2
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7004 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7005 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7006 ;;Total ram usage:        1 bytes
  7007 ;; Hardware stack levels used:    1
  7008 ;; Hardware stack levels required when called:    6
  7009 ;; This function calls:
  7010 ;;		Nothing
  7011 ;; This function is called by:
  7012 ;;		_main
  7013 ;; This function uses a non-reentrant model
  7014 ;;
  7015                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  7016                           	line	44
  7017                           global __ptext15
  7018                           __ptext15:	;psect for function _Esp8266OpenSocket
  7019  1303                     psect	text15
  7020                           	file	"ESP8266.c"
  7021                           	line	44
  7022                           	global	__size_of_Esp8266OpenSocket
  7023                           	__size_of_Esp8266OpenSocket	equ	__end_of_Esp8266OpenSocket-_Esp8266OpenSocket
  7024  0009                     	
  7025                           _Esp8266OpenSocket:	
  7026  1303                     ;incstack = 0
  7027                           	opt	stack 9
  7028                           ; Regs used in _Esp8266OpenSocket: [wreg+status,2]
  7029                           	line	46
  7030                           	
  7031                           l6210:	
  7032  1303                     ;ESP8266.c: 46:     gEsp8266State = eSettingUpCommand;
  7033                           	movlb 2	; select bank2
  7034  1303  0022               	clrf	(_gEsp8266State)^0100h
  7035  1304  01EE               	line	47
  7036                           	
  7037                           l6212:	
  7038  1305                     ;ESP8266.c: 47:     gESPCommand = eOpenUDPSocket;
  7039                           	movlw	low(04h)
  7040  1305  3004               	movlb 0	; select bank0
  7041  1306  0020               	movwf	(??_Esp8266OpenSocket+0)+0
  7042  1307  00B0               	movf	(??_Esp8266OpenSocket+0)+0,w
  7043  1308  0830               	movlb 2	; select bank2
  7044  1309  0022               	movwf	(_gESPCommand)^0100h
  7045  130A  00ED               	line	48
  7046                           	
  7047                           l688:	
  7048  130B                     	return
  7049  130B  0008               	opt stack 0
  7050                           GLOBAL	__end_of_Esp8266OpenSocket
  7051                           	__end_of_Esp8266OpenSocket:
  7052  130C                     	signat	_Esp8266OpenSocket,89
  7053                           	global	_Esp8266Entrypoint
  7054                           
  7055 ;; *************** function _Esp8266Entrypoint *****************
  7056 ;; Defined at:
  7057 ;;		line 92 in file "ESP8266.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;		None
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;  wEspBuffer     70    0[BANK9 ] unsigned char [70]
  7062 ;;  wReturnNumbe    4   70[BANK9 ] unsigned char [4]
  7063 ;;  wEusartNbByt    1   75[BANK9 ] unsigned char 
  7064 ;;  wCommandAnsw    1   74[BANK9 ] PTR unsigned char 
  7065 ;;		 -> Esp8266Entrypoint@wEspBuffer(70), 
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  1    wreg      void 
  7068 ;; Registers used:
  7069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0      76       0       
       0       0
  7077 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7078 ;;      Totals:         0       2       0       0       0       0       0       0       0       0      76       0       
       0       0
  7079 ;;Total ram usage:       78 bytes
  7080 ;; Hardware stack levels used:    1
  7081 ;; Hardware stack levels required when called:   11
  7082 ;; This function calls:
  7083 ;;		_Esp8266OpenSocketCommand
  7084 ;;		_Esp8266SetNetworkParameters
  7085 ;;		_EusartGetNbByteReceived
  7086 ;;		_EusartGetRxBuffer
  7087 ;;		_Send_UART_Data
  7088 ;;		_lcdWriteAllText
  7089 ;;		_lcdWriteText
  7090 ;;		_memcmp
  7091 ;;		_moveToNextChar
  7092 ;;		_uint8_tToa
  7093 ;; This function is called by:
  7094 ;;		_main
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  7098                           	line	92
  7099                           global __ptext16
  7100                           __ptext16:	;psect for function _Esp8266Entrypoint
  7101  0322                     psect	text16
  7102                           	file	"ESP8266.c"
  7103                           	line	92
  7104                           	global	__size_of_Esp8266Entrypoint
  7105                           	__size_of_Esp8266Entrypoint	equ	__end_of_Esp8266Entrypoint-_Esp8266Entrypoint
  7106  01C6                     	
  7107                           _Esp8266Entrypoint:	
  7108  0322                     ;incstack = 0
  7109                           	opt	stack 4
  7110                           ; Regs used in _Esp8266Entrypoint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7111                           	line	102
  7112                           	
  7113                           l5970:	
  7114  0322                     ;ESP8266.c: 94:     static uint8_t prevEusartNbByteReceived;;ESP8266.c: 95:     static u
                                 int8_t wCounter;;ESP8266.c: 96:     static uint8_t wCommandsize;;ESP8266.c: 97:     uint
                                 8_t wEspBuffer[70];;ESP8266.c: 98:     uint8_t wEusartNbByteReceived;;ESP8266.c: 99:    
                                  char wReturnNumber[4];;ESP8266.c: 100:     char* wCommandAnswer;;ESP8266.c: 102:     sw
                                 itch(gEsp8266State)
  7115                           	goto	l6054
  7116  0322  2CCC               	line	104
  7117                           ;ESP8266.c: 103:     {;ESP8266.c: 104:         case eSettingUpCommand:
  7118                           	
  7119                           l709:	
  7120  0323                     	line	105
  7121                           ;ESP8266.c: 105:             switch(gESPCommand)
  7122                           	goto	l5988
  7123  0323  2B8B               	line	107
  7124                           ;ESP8266.c: 106:             {;ESP8266.c: 107:                 case eSettingAPMode:
  7125                           	
  7126                           l711:	
  7127  0324                     	line	108
  7128                           	
  7129                           l5972:	
  7130  0324                     ;ESP8266.c: 108:                     wCommandsize = sizeof("AT+CWMODE=2\r\n");
  7131                           	movlw	low(0Eh)
  7132  0324  300E               	movlb 0	; select bank0
  7133  0325  0020               	movwf	(??_Esp8266Entrypoint+0)+0
  7134  0326  00CC               	movf	(??_Esp8266Entrypoint+0)+0,w
  7135  0327  084C               	movlb 2	; select bank2
  7136  0328  0022               	movwf	(Esp8266Entrypoint@wCommandsize)^0100h
  7137  0329  00EB               	line	109
  7138                           	
  7139                           l5974:	
  7140  032A                     ;ESP8266.c: 109:                     lcdWriteAllText("AP MODE:");
  7141                           	movlw	low(((STR_13)|8000h))
  7142  032A  306D               	movlb 0	; select bank0
  7143  032B  0020               	movwf	(lcdWriteAllText@iText)
  7144  032C  00BD               	movlw	high(((STR_13)|8000h))
  7145  032D  3098               	movwf	((lcdWriteAllText@iText))+1
  7146  032E  00BE               	fcall	_lcdWriteAllText
  7147  032F  3188  2042  3183   	line	110
  7148                           	
  7149                           l5976:	
  7150  0332                     ;ESP8266.c: 110:                     Send_UART_Data((uint8_t*)"AT+CWMODE=2\r\n",wCommand
                                 size);
  7151                           	movlw	low(((STR_14)|8000h))
  7152  0332  3023               	movlb 0	; select bank0
  7153  0333  0020               	movwf	(Send_UART_Data@iData)
  7154  0334  00BC               	movlw	high(((STR_14)|8000h))
  7155  0335  3098               	movwf	((Send_UART_Data@iData))+1
  7156  0336  00BD               	movlb 2	; select bank2
  7157  0337  0022               	movf	(Esp8266Entrypoint@wCommandsize)^0100h,w
  7158  0338  086B               	movlb 0	; select bank0
  7159  0339  0020               	movwf	(??_Esp8266Entrypoint+0)+0
  7160  033A  00CC               	movf	(??_Esp8266Entrypoint+0)+0,w
  7161  033B  084C               	movwf	(Send_UART_Data@iData_Length)
  7162  033C  00BE               	fcall	_Send_UART_Data
  7163  033D  3193  23E5  3183   	line	111
  7164                           ;ESP8266.c: 111:                     break;
  7165                           	goto	l5990
  7166  0340  2B9F               	line	112
  7167                           ;ESP8266.c: 112:                 case eSettingWiFiMode:
  7168                           	
  7169                           l713:	
  7170  0341                     	line	113
  7171                           	
  7172                           l5978:	
  7173  0341                     ;ESP8266.c: 113:                     wCommandsize = Esp8266SetNetworkParameters("Meccos"
                                 ,"12345678",5,eBroadcastSSID);
  7174                           	movlw	low(((STR_15)|8000h))
  7175  0341  3087               	movlb 1	; select bank1
  7176  0342  0021               	movwf	(Esp8266SetNetworkParameters@iWifiNetworkName)^080h
  7177  0343  00A0               	movlw	high(((STR_15)|8000h))
  7178  0344  3098               	movwf	((Esp8266SetNetworkParameters@iWifiNetworkName)^080h)+1
  7179  0345  00A1               	movlw	low(((STR_16)|8000h))
  7180  0346  3064               	movwf	(Esp8266SetNetworkParameters@iWifiPassword)^080h
  7181  0347  00A2               	movlw	high(((STR_16)|8000h))
  7182  0348  3098               	movwf	((Esp8266SetNetworkParameters@iWifiPassword)^080h)+1
  7183  0349  00A3               	movlw	low(05h)
  7184  034A  3005               	movlb 0	; select bank0
  7185  034B  0020               	movwf	(??_Esp8266Entrypoint+0)+0
  7186  034C  00CC               	movf	(??_Esp8266Entrypoint+0)+0,w
  7187  034D  084C               	movlb 1	; select bank1
  7188  034E  0021               	movwf	(Esp8266SetNetworkParameters@iChannel)^080h
  7189  034F  00A4               	clrf	(Esp8266SetNetworkParameters@iHidden)^080h
  7190  0350  01A5               	incf	(Esp8266SetNetworkParameters@iHidden)^080h,f
  7191  0351  0AA5               	fcall	_Esp8266SetNetworkParameters
  7192  0352  3186  2624  3183   	movlb 1	; select bank1
  7193  0355  0021               	movf	(0+(?_Esp8266SetNetworkParameters))^080h,w
  7194  0356  0820               	movlb 0	; select bank0
  7195  0357  0020               	movwf	(??_Esp8266Entrypoint+1)+0
  7196  0358  00CD               	movf	(??_Esp8266Entrypoint+1)+0,w
  7197  0359  084D               	movlb 2	; select bank2
  7198  035A  0022               	movwf	(Esp8266Entrypoint@wCommandsize)^0100h
  7199  035B  00EB               	line	114
  7200                           	
  7201                           l5980:	
  7202  035C                     ;ESP8266.c: 114:                     lcdWriteAllText("WIFI:");
  7203                           	movlw	low(((STR_17)|8000h))
  7204  035C  308E               	movlb 0	; select bank0
  7205  035D  0020               	movwf	(lcdWriteAllText@iText)
  7206  035E  00BD               	movlw	high(((STR_17)|8000h))
  7207  035F  3098               	movwf	((lcdWriteAllText@iText))+1
  7208  0360  00BE               	fcall	_lcdWriteAllText
  7209  0361  3188  2042  3183   	line	115
  7210                           ;ESP8266.c: 115:                     break;
  7211                           	goto	l5990
  7212  0364  2B9F               	line	116
  7213                           ;ESP8266.c: 116:                 case eSendData:
  7214                           	
  7215                           l714:	
  7216  0365                     	line	117
  7217                           ;ESP8266.c: 117:                     break;
  7218                           	goto	l5990
  7219  0365  2B9F               	line	118
  7220                           ;ESP8266.c: 118:                 case eOpenUDPSocket:
  7221                           	
  7222                           l715:	
  7223  0366                     	line	119
  7224                           	
  7225                           l5982:	
  7226  0366                     ;ESP8266.c: 119:                     wCommandsize = Esp8266OpenSocketCommand("UDP","192.
                                 168.4.255",3386);
  7227                           	movlw	low(((STR_18)|8000h))
  7228  0366  30A6               	movlb 1	; select bank1
  7229  0367  0021               	movwf	(Esp8266OpenSocketCommand@iType)^080h
  7230  0368  00A0               	movlw	high(((STR_18)|8000h))
  7231  0369  3098               	movwf	((Esp8266OpenSocketCommand@iType)^080h)+1
  7232  036A  00A1               	movlw	low(((STR_19)|8000h))
  7233  036B  303F               	movwf	(Esp8266OpenSocketCommand@iDestination)^080h
  7234  036C  00A2               	movlw	high(((STR_19)|8000h))
  7235  036D  3098               	movwf	((Esp8266OpenSocketCommand@iDestination)^080h)+1
  7236  036E  00A3               	movlw	03Ah
  7237  036F  303A               	movwf	(Esp8266OpenSocketCommand@DestinationPort)^080h
  7238  0370  00A4               	movlw	0Dh
  7239  0371  300D               	movwf	((Esp8266OpenSocketCommand@DestinationPort)^080h)+1
  7240  0372  00A5               	fcall	_Esp8266OpenSocketCommand
  7241  0373  3187  275E  3183   	movlb 1	; select bank1
  7242  0376  0021               	movf	(0+(?_Esp8266OpenSocketCommand))^080h,w
  7243  0377  0820               	movlb 0	; select bank0
  7244  0378  0020               	movwf	(??_Esp8266Entrypoint+0)+0
  7245  0379  00CC               	movf	(??_Esp8266Entrypoint+0)+0,w
  7246  037A  084C               	movlb 2	; select bank2
  7247  037B  0022               	movwf	(Esp8266Entrypoint@wCommandsize)^0100h
  7248  037C  00EB               	line	120
  7249                           	
  7250                           l5984:	
  7251  037D                     ;ESP8266.c: 120:                     lcdWriteAllText("SOCKET:");
  7252                           	movlw	low(((STR_20)|8000h))
  7253  037D  307F               	movlb 0	; select bank0
  7254  037E  0020               	movwf	(lcdWriteAllText@iText)
  7255  037F  00BD               	movlw	high(((STR_20)|8000h))
  7256  0380  3098               	movwf	((lcdWriteAllText@iText))+1
  7257  0381  00BE               	fcall	_lcdWriteAllText
  7258  0382  3188  2042  3183   	line	121
  7259                           ;ESP8266.c: 121:                     break;
  7260                           	goto	l5990
  7261  0385  2B9F               	line	122
  7262                           ;ESP8266.c: 122:                 case eNothing:
  7263                           	
  7264                           l716:	
  7265  0386                     	line	123
  7266                           ;ESP8266.c: 123:                 default:
  7267                           	
  7268                           l717:	
  7269  0386                     	line	124
  7270                           ;ESP8266.c: 124:                     gEsp8266State = eESPIdle;
  7271                           	movlb 2	; select bank2
  7272  0386  0022               	clrf	(_gEsp8266State)^0100h
  7273  0387  01EE               	incf	(_gEsp8266State)^0100h,f
  7274  0388  0AEE               	line	125
  7275                           ;ESP8266.c: 125:                     break;
  7276                           	goto	l5990
  7277  0389  2B9F               	line	126
  7278                           	
  7279                           l5986:	
  7280  038A                     ;ESP8266.c: 126:             }
  7281                           	goto	l5990
  7282  038A  2B9F               	
  7283                           l710:	
  7284  038B                     	
  7285                           l5988:	
  7286  038B                     	movlb 2	; select bank2
  7287  038B  0022               	movf	(_gESPCommand)^0100h,w
  7288  038C  086D               	movlb 0	; select bank0
  7289  038D  0020               	movwf	(??_Esp8266Entrypoint+0)+0
  7290  038E  00CC               	clrf	(??_Esp8266Entrypoint+0)+0+1
  7291  038F  01CD               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  7292                           ; Switch size 1, requested type "space"
  7293                           ; Number of cases is 1, Range of values is 0 to 0
  7294                           ; switch strategies available:
  7295                           ; Name         Instructions Cycles
  7296                           ; simple_byte            4     3 (average)
  7297                           ; direct_byte            8     6 (fixed)
  7298                           ; jumptable            260     6 (fixed)
  7299                           ;	Chosen strategy is simple_byte
  7300                           
  7301                           	movf 1+(??_Esp8266Entrypoint+0)+0,w
  7302  0390  084D               	opt asmopt_push
  7303                           	opt asmopt_off
  7304                           	xorlw	0^0	; case 0
  7305  0391  3A00               	skipnz
  7306  0392  1903               	goto	l6854
  7307  0393  2B95               	goto	l717
  7308  0394  2B86               	opt asmopt_pop
  7309                           	
  7310                           l6854:	
  7311  0395                     ; Switch size 1, requested type "space"
  7312                           ; Number of cases is 5, Range of values is 0 to 4
  7313                           ; switch strategies available:
  7314                           ; Name         Instructions Cycles
  7315                           ; direct_byte           16     6 (fixed)
  7316                           ; simple_byte           16     9 (average)
  7317                           ; jumptable            260     6 (fixed)
  7318                           ;	Chosen strategy is direct_byte
  7319                           
  7320                           	movf 0+(??_Esp8266Entrypoint+0)+0,w
  7321  0395  084C               	movwf fsr0l
  7322  0396  0084               	movlw	5
  7323  0397  3005               	subwf	fsr0l,w
  7324  0398  0204               skipnc
  7325  0399  1803               goto l717
  7326  039A  2B86               movlp high(S6856)
  7327  039B  3190               	lslf fsr0l,w
  7328  039C  3504               	addlw low(S6856)
  7329  039D  3E0E               	movwf pc
  7330  039E  0082               psect	swtext1,local,class=CONST,delta=2
  7331                           global __pswtext1
  7332                           __pswtext1:
  7333  100E                     S6856:
  7334  100E                     	ljmp	l5972
  7335  100E  3183  2B24         	ljmp	l5978
  7336  1010  3183  2B41         	ljmp	l5990
  7337  1012  3183  2B9F         	ljmp	l717
  7338  1014  3183  2B86         	ljmp	l5982
  7339  1016  3183  2B66         psect	text16
  7340                           
  7341                           	
  7342                           l712:	
  7343  039F                     	line	127
  7344                           	
  7345                           l5990:	
  7346  039F                     ;ESP8266.c: 127:             if(wCommandsize !=0 )
  7347                           	movlb 2	; select bank2
  7348  039F  0022               	movf	((Esp8266Entrypoint@wCommandsize)^0100h),w
  7349  03A0  086B               	btfsc	status,2
  7350  03A1  1903               	goto	u4431
  7351  03A2  2BA4               	goto	u4430
  7352  03A3  2BA5               u4431:
  7353  03A4                     	goto	l718
  7354  03A4  2BAC               u4430:
  7355  03A5                     	line	129
  7356                           	
  7357                           l5992:	
  7358  03A5                     ;ESP8266.c: 128:             {;ESP8266.c: 129:                 gEsp8266State = eESPComma
                                 ndSent;
  7359                           	movlw	low(03h)
  7360  03A5  3003               	movlb 0	; select bank0
  7361  03A6  0020               	movwf	(??_Esp8266Entrypoint+0)+0
  7362  03A7  00CC               	movf	(??_Esp8266Entrypoint+0)+0,w
  7363  03A8  084C               	movlb 2	; select bank2
  7364  03A9  0022               	movwf	(_gEsp8266State)^0100h
  7365  03AA  00EE               	line	130
  7366                           ;ESP8266.c: 130:             }
  7367                           	goto	l743
  7368  03AB  2CE7               	line	131
  7369                           ;ESP8266.c: 131:             else
  7370                           	
  7371                           l718:	
  7372  03AC                     	line	133
  7373                           ;ESP8266.c: 132:             {;ESP8266.c: 133:                 gEsp8266State = eESPIdle;
                                 
  7374                           	clrf	(_gEsp8266State)^0100h
  7375  03AC  01EE               	incf	(_gEsp8266State)^0100h,f
  7376  03AD  0AEE               	goto	l743
  7377  03AE  2CE7               	line	134
  7378                           ;ESP8266.c: 134:             }
  7379                           	
  7380                           l719:	
  7381  03AF                     	line	135
  7382                           ;ESP8266.c: 135:             break;
  7383                           	goto	l743
  7384  03AF  2CE7               	line	136
  7385                           ;ESP8266.c: 136:         case eESPCommandSent:
  7386                           	
  7387                           l721:	
  7388  03B0                     	line	137
  7389                           	
  7390                           l5994:	
  7391  03B0                     ;ESP8266.c: 137:             wCounter=0;
  7392                           	movlb 1	; select bank1
  7393  03B0  0021               	clrf	(Esp8266Entrypoint@wCounter)^080h
  7394  03B1  01DE               	line	138
  7395                           	
  7396                           l5996:	
  7397  03B2                     ;ESP8266.c: 138:             gEsp8266State = eESPWaitConfirmation;
  7398                           	movlw	low(04h)
  7399  03B2  3004               	movlb 0	; select bank0
  7400  03B3  0020               	movwf	(??_Esp8266Entrypoint+0)+0
  7401  03B4  00CC               	movf	(??_Esp8266Entrypoint+0)+0,w
  7402  03B5  084C               	movlb 2	; select bank2
  7403  03B6  0022               	movwf	(_gEsp8266State)^0100h
  7404  03B7  00EE               	line	139
  7405                           ;ESP8266.c: 139:             break;
  7406                           	goto	l743
  7407  03B8  2CE7               	line	140
  7408                           ;ESP8266.c: 140:         case eESPWaitConfirmation:
  7409                           	
  7410                           l722:	
  7411  03B9                     	line	141
  7412                           	
  7413                           l5998:	
  7414  03B9                     ;ESP8266.c: 141:             if(prevEusartNbByteReceived == EusartGetNbByteReceived() &&
                                  prevEusartNbByteReceived != 0 )
  7415                           	fcall	_EusartGetNbByteReceived
  7416  03B9  3192  22C5  3183   	movlb 2	; select bank2
  7417  03BC  0022               	xorwf	(Esp8266Entrypoint@prevEusartNbByteReceived)^0100h,w
  7418  03BD  066C               	skipz
  7419  03BE  1D03               	goto	u4441
  7420  03BF  2BC1               	goto	u4440
  7421  03C0  2BC2               u4441:
  7422  03C1                     	goto	l6006
  7423  03C1  2BDB               u4440:
  7424  03C2                     	
  7425                           l6000:	
  7426  03C2                     	movf	((Esp8266Entrypoint@prevEusartNbByteReceived)^0100h),w
  7427  03C2  086C               	btfsc	status,2
  7428  03C3  1903               	goto	u4451
  7429  03C4  2BC6               	goto	u4450
  7430  03C5  2BC7               u4451:
  7431  03C6                     	goto	l6006
  7432  03C6  2BDB               u4450:
  7433  03C7                     	line	143
  7434                           	
  7435                           l6002:	
  7436  03C7                     ;ESP8266.c: 142:             {;ESP8266.c: 143:                 wCounter++;
  7437                           	movlw	low(01h)
  7438  03C7  3001               	movlb 0	; select bank0
  7439  03C8  0020               	movwf	(??_Esp8266Entrypoint+0)+0
  7440  03C9  00CC               	movf	(??_Esp8266Entrypoint+0)+0,w
  7441  03CA  084C               	movlb 1	; select bank1
  7442  03CB  0021               	addwf	(Esp8266Entrypoint@wCounter)^080h,f
  7443  03CC  07DE               	line	144
  7444                           ;ESP8266.c: 144:                 if(wCounter == 10)
  7445                           		movlw	10
  7446  03CD  300A               	xorwf	((Esp8266Entrypoint@wCounter)^080h),w
  7447  03CE  065E               	btfss	status,2
  7448  03CF  1D03               	goto	u4461
  7449  03D0  2BD2               	goto	u4460
  7450  03D1  2BD3               u4461:
  7451  03D2                     	goto	l743
  7452  03D2  2CE7               u4460:
  7453  03D3                     	line	146
  7454                           	
  7455                           l6004:	
  7456  03D3                     ;ESP8266.c: 145:                 {;ESP8266.c: 146:                     gEsp8266State = e
                                 ESPCommandReceived;
  7457                           	movlw	low(05h)
  7458  03D3  3005               	movlb 0	; select bank0
  7459  03D4  0020               	movwf	(??_Esp8266Entrypoint+0)+0
  7460  03D5  00CC               	movf	(??_Esp8266Entrypoint+0)+0,w
  7461  03D6  084C               	movlb 2	; select bank2
  7462  03D7  0022               	movwf	(_gEsp8266State)^0100h
  7463  03D8  00EE               	goto	l743
  7464  03D9  2CE7               	line	147
  7465                           ;ESP8266.c: 147:                 }
  7466                           	
  7467                           l724:	
  7468  03DA                     	line	148
  7469                           ;ESP8266.c: 148:             }
  7470                           	goto	l743
  7471  03DA  2CE7               	line	149
  7472                           ;ESP8266.c: 149:             else
  7473                           	
  7474                           l723:	
  7475  03DB                     	line	151
  7476                           	
  7477                           l6006:	
  7478  03DB                     ;ESP8266.c: 150:             {;ESP8266.c: 151:               prevEusartNbByteReceived = 
                                 EusartGetNbByteReceived();
  7479                           	fcall	_EusartGetNbByteReceived
  7480  03DB  3192  22C5  3183   	movlb 0	; select bank0
  7481  03DE  0020               	movwf	(??_Esp8266Entrypoint+0)+0
  7482  03DF  00CC               	movf	(??_Esp8266Entrypoint+0)+0,w
  7483  03E0  084C               	movlb 2	; select bank2
  7484  03E1  0022               	movwf	(Esp8266Entrypoint@prevEusartNbByteReceived)^0100h
  7485  03E2  00EC               	line	152
  7486                           	
  7487                           l6008:	
  7488  03E3                     ;ESP8266.c: 152:               wCounter = 0;
  7489                           	movlb 1	; select bank1
  7490  03E3  0021               	clrf	(Esp8266Entrypoint@wCounter)^080h
  7491  03E4  01DE               	goto	l743
  7492  03E5  2CE7               	line	153
  7493                           ;ESP8266.c: 153:             }
  7494                           	
  7495                           l725:	
  7496  03E6                     	line	154
  7497                           ;ESP8266.c: 154:             break;
  7498                           	goto	l743
  7499  03E6  2CE7               	line	155
  7500                           ;ESP8266.c: 155:         case eESPCommandReceived:
  7501                           	
  7502                           l726:	
  7503  03E7                     	line	156
  7504                           	
  7505                           l6010:	
  7506  03E7                     ;ESP8266.c: 156:             if(EusartGetNbByteReceived())
  7507                           	fcall	_EusartGetNbByteReceived
  7508  03E7  3192  22C5  3183   	xorlw	low(0)&0ffh
  7509  03EA  3A00               	skipnz
  7510  03EB  1903               	goto	u4471
  7511  03EC  2BEE               	goto	u4470
  7512  03ED  2BEF               u4471:
  7513  03EE                     	goto	l743
  7514  03EE  2CE7               u4470:
  7515  03EF                     	line	158
  7516                           	
  7517                           l6012:	
  7518  03EF                     ;ESP8266.c: 157:             {;ESP8266.c: 158:                 EusartGetRxBuffer(wEspBuf
                                 fer,sizeof(wEspBuffer)-1,&wEusartNbByteReceived);
  7519                           	movlw	low(045h)
  7520  03EF  3045               	movlb 0	; select bank0
  7521  03F0  0020               	movwf	(??_Esp8266Entrypoint+0)+0
  7522  03F1  00CC               	movf	(??_Esp8266Entrypoint+0)+0,w
  7523  03F2  084C               	movwf	(EusartGetRxBuffer@iDataSize)
  7524  03F3  00BC               	movlw	(low(Esp8266Entrypoint@wEusartNbByteReceived|((0x4)<<8)))&0ffh
  7525  03F4  30EB               	movwf	(??_Esp8266Entrypoint+1)+0
  7526  03F5  00CD               	movf	(??_Esp8266Entrypoint+1)+0,w
  7527  03F6  084D               	movwf	(EusartGetRxBuffer@oNbOfByteReceived)
  7528  03F7  00BD               	movlw	(low(Esp8266Entrypoint@wEspBuffer|((0x4)<<8)))&0ffh
  7529  03F8  30A0               	fcall	_EusartGetRxBuffer
  7530  03F9  3188  2000  3183   	line	159
  7531                           	
  7532                           l6014:	
  7533  03FC                     ;ESP8266.c: 159:                 wEspBuffer[wEusartNbByteReceived] = 0;
  7534                           	movlb 9	; select bank9
  7535  03FC  0029               	movf	(Esp8266Entrypoint@wEusartNbByteReceived)^0480h,w
  7536  03FD  086B               	addlw	low(Esp8266Entrypoint@wEspBuffer|((0x4)<<8))&0ffh
  7537  03FE  3EA0               	movwf	fsr1l
  7538  03FF  0086               	movlw 4	; select bank9/10
  7539  0400  3004               	movwf fsr1h	
  7540  0401  0087               	
  7541                           	clrf	indf1
  7542  0402  0181               	line	160
  7543                           	
  7544                           l6016:	
  7545  0403                     ;ESP8266.c: 160:                 gEsp8266State = eSettingUpCommand;
  7546                           	movlb 2	; select bank2
  7547  0403  0022               	clrf	(_gEsp8266State)^0100h
  7548  0404  01EE               	line	162
  7549                           	
  7550                           l6018:	
  7551  0405                     ;ESP8266.c: 162:                 wCommandAnswer = moveToNextChar((char*)wEspBuffer+wComm
                                 andsize,wEusartNbByteReceived-wCommandsize);
  7552                           	decf	(Esp8266Entrypoint@wCommandsize)^0100h,w
  7553  0405  036B               	xorlw	0ffh
  7554  0406  3AFF               	movlb 9	; select bank9
  7555  0407  0029               	addwf	(Esp8266Entrypoint@wEusartNbByteReceived)^0480h,w
  7556  0408  076B               	movlb 0	; select bank0
  7557  0409  0020               	movwf	(??_Esp8266Entrypoint+0)+0
  7558  040A  00CC               	movf	(??_Esp8266Entrypoint+0)+0,w
  7559  040B  084C               	movwf	(moveToNextChar@iTextSize)
  7560  040C  00B0               	movlb 2	; select bank2
  7561  040D  0022               	movf	(Esp8266Entrypoint@wCommandsize)^0100h,w
  7562  040E  086B               	addlw	low(Esp8266Entrypoint@wEspBuffer|((0x4)<<8))&0ffh
  7563  040F  3EA0               	fcall	_moveToNextChar
  7564  0410  3196  265B  3183   	movlb 0	; select bank0
  7565  0413  0020               	movwf	(??_Esp8266Entrypoint+1)+0
  7566  0414  00CD               	movf	(??_Esp8266Entrypoint+1)+0,w
  7567  0415  084D               	movlb 9	; select bank9
  7568  0416  0029               	movwf	(Esp8266Entrypoint@wCommandAnswer)^0480h
  7569  0417  00EA               	line	163
  7570                           ;ESP8266.c: 163:                 switch(gESPCommand)
  7571                           	goto	l6040
  7572  0418  2C83               	line	165
  7573                           ;ESP8266.c: 164:                 {;ESP8266.c: 165:                     case eSettingAPMo
                                 de:
  7574                           	
  7575                           l729:	
  7576  0419                     	goto	l6020
  7577  0419  2C1A               	line	166
  7578                           ;ESP8266.c: 166:                     case eSettingWiFiMode:
  7579                           	
  7580                           l730:	
  7581  041A                     	line	167
  7582                           	
  7583                           l6020:	
  7584  041A                     ;ESP8266.c: 167:                         if( memcmp(wCommandAnswer,"OK",sizeof("OK")-1) 
                                 == 0)
  7585                           	movlw	low(((STR_21)|8000h))
  7586  041A  30AD               	movlb 0	; select bank0
  7587  041B  0020               	movwf	(memcmp@vr)
  7588  041C  00B0               	movlw	high(((STR_21)|8000h))
  7589  041D  3098               	movwf	((memcmp@vr))+1
  7590  041E  00B1               	movlw	02h
  7591  041F  3002               	movwf	(memcmp@n)
  7592  0420  00B2               	movlw	0
  7593  0421  3000               	movwf	((memcmp@n))+1
  7594  0422  00B3               	movlb 9	; select bank9
  7595  0423  0029               	movf	(Esp8266Entrypoint@wCommandAnswer)^0480h,w
  7596  0424  086A               	fcall	_memcmp
  7597  0425  3197  27AE  3183   	movlb 0	; select bank0
  7598  0428  0020               	movf	((0+(?_memcmp))),w
  7599  0429  0830               iorwf	((1+(?_memcmp))),w
  7600  042A  0431               	btfss	status,2
  7601  042B  1D03               	goto	u4481
  7602  042C  2C2E               	goto	u4480
  7603  042D  2C2F               u4481:
  7604  042E                     	goto	l6042
  7605  042E  2C97               u4480:
  7606  042F                     	line	169
  7607                           	
  7608                           l6022:	
  7609  042F                     ;ESP8266.c: 168:                         {;ESP8266.c: 169:                             l
                                 cdWriteText("OK!");
  7610                           	movlw	low(((STR_22)|8000h))
  7611  042F  309E               	movwf	(lcdWriteText@iText)
  7612  0430  00C2               	movlw	high(((STR_22)|8000h))
  7613  0431  3098               	movwf	((lcdWriteText@iText))+1
  7614  0432  00C3               	fcall	_lcdWriteText
  7615  0433  3194  2436  3183   	line	170
  7616                           	
  7617                           l6024:	
  7618  0436                     ;ESP8266.c: 170:                             gEsp8266State = eESPIdle;
  7619                           	movlb 2	; select bank2
  7620  0436  0022               	clrf	(_gEsp8266State)^0100h
  7621  0437  01EE               	incf	(_gEsp8266State)^0100h,f
  7622  0438  0AEE               	line	171
  7623                           	
  7624                           l6026:	
  7625  0439                     ;ESP8266.c: 171:                             gESPCommand = eNothing;
  7626                           	movlw	low(03h)
  7627  0439  3003               	movlb 0	; select bank0
  7628  043A  0020               	movwf	(??_Esp8266Entrypoint+0)+0
  7629  043B  00CC               	movf	(??_Esp8266Entrypoint+0)+0,w
  7630  043C  084C               	movlb 2	; select bank2
  7631  043D  0022               	movwf	(_gESPCommand)^0100h
  7632  043E  00ED               	goto	l6042
  7633  043F  2C97               	line	172
  7634                           ;ESP8266.c: 172:                         }
  7635                           	
  7636                           l731:	
  7637  0440                     	line	173
  7638                           ;ESP8266.c: 173:                         break;
  7639                           	goto	l6042
  7640  0440  2C97               	line	174
  7641                           ;ESP8266.c: 174:                     case eSendData:
  7642                           	
  7643                           l733:	
  7644  0441                     	line	175
  7645                           ;ESP8266.c: 175:                         break;
  7646                           	goto	l6042
  7647  0441  2C97               	line	176
  7648                           ;ESP8266.c: 176:                     case eOpenUDPSocket:
  7649                           	
  7650                           l734:	
  7651  0442                     	line	177
  7652                           	
  7653                           l6028:	
  7654  0442                     ;ESP8266.c: 177:                         if( memcmp(wCommandAnswer,"OK",sizeof("OK")-1) 
                                 == 0 || memcmp(wCommandAnswer,"ALREADY CONNECTED",sizeof("ALREADY CONNECTED")-1) == 0)
  7655                           	movlw	low(((STR_23)|8000h))
  7656  0442  30AD               	movlb 0	; select bank0
  7657  0443  0020               	movwf	(memcmp@vr)
  7658  0444  00B0               	movlw	high(((STR_23)|8000h))
  7659  0445  3098               	movwf	((memcmp@vr))+1
  7660  0446  00B1               	movlw	02h
  7661  0447  3002               	movwf	(memcmp@n)
  7662  0448  00B2               	movlw	0
  7663  0449  3000               	movwf	((memcmp@n))+1
  7664  044A  00B3               	movlb 9	; select bank9
  7665  044B  0029               	movf	(Esp8266Entrypoint@wCommandAnswer)^0480h,w
  7666  044C  086A               	fcall	_memcmp
  7667  044D  3197  27AE  3183   	movlb 0	; select bank0
  7668  0450  0020               	movf	((0+(?_memcmp))),w
  7669  0451  0830               iorwf	((1+(?_memcmp))),w
  7670  0452  0431               	btfsc	status,2
  7671  0453  1903               	goto	u4491
  7672  0454  2C56               	goto	u4490
  7673  0455  2C57               u4491:
  7674  0456                     	goto	l6032
  7675  0456  2C6C               u4490:
  7676  0457                     	
  7677                           l6030:	
  7678  0457                     	movlw	low(((STR_24)|8000h))
  7679  0457  3000               	movwf	(memcmp@vr)
  7680  0458  00B0               	movlw	high(((STR_24)|8000h))
  7681  0459  3098               	movwf	((memcmp@vr))+1
  7682  045A  00B1               	movlw	011h
  7683  045B  3011               	movwf	(memcmp@n)
  7684  045C  00B2               	movlw	0
  7685  045D  3000               	movwf	((memcmp@n))+1
  7686  045E  00B3               	movlb 9	; select bank9
  7687  045F  0029               	movf	(Esp8266Entrypoint@wCommandAnswer)^0480h,w
  7688  0460  086A               	fcall	_memcmp
  7689  0461  3197  27AE  3183   	movlb 0	; select bank0
  7690  0464  0020               	movf	((0+(?_memcmp))),w
  7691  0465  0830               iorwf	((1+(?_memcmp))),w
  7692  0466  0431               	btfss	status,2
  7693  0467  1D03               	goto	u4501
  7694  0468  2C6A               	goto	u4500
  7695  0469  2C6B               u4501:
  7696  046A                     	goto	l6042
  7697  046A  2C97               u4500:
  7698  046B                     	goto	l6032
  7699  046B  2C6C               	
  7700                           l737:	
  7701  046C                     	line	179
  7702                           	
  7703                           l6032:	
  7704  046C                     ;ESP8266.c: 178:                         {;ESP8266.c: 179:                             l
                                 cdWriteText("OK!");
  7705                           	movlw	low(((STR_25)|8000h))
  7706  046C  309E               	movwf	(lcdWriteText@iText)
  7707  046D  00C2               	movlw	high(((STR_25)|8000h))
  7708  046E  3098               	movwf	((lcdWriteText@iText))+1
  7709  046F  00C3               	fcall	_lcdWriteText
  7710  0470  3194  2436  3183   	line	180
  7711                           	
  7712                           l6034:	
  7713  0473                     ;ESP8266.c: 180:                             gEsp8266State = eESPIdle;
  7714                           	movlb 2	; select bank2
  7715  0473  0022               	clrf	(_gEsp8266State)^0100h
  7716  0474  01EE               	incf	(_gEsp8266State)^0100h,f
  7717  0475  0AEE               	line	181
  7718                           	
  7719                           l6036:	
  7720  0476                     ;ESP8266.c: 181:                             gESPCommand = eNothing;
  7721                           	movlw	low(03h)
  7722  0476  3003               	movlb 0	; select bank0
  7723  0477  0020               	movwf	(??_Esp8266Entrypoint+0)+0
  7724  0478  00CC               	movf	(??_Esp8266Entrypoint+0)+0,w
  7725  0479  084C               	movlb 2	; select bank2
  7726  047A  0022               	movwf	(_gESPCommand)^0100h
  7727  047B  00ED               	goto	l6042
  7728  047C  2C97               	line	182
  7729                           ;ESP8266.c: 182:                         }
  7730                           	
  7731                           l735:	
  7732  047D                     	line	183
  7733                           ;ESP8266.c: 183:                         break;
  7734                           	goto	l6042
  7735  047D  2C97               	line	184
  7736                           ;ESP8266.c: 184:                     case eNothing:
  7737                           	
  7738                           l738:	
  7739  047E                     	line	185
  7740                           ;ESP8266.c: 185:                     default:
  7741                           	
  7742                           l739:	
  7743  047E                     	line	186
  7744                           ;ESP8266.c: 186:                         gEsp8266State = eESPIdle;
  7745                           	movlb 2	; select bank2
  7746  047E  0022               	clrf	(_gEsp8266State)^0100h
  7747  047F  01EE               	incf	(_gEsp8266State)^0100h,f
  7748  0480  0AEE               	line	187
  7749                           ;ESP8266.c: 187:                         break;
  7750                           	goto	l6042
  7751  0481  2C97               	line	188
  7752                           	
  7753                           l6038:	
  7754  0482                     ;ESP8266.c: 188:                 }
  7755                           	goto	l6042
  7756  0482  2C97               	
  7757                           l728:	
  7758  0483                     	
  7759                           l6040:	
  7760  0483                     	movlb 2	; select bank2
  7761  0483  0022               	movf	(_gESPCommand)^0100h,w
  7762  0484  086D               	movlb 0	; select bank0
  7763  0485  0020               	movwf	(??_Esp8266Entrypoint+0)+0
  7764  0486  00CC               	clrf	(??_Esp8266Entrypoint+0)+0+1
  7765  0487  01CD               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  7766                           ; Switch size 1, requested type "space"
  7767                           ; Number of cases is 1, Range of values is 0 to 0
  7768                           ; switch strategies available:
  7769                           ; Name         Instructions Cycles
  7770                           ; simple_byte            4     3 (average)
  7771                           ; direct_byte            8     6 (fixed)
  7772                           ; jumptable            260     6 (fixed)
  7773                           ;	Chosen strategy is simple_byte
  7774                           
  7775                           	movf 1+(??_Esp8266Entrypoint+0)+0,w
  7776  0488  084D               	opt asmopt_push
  7777                           	opt asmopt_off
  7778                           	xorlw	0^0	; case 0
  7779  0489  3A00               	skipnz
  7780  048A  1903               	goto	l6858
  7781  048B  2C8D               	goto	l739
  7782  048C  2C7E               	opt asmopt_pop
  7783                           	
  7784                           l6858:	
  7785  048D                     ; Switch size 1, requested type "space"
  7786                           ; Number of cases is 5, Range of values is 0 to 4
  7787                           ; switch strategies available:
  7788                           ; Name         Instructions Cycles
  7789                           ; direct_byte           16     6 (fixed)
  7790                           ; simple_byte           16     9 (average)
  7791                           ; jumptable            260     6 (fixed)
  7792                           ;	Chosen strategy is direct_byte
  7793                           
  7794                           	movf 0+(??_Esp8266Entrypoint+0)+0,w
  7795  048D  084C               	movwf fsr0l
  7796  048E  0084               	movlw	5
  7797  048F  3005               	subwf	fsr0l,w
  7798  0490  0204               skipnc
  7799  0491  1803               goto l739
  7800  0492  2C7E               movlp high(S6860)
  7801  0493  3190               	lslf fsr0l,w
  7802  0494  3504               	addlw low(S6860)
  7803  0495  3E18               	movwf pc
  7804  0496  0082               psect	swtext2,local,class=CONST,delta=2
  7805                           global __pswtext2
  7806                           __pswtext2:
  7807  1018                     S6860:
  7808  1018                     	ljmp	l6020
  7809  1018  3184  2C1A         	ljmp	l6020
  7810  101A  3184  2C1A         	ljmp	l6042
  7811  101C  3184  2C97         	ljmp	l739
  7812  101E  3184  2C7E         	ljmp	l6028
  7813  1020  3184  2C42         psect	text16
  7814                           
  7815                           	
  7816                           l732:	
  7817  0497                     	line	191
  7818                           	
  7819                           l6042:	
  7820  0497                     ;ESP8266.c: 191:                 if(gEsp8266State == eSettingUpCommand)
  7821                           	movlb 2	; select bank2
  7822  0497  0022               	movf	((_gEsp8266State)^0100h),w
  7823  0498  086E               	btfss	status,2
  7824  0499  1D03               	goto	u4511
  7825  049A  2C9C               	goto	u4510
  7826  049B  2C9D               u4511:
  7827  049C                     	goto	l743
  7828  049C  2CE7               u4510:
  7829  049D                     	line	193
  7830                           	
  7831                           l6044:	
  7832  049D                     ;ESP8266.c: 192:                 {;ESP8266.c: 193:                     lcdWriteAllText(w
                                 CommandAnswer);
  7833                           	movlb 9	; select bank9
  7834  049D  0029               	movf	(Esp8266Entrypoint@wCommandAnswer)^0480h,w
  7835  049E  086A               	movlb 0	; select bank0
  7836  049F  0020               	movwf	(lcdWriteAllText@iText)
  7837  04A0  00BD               	movlw	0x4
  7838  04A1  3004               
  7839                           	movwf	(lcdWriteAllText@iText+1)
  7840  04A2  00BE               	fcall	_lcdWriteAllText
  7841  04A3  3188  2042  3183   	line	194
  7842                           	
  7843                           l6046:	
  7844  04A6                     ;ESP8266.c: 194:                     lcdWriteText(uint8_tToa(wReturnNumber,sizeof(wRetur
                                 nNumber),wEusartNbByteReceived));
  7845                           	movlw	low(04h)
  7846  04A6  3004               	movlb 0	; select bank0
  7847  04A7  0020               	movwf	(??_Esp8266Entrypoint+0)+0
  7848  04A8  00CC               	movf	(??_Esp8266Entrypoint+0)+0,w
  7849  04A9  084C               	movwf	(uint8_tToa@iSizeofText)
  7850  04AA  00B9               	movlb 9	; select bank9
  7851  04AB  0029               	movf	(Esp8266Entrypoint@wEusartNbByteReceived)^0480h,w
  7852  04AC  086B               	movlb 0	; select bank0
  7853  04AD  0020               	movwf	(??_Esp8266Entrypoint+1)+0
  7854  04AE  00CD               	movf	(??_Esp8266Entrypoint+1)+0,w
  7855  04AF  084D               	movwf	(uint8_tToa@iNumber)
  7856  04B0  00BA               	movlw	(low(Esp8266Entrypoint@wReturnNumber|((0x4)<<8)))&0ffh
  7857  04B1  30E6               	fcall	_uint8_tToa
  7858  04B2  318D  2574  3183   	movlb 0	; select bank0
  7859  04B5  0020               	movwf	(lcdWriteText@iText)
  7860  04B6  00C2               	andlw 0xff
  7861  04B7  39FF               skipz
  7862  04B8  1D03               movlw	0x4
  7863  04B9  3004               
  7864                           	movwf	(lcdWriteText@iText+1)
  7865  04BA  00C3               	fcall	_lcdWriteText
  7866  04BB  3194  2436  3183   	line	195
  7867                           	
  7868                           l6048:	
  7869  04BE                     ;ESP8266.c: 195:                     gESPCommand = eNothing;
  7870                           	movlw	low(03h)
  7871  04BE  3003               	movlb 0	; select bank0
  7872  04BF  0020               	movwf	(??_Esp8266Entrypoint+0)+0
  7873  04C0  00CC               	movf	(??_Esp8266Entrypoint+0)+0,w
  7874  04C1  084C               	movlb 2	; select bank2
  7875  04C2  0022               	movwf	(_gESPCommand)^0100h
  7876  04C3  00ED               	line	196
  7877                           	
  7878                           l6050:	
  7879  04C4                     ;ESP8266.c: 196:                     gEsp8266State = eESPIdle;
  7880                           	clrf	(_gEsp8266State)^0100h
  7881  04C4  01EE               	incf	(_gEsp8266State)^0100h,f
  7882  04C5  0AEE               	goto	l743
  7883  04C6  2CE7               	line	199
  7884                           ;ESP8266.c: 199:                 }
  7885                           	
  7886                           l740:	
  7887  04C7                     	goto	l743
  7888  04C7  2CE7               	line	202
  7889                           ;ESP8266.c: 202:             }
  7890                           	
  7891                           l727:	
  7892  04C8                     	line	204
  7893                           ;ESP8266.c: 204:             break;
  7894                           	goto	l743
  7895  04C8  2CE7               	line	206
  7896                           ;ESP8266.c: 206:         case eESPIdle:
  7897                           	
  7898                           l741:	
  7899  04C9                     	goto	l743
  7900  04C9  2CE7               	line	208
  7901                           ;ESP8266.c: 208:         default:
  7902                           	
  7903                           l742:	
  7904  04CA                     	line	209
  7905                           ;ESP8266.c: 209:             break;
  7906                           	goto	l743
  7907  04CA  2CE7               	line	210
  7908                           	
  7909                           l6052:	
  7910  04CB                     ;ESP8266.c: 210:     }
  7911                           	goto	l743
  7912  04CB  2CE7               	
  7913                           l708:	
  7914  04CC                     	
  7915                           l6054:	
  7916  04CC                     	movlb 2	; select bank2
  7917  04CC  0022               	movf	(_gEsp8266State)^0100h,w
  7918  04CD  086E               	movlb 0	; select bank0
  7919  04CE  0020               	movwf	(??_Esp8266Entrypoint+0)+0
  7920  04CF  00CC               	clrf	(??_Esp8266Entrypoint+0)+0+1
  7921  04D0  01CD               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  7922                           ; Switch size 1, requested type "space"
  7923                           ; Number of cases is 1, Range of values is 0 to 0
  7924                           ; switch strategies available:
  7925                           ; Name         Instructions Cycles
  7926                           ; simple_byte            4     3 (average)
  7927                           ; direct_byte            8     6 (fixed)
  7928                           ; jumptable            260     6 (fixed)
  7929                           ;	Chosen strategy is simple_byte
  7930                           
  7931                           	movf 1+(??_Esp8266Entrypoint+0)+0,w
  7932  04D1  084D               	opt asmopt_push
  7933                           	opt asmopt_off
  7934                           	xorlw	0^0	; case 0
  7935  04D2  3A00               	skipnz
  7936  04D3  1903               	goto	l6862
  7937  04D4  2CD6               	goto	l743
  7938  04D5  2CE7               	opt asmopt_pop
  7939                           	
  7940                           l6862:	
  7941  04D6                     ; Switch size 1, requested type "space"
  7942                           ; Number of cases is 5, Range of values is 0 to 5
  7943                           ; switch strategies available:
  7944                           ; Name         Instructions Cycles
  7945                           ; simple_byte           16     9 (average)
  7946                           ; direct_byte           18     6 (fixed)
  7947                           ; jumptable            260     6 (fixed)
  7948                           ;	Chosen strategy is simple_byte
  7949                           
  7950                           	movf 0+(??_Esp8266Entrypoint+0)+0,w
  7951  04D6  084C               	opt asmopt_push
  7952                           	opt asmopt_off
  7953                           	xorlw	0^0	; case 0
  7954  04D7  3A00               	skipnz
  7955  04D8  1903               	goto	l5988
  7956  04D9  2B8B               	xorlw	1^0	; case 1
  7957  04DA  3A01               	skipnz
  7958  04DB  1903               	goto	l743
  7959  04DC  2CE7               	xorlw	3^1	; case 3
  7960  04DD  3A02               	skipnz
  7961  04DE  1903               	goto	l5994
  7962  04DF  2BB0               	xorlw	4^3	; case 4
  7963  04E0  3A07               	skipnz
  7964  04E1  1903               	goto	l5998
  7965  04E2  2BB9               	xorlw	5^4	; case 5
  7966  04E3  3A01               	skipnz
  7967  04E4  1903               	goto	l6010
  7968  04E5  2BE7               	goto	l743
  7969  04E6  2CE7               	opt asmopt_pop
  7970                           
  7971                           	
  7972                           l720:	
  7973  04E7                     	line	211
  7974                           	
  7975                           l743:	
  7976  04E7                     	return
  7977  04E7  0008               	opt stack 0
  7978                           GLOBAL	__end_of_Esp8266Entrypoint
  7979                           	__end_of_Esp8266Entrypoint:
  7980  04E8                     	signat	_Esp8266Entrypoint,89
  7981                           	global	_uint8_tToa
  7982                           
  7983 ;; *************** function _uint8_tToa *****************
  7984 ;; Defined at:
  7985 ;;		line 32 in file "GeneralFunction.c"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;  wText           1    wreg     PTR unsigned char 
  7988 ;;		 -> Esp8266Entrypoint@wReturnNumber(4), 
  7989 ;;  iSizeofText     1   25[BANK0 ] unsigned char 
  7990 ;;  iNumber         1   26[BANK0 ] unsigned char 
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;  wText           1   33[BANK0 ] PTR unsigned char 
  7993 ;;		 -> Esp8266Entrypoint@wReturnNumber(4), 
  7994 ;;  wUnit           1   32[BANK0 ] unsigned char 
  7995 ;;  wTen            1   31[BANK0 ] unsigned char 
  7996 ;;  wHundred        1   30[BANK0 ] unsigned char 
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  1    wreg      PTR unsigned char 
  7999 ;; Registers used:
  8000 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8006 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8007 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  8008 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  8009 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0
  8010 ;;Total ram usage:        9 bytes
  8011 ;; Hardware stack levels used:    1
  8012 ;; Hardware stack levels required when called:    7
  8013 ;; This function calls:
  8014 ;;		___awdiv
  8015 ;;		___awmod
  8016 ;; This function is called by:
  8017 ;;		_Esp8266Entrypoint
  8018 ;; This function uses a non-reentrant model
  8019 ;;
  8020                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  8021                           	file	"GeneralFunction.c"
  8022                           	line	32
  8023                           global __ptext17
  8024                           __ptext17:	;psect for function _uint8_tToa
  8025  0D74                     psect	text17
  8026                           	file	"GeneralFunction.c"
  8027                           	line	32
  8028                           	global	__size_of_uint8_tToa
  8029                           	__size_of_uint8_tToa	equ	__end_of_uint8_tToa-_uint8_tToa
  8030  00B4                     	
  8031                           _uint8_tToa:	
  8032  0D74                     ;incstack = 0
  8033                           	opt	stack 7
  8034                           ; Regs used in _uint8_tToa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8035                           ;uint8_tToa@wText stored from wreg
  8036                           	movlb 0	; select bank0
  8037  0D74  0020               	movwf	(uint8_tToa@wText)
  8038  0D75  00C1               	line	37
  8039                           	
  8040                           l5680:	
  8041  0D76                     ;GeneralFunction.c: 32: char* uint8_tToa(char* wText, uint8_t iSizeofText, uint8_t iNumb
                                 er);GeneralFunction.c: 33: {;GeneralFunction.c: 34:     uint8_t wHundred;;GeneralFunctio
                                 n.c: 35:     uint8_t wTen;;GeneralFunction.c: 36:     uint8_t wUnit;;GeneralFunction.c: 
                                 37:     wUnit = iNumber % 10;
  8042                           	movlw	0Ah
  8043  0D76  300A               	movwf	(___awmod@divisor)
  8044  0D77  00B0               	movlw	0
  8045  0D78  3000               	movwf	((___awmod@divisor))+1
  8046  0D79  00B1               	movf	(uint8_tToa@iNumber),w
  8047  0D7A  083A               	movwf	(??_uint8_tToa+0)+0
  8048  0D7B  00BB               	clrf	(??_uint8_tToa+0)+0+1
  8049  0D7C  01BC               	movf	0+(??_uint8_tToa+0)+0,w
  8050  0D7D  083B               	movwf	(___awmod@dividend)
  8051  0D7E  00B2               	movf	1+(??_uint8_tToa+0)+0,w
  8052  0D7F  083C               	movwf	(___awmod@dividend+1)
  8053  0D80  00B3               	fcall	___awmod
  8054  0D81  3188  209E  318D   	movlb 0	; select bank0
  8055  0D84  0020               	movf	(0+(?___awmod)),w
  8056  0D85  0830               	movwf	(??_uint8_tToa+2)+0
  8057  0D86  00BD               	movf	(??_uint8_tToa+2)+0,w
  8058  0D87  083D               	movwf	(uint8_tToa@wUnit)
  8059  0D88  00C0               	line	38
  8060                           ;GeneralFunction.c: 38:     iNumber = iNumber / 10;
  8061                           	movlw	0Ah
  8062  0D89  300A               	movwf	(___awdiv@divisor)
  8063  0D8A  00B0               	movlw	0
  8064  0D8B  3000               	movwf	((___awdiv@divisor))+1
  8065  0D8C  00B1               	movf	(uint8_tToa@iNumber),w
  8066  0D8D  083A               	movwf	(??_uint8_tToa+0)+0
  8067  0D8E  00BB               	clrf	(??_uint8_tToa+0)+0+1
  8068  0D8F  01BC               	movf	0+(??_uint8_tToa+0)+0,w
  8069  0D90  083B               	movwf	(___awdiv@dividend)
  8070  0D91  00B2               	movf	1+(??_uint8_tToa+0)+0,w
  8071  0D92  083C               	movwf	(___awdiv@dividend+1)
  8072  0D93  00B3               	fcall	___awdiv
  8073  0D94  318A  2222  318D   	movlb 0	; select bank0
  8074  0D97  0020               	movf	(0+(?___awdiv)),w
  8075  0D98  0830               	movwf	(??_uint8_tToa+2)+0
  8076  0D99  00BD               	movf	(??_uint8_tToa+2)+0,w
  8077  0D9A  083D               	movwf	(uint8_tToa@iNumber)
  8078  0D9B  00BA               	line	39
  8079                           ;GeneralFunction.c: 39:     wTen = iNumber % 10;
  8080                           	movlw	0Ah
  8081  0D9C  300A               	movwf	(___awmod@divisor)
  8082  0D9D  00B0               	movlw	0
  8083  0D9E  3000               	movwf	((___awmod@divisor))+1
  8084  0D9F  00B1               	movf	(uint8_tToa@iNumber),w
  8085  0DA0  083A               	movwf	(??_uint8_tToa+0)+0
  8086  0DA1  00BB               	clrf	(??_uint8_tToa+0)+0+1
  8087  0DA2  01BC               	movf	0+(??_uint8_tToa+0)+0,w
  8088  0DA3  083B               	movwf	(___awmod@dividend)
  8089  0DA4  00B2               	movf	1+(??_uint8_tToa+0)+0,w
  8090  0DA5  083C               	movwf	(___awmod@dividend+1)
  8091  0DA6  00B3               	fcall	___awmod
  8092  0DA7  3188  209E  318D   	movlb 0	; select bank0
  8093  0DAA  0020               	movf	(0+(?___awmod)),w
  8094  0DAB  0830               	movwf	(??_uint8_tToa+2)+0
  8095  0DAC  00BD               	movf	(??_uint8_tToa+2)+0,w
  8096  0DAD  083D               	movwf	(uint8_tToa@wTen)
  8097  0DAE  00BF               	line	40
  8098                           ;GeneralFunction.c: 40:     iNumber = iNumber / 10;
  8099                           	movlw	0Ah
  8100  0DAF  300A               	movwf	(___awdiv@divisor)
  8101  0DB0  00B0               	movlw	0
  8102  0DB1  3000               	movwf	((___awdiv@divisor))+1
  8103  0DB2  00B1               	movf	(uint8_tToa@iNumber),w
  8104  0DB3  083A               	movwf	(??_uint8_tToa+0)+0
  8105  0DB4  00BB               	clrf	(??_uint8_tToa+0)+0+1
  8106  0DB5  01BC               	movf	0+(??_uint8_tToa+0)+0,w
  8107  0DB6  083B               	movwf	(___awdiv@dividend)
  8108  0DB7  00B2               	movf	1+(??_uint8_tToa+0)+0,w
  8109  0DB8  083C               	movwf	(___awdiv@dividend+1)
  8110  0DB9  00B3               	fcall	___awdiv
  8111  0DBA  318A  2222  318D   	movlb 0	; select bank0
  8112  0DBD  0020               	movf	(0+(?___awdiv)),w
  8113  0DBE  0830               	movwf	(??_uint8_tToa+2)+0
  8114  0DBF  00BD               	movf	(??_uint8_tToa+2)+0,w
  8115  0DC0  083D               	movwf	(uint8_tToa@iNumber)
  8116  0DC1  00BA               	line	41
  8117                           	
  8118                           l5682:	
  8119  0DC2                     ;GeneralFunction.c: 41:     wHundred = iNumber;
  8120                           	movf	(uint8_tToa@iNumber),w
  8121  0DC2  083A               	movwf	(??_uint8_tToa+0)+0
  8122  0DC3  00BB               	movf	(??_uint8_tToa+0)+0,w
  8123  0DC4  083B               	movwf	(uint8_tToa@wHundred)
  8124  0DC5  00BE               	line	43
  8125                           	
  8126                           l5684:	
  8127  0DC6                     ;GeneralFunction.c: 43:     if(iSizeofText < 4)
  8128                           	movlw	low(04h)
  8129  0DC6  3004               	subwf	(uint8_tToa@iSizeofText),w
  8130  0DC7  0239               	skipnc
  8131  0DC8  1803               	goto	u4211
  8132  0DC9  2DCB               	goto	u4210
  8133  0DCA  2DCC               u4211:
  8134  0DCB                     	goto	l5690
  8135  0DCB  2DCF               u4210:
  8136  0DCC                     	line	45
  8137                           	
  8138                           l5686:	
  8139  0DCC                     ;GeneralFunction.c: 44:     {;GeneralFunction.c: 45:         return ((void*)0);
  8140                           	movlw	low(0)
  8141  0DCC  3000               	goto	l609
  8142  0DCD  2E27               	
  8143                           l5688:	
  8144  0DCE                     	goto	l609
  8145  0DCE  2E27               	line	46
  8146                           ;GeneralFunction.c: 46:     }
  8147                           	
  8148                           l608:	
  8149  0DCF                     	line	48
  8150                           	
  8151                           l5690:	
  8152  0DCF                     ;GeneralFunction.c: 48:     if(wHundred != 0)
  8153                           	movf	((uint8_tToa@wHundred)),w
  8154  0DCF  083E               	btfsc	status,2
  8155  0DD0  1903               	goto	u4221
  8156  0DD1  2DD3               	goto	u4220
  8157  0DD2  2DD4               u4221:
  8158  0DD3                     	goto	l5694
  8159  0DD3  2DF7               u4220:
  8160  0DD4                     	line	50
  8161                           	
  8162                           l5692:	
  8163  0DD4                     ;GeneralFunction.c: 49:     {;GeneralFunction.c: 50:         wText[0] = '0' + wHundred;

  8164                           	movf	(uint8_tToa@wHundred),w
  8165  0DD4  083E               	addlw	030h
  8166  0DD5  3E30               	movwf	(??_uint8_tToa+0)+0
  8167  0DD6  00BB               	movf	(uint8_tToa@wText),w
  8168  0DD7  0841               	movwf	fsr1l
  8169  0DD8  0086               	movlw 4	; select bank8/9
  8170  0DD9  3004               	movwf fsr1h	
  8171  0DDA  0087               	
  8172                           	movf	(??_uint8_tToa+0)+0,w
  8173  0DDB  083B               	movwf	indf1
  8174  0DDC  0081               	line	51
  8175                           ;GeneralFunction.c: 51:         wText[1] = '0' + wTen;
  8176                           	movf	(uint8_tToa@wTen),w
  8177  0DDD  083F               	addlw	030h
  8178  0DDE  3E30               	movwf	(??_uint8_tToa+0)+0
  8179  0DDF  00BB               	incf	(uint8_tToa@wText),w
  8180  0DE0  0A41               	movwf	fsr1l
  8181  0DE1  0086               	movlw 4	; select bank8/9
  8182  0DE2  3004               	movwf fsr1h	
  8183  0DE3  0087               	
  8184                           	movf	(??_uint8_tToa+0)+0,w
  8185  0DE4  083B               	movwf	indf1
  8186  0DE5  0081               	line	52
  8187                           ;GeneralFunction.c: 52:         wText[2] = '0' + wUnit;
  8188                           	movf	(uint8_tToa@wUnit),w
  8189  0DE6  0840               	addlw	030h
  8190  0DE7  3E30               	movwf	(??_uint8_tToa+0)+0
  8191  0DE8  00BB               	movf	(uint8_tToa@wText),w
  8192  0DE9  0841               	addlw	02h
  8193  0DEA  3E02               	movwf	fsr1l
  8194  0DEB  0086               	movlw 4	; select bank8/9
  8195  0DEC  3004               	movwf fsr1h	
  8196  0DED  0087               	
  8197                           	movf	(??_uint8_tToa+0)+0,w
  8198  0DEE  083B               	movwf	indf1
  8199  0DEF  0081               	line	53
  8200                           ;GeneralFunction.c: 53:         wText[3] = 0;
  8201                           	movf	(uint8_tToa@wText),w
  8202  0DF0  0841               	addlw	03h
  8203  0DF1  3E03               	movwf	fsr1l
  8204  0DF2  0086               	movlw 4	; select bank8/9
  8205  0DF3  3004               	movwf fsr1h	
  8206  0DF4  0087               	
  8207                           	clrf	indf1
  8208  0DF5  0181               	line	54
  8209                           ;GeneralFunction.c: 54:     }
  8210                           	goto	l5702
  8211  0DF6  2E25               	line	55
  8212                           ;GeneralFunction.c: 55:     else
  8213                           	
  8214                           l610:	
  8215  0DF7                     	line	57
  8216                           	
  8217                           l5694:	
  8218  0DF7                     ;GeneralFunction.c: 56:     {;GeneralFunction.c: 57:         if(wTen !=0)
  8219                           	movf	((uint8_tToa@wTen)),w
  8220  0DF7  083F               	btfsc	status,2
  8221  0DF8  1903               	goto	u4231
  8222  0DF9  2DFB               	goto	u4230
  8223  0DFA  2DFC               u4231:
  8224  0DFB                     	goto	l5698
  8225  0DFB  2E15               u4230:
  8226  0DFC                     	line	59
  8227                           	
  8228                           l5696:	
  8229  0DFC                     ;GeneralFunction.c: 58:         {;GeneralFunction.c: 59:             wText[0] = '0' + wT
                                 en;
  8230                           	movf	(uint8_tToa@wTen),w
  8231  0DFC  083F               	addlw	030h
  8232  0DFD  3E30               	movwf	(??_uint8_tToa+0)+0
  8233  0DFE  00BB               	movf	(uint8_tToa@wText),w
  8234  0DFF  0841               	movwf	fsr1l
  8235  0E00  0086               	movlw 4	; select bank8/9
  8236  0E01  3004               	movwf fsr1h	
  8237  0E02  0087               	
  8238                           	movf	(??_uint8_tToa+0)+0,w
  8239  0E03  083B               	movwf	indf1
  8240  0E04  0081               	line	60
  8241                           ;GeneralFunction.c: 60:             wText[1] = '0' + wUnit;
  8242                           	movf	(uint8_tToa@wUnit),w
  8243  0E05  0840               	addlw	030h
  8244  0E06  3E30               	movwf	(??_uint8_tToa+0)+0
  8245  0E07  00BB               	incf	(uint8_tToa@wText),w
  8246  0E08  0A41               	movwf	fsr1l
  8247  0E09  0086               	movlw 4	; select bank8/9
  8248  0E0A  3004               	movwf fsr1h	
  8249  0E0B  0087               	
  8250                           	movf	(??_uint8_tToa+0)+0,w
  8251  0E0C  083B               	movwf	indf1
  8252  0E0D  0081               	line	61
  8253                           ;GeneralFunction.c: 61:             wText[2] = 0;
  8254                           	movf	(uint8_tToa@wText),w
  8255  0E0E  0841               	addlw	02h
  8256  0E0F  3E02               	movwf	fsr1l
  8257  0E10  0086               	movlw 4	; select bank8/9
  8258  0E11  3004               	movwf fsr1h	
  8259  0E12  0087               	
  8260                           	clrf	indf1
  8261  0E13  0181               	line	62
  8262                           ;GeneralFunction.c: 62:         }
  8263                           	goto	l5702
  8264  0E14  2E25               	line	63
  8265                           ;GeneralFunction.c: 63:         else
  8266                           	
  8267                           l612:	
  8268  0E15                     	line	65
  8269                           	
  8270                           l5698:	
  8271  0E15                     ;GeneralFunction.c: 64:         {;GeneralFunction.c: 65:             wText[0] = '0' + wU
                                 nit;
  8272                           	movf	(uint8_tToa@wUnit),w
  8273  0E15  0840               	addlw	030h
  8274  0E16  3E30               	movwf	(??_uint8_tToa+0)+0
  8275  0E17  00BB               	movf	(uint8_tToa@wText),w
  8276  0E18  0841               	movwf	fsr1l
  8277  0E19  0086               	movlw 4	; select bank8/9
  8278  0E1A  3004               	movwf fsr1h	
  8279  0E1B  0087               	
  8280                           	movf	(??_uint8_tToa+0)+0,w
  8281  0E1C  083B               	movwf	indf1
  8282  0E1D  0081               	line	66
  8283                           	
  8284                           l5700:	
  8285  0E1E                     ;GeneralFunction.c: 66:             wText[1] = 0;
  8286                           	incf	(uint8_tToa@wText),w
  8287  0E1E  0A41               	movwf	fsr1l
  8288  0E1F  0086               	movlw 4	; select bank8/9
  8289  0E20  3004               	movwf fsr1h	
  8290  0E21  0087               	
  8291                           	clrf	indf1
  8292  0E22  0181               	goto	l5702
  8293  0E23  2E25               	line	67
  8294                           ;GeneralFunction.c: 67:         }
  8295                           	
  8296                           l613:	
  8297  0E24                     	goto	l5702
  8298  0E24  2E25               	line	68
  8299                           ;GeneralFunction.c: 68:     }
  8300                           	
  8301                           l611:	
  8302  0E25                     	line	69
  8303                           	
  8304                           l5702:	
  8305  0E25                     ;GeneralFunction.c: 69:     return wText;
  8306                           	movf	(uint8_tToa@wText),w
  8307  0E25  0841               	goto	l609
  8308  0E26  2E27               	
  8309                           l5704:	
  8310  0E27                     	line	70
  8311                           	
  8312                           l609:	
  8313  0E27                     	return
  8314  0E27  0008               	opt stack 0
  8315                           GLOBAL	__end_of_uint8_tToa
  8316                           	__end_of_uint8_tToa:
  8317  0E28                     	signat	_uint8_tToa,12409
  8318                           	global	_moveToNextChar
  8319                           
  8320 ;; *************** function _moveToNextChar *****************
  8321 ;; Defined at:
  8322 ;;		line 12 in file "GeneralFunction.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;  iText           1    wreg     PTR unsigned char 
  8325 ;;		 -> Esp8266Entrypoint@wEspBuffer(70), 
  8326 ;;  iTextSize       1   16[BANK0 ] unsigned char 
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;  iText           1   18[BANK0 ] PTR unsigned char 
  8329 ;;		 -> Esp8266Entrypoint@wEspBuffer(70), 
  8330 ;;  i               2   19[BANK0 ] int 
  8331 ;; Return value:  Size  Location     Type
  8332 ;;                  1    wreg      PTR unsigned char 
  8333 ;; Registers used:
  8334 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8335 ;; Tracked objects:
  8336 ;;		On entry : 0/0
  8337 ;;		On exit  : 0/0
  8338 ;;		Unchanged: 0/0
  8339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8340 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8341 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  8342 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8343 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  8344 ;;Total ram usage:        5 bytes
  8345 ;; Hardware stack levels used:    1
  8346 ;; Hardware stack levels required when called:    6
  8347 ;; This function calls:
  8348 ;;		Nothing
  8349 ;; This function is called by:
  8350 ;;		_Esp8266Entrypoint
  8351 ;; This function uses a non-reentrant model
  8352 ;;
  8353                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  8354                           	line	12
  8355                           global __ptext18
  8356                           __ptext18:	;psect for function _moveToNextChar
  8357  165B                     psect	text18
  8358                           	file	"GeneralFunction.c"
  8359                           	line	12
  8360                           	global	__size_of_moveToNextChar
  8361                           	__size_of_moveToNextChar	equ	__end_of_moveToNextChar-_moveToNextChar
  8362  003C                     	
  8363                           _moveToNextChar:	
  8364  165B                     ;incstack = 0
  8365                           	opt	stack 8
  8366                           ; Regs used in _moveToNextChar: [wreg+fsr1l+fsr1h+status,2+status,0]
  8367                           ;moveToNextChar@iText stored from wreg
  8368                           	movlb 0	; select bank0
  8369  165B  0020               	movwf	(moveToNextChar@iText)
  8370  165C  00B2               	line	14
  8371                           	
  8372                           l5664:	
  8373  165D                     ;GeneralFunction.c: 12: char* moveToNextChar(char* iText, uint8_t iTextSize);GeneralFunc
                                 tion.c: 13: {;GeneralFunction.c: 14:     for(int i=0; i<iTextSize; i++ )
  8374                           	clrf	(moveToNextChar@i)
  8375  165D  01B3               	clrf	(moveToNextChar@i+1)
  8376  165E  01B4               	goto	l597
  8377  165F  2E83               	
  8378                           l598:	
  8379  1660                     	line	16
  8380                           	
  8381                           l5666:	
  8382  1660                     ;GeneralFunction.c: 15:     {;GeneralFunction.c: 16:       if(iText[i] != '\n' && iText[
                                 i] != '\r')
  8383                           	movlb 0	; select bank0
  8384  1660  0020               	movf	(moveToNextChar@i),w
  8385  1661  0833               	addwf	(moveToNextChar@iText),w
  8386  1662  0732               	movwf	(??_moveToNextChar+0)+0
  8387  1663  00B1               	movf	0+(??_moveToNextChar+0)+0,w
  8388  1664  0831               	movwf	fsr1l
  8389  1665  0086               	movlw 4	; select bank8/9
  8390  1666  3004               	movwf fsr1h	
  8391  1667  0087               	
  8392                           		movlw	10
  8393  1668  300A               	xorwf	(indf1),w
  8394  1669  0601               	btfsc	status,2
  8395  166A  1903               	goto	u4181
  8396  166B  2E6D               	goto	u4180
  8397  166C  2E6E               u4181:
  8398  166D                     	goto	l5674
  8399  166D  2E7F               u4180:
  8400  166E                     	
  8401                           l5668:	
  8402  166E                     	movf	(moveToNextChar@i),w
  8403  166E  0833               	addwf	(moveToNextChar@iText),w
  8404  166F  0732               	movwf	(??_moveToNextChar+0)+0
  8405  1670  00B1               	movf	0+(??_moveToNextChar+0)+0,w
  8406  1671  0831               	movwf	fsr1l
  8407  1672  0086               	movlw 4	; select bank8/9
  8408  1673  3004               	movwf fsr1h	
  8409  1674  0087               	
  8410                           		movlw	13
  8411  1675  300D               	xorwf	(indf1),w
  8412  1676  0601               	btfsc	status,2
  8413  1677  1903               	goto	u4191
  8414  1678  2E7A               	goto	u4190
  8415  1679  2E7B               u4191:
  8416  167A                     	goto	l5674
  8417  167A  2E7F               u4190:
  8418  167B                     	line	18
  8419                           	
  8420                           l5670:	
  8421  167B                     ;GeneralFunction.c: 17:       {;GeneralFunction.c: 18:         return iText + i;
  8422                           	movf	(moveToNextChar@iText),w
  8423  167B  0832               	addwf	(moveToNextChar@i),w
  8424  167C  0733               	goto	l600
  8425  167D  2E96               	
  8426                           l5672:	
  8427  167E                     	goto	l600
  8428  167E  2E96               	line	19
  8429                           ;GeneralFunction.c: 19:       }
  8430                           	
  8431                           l599:	
  8432  167F                     	line	20
  8433                           	
  8434                           l5674:	
  8435  167F                     ;GeneralFunction.c: 20:     }
  8436                           	movlw	01h
  8437  167F  3001               	addwf	(moveToNextChar@i),f
  8438  1680  07B3               	movlw	0
  8439  1681  3000               	addwfc	(moveToNextChar@i+1),f
  8440  1682  3DB4               	
  8441                           l597:	
  8442  1683                     	movf	(moveToNextChar@i+1),w
  8443  1683  0834               	xorlw	80h
  8444  1684  3A80               	movwf	(??_moveToNextChar+0)+0
  8445  1685  00B1               	movlw	80h
  8446  1686  3080               	subwf	(??_moveToNextChar+0)+0,w
  8447  1687  0231               	skipz
  8448  1688  1D03               	goto	u4205
  8449  1689  2E8C               	movf	(moveToNextChar@iTextSize),w
  8450  168A  0830               	subwf	(moveToNextChar@i),w
  8451  168B  0233               u4205:
  8452  168C                     
  8453                           	skipc
  8454  168C  1C03               	goto	u4201
  8455  168D  2E8F               	goto	u4200
  8456  168E  2E90               u4201:
  8457  168F                     	goto	l5666
  8458  168F  2E60               u4200:
  8459  1690                     	goto	l5676
  8460  1690  2E91               	
  8461                           l601:	
  8462  1691                     	line	21
  8463                           	
  8464                           l5676:	
  8465  1691                     ;GeneralFunction.c: 21:     return iText + iTextSize-2;
  8466                           	movlb 0	; select bank0
  8467  1691  0020               	movf	(moveToNextChar@iText),w
  8468  1692  0832               	addwf	(moveToNextChar@iTextSize),w
  8469  1693  0730               	addlw	-2
  8470  1694  3EFE               	goto	l600
  8471  1695  2E96               	
  8472                           l5678:	
  8473  1696                     	line	22
  8474                           	
  8475                           l600:	
  8476  1696                     	return
  8477  1696  0008               	opt stack 0
  8478                           GLOBAL	__end_of_moveToNextChar
  8479                           	__end_of_moveToNextChar:
  8480  1697                     	signat	_moveToNextChar,8313
  8481                           	global	_memcmp
  8482                           
  8483 ;; *************** function _memcmp *****************
  8484 ;; Defined at:
  8485 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcmp.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;  vl              1    wreg     PTR const void 
  8488 ;;		 -> Esp8266Entrypoint@wEspBuffer(70), 
  8489 ;;  vr              2   16[BANK0 ] PTR const void 
  8490 ;;		 -> STR_24(18), STR_23(3), STR_21(3), 
  8491 ;;  n               2   18[BANK0 ] unsigned int 
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;  vl              1   22[BANK0 ] PTR const void 
  8494 ;;		 -> Esp8266Entrypoint@wEspBuffer(70), 
  8495 ;;  r               2   23[BANK0 ] PTR const unsigned char 
  8496 ;;		 -> STR_24(18), STR_23(3), STR_21(3), 
  8497 ;;  l               1   25[BANK0 ] PTR const unsigned char 
  8498 ;;		 -> Esp8266Entrypoint@wEspBuffer(70), 
  8499 ;; Return value:  Size  Location     Type
  8500 ;;                  2   16[BANK0 ] int 
  8501 ;; Registers used:
  8502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8503 ;; Tracked objects:
  8504 ;;		On entry : 0/0
  8505 ;;		On exit  : 0/0
  8506 ;;		Unchanged: 0/0
  8507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8508 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  8509 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  8510 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8511 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  8512 ;;Total ram usage:       10 bytes
  8513 ;; Hardware stack levels used:    1
  8514 ;; Hardware stack levels required when called:    6
  8515 ;; This function calls:
  8516 ;;		Nothing
  8517 ;; This function is called by:
  8518 ;;		_Esp8266Entrypoint
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           psect	text19,local,class=CODE,delta=2,merge=1,group=2
  8522                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcmp.c"
  8523                           	line	3
  8524                           global __ptext19
  8525                           __ptext19:	;psect for function _memcmp
  8526  17AE                     psect	text19
  8527                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcmp.c"
  8528                           	line	3
  8529                           	global	__size_of_memcmp
  8530                           	__size_of_memcmp	equ	__end_of_memcmp-_memcmp
  8531  0052                     	
  8532                           _memcmp:	
  8533  17AE                     ;incstack = 0
  8534                           	opt	stack 8
  8535                           ; Regs used in _memcmp: [wreg-fsr1h+status,2+status,0+pclath]
  8536                           ;memcmp@vl stored from wreg
  8537                           	movlb 0	; select bank0
  8538  17AE  0020               	movwf	(memcmp@vl)
  8539  17AF  00B6               	line	5
  8540                           	
  8541                           l5776:	
  8542  17B0                     	movf	(memcmp@vl),w
  8543  17B0  0836               	movwf	(??_memcmp+0)+0
  8544  17B1  00B4               	movf	(??_memcmp+0)+0,w
  8545  17B2  0834               	movwf	(memcmp@l)
  8546  17B3  00B9               	movf	(memcmp@vr+1),w
  8547  17B4  0831               	movwf	(memcmp@r+1)
  8548  17B5  00B8               	movf	(memcmp@vr),w
  8549  17B6  0830               	movwf	(memcmp@r)
  8550  17B7  00B7               	line	6
  8551                           	goto	l1244
  8552  17B8  2FC5               	
  8553                           l1245:	
  8554  17B9                     	
  8555                           l5778:	
  8556  17B9                     	movlw	01h
  8557  17B9  3001               	subwf	(memcmp@n),f
  8558  17BA  02B2               	movlw	0
  8559  17BB  3000               	subwfb	(memcmp@n+1),f
  8560  17BC  3BB3               	
  8561                           l5780:	
  8562  17BD                     	movlw	low(01h)
  8563  17BD  3001               	movwf	(??_memcmp+0)+0
  8564  17BE  00B4               	movf	(??_memcmp+0)+0,w
  8565  17BF  0834               	addwf	(memcmp@l),f
  8566  17C0  07B9               	
  8567                           l5782:	
  8568  17C1                     	movlw	01h
  8569  17C1  3001               	addwf	(memcmp@r),f
  8570  17C2  07B7               	movlw	0
  8571  17C3  3000               	addwfc	(memcmp@r+1),f
  8572  17C4  3DB8               	
  8573                           l1244:	
  8574  17C5                     	movf	((memcmp@n)),w
  8575  17C5  0832               iorwf	((memcmp@n+1)),w
  8576  17C6  0433               	btfsc	status,2
  8577  17C7  1903               	goto	u4301
  8578  17C8  2FCA               	goto	u4300
  8579  17C9  2FCB               u4301:
  8580  17CA                     	goto	l5786
  8581  17CA  2FDD               u4300:
  8582  17CB                     	
  8583                           l5784:	
  8584  17CB                     	movf	(memcmp@r),w
  8585  17CB  0837               	movwf	fsr0l
  8586  17CC  0084               	movf	((memcmp@r+1)),w
  8587  17CD  0838               	movwf	fsr0h
  8588  17CE  0085               	movf	indf0,w ;code access
  8589  17CF  0800               	movwf	(??_memcmp+0)+0
  8590  17D0  00B4               	movf	(memcmp@l),w
  8591  17D1  0839               	movwf	fsr1l
  8592  17D2  0086               	movlw 4	; select bank8/9
  8593  17D3  3004               	movwf fsr1h	
  8594  17D4  0087               	
  8595                           	movf	indf1,w
  8596  17D5  0801               	xorwf	(??_memcmp+0)+0,w
  8597  17D6  0634               	skipnz
  8598  17D7  1903               	goto	u4311
  8599  17D8  2FDA               	goto	u4310
  8600  17D9  2FDB               u4311:
  8601  17DA                     	goto	l5778
  8602  17DA  2FB9               u4310:
  8603  17DB                     	goto	l5786
  8604  17DB  2FDD               	
  8605                           l1247:	
  8606  17DC                     	goto	l5786
  8607  17DC  2FDD               	
  8608                           l1248:	
  8609  17DD                     	line	7
  8610                           	
  8611                           l5786:	
  8612  17DD                     	movf	((memcmp@n)),w
  8613  17DD  0832               iorwf	((memcmp@n+1)),w
  8614  17DE  0433               	btfss	status,2
  8615  17DF  1D03               	goto	u4321
  8616  17E0  2FE2               	goto	u4320
  8617  17E1  2FE3               u4321:
  8618  17E2                     	goto	l5790
  8619  17E2  2FE6               u4320:
  8620  17E3                     	
  8621                           l5788:	
  8622  17E3                     	clrf	(?_memcmp)
  8623  17E3  01B0               	clrf	(?_memcmp+1)
  8624  17E4  01B1               	goto	l1253
  8625  17E5  2FFF               	
  8626                           l1250:	
  8627  17E6                     	
  8628                           l5790:	
  8629  17E6                     	movf	(memcmp@r),w
  8630  17E6  0837               	movwf	fsr0l
  8631  17E7  0084               	movf	((memcmp@r+1)),w
  8632  17E8  0838               	movwf	fsr0h
  8633  17E9  0085               	movf	indf0,w ;code access
  8634  17EA  0800               	movwf	(??_memcmp+0)+0
  8635  17EB  00B4               	clrf	(??_memcmp+0)+0+1
  8636  17EC  01B5               	comf	(??_memcmp+0)+0,f
  8637  17ED  09B4               	comf	(??_memcmp+0)+1,f
  8638  17EE  09B5               	incf	(??_memcmp+0)+0,f
  8639  17EF  0AB4               	skipnz
  8640  17F0  1903               	incf	(??_memcmp+0)+1,f
  8641  17F1  0AB5               	movf	(memcmp@l),w
  8642  17F2  0839               	movwf	fsr1l
  8643  17F3  0086               	movlw 4	; select bank8/9
  8644  17F4  3004               	movwf fsr1h	
  8645  17F5  0087               	
  8646                           	movf	indf1,w
  8647  17F6  0801               	addwf	0+(??_memcmp+0)+0,w
  8648  17F7  0734               	movwf	(?_memcmp)
  8649  17F8  00B0               	movf	1+(??_memcmp+0)+0,w
  8650  17F9  0835               	skipnc
  8651  17FA  1803               	incf	1+(??_memcmp+0)+0,w
  8652  17FB  0A35               	movwf	((?_memcmp))+1
  8653  17FC  00B1               	goto	l1253
  8654  17FD  2FFF               	
  8655                           l1252:	
  8656  17FE                     	goto	l1253
  8657  17FE  2FFF               	
  8658                           l5792:	
  8659  17FF                     	line	8
  8660                           	
  8661                           l1253:	
  8662  17FF                     	return
  8663  17FF  0008               	opt stack 0
  8664                           GLOBAL	__end_of_memcmp
  8665                           	__end_of_memcmp:
  8666  1800                     	signat	_memcmp,12410
  8667                           	global	_lcdWriteText
  8668                           
  8669 ;; *************** function _lcdWriteText *****************
  8670 ;; Defined at:
  8671 ;;		line 63 in file "LCD_hd44780u_qy_2004a.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;  iText           2   34[BANK0 ] PTR unsigned char 
  8674 ;;		 -> Esp8266Entrypoint@wReturnNumber(4), STR_25(4), STR_22(4), NULL(0), 
  8675 ;;		 -> myint@wText_501(3), myint@wText(3), wInterruptText(75), 
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;  wCharReading    1   39[BANK0 ] unsigned char 
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  1    wreg      void 
  8680 ;; Registers used:
  8681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8687 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8688 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8689 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  8690 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  8691 ;;Total ram usage:        6 bytes
  8692 ;; Hardware stack levels used:    1
  8693 ;; Hardware stack levels required when called:   10
  8694 ;; This function calls:
  8695 ;;		_writeTxtChk
  8696 ;; This function is called by:
  8697 ;;		_PrintLog
  8698 ;;		_Esp8266Entrypoint
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  8702                           	file	"LCD_hd44780u_qy_2004a.c"
  8703                           	line	63
  8704                           global __ptext20
  8705                           __ptext20:	;psect for function _lcdWriteText
  8706  1436                     psect	text20
  8707                           	file	"LCD_hd44780u_qy_2004a.c"
  8708                           	line	63
  8709                           	global	__size_of_lcdWriteText
  8710                           	__size_of_lcdWriteText	equ	__end_of_lcdWriteText-_lcdWriteText
  8711  002A                     	
  8712                           _lcdWriteText:	
  8713  1436                     ;incstack = 0
  8714                           	opt	stack 4
  8715                           ; Regs used in _lcdWriteText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8716                           	line	65
  8717                           	
  8718                           l5514:	
  8719  1436                     ;LCD_hd44780u_qy_2004a.c: 63: void lcdWriteText(char *iText);LCD_hd44780u_qy_2004a.c: 64
                                 :  {;LCD_hd44780u_qy_2004a.c: 65:   unsigned char wCharReadingPos = 0;
  8720                           	movlb 0	; select bank0
  8721  1436  0020               	clrf	(lcdWriteText@wCharReadingPos)
  8722  1437  01C7               	line	66
  8723                           ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
  8724                           	goto	l5520
  8725  1438  2C4E               	
  8726                           l249:	
  8727  1439                     	line	68
  8728                           	
  8729                           l5516:	
  8730  1439                     ;LCD_hd44780u_qy_2004a.c: 67:   {;LCD_hd44780u_qy_2004a.c: 68:     writeTxtChk(iText[wCh
                                 arReadingPos]);
  8731                           	movf	(lcdWriteText@iText+1),w
  8732  1439  0843               	movwf	(??_lcdWriteText+0)+0+1
  8733  143A  00C5               	movf	(lcdWriteText@iText),w
  8734  143B  0842               	movwf	(??_lcdWriteText+0)+0
  8735  143C  00C4               	movf	(lcdWriteText@wCharReadingPos),w
  8736  143D  0847               	addwf	(??_lcdWriteText+0)+0,w
  8737  143E  0744               	movwf	fsr0l
  8738  143F  0084               	movf	(??_lcdWriteText+0)+1,w
  8739  1440  0845               	skipnc
  8740  1441  1803               	incf	(??_lcdWriteText+0)+1,w
  8741  1442  0A45               	movwf	fsr0h
  8742  1443  0085               
  8743                           	movf	indf0,w ;code access
  8744  1444  0800               	fcall	_writeTxtChk
  8745  1445  318C  2425  3194   	line	69
  8746                           	
  8747                           l5518:	
  8748  1448                     ;LCD_hd44780u_qy_2004a.c: 69:     wCharReadingPos++;
  8749                           	movlw	low(01h)
  8750  1448  3001               	movlb 0	; select bank0
  8751  1449  0020               	movwf	(??_lcdWriteText+0)+0
  8752  144A  00C4               	movf	(??_lcdWriteText+0)+0,w
  8753  144B  0844               	addwf	(lcdWriteText@wCharReadingPos),f
  8754  144C  07C7               	goto	l5520
  8755  144D  2C4E               	line	70
  8756                           ;LCD_hd44780u_qy_2004a.c: 70:   }
  8757                           	
  8758                           l248:	
  8759  144E                     	line	66
  8760                           	
  8761                           l5520:	
  8762  144E                     ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
  8763                           	movf	(lcdWriteText@iText+1),w
  8764  144E  0843               	movwf	(??_lcdWriteText+0)+0+1
  8765  144F  00C5               	movf	(lcdWriteText@iText),w
  8766  1450  0842               	movwf	(??_lcdWriteText+0)+0
  8767  1451  00C4               	movf	(lcdWriteText@wCharReadingPos),w
  8768  1452  0847               	addwf	(??_lcdWriteText+0)+0,w
  8769  1453  0744               	movwf	fsr0l
  8770  1454  0084               	movf	(??_lcdWriteText+0)+1,w
  8771  1455  0845               	skipnc
  8772  1456  1803               	incf	(??_lcdWriteText+0)+1,w
  8773  1457  0A45               	movwf	fsr0h
  8774  1458  0085               
  8775                           	moviw	fsr0++
  8776  1459  0012               	btfss	status,2
  8777  145A  1D03               	goto	u4031
  8778  145B  2C5D               	goto	u4030
  8779  145C  2C5E               u4031:
  8780  145D                     	goto	l5516
  8781  145D  2C39               u4030:
  8782  145E                     	goto	l251
  8783  145E  2C5F               	
  8784                           l250:	
  8785  145F                     	line	72
  8786                           	
  8787                           l251:	
  8788  145F                     	return
  8789  145F  0008               	opt stack 0
  8790                           GLOBAL	__end_of_lcdWriteText
  8791                           	__end_of_lcdWriteText:
  8792  1460                     	signat	_lcdWriteText,4217
  8793                           	global	_lcdWriteAllText
  8794                           
  8795 ;; *************** function _lcdWriteAllText *****************
  8796 ;; Defined at:
  8797 ;;		line 74 in file "LCD_hd44780u_qy_2004a.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;  iText           2   29[BANK0 ] PTR unsigned char 
  8800 ;;		 -> Esp8266Entrypoint@wEspBuffer(70), STR_20(8), STR_17(6), STR_13(9), 
  8801 ;; Auto vars:     Size  Location     Type
  8802 ;;  wCharReading    1   35[BANK0 ] unsigned char 
  8803 ;; Return value:  Size  Location     Type
  8804 ;;                  1    wreg      void 
  8805 ;; Registers used:
  8806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8807 ;; Tracked objects:
  8808 ;;		On entry : 0/0
  8809 ;;		On exit  : 0/0
  8810 ;;		Unchanged: 0/0
  8811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8812 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8813 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8814 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  8815 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
  8816 ;;Total ram usage:        7 bytes
  8817 ;; Hardware stack levels used:    1
  8818 ;; Hardware stack levels required when called:   10
  8819 ;; This function calls:
  8820 ;;		_writeTxtChk
  8821 ;; This function is called by:
  8822 ;;		_Esp8266Entrypoint
  8823 ;; This function uses a non-reentrant model
  8824 ;;
  8825                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  8826                           	line	74
  8827                           global __ptext21
  8828                           __ptext21:	;psect for function _lcdWriteAllText
  8829  0842                     psect	text21
  8830                           	file	"LCD_hd44780u_qy_2004a.c"
  8831                           	line	74
  8832                           	global	__size_of_lcdWriteAllText
  8833                           	__size_of_lcdWriteAllText	equ	__end_of_lcdWriteAllText-_lcdWriteAllText
  8834  005C                     	
  8835                           _lcdWriteAllText:	
  8836  0842                     ;incstack = 0
  8837                           	opt	stack 4
  8838                           ; Regs used in _lcdWriteAllText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8839                           	line	76
  8840                           	
  8841                           l5570:	
  8842  0842                     ;LCD_hd44780u_qy_2004a.c: 74: void lcdWriteAllText(char *iText);LCD_hd44780u_qy_2004a.c:
                                  75:  {;LCD_hd44780u_qy_2004a.c: 76:   unsigned char wCharReadingPos = 0;
  8843                           	movlb 0	; select bank0
  8844  0842  0020               	clrf	(lcdWriteAllText@wCharReadingPos)
  8845  0843  01C3               	line	77
  8846                           ;LCD_hd44780u_qy_2004a.c: 77:   while( iText[wCharReadingPos] != 0)
  8847                           	goto	l5584
  8848  0844  288C               	
  8849                           l255:	
  8850  0845                     	line	79
  8851                           ;LCD_hd44780u_qy_2004a.c: 78:   {;LCD_hd44780u_qy_2004a.c: 79:     switch(iText[wCharRea
                                 dingPos])
  8852                           	goto	l5580
  8853  0845  286A               	line	81
  8854                           ;LCD_hd44780u_qy_2004a.c: 80:     {;LCD_hd44780u_qy_2004a.c: 81:         case '\r':
  8855                           	
  8856                           l257:	
  8857  0846                     	line	82
  8858                           	
  8859                           l5572:	
  8860  0846                     ;LCD_hd44780u_qy_2004a.c: 82:             writeTxtChk('/');
  8861                           	movlw	low(02Fh)
  8862  0846  302F               	fcall	_writeTxtChk
  8863  0847  318C  2425  3188   	line	83
  8864                           ;LCD_hd44780u_qy_2004a.c: 83:             writeTxtChk('r');
  8865                           	movlw	low(072h)
  8866  084A  3072               	fcall	_writeTxtChk
  8867  084B  318C  2425  3188   	line	84
  8868                           ;LCD_hd44780u_qy_2004a.c: 84:             break;
  8869                           	goto	l5582
  8870  084E  2886               	line	85
  8871                           ;LCD_hd44780u_qy_2004a.c: 85:         case '\n':
  8872                           	
  8873                           l259:	
  8874  084F                     	line	86
  8875                           	
  8876                           l5574:	
  8877  084F                     ;LCD_hd44780u_qy_2004a.c: 86:             writeTxtChk('/');
  8878                           	movlw	low(02Fh)
  8879  084F  302F               	fcall	_writeTxtChk
  8880  0850  318C  2425  3188   	line	87
  8881                           ;LCD_hd44780u_qy_2004a.c: 87:             writeTxtChk('n');
  8882                           	movlw	low(06Eh)
  8883  0853  306E               	fcall	_writeTxtChk
  8884  0854  318C  2425  3188   	line	88
  8885                           ;LCD_hd44780u_qy_2004a.c: 88:             break;
  8886                           	goto	l5582
  8887  0857  2886               	line	89
  8888                           ;LCD_hd44780u_qy_2004a.c: 89:         default:
  8889                           	
  8890                           l260:	
  8891  0858                     	line	90
  8892                           	
  8893                           l5576:	
  8894  0858                     ;LCD_hd44780u_qy_2004a.c: 90:             writeTxtChk(iText[wCharReadingPos]);
  8895                           	movlb 0	; select bank0
  8896  0858  0020               	movf	(lcdWriteAllText@iText+1),w
  8897  0859  083E               	movwf	(??_lcdWriteAllText+0)+0+1
  8898  085A  00C0               	movf	(lcdWriteAllText@iText),w
  8899  085B  083D               	movwf	(??_lcdWriteAllText+0)+0
  8900  085C  00BF               	movf	(lcdWriteAllText@wCharReadingPos),w
  8901  085D  0843               	addwf	(??_lcdWriteAllText+0)+0,w
  8902  085E  073F               	movwf	fsr0l
  8903  085F  0084               	movf	(??_lcdWriteAllText+0)+1,w
  8904  0860  0840               	skipnc
  8905  0861  1803               	incf	(??_lcdWriteAllText+0)+1,w
  8906  0862  0A40               	movwf	fsr0h
  8907  0863  0085               
  8908                           	movf	indf0,w ;code access
  8909  0864  0800               	fcall	_writeTxtChk
  8910  0865  318C  2425  3188   	line	91
  8911                           ;LCD_hd44780u_qy_2004a.c: 91:             break;
  8912                           	goto	l5582
  8913  0868  2886               	line	92
  8914                           	
  8915                           l5578:	
  8916  0869                     ;LCD_hd44780u_qy_2004a.c: 92:     }
  8917                           	goto	l5582
  8918  0869  2886               	
  8919                           l256:	
  8920  086A                     	
  8921                           l5580:	
  8922  086A                     	movlb 0	; select bank0
  8923  086A  0020               	movf	(lcdWriteAllText@iText+1),w
  8924  086B  083E               	movwf	(??_lcdWriteAllText+0)+0+1
  8925  086C  00C0               	movf	(lcdWriteAllText@iText),w
  8926  086D  083D               	movwf	(??_lcdWriteAllText+0)+0
  8927  086E  00BF               	movf	(lcdWriteAllText@wCharReadingPos),w
  8928  086F  0843               	addwf	(??_lcdWriteAllText+0)+0,w
  8929  0870  073F               	movwf	fsr0l
  8930  0871  0084               	movf	(??_lcdWriteAllText+0)+1,w
  8931  0872  0840               	skipnc
  8932  0873  1803               	incf	(??_lcdWriteAllText+0)+1,w
  8933  0874  0A40               	movwf	fsr0h
  8934  0875  0085               
  8935                           	movf	indf0,w ;code access
  8936  0876  0800               	movwf	(??_lcdWriteAllText+2)+0
  8937  0877  00C1               	clrf	(??_lcdWriteAllText+2)+0+1
  8938  0878  01C2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  8939                           ; Switch size 1, requested type "space"
  8940                           ; Number of cases is 1, Range of values is 0 to 0
  8941                           ; switch strategies available:
  8942                           ; Name         Instructions Cycles
  8943                           ; simple_byte            4     3 (average)
  8944                           ; direct_byte            8     6 (fixed)
  8945                           ; jumptable            260     6 (fixed)
  8946                           ;	Chosen strategy is simple_byte
  8947                           
  8948                           	movf 1+(??_lcdWriteAllText+2)+0,w
  8949  0879  0842               	opt asmopt_push
  8950                           	opt asmopt_off
  8951                           	xorlw	0^0	; case 0
  8952  087A  3A00               	skipnz
  8953  087B  1903               	goto	l6864
  8954  087C  287E               	goto	l5576
  8955  087D  2858               	opt asmopt_pop
  8956                           	
  8957                           l6864:	
  8958  087E                     ; Switch size 1, requested type "space"
  8959                           ; Number of cases is 2, Range of values is 10 to 13
  8960                           ; switch strategies available:
  8961                           ; Name         Instructions Cycles
  8962                           ; simple_byte            7     4 (average)
  8963                           ; direct_byte           17     9 (fixed)
  8964                           ; jumptable            263     9 (fixed)
  8965                           ;	Chosen strategy is simple_byte
  8966                           
  8967                           	movf 0+(??_lcdWriteAllText+2)+0,w
  8968  087E  0841               	opt asmopt_push
  8969                           	opt asmopt_off
  8970                           	xorlw	10^0	; case 10
  8971  087F  3A0A               	skipnz
  8972  0880  1903               	goto	l5574
  8973  0881  284F               	xorlw	13^10	; case 13
  8974  0882  3A07               	skipnz
  8975  0883  1903               	goto	l5572
  8976  0884  2846               	goto	l5576
  8977  0885  2858               	opt asmopt_pop
  8978                           
  8979                           	
  8980                           l258:	
  8981  0886                     	line	93
  8982                           	
  8983                           l5582:	
  8984  0886                     ;LCD_hd44780u_qy_2004a.c: 93:     wCharReadingPos++;
  8985                           	movlw	low(01h)
  8986  0886  3001               	movlb 0	; select bank0
  8987  0887  0020               	movwf	(??_lcdWriteAllText+0)+0
  8988  0888  00BF               	movf	(??_lcdWriteAllText+0)+0,w
  8989  0889  083F               	addwf	(lcdWriteAllText@wCharReadingPos),f
  8990  088A  07C3               	goto	l5584
  8991  088B  288C               	line	94
  8992                           ;LCD_hd44780u_qy_2004a.c: 94:   }
  8993                           	
  8994                           l254:	
  8995  088C                     	line	77
  8996                           	
  8997                           l5584:	
  8998  088C                     ;LCD_hd44780u_qy_2004a.c: 77:   while( iText[wCharReadingPos] != 0)
  8999                           	movf	(lcdWriteAllText@iText+1),w
  9000  088C  083E               	movwf	(??_lcdWriteAllText+0)+0+1
  9001  088D  00C0               	movf	(lcdWriteAllText@iText),w
  9002  088E  083D               	movwf	(??_lcdWriteAllText+0)+0
  9003  088F  00BF               	movf	(lcdWriteAllText@wCharReadingPos),w
  9004  0890  0843               	addwf	(??_lcdWriteAllText+0)+0,w
  9005  0891  073F               	movwf	fsr0l
  9006  0892  0084               	movf	(??_lcdWriteAllText+0)+1,w
  9007  0893  0840               	skipnc
  9008  0894  1803               	incf	(??_lcdWriteAllText+0)+1,w
  9009  0895  0A40               	movwf	fsr0h
  9010  0896  0085               
  9011                           	moviw	fsr0++
  9012  0897  0012               	btfss	status,2
  9013  0898  1D03               	goto	u4091
  9014  0899  289B               	goto	u4090
  9015  089A  289C               u4091:
  9016  089B                     	goto	l5580
  9017  089B  286A               u4090:
  9018  089C                     	goto	l262
  9019  089C  289D               	
  9020                           l261:	
  9021  089D                     	line	96
  9022                           	
  9023                           l262:	
  9024  089D                     	return
  9025  089D  0008               	opt stack 0
  9026                           GLOBAL	__end_of_lcdWriteAllText
  9027                           	__end_of_lcdWriteAllText:
  9028  089E                     	signat	_lcdWriteAllText,4217
  9029                           	global	_writeTxtChk
  9030                           
  9031 ;; *************** function _writeTxtChk *****************
  9032 ;; Defined at:
  9033 ;;		line 125 in file "LCD_hd44780u_qy_2004a.c"
  9034 ;; Parameters:    Size  Location     Type
  9035 ;;  iOpCode         1    wreg     unsigned char 
  9036 ;; Auto vars:     Size  Location     Type
  9037 ;;  iOpCode         1   28[BANK0 ] unsigned char 
  9038 ;; Return value:  Size  Location     Type
  9039 ;;                  1    wreg      void 
  9040 ;; Registers used:
  9041 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9042 ;; Tracked objects:
  9043 ;;		On entry : 0/0
  9044 ;;		On exit  : 0/0
  9045 ;;		Unchanged: 0/0
  9046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9048 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9049 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9050 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  9051 ;;Total ram usage:        3 bytes
  9052 ;; Hardware stack levels used:    1
  9053 ;; Hardware stack levels required when called:    9
  9054 ;; This function calls:
  9055 ;;		_SetToSendDataToLCD
  9056 ;;		_setCursorPosition
  9057 ;;		_setData
  9058 ;;		_waitLCDBusy
  9059 ;; This function is called by:
  9060 ;;		_lcdWriteText
  9061 ;;		_lcdWriteAllText
  9062 ;;		_lcdWriteRotText
  9063 ;; This function uses a non-reentrant model
  9064 ;;
  9065                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  9066                           	line	125
  9067                           global __ptext22
  9068                           __ptext22:	;psect for function _writeTxtChk
  9069  0C25                     psect	text22
  9070                           	file	"LCD_hd44780u_qy_2004a.c"
  9071                           	line	125
  9072                           	global	__size_of_writeTxtChk
  9073                           	__size_of_writeTxtChk	equ	__end_of_writeTxtChk-_writeTxtChk
  9074  009F                     	
  9075                           _writeTxtChk:	
  9076  0C25                     ;incstack = 0
  9077                           	opt	stack 4
  9078                           ; Regs used in _writeTxtChk: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9079                           ;writeTxtChk@iOpCode stored from wreg
  9080                           	movlb 0	; select bank0
  9081  0C25  0020               	movwf	(writeTxtChk@iOpCode)
  9082  0C26  00BC               	line	127
  9083                           	
  9084                           l5290:	
  9085  0C27                     ;LCD_hd44780u_qy_2004a.c: 125: void writeTxtChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 26: {;LCD_hd44780u_qy_2004a.c: 127:     if(iOpCode == '\r')
  9086                           		movlw	13
  9087  0C27  300D               	xorwf	((writeTxtChk@iOpCode)),w
  9088  0C28  063C               	btfss	status,2
  9089  0C29  1D03               	goto	u3701
  9090  0C2A  2C2C               	goto	u3700
  9091  0C2B  2C2D               u3701:
  9092  0C2C                     	goto	l5294
  9093  0C2C  2C2F               u3700:
  9094  0C2D                     	goto	l278
  9095  0C2D  2CC3               	line	129
  9096                           	
  9097                           l5292:	
  9098  0C2E                     ;LCD_hd44780u_qy_2004a.c: 128:     {;LCD_hd44780u_qy_2004a.c: 129:       return;
  9099                           	goto	l278
  9100  0C2E  2CC3               	line	130
  9101                           ;LCD_hd44780u_qy_2004a.c: 130:     }
  9102                           	
  9103                           l277:	
  9104  0C2F                     	line	131
  9105                           	
  9106                           l5294:	
  9107  0C2F                     ;LCD_hd44780u_qy_2004a.c: 131:   SetToSendDataToLCD();
  9108                           	fcall	_SetToSendDataToLCD
  9109  0C2F  3192  22E3  318C   	line	132
  9110                           	
  9111                           l5296:	
  9112  0C32                     ;LCD_hd44780u_qy_2004a.c: 132:   PORTAbits.RA0 = 1;
  9113                           	movlb 0	; select bank0
  9114  0C32  0020               	bsf	(12),0	;volatile
  9115  0C33  140C               	line	133
  9116                           	
  9117                           l5298:	
  9118  0C34                     ;LCD_hd44780u_qy_2004a.c: 133:   PORTAbits.RA1 = 0;
  9119                           	bcf	(12),1	;volatile
  9120  0C34  108C               	line	134
  9121                           	
  9122                           l5300:	
  9123  0C35                     ;LCD_hd44780u_qy_2004a.c: 134:   if(iOpCode == '\n')
  9124                           		movlw	10
  9125  0C35  300A               	xorwf	((writeTxtChk@iOpCode)),w
  9126  0C36  063C               	btfss	status,2
  9127  0C37  1D03               	goto	u3711
  9128  0C38  2C3A               	goto	u3710
  9129  0C39  2C3B               u3711:
  9130  0C3A                     	goto	l5330
  9131  0C3A  2C8D               u3710:
  9132  0C3B                     	line	136
  9133                           	
  9134                           l5302:	
  9135  0C3B                     ;LCD_hd44780u_qy_2004a.c: 135:   {;LCD_hd44780u_qy_2004a.c: 136:    if(mWritingPosition 
                                 < 20)
  9136                           	movlw	low(014h)
  9137  0C3B  3014               	subwf	(_mWritingPosition),w
  9138  0C3C  025A               	skipnc
  9139  0C3D  1803               	goto	u3721
  9140  0C3E  2C40               	goto	u3720
  9141  0C3F  2C41               u3721:
  9142  0C40                     	goto	l5306
  9143  0C40  2C47               u3720:
  9144  0C41                     	line	138
  9145                           	
  9146                           l5304:	
  9147  0C41                     ;LCD_hd44780u_qy_2004a.c: 137:    {;LCD_hd44780u_qy_2004a.c: 138:        setCursorPositi
                                 on(1,0);
  9148                           	clrf	(setCursorPosition@iPosition)
  9149  0C41  01B5               	movlw	low(01h)
  9150  0C42  3001               	fcall	_setCursorPosition
  9151  0C43  3188  20FC  318C   	line	139
  9152                           ;LCD_hd44780u_qy_2004a.c: 139:    }
  9153                           	goto	l278
  9154  0C46  2CC3               	line	140
  9155                           ;LCD_hd44780u_qy_2004a.c: 140:    else if(mWritingPosition < 40)
  9156                           	
  9157                           l280:	
  9158  0C47                     	
  9159                           l5306:	
  9160  0C47                     	movlw	low(028h)
  9161  0C47  3028               	movlb 0	; select bank0
  9162  0C48  0020               	subwf	(_mWritingPosition),w
  9163  0C49  025A               	skipnc
  9164  0C4A  1803               	goto	u3731
  9165  0C4B  2C4D               	goto	u3730
  9166  0C4C  2C4E               u3731:
  9167  0C4D                     	goto	l5310
  9168  0C4D  2C54               u3730:
  9169  0C4E                     	line	142
  9170                           	
  9171                           l5308:	
  9172  0C4E                     ;LCD_hd44780u_qy_2004a.c: 141:    {;LCD_hd44780u_qy_2004a.c: 142:        setCursorPositi
                                 on(2,0);
  9173                           	clrf	(setCursorPosition@iPosition)
  9174  0C4E  01B5               	movlw	low(02h)
  9175  0C4F  3002               	fcall	_setCursorPosition
  9176  0C50  3188  20FC  318C   	line	143
  9177                           ;LCD_hd44780u_qy_2004a.c: 143:    }
  9178                           	goto	l278
  9179  0C53  2CC3               	line	144
  9180                           ;LCD_hd44780u_qy_2004a.c: 144:    else if(mWritingPosition < 60)
  9181                           	
  9182                           l282:	
  9183  0C54                     	
  9184                           l5310:	
  9185  0C54                     	movlw	low(03Ch)
  9186  0C54  303C               	movlb 0	; select bank0
  9187  0C55  0020               	subwf	(_mWritingPosition),w
  9188  0C56  025A               	skipnc
  9189  0C57  1803               	goto	u3741
  9190  0C58  2C5A               	goto	u3740
  9191  0C59  2C5B               u3741:
  9192  0C5A                     	goto	l5314
  9193  0C5A  2C61               u3740:
  9194  0C5B                     	line	146
  9195                           	
  9196                           l5312:	
  9197  0C5B                     ;LCD_hd44780u_qy_2004a.c: 145:    {;LCD_hd44780u_qy_2004a.c: 146:        setCursorPositi
                                 on(3,0);
  9198                           	clrf	(setCursorPosition@iPosition)
  9199  0C5B  01B5               	movlw	low(03h)
  9200  0C5C  3003               	fcall	_setCursorPosition
  9201  0C5D  3188  20FC  318C   	line	147
  9202                           ;LCD_hd44780u_qy_2004a.c: 147:    }
  9203                           	goto	l278
  9204  0C60  2CC3               	line	148
  9205                           ;LCD_hd44780u_qy_2004a.c: 148:    else
  9206                           	
  9207                           l284:	
  9208  0C61                     	line	150
  9209                           	
  9210                           l5314:	
  9211  0C61                     ;LCD_hd44780u_qy_2004a.c: 149:    {;LCD_hd44780u_qy_2004a.c: 150:        setCursorPositi
                                 on(0,0);
  9212                           	movlb 0	; select bank0
  9213  0C61  0020               	clrf	(setCursorPosition@iPosition)
  9214  0C62  01B5               	movlw	low(0)
  9215  0C63  3000               	fcall	_setCursorPosition
  9216  0C64  3188  20FC  318C   	goto	l278
  9217  0C67  2CC3               	line	151
  9218                           ;LCD_hd44780u_qy_2004a.c: 151:    }
  9219                           	
  9220                           l285:	
  9221  0C68                     	goto	l278
  9222  0C68  2CC3               	
  9223                           l283:	
  9224  0C69                     	goto	l278
  9225  0C69  2CC3               	
  9226                           l281:	
  9227  0C6A                     	goto	l278
  9228  0C6A  2CC3               	line	152
  9229                           	
  9230                           l5316:	
  9231  0C6B                     ;LCD_hd44780u_qy_2004a.c: 152:    return;
  9232                           	goto	l278
  9233  0C6B  2CC3               	line	153
  9234                           ;LCD_hd44780u_qy_2004a.c: 153:   }
  9235                           	
  9236                           l279:	
  9237  0C6C                     	line	154
  9238                           ;LCD_hd44780u_qy_2004a.c: 154:   switch(mWritingPosition)
  9239                           	goto	l5330
  9240  0C6C  2C8D               	line	156
  9241                           ;LCD_hd44780u_qy_2004a.c: 155:   {;LCD_hd44780u_qy_2004a.c: 156:     case 20:
  9242                           	
  9243                           l287:	
  9244  0C6D                     	line	157
  9245                           	
  9246                           l5318:	
  9247  0C6D                     ;LCD_hd44780u_qy_2004a.c: 157:       setCursorPosition(1,0);
  9248                           	movlb 0	; select bank0
  9249  0C6D  0020               	clrf	(setCursorPosition@iPosition)
  9250  0C6E  01B5               	movlw	low(01h)
  9251  0C6F  3001               	fcall	_setCursorPosition
  9252  0C70  3188  20FC  318C   	line	158
  9253                           ;LCD_hd44780u_qy_2004a.c: 158:       break;
  9254                           	goto	l5332
  9255  0C73  2CA4               	line	159
  9256                           ;LCD_hd44780u_qy_2004a.c: 159:     case 40:
  9257                           	
  9258                           l289:	
  9259  0C74                     	line	160
  9260                           	
  9261                           l5320:	
  9262  0C74                     ;LCD_hd44780u_qy_2004a.c: 160:       setCursorPosition(2,0);
  9263                           	movlb 0	; select bank0
  9264  0C74  0020               	clrf	(setCursorPosition@iPosition)
  9265  0C75  01B5               	movlw	low(02h)
  9266  0C76  3002               	fcall	_setCursorPosition
  9267  0C77  3188  20FC  318C   	line	161
  9268                           ;LCD_hd44780u_qy_2004a.c: 161:       break;
  9269                           	goto	l5332
  9270  0C7A  2CA4               	line	162
  9271                           ;LCD_hd44780u_qy_2004a.c: 162:     case 60:
  9272                           	
  9273                           l290:	
  9274  0C7B                     	line	163
  9275                           	
  9276                           l5322:	
  9277  0C7B                     ;LCD_hd44780u_qy_2004a.c: 163:       setCursorPosition(3,0);
  9278                           	movlb 0	; select bank0
  9279  0C7B  0020               	clrf	(setCursorPosition@iPosition)
  9280  0C7C  01B5               	movlw	low(03h)
  9281  0C7D  3003               	fcall	_setCursorPosition
  9282  0C7E  3188  20FC  318C   	line	164
  9283                           ;LCD_hd44780u_qy_2004a.c: 164:       break;
  9284                           	goto	l5332
  9285  0C81  2CA4               	line	165
  9286                           ;LCD_hd44780u_qy_2004a.c: 165:     case 80:
  9287                           	
  9288                           l291:	
  9289  0C82                     	line	166
  9290                           	
  9291                           l5324:	
  9292  0C82                     ;LCD_hd44780u_qy_2004a.c: 166:       setCursorPosition(0,0);
  9293                           	movlb 0	; select bank0
  9294  0C82  0020               	clrf	(setCursorPosition@iPosition)
  9295  0C83  01B5               	movlw	low(0)
  9296  0C84  3000               	fcall	_setCursorPosition
  9297  0C85  3188  20FC  318C   	line	167
  9298                           	
  9299                           l5326:	
  9300  0C88                     ;LCD_hd44780u_qy_2004a.c: 167:       mWritingPosition = 0;
  9301                           	movlb 0	; select bank0
  9302  0C88  0020               	clrf	(_mWritingPosition)
  9303  0C89  01DA               	line	168
  9304                           ;LCD_hd44780u_qy_2004a.c: 168:       break;
  9305                           	goto	l5332
  9306  0C8A  2CA4               	line	169
  9307                           ;LCD_hd44780u_qy_2004a.c: 169:     default:
  9308                           	
  9309                           l292:	
  9310  0C8B                     	line	170
  9311                           ;LCD_hd44780u_qy_2004a.c: 170:       break;
  9312                           	goto	l5332
  9313  0C8B  2CA4               	line	171
  9314                           	
  9315                           l5328:	
  9316  0C8C                     ;LCD_hd44780u_qy_2004a.c: 171:   }
  9317                           	goto	l5332
  9318  0C8C  2CA4               	
  9319                           l286:	
  9320  0C8D                     	
  9321                           l5330:	
  9322  0C8D                     	movlb 0	; select bank0
  9323  0C8D  0020               	movf	(_mWritingPosition),w
  9324  0C8E  085A               	movwf	(??_writeTxtChk+0)+0
  9325  0C8F  00BA               	clrf	(??_writeTxtChk+0)+0+1
  9326  0C90  01BB               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9327                           ; Switch size 1, requested type "space"
  9328                           ; Number of cases is 1, Range of values is 0 to 0
  9329                           ; switch strategies available:
  9330                           ; Name         Instructions Cycles
  9331                           ; simple_byte            4     3 (average)
  9332                           ; direct_byte            8     6 (fixed)
  9333                           ; jumptable            260     6 (fixed)
  9334                           ;	Chosen strategy is simple_byte
  9335                           
  9336                           	movf 1+(??_writeTxtChk+0)+0,w
  9337  0C91  083B               	opt asmopt_push
  9338                           	opt asmopt_off
  9339                           	xorlw	0^0	; case 0
  9340  0C92  3A00               	skipnz
  9341  0C93  1903               	goto	l6866
  9342  0C94  2C96               	goto	l5332
  9343  0C95  2CA4               	opt asmopt_pop
  9344                           	
  9345                           l6866:	
  9346  0C96                     ; Switch size 1, requested type "space"
  9347                           ; Number of cases is 4, Range of values is 20 to 80
  9348                           ; switch strategies available:
  9349                           ; Name         Instructions Cycles
  9350                           ; simple_byte           13     7 (average)
  9351                           ; direct_byte          131     9 (fixed)
  9352                           ; jumptable            263     9 (fixed)
  9353                           ;	Chosen strategy is simple_byte
  9354                           
  9355                           	movf 0+(??_writeTxtChk+0)+0,w
  9356  0C96  083A               	opt asmopt_push
  9357                           	opt asmopt_off
  9358                           	xorlw	20^0	; case 20
  9359  0C97  3A14               	skipnz
  9360  0C98  1903               	goto	l5318
  9361  0C99  2C6D               	xorlw	40^20	; case 40
  9362  0C9A  3A3C               	skipnz
  9363  0C9B  1903               	goto	l5320
  9364  0C9C  2C74               	xorlw	60^40	; case 60
  9365  0C9D  3A14               	skipnz
  9366  0C9E  1903               	goto	l5322
  9367  0C9F  2C7B               	xorlw	80^60	; case 80
  9368  0CA0  3A6C               	skipnz
  9369  0CA1  1903               	goto	l5324
  9370  0CA2  2C82               	goto	l5332
  9371  0CA3  2CA4               	opt asmopt_pop
  9372                           
  9373                           	
  9374                           l288:	
  9375  0CA4                     	line	172
  9376                           	
  9377                           l5332:	
  9378  0CA4                     ;LCD_hd44780u_qy_2004a.c: 172:   waitLCDBusy();
  9379                           	fcall	_waitLCDBusy
  9380  0CA4  3194  24E2  318C   	line	173
  9381                           	
  9382                           l5334:	
  9383  0CA7                     ;LCD_hd44780u_qy_2004a.c: 173:   SetToSendDataToLCD();
  9384                           	fcall	_SetToSendDataToLCD
  9385  0CA7  3192  22E3  318C   	line	174
  9386                           	
  9387                           l5336:	
  9388  0CAA                     ;LCD_hd44780u_qy_2004a.c: 174:   PORTAbits.RA0 = 1;
  9389                           	movlb 0	; select bank0
  9390  0CAA  0020               	bsf	(12),0	;volatile
  9391  0CAB  140C               	line	175
  9392                           	
  9393                           l5338:	
  9394  0CAC                     ;LCD_hd44780u_qy_2004a.c: 175:   PORTAbits.RA1 = 0;
  9395                           	bcf	(12),1	;volatile
  9396  0CAC  108C               	line	176
  9397                           	
  9398                           l5340:	
  9399  0CAD                     ;LCD_hd44780u_qy_2004a.c: 176:   setData(iOpCode >> 4);
  9400                           	movf	(writeTxtChk@iOpCode),w
  9401  0CAD  083C               	movwf	(??_writeTxtChk+0)+0
  9402  0CAE  00BA               	movlw	04h
  9403  0CAF  3004               u3755:
  9404  0CB0                     	lsrf	(??_writeTxtChk+0)+0,f
  9405  0CB0  36BA               	decfsz	wreg,f
  9406  0CB1  0B89               	goto	u3755
  9407  0CB2  2CB0               	movf	0+(??_writeTxtChk+0)+0,w
  9408  0CB3  083A               	fcall	_setData
  9409  0CB4  3196  261F  318C   	line	177
  9410                           	
  9411                           l5342:	
  9412  0CB7                     ;LCD_hd44780u_qy_2004a.c: 177:   setData(iOpCode);
  9413                           	movlb 0	; select bank0
  9414  0CB7  0020               	movf	(writeTxtChk@iOpCode),w
  9415  0CB8  083C               	fcall	_setData
  9416  0CB9  3196  261F  318C   	line	178
  9417                           	
  9418                           l5344:	
  9419  0CBC                     ;LCD_hd44780u_qy_2004a.c: 178:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  9420                           		opt asmopt_push
  9421                           	opt asmopt_off
  9422                           	nop2	;2 cycle nop
  9423  0CBC  3200               	nop2	;2 cycle nop
  9424  0CBD  3200               	opt asmopt_pop
  9425                           
  9426                           	line	179
  9427                           	
  9428                           l5346:	
  9429  0CBE                     ;LCD_hd44780u_qy_2004a.c: 179:   mWritingPosition++;
  9430                           	movlw	low(01h)
  9431  0CBE  3001               	movlb 0	; select bank0
  9432  0CBF  0020               	movwf	(??_writeTxtChk+0)+0
  9433  0CC0  00BA               	movf	(??_writeTxtChk+0)+0,w
  9434  0CC1  083A               	addwf	(_mWritingPosition),f
  9435  0CC2  07DA               	line	180
  9436                           	
  9437                           l278:	
  9438  0CC3                     	return
  9439  0CC3  0008               	opt stack 0
  9440                           GLOBAL	__end_of_writeTxtChk
  9441                           	__end_of_writeTxtChk:
  9442  0CC4                     	signat	_writeTxtChk,4217
  9443                           	global	_setCursorPosition
  9444                           
  9445 ;; *************** function _setCursorPosition *****************
  9446 ;; Defined at:
  9447 ;;		line 304 in file "LCD_hd44780u_qy_2004a.c"
  9448 ;; Parameters:    Size  Location     Type
  9449 ;;  iLine           1    wreg     unsigned char 
  9450 ;;  iPosition       1   21[BANK0 ] unsigned char 
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;  iLine           1   24[BANK0 ] unsigned char 
  9453 ;;  wLCDIndex       1   25[BANK0 ] unsigned char 
  9454 ;; Return value:  Size  Location     Type
  9455 ;;                  1    wreg      void 
  9456 ;; Registers used:
  9457 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9458 ;; Tracked objects:
  9459 ;;		On entry : 0/0
  9460 ;;		On exit  : 0/0
  9461 ;;		Unchanged: 0/0
  9462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9463 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9464 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9465 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9466 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  9467 ;;Total ram usage:        5 bytes
  9468 ;; Hardware stack levels used:    1
  9469 ;; Hardware stack levels required when called:    8
  9470 ;; This function calls:
  9471 ;;		_SetToSendDataToLCD
  9472 ;;		_setData
  9473 ;;		_waitLCDBusy
  9474 ;; This function is called by:
  9475 ;;		_main
  9476 ;;		_writeTxtChk
  9477 ;; This function uses a non-reentrant model
  9478 ;;
  9479                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  9480                           	line	304
  9481                           global __ptext23
  9482                           __ptext23:	;psect for function _setCursorPosition
  9483  08FC                     psect	text23
  9484                           	file	"LCD_hd44780u_qy_2004a.c"
  9485                           	line	304
  9486                           	global	__size_of_setCursorPosition
  9487                           	__size_of_setCursorPosition	equ	__end_of_setCursorPosition-_setCursorPosition
  9488  0060                     	
  9489                           _setCursorPosition:	
  9490  08FC                     ;incstack = 0
  9491                           	opt	stack 7
  9492                           ; Regs used in _setCursorPosition: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9493                           ;setCursorPosition@iLine stored from wreg
  9494                           	movlb 0	; select bank0
  9495  08FC  0020               	movwf	(setCursorPosition@iLine)
  9496  08FD  00B8               	line	306
  9497                           	
  9498                           l5156:	
  9499  08FE                     ;LCD_hd44780u_qy_2004a.c: 304: void setCursorPosition(char iLine, char iPosition);LCD_hd
                                 44780u_qy_2004a.c: 305: {;LCD_hd44780u_qy_2004a.c: 306:   char wLCDIndex=0;
  9500                           	clrf	(setCursorPosition@wLCDIndex)
  9501  08FE  01B9               	line	308
  9502                           ;LCD_hd44780u_qy_2004a.c: 308:   switch(iLine)
  9503                           	goto	l5168
  9504  08FF  292C               	line	310
  9505                           ;LCD_hd44780u_qy_2004a.c: 309:   {;LCD_hd44780u_qy_2004a.c: 310:       case 0:
  9506                           	
  9507                           l356:	
  9508  0900                     	line	311
  9509                           	
  9510                           l5158:	
  9511  0900                     ;LCD_hd44780u_qy_2004a.c: 311:           wLCDIndex = 0x00 + iPosition;
  9512                           	movf	(setCursorPosition@iPosition),w
  9513  0900  0835               	movwf	(??_setCursorPosition+0)+0
  9514  0901  00B6               	movf	(??_setCursorPosition+0)+0,w
  9515  0902  0836               	movwf	(setCursorPosition@wLCDIndex)
  9516  0903  00B9               	line	312
  9517                           ;LCD_hd44780u_qy_2004a.c: 312:           mWritingPosition = iPosition;
  9518                           	movf	(setCursorPosition@iPosition),w
  9519  0904  0835               	movwf	(??_setCursorPosition+0)+0
  9520  0905  00B6               	movf	(??_setCursorPosition+0)+0,w
  9521  0906  0836               	movwf	(_mWritingPosition)
  9522  0907  00DA               	line	313
  9523                           ;LCD_hd44780u_qy_2004a.c: 313:           break;
  9524                           	goto	l5170
  9525  0908  2942               	line	314
  9526                           ;LCD_hd44780u_qy_2004a.c: 314:       case 1:
  9527                           	
  9528                           l358:	
  9529  0909                     	line	315
  9530                           	
  9531                           l5160:	
  9532  0909                     ;LCD_hd44780u_qy_2004a.c: 315:           wLCDIndex = 0x40 + iPosition;
  9533                           	movf	(setCursorPosition@iPosition),w
  9534  0909  0835               	addlw	040h
  9535  090A  3E40               	movwf	(??_setCursorPosition+0)+0
  9536  090B  00B6               	movf	(??_setCursorPosition+0)+0,w
  9537  090C  0836               	movwf	(setCursorPosition@wLCDIndex)
  9538  090D  00B9               	line	316
  9539                           ;LCD_hd44780u_qy_2004a.c: 316:           mWritingPosition = 20 + iPosition;
  9540                           	movf	(setCursorPosition@iPosition),w
  9541  090E  0835               	addlw	014h
  9542  090F  3E14               	movwf	(??_setCursorPosition+0)+0
  9543  0910  00B6               	movf	(??_setCursorPosition+0)+0,w
  9544  0911  0836               	movwf	(_mWritingPosition)
  9545  0912  00DA               	line	317
  9546                           ;LCD_hd44780u_qy_2004a.c: 317:           break;
  9547                           	goto	l5170
  9548  0913  2942               	line	318
  9549                           ;LCD_hd44780u_qy_2004a.c: 318:       case 2:
  9550                           	
  9551                           l359:	
  9552  0914                     	line	319
  9553                           	
  9554                           l5162:	
  9555  0914                     ;LCD_hd44780u_qy_2004a.c: 319:           wLCDIndex = 0x14 + iPosition;
  9556                           	movf	(setCursorPosition@iPosition),w
  9557  0914  0835               	addlw	014h
  9558  0915  3E14               	movwf	(??_setCursorPosition+0)+0
  9559  0916  00B6               	movf	(??_setCursorPosition+0)+0,w
  9560  0917  0836               	movwf	(setCursorPosition@wLCDIndex)
  9561  0918  00B9               	line	320
  9562                           ;LCD_hd44780u_qy_2004a.c: 320:           mWritingPosition = 40 + iPosition;
  9563                           	movf	(setCursorPosition@iPosition),w
  9564  0919  0835               	addlw	028h
  9565  091A  3E28               	movwf	(??_setCursorPosition+0)+0
  9566  091B  00B6               	movf	(??_setCursorPosition+0)+0,w
  9567  091C  0836               	movwf	(_mWritingPosition)
  9568  091D  00DA               	line	321
  9569                           ;LCD_hd44780u_qy_2004a.c: 321:           break;
  9570                           	goto	l5170
  9571  091E  2942               	line	322
  9572                           ;LCD_hd44780u_qy_2004a.c: 322:       case 3:
  9573                           	
  9574                           l360:	
  9575  091F                     	line	323
  9576                           	
  9577                           l5164:	
  9578  091F                     ;LCD_hd44780u_qy_2004a.c: 323:           wLCDIndex = 0x54 + iPosition;
  9579                           	movf	(setCursorPosition@iPosition),w
  9580  091F  0835               	addlw	054h
  9581  0920  3E54               	movwf	(??_setCursorPosition+0)+0
  9582  0921  00B6               	movf	(??_setCursorPosition+0)+0,w
  9583  0922  0836               	movwf	(setCursorPosition@wLCDIndex)
  9584  0923  00B9               	line	324
  9585                           ;LCD_hd44780u_qy_2004a.c: 324:           mWritingPosition = 60 + iPosition;
  9586                           	movf	(setCursorPosition@iPosition),w
  9587  0924  0835               	addlw	03Ch
  9588  0925  3E3C               	movwf	(??_setCursorPosition+0)+0
  9589  0926  00B6               	movf	(??_setCursorPosition+0)+0,w
  9590  0927  0836               	movwf	(_mWritingPosition)
  9591  0928  00DA               	line	325
  9592                           ;LCD_hd44780u_qy_2004a.c: 325:           break;
  9593                           	goto	l5170
  9594  0929  2942               	line	326
  9595                           ;LCD_hd44780u_qy_2004a.c: 326:       default:
  9596                           	
  9597                           l361:	
  9598  092A                     	line	327
  9599                           ;LCD_hd44780u_qy_2004a.c: 327:       break;
  9600                           	goto	l5170
  9601  092A  2942               	line	328
  9602                           	
  9603                           l5166:	
  9604  092B                     ;LCD_hd44780u_qy_2004a.c: 328:   }
  9605                           	goto	l5170
  9606  092B  2942               	
  9607                           l355:	
  9608  092C                     	
  9609                           l5168:	
  9610  092C                     	movf	(setCursorPosition@iLine),w
  9611  092C  0838               	movwf	(??_setCursorPosition+0)+0
  9612  092D  00B6               	clrf	(??_setCursorPosition+0)+0+1
  9613  092E  01B7               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9614                           ; Switch size 1, requested type "space"
  9615                           ; Number of cases is 1, Range of values is 0 to 0
  9616                           ; switch strategies available:
  9617                           ; Name         Instructions Cycles
  9618                           ; simple_byte            4     3 (average)
  9619                           ; direct_byte            8     6 (fixed)
  9620                           ; jumptable            260     6 (fixed)
  9621                           ;	Chosen strategy is simple_byte
  9622                           
  9623                           	movf 1+(??_setCursorPosition+0)+0,w
  9624  092F  0837               	opt asmopt_push
  9625                           	opt asmopt_off
  9626                           	xorlw	0^0	; case 0
  9627  0930  3A00               	skipnz
  9628  0931  1903               	goto	l6868
  9629  0932  2934               	goto	l5170
  9630  0933  2942               	opt asmopt_pop
  9631                           	
  9632                           l6868:	
  9633  0934                     ; Switch size 1, requested type "space"
  9634                           ; Number of cases is 4, Range of values is 0 to 3
  9635                           ; switch strategies available:
  9636                           ; Name         Instructions Cycles
  9637                           ; simple_byte           13     7 (average)
  9638                           ; direct_byte           14     6 (fixed)
  9639                           ; jumptable            260     6 (fixed)
  9640                           ;	Chosen strategy is simple_byte
  9641                           
  9642                           	movf 0+(??_setCursorPosition+0)+0,w
  9643  0934  0836               	opt asmopt_push
  9644                           	opt asmopt_off
  9645                           	xorlw	0^0	; case 0
  9646  0935  3A00               	skipnz
  9647  0936  1903               	goto	l5158
  9648  0937  2900               	xorlw	1^0	; case 1
  9649  0938  3A01               	skipnz
  9650  0939  1903               	goto	l5160
  9651  093A  2909               	xorlw	2^1	; case 2
  9652  093B  3A03               	skipnz
  9653  093C  1903               	goto	l5162
  9654  093D  2914               	xorlw	3^2	; case 3
  9655  093E  3A01               	skipnz
  9656  093F  1903               	goto	l5164
  9657  0940  291F               	goto	l5170
  9658  0941  2942               	opt asmopt_pop
  9659                           
  9660                           	
  9661                           l357:	
  9662  0942                     	line	330
  9663                           	
  9664                           l5170:	
  9665  0942                     ;LCD_hd44780u_qy_2004a.c: 330:   waitLCDBusy();
  9666                           	fcall	_waitLCDBusy
  9667  0942  3194  24E2  3188   	line	332
  9668                           	
  9669                           l5172:	
  9670  0945                     ;LCD_hd44780u_qy_2004a.c: 332:   SetToSendDataToLCD();
  9671                           	fcall	_SetToSendDataToLCD
  9672  0945  3192  22E3  3188   	line	333
  9673                           	
  9674                           l5174:	
  9675  0948                     ;LCD_hd44780u_qy_2004a.c: 333:   PORTAbits.RA0 = 0;
  9676                           	movlb 0	; select bank0
  9677  0948  0020               	bcf	(12),0	;volatile
  9678  0949  100C               	line	334
  9679                           	
  9680                           l5176:	
  9681  094A                     ;LCD_hd44780u_qy_2004a.c: 334:   PORTAbits.RA1 = 0;
  9682                           	bcf	(12),1	;volatile
  9683  094A  108C               	line	335
  9684                           	
  9685                           l5178:	
  9686  094B                     ;LCD_hd44780u_qy_2004a.c: 335:   setData((wLCDIndex >> 4) | 0x8 );
  9687                           	movf	(setCursorPosition@wLCDIndex),w
  9688  094B  0839               	movwf	(??_setCursorPosition+0)+0
  9689  094C  00B6               	movlw	04h
  9690  094D  3004               u3505:
  9691  094E                     	lsrf	(??_setCursorPosition+0)+0,f
  9692  094E  36B6               	decfsz	wreg,f
  9693  094F  0B89               	goto	u3505
  9694  0950  294E               	movf	0+(??_setCursorPosition+0)+0,w
  9695  0951  0836               	iorlw	08h
  9696  0952  3808               	fcall	_setData
  9697  0953  3196  261F  3188   	line	336
  9698                           	
  9699                           l5180:	
  9700  0956                     ;LCD_hd44780u_qy_2004a.c: 336:   setData(wLCDIndex);
  9701                           	movlb 0	; select bank0
  9702  0956  0020               	movf	(setCursorPosition@wLCDIndex),w
  9703  0957  0839               	fcall	_setData
  9704  0958  3196  261F  3188   	line	338
  9705                           	
  9706                           l362:	
  9707  095B                     	return
  9708  095B  0008               	opt stack 0
  9709                           GLOBAL	__end_of_setCursorPosition
  9710                           	__end_of_setCursorPosition:
  9711  095C                     	signat	_setCursorPosition,8313
  9712                           	global	_waitLCDBusy
  9713                           
  9714 ;; *************** function _waitLCDBusy *****************
  9715 ;; Defined at:
  9716 ;;		line 212 in file "LCD_hd44780u_qy_2004a.c"
  9717 ;; Parameters:    Size  Location     Type
  9718 ;;		None
  9719 ;; Auto vars:     Size  Location     Type
  9720 ;;  busyFlag        2   19[BANK0 ] int 
  9721 ;; Return value:  Size  Location     Type
  9722 ;;                  1    wreg      void 
  9723 ;; Registers used:
  9724 ;;		wreg, status,2, status,0, pclath, cstack
  9725 ;; Tracked objects:
  9726 ;;		On entry : 0/0
  9727 ;;		On exit  : 0/0
  9728 ;;		Unchanged: 0/0
  9729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9731 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9732 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  9733 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  9734 ;;Total ram usage:        5 bytes
  9735 ;; Hardware stack levels used:    1
  9736 ;; Hardware stack levels required when called:    7
  9737 ;; This function calls:
  9738 ;;		_SetToReadDataFromLCD
  9739 ;; This function is called by:
  9740 ;;		_writeTxtChk
  9741 ;;		_writeInsChk
  9742 ;;		_setCursorPosition
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  9746                           	line	212
  9747                           global __ptext24
  9748                           __ptext24:	;psect for function _waitLCDBusy
  9749  14E2                     psect	text24
  9750                           	file	"LCD_hd44780u_qy_2004a.c"
  9751                           	line	212
  9752                           	global	__size_of_waitLCDBusy
  9753                           	__size_of_waitLCDBusy	equ	__end_of_waitLCDBusy-_waitLCDBusy
  9754  002D                     	
  9755                           _waitLCDBusy:	
  9756  14E2                     ;incstack = 0
  9757                           	opt	stack 6
  9758                           ; Regs used in _waitLCDBusy: [wreg+status,2+status,0+pclath+cstack]
  9759                           	line	214
  9760                           	
  9761                           l5128:	
  9762  14E2                     ;LCD_hd44780u_qy_2004a.c: 214:   PORTAbits.RA0 = 0;
  9763                           	movlb 0	; select bank0
  9764  14E2  0020               	bcf	(12),0	;volatile
  9765  14E3  100C               	line	215
  9766                           ;LCD_hd44780u_qy_2004a.c: 215:   PORTAbits.RA1 = 1;
  9767                           	bsf	(12),1	;volatile
  9768  14E4  148C               	line	217
  9769                           	
  9770                           l5130:	
  9771  14E5                     ;LCD_hd44780u_qy_2004a.c: 217:   SetToReadDataFromLCD();
  9772                           	fcall	_SetToReadDataFromLCD
  9773  14E5  3192  22E9  3194   	line	219
  9774                           	
  9775                           l5132:	
  9776  14E8                     ;LCD_hd44780u_qy_2004a.c: 219:   int busyFlag = 1;
  9777                           	movlw	01h
  9778  14E8  3001               	movlb 0	; select bank0
  9779  14E9  0020               	movwf	(waitLCDBusy@busyFlag)
  9780  14EA  00B3               	movlw	0
  9781  14EB  3000               	movwf	((waitLCDBusy@busyFlag))+1
  9782  14EC  00B4               	line	220
  9783                           ;LCD_hd44780u_qy_2004a.c: 220:   while(busyFlag == 1)
  9784                           	goto	l307
  9785  14ED  2D06               	
  9786                           l308:	
  9787  14EE                     	line	223
  9788                           ;LCD_hd44780u_qy_2004a.c: 221:   {;LCD_hd44780u_qy_2004a.c: 223:     PORTAbits.RA2 = 1;

  9789                           	bsf	(12),2	;volatile
  9790  14EE  150C               	line	224
  9791                           ;LCD_hd44780u_qy_2004a.c: 224:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  9792                           		opt asmopt_push
  9793                           	opt asmopt_off
  9794                           	nop2	;2 cycle nop
  9795  14EF  3200               	nop2	;2 cycle nop
  9796  14F0  3200               	opt asmopt_pop
  9797                           
  9798                           	line	225
  9799                           	
  9800                           l5134:	
  9801  14F1                     ;LCD_hd44780u_qy_2004a.c: 225:     busyFlag = PORTAbits.RA3;
  9802                           	movlb 0	; select bank0
  9803  14F1  0020               	rrf	(12),w	;volatile
  9804  14F2  0C0C               	movwf	(??_waitLCDBusy+0)+0
  9805  14F3  00B0               	rrf	(??_waitLCDBusy+0)+0,f
  9806  14F4  0CB0               	rrf	(??_waitLCDBusy+0)+0,w
  9807  14F5  0C30               	andlw	(1<<1)-1
  9808  14F6  3901               	movwf	(??_waitLCDBusy+1)+0
  9809  14F7  00B1               	clrf	(??_waitLCDBusy+1)+0+1
  9810  14F8  01B2               	movf	0+(??_waitLCDBusy+1)+0,w
  9811  14F9  0831               	movwf	(waitLCDBusy@busyFlag)
  9812  14FA  00B3               	movf	1+(??_waitLCDBusy+1)+0,w
  9813  14FB  0832               	movwf	(waitLCDBusy@busyFlag+1)
  9814  14FC  00B4               	line	226
  9815                           	
  9816                           l5136:	
  9817  14FD                     ;LCD_hd44780u_qy_2004a.c: 226:     PORTAbits.RA2 = 0;
  9818                           	bcf	(12),2	;volatile
  9819  14FD  110C               	line	227
  9820                           	
  9821                           l5138:	
  9822  14FE                     ;LCD_hd44780u_qy_2004a.c: 227:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  9823                           		opt asmopt_push
  9824                           	opt asmopt_off
  9825                           	nop2	;2 cycle nop
  9826  14FE  3200               	nop2	;2 cycle nop
  9827  14FF  3200               	nop2	;2 cycle nop
  9828  1500  3200               	nop2	;2 cycle nop
  9829  1501  3200               	opt asmopt_pop
  9830                           
  9831                           	line	229
  9832                           	
  9833                           l5140:	
  9834  1502                     ;LCD_hd44780u_qy_2004a.c: 229:     PORTAbits.RA2 = 1;
  9835                           	movlb 0	; select bank0
  9836  1502  0020               	bsf	(12),2	;volatile
  9837  1503  150C               	line	230
  9838                           	
  9839                           l5142:	
  9840  1504                     ;LCD_hd44780u_qy_2004a.c: 230:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  9841                           		opt asmopt_push
  9842                           	opt asmopt_off
  9843                           	nop2	;2 cycle nop
  9844  1504  3200               	nop2	;2 cycle nop
  9845  1505  3200               	opt asmopt_pop
  9846                           
  9847                           	line	231
  9848                           ;LCD_hd44780u_qy_2004a.c: 231:   }
  9849                           	
  9850                           l307:	
  9851  1506                     	line	220
  9852                           ;LCD_hd44780u_qy_2004a.c: 220:   while(busyFlag == 1)
  9853                           	movlb 0	; select bank0
  9854  1506  0020               		decf	((waitLCDBusy@busyFlag)),w
  9855  1507  0333               iorwf	((waitLCDBusy@busyFlag+1)),w
  9856  1508  0434               	btfsc	status,2
  9857  1509  1903               	goto	u3481
  9858  150A  2D0C               	goto	u3480
  9859  150B  2D0D               u3481:
  9860  150C                     	goto	l308
  9861  150C  2CEE               u3480:
  9862  150D                     	goto	l310
  9863  150D  2D0E               	
  9864                           l309:	
  9865  150E                     	line	232
  9866                           	
  9867                           l310:	
  9868  150E                     	return
  9869  150E  0008               	opt stack 0
  9870                           GLOBAL	__end_of_waitLCDBusy
  9871                           	__end_of_waitLCDBusy:
  9872  150F                     	signat	_waitLCDBusy,89
  9873                           	global	_SetToReadDataFromLCD
  9874                           
  9875 ;; *************** function _SetToReadDataFromLCD *****************
  9876 ;; Defined at:
  9877 ;;		line 197 in file "LCD_hd44780u_qy_2004a.c"
  9878 ;; Parameters:    Size  Location     Type
  9879 ;;		None
  9880 ;; Auto vars:     Size  Location     Type
  9881 ;;		None
  9882 ;; Return value:  Size  Location     Type
  9883 ;;                  1    wreg      void 
  9884 ;; Registers used:
  9885 ;;		None
  9886 ;; Tracked objects:
  9887 ;;		On entry : 0/0
  9888 ;;		On exit  : 0/0
  9889 ;;		Unchanged: 0/0
  9890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9895 ;;Total ram usage:        0 bytes
  9896 ;; Hardware stack levels used:    1
  9897 ;; Hardware stack levels required when called:    6
  9898 ;; This function calls:
  9899 ;;		Nothing
  9900 ;; This function is called by:
  9901 ;;		_waitLCDBusy
  9902 ;; This function uses a non-reentrant model
  9903 ;;
  9904                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  9905                           	line	197
  9906                           global __ptext25
  9907                           __ptext25:	;psect for function _SetToReadDataFromLCD
  9908  12E9                     psect	text25
  9909                           	file	"LCD_hd44780u_qy_2004a.c"
  9910                           	line	197
  9911                           	global	__size_of_SetToReadDataFromLCD
  9912                           	__size_of_SetToReadDataFromLCD	equ	__end_of_SetToReadDataFromLCD-_SetToReadDataFromLCD

  9913  0006                     	
  9914                           _SetToReadDataFromLCD:	
  9915  12E9                     ;incstack = 0
  9916                           	opt	stack 6
  9917                           ; Regs used in _SetToReadDataFromLCD: []
  9918                           	line	199
  9919                           	
  9920                           l5114:	
  9921  12E9                     ;LCD_hd44780u_qy_2004a.c: 199:   TRISAbits.TRISA3 = 1;
  9922                           	movlb 1	; select bank1
  9923  12E9  0021               	bsf	(140)^080h,3	;volatile
  9924  12EA  158C               	line	200
  9925                           ;LCD_hd44780u_qy_2004a.c: 200:   TRISCbits.TRISC2 = 1;
  9926                           	bsf	(142)^080h,2	;volatile
  9927  12EB  150E               	line	201
  9928                           ;LCD_hd44780u_qy_2004a.c: 201:   TRISCbits.TRISC1 = 1;
  9929                           	bsf	(142)^080h,1	;volatile
  9930  12EC  148E               	line	202
  9931                           ;LCD_hd44780u_qy_2004a.c: 202:   TRISCbits.TRISC0 = 1;
  9932                           	bsf	(142)^080h,0	;volatile
  9933  12ED  140E               	line	203
  9934                           	
  9935                           l301:	
  9936  12EE                     	return
  9937  12EE  0008               	opt stack 0
  9938                           GLOBAL	__end_of_SetToReadDataFromLCD
  9939                           	__end_of_SetToReadDataFromLCD:
  9940  12EF                     	signat	_SetToReadDataFromLCD,89
  9941                           	global	_setData
  9942                           
  9943 ;; *************** function _setData *****************
  9944 ;; Defined at:
  9945 ;;		line 113 in file "LCD_hd44780u_qy_2004a.c"
  9946 ;; Parameters:    Size  Location     Type
  9947 ;;  iValue          1    wreg     unsigned char 
  9948 ;; Auto vars:     Size  Location     Type
  9949 ;;  iValue          1   18[BANK0 ] unsigned char 
  9950 ;; Return value:  Size  Location     Type
  9951 ;;                  1    wreg      void 
  9952 ;; Registers used:
  9953 ;;		wreg, status,2, status,0
  9954 ;; Tracked objects:
  9955 ;;		On entry : 0/0
  9956 ;;		On exit  : 0/0
  9957 ;;		Unchanged: 0/0
  9958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9960 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9961 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9962 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  9963 ;;Total ram usage:        3 bytes
  9964 ;; Hardware stack levels used:    1
  9965 ;; Hardware stack levels required when called:    6
  9966 ;; This function calls:
  9967 ;;		Nothing
  9968 ;; This function is called by:
  9969 ;;		_initLCD
  9970 ;;		_writeTxtChk
  9971 ;;		_writeInsNoChk
  9972 ;;		_setCursorPosition
  9973 ;; This function uses a non-reentrant model
  9974 ;;
  9975                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  9976                           	line	113
  9977                           global __ptext26
  9978                           __ptext26:	;psect for function _setData
  9979  161F                     psect	text26
  9980                           	file	"LCD_hd44780u_qy_2004a.c"
  9981                           	line	113
  9982                           	global	__size_of_setData
  9983                           	__size_of_setData	equ	__end_of_setData-_setData
  9984  003C                     	
  9985                           _setData:	
  9986  161F                     ;incstack = 0
  9987                           	opt	stack 6
  9988                           ; Regs used in _setData: [wreg+status,2+status,0]
  9989                           ;setData@iValue stored from wreg
  9990                           	movlb 0	; select bank0
  9991  161F  0020               	movwf	(setData@iValue)
  9992  1620  00B2               	line	115
  9993                           	
  9994                           l5116:	
  9995  1621                     ;LCD_hd44780u_qy_2004a.c: 113: void setData(char iValue);LCD_hd44780u_qy_2004a.c: 114: {
                                 ;LCD_hd44780u_qy_2004a.c: 115:   PORTAbits.RA2 = 1;
  9996                           	bsf	(12),2	;volatile
  9997  1621  150C               	line	116
  9998                           	
  9999                           l5118:	
 10000  1622                     ;LCD_hd44780u_qy_2004a.c: 116:   PORTAbits.RA3 = (iValue & 0x8) >> 3;
 10001                           	movf	(setData@iValue),w
 10002  1622  0832               	movwf	(??_setData+0)+0
 10003  1623  00B0               	movlw	03h
 10004  1624  3003               u3465:
 10005  1625                     	lsrf	(??_setData+0)+0,f
 10006  1625  36B0               	decfsz	wreg,f
 10007  1626  0B89               	goto	u3465
 10008  1627  2E25               	movf	0+(??_setData+0)+0,w
 10009  1628  0830               	andlw	01h
 10010  1629  3901               	movwf	(??_setData+1)+0
 10011  162A  00B1               	rlf	(??_setData+1)+0,f
 10012  162B  0DB1               	rlf	(??_setData+1)+0,f
 10013  162C  0DB1               	rlf	(??_setData+1)+0,f
 10014  162D  0DB1               	movf	(12),w	;volatile
 10015  162E  080C               	xorwf	(??_setData+1)+0,w
 10016  162F  0631               	andlw	not (((1<<1)-1)<<3)
 10017  1630  39F7               	xorwf	(??_setData+1)+0,w
 10018  1631  0631               	movwf	(12)	;volatile
 10019  1632  008C               	line	117
 10020                           ;LCD_hd44780u_qy_2004a.c: 117:   PORTCbits.RC2 = (iValue & 0x4) >> 2;
 10021                           	movf	(setData@iValue),w
 10022  1633  0832               	movwf	(??_setData+0)+0
 10023  1634  00B0               	movlw	02h
 10024  1635  3002               u3475:
 10025  1636                     	lsrf	(??_setData+0)+0,f
 10026  1636  36B0               	decfsz	wreg,f
 10027  1637  0B89               	goto	u3475
 10028  1638  2E36               	movf	0+(??_setData+0)+0,w
 10029  1639  0830               	andlw	01h
 10030  163A  3901               	movwf	(??_setData+1)+0
 10031  163B  00B1               	rlf	(??_setData+1)+0,f
 10032  163C  0DB1               	rlf	(??_setData+1)+0,f
 10033  163D  0DB1               	movf	(14),w	;volatile
 10034  163E  080E               	xorwf	(??_setData+1)+0,w
 10035  163F  0631               	andlw	not (((1<<1)-1)<<2)
 10036  1640  39FB               	xorwf	(??_setData+1)+0,w
 10037  1641  0631               	movwf	(14)	;volatile
 10038  1642  008E               	line	118
 10039                           ;LCD_hd44780u_qy_2004a.c: 118:   PORTCbits.RC1 = (iValue & 0x2) >> 1;
 10040                           	lsrf	(setData@iValue),w
 10041  1643  3632               	andlw	01h
 10042  1644  3901               	movwf	(??_setData+0)+0
 10043  1645  00B0               	rlf	(??_setData+0)+0,f
 10044  1646  0DB0               	movf	(14),w	;volatile
 10045  1647  080E               	xorwf	(??_setData+0)+0,w
 10046  1648  0630               	andlw	not (((1<<1)-1)<<1)
 10047  1649  39FD               	xorwf	(??_setData+0)+0,w
 10048  164A  0630               	movwf	(14)	;volatile
 10049  164B  008E               	line	119
 10050                           ;LCD_hd44780u_qy_2004a.c: 119:   PORTCbits.RC0 = (iValue & 0x1) ;
 10051                           	movlw	low(01h)
 10052  164C  3001               	andwf	(setData@iValue),w
 10053  164D  0532               	movwf	(??_setData+0)+0
 10054  164E  00B0               	movf	(14),w	;volatile
 10055  164F  080E               	xorwf	0+(??_setData+0)+0,w
 10056  1650  0630               	andlw	not ((1<<1)-1)
 10057  1651  39FE               	xorwf	0+(??_setData+0)+0,w
 10058  1652  0630               	movwf	(14)	;volatile
 10059  1653  008E               	line	120
 10060                           	
 10061                           l5120:	
 10062  1654                     ;LCD_hd44780u_qy_2004a.c: 120:   _delay((unsigned long)((1)*(16000000/4000000.0)));
 10063                           		opt asmopt_push
 10064                           	opt asmopt_off
 10065                           	nop2	;2 cycle nop
 10066  1654  3200               	nop2	;2 cycle nop
 10067  1655  3200               	opt asmopt_pop
 10068                           
 10069                           	line	121
 10070                           	
 10071                           l5122:	
 10072  1656                     ;LCD_hd44780u_qy_2004a.c: 121:   PORTAbits.RA2 = 0;
 10073                           	movlb 0	; select bank0
 10074  1656  0020               	bcf	(12),2	;volatile
 10075  1657  110C               	line	122
 10076                           	
 10077                           l5124:	
 10078  1658                     ;LCD_hd44780u_qy_2004a.c: 122:   _delay((unsigned long)((1)*(16000000/4000000.0)));
 10079                           		opt asmopt_push
 10080                           	opt asmopt_off
 10081                           	nop2	;2 cycle nop
 10082  1658  3200               	nop2	;2 cycle nop
 10083  1659  3200               	opt asmopt_pop
 10084                           
 10085                           	line	123
 10086                           	
 10087                           l274:	
 10088  165A                     	return
 10089  165A  0008               	opt stack 0
 10090                           GLOBAL	__end_of_setData
 10091                           	__end_of_setData:
 10092  165B                     	signat	_setData,4217
 10093                           	global	_SetToSendDataToLCD
 10094                           
 10095 ;; *************** function _SetToSendDataToLCD *****************
 10096 ;; Defined at:
 10097 ;;		line 204 in file "LCD_hd44780u_qy_2004a.c"
 10098 ;; Parameters:    Size  Location     Type
 10099 ;;		None
 10100 ;; Auto vars:     Size  Location     Type
 10101 ;;		None
 10102 ;; Return value:  Size  Location     Type
 10103 ;;                  1    wreg      void 
 10104 ;; Registers used:
 10105 ;;		None
 10106 ;; Tracked objects:
 10107 ;;		On entry : 0/0
 10108 ;;		On exit  : 0/0
 10109 ;;		Unchanged: 0/0
 10110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10115 ;;Total ram usage:        0 bytes
 10116 ;; Hardware stack levels used:    1
 10117 ;; Hardware stack levels required when called:    6
 10118 ;; This function calls:
 10119 ;;		Nothing
 10120 ;; This function is called by:
 10121 ;;		_writeTxtChk
 10122 ;;		_writeInsNoChk
 10123 ;;		_setCursorPosition
 10124 ;; This function uses a non-reentrant model
 10125 ;;
 10126                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
 10127                           	line	204
 10128                           global __ptext27
 10129                           __ptext27:	;psect for function _SetToSendDataToLCD
 10130  12E3                     psect	text27
 10131                           	file	"LCD_hd44780u_qy_2004a.c"
 10132                           	line	204
 10133                           	global	__size_of_SetToSendDataToLCD
 10134                           	__size_of_SetToSendDataToLCD	equ	__end_of_SetToSendDataToLCD-_SetToSendDataToLCD
 10135  0006                     	
 10136                           _SetToSendDataToLCD:	
 10137  12E3                     ;incstack = 0
 10138                           	opt	stack 6
 10139                           ; Regs used in _SetToSendDataToLCD: []
 10140                           	line	206
 10141                           	
 10142                           l5126:	
 10143  12E3                     ;LCD_hd44780u_qy_2004a.c: 206:   TRISAbits.TRISA3 = 0;;
 10144                           	movlb 1	; select bank1
 10145  12E3  0021               	bcf	(140)^080h,3	;volatile
 10146  12E4  118C               	line	207
 10147                           ;LCD_hd44780u_qy_2004a.c: 207:   TRISCbits.TRISC2 = 0;;
 10148                           	bcf	(142)^080h,2	;volatile
 10149  12E5  110E               	line	208
 10150                           ;LCD_hd44780u_qy_2004a.c: 208:   TRISCbits.TRISC1 = 0;;
 10151                           	bcf	(142)^080h,1	;volatile
 10152  12E6  108E               	line	209
 10153                           ;LCD_hd44780u_qy_2004a.c: 209:   TRISCbits.TRISC0 = 0;;
 10154                           	bcf	(142)^080h,0	;volatile
 10155  12E7  100E               	line	210
 10156                           	
 10157                           l304:	
 10158  12E8                     	return
 10159  12E8  0008               	opt stack 0
 10160                           GLOBAL	__end_of_SetToSendDataToLCD
 10161                           	__end_of_SetToSendDataToLCD:
 10162  12E9                     	signat	_SetToSendDataToLCD,89
 10163                           	global	_EusartGetRxBuffer
 10164                           
 10165 ;; *************** function _EusartGetRxBuffer *****************
 10166 ;; Defined at:
 10167 ;;		line 86 in file "EUSART.c"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;  oData           1    wreg     PTR unsigned char 
 10170 ;;		 -> Esp8266Entrypoint@wEspBuffer(70), 
 10171 ;;  iDataSize       1   28[BANK0 ] unsigned char 
 10172 ;;  oNbOfByteRec    1   29[BANK0 ] PTR unsigned char 
 10173 ;;		 -> Esp8266Entrypoint@wEusartNbByteReceived(1), 
 10174 ;; Auto vars:     Size  Location     Type
 10175 ;;  oData           1   32[BANK0 ] PTR unsigned char 
 10176 ;;		 -> Esp8266Entrypoint@wEspBuffer(70), 
 10177 ;; Return value:  Size  Location     Type
 10178 ;;                  1    wreg      void 
 10179 ;; Registers used:
 10180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10181 ;; Tracked objects:
 10182 ;;		On entry : 0/0
 10183 ;;		On exit  : 0/0
 10184 ;;		Unchanged: 0/0
 10185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10186 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10187 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10188 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10189 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 10190 ;;Total ram usage:        5 bytes
 10191 ;; Hardware stack levels used:    1
 10192 ;; Hardware stack levels required when called:    7
 10193 ;; This function calls:
 10194 ;;		_memcpy
 10195 ;; This function is called by:
 10196 ;;		_Esp8266Entrypoint
 10197 ;; This function uses a non-reentrant model
 10198 ;;
 10199                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
 10200                           	file	"EUSART.c"
 10201                           	line	86
 10202                           global __ptext28
 10203                           __ptext28:	;psect for function _EusartGetRxBuffer
 10204  0800                     psect	text28
 10205                           	file	"EUSART.c"
 10206                           	line	86
 10207                           	global	__size_of_EusartGetRxBuffer
 10208                           	__size_of_EusartGetRxBuffer	equ	__end_of_EusartGetRxBuffer-_EusartGetRxBuffer
 10209  0042                     	
 10210                           _EusartGetRxBuffer:	
 10211  0800                     ;incstack = 0
 10212                           	opt	stack 7
 10213                           ; Regs used in _EusartGetRxBuffer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10214                           ;EusartGetRxBuffer@oData stored from wreg
 10215                           	movlb 0	; select bank0
 10216  0800  0020               	movwf	(EusartGetRxBuffer@oData)
 10217  0801  00C0               	line	88
 10218                           	
 10219                           l5764:	
 10220  0802                     ;EUSART.c: 86: void EusartGetRxBuffer(uint8_t* oData, uint8_t iDataSize, uint8_t* oNbOfB
                                 yteReceived);EUSART.c: 87: {;EUSART.c: 88:     if(gEusartRXBufferIndex < iDataSize )
 10221                           	movf	(EusartGetRxBuffer@iDataSize),w
 10222  0802  083C               	subwf	(_gEusartRXBufferIndex),w
 10223  0803  0252               	skipnc
 10224  0804  1803               	goto	u4291
 10225  0805  2807               	goto	u4290
 10226  0806  2808               u4291:
 10227  0807                     	goto	l5770
 10228  0807  2823               u4290:
 10229  0808                     	line	90
 10230                           	
 10231                           l5766:	
 10232  0808                     ;EUSART.c: 89:     {;EUSART.c: 90:         *oNbOfByteReceived = gEusartRXBufferIndex;
 10233                           	movf	(_gEusartRXBufferIndex),w
 10234  0808  0852               	movwf	(??_EusartGetRxBuffer+0)+0
 10235  0809  00BE               	movf	(EusartGetRxBuffer@oNbOfByteReceived),w
 10236  080A  083D               	movwf	fsr1l
 10237  080B  0086               	movlw 4	; select bank8/9
 10238  080C  3004               	movwf fsr1h	
 10239  080D  0087               	
 10240                           	movf	(??_EusartGetRxBuffer+0)+0,w
 10241  080E  083E               	movwf	indf1
 10242  080F  0081               	line	91
 10243                           	
 10244                           l5768:	
 10245  0810                     ;EUSART.c: 91:          memcpy(oData,gEusartRXBuffer,gEusartRXBufferIndex);
 10246                           	movf	(EusartGetRxBuffer@oData),w
 10247  0810  0840               	movwf	(memcpy@d1)
 10248  0811  00B0               	movlw	0x4
 10249  0812  3004               
 10250                           	movwf	(memcpy@d1+1)
 10251  0813  00B1               	movlw	low(_gEusartRXBuffer)
 10252  0814  3020               	movwf	(memcpy@s1)
 10253  0815  00B2               	movlw	high(_gEusartRXBuffer)
 10254  0816  3003               	movwf	(memcpy@s1+1)
 10255  0817  00B3               	movf	(_gEusartRXBufferIndex),w
 10256  0818  0852               	movwf	(??_EusartGetRxBuffer+0)+0
 10257  0819  00BE               	clrf	(??_EusartGetRxBuffer+0)+0+1
 10258  081A  01BF               	movf	0+(??_EusartGetRxBuffer+0)+0,w
 10259  081B  083E               	movwf	(memcpy@n)
 10260  081C  00B4               	movf	1+(??_EusartGetRxBuffer+0)+0,w
 10261  081D  083F               	movwf	(memcpy@n+1)
 10262  081E  00B5               	fcall	_memcpy
 10263  081F  3195  250F  3188   	line	92
 10264                           ;EUSART.c: 92:     }
 10265                           	goto	l5774
 10266  0822  283F               	line	93
 10267                           ;EUSART.c: 93:     else
 10268                           	
 10269                           l804:	
 10270  0823                     	line	95
 10271                           	
 10272                           l5770:	
 10273  0823                     ;EUSART.c: 94:     {;EUSART.c: 95:         *oNbOfByteReceived = iDataSize;
 10274                           	movlb 0	; select bank0
 10275  0823  0020               	movf	(EusartGetRxBuffer@iDataSize),w
 10276  0824  083C               	movwf	(??_EusartGetRxBuffer+0)+0
 10277  0825  00BE               	movf	(EusartGetRxBuffer@oNbOfByteReceived),w
 10278  0826  083D               	movwf	fsr1l
 10279  0827  0086               	movlw 4	; select bank8/9
 10280  0828  3004               	movwf fsr1h	
 10281  0829  0087               	
 10282                           	movf	(??_EusartGetRxBuffer+0)+0,w
 10283  082A  083E               	movwf	indf1
 10284  082B  0081               	line	96
 10285                           	
 10286                           l5772:	
 10287  082C                     ;EUSART.c: 96:          memcpy(oData,gEusartRXBuffer,iDataSize);
 10288                           	movf	(EusartGetRxBuffer@oData),w
 10289  082C  0840               	movwf	(memcpy@d1)
 10290  082D  00B0               	movlw	0x4
 10291  082E  3004               
 10292                           	movwf	(memcpy@d1+1)
 10293  082F  00B1               	movlw	low(_gEusartRXBuffer)
 10294  0830  3020               	movwf	(memcpy@s1)
 10295  0831  00B2               	movlw	high(_gEusartRXBuffer)
 10296  0832  3003               	movwf	(memcpy@s1+1)
 10297  0833  00B3               	movf	(EusartGetRxBuffer@iDataSize),w
 10298  0834  083C               	movwf	(??_EusartGetRxBuffer+0)+0
 10299  0835  00BE               	clrf	(??_EusartGetRxBuffer+0)+0+1
 10300  0836  01BF               	movf	0+(??_EusartGetRxBuffer+0)+0,w
 10301  0837  083E               	movwf	(memcpy@n)
 10302  0838  00B4               	movf	1+(??_EusartGetRxBuffer+0)+0,w
 10303  0839  083F               	movwf	(memcpy@n+1)
 10304  083A  00B5               	fcall	_memcpy
 10305  083B  3195  250F  3188   	goto	l5774
 10306  083E  283F               	line	97
 10307                           ;EUSART.c: 97:     }
 10308                           	
 10309                           l805:	
 10310  083F                     	line	98
 10311                           	
 10312                           l5774:	
 10313  083F                     ;EUSART.c: 98:     gEusartRXBufferIndex=0;
 10314                           	movlb 0	; select bank0
 10315  083F  0020               	clrf	(_gEusartRXBufferIndex)
 10316  0840  01D2               	line	102
 10317                           	
 10318                           l806:	
 10319  0841                     	return
 10320  0841  0008               	opt stack 0
 10321                           GLOBAL	__end_of_EusartGetRxBuffer
 10322                           	__end_of_EusartGetRxBuffer:
 10323  0842                     	signat	_EusartGetRxBuffer,12409
 10324                           	global	_EusartGetNbByteReceived
 10325                           
 10326 ;; *************** function _EusartGetNbByteReceived *****************
 10327 ;; Defined at:
 10328 ;;		line 81 in file "EUSART.c"
 10329 ;; Parameters:    Size  Location     Type
 10330 ;;		None
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;		None
 10333 ;; Return value:  Size  Location     Type
 10334 ;;                  1    wreg      unsigned char 
 10335 ;; Registers used:
 10336 ;;		wreg
 10337 ;; Tracked objects:
 10338 ;;		On entry : 0/0
 10339 ;;		On exit  : 0/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10346 ;;Total ram usage:        0 bytes
 10347 ;; Hardware stack levels used:    1
 10348 ;; Hardware stack levels required when called:    6
 10349 ;; This function calls:
 10350 ;;		Nothing
 10351 ;; This function is called by:
 10352 ;;		_Esp8266Entrypoint
 10353 ;; This function uses a non-reentrant model
 10354 ;;
 10355                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
 10356                           	line	81
 10357                           global __ptext29
 10358                           __ptext29:	;psect for function _EusartGetNbByteReceived
 10359  12C5                     psect	text29
 10360                           	file	"EUSART.c"
 10361                           	line	81
 10362                           	global	__size_of_EusartGetNbByteReceived
 10363                           	__size_of_EusartGetNbByteReceived	equ	__end_of_EusartGetNbByteReceived-_EusartGetNbByte
                                 Received
 10364  0004                     	
 10365                           _EusartGetNbByteReceived:	
 10366  12C5                     ;incstack = 0
 10367                           	opt	stack 8
 10368                           ; Regs used in _EusartGetNbByteReceived: [wreg]
 10369                           	line	83
 10370                           	
 10371                           l5760:	
 10372  12C5                     ;EUSART.c: 83:     return gEusartRXBufferIndex;
 10373                           	movlb 0	; select bank0
 10374  12C5  0020               	movf	(_gEusartRXBufferIndex),w
 10375  12C6  0852               	goto	l801
 10376  12C7  2AC8               	
 10377                           l5762:	
 10378  12C8                     	line	84
 10379                           	
 10380                           l801:	
 10381  12C8                     	return
 10382  12C8  0008               	opt stack 0
 10383                           GLOBAL	__end_of_EusartGetNbByteReceived
 10384                           	__end_of_EusartGetNbByteReceived:
 10385  12C9                     	signat	_EusartGetNbByteReceived,89
 10386                           	global	_Esp8266SetNetworkParameters
 10387                           
 10388 ;; *************** function _Esp8266SetNetworkParameters *****************
 10389 ;; Defined at:
 10390 ;;		line 49 in file "ESP8266.c"
 10391 ;; Parameters:    Size  Location     Type
 10392 ;;  iWifiNetwork    2    0[BANK1 ] PTR unsigned char 
 10393 ;;		 -> STR_15(7), 
 10394 ;;  iWifiPasswor    2    2[BANK1 ] PTR unsigned char 
 10395 ;;		 -> STR_16(9), 
 10396 ;;  iChannel        1    4[BANK1 ] unsigned char 
 10397 ;;  iHidden         1    5[BANK1 ] unsigned char 
 10398 ;; Auto vars:     Size  Location     Type
 10399 ;;  wCommand       70    0[BANK2 ] unsigned char [70]
 10400 ;;  wNumber         3   70[BANK2 ] unsigned char [3]
 10401 ;;  wCommandSize    2   73[BANK2 ] int 
 10402 ;; Return value:  Size  Location     Type
 10403 ;;                  2    0[BANK1 ] int 
 10404 ;; Registers used:
 10405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10406 ;; Tracked objects:
 10407 ;;		On entry : 0/0
 10408 ;;		On exit  : 0/0
 10409 ;;		Unchanged: 0/0
 10410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10411 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
       0       0
 10412 ;;      Locals:         0       0       0      75       0       0       0       0       0       0       0       0       
       0       0
 10413 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
       0       0
 10414 ;;      Totals:         0       0      14      75       0       0       0       0       0       0       0       0       
       0       0
 10415 ;;Total ram usage:       89 bytes
 10416 ;; Hardware stack levels used:    1
 10417 ;; Hardware stack levels required when called:    8
 10418 ;; This function calls:
 10419 ;;		_Send_UART_Data
 10420 ;;		___awdiv
 10421 ;;		___awmod
 10422 ;;		_strcat
 10423 ;;		_strcpy
 10424 ;;		_strlen
 10425 ;; This function is called by:
 10426 ;;		_Esp8266Entrypoint
 10427 ;; This function uses a non-reentrant model
 10428 ;;
 10429                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
 10430                           	file	"ESP8266.c"
 10431                           	line	49
 10432                           global __ptext30
 10433                           __ptext30:	;psect for function _Esp8266SetNetworkParameters
 10434  0624                     psect	text30
 10435                           	file	"ESP8266.c"
 10436                           	line	49
 10437                           	global	__size_of_Esp8266SetNetworkParameters
 10438                           	__size_of_Esp8266SetNetworkParameters	equ	__end_of_Esp8266SetNetworkParameters-_Esp8266
                                 SetNetworkParameters
 10439  013A                     	
 10440                           _Esp8266SetNetworkParameters:	
 10441  0624                     ;incstack = 0
 10442                           	opt	stack 6
 10443                           ; Regs used in _Esp8266SetNetworkParameters: [wreg-fsr1h+status,2+status,0+pclath+cstack
                                 ]
 10444                           	line	52
 10445                           	
 10446                           l5720:	
 10447  0624                     ;ESP8266.c: 49: int Esp8266SetNetworkParameters(char* iWifiNetworkName, char* iWifiPassw
                                 ord, uint8_t iChannel, uint8_t iHidden);ESP8266.c: 50: {;ESP8266.c: 51:     int wCommand
                                 SizeReturn;;ESP8266.c: 52:     if(iChannel > 11 || (strlen("AT+CWSAP=\"\",\"\",,") + str
                                 len(iWifiNetworkName) + strlen(iWifiPassword) + 2 + 1) > 70 )
 10448                           	movlw	low(0Ch)
 10449  0624  300C               	movlb 1	; select bank1
 10450  0625  0021               	subwf	(Esp8266SetNetworkParameters@iChannel)^080h,w
 10451  0626  0224               	skipnc
 10452  0627  1803               	goto	u4251
 10453  0628  2E2A               	goto	u4250
 10454  0629  2E2B               u4251:
 10455  062A                     	goto	l5724
 10456  062A  2E73               u4250:
 10457  062B                     	
 10458                           l5722:	
 10459  062B                     	movlw	low(((STR_7)|8000h))
 10460  062B  3012               	movlb 0	; select bank0
 10461  062C  0020               	movwf	(strlen@s)
 10462  062D  00B0               	movlw	high(((STR_7)|8000h))
 10463  062E  3098               	movwf	((strlen@s))+1
 10464  062F  00B1               	fcall	_strlen
 10465  0630  3193  23C1  3186   	movlb 0	; select bank0
 10466  0633  0020               	movf	(0+?_strlen),w
 10467  0634  0830               	movlb 1	; select bank1
 10468  0635  0021               	movwf	(??_Esp8266SetNetworkParameters+0)^080h+0
 10469  0636  00A6               	movlb 0	; select bank0
 10470  0637  0020               	movf	(1+?_strlen),w
 10471  0638  0831               	movlb 1	; select bank1
 10472  0639  0021               	movwf	((??_Esp8266SetNetworkParameters+0)^080h+0+1)
 10473  063A  00A7               	movf	(Esp8266SetNetworkParameters@iWifiNetworkName+1)^080h,w
 10474  063B  0821               	movlb 0	; select bank0
 10475  063C  0020               	movwf	(strlen@s+1)
 10476  063D  00B1               	movlb 1	; select bank1
 10477  063E  0021               	movf	(Esp8266SetNetworkParameters@iWifiNetworkName)^080h,w
 10478  063F  0820               	movlb 0	; select bank0
 10479  0640  0020               	movwf	(strlen@s)
 10480  0641  00B0               	fcall	_strlen
 10481  0642  3193  23C1  3186   	movlb 0	; select bank0
 10482  0645  0020               	movf	(0+(?_strlen)),w
 10483  0646  0830               	movlb 1	; select bank1
 10484  0647  0021               	addwf	0+(??_Esp8266SetNetworkParameters+0)^080h+0,w
 10485  0648  0726               	movwf	(??_Esp8266SetNetworkParameters+2)^080h+0
 10486  0649  00A8               	movlb 0	; select bank0
 10487  064A  0020               	movf	(1+(?_strlen)),w
 10488  064B  0831               	movlb 1	; select bank1
 10489  064C  0021               	addwfc	1+(??_Esp8266SetNetworkParameters+0)^080h+0,w
 10490  064D  3D27               	movwf	1+(??_Esp8266SetNetworkParameters+2)^080h+0
 10491  064E  00A9               	movf	(Esp8266SetNetworkParameters@iWifiPassword+1)^080h,w
 10492  064F  0823               	movlb 0	; select bank0
 10493  0650  0020               	movwf	(strlen@s+1)
 10494  0651  00B1               	movlb 1	; select bank1
 10495  0652  0021               	movf	(Esp8266SetNetworkParameters@iWifiPassword)^080h,w
 10496  0653  0822               	movlb 0	; select bank0
 10497  0654  0020               	movwf	(strlen@s)
 10498  0655  00B0               	fcall	_strlen
 10499  0656  3193  23C1  3186   	movlb 0	; select bank0
 10500  0659  0020               	movf	(0+(?_strlen)),w
 10501  065A  0830               	movlb 1	; select bank1
 10502  065B  0021               	addwf	0+(??_Esp8266SetNetworkParameters+2)^080h+0,w
 10503  065C  0728               	movwf	(??_Esp8266SetNetworkParameters+4)^080h+0
 10504  065D  00AA               	movlb 0	; select bank0
 10505  065E  0020               	movf	(1+(?_strlen)),w
 10506  065F  0831               	movlb 1	; select bank1
 10507  0660  0021               	addwfc	1+(??_Esp8266SetNetworkParameters+2)^080h+0,w
 10508  0661  3D29               	movwf	1+(??_Esp8266SetNetworkParameters+4)^080h+0
 10509  0662  00AB               	movf	0+(??_Esp8266SetNetworkParameters+4)^080h+0,w
 10510  0663  082A               	addlw	03h
 10511  0664  3E03               	movwf	(??_Esp8266SetNetworkParameters+6)^080h+0
 10512  0665  00AC               	movlw	0
 10513  0666  3000               	addwfc	1+(??_Esp8266SetNetworkParameters+4)^080h+0,w
 10514  0667  3D2B               	movwf	1+(??_Esp8266SetNetworkParameters+6)^080h+0
 10515  0668  00AD               	movlw	0
 10516  0669  3000               	subwf	1+(??_Esp8266SetNetworkParameters+6)^080h+0,w
 10517  066A  022D               	movlw	047h
 10518  066B  3047               	skipnz
 10519  066C  1903               	subwf	0+(??_Esp8266SetNetworkParameters+6)^080h+0,w
 10520  066D  022C               	skipc
 10521  066E  1C03               	goto	u4261
 10522  066F  2E71               	goto	u4260
 10523  0670  2E72               u4261:
 10524  0671                     	goto	l5730
 10525  0671  2E78               u4260:
 10526  0672                     	goto	l5724
 10527  0672  2E73               	
 10528                           l693:	
 10529  0673                     	line	54
 10530                           	
 10531                           l5724:	
 10532  0673                     ;ESP8266.c: 53:     {;ESP8266.c: 54:         return 0;
 10533                           	clrf	(?_Esp8266SetNetworkParameters)^080h
 10534  0673  01A0               	clrf	(?_Esp8266SetNetworkParameters+1)^080h
 10535  0674  01A1               	goto	l694
 10536  0675  2F5D               	
 10537                           l5726:	
 10538  0676                     	goto	l694
 10539  0676  2F5D               	line	55
 10540                           	
 10541                           l5728:	
 10542  0677                     ;ESP8266.c: 55:     }
 10543                           	goto	l694
 10544  0677  2F5D               	line	56
 10545                           ;ESP8266.c: 56:     else
 10546                           	
 10547                           l691:	
 10548  0678                     	line	59
 10549                           	
 10550                           l5730:	
 10551  0678                     ;ESP8266.c: 57:     {;ESP8266.c: 58:         char wCommand[70];;ESP8266.c: 59:         s
                                 trcpy(wCommand,"AT+CWSAP=\"");
 10552                           	movlw	low(Esp8266SetNetworkParameters@wCommand)
 10553  0678  3020               	movlb 0	; select bank0
 10554  0679  0020               	movwf	(strcpy@dest)
 10555  067A  00B6               	movlw	high(Esp8266SetNetworkParameters@wCommand)
 10556  067B  3001               	movwf	(strcpy@dest+1)
 10557  067C  00B7               	movlw	low(((STR_8)|8000h))
 10558  067D  3059               	movwf	(strcpy@src)
 10559  067E  00B8               	movlw	high(((STR_8)|8000h))
 10560  067F  3098               	movwf	((strcpy@src))+1
 10561  0680  00B9               	fcall	_strcpy
 10562  0681  3194  240C  3186   	line	60
 10563                           ;ESP8266.c: 60:         strcat(wCommand,iWifiNetworkName);
 10564                           	movlw	low(Esp8266SetNetworkParameters@wCommand)
 10565  0684  3020               	movlb 0	; select bank0
 10566  0685  0020               	movwf	(strcat@dest)
 10567  0686  00C7               	movlw	high(Esp8266SetNetworkParameters@wCommand)
 10568  0687  3001               	movwf	(strcat@dest+1)
 10569  0688  00C8               	movlb 1	; select bank1
 10570  0689  0021               	movf	(Esp8266SetNetworkParameters@iWifiNetworkName+1)^080h,w
 10571  068A  0821               	movlb 0	; select bank0
 10572  068B  0020               	movwf	(strcat@src+1)
 10573  068C  00CA               	movlb 1	; select bank1
 10574  068D  0021               	movf	(Esp8266SetNetworkParameters@iWifiNetworkName)^080h,w
 10575  068E  0820               	movlb 0	; select bank0
 10576  068F  0020               	movwf	(strcat@src)
 10577  0690  00C9               	fcall	_strcat
 10578  0691  3193  236E  3186   	line	61
 10579                           ;ESP8266.c: 61:         strcat(wCommand,"\",\"");
 10580                           	movlw	low(Esp8266SetNetworkParameters@wCommand)
 10581  0694  3020               	movlb 0	; select bank0
 10582  0695  0020               	movwf	(strcat@dest)
 10583  0696  00C7               	movlw	high(Esp8266SetNetworkParameters@wCommand)
 10584  0697  3001               	movwf	(strcat@dest+1)
 10585  0698  00C8               	movlw	low(((STR_9)|8000h))
 10586  0699  30A2               	movwf	(strcat@src)
 10587  069A  00C9               	movlw	high(((STR_9)|8000h))
 10588  069B  3098               	movwf	((strcat@src))+1
 10589  069C  00CA               	fcall	_strcat
 10590  069D  3193  236E  3186   	line	62
 10591                           ;ESP8266.c: 62:         strcat(wCommand,iWifiPassword);
 10592                           	movlw	low(Esp8266SetNetworkParameters@wCommand)
 10593  06A0  3020               	movlb 0	; select bank0
 10594  06A1  0020               	movwf	(strcat@dest)
 10595  06A2  00C7               	movlw	high(Esp8266SetNetworkParameters@wCommand)
 10596  06A3  3001               	movwf	(strcat@dest+1)
 10597  06A4  00C8               	movlb 1	; select bank1
 10598  06A5  0021               	movf	(Esp8266SetNetworkParameters@iWifiPassword+1)^080h,w
 10599  06A6  0823               	movlb 0	; select bank0
 10600  06A7  0020               	movwf	(strcat@src+1)
 10601  06A8  00CA               	movlb 1	; select bank1
 10602  06A9  0021               	movf	(Esp8266SetNetworkParameters@iWifiPassword)^080h,w
 10603  06AA  0822               	movlb 0	; select bank0
 10604  06AB  0020               	movwf	(strcat@src)
 10605  06AC  00C9               	fcall	_strcat
 10606  06AD  3193  236E  3186   	line	63
 10607                           ;ESP8266.c: 63:         strcat(wCommand,"\",");
 10608                           	movlw	low(Esp8266SetNetworkParameters@wCommand)
 10609  06B0  3020               	movlb 0	; select bank0
 10610  06B1  0020               	movwf	(strcat@dest)
 10611  06B2  00C7               	movlw	high(Esp8266SetNetworkParameters@wCommand)
 10612  06B3  3001               	movwf	(strcat@dest+1)
 10613  06B4  00C8               	movlw	low(((STR_10)|8000h))
 10614  06B5  30AA               	movwf	(strcat@src)
 10615  06B6  00C9               	movlw	high(((STR_10)|8000h))
 10616  06B7  3098               	movwf	((strcat@src))+1
 10617  06B8  00CA               	fcall	_strcat
 10618  06B9  3193  236E  3186   	line	66
 10619                           	
 10620                           l5732:	
 10621  06BC                     ;ESP8266.c: 65:         char wNumber[3];;ESP8266.c: 66:         if(iChannel > 9 )
 10622                           	movlw	low(0Ah)
 10623  06BC  300A               	movlb 1	; select bank1
 10624  06BD  0021               	subwf	(Esp8266SetNetworkParameters@iChannel)^080h,w
 10625  06BE  0224               	skipc
 10626  06BF  1C03               	goto	u4271
 10627  06C0  2EC2               	goto	u4270
 10628  06C1  2EC3               u4271:
 10629  06C2                     	goto	l5740
 10630  06C2  2EFF               u4270:
 10631  06C3                     	line	68
 10632                           	
 10633                           l5734:	
 10634  06C3                     ;ESP8266.c: 67:         {;ESP8266.c: 68:             wNumber[0] = '0' + (iChannel / 10);
                                 
 10635                           	movlw	0Ah
 10636  06C3  300A               	movlb 0	; select bank0
 10637  06C4  0020               	movwf	(___awdiv@divisor)
 10638  06C5  00B0               	movlw	0
 10639  06C6  3000               	movwf	((___awdiv@divisor))+1
 10640  06C7  00B1               	movlb 1	; select bank1
 10641  06C8  0021               	movf	(Esp8266SetNetworkParameters@iChannel)^080h,w
 10642  06C9  0824               	movwf	(??_Esp8266SetNetworkParameters+0)^080h+0
 10643  06CA  00A6               	clrf	(??_Esp8266SetNetworkParameters+0)^080h+0+1
 10644  06CB  01A7               	movf	0+(??_Esp8266SetNetworkParameters+0)^080h+0,w
 10645  06CC  0826               	movlb 0	; select bank0
 10646  06CD  0020               	movwf	(___awdiv@dividend)
 10647  06CE  00B2               	movlb 1	; select bank1
 10648  06CF  0021               	movf	1+(??_Esp8266SetNetworkParameters+0)^080h+0,w
 10649  06D0  0827               	movlb 0	; select bank0
 10650  06D1  0020               	movwf	(___awdiv@dividend+1)
 10651  06D2  00B3               	fcall	___awdiv
 10652  06D3  318A  2222  3186   	movlb 0	; select bank0
 10653  06D6  0020               	movf	(0+(?___awdiv)),w
 10654  06D7  0830               	addlw	030h
 10655  06D8  3E30               	movlb 1	; select bank1
 10656  06D9  0021               	movwf	(??_Esp8266SetNetworkParameters+2)^080h+0
 10657  06DA  00A8               	movf	(??_Esp8266SetNetworkParameters+2)^080h+0,w
 10658  06DB  0828               	movlb 2	; select bank2
 10659  06DC  0022               	movwf	(Esp8266SetNetworkParameters@wNumber)^0100h
 10660  06DD  00E6               	line	69
 10661                           ;ESP8266.c: 69:             iChannel = iChannel % 10;
 10662                           	movlw	0Ah
 10663  06DE  300A               	movlb 0	; select bank0
 10664  06DF  0020               	movwf	(___awmod@divisor)
 10665  06E0  00B0               	movlw	0
 10666  06E1  3000               	movwf	((___awmod@divisor))+1
 10667  06E2  00B1               	movlb 1	; select bank1
 10668  06E3  0021               	movf	(Esp8266SetNetworkParameters@iChannel)^080h,w
 10669  06E4  0824               	movwf	(??_Esp8266SetNetworkParameters+0)^080h+0
 10670  06E5  00A6               	clrf	(??_Esp8266SetNetworkParameters+0)^080h+0+1
 10671  06E6  01A7               	movf	0+(??_Esp8266SetNetworkParameters+0)^080h+0,w
 10672  06E7  0826               	movlb 0	; select bank0
 10673  06E8  0020               	movwf	(___awmod@dividend)
 10674  06E9  00B2               	movlb 1	; select bank1
 10675  06EA  0021               	movf	1+(??_Esp8266SetNetworkParameters+0)^080h+0,w
 10676  06EB  0827               	movlb 0	; select bank0
 10677  06EC  0020               	movwf	(___awmod@dividend+1)
 10678  06ED  00B3               	fcall	___awmod
 10679  06EE  3188  209E  3186   	movlb 0	; select bank0
 10680  06F1  0020               	movf	(0+(?___awmod)),w
 10681  06F2  0830               	movlb 1	; select bank1
 10682  06F3  0021               	movwf	(??_Esp8266SetNetworkParameters+2)^080h+0
 10683  06F4  00A8               	movf	(??_Esp8266SetNetworkParameters+2)^080h+0,w
 10684  06F5  0828               	movwf	(Esp8266SetNetworkParameters@iChannel)^080h
 10685  06F6  00A4               	line	70
 10686                           	
 10687                           l5736:	
 10688  06F7                     ;ESP8266.c: 70:             wNumber[1] = '0' + iChannel;
 10689                           	movf	(Esp8266SetNetworkParameters@iChannel)^080h,w
 10690  06F7  0824               	addlw	030h
 10691  06F8  3E30               	movwf	(??_Esp8266SetNetworkParameters+0)^080h+0
 10692  06F9  00A6               	movf	(??_Esp8266SetNetworkParameters+0)^080h+0,w
 10693  06FA  0826               	movlb 2	; select bank2
 10694  06FB  0022               	movwf	0+(Esp8266SetNetworkParameters@wNumber)^0100h+01h
 10695  06FC  00E7               	line	71
 10696                           	
 10697                           l5738:	
 10698  06FD                     ;ESP8266.c: 71:             wNumber[2] = 0;
 10699                           	clrf	0+(Esp8266SetNetworkParameters@wNumber)^0100h+02h
 10700  06FD  01E8               	line	72
 10701                           ;ESP8266.c: 72:         }
 10702                           	goto	l5744
 10703  06FE  2F08               	line	73
 10704                           ;ESP8266.c: 73:         else
 10705                           	
 10706                           l696:	
 10707  06FF                     	line	75
 10708                           	
 10709                           l5740:	
 10710  06FF                     ;ESP8266.c: 74:         {;ESP8266.c: 75:             wNumber[0] = '0' + iChannel;
 10711                           	movlb 1	; select bank1
 10712  06FF  0021               	movf	(Esp8266SetNetworkParameters@iChannel)^080h,w
 10713  0700  0824               	addlw	030h
 10714  0701  3E30               	movwf	(??_Esp8266SetNetworkParameters+0)^080h+0
 10715  0702  00A6               	movf	(??_Esp8266SetNetworkParameters+0)^080h+0,w
 10716  0703  0826               	movlb 2	; select bank2
 10717  0704  0022               	movwf	(Esp8266SetNetworkParameters@wNumber)^0100h
 10718  0705  00E6               	line	76
 10719                           	
 10720                           l5742:	
 10721  0706                     ;ESP8266.c: 76:             wNumber[1] = 0;
 10722                           	clrf	0+(Esp8266SetNetworkParameters@wNumber)^0100h+01h
 10723  0706  01E7               	goto	l5744
 10724  0707  2F08               	line	77
 10725                           ;ESP8266.c: 77:         }
 10726                           	
 10727                           l697:	
 10728  0708                     	line	78
 10729                           	
 10730                           l5744:	
 10731  0708                     ;ESP8266.c: 78:         strcat(wCommand,wNumber);
 10732                           	movlw	low(Esp8266SetNetworkParameters@wCommand)
 10733  0708  3020               	movlb 0	; select bank0
 10734  0709  0020               	movwf	(strcat@dest)
 10735  070A  00C7               	movlw	high(Esp8266SetNetworkParameters@wCommand)
 10736  070B  3001               	movwf	(strcat@dest+1)
 10737  070C  00C8               	movlw	low(Esp8266SetNetworkParameters@wNumber)
 10738  070D  3066               	movwf	(strcat@src)
 10739  070E  00C9               	movlw	high(Esp8266SetNetworkParameters@wNumber)
 10740  070F  3001               	movwf	(strcat@src+1)
 10741  0710  00CA               	fcall	_strcat
 10742  0711  3193  236E  3186   	line	79
 10743                           	
 10744                           l5746:	
 10745  0714                     ;ESP8266.c: 79:         if(iHidden == eHideSSID)
 10746                           	movlb 1	; select bank1
 10747  0714  0021               	movf	((Esp8266SetNetworkParameters@iHidden)^080h),w
 10748  0715  0825               	btfss	status,2
 10749  0716  1D03               	goto	u4281
 10750  0717  2F19               	goto	u4280
 10751  0718  2F1A               u4281:
 10752  0719                     	goto	l5750
 10753  0719  2F27               u4280:
 10754  071A                     	line	81
 10755                           	
 10756                           l5748:	
 10757  071A                     ;ESP8266.c: 80:         {;ESP8266.c: 81:           strcat(wCommand,",1\r\n");
 10758                           	movlw	low(Esp8266SetNetworkParameters@wCommand)
 10759  071A  3020               	movlb 0	; select bank0
 10760  071B  0020               	movwf	(strcat@dest)
 10761  071C  00C7               	movlw	high(Esp8266SetNetworkParameters@wCommand)
 10762  071D  3001               	movwf	(strcat@dest+1)
 10763  071E  00C8               	movlw	low(((STR_11)|8000h))
 10764  071F  3099               	movwf	(strcat@src)
 10765  0720  00C9               	movlw	high(((STR_11)|8000h))
 10766  0721  3098               	movwf	((strcat@src))+1
 10767  0722  00CA               	fcall	_strcat
 10768  0723  3193  236E  3186   	line	82
 10769                           ;ESP8266.c: 82:         }
 10770                           	goto	l5752
 10771  0726  2F34               	line	83
 10772                           ;ESP8266.c: 83:         else
 10773                           	
 10774                           l698:	
 10775  0727                     	line	85
 10776                           	
 10777                           l5750:	
 10778  0727                     ;ESP8266.c: 84:         {;ESP8266.c: 85:           strcat(wCommand,",0\r\n");
 10779                           	movlw	low(Esp8266SetNetworkParameters@wCommand)
 10780  0727  3020               	movlb 0	; select bank0
 10781  0728  0020               	movwf	(strcat@dest)
 10782  0729  00C7               	movlw	high(Esp8266SetNetworkParameters@wCommand)
 10783  072A  3001               	movwf	(strcat@dest+1)
 10784  072B  00C8               	movlw	low(((STR_12)|8000h))
 10785  072C  3094               	movwf	(strcat@src)
 10786  072D  00C9               	movlw	high(((STR_12)|8000h))
 10787  072E  3098               	movwf	((strcat@src))+1
 10788  072F  00CA               	fcall	_strcat
 10789  0730  3193  236E  3186   	goto	l5752
 10790  0733  2F34               	line	86
 10791                           ;ESP8266.c: 86:         }
 10792                           	
 10793                           l699:	
 10794  0734                     	line	87
 10795                           	
 10796                           l5752:	
 10797  0734                     ;ESP8266.c: 87:         wCommandSizeReturn = strlen(wCommand);
 10798                           	movlw	low(Esp8266SetNetworkParameters@wCommand)
 10799  0734  3020               	movlb 0	; select bank0
 10800  0735  0020               	movwf	(strlen@s)
 10801  0736  00B0               	movlw	high(Esp8266SetNetworkParameters@wCommand)
 10802  0737  3001               	movwf	(strlen@s+1)
 10803  0738  00B1               	fcall	_strlen
 10804  0739  3193  23C1  3186   	movlb 0	; select bank0
 10805  073C  0020               	movf	(1+(?_strlen)),w
 10806  073D  0831               	movlb 2	; select bank2
 10807  073E  0022               	movwf	(Esp8266SetNetworkParameters@wCommandSizeReturn+1)^0100h
 10808  073F  00EA               	movlb 0	; select bank0
 10809  0740  0020               	movf	(0+(?_strlen)),w
 10810  0741  0830               	movlb 2	; select bank2
 10811  0742  0022               	movwf	(Esp8266SetNetworkParameters@wCommandSizeReturn)^0100h
 10812  0743  00E9               	line	88
 10813                           	
 10814                           l5754:	
 10815  0744                     ;ESP8266.c: 88:         Send_UART_Data((uint8_t*)wCommand,wCommandSizeReturn);
 10816                           	movlw	low(Esp8266SetNetworkParameters@wCommand)
 10817  0744  3020               	movlb 0	; select bank0
 10818  0745  0020               	movwf	(Send_UART_Data@iData)
 10819  0746  00BC               	movlw	high(Esp8266SetNetworkParameters@wCommand)
 10820  0747  3001               	movwf	(Send_UART_Data@iData+1)
 10821  0748  00BD               	movlb 2	; select bank2
 10822  0749  0022               	movf	(Esp8266SetNetworkParameters@wCommandSizeReturn)^0100h,w
 10823  074A  0869               	movlb 1	; select bank1
 10824  074B  0021               	movwf	(??_Esp8266SetNetworkParameters+0)^080h+0
 10825  074C  00A6               	movf	(??_Esp8266SetNetworkParameters+0)^080h+0,w
 10826  074D  0826               	movlb 0	; select bank0
 10827  074E  0020               	movwf	(Send_UART_Data@iData_Length)
 10828  074F  00BE               	fcall	_Send_UART_Data
 10829  0750  3193  23E5  3186   	line	89
 10830                           	
 10831                           l5756:	
 10832  0753                     ;ESP8266.c: 89:         return wCommandSizeReturn;
 10833                           	movlb 2	; select bank2
 10834  0753  0022               	movf	(Esp8266SetNetworkParameters@wCommandSizeReturn+1)^0100h,w
 10835  0754  086A               	movlb 1	; select bank1
 10836  0755  0021               	movwf	(?_Esp8266SetNetworkParameters+1)^080h
 10837  0756  00A1               	movlb 2	; select bank2
 10838  0757  0022               	movf	(Esp8266SetNetworkParameters@wCommandSizeReturn)^0100h,w
 10839  0758  0869               	movlb 1	; select bank1
 10840  0759  0021               	movwf	(?_Esp8266SetNetworkParameters)^080h
 10841  075A  00A0               	goto	l694
 10842  075B  2F5D               	
 10843                           l5758:	
 10844  075C                     	goto	l694
 10845  075C  2F5D               	line	90
 10846                           ;ESP8266.c: 90:     }
 10847                           	
 10848                           l695:	
 10849  075D                     	line	91
 10850                           	
 10851                           l694:	
 10852  075D                     	return
 10853  075D  0008               	opt stack 0
 10854                           GLOBAL	__end_of_Esp8266SetNetworkParameters
 10855                           	__end_of_Esp8266SetNetworkParameters:
 10856  075E                     	signat	_Esp8266SetNetworkParameters,16506
 10857                           	global	___awmod
 10858                           
 10859 ;; *************** function ___awmod *****************
 10860 ;; Defined at:
 10861 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 10862 ;; Parameters:    Size  Location     Type
 10863 ;;  divisor         2   16[BANK0 ] int 
 10864 ;;  dividend        2   18[BANK0 ] int 
 10865 ;; Auto vars:     Size  Location     Type
 10866 ;;  sign            1   22[BANK0 ] unsigned char 
 10867 ;;  counter         1   21[BANK0 ] unsigned char 
 10868 ;; Return value:  Size  Location     Type
 10869 ;;                  2   16[BANK0 ] int 
 10870 ;; Registers used:
 10871 ;;		wreg, status,2, status,0
 10872 ;; Tracked objects:
 10873 ;;		On entry : 0/0
 10874 ;;		On exit  : 0/0
 10875 ;;		Unchanged: 0/0
 10876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10877 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 10878 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10879 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10880 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
 10881 ;;Total ram usage:        7 bytes
 10882 ;; Hardware stack levels used:    1
 10883 ;; Hardware stack levels required when called:    6
 10884 ;; This function calls:
 10885 ;;		Nothing
 10886 ;; This function is called by:
 10887 ;;		_printEM1812
 10888 ;;		_uint8_tToa
 10889 ;;		_Esp8266SetNetworkParameters
 10890 ;; This function uses a non-reentrant model
 10891 ;;
 10892                           psect	text31,local,class=CODE,delta=2,merge=1,group=1
 10893                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 10894                           	line	5
 10895                           global __ptext31
 10896                           __ptext31:	;psect for function ___awmod
 10897  089E                     psect	text31
 10898                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 10899                           	line	5
 10900                           	global	__size_of___awmod
 10901                           	__size_of___awmod	equ	__end_of___awmod-___awmod
 10902  005E                     	
 10903                           ___awmod:	
 10904  089E                     ;incstack = 0
 10905                           	opt	stack 8
 10906                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10907                           	line	12
 10908                           	
 10909                           l5446:	
 10910  089E                     	movlb 0	; select bank0
 10911  089E  0020               	clrf	(___awmod@sign)
 10912  089F  01B6               	line	13
 10913                           	
 10914                           l5448:	
 10915  08A0                     	btfss	(___awmod@dividend+1),7
 10916  08A0  1FB3               	goto	u3931
 10917  08A1  28A3               	goto	u3930
 10918  08A2  28A4               u3931:
 10919  08A3                     	goto	l5454
 10920  08A3  28AC               u3930:
 10921  08A4                     	line	14
 10922                           	
 10923                           l5450:	
 10924  08A4                     	comf	(___awmod@dividend),f
 10925  08A4  09B2               	comf	(___awmod@dividend+1),f
 10926  08A5  09B3               	incf	(___awmod@dividend),f
 10927  08A6  0AB2               	skipnz
 10928  08A7  1903               	incf	(___awmod@dividend+1),f
 10929  08A8  0AB3               	line	15
 10930                           	
 10931                           l5452:	
 10932  08A9                     	clrf	(___awmod@sign)
 10933  08A9  01B6               	incf	(___awmod@sign),f
 10934  08AA  0AB6               	goto	l5454
 10935  08AB  28AC               	line	16
 10936                           	
 10937                           l966:	
 10938  08AC                     	line	17
 10939                           	
 10940                           l5454:	
 10941  08AC                     	btfss	(___awmod@divisor+1),7
 10942  08AC  1FB1               	goto	u3941
 10943  08AD  28AF               	goto	u3940
 10944  08AE  28B0               u3941:
 10945  08AF                     	goto	l5458
 10946  08AF  28B6               u3940:
 10947  08B0                     	line	18
 10948                           	
 10949                           l5456:	
 10950  08B0                     	comf	(___awmod@divisor),f
 10951  08B0  09B0               	comf	(___awmod@divisor+1),f
 10952  08B1  09B1               	incf	(___awmod@divisor),f
 10953  08B2  0AB0               	skipnz
 10954  08B3  1903               	incf	(___awmod@divisor+1),f
 10955  08B4  0AB1               	goto	l5458
 10956  08B5  28B6               	
 10957                           l967:	
 10958  08B6                     	line	19
 10959                           	
 10960                           l5458:	
 10961  08B6                     	movf	((___awmod@divisor)),w
 10962  08B6  0830               iorwf	((___awmod@divisor+1)),w
 10963  08B7  0431               	btfsc	status,2
 10964  08B8  1903               	goto	u3951
 10965  08B9  28BB               	goto	u3950
 10966  08BA  28BC               u3951:
 10967  08BB                     	goto	l5476
 10968  08BB  28EB               u3950:
 10969  08BC                     	line	20
 10970                           	
 10971                           l5460:	
 10972  08BC                     	clrf	(___awmod@counter)
 10973  08BC  01B5               	incf	(___awmod@counter),f
 10974  08BD  0AB5               	line	21
 10975                           	goto	l5466
 10976  08BE  28C9               	
 10977                           l970:	
 10978  08BF                     	line	22
 10979                           	
 10980                           l5462:	
 10981  08BF                     	movlw	01h
 10982  08BF  3001               	
 10983                           u3965:
 10984  08C0                     	lslf	(___awmod@divisor),f
 10985  08C0  35B0               	rlf	(___awmod@divisor+1),f
 10986  08C1  0DB1               	decfsz	wreg,f
 10987  08C2  0B89               	goto	u3965
 10988  08C3  28C0               	line	23
 10989                           	
 10990                           l5464:	
 10991  08C4                     	movlw	low(01h)
 10992  08C4  3001               	movwf	(??___awmod+0)+0
 10993  08C5  00B4               	movf	(??___awmod+0)+0,w
 10994  08C6  0834               	addwf	(___awmod@counter),f
 10995  08C7  07B5               	goto	l5466
 10996  08C8  28C9               	line	24
 10997                           	
 10998                           l969:	
 10999  08C9                     	line	21
 11000                           	
 11001                           l5466:	
 11002  08C9                     	btfss	(___awmod@divisor+1),(15)&7
 11003  08C9  1FB1               	goto	u3971
 11004  08CA  28CC               	goto	u3970
 11005  08CB  28CD               u3971:
 11006  08CC                     	goto	l5462
 11007  08CC  28BF               u3970:
 11008  08CD                     	goto	l5468
 11009  08CD  28CF               	
 11010                           l971:	
 11011  08CE                     	goto	l5468
 11012  08CE  28CF               	line	25
 11013                           	
 11014                           l972:	
 11015  08CF                     	line	26
 11016                           	
 11017                           l5468:	
 11018  08CF                     	movf	(___awmod@divisor+1),w
 11019  08CF  0831               	subwf	(___awmod@dividend+1),w
 11020  08D0  0233               	skipz
 11021  08D1  1D03               	goto	u3985
 11022  08D2  28D5               	movf	(___awmod@divisor),w
 11023  08D3  0830               	subwf	(___awmod@dividend),w
 11024  08D4  0232               u3985:
 11025  08D5                     	skipc
 11026  08D5  1C03               	goto	u3981
 11027  08D6  28D8               	goto	u3980
 11028  08D7  28D9               u3981:
 11029  08D8                     	goto	l5472
 11030  08D8  28DE               u3980:
 11031  08D9                     	line	27
 11032                           	
 11033                           l5470:	
 11034  08D9                     	movf	(___awmod@divisor),w
 11035  08D9  0830               	subwf	(___awmod@dividend),f
 11036  08DA  02B2               	movf	(___awmod@divisor+1),w
 11037  08DB  0831               	subwfb	(___awmod@dividend+1),f
 11038  08DC  3BB3               	goto	l5472
 11039  08DD  28DE               	
 11040                           l973:	
 11041  08DE                     	line	28
 11042                           	
 11043                           l5472:	
 11044  08DE                     	movlw	01h
 11045  08DE  3001               	
 11046                           u3995:
 11047  08DF                     	lsrf	(___awmod@divisor+1),f
 11048  08DF  36B1               	rrf	(___awmod@divisor),f
 11049  08E0  0CB0               	decfsz	wreg,f
 11050  08E1  0B89               	goto	u3995
 11051  08E2  28DF               	line	29
 11052                           	
 11053                           l5474:	
 11054  08E3                     	movlw	01h
 11055  08E3  3001               	subwf	(___awmod@counter),f
 11056  08E4  02B5               	btfss	status,2
 11057  08E5  1D03               	goto	u4001
 11058  08E6  28E8               	goto	u4000
 11059  08E7  28E9               u4001:
 11060  08E8                     	goto	l5468
 11061  08E8  28CF               u4000:
 11062  08E9                     	goto	l5476
 11063  08E9  28EB               	
 11064                           l974:	
 11065  08EA                     	goto	l5476
 11066  08EA  28EB               	line	30
 11067                           	
 11068                           l968:	
 11069  08EB                     	line	31
 11070                           	
 11071                           l5476:	
 11072  08EB                     	movf	((___awmod@sign)),w
 11073  08EB  0836               	btfsc	status,2
 11074  08EC  1903               	goto	u4011
 11075  08ED  28EF               	goto	u4010
 11076  08EE  28F0               u4011:
 11077  08EF                     	goto	l5480
 11078  08EF  28F6               u4010:
 11079  08F0                     	line	32
 11080                           	
 11081                           l5478:	
 11082  08F0                     	comf	(___awmod@dividend),f
 11083  08F0  09B2               	comf	(___awmod@dividend+1),f
 11084  08F1  09B3               	incf	(___awmod@dividend),f
 11085  08F2  0AB2               	skipnz
 11086  08F3  1903               	incf	(___awmod@dividend+1),f
 11087  08F4  0AB3               	goto	l5480
 11088  08F5  28F6               	
 11089                           l975:	
 11090  08F6                     	line	33
 11091                           	
 11092                           l5480:	
 11093  08F6                     	movf	(___awmod@dividend+1),w
 11094  08F6  0833               	movwf	(?___awmod+1)
 11095  08F7  00B1               	movf	(___awmod@dividend),w
 11096  08F8  0832               	movwf	(?___awmod)
 11097  08F9  00B0               	goto	l976
 11098  08FA  28FB               	
 11099                           l5482:	
 11100  08FB                     	line	34
 11101                           	
 11102                           l976:	
 11103  08FB                     	return
 11104  08FB  0008               	opt stack 0
 11105                           GLOBAL	__end_of___awmod
 11106                           	__end_of___awmod:
 11107  08FC                     	signat	___awmod,8314
 11108                           	global	___awdiv
 11109                           
 11110 ;; *************** function ___awdiv *****************
 11111 ;; Defined at:
 11112 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 11113 ;; Parameters:    Size  Location     Type
 11114 ;;  divisor         2   16[BANK0 ] int 
 11115 ;;  dividend        2   18[BANK0 ] int 
 11116 ;; Auto vars:     Size  Location     Type
 11117 ;;  quotient        2   23[BANK0 ] int 
 11118 ;;  sign            1   22[BANK0 ] unsigned char 
 11119 ;;  counter         1   21[BANK0 ] unsigned char 
 11120 ;; Return value:  Size  Location     Type
 11121 ;;                  2   16[BANK0 ] int 
 11122 ;; Registers used:
 11123 ;;		wreg, status,2, status,0
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11129 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 11130 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 11131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11132 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0
 11133 ;;Total ram usage:        9 bytes
 11134 ;; Hardware stack levels used:    1
 11135 ;; Hardware stack levels required when called:    6
 11136 ;; This function calls:
 11137 ;;		Nothing
 11138 ;; This function is called by:
 11139 ;;		_printEM1812
 11140 ;;		_uint8_tToa
 11141 ;;		_Esp8266SetNetworkParameters
 11142 ;; This function uses a non-reentrant model
 11143 ;;
 11144                           psect	text32,local,class=CODE,delta=2,merge=1,group=1
 11145                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 11146                           	line	5
 11147                           global __ptext32
 11148                           __ptext32:	;psect for function ___awdiv
 11149  0A22                     psect	text32
 11150                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 11151                           	line	5
 11152                           	global	__size_of___awdiv
 11153                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 11154  006A                     	
 11155                           ___awdiv:	
 11156  0A22                     ;incstack = 0
 11157                           	opt	stack 8
 11158                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11159                           	line	13
 11160                           	
 11161                           l5402:	
 11162  0A22                     	movlb 0	; select bank0
 11163  0A22  0020               	clrf	(___awdiv@sign)
 11164  0A23  01B6               	line	14
 11165                           	
 11166                           l5404:	
 11167  0A24                     	btfss	(___awdiv@divisor+1),7
 11168  0A24  1FB1               	goto	u3831
 11169  0A25  2A27               	goto	u3830
 11170  0A26  2A28               u3831:
 11171  0A27                     	goto	l5410
 11172  0A27  2A30               u3830:
 11173  0A28                     	line	15
 11174                           	
 11175                           l5406:	
 11176  0A28                     	comf	(___awdiv@divisor),f
 11177  0A28  09B0               	comf	(___awdiv@divisor+1),f
 11178  0A29  09B1               	incf	(___awdiv@divisor),f
 11179  0A2A  0AB0               	skipnz
 11180  0A2B  1903               	incf	(___awdiv@divisor+1),f
 11181  0A2C  0AB1               	line	16
 11182                           	
 11183                           l5408:	
 11184  0A2D                     	clrf	(___awdiv@sign)
 11185  0A2D  01B6               	incf	(___awdiv@sign),f
 11186  0A2E  0AB6               	goto	l5410
 11187  0A2F  2A30               	line	17
 11188                           	
 11189                           l953:	
 11190  0A30                     	line	18
 11191                           	
 11192                           l5410:	
 11193  0A30                     	btfss	(___awdiv@dividend+1),7
 11194  0A30  1FB3               	goto	u3841
 11195  0A31  2A33               	goto	u3840
 11196  0A32  2A34               u3841:
 11197  0A33                     	goto	l5416
 11198  0A33  2A3E               u3840:
 11199  0A34                     	line	19
 11200                           	
 11201                           l5412:	
 11202  0A34                     	comf	(___awdiv@dividend),f
 11203  0A34  09B2               	comf	(___awdiv@dividend+1),f
 11204  0A35  09B3               	incf	(___awdiv@dividend),f
 11205  0A36  0AB2               	skipnz
 11206  0A37  1903               	incf	(___awdiv@dividend+1),f
 11207  0A38  0AB3               	line	20
 11208                           	
 11209                           l5414:	
 11210  0A39                     	movlw	low(01h)
 11211  0A39  3001               	movwf	(??___awdiv+0)+0
 11212  0A3A  00B4               	movf	(??___awdiv+0)+0,w
 11213  0A3B  0834               	xorwf	(___awdiv@sign),f
 11214  0A3C  06B6               	goto	l5416
 11215  0A3D  2A3E               	line	21
 11216                           	
 11217                           l954:	
 11218  0A3E                     	line	22
 11219                           	
 11220                           l5416:	
 11221  0A3E                     	clrf	(___awdiv@quotient)
 11222  0A3E  01B7               	clrf	(___awdiv@quotient+1)
 11223  0A3F  01B8               	line	23
 11224                           	
 11225                           l5418:	
 11226  0A40                     	movf	((___awdiv@divisor)),w
 11227  0A40  0830               iorwf	((___awdiv@divisor+1)),w
 11228  0A41  0431               	btfsc	status,2
 11229  0A42  1903               	goto	u3851
 11230  0A43  2A45               	goto	u3850
 11231  0A44  2A46               u3851:
 11232  0A45                     	goto	l5438
 11233  0A45  2A7B               u3850:
 11234  0A46                     	line	24
 11235                           	
 11236                           l5420:	
 11237  0A46                     	clrf	(___awdiv@counter)
 11238  0A46  01B5               	incf	(___awdiv@counter),f
 11239  0A47  0AB5               	line	25
 11240                           	goto	l5426
 11241  0A48  2A53               	
 11242                           l957:	
 11243  0A49                     	line	26
 11244                           	
 11245                           l5422:	
 11246  0A49                     	movlw	01h
 11247  0A49  3001               	
 11248                           u3865:
 11249  0A4A                     	lslf	(___awdiv@divisor),f
 11250  0A4A  35B0               	rlf	(___awdiv@divisor+1),f
 11251  0A4B  0DB1               	decfsz	wreg,f
 11252  0A4C  0B89               	goto	u3865
 11253  0A4D  2A4A               	line	27
 11254                           	
 11255                           l5424:	
 11256  0A4E                     	movlw	low(01h)
 11257  0A4E  3001               	movwf	(??___awdiv+0)+0
 11258  0A4F  00B4               	movf	(??___awdiv+0)+0,w
 11259  0A50  0834               	addwf	(___awdiv@counter),f
 11260  0A51  07B5               	goto	l5426
 11261  0A52  2A53               	line	28
 11262                           	
 11263                           l956:	
 11264  0A53                     	line	25
 11265                           	
 11266                           l5426:	
 11267  0A53                     	btfss	(___awdiv@divisor+1),(15)&7
 11268  0A53  1FB1               	goto	u3871
 11269  0A54  2A56               	goto	u3870
 11270  0A55  2A57               u3871:
 11271  0A56                     	goto	l5422
 11272  0A56  2A49               u3870:
 11273  0A57                     	goto	l5428
 11274  0A57  2A59               	
 11275                           l958:	
 11276  0A58                     	goto	l5428
 11277  0A58  2A59               	line	29
 11278                           	
 11279                           l959:	
 11280  0A59                     	line	30
 11281                           	
 11282                           l5428:	
 11283  0A59                     	movlw	01h
 11284  0A59  3001               	
 11285                           u3885:
 11286  0A5A                     	lslf	(___awdiv@quotient),f
 11287  0A5A  35B7               	rlf	(___awdiv@quotient+1),f
 11288  0A5B  0DB8               	decfsz	wreg,f
 11289  0A5C  0B89               	goto	u3885
 11290  0A5D  2A5A               	line	31
 11291                           	movf	(___awdiv@divisor+1),w
 11292  0A5E  0831               	subwf	(___awdiv@dividend+1),w
 11293  0A5F  0233               	skipz
 11294  0A60  1D03               	goto	u3895
 11295  0A61  2A64               	movf	(___awdiv@divisor),w
 11296  0A62  0830               	subwf	(___awdiv@dividend),w
 11297  0A63  0232               u3895:
 11298  0A64                     	skipc
 11299  0A64  1C03               	goto	u3891
 11300  0A65  2A67               	goto	u3890
 11301  0A66  2A68               u3891:
 11302  0A67                     	goto	l5434
 11303  0A67  2A6E               u3890:
 11304  0A68                     	line	32
 11305                           	
 11306                           l5430:	
 11307  0A68                     	movf	(___awdiv@divisor),w
 11308  0A68  0830               	subwf	(___awdiv@dividend),f
 11309  0A69  02B2               	movf	(___awdiv@divisor+1),w
 11310  0A6A  0831               	subwfb	(___awdiv@dividend+1),f
 11311  0A6B  3BB3               	line	33
 11312                           	
 11313                           l5432:	
 11314  0A6C                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
 11315  0A6C  1437               	goto	l5434
 11316  0A6D  2A6E               	line	34
 11317                           	
 11318                           l960:	
 11319  0A6E                     	line	35
 11320                           	
 11321                           l5434:	
 11322  0A6E                     	movlw	01h
 11323  0A6E  3001               	
 11324                           u3905:
 11325  0A6F                     	lsrf	(___awdiv@divisor+1),f
 11326  0A6F  36B1               	rrf	(___awdiv@divisor),f
 11327  0A70  0CB0               	decfsz	wreg,f
 11328  0A71  0B89               	goto	u3905
 11329  0A72  2A6F               	line	36
 11330                           	
 11331                           l5436:	
 11332  0A73                     	movlw	01h
 11333  0A73  3001               	subwf	(___awdiv@counter),f
 11334  0A74  02B5               	btfss	status,2
 11335  0A75  1D03               	goto	u3911
 11336  0A76  2A78               	goto	u3910
 11337  0A77  2A79               u3911:
 11338  0A78                     	goto	l5428
 11339  0A78  2A59               u3910:
 11340  0A79                     	goto	l5438
 11341  0A79  2A7B               	
 11342                           l961:	
 11343  0A7A                     	goto	l5438
 11344  0A7A  2A7B               	line	37
 11345                           	
 11346                           l955:	
 11347  0A7B                     	line	38
 11348                           	
 11349                           l5438:	
 11350  0A7B                     	movf	((___awdiv@sign)),w
 11351  0A7B  0836               	btfsc	status,2
 11352  0A7C  1903               	goto	u3921
 11353  0A7D  2A7F               	goto	u3920
 11354  0A7E  2A80               u3921:
 11355  0A7F                     	goto	l5442
 11356  0A7F  2A86               u3920:
 11357  0A80                     	line	39
 11358                           	
 11359                           l5440:	
 11360  0A80                     	comf	(___awdiv@quotient),f
 11361  0A80  09B7               	comf	(___awdiv@quotient+1),f
 11362  0A81  09B8               	incf	(___awdiv@quotient),f
 11363  0A82  0AB7               	skipnz
 11364  0A83  1903               	incf	(___awdiv@quotient+1),f
 11365  0A84  0AB8               	goto	l5442
 11366  0A85  2A86               	
 11367                           l962:	
 11368  0A86                     	line	40
 11369                           	
 11370                           l5442:	
 11371  0A86                     	movf	(___awdiv@quotient+1),w
 11372  0A86  0838               	movwf	(?___awdiv+1)
 11373  0A87  00B1               	movf	(___awdiv@quotient),w
 11374  0A88  0837               	movwf	(?___awdiv)
 11375  0A89  00B0               	goto	l963
 11376  0A8A  2A8B               	
 11377                           l5444:	
 11378  0A8B                     	line	41
 11379                           	
 11380                           l963:	
 11381  0A8B                     	return
 11382  0A8B  0008               	opt stack 0
 11383                           GLOBAL	__end_of___awdiv
 11384                           	__end_of___awdiv:
 11385  0A8C                     	signat	___awdiv,8314
 11386                           	global	_Esp8266OpenSocketCommand
 11387                           
 11388 ;; *************** function _Esp8266OpenSocketCommand *****************
 11389 ;; Defined at:
 11390 ;;		line 12 in file "ESP8266.c"
 11391 ;; Parameters:    Size  Location     Type
 11392 ;;  iType           2    0[BANK1 ] PTR unsigned char 
 11393 ;;		 -> STR_18(4), 
 11394 ;;  iDestination    2    2[BANK1 ] PTR unsigned char 
 11395 ;;		 -> STR_19(14), 
 11396 ;;  DestinationP    2    4[BANK1 ] unsigned short 
 11397 ;; Auto vars:     Size  Location     Type
 11398 ;;  wCommand       70    0[BANK8 ] unsigned char [70]
 11399 ;;  wPort           7   70[BANK8 ] unsigned char [7]
 11400 ;;  wCommandSize    2   77[BANK8 ] int 
 11401 ;; Return value:  Size  Location     Type
 11402 ;;                  2    0[BANK1 ] int 
 11403 ;; Registers used:
 11404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11405 ;; Tracked objects:
 11406 ;;		On entry : 0/0
 11407 ;;		On exit  : 0/0
 11408 ;;		Unchanged: 0/0
 11409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11410 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
       0       0
 11411 ;;      Locals:         0       0       0       0       0       0       0       0       0      79       0       0       
       0       0
 11412 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11413 ;;      Totals:         0       1       6       0       0       0       0       0       0      79       0       0       
       0       0
 11414 ;;Total ram usage:       86 bytes
 11415 ;; Hardware stack levels used:    1
 11416 ;; Hardware stack levels required when called:    8
 11417 ;; This function calls:
 11418 ;;		_Send_UART_Data
 11419 ;;		_strcat
 11420 ;;		_strcpy
 11421 ;;		_strlen
 11422 ;;		_uint16_tToa
 11423 ;; This function is called by:
 11424 ;;		_Esp8266Entrypoint
 11425 ;; This function uses a non-reentrant model
 11426 ;;
 11427                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
 11428                           	file	"ESP8266.c"
 11429                           	line	12
 11430                           global __ptext33
 11431                           __ptext33:	;psect for function _Esp8266OpenSocketCommand
 11432  075E                     psect	text33
 11433                           	file	"ESP8266.c"
 11434                           	line	12
 11435                           	global	__size_of_Esp8266OpenSocketCommand
 11436                           	__size_of_Esp8266OpenSocketCommand	equ	__end_of_Esp8266OpenSocketCommand-_Esp8266OpenSo
                                 cketCommand
 11437  00A1                     	
 11438                           _Esp8266OpenSocketCommand:	
 11439  075E                     ;incstack = 0
 11440                           	opt	stack 6
 11441                           ; Regs used in _Esp8266OpenSocketCommand: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11442                           	line	14
 11443                           	
 11444                           l5706:	
 11445  075E                     ;ESP8266.c: 12: int Esp8266OpenSocketCommand(char* iType, char* iDestination, uint16_t D
                                 estinationPort);ESP8266.c: 13: {;ESP8266.c: 14:     int wCommandSizeReturn=0;
 11446                           	movlb 8	; select bank8
 11447  075E  0028               	clrf	(Esp8266OpenSocketCommand@wCommandSizeReturn)^0400h
 11448  075F  01ED               	clrf	(Esp8266OpenSocketCommand@wCommandSizeReturn+1)^0400h
 11449  0760  01EE               	line	16
 11450                           	
 11451                           l5708:	
 11452  0761                     ;ESP8266.c: 16:     if( DestinationPort != 0 )
 11453                           	movlb 1	; select bank1
 11454  0761  0021               	movf	((Esp8266OpenSocketCommand@DestinationPort)^080h),w
 11455  0762  0824               iorwf	((Esp8266OpenSocketCommand@DestinationPort+1)^080h),w
 11456  0763  0425               	btfsc	status,2
 11457  0764  1903               	goto	u4241
 11458  0765  2F67               	goto	u4240
 11459  0766  2F68               u4241:
 11460  0767                     	goto	l5716
 11461  0767  2FF5               u4240:
 11462  0768                     	line	19
 11463                           	
 11464                           l5710:	
 11465  0768                     ;ESP8266.c: 17:     {;ESP8266.c: 18:         char wCommand[70];;ESP8266.c: 19:         s
                                 trcpy(wCommand,"AT+CIPSTART=\"");
 11466                           	movlw	low(Esp8266OpenSocketCommand@wCommand)
 11467  0768  3020               	movlb 0	; select bank0
 11468  0769  0020               	movwf	(strcpy@dest)
 11469  076A  00B6               	movlw	high(Esp8266OpenSocketCommand@wCommand)
 11470  076B  3004               	movwf	(strcpy@dest+1)
 11471  076C  00B7               	movlw	low(((STR_3)|8000h))
 11472  076D  3031               	movwf	(strcpy@src)
 11473  076E  00B8               	movlw	high(((STR_3)|8000h))
 11474  076F  3098               	movwf	((strcpy@src))+1
 11475  0770  00B9               	fcall	_strcpy
 11476  0771  3194  240C  3187   	line	20
 11477                           ;ESP8266.c: 20:         strcat(wCommand,iType);
 11478                           	movlw	low(Esp8266OpenSocketCommand@wCommand)
 11479  0774  3020               	movlb 0	; select bank0
 11480  0775  0020               	movwf	(strcat@dest)
 11481  0776  00C7               	movlw	high(Esp8266OpenSocketCommand@wCommand)
 11482  0777  3004               	movwf	(strcat@dest+1)
 11483  0778  00C8               	movlb 1	; select bank1
 11484  0779  0021               	movf	(Esp8266OpenSocketCommand@iType+1)^080h,w
 11485  077A  0821               	movlb 0	; select bank0
 11486  077B  0020               	movwf	(strcat@src+1)
 11487  077C  00CA               	movlb 1	; select bank1
 11488  077D  0021               	movf	(Esp8266OpenSocketCommand@iType)^080h,w
 11489  077E  0820               	movlb 0	; select bank0
 11490  077F  0020               	movwf	(strcat@src)
 11491  0780  00C9               	fcall	_strcat
 11492  0781  3193  236E  3187   	line	21
 11493                           ;ESP8266.c: 21:         strcat(wCommand,"\",\"");
 11494                           	movlw	low(Esp8266OpenSocketCommand@wCommand)
 11495  0784  3020               	movlb 0	; select bank0
 11496  0785  0020               	movwf	(strcat@dest)
 11497  0786  00C7               	movlw	high(Esp8266OpenSocketCommand@wCommand)
 11498  0787  3004               	movwf	(strcat@dest+1)
 11499  0788  00C8               	movlw	low(((STR_4)|8000h))
 11500  0789  30A2               	movwf	(strcat@src)
 11501  078A  00C9               	movlw	high(((STR_4)|8000h))
 11502  078B  3098               	movwf	((strcat@src))+1
 11503  078C  00CA               	fcall	_strcat
 11504  078D  3193  236E  3187   	line	22
 11505                           ;ESP8266.c: 22:         strcat(wCommand,iDestination);
 11506                           	movlw	low(Esp8266OpenSocketCommand@wCommand)
 11507  0790  3020               	movlb 0	; select bank0
 11508  0791  0020               	movwf	(strcat@dest)
 11509  0792  00C7               	movlw	high(Esp8266OpenSocketCommand@wCommand)
 11510  0793  3004               	movwf	(strcat@dest+1)
 11511  0794  00C8               	movlb 1	; select bank1
 11512  0795  0021               	movf	(Esp8266OpenSocketCommand@iDestination+1)^080h,w
 11513  0796  0823               	movlb 0	; select bank0
 11514  0797  0020               	movwf	(strcat@src+1)
 11515  0798  00CA               	movlb 1	; select bank1
 11516  0799  0021               	movf	(Esp8266OpenSocketCommand@iDestination)^080h,w
 11517  079A  0822               	movlb 0	; select bank0
 11518  079B  0020               	movwf	(strcat@src)
 11519  079C  00C9               	fcall	_strcat
 11520  079D  3193  236E  3187   	line	23
 11521                           ;ESP8266.c: 23:         strcat(wCommand,"\",");
 11522                           	movlw	low(Esp8266OpenSocketCommand@wCommand)
 11523  07A0  3020               	movlb 0	; select bank0
 11524  07A1  0020               	movwf	(strcat@dest)
 11525  07A2  00C7               	movlw	high(Esp8266OpenSocketCommand@wCommand)
 11526  07A3  3004               	movwf	(strcat@dest+1)
 11527  07A4  00C8               	movlw	low(((STR_5)|8000h))
 11528  07A5  30AA               	movwf	(strcat@src)
 11529  07A6  00C9               	movlw	high(((STR_5)|8000h))
 11530  07A7  3098               	movwf	((strcat@src))+1
 11531  07A8  00CA               	fcall	_strcat
 11532  07A9  3193  236E  3187   	line	25
 11533                           ;ESP8266.c: 24:         char wPort[7];;ESP8266.c: 25:         strcat(wCommand,uint16_tTo
                                 a(wPort,sizeof(wPort),DestinationPort));
 11534                           	movlw	low(Esp8266OpenSocketCommand@wCommand)
 11535  07AC  3020               	movlb 0	; select bank0
 11536  07AD  0020               	movwf	(strcat@dest)
 11537  07AE  00C7               	movlw	high(Esp8266OpenSocketCommand@wCommand)
 11538  07AF  3004               	movwf	(strcat@dest+1)
 11539  07B0  00C8               	movlw	low(07h)
 11540  07B1  3007               	movwf	(??_Esp8266OpenSocketCommand+0)+0
 11541  07B2  00CB               	movf	(??_Esp8266OpenSocketCommand+0)+0,w
 11542  07B3  084B               	movwf	(uint16_tToa@iSizeofText)
 11543  07B4  00B8               	movlb 1	; select bank1
 11544  07B5  0021               	movf	(Esp8266OpenSocketCommand@DestinationPort+1)^080h,w
 11545  07B6  0825               	movlb 0	; select bank0
 11546  07B7  0020               	movwf	(uint16_tToa@iNumber+1)
 11547  07B8  00BA               	movlb 1	; select bank1
 11548  07B9  0021               	movf	(Esp8266OpenSocketCommand@DestinationPort)^080h,w
 11549  07BA  0824               	movlb 0	; select bank0
 11550  07BB  0020               	movwf	(uint16_tToa@iNumber)
 11551  07BC  00B9               	movlw	(low(Esp8266OpenSocketCommand@wPort|((0x4)<<8)))&0ffh
 11552  07BD  3066               	fcall	_uint16_tToa
 11553  07BE  318A  22FC  3187   	movlb 0	; select bank0
 11554  07C1  0020               	movwf	(strcat@src)
 11555  07C2  00C9               	andlw 0xff
 11556  07C3  39FF               skipz
 11557  07C4  1D03               movlw	0x4
 11558  07C5  3004               
 11559                           	movwf	(strcat@src+1)
 11560  07C6  00CA               	fcall	_strcat
 11561  07C7  3193  236E  3187   	line	26
 11562                           ;ESP8266.c: 26:         strcat(wCommand,"\r\n");
 11563                           	movlw	low(Esp8266OpenSocketCommand@wCommand)
 11564  07CA  3020               	movlb 0	; select bank0
 11565  07CB  0020               	movwf	(strcat@dest)
 11566  07CC  00C7               	movlw	high(Esp8266OpenSocketCommand@wCommand)
 11567  07CD  3004               	movwf	(strcat@dest+1)
 11568  07CE  00C8               	movlw	low(((STR_6)|8000h))
 11569  07CF  3096               	movwf	(strcat@src)
 11570  07D0  00C9               	movlw	high(((STR_6)|8000h))
 11571  07D1  3098               	movwf	((strcat@src))+1
 11572  07D2  00CA               	fcall	_strcat
 11573  07D3  3193  236E  3187   	line	27
 11574                           	
 11575                           l5712:	
 11576  07D6                     ;ESP8266.c: 27:         wCommandSizeReturn = strlen(wCommand);
 11577                           	movlw	low(Esp8266OpenSocketCommand@wCommand)
 11578  07D6  3020               	movlb 0	; select bank0
 11579  07D7  0020               	movwf	(strlen@s)
 11580  07D8  00B0               	movlw	high(Esp8266OpenSocketCommand@wCommand)
 11581  07D9  3004               	movwf	(strlen@s+1)
 11582  07DA  00B1               	fcall	_strlen
 11583  07DB  3193  23C1  3187   	movlb 0	; select bank0
 11584  07DE  0020               	movf	(1+(?_strlen)),w
 11585  07DF  0831               	movlb 8	; select bank8
 11586  07E0  0028               	movwf	(Esp8266OpenSocketCommand@wCommandSizeReturn+1)^0400h
 11587  07E1  00EE               	movlb 0	; select bank0
 11588  07E2  0020               	movf	(0+(?_strlen)),w
 11589  07E3  0830               	movlb 8	; select bank8
 11590  07E4  0028               	movwf	(Esp8266OpenSocketCommand@wCommandSizeReturn)^0400h
 11591  07E5  00ED               	line	28
 11592                           	
 11593                           l5714:	
 11594  07E6                     ;ESP8266.c: 28:         Send_UART_Data((uint8_t*)wCommand,wCommandSizeReturn);
 11595                           	movlw	low(Esp8266OpenSocketCommand@wCommand)
 11596  07E6  3020               	movlb 0	; select bank0
 11597  07E7  0020               	movwf	(Send_UART_Data@iData)
 11598  07E8  00BC               	movlw	high(Esp8266OpenSocketCommand@wCommand)
 11599  07E9  3004               	movwf	(Send_UART_Data@iData+1)
 11600  07EA  00BD               	movlb 8	; select bank8
 11601  07EB  0028               	movf	(Esp8266OpenSocketCommand@wCommandSizeReturn)^0400h,w
 11602  07EC  086D               	movlb 0	; select bank0
 11603  07ED  0020               	movwf	(??_Esp8266OpenSocketCommand+0)+0
 11604  07EE  00CB               	movf	(??_Esp8266OpenSocketCommand+0)+0,w
 11605  07EF  084B               	movwf	(Send_UART_Data@iData_Length)
 11606  07F0  00BE               	fcall	_Send_UART_Data
 11607  07F1  3193  23E5  3187   	goto	l5716
 11608  07F4  2FF5               	line	29
 11609                           ;ESP8266.c: 29:     }
 11610                           	
 11611                           l678:	
 11612  07F5                     	line	31
 11613                           	
 11614                           l5716:	
 11615  07F5                     ;ESP8266.c: 31:     return wCommandSizeReturn;
 11616                           	movlb 8	; select bank8
 11617  07F5  0028               	movf	(Esp8266OpenSocketCommand@wCommandSizeReturn+1)^0400h,w
 11618  07F6  086E               	movlb 1	; select bank1
 11619  07F7  0021               	movwf	(?_Esp8266OpenSocketCommand+1)^080h
 11620  07F8  00A1               	movlb 8	; select bank8
 11621  07F9  0028               	movf	(Esp8266OpenSocketCommand@wCommandSizeReturn)^0400h,w
 11622  07FA  086D               	movlb 1	; select bank1
 11623  07FB  0021               	movwf	(?_Esp8266OpenSocketCommand)^080h
 11624  07FC  00A0               	goto	l679
 11625  07FD  2FFE               	
 11626                           l5718:	
 11627  07FE                     	line	32
 11628                           	
 11629                           l679:	
 11630  07FE                     	return
 11631  07FE  0008               	opt stack 0
 11632                           GLOBAL	__end_of_Esp8266OpenSocketCommand
 11633                           	__end_of_Esp8266OpenSocketCommand:
 11634  07FF                     	signat	_Esp8266OpenSocketCommand,12410
 11635                           	global	_uint16_tToa
 11636                           
 11637 ;; *************** function _uint16_tToa *****************
 11638 ;; Defined at:
 11639 ;;		line 72 in file "GeneralFunction.c"
 11640 ;; Parameters:    Size  Location     Type
 11641 ;;  wText           1    wreg     PTR unsigned char 
 11642 ;;		 -> Esp8266OpenSocketCommand@wPort(7), 
 11643 ;;  iSizeofText     1   24[BANK0 ] unsigned char 
 11644 ;;  iNumber         2   25[BANK0 ] unsigned short 
 11645 ;; Auto vars:     Size  Location     Type
 11646 ;;  wText           1   35[BANK0 ] PTR unsigned char 
 11647 ;;		 -> Esp8266OpenSocketCommand@wPort(7), 
 11648 ;;  wNumbers        6   29[BANK0 ] unsigned char [6]
 11649 ;;  i               2   36[BANK0 ] int 
 11650 ;;  wPosition       1   38[BANK0 ] unsigned char 
 11651 ;; Return value:  Size  Location     Type
 11652 ;;                  1    wreg      PTR unsigned char 
 11653 ;; Registers used:
 11654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11655 ;; Tracked objects:
 11656 ;;		On entry : 0/0
 11657 ;;		On exit  : 0/0
 11658 ;;		Unchanged: 0/0
 11659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11660 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 11661 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
 11662 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 11663 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
       0       0
 11664 ;;Total ram usage:       15 bytes
 11665 ;; Hardware stack levels used:    1
 11666 ;; Hardware stack levels required when called:    7
 11667 ;; This function calls:
 11668 ;;		___lwdiv
 11669 ;;		___lwmod
 11670 ;; This function is called by:
 11671 ;;		_Esp8266OpenSocketCommand
 11672 ;; This function uses a non-reentrant model
 11673 ;;
 11674                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
 11675                           	file	"GeneralFunction.c"
 11676                           	line	72
 11677                           global __ptext34
 11678                           __ptext34:	;psect for function _uint16_tToa
 11679  0AFC                     psect	text34
 11680                           	file	"GeneralFunction.c"
 11681                           	line	72
 11682                           	global	__size_of_uint16_tToa
 11683                           	__size_of_uint16_tToa	equ	__end_of_uint16_tToa-_uint16_tToa
 11684  0091                     	
 11685                           _uint16_tToa:	
 11686  0AFC                     ;incstack = 0
 11687                           	opt	stack 6
 11688                           ; Regs used in _uint16_tToa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11689                           ;uint16_tToa@wText stored from wreg
 11690                           	movlb 0	; select bank0
 11691  0AFC  0020               	movwf	(uint16_tToa@wText)
 11692  0AFD  00C3               	line	74
 11693                           	
 11694                           l5356:	
 11695  0AFE                     ;GeneralFunction.c: 72: char* uint16_tToa(char* wText, uint8_t iSizeofText, uint16_t iNu
                                 mber);GeneralFunction.c: 73: {;GeneralFunction.c: 74:     uint8_t wNumbers[6] = {0,0,0,0
                                 ,0,0};
 11696                           	movlw	low(uint16_tToa@F1867)
 11697  0AFE  30A0               	movwf	fsr1l
 11698  0AFF  0086               	movlw	high(uint16_tToa@F1867)
 11699  0B00  3001               	movwf	fsr1h
 11700  0B01  0087               	movlw	low(uint16_tToa@wNumbers)
 11701  0B02  303D               	movwf	fsr0l
 11702  0B03  0084               	movlw	high(uint16_tToa@wNumbers)
 11703  0B04  3000               	movwf	fsr0h
 11704  0B05  0085               	movlw	6
 11705  0B06  3006               	movwf	(??_uint16_tToa+0)+0
 11706  0B07  00BB               u3760:
 11707  0B08                     	moviw	fsr1++
 11708  0B08  0016               	movwi	fsr0++
 11709  0B09  001A               	decfsz	(??_uint16_tToa+0)+0,f
 11710  0B0A  0BBB               	goto	u3760
 11711  0B0B  2B08               	line	75
 11712                           	
 11713                           l5358:	
 11714  0B0C                     ;GeneralFunction.c: 75:     uint8_t wPosition=0;
 11715                           	clrf	(uint16_tToa@wPosition)
 11716  0B0C  01C6               	goto	l5360
 11717  0B0D  2B0E               	line	77
 11718                           ;GeneralFunction.c: 77:     do
 11719                           	
 11720                           l618:	
 11721  0B0E                     	line	79
 11722                           	
 11723                           l5360:	
 11724  0B0E                     ;GeneralFunction.c: 78:     {;GeneralFunction.c: 79:         wNumbers[wPosition] = iNumb
                                 er%10;
 11725                           	movlw	0Ah
 11726  0B0E  300A               	movwf	(___lwmod@divisor)
 11727  0B0F  00B0               	movlw	0
 11728  0B10  3000               	movwf	((___lwmod@divisor))+1
 11729  0B11  00B1               	movf	(uint16_tToa@iNumber+1),w
 11730  0B12  083A               	movwf	(___lwmod@dividend+1)
 11731  0B13  00B3               	movf	(uint16_tToa@iNumber),w
 11732  0B14  0839               	movwf	(___lwmod@dividend)
 11733  0B15  00B2               	fcall	___lwmod
 11734  0B16  3195  25E3  318A   	movlb 0	; select bank0
 11735  0B19  0020               	movf	(0+(?___lwmod)),w
 11736  0B1A  0830               	movwf	(??_uint16_tToa+0)+0
 11737  0B1B  00BB               	movf	(uint16_tToa@wPosition),w
 11738  0B1C  0846               	addlw	low(uint16_tToa@wNumbers|((0x0)<<8))&0ffh
 11739  0B1D  3E3D               	movwf	fsr1l
 11740  0B1E  0086               	clrf fsr1h	
 11741  0B1F  0187               	
 11742                           	movf	(??_uint16_tToa+0)+0,w
 11743  0B20  083B               	movwf	indf1
 11744  0B21  0081               	line	80
 11745                           	
 11746                           l5362:	
 11747  0B22                     ;GeneralFunction.c: 80:         iNumber = iNumber/10;
 11748                           	movlw	0Ah
 11749  0B22  300A               	movwf	(___lwdiv@divisor)
 11750  0B23  00B0               	movlw	0
 11751  0B24  3000               	movwf	((___lwdiv@divisor))+1
 11752  0B25  00B1               	movf	(uint16_tToa@iNumber+1),w
 11753  0B26  083A               	movwf	(___lwdiv@dividend+1)
 11754  0B27  00B3               	movf	(uint16_tToa@iNumber),w
 11755  0B28  0839               	movwf	(___lwdiv@dividend)
 11756  0B29  00B2               	fcall	___lwdiv
 11757  0B2A  3196  2697  318A   	movlb 0	; select bank0
 11758  0B2D  0020               	movf	(1+(?___lwdiv)),w
 11759  0B2E  0831               	movwf	(uint16_tToa@iNumber+1)
 11760  0B2F  00BA               	movf	(0+(?___lwdiv)),w
 11761  0B30  0830               	movwf	(uint16_tToa@iNumber)
 11762  0B31  00B9               	line	81
 11763                           	
 11764                           l5364:	
 11765  0B32                     ;GeneralFunction.c: 81:         wPosition++;
 11766                           	movlw	low(01h)
 11767  0B32  3001               	movwf	(??_uint16_tToa+0)+0
 11768  0B33  00BB               	movf	(??_uint16_tToa+0)+0,w
 11769  0B34  083B               	addwf	(uint16_tToa@wPosition),f
 11770  0B35  07C6               	line	82
 11771                           	
 11772                           l5366:	
 11773  0B36                     ;GeneralFunction.c: 82:         if(wPosition ==6 || wPosition == iSizeofText-1)
 11774                           		movlw	6
 11775  0B36  3006               	xorwf	((uint16_tToa@wPosition)),w
 11776  0B37  0646               	btfsc	status,2
 11777  0B38  1903               	goto	u3771
 11778  0B39  2B3B               	goto	u3770
 11779  0B3A  2B3C               u3771:
 11780  0B3B                     	goto	l5370
 11781  0B3B  2B4B               u3770:
 11782  0B3C                     	
 11783                           l5368:	
 11784  0B3C                     	movf	(uint16_tToa@iSizeofText),w
 11785  0B3C  0838               	addlw	low(-1)
 11786  0B3D  3EFF               	movwf	(??_uint16_tToa+0)+0
 11787  0B3E  00BB               	movlw	high(-1)
 11788  0B3F  30FF               	skipnc
 11789  0B40  1803               	movlw	(high(-1)+1)&0ffh
 11790  0B41  3000               	movwf	((??_uint16_tToa+0)+0)+1
 11791  0B42  00BC               	movf	(uint16_tToa@wPosition),w
 11792  0B43  0846               	xorwf	0+(??_uint16_tToa+0)+0,w
 11793  0B44  063B               	iorwf	1+(??_uint16_tToa+0)+0,w
 11794  0B45  043C               	skipz
 11795  0B46  1D03               	goto	u3781
 11796  0B47  2B49               	goto	u3780
 11797  0B48  2B4A               u3781:
 11798  0B49                     	goto	l5374
 11799  0B49  2B4E               u3780:
 11800  0B4A                     	goto	l5370
 11801  0B4A  2B4B               	
 11802                           l621:	
 11803  0B4B                     	line	84
 11804                           	
 11805                           l5370:	
 11806  0B4B                     ;GeneralFunction.c: 83:         {;GeneralFunction.c: 84:          return ((void*)0);
 11807                           	movlw	low(0)
 11808  0B4B  3000               	goto	l622
 11809  0B4C  2B8C               	
 11810                           l5372:	
 11811  0B4D                     	goto	l622
 11812  0B4D  2B8C               	line	85
 11813                           ;GeneralFunction.c: 85:         }
 11814                           	
 11815                           l619:	
 11816  0B4E                     	line	86
 11817                           	
 11818                           l5374:	
 11819  0B4E                     ;GeneralFunction.c: 86:     }
 11820                           	movf	((uint16_tToa@iNumber)),w
 11821  0B4E  0839               iorwf	((uint16_tToa@iNumber+1)),w
 11822  0B4F  043A               	btfss	status,2
 11823  0B50  1D03               	goto	u3791
 11824  0B51  2B53               	goto	u3790
 11825  0B52  2B54               u3791:
 11826  0B53                     	goto	l5360
 11827  0B53  2B0E               u3790:
 11828  0B54                     	goto	l5376
 11829  0B54  2B55               	
 11830                           l623:	
 11831  0B55                     	line	89
 11832                           	
 11833                           l5376:	
 11834  0B55                     ;GeneralFunction.c: 89:     int i=0;
 11835                           	clrf	(uint16_tToa@i)
 11836  0B55  01C4               	clrf	(uint16_tToa@i+1)
 11837  0B56  01C5               	line	90
 11838                           ;GeneralFunction.c: 90:     for(i=0;i<wPosition;i++)
 11839                           	clrf	(uint16_tToa@i)
 11840  0B57  01C4               	clrf	(uint16_tToa@i+1)
 11841  0B58  01C5               	goto	l5382
 11842  0B59  2B73               	
 11843                           l625:	
 11844  0B5A                     	line	92
 11845                           	
 11846                           l5378:	
 11847  0B5A                     ;GeneralFunction.c: 91:     {;GeneralFunction.c: 92:         wText[i] = '0' + wNumbers[w
                                 Position -i -1];
 11848                           	movlb 0	; select bank0
 11849  0B5A  0020               	decf	(uint16_tToa@i),w
 11850  0B5B  0344               	xorlw	0ffh
 11851  0B5C  3AFF               	addwf	(uint16_tToa@wPosition),w
 11852  0B5D  0746               	addlw	0FFh
 11853  0B5E  3EFF               	addlw	low(uint16_tToa@wNumbers|((0x0)<<8))&0ffh
 11854  0B5F  3E3D               	movwf	fsr1l
 11855  0B60  0086               	clrf fsr1h	
 11856  0B61  0187               	
 11857                           	movf	indf1,w
 11858  0B62  0801               	addlw	030h
 11859  0B63  3E30               	movwf	(??_uint16_tToa+0)+0
 11860  0B64  00BB               	movf	(uint16_tToa@i),w
 11861  0B65  0844               	addwf	(uint16_tToa@wText),w
 11862  0B66  0743               	movwf	(??_uint16_tToa+1)+0
 11863  0B67  00BC               	movf	0+(??_uint16_tToa+1)+0,w
 11864  0B68  083C               	movwf	fsr1l
 11865  0B69  0086               	movlw 4	; select bank8/9
 11866  0B6A  3004               	movwf fsr1h	
 11867  0B6B  0087               	
 11868                           	movf	(??_uint16_tToa+0)+0,w
 11869  0B6C  083B               	movwf	indf1
 11870  0B6D  0081               	line	93
 11871                           	
 11872                           l5380:	
 11873  0B6E                     ;GeneralFunction.c: 93:     }
 11874                           	movlw	01h
 11875  0B6E  3001               	addwf	(uint16_tToa@i),f
 11876  0B6F  07C4               	movlw	0
 11877  0B70  3000               	addwfc	(uint16_tToa@i+1),f
 11878  0B71  3DC5               	goto	l5382
 11879  0B72  2B73               	
 11880                           l624:	
 11881  0B73                     	
 11882                           l5382:	
 11883  0B73                     	movf	(uint16_tToa@i+1),w
 11884  0B73  0845               	xorlw	80h
 11885  0B74  3A80               	movwf	(??_uint16_tToa+0)+0
 11886  0B75  00BB               	movlw	80h
 11887  0B76  3080               	subwf	(??_uint16_tToa+0)+0,w
 11888  0B77  023B               	skipz
 11889  0B78  1D03               	goto	u3805
 11890  0B79  2B7C               	movf	(uint16_tToa@wPosition),w
 11891  0B7A  0846               	subwf	(uint16_tToa@i),w
 11892  0B7B  0244               u3805:
 11893  0B7C                     
 11894                           	skipc
 11895  0B7C  1C03               	goto	u3801
 11896  0B7D  2B7F               	goto	u3800
 11897  0B7E  2B80               u3801:
 11898  0B7F                     	goto	l5378
 11899  0B7F  2B5A               u3800:
 11900  0B80                     	goto	l5384
 11901  0B80  2B81               	
 11902                           l626:	
 11903  0B81                     	line	94
 11904                           	
 11905                           l5384:	
 11906  0B81                     ;GeneralFunction.c: 94:     wText[i] = 0;
 11907                           	movlb 0	; select bank0
 11908  0B81  0020               	movf	(uint16_tToa@i),w
 11909  0B82  0844               	addwf	(uint16_tToa@wText),w
 11910  0B83  0743               	movwf	(??_uint16_tToa+0)+0
 11911  0B84  00BB               	movf	0+(??_uint16_tToa+0)+0,w
 11912  0B85  083B               	movwf	fsr1l
 11913  0B86  0086               	movlw 4	; select bank8/9
 11914  0B87  3004               	movwf fsr1h	
 11915  0B88  0087               	
 11916                           	clrf	indf1
 11917  0B89  0181               	line	96
 11918                           	
 11919                           l5386:	
 11920  0B8A                     ;GeneralFunction.c: 96:     return wText;
 11921                           	movf	(uint16_tToa@wText),w
 11922  0B8A  0843               	goto	l622
 11923  0B8B  2B8C               	
 11924                           l5388:	
 11925  0B8C                     	line	97
 11926                           	
 11927                           l622:	
 11928  0B8C                     	return
 11929  0B8C  0008               	opt stack 0
 11930                           GLOBAL	__end_of_uint16_tToa
 11931                           	__end_of_uint16_tToa:
 11932  0B8D                     	signat	_uint16_tToa,12409
 11933                           	global	___lwmod
 11934                           
 11935 ;; *************** function ___lwmod *****************
 11936 ;; Defined at:
 11937 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
 11938 ;; Parameters:    Size  Location     Type
 11939 ;;  divisor         2   16[BANK0 ] unsigned int 
 11940 ;;  dividend        2   18[BANK0 ] unsigned int 
 11941 ;; Auto vars:     Size  Location     Type
 11942 ;;  counter         1   21[BANK0 ] unsigned char 
 11943 ;; Return value:  Size  Location     Type
 11944 ;;                  2   16[BANK0 ] unsigned int 
 11945 ;; Registers used:
 11946 ;;		wreg, status,2, status,0
 11947 ;; Tracked objects:
 11948 ;;		On entry : 0/0
 11949 ;;		On exit  : 0/0
 11950 ;;		Unchanged: 0/0
 11951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11952 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 11953 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11954 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11955 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 11956 ;;Total ram usage:        6 bytes
 11957 ;; Hardware stack levels used:    1
 11958 ;; Hardware stack levels required when called:    6
 11959 ;; This function calls:
 11960 ;;		Nothing
 11961 ;; This function is called by:
 11962 ;;		_uint16_tToa
 11963 ;; This function uses a non-reentrant model
 11964 ;;
 11965                           psect	text35,local,class=CODE,delta=2,merge=1,group=1
 11966                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
 11967                           	line	5
 11968                           global __ptext35
 11969                           __ptext35:	;psect for function ___lwmod
 11970  15E3                     psect	text35
 11971                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
 11972                           	line	5
 11973                           	global	__size_of___lwmod
 11974                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 11975  003C                     	
 11976                           ___lwmod:	
 11977  15E3                     ;incstack = 0
 11978                           	opt	stack 6
 11979                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 11980                           	line	12
 11981                           	
 11982                           l5238:	
 11983  15E3                     	movlb 0	; select bank0
 11984  15E3  0020               	movf	((___lwmod@divisor)),w
 11985  15E4  0830               iorwf	((___lwmod@divisor+1)),w
 11986  15E5  0431               	btfsc	status,2
 11987  15E6  1903               	goto	u3611
 11988  15E7  2DE9               	goto	u3610
 11989  15E8  2DEA               u3611:
 11990  15E9                     	goto	l5256
 11991  15E9  2E19               u3610:
 11992  15EA                     	line	13
 11993                           	
 11994                           l5240:	
 11995  15EA                     	clrf	(___lwmod@counter)
 11996  15EA  01B5               	incf	(___lwmod@counter),f
 11997  15EB  0AB5               	line	14
 11998                           	goto	l5246
 11999  15EC  2DF7               	
 12000                           l1095:	
 12001  15ED                     	line	15
 12002                           	
 12003                           l5242:	
 12004  15ED                     	movlw	01h
 12005  15ED  3001               	
 12006                           u3625:
 12007  15EE                     	lslf	(___lwmod@divisor),f
 12008  15EE  35B0               	rlf	(___lwmod@divisor+1),f
 12009  15EF  0DB1               	decfsz	wreg,f
 12010  15F0  0B89               	goto	u3625
 12011  15F1  2DEE               	line	16
 12012                           	
 12013                           l5244:	
 12014  15F2                     	movlw	low(01h)
 12015  15F2  3001               	movwf	(??___lwmod+0)+0
 12016  15F3  00B4               	movf	(??___lwmod+0)+0,w
 12017  15F4  0834               	addwf	(___lwmod@counter),f
 12018  15F5  07B5               	goto	l5246
 12019  15F6  2DF7               	line	17
 12020                           	
 12021                           l1094:	
 12022  15F7                     	line	14
 12023                           	
 12024                           l5246:	
 12025  15F7                     	btfss	(___lwmod@divisor+1),(15)&7
 12026  15F7  1FB1               	goto	u3631
 12027  15F8  2DFA               	goto	u3630
 12028  15F9  2DFB               u3631:
 12029  15FA                     	goto	l5242
 12030  15FA  2DED               u3630:
 12031  15FB                     	goto	l5248
 12032  15FB  2DFD               	
 12033                           l1096:	
 12034  15FC                     	goto	l5248
 12035  15FC  2DFD               	line	18
 12036                           	
 12037                           l1097:	
 12038  15FD                     	line	19
 12039                           	
 12040                           l5248:	
 12041  15FD                     	movf	(___lwmod@divisor+1),w
 12042  15FD  0831               	subwf	(___lwmod@dividend+1),w
 12043  15FE  0233               	skipz
 12044  15FF  1D03               	goto	u3645
 12045  1600  2E03               	movf	(___lwmod@divisor),w
 12046  1601  0830               	subwf	(___lwmod@dividend),w
 12047  1602  0232               u3645:
 12048  1603                     	skipc
 12049  1603  1C03               	goto	u3641
 12050  1604  2E06               	goto	u3640
 12051  1605  2E07               u3641:
 12052  1606                     	goto	l5252
 12053  1606  2E0C               u3640:
 12054  1607                     	line	20
 12055                           	
 12056                           l5250:	
 12057  1607                     	movf	(___lwmod@divisor),w
 12058  1607  0830               	subwf	(___lwmod@dividend),f
 12059  1608  02B2               	movf	(___lwmod@divisor+1),w
 12060  1609  0831               	subwfb	(___lwmod@dividend+1),f
 12061  160A  3BB3               	goto	l5252
 12062  160B  2E0C               	
 12063                           l1098:	
 12064  160C                     	line	21
 12065                           	
 12066                           l5252:	
 12067  160C                     	movlw	01h
 12068  160C  3001               	
 12069                           u3655:
 12070  160D                     	lsrf	(___lwmod@divisor+1),f
 12071  160D  36B1               	rrf	(___lwmod@divisor),f
 12072  160E  0CB0               	decfsz	wreg,f
 12073  160F  0B89               	goto	u3655
 12074  1610  2E0D               	line	22
 12075                           	
 12076                           l5254:	
 12077  1611                     	movlw	01h
 12078  1611  3001               	subwf	(___lwmod@counter),f
 12079  1612  02B5               	btfss	status,2
 12080  1613  1D03               	goto	u3661
 12081  1614  2E16               	goto	u3660
 12082  1615  2E17               u3661:
 12083  1616                     	goto	l5248
 12084  1616  2DFD               u3660:
 12085  1617                     	goto	l5256
 12086  1617  2E19               	
 12087                           l1099:	
 12088  1618                     	goto	l5256
 12089  1618  2E19               	line	23
 12090                           	
 12091                           l1093:	
 12092  1619                     	line	24
 12093                           	
 12094                           l5256:	
 12095  1619                     	movf	(___lwmod@dividend+1),w
 12096  1619  0833               	movwf	(?___lwmod+1)
 12097  161A  00B1               	movf	(___lwmod@dividend),w
 12098  161B  0832               	movwf	(?___lwmod)
 12099  161C  00B0               	goto	l1100
 12100  161D  2E1E               	
 12101                           l5258:	
 12102  161E                     	line	25
 12103                           	
 12104                           l1100:	
 12105  161E                     	return
 12106  161E  0008               	opt stack 0
 12107                           GLOBAL	__end_of___lwmod
 12108                           	__end_of___lwmod:
 12109  161F                     	signat	___lwmod,8314
 12110                           	global	___lwdiv
 12111                           
 12112 ;; *************** function ___lwdiv *****************
 12113 ;; Defined at:
 12114 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
 12115 ;; Parameters:    Size  Location     Type
 12116 ;;  divisor         2   16[BANK0 ] unsigned int 
 12117 ;;  dividend        2   18[BANK0 ] unsigned int 
 12118 ;; Auto vars:     Size  Location     Type
 12119 ;;  quotient        2   22[BANK0 ] unsigned int 
 12120 ;;  counter         1   21[BANK0 ] unsigned char 
 12121 ;; Return value:  Size  Location     Type
 12122 ;;                  2   16[BANK0 ] unsigned int 
 12123 ;; Registers used:
 12124 ;;		wreg, status,2, status,0
 12125 ;; Tracked objects:
 12126 ;;		On entry : 0/0
 12127 ;;		On exit  : 0/0
 12128 ;;		Unchanged: 0/0
 12129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12130 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 12131 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 12132 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12133 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 12134 ;;Total ram usage:        8 bytes
 12135 ;; Hardware stack levels used:    1
 12136 ;; Hardware stack levels required when called:    6
 12137 ;; This function calls:
 12138 ;;		Nothing
 12139 ;; This function is called by:
 12140 ;;		_uint16_tToa
 12141 ;; This function uses a non-reentrant model
 12142 ;;
 12143                           psect	text36,local,class=CODE,delta=2,merge=1,group=1
 12144                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
 12145                           	line	5
 12146                           global __ptext36
 12147                           __ptext36:	;psect for function ___lwdiv
 12148  1697                     psect	text36
 12149                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
 12150                           	line	5
 12151                           	global	__size_of___lwdiv
 12152                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 12153  0044                     	
 12154                           ___lwdiv:	
 12155  1697                     ;incstack = 0
 12156                           	opt	stack 6
 12157                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 12158                           	line	13
 12159                           	
 12160                           l5212:	
 12161  1697                     	movlb 0	; select bank0
 12162  1697  0020               	clrf	(___lwdiv@quotient)
 12163  1698  01B6               	clrf	(___lwdiv@quotient+1)
 12164  1699  01B7               	line	14
 12165                           	
 12166                           l5214:	
 12167  169A                     	movf	((___lwdiv@divisor)),w
 12168  169A  0830               iorwf	((___lwdiv@divisor+1)),w
 12169  169B  0431               	btfsc	status,2
 12170  169C  1903               	goto	u3541
 12171  169D  2E9F               	goto	u3540
 12172  169E  2EA0               u3541:
 12173  169F                     	goto	l5234
 12174  169F  2ED5               u3540:
 12175  16A0                     	line	15
 12176                           	
 12177                           l5216:	
 12178  16A0                     	clrf	(___lwdiv@counter)
 12179  16A0  01B5               	incf	(___lwdiv@counter),f
 12180  16A1  0AB5               	line	16
 12181                           	goto	l5222
 12182  16A2  2EAD               	
 12183                           l1085:	
 12184  16A3                     	line	17
 12185                           	
 12186                           l5218:	
 12187  16A3                     	movlw	01h
 12188  16A3  3001               	
 12189                           u3555:
 12190  16A4                     	lslf	(___lwdiv@divisor),f
 12191  16A4  35B0               	rlf	(___lwdiv@divisor+1),f
 12192  16A5  0DB1               	decfsz	wreg,f
 12193  16A6  0B89               	goto	u3555
 12194  16A7  2EA4               	line	18
 12195                           	
 12196                           l5220:	
 12197  16A8                     	movlw	low(01h)
 12198  16A8  3001               	movwf	(??___lwdiv+0)+0
 12199  16A9  00B4               	movf	(??___lwdiv+0)+0,w
 12200  16AA  0834               	addwf	(___lwdiv@counter),f
 12201  16AB  07B5               	goto	l5222
 12202  16AC  2EAD               	line	19
 12203                           	
 12204                           l1084:	
 12205  16AD                     	line	16
 12206                           	
 12207                           l5222:	
 12208  16AD                     	btfss	(___lwdiv@divisor+1),(15)&7
 12209  16AD  1FB1               	goto	u3561
 12210  16AE  2EB0               	goto	u3560
 12211  16AF  2EB1               u3561:
 12212  16B0                     	goto	l5218
 12213  16B0  2EA3               u3560:
 12214  16B1                     	goto	l5224
 12215  16B1  2EB3               	
 12216                           l1086:	
 12217  16B2                     	goto	l5224
 12218  16B2  2EB3               	line	20
 12219                           	
 12220                           l1087:	
 12221  16B3                     	line	21
 12222                           	
 12223                           l5224:	
 12224  16B3                     	movlw	01h
 12225  16B3  3001               	
 12226                           u3575:
 12227  16B4                     	lslf	(___lwdiv@quotient),f
 12228  16B4  35B6               	rlf	(___lwdiv@quotient+1),f
 12229  16B5  0DB7               	decfsz	wreg,f
 12230  16B6  0B89               	goto	u3575
 12231  16B7  2EB4               	line	22
 12232                           	movf	(___lwdiv@divisor+1),w
 12233  16B8  0831               	subwf	(___lwdiv@dividend+1),w
 12234  16B9  0233               	skipz
 12235  16BA  1D03               	goto	u3585
 12236  16BB  2EBE               	movf	(___lwdiv@divisor),w
 12237  16BC  0830               	subwf	(___lwdiv@dividend),w
 12238  16BD  0232               u3585:
 12239  16BE                     	skipc
 12240  16BE  1C03               	goto	u3581
 12241  16BF  2EC1               	goto	u3580
 12242  16C0  2EC2               u3581:
 12243  16C1                     	goto	l5230
 12244  16C1  2EC8               u3580:
 12245  16C2                     	line	23
 12246                           	
 12247                           l5226:	
 12248  16C2                     	movf	(___lwdiv@divisor),w
 12249  16C2  0830               	subwf	(___lwdiv@dividend),f
 12250  16C3  02B2               	movf	(___lwdiv@divisor+1),w
 12251  16C4  0831               	subwfb	(___lwdiv@dividend+1),f
 12252  16C5  3BB3               	line	24
 12253                           	
 12254                           l5228:	
 12255  16C6                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 12256  16C6  1436               	goto	l5230
 12257  16C7  2EC8               	line	25
 12258                           	
 12259                           l1088:	
 12260  16C8                     	line	26
 12261                           	
 12262                           l5230:	
 12263  16C8                     	movlw	01h
 12264  16C8  3001               	
 12265                           u3595:
 12266  16C9                     	lsrf	(___lwdiv@divisor+1),f
 12267  16C9  36B1               	rrf	(___lwdiv@divisor),f
 12268  16CA  0CB0               	decfsz	wreg,f
 12269  16CB  0B89               	goto	u3595
 12270  16CC  2EC9               	line	27
 12271                           	
 12272                           l5232:	
 12273  16CD                     	movlw	01h
 12274  16CD  3001               	subwf	(___lwdiv@counter),f
 12275  16CE  02B5               	btfss	status,2
 12276  16CF  1D03               	goto	u3601
 12277  16D0  2ED2               	goto	u3600
 12278  16D1  2ED3               u3601:
 12279  16D2                     	goto	l5224
 12280  16D2  2EB3               u3600:
 12281  16D3                     	goto	l5234
 12282  16D3  2ED5               	
 12283                           l1089:	
 12284  16D4                     	goto	l5234
 12285  16D4  2ED5               	line	28
 12286                           	
 12287                           l1083:	
 12288  16D5                     	line	29
 12289                           	
 12290                           l5234:	
 12291  16D5                     	movf	(___lwdiv@quotient+1),w
 12292  16D5  0837               	movwf	(?___lwdiv+1)
 12293  16D6  00B1               	movf	(___lwdiv@quotient),w
 12294  16D7  0836               	movwf	(?___lwdiv)
 12295  16D8  00B0               	goto	l1090
 12296  16D9  2EDA               	
 12297                           l5236:	
 12298  16DA                     	line	30
 12299                           	
 12300                           l1090:	
 12301  16DA                     	return
 12302  16DA  0008               	opt stack 0
 12303                           GLOBAL	__end_of___lwdiv
 12304                           	__end_of___lwdiv:
 12305  16DB                     	signat	___lwdiv,8314
 12306                           	global	_Send_UART_Data
 12307                           
 12308 ;; *************** function _Send_UART_Data *****************
 12309 ;; Defined at:
 12310 ;;		line 27 in file "EUSART.c"
 12311 ;; Parameters:    Size  Location     Type
 12312 ;;  iData           2   28[BANK0 ] PTR unsigned char 
 12313 ;;		 -> STR_14(14), Esp8266SetNetworkParameters@wCommand(70), Esp8266OpenSocketCommand@wCommand(70), 
 12314 ;;  iData_Length    1   30[BANK0 ] unsigned char 
 12315 ;; Auto vars:     Size  Location     Type
 12316 ;;		None
 12317 ;; Return value:  Size  Location     Type
 12318 ;;                  1    wreg      void 
 12319 ;; Registers used:
 12320 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12321 ;; Tracked objects:
 12322 ;;		On entry : 0/0
 12323 ;;		On exit  : 0/0
 12324 ;;		Unchanged: 0/0
 12325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12326 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 12327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12328 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 12329 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 12330 ;;Total ram usage:        5 bytes
 12331 ;; Hardware stack levels used:    1
 12332 ;; Hardware stack levels required when called:    7
 12333 ;; This function calls:
 12334 ;;		_memcpy
 12335 ;; This function is called by:
 12336 ;;		_Esp8266OpenSocketCommand
 12337 ;;		_Esp8266SetNetworkParameters
 12338 ;;		_Esp8266Entrypoint
 12339 ;; This function uses a non-reentrant model
 12340 ;;
 12341                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
 12342                           	file	"EUSART.c"
 12343                           	line	27
 12344                           global __ptext37
 12345                           __ptext37:	;psect for function _Send_UART_Data
 12346  13E5                     psect	text37
 12347                           	file	"EUSART.c"
 12348                           	line	27
 12349                           	global	__size_of_Send_UART_Data
 12350                           	__size_of_Send_UART_Data	equ	__end_of_Send_UART_Data-_Send_UART_Data
 12351  0027                     	
 12352                           _Send_UART_Data:	
 12353  13E5                     ;incstack = 0
 12354                           	opt	stack 7
 12355                           ; Regs used in _Send_UART_Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12356                           	line	29
 12357                           	
 12358                           l5390:	
 12359  13E5                     ;EUSART.c: 27: void Send_UART_Data( uint8_t* iData, uint8_t iData_Length);EUSART.c: 28: 
                                 {;EUSART.c: 29:     if(gTxTransmitSize != 0 )
 12360                           	movlb 0	; select bank0
 12361  13E5  0020               	movf	((_gTxTransmitSize)),w
 12362  13E6  0850               	btfsc	status,2
 12363  13E7  1903               	goto	u3811
 12364  13E8  2BEA               	goto	u3810
 12365  13E9  2BEB               u3811:
 12366  13EA                     	goto	l5394
 12367  13EA  2BED               u3810:
 12368  13EB                     	goto	l784
 12369  13EB  2C0B               	line	31
 12370                           	
 12371                           l5392:	
 12372  13EC                     ;EUSART.c: 30:     {;EUSART.c: 31:         return;
 12373                           	goto	l784
 12374  13EC  2C0B               	line	32
 12375                           ;EUSART.c: 32:     }
 12376                           	
 12377                           l783:	
 12378  13ED                     	line	33
 12379                           	
 12380                           l5394:	
 12381  13ED                     ;EUSART.c: 33:     if(iData_Length < sizeof(gEusartTXBuffer))
 12382                           	movlw	low(046h)
 12383  13ED  3046               	subwf	(Send_UART_Data@iData_Length),w
 12384  13EE  023E               	skipnc
 12385  13EF  1803               	goto	u3821
 12386  13F0  2BF2               	goto	u3820
 12387  13F1  2BF3               u3821:
 12388  13F2                     	goto	l784
 12389  13F2  2C0B               u3820:
 12390  13F3                     	line	35
 12391                           	
 12392                           l5396:	
 12393  13F3                     ;EUSART.c: 34:     {;EUSART.c: 35:         gTxReadingPosition = 0;
 12394                           	clrf	(_gTxReadingPosition)
 12395  13F3  01D1               	line	36
 12396                           	
 12397                           l5398:	
 12398  13F4                     ;EUSART.c: 36:         gTxTransmitSize = iData_Length;
 12399                           	movf	(Send_UART_Data@iData_Length),w
 12400  13F4  083E               	movwf	(??_Send_UART_Data+0)+0
 12401  13F5  00BF               	movf	(??_Send_UART_Data+0)+0,w
 12402  13F6  083F               	movwf	(_gTxTransmitSize)
 12403  13F7  00D0               	line	37
 12404                           	
 12405                           l5400:	
 12406  13F8                     ;EUSART.c: 37:         memcpy(gEusartTXBuffer , iData,iData_Length);
 12407                           	movlw	low(_gEusartTXBuffer)
 12408  13F8  30A0               	movwf	(memcpy@d1)
 12409  13F9  00B0               	movlw	high(_gEusartTXBuffer)
 12410  13FA  3003               	movwf	(memcpy@d1+1)
 12411  13FB  00B1               	movf	(Send_UART_Data@iData+1),w
 12412  13FC  083D               	movwf	(memcpy@s1+1)
 12413  13FD  00B3               	movf	(Send_UART_Data@iData),w
 12414  13FE  083C               	movwf	(memcpy@s1)
 12415  13FF  00B2               	movf	(Send_UART_Data@iData_Length),w
 12416  1400  083E               	movwf	(??_Send_UART_Data+0)+0
 12417  1401  00BF               	clrf	(??_Send_UART_Data+0)+0+1
 12418  1402  01C0               	movf	0+(??_Send_UART_Data+0)+0,w
 12419  1403  083F               	movwf	(memcpy@n)
 12420  1404  00B4               	movf	1+(??_Send_UART_Data+0)+0,w
 12421  1405  0840               	movwf	(memcpy@n+1)
 12422  1406  00B5               	fcall	_memcpy
 12423  1407  3195  250F  3193   	goto	l784
 12424  140A  2C0B               	line	38
 12425                           ;EUSART.c: 38:     }
 12426                           	
 12427                           l785:	
 12428  140B                     	line	39
 12429                           	
 12430                           l784:	
 12431  140B                     	return
 12432  140B  0008               	opt stack 0
 12433                           GLOBAL	__end_of_Send_UART_Data
 12434                           	__end_of_Send_UART_Data:
 12435  140C                     	signat	_Send_UART_Data,8313
 12436                           	global	_EUSARTInit
 12437                           
 12438 ;; *************** function _EUSARTInit *****************
 12439 ;; Defined at:
 12440 ;;		line 5 in file "EUSART.c"
 12441 ;; Parameters:    Size  Location     Type
 12442 ;;		None
 12443 ;; Auto vars:     Size  Location     Type
 12444 ;;		None
 12445 ;; Return value:  Size  Location     Type
 12446 ;;                  1    wreg      void 
 12447 ;; Registers used:
 12448 ;;		wreg, status,2
 12449 ;; Tracked objects:
 12450 ;;		On entry : 0/0
 12451 ;;		On exit  : 0/0
 12452 ;;		Unchanged: 0/0
 12453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12458 ;;Total ram usage:        0 bytes
 12459 ;; Hardware stack levels used:    1
 12460 ;; Hardware stack levels required when called:    6
 12461 ;; This function calls:
 12462 ;;		Nothing
 12463 ;; This function is called by:
 12464 ;;		_main
 12465 ;; This function uses a non-reentrant model
 12466 ;;
 12467                           psect	text38,local,class=CODE,delta=2,merge=1,group=0
 12468                           	line	5
 12469                           global __ptext38
 12470                           __ptext38:	;psect for function _EUSARTInit
 12471  1359                     psect	text38
 12472                           	file	"EUSART.c"
 12473                           	line	5
 12474                           	global	__size_of_EUSARTInit
 12475                           	__size_of_EUSARTInit	equ	__end_of_EUSARTInit-_EUSARTInit
 12476  0015                     	
 12477                           _EUSARTInit:	
 12478  1359                     ;incstack = 0
 12479                           	opt	stack 9
 12480                           ; Regs used in _EUSARTInit: [wreg+status,2]
 12481                           	line	9
 12482                           	
 12483                           l5912:	
 12484  1359                     ;EUSART.c: 9:   ANSELCbits.ANSC6 = 0;
 12485                           	movlb 3	; select bank3
 12486  1359  0023               	bcf	(398)^0180h,6	;volatile
 12487  135A  130E               	line	10
 12488                           ;EUSART.c: 10:   ANSELCbits.ANSC7 = 0;
 12489                           	bcf	(398)^0180h,7	;volatile
 12490  135B  138E               	line	11
 12491                           ;EUSART.c: 11:   TRISCbits.TRISC6 = 0;
 12492                           	movlb 1	; select bank1
 12493  135C  0021               	bcf	(142)^080h,6	;volatile
 12494  135D  130E               	line	12
 12495                           ;EUSART.c: 12:   TRISCbits.TRISC7 = 1;
 12496                           	bsf	(142)^080h,7	;volatile
 12497  135E  178E               	line	13
 12498                           	
 12499                           l5914:	
 12500  135F                     ;EUSART.c: 13:   gEusartRXBufferIndex = 0;
 12501                           	movlb 0	; select bank0
 12502  135F  0020               	clrf	(_gEusartRXBufferIndex)
 12503  1360  01D2               	line	15
 12504                           ;EUSART.c: 15:   SPBRGH = 0;
 12505                           	movlb 3	; select bank3
 12506  1361  0023               	clrf	(412)^0180h	;volatile
 12507  1362  019C               	line	16
 12508                           	
 12509                           l5916:	
 12510  1363                     ;EUSART.c: 16:   SPBRGL = 1;
 12511                           	movlw	low(01h)
 12512  1363  3001               	movwf	(411)^0180h	;volatile
 12513  1364  009B               	line	17
 12514                           	
 12515                           l5918:	
 12516  1365                     ;EUSART.c: 17:   ANSELCbits.ANSC6 = 0;
 12517                           	bcf	(398)^0180h,6	;volatile
 12518  1365  130E               	line	18
 12519                           	
 12520                           l5920:	
 12521  1366                     ;EUSART.c: 18:   TXSTAbits.TXEN = 1;
 12522                           	bsf	(414)^0180h,5	;volatile
 12523  1366  169E               	line	19
 12524                           	
 12525                           l5922:	
 12526  1367                     ;EUSART.c: 19:   TXSTAbits.SYNC = 0;
 12527                           	bcf	(414)^0180h,4	;volatile
 12528  1367  121E               	line	20
 12529                           	
 12530                           l5924:	
 12531  1368                     ;EUSART.c: 20:   RCSTAbits.SPEN = 1;
 12532                           	bsf	(413)^0180h,7	;volatile
 12533  1368  179D               	line	21
 12534                           	
 12535                           l5926:	
 12536  1369                     ;EUSART.c: 21:   PIE1bits.TXIE = 1;
 12537                           	movlb 1	; select bank1
 12538  1369  0021               	bsf	(145)^080h,4	;volatile
 12539  136A  1611               	line	23
 12540                           	
 12541                           l5928:	
 12542  136B                     ;EUSART.c: 23:   PIE1bits.RCIE = 1;
 12543                           	bsf	(145)^080h,5	;volatile
 12544  136B  1691               	line	24
 12545                           	
 12546                           l5930:	
 12547  136C                     ;EUSART.c: 24:   INTCONbits.PEIE = 1;
 12548                           	bsf	(11),6	;volatile
 12549  136C  170B               	line	25
 12550                           	
 12551                           l780:	
 12552  136D                     	return
 12553  136D  0008               	opt stack 0
 12554                           GLOBAL	__end_of_EUSARTInit
 12555                           	__end_of_EUSARTInit:
 12556  136E                     	signat	_EUSARTInit,89
 12557                           	global	_EM1812EntryPoint
 12558                           
 12559 ;; *************** function _EM1812EntryPoint *****************
 12560 ;; Defined at:
 12561 ;;		line 95 in file "EM1812.c"
 12562 ;; Parameters:    Size  Location     Type
 12563 ;;  oHumidity       1    wreg     PTR short 
 12564 ;;		 -> wHumidity(2), 
 12565 ;;  oTemperature    1   33[BANK0 ] PTR short 
 12566 ;;		 -> wTemperature(2), 
 12567 ;; Auto vars:     Size  Location     Type
 12568 ;;  oHumidity       1   12[BANK1 ] PTR short 
 12569 ;;		 -> wHumidity(2), 
 12570 ;;  ReceptionBuf    8    4[BANK1 ] unsigned char [8]
 12571 ;;  SetGetTempCo    4    0[BANK1 ] unsigned char [4]
 12572 ;; Return value:  Size  Location     Type
 12573 ;;                  2   33[BANK0 ] int 
 12574 ;; Registers used:
 12575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12576 ;; Tracked objects:
 12577 ;;		On entry : 0/0
 12578 ;;		On exit  : 0/0
 12579 ;;		Unchanged: 0/0
 12580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12581 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 12582 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
       0       0
 12583 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 12584 ;;      Totals:         0       7      13       0       0       0       0       0       0       0       0       0       
       0       0
 12585 ;;Total ram usage:       20 bytes
 12586 ;; Hardware stack levels used:    1
 12587 ;; Hardware stack levels required when called:    8
 12588 ;; This function calls:
 12589 ;;		_GetI2CStatus
 12590 ;;		_GetNewReceivedData
 12591 ;;		_I2C_GetData
 12592 ;;		_I2C_SendData
 12593 ;; This function is called by:
 12594 ;;		_main
 12595 ;; This function uses a non-reentrant model
 12596 ;;
 12597                           psect	text39,local,class=CODE,delta=2,merge=1,group=0
 12598                           	file	"EM1812.c"
 12599                           	line	95
 12600                           global __ptext39
 12601                           __ptext39:	;psect for function _EM1812EntryPoint
 12602  04E8                     psect	text39
 12603                           	file	"EM1812.c"
 12604                           	line	95
 12605                           	global	__size_of_EM1812EntryPoint
 12606                           	__size_of_EM1812EntryPoint	equ	__end_of_EM1812EntryPoint-_EM1812EntryPoint
 12607  013C                     	
 12608                           _EM1812EntryPoint:	
 12609  04E8                     ;incstack = 0
 12610                           	opt	stack 7
 12611                           ; Regs used in _EM1812EntryPoint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12612                           ;EM1812EntryPoint@oHumidity stored from wreg
 12613                           	movlb 1	; select bank1
 12614  04E8  0021               	movwf	(EM1812EntryPoint@oHumidity)^080h
 12615  04E9  00AC               	line	97
 12616                           	
 12617                           l6076:	
 12618  04EA                     ;EM1812.c: 95: int EM1812EntryPoint(int16_t* oHumidity, int16_t* oTemperature);EM1812.c:
                                  96: {;EM1812.c: 97:     uint8_t SetGetTempCommand[4] = {0xB8,0x03,0x00,0x04};
 12619                           	movlb 3	; select bank3
 12620  04EA  0023               	movf	(EM1812EntryPoint@F1955+3)^0180h,w
 12621  04EB  0834               	movlb 1	; select bank1
 12622  04EC  0021               	movwf	(EM1812EntryPoint@SetGetTempCommand+3)^080h
 12623  04ED  00A3               	movlb 3	; select bank3
 12624  04EE  0023               	movf	(EM1812EntryPoint@F1955+2)^0180h,w
 12625  04EF  0833               	movlb 1	; select bank1
 12626  04F0  0021               	movwf	(EM1812EntryPoint@SetGetTempCommand+2)^080h
 12627  04F1  00A2               	movlb 3	; select bank3
 12628  04F2  0023               	movf	(EM1812EntryPoint@F1955+1)^0180h,w
 12629  04F3  0832               	movlb 1	; select bank1
 12630  04F4  0021               	movwf	(EM1812EntryPoint@SetGetTempCommand+1)^080h
 12631  04F5  00A1               	movlb 3	; select bank3
 12632  04F6  0023               	movf	(EM1812EntryPoint@F1955)^0180h,w
 12633  04F7  0831               	movlb 1	; select bank1
 12634  04F8  0021               	movwf	(EM1812EntryPoint@SetGetTempCommand)^080h
 12635  04F9  00A0               
 12636                           	line	98
 12637                           	
 12638                           l6078:	
 12639  04FA                     ;EM1812.c: 98:     uint8_t ReceptionBuffer[8] = {0,0,0,0};
 12640                           	movlw	low(EM1812EntryPoint@F1957)
 12641  04FA  3034               	movwf	fsr1l
 12642  04FB  0086               	movlw	high(EM1812EntryPoint@F1957)
 12643  04FC  3002               	movwf	fsr1h
 12644  04FD  0087               	movlw	low(EM1812EntryPoint@ReceptionBuffer)
 12645  04FE  30A4               	movwf	fsr0l
 12646  04FF  0084               	movlw	high(EM1812EntryPoint@ReceptionBuffer)
 12647  0500  3000               	movwf	fsr0h
 12648  0501  0085               	movlw	8
 12649  0502  3008               	movlb 0	; select bank0
 12650  0503  0020               	movwf	(??_EM1812EntryPoint+0)+0
 12651  0504  00C3               u4520:
 12652  0505                     	moviw	fsr1++
 12653  0505  0016               	movwi	fsr0++
 12654  0506  001A               	decfsz	(??_EM1812EntryPoint+0)+0,f
 12655  0507  0BC3               	goto	u4520
 12656  0508  2D05               	line	101
 12657                           ;EM1812.c: 99:     static uint8_t wTry =0;;EM1812.c: 101:     switch( wTempState )
 12658                           	goto	l6154
 12659  0509  2E0E               	line	103
 12660                           ;EM1812.c: 102:     {;EM1812.c: 103:         case eSetGetTemp:
 12661                           	
 12662                           l444:	
 12663  050A                     	line	104
 12664                           	
 12665                           l6080:	
 12666  050A                     ;EM1812.c: 104:             if(I2C_SendData(SetGetTempCommand,4))
 12667                           	movlw	low(04h)
 12668  050A  3004               	movwf	(??_EM1812EntryPoint+0)+0
 12669  050B  00C3               	movf	(??_EM1812EntryPoint+0)+0,w
 12670  050C  0843               	movwf	(I2C_SendData@iNumberofByte)
 12671  050D  00BC               	movlw	(low(EM1812EntryPoint@SetGetTempCommand|((0x0)<<8)))&0ffh
 12672  050E  30A0               	fcall	_I2C_SendData
 12673  050F  3197  2720  3184   	movlb 0	; select bank0
 12674  0512  0020               	movf	((0+(?_I2C_SendData))),w
 12675  0513  083C               iorwf	((1+(?_I2C_SendData))),w
 12676  0514  043D               	btfsc	status,2
 12677  0515  1903               	goto	u4531
 12678  0516  2D18               	goto	u4530
 12679  0517  2D19               u4531:
 12680  0518                     	goto	l6156
 12681  0518  2E20               u4530:
 12682  0519                     	line	106
 12683                           	
 12684                           l6082:	
 12685  0519                     ;EM1812.c: 105:             {;EM1812.c: 106:                 wTempState = eWaitSetGetTem
                                 pProcessing;
 12686                           	clrf	(_wTempState)
 12687  0519  01D9               	incf	(_wTempState),f
 12688  051A  0AD9               	line	107
 12689                           ;EM1812.c: 107:                 INTCONbits.TMR0IE = 0;
 12690                           	bcf	(11),5	;volatile
 12691  051B  128B               	line	108
 12692                           	
 12693                           l6084:	
 12694  051C                     ;EM1812.c: 108:                 TMR0 = 0;
 12695                           	clrf	(21)	;volatile
 12696  051C  0195               	line	109
 12697                           ;EM1812.c: 109:                 wTimer0Counter=0;
 12698                           	clrf	(_wTimer0Counter)
 12699  051D  01D8               	line	110
 12700                           	
 12701                           l6086:	
 12702  051E                     ;EM1812.c: 110:                 INTCONbits.TMR0IE = 1;
 12703                           	bsf	(11),5	;volatile
 12704  051E  168B               	goto	l6156
 12705  051F  2E20               	line	111
 12706                           ;EM1812.c: 111:             }
 12707                           	
 12708                           l445:	
 12709  0520                     	line	112
 12710                           ;EM1812.c: 112:             break;
 12711                           	goto	l6156
 12712  0520  2E20               	line	113
 12713                           ;EM1812.c: 113:         case eWaitSetGetTempProcessing:
 12714                           	
 12715                           l447:	
 12716  0521                     	line	114
 12717                           	
 12718                           l6088:	
 12719  0521                     ;EM1812.c: 114:             if(wTimer0Counter == 2)
 12720                           		movlw	2
 12721  0521  3002               	xorwf	((_wTimer0Counter)),w
 12722  0522  0658               	btfss	status,2
 12723  0523  1D03               	goto	u4541
 12724  0524  2D26               	goto	u4540
 12725  0525  2D27               u4541:
 12726  0526                     	goto	l6156
 12727  0526  2E20               u4540:
 12728  0527                     	line	116
 12729                           	
 12730                           l6090:	
 12731  0527                     ;EM1812.c: 115:             {;EM1812.c: 116:                 wTempState = eGetTemp;
 12732                           	movlw	low(02h)
 12733  0527  3002               	movwf	(??_EM1812EntryPoint+0)+0
 12734  0528  00C3               	movf	(??_EM1812EntryPoint+0)+0,w
 12735  0529  0843               	movwf	(_wTempState)
 12736  052A  00D9               	line	117
 12737                           	
 12738                           l6092:	
 12739  052B                     ;EM1812.c: 117:                 INTCONbits.TMR0IE = 0;
 12740                           	bcf	(11),5	;volatile
 12741  052B  128B               	goto	l6156
 12742  052C  2E20               	line	118
 12743                           ;EM1812.c: 118:             }
 12744                           	
 12745                           l448:	
 12746  052D                     	line	119
 12747                           ;EM1812.c: 119:             break;
 12748                           	goto	l6156
 12749  052D  2E20               	line	120
 12750                           ;EM1812.c: 120:         case eGetTemp:
 12751                           	
 12752                           l449:	
 12753  052E                     	line	121
 12754                           	
 12755                           l6094:	
 12756  052E                     ;EM1812.c: 121:             if(GetI2CStatus() == CommandFailed)
 12757                           	fcall	_GetI2CStatus
 12758  052E  3193  230C  3184   		movlw	5
 12759  0531  3005               	movlb 0	; select bank0
 12760  0532  0020               	xorwf	((0+(?_GetI2CStatus))),w
 12761  0533  0630               iorwf	((1+(?_GetI2CStatus))),w
 12762  0534  0431               	btfss	status,2
 12763  0535  1D03               	goto	u4551
 12764  0536  2D38               	goto	u4550
 12765  0537  2D39               u4551:
 12766  0538                     	goto	l6104
 12767  0538  2D4A               u4550:
 12768  0539                     	line	123
 12769                           	
 12770                           l6096:	
 12771  0539                     ;EM1812.c: 122:             {;EM1812.c: 123:                 wTempState = eSetGetTemp;
 12772                           	clrf	(_wTempState)
 12773  0539  01D9               	line	124
 12774                           	
 12775                           l6098:	
 12776  053A                     ;EM1812.c: 124:                 wTry++;
 12777                           	movlw	low(01h)
 12778  053A  3001               	movwf	(??_EM1812EntryPoint+0)+0
 12779  053B  00C3               	movf	(??_EM1812EntryPoint+0)+0,w
 12780  053C  0843               	addwf	(EM1812EntryPoint@wTry),f
 12781  053D  07CE               	line	125
 12782                           	
 12783                           l6100:	
 12784  053E                     ;EM1812.c: 125:                 if(wTry == 6)
 12785                           		movlw	6
 12786  053E  3006               	xorwf	((EM1812EntryPoint@wTry)),w
 12787  053F  064E               	btfss	status,2
 12788  0540  1D03               	goto	u4561
 12789  0541  2D43               	goto	u4560
 12790  0542  2D44               u4561:
 12791  0543                     	goto	l6156
 12792  0543  2E20               u4560:
 12793  0544                     	line	127
 12794                           	
 12795                           l6102:	
 12796  0544                     ;EM1812.c: 126:                 {;EM1812.c: 127:                    wTempState = eError;
                                 
 12797                           	movlw	low(06h)
 12798  0544  3006               	movwf	(??_EM1812EntryPoint+0)+0
 12799  0545  00C3               	movf	(??_EM1812EntryPoint+0)+0,w
 12800  0546  0843               	movwf	(_wTempState)
 12801  0547  00D9               	goto	l6156
 12802  0548  2E20               	line	128
 12803                           ;EM1812.c: 128:                 }
 12804                           	
 12805                           l451:	
 12806  0549                     	line	129
 12807                           ;EM1812.c: 129:             }
 12808                           	goto	l6156
 12809  0549  2E20               	line	130
 12810                           ;EM1812.c: 130:             else if (GetI2CStatus() == CommandCompleted)
 12811                           	
 12812                           l450:	
 12813  054A                     	
 12814                           l6104:	
 12815  054A                     	fcall	_GetI2CStatus
 12816  054A  3193  230C  3184   		movlw	3
 12817  054D  3003               	movlb 0	; select bank0
 12818  054E  0020               	xorwf	((0+(?_GetI2CStatus))),w
 12819  054F  0630               iorwf	((1+(?_GetI2CStatus))),w
 12820  0550  0431               	btfss	status,2
 12821  0551  1D03               	goto	u4571
 12822  0552  2D54               	goto	u4570
 12823  0553  2D55               u4571:
 12824  0554                     	goto	l6156
 12825  0554  2E20               u4570:
 12826  0555                     	line	132
 12827                           	
 12828                           l6106:	
 12829  0555                     ;EM1812.c: 131:             {;EM1812.c: 132:                 if(I2C_GetData(0xB9,8))
 12830                           	movlw	low(08h)
 12831  0555  3008               	movwf	(??_EM1812EntryPoint+0)+0
 12832  0556  00C3               	movf	(??_EM1812EntryPoint+0)+0,w
 12833  0557  0843               	movwf	(I2C_GetData@iRxNumberOfByteExpected)
 12834  0558  00B0               	movlw	low(0B9h)
 12835  0559  30B9               	fcall	_I2C_GetData
 12836  055A  3195  2571  3184   	movlb 0	; select bank0
 12837  055D  0020               	movf	((0+(?_I2C_GetData))),w
 12838  055E  0830               iorwf	((1+(?_I2C_GetData))),w
 12839  055F  0431               	btfsc	status,2
 12840  0560  1903               	goto	u4581
 12841  0561  2D63               	goto	u4580
 12842  0562  2D64               u4581:
 12843  0563                     	goto	l6156
 12844  0563  2E20               u4580:
 12845  0564                     	line	134
 12846                           	
 12847                           l6108:	
 12848  0564                     ;EM1812.c: 133:                 {;EM1812.c: 134:                     wTempState = eWaitG
                                 etTempProcessing;
 12849                           	movlw	low(03h)
 12850  0564  3003               	movwf	(??_EM1812EntryPoint+0)+0
 12851  0565  00C3               	movf	(??_EM1812EntryPoint+0)+0,w
 12852  0566  0843               	movwf	(_wTempState)
 12853  0567  00D9               	line	135
 12854                           	
 12855                           l6110:	
 12856  0568                     ;EM1812.c: 135:                     INTCONbits.TMR0IE = 0;
 12857                           	bcf	(11),5	;volatile
 12858  0568  128B               	line	136
 12859                           	
 12860                           l6112:	
 12861  0569                     ;EM1812.c: 136:                     TMR0 = 0;
 12862                           	clrf	(21)	;volatile
 12863  0569  0195               	line	137
 12864                           	
 12865                           l6114:	
 12866  056A                     ;EM1812.c: 137:                     wTimer0Counter=0;
 12867                           	clrf	(_wTimer0Counter)
 12868  056A  01D8               	line	138
 12869                           	
 12870                           l6116:	
 12871  056B                     ;EM1812.c: 138:                     INTCONbits.TMR0IE = 1;
 12872                           	bsf	(11),5	;volatile
 12873  056B  168B               	goto	l6156
 12874  056C  2E20               	line	139
 12875                           ;EM1812.c: 139:                 }
 12876                           	
 12877                           l454:	
 12878  056D                     	goto	l6156
 12879  056D  2E20               	line	140
 12880                           ;EM1812.c: 140:             }
 12881                           	
 12882                           l453:	
 12883  056E                     	goto	l6156
 12884  056E  2E20               	
 12885                           l452:	
 12886  056F                     	line	141
 12887                           ;EM1812.c: 141:             break;
 12888                           	goto	l6156
 12889  056F  2E20               	line	142
 12890                           ;EM1812.c: 142:         case eWaitGetTempProcessing:
 12891                           	
 12892                           l455:	
 12893  0570                     	line	143
 12894                           	
 12895                           l6118:	
 12896  0570                     ;EM1812.c: 143:             if(wTimer0Counter == 2)
 12897                           		movlw	2
 12898  0570  3002               	xorwf	((_wTimer0Counter)),w
 12899  0571  0658               	btfss	status,2
 12900  0572  1D03               	goto	u4591
 12901  0573  2D75               	goto	u4590
 12902  0574  2D76               u4591:
 12903  0575                     	goto	l6156
 12904  0575  2E20               u4590:
 12905  0576                     	line	145
 12906                           	
 12907                           l6120:	
 12908  0576                     ;EM1812.c: 144:             {;EM1812.c: 145:                 wTempState = eValueReceptio
                                 n;
 12909                           	movlw	low(04h)
 12910  0576  3004               	movwf	(??_EM1812EntryPoint+0)+0
 12911  0577  00C3               	movf	(??_EM1812EntryPoint+0)+0,w
 12912  0578  0843               	movwf	(_wTempState)
 12913  0579  00D9               	line	146
 12914                           	
 12915                           l6122:	
 12916  057A                     ;EM1812.c: 146:                 INTCONbits.TMR0IE = 0;
 12917                           	bcf	(11),5	;volatile
 12918  057A  128B               	goto	l6156
 12919  057B  2E20               	line	147
 12920                           ;EM1812.c: 147:             }
 12921                           	
 12922                           l456:	
 12923  057C                     	line	148
 12924                           ;EM1812.c: 148:             break;
 12925                           	goto	l6156
 12926  057C  2E20               	line	149
 12927                           ;EM1812.c: 149:         case eValueReception:
 12928                           	
 12929                           l457:	
 12930  057D                     	line	150
 12931                           	
 12932                           l6124:	
 12933  057D                     ;EM1812.c: 150:             if(GetI2CStatus() == CommandFailed)
 12934                           	fcall	_GetI2CStatus
 12935  057D  3193  230C  3184   		movlw	5
 12936  0580  3005               	movlb 0	; select bank0
 12937  0581  0020               	xorwf	((0+(?_GetI2CStatus))),w
 12938  0582  0630               iorwf	((1+(?_GetI2CStatus))),w
 12939  0583  0431               	btfss	status,2
 12940  0584  1D03               	goto	u4601
 12941  0585  2D87               	goto	u4600
 12942  0586  2D88               u4601:
 12943  0587                     	goto	l6128
 12944  0587  2D8A               u4600:
 12945  0588                     	line	152
 12946                           	
 12947                           l6126:	
 12948  0588                     ;EM1812.c: 151:             {;EM1812.c: 152:                 wTempState=eSetGetTemp;
 12949                           	clrf	(_wTempState)
 12950  0588  01D9               	line	153
 12951                           ;EM1812.c: 153:             }
 12952                           	goto	l6156
 12953  0589  2E20               	line	154
 12954                           ;EM1812.c: 154:             else if(GetI2CStatus() == CommandCompleted)
 12955                           	
 12956                           l458:	
 12957  058A                     	
 12958                           l6128:	
 12959  058A                     	fcall	_GetI2CStatus
 12960  058A  3193  230C  3184   		movlw	3
 12961  058D  3003               	movlb 0	; select bank0
 12962  058E  0020               	xorwf	((0+(?_GetI2CStatus))),w
 12963  058F  0630               iorwf	((1+(?_GetI2CStatus))),w
 12964  0590  0431               	btfss	status,2
 12965  0591  1D03               	goto	u4611
 12966  0592  2D94               	goto	u4610
 12967  0593  2D95               u4611:
 12968  0594                     	goto	l6156
 12969  0594  2E20               u4610:
 12970  0595                     	line	156
 12971                           	
 12972                           l6130:	
 12973  0595                     ;EM1812.c: 155:             {;EM1812.c: 156:                 GetNewReceivedData(Receptio
                                 nBuffer,8);
 12974                           	movlw	low(08h)
 12975  0595  3008               	movwf	(??_EM1812EntryPoint+0)+0
 12976  0596  00C3               	movf	(??_EM1812EntryPoint+0)+0,w
 12977  0597  0843               	movwf	(GetNewReceivedData@oDataSize)
 12978  0598  00BC               	movlw	(low(EM1812EntryPoint@ReceptionBuffer|((0x0)<<8)))&0ffh
 12979  0599  30A4               	fcall	_GetNewReceivedData
 12980  059A  3193  239E  3184   	line	157
 12981                           	
 12982                           l6132:	
 12983  059D                     ;EM1812.c: 157:                 if(ReceptionBuffer[2] & 0x80 )
 12984                           	movlb 1	; select bank1
 12985  059D  0021               	btfss	0+(EM1812EntryPoint@ReceptionBuffer)^080h+02h,(7)&7
 12986  059E  1FA6               	goto	u4621
 12987  059F  2DA1               	goto	u4620
 12988  05A0  2DA2               u4621:
 12989  05A1                     	goto	l6136
 12990  05A1  2DC3               u4620:
 12991  05A2                     	line	159
 12992                           	
 12993                           l6134:	
 12994  05A2                     ;EM1812.c: 158:                 {;EM1812.c: 159:                   *oHumidity = -((Recep
                                 tionBuffer[2] & 0x7F)*256) + ReceptionBuffer[3];
 12995                           	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+02h,w
 12996  05A2  0826               	andlw	07Fh
 12997  05A3  397F               	movlb 0	; select bank0
 12998  05A4  0020               	movwf	(??_EM1812EntryPoint+0)+0
 12999  05A5  00C3               	clrf	(??_EM1812EntryPoint+0)+0+1
 13000  05A6  01C4               	movf	(??_EM1812EntryPoint+0)+0,w
 13001  05A7  0843               	movwf	(??_EM1812EntryPoint+0)+1
 13002  05A8  00C4               	clrf	(??_EM1812EntryPoint+0)+0
 13003  05A9  01C3               	comf	(??_EM1812EntryPoint+0)+0,f
 13004  05AA  09C3               	comf	(??_EM1812EntryPoint+0)+1,f
 13005  05AB  09C4               	incf	(??_EM1812EntryPoint+0)+0,f
 13006  05AC  0AC3               	skipnz
 13007  05AD  1903               	incf	(??_EM1812EntryPoint+0)+1,f
 13008  05AE  0AC4               	movlb 1	; select bank1
 13009  05AF  0021               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+03h,w
 13010  05B0  0827               	movlb 0	; select bank0
 13011  05B1  0020               	addwf	0+(??_EM1812EntryPoint+0)+0,w
 13012  05B2  0743               	movwf	(??_EM1812EntryPoint+3)+0
 13013  05B3  00C6               	movf	1+(??_EM1812EntryPoint+0)+0,w
 13014  05B4  0844               	skipnc
 13015  05B5  1803               	incf	1+(??_EM1812EntryPoint+0)+0,w
 13016  05B6  0A44               	movwf	((??_EM1812EntryPoint+3)+0)+1
 13017  05B7  00C7               	movlb 1	; select bank1
 13018  05B8  0021               	movf	(EM1812EntryPoint@oHumidity)^080h,w
 13019  05B9  082C               	movwf	fsr1l
 13020  05BA  0086               	movlw 1	; select bank2/3
 13021  05BB  3001               	movwf fsr1h	
 13022  05BC  0087               	
 13023                           	movlb 0	; select bank0
 13024  05BD  0020               	movf	0+(??_EM1812EntryPoint+3)+0,w
 13025  05BE  0846               	movwi	[0]fsr1
 13026  05BF  3FC0               	movf	1+(??_EM1812EntryPoint+3)+0,w
 13027  05C0  0847               	movwi	[1]fsr1
 13028  05C1  3FC1               	line	160
 13029                           ;EM1812.c: 160:                 }
 13030                           	goto	l6138
 13031  05C2  2DCD               	line	161
 13032                           ;EM1812.c: 161:                 else
 13033                           	
 13034                           l461:	
 13035  05C3                     	line	163
 13036                           	
 13037                           l6136:	
 13038  05C3                     ;EM1812.c: 162:                 {;EM1812.c: 163:                   *oHumidity = (Recepti
                                 onBuffer[2]*256) + ReceptionBuffer[3];
 13039                           	movlb 1	; select bank1
 13040  05C3  0021               	movf	(EM1812EntryPoint@oHumidity)^080h,w
 13041  05C4  082C               	movwf	fsr1l
 13042  05C5  0086               	movlw 1	; select bank2/3
 13043  05C6  3001               	movwf fsr1h	
 13044  05C7  0087               	
 13045                           	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+03h,w
 13046  05C8  0827               	movwi	[0]fsr1
 13047  05C9  3FC0               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+02h,w
 13048  05CA  0826               	movwi	[1]fsr1
 13049  05CB  3FC1               	goto	l6138
 13050  05CC  2DCD               	line	164
 13051                           ;EM1812.c: 164:                 }
 13052                           	
 13053                           l462:	
 13054  05CD                     	line	165
 13055                           	
 13056                           l6138:	
 13057  05CD                     ;EM1812.c: 165:                 if(ReceptionBuffer[4] & 0x80 )
 13058                           	movlb 1	; select bank1
 13059  05CD  0021               	btfss	0+(EM1812EntryPoint@ReceptionBuffer)^080h+04h,(7)&7
 13060  05CE  1FA8               	goto	u4631
 13061  05CF  2DD1               	goto	u4630
 13062  05D0  2DD2               u4631:
 13063  05D1                     	goto	l6142
 13064  05D1  2DF1               u4630:
 13065  05D2                     	line	167
 13066                           	
 13067                           l6140:	
 13068  05D2                     ;EM1812.c: 166:                 {;EM1812.c: 167:                   *oTemperature = -((Re
                                 ceptionBuffer[4] & 0x7F)*256) + ReceptionBuffer[5];
 13069                           	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+04h,w
 13070  05D2  0828               	andlw	07Fh
 13071  05D3  397F               	movlb 0	; select bank0
 13072  05D4  0020               	movwf	(??_EM1812EntryPoint+0)+0
 13073  05D5  00C3               	clrf	(??_EM1812EntryPoint+0)+0+1
 13074  05D6  01C4               	movf	(??_EM1812EntryPoint+0)+0,w
 13075  05D7  0843               	movwf	(??_EM1812EntryPoint+0)+1
 13076  05D8  00C4               	clrf	(??_EM1812EntryPoint+0)+0
 13077  05D9  01C3               	comf	(??_EM1812EntryPoint+0)+0,f
 13078  05DA  09C3               	comf	(??_EM1812EntryPoint+0)+1,f
 13079  05DB  09C4               	incf	(??_EM1812EntryPoint+0)+0,f
 13080  05DC  0AC3               	skipnz
 13081  05DD  1903               	incf	(??_EM1812EntryPoint+0)+1,f
 13082  05DE  0AC4               	movlb 1	; select bank1
 13083  05DF  0021               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+05h,w
 13084  05E0  0829               	movlb 0	; select bank0
 13085  05E1  0020               	addwf	0+(??_EM1812EntryPoint+0)+0,w
 13086  05E2  0743               	movwf	(??_EM1812EntryPoint+3)+0
 13087  05E3  00C6               	movf	1+(??_EM1812EntryPoint+0)+0,w
 13088  05E4  0844               	skipnc
 13089  05E5  1803               	incf	1+(??_EM1812EntryPoint+0)+0,w
 13090  05E6  0A44               	movwf	((??_EM1812EntryPoint+3)+0)+1
 13091  05E7  00C7               	movf	(EM1812EntryPoint@oTemperature),w
 13092  05E8  0841               	movwf	fsr1l
 13093  05E9  0086               	movlw 1	; select bank2/3
 13094  05EA  3001               	movwf fsr1h	
 13095  05EB  0087               	
 13096                           	movf	0+(??_EM1812EntryPoint+3)+0,w
 13097  05EC  0846               	movwi	[0]fsr1
 13098  05ED  3FC0               	movf	1+(??_EM1812EntryPoint+3)+0,w
 13099  05EE  0847               	movwi	[1]fsr1
 13100  05EF  3FC1               	line	168
 13101                           ;EM1812.c: 168:                 }
 13102                           	goto	l6144
 13103  05F0  2DFC               	line	169
 13104                           ;EM1812.c: 169:                 else
 13105                           	
 13106                           l463:	
 13107  05F1                     	line	171
 13108                           	
 13109                           l6142:	
 13110  05F1                     ;EM1812.c: 170:                 {;EM1812.c: 171:                   *oTemperature = (Rece
                                 ptionBuffer[4] *256) + ReceptionBuffer[5];
 13111                           	movlb 0	; select bank0
 13112  05F1  0020               	movf	(EM1812EntryPoint@oTemperature),w
 13113  05F2  0841               	movwf	fsr1l
 13114  05F3  0086               	movlw 1	; select bank2/3
 13115  05F4  3001               	movwf fsr1h	
 13116  05F5  0087               	
 13117                           	movlb 1	; select bank1
 13118  05F6  0021               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+05h,w
 13119  05F7  0829               	movwi	[0]fsr1
 13120  05F8  3FC0               	movf	0+(EM1812EntryPoint@ReceptionBuffer)^080h+04h,w
 13121  05F9  0828               	movwi	[1]fsr1
 13122  05FA  3FC1               	goto	l6144
 13123  05FB  2DFC               	line	172
 13124                           ;EM1812.c: 172:                 }
 13125                           	
 13126                           l464:	
 13127  05FC                     	line	173
 13128                           	
 13129                           l6144:	
 13130  05FC                     ;EM1812.c: 173:                 wTempState = eIdle;
 13131                           	movlw	low(05h)
 13132  05FC  3005               	movlb 0	; select bank0
 13133  05FD  0020               	movwf	(??_EM1812EntryPoint+0)+0
 13134  05FE  00C3               	movf	(??_EM1812EntryPoint+0)+0,w
 13135  05FF  0843               	movwf	(_wTempState)
 13136  0600  00D9               	line	174
 13137                           	
 13138                           l6146:	
 13139  0601                     ;EM1812.c: 174:                 return 1;
 13140                           	movlw	01h
 13141  0601  3001               	movwf	(?_EM1812EntryPoint)
 13142  0602  00C1               	movlw	0
 13143  0603  3000               	movwf	((?_EM1812EntryPoint))+1
 13144  0604  00C2               	goto	l465
 13145  0605  2E23               	
 13146                           l6148:	
 13147  0606                     	goto	l465
 13148  0606  2E23               	line	175
 13149                           ;EM1812.c: 175:             }
 13150                           	
 13151                           l460:	
 13152  0607                     	goto	l6156
 13153  0607  2E20               	
 13154                           l459:	
 13155  0608                     	line	176
 13156                           ;EM1812.c: 176:             break;
 13157                           	goto	l6156
 13158  0608  2E20               	line	177
 13159                           ;EM1812.c: 177:         case eIdle:
 13160                           	
 13161                           l466:	
 13162  0609                     	line	178
 13163                           	
 13164                           l6150:	
 13165  0609                     ;EM1812.c: 178:             wTry=0;
 13166                           	clrf	(EM1812EntryPoint@wTry)
 13167  0609  01CE               	line	179
 13168                           ;EM1812.c: 179:             break;
 13169                           	goto	l6156
 13170  060A  2E20               	line	180
 13171                           ;EM1812.c: 180:         case eError:
 13172                           	
 13173                           l467:	
 13174  060B                     	goto	l6156
 13175  060B  2E20               	line	181
 13176                           ;EM1812.c: 181:         default:
 13177                           	
 13178                           l468:	
 13179  060C                     	line	182
 13180                           ;EM1812.c: 182:             break;
 13181                           	goto	l6156
 13182  060C  2E20               	line	183
 13183                           	
 13184                           l6152:	
 13185  060D                     ;EM1812.c: 183:     }
 13186                           	goto	l6156
 13187  060D  2E20               	
 13188                           l443:	
 13189  060E                     	
 13190                           l6154:	
 13191  060E                     	movf	(_wTempState),w
 13192  060E  0859               	movwf	(??_EM1812EntryPoint+0)+0
 13193  060F  00C3               	clrf	(??_EM1812EntryPoint+0)+0+1
 13194  0610  01C4               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 13195                           ; Switch size 1, requested type "space"
 13196                           ; Number of cases is 1, Range of values is 0 to 0
 13197                           ; switch strategies available:
 13198                           ; Name         Instructions Cycles
 13199                           ; simple_byte            4     3 (average)
 13200                           ; direct_byte            8     6 (fixed)
 13201                           ; jumptable            260     6 (fixed)
 13202                           ;	Chosen strategy is simple_byte
 13203                           
 13204                           	movf 1+(??_EM1812EntryPoint+0)+0,w
 13205  0611  0844               	opt asmopt_push
 13206                           	opt asmopt_off
 13207                           	xorlw	0^0	; case 0
 13208  0612  3A00               	skipnz
 13209  0613  1903               	goto	l6870
 13210  0614  2E16               	goto	l6156
 13211  0615  2E20               	opt asmopt_pop
 13212                           	
 13213                           l6870:	
 13214  0616                     ; Switch size 1, requested type "space"
 13215                           ; Number of cases is 7, Range of values is 0 to 6
 13216                           ; switch strategies available:
 13217                           ; Name         Instructions Cycles
 13218                           ; direct_byte           20     6 (fixed)
 13219                           ; simple_byte           22    12 (average)
 13220                           ; jumptable            260     6 (fixed)
 13221                           ;	Chosen strategy is direct_byte
 13222                           
 13223                           	movf 0+(??_EM1812EntryPoint+0)+0,w
 13224  0616  0843               	movwf fsr0l
 13225  0617  0084               	movlw	7
 13226  0618  3007               	subwf	fsr0l,w
 13227  0619  0204               skipnc
 13228  061A  1803               goto l6156
 13229  061B  2E20               movlp high(S6872)
 13230  061C  3190               	lslf fsr0l,w
 13231  061D  3504               	addlw low(S6872)
 13232  061E  3E00               	movwf pc
 13233  061F  0082               psect	swtext3,local,class=CONST,delta=2
 13234                           global __pswtext3
 13235                           __pswtext3:
 13236  1000                     S6872:
 13237  1000                     	ljmp	l6080
 13238  1000  3185  2D0A         	ljmp	l6088
 13239  1002  3185  2D21         	ljmp	l6094
 13240  1004  3185  2D2E         	ljmp	l6118
 13241  1006  3185  2D70         	ljmp	l6124
 13242  1008  3185  2D7D         	ljmp	l6150
 13243  100A  3186  2E09         	ljmp	l6156
 13244  100C  3186  2E20         psect	text39
 13245                           
 13246                           	
 13247                           l446:	
 13248  0620                     	line	184
 13249                           	
 13250                           l6156:	
 13251  0620                     ;EM1812.c: 184:     return 0;
 13252                           	clrf	(?_EM1812EntryPoint)
 13253  0620  01C1               	clrf	(?_EM1812EntryPoint+1)
 13254  0621  01C2               	goto	l465
 13255  0622  2E23               	
 13256                           l6158:	
 13257  0623                     	line	185
 13258                           	
 13259                           l465:	
 13260  0623                     	return
 13261  0623  0008               	opt stack 0
 13262                           GLOBAL	__end_of_EM1812EntryPoint
 13263                           	__end_of_EM1812EntryPoint:
 13264  0624                     	signat	_EM1812EntryPoint,8314
 13265                           	global	_I2C_SendData
 13266                           
 13267 ;; *************** function _I2C_SendData *****************
 13268 ;; Defined at:
 13269 ;;		line 43 in file "I2C.c"
 13270 ;; Parameters:    Size  Location     Type
 13271 ;;  iData           1    wreg     PTR unsigned char 
 13272 ;;		 -> EM1812EntryPoint@SetGetTempCommand(4), 
 13273 ;;  iNumberofByt    1   28[BANK0 ] unsigned char 
 13274 ;; Auto vars:     Size  Location     Type
 13275 ;;  iData           1   32[BANK0 ] PTR unsigned char 
 13276 ;;		 -> EM1812EntryPoint@SetGetTempCommand(4), 
 13277 ;; Return value:  Size  Location     Type
 13278 ;;                  2   28[BANK0 ] int 
 13279 ;; Registers used:
 13280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13281 ;; Tracked objects:
 13282 ;;		On entry : 0/0
 13283 ;;		On exit  : 0/0
 13284 ;;		Unchanged: 0/0
 13285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13286 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 13287 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13288 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 13289 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 13290 ;;Total ram usage:        5 bytes
 13291 ;; Hardware stack levels used:    1
 13292 ;; Hardware stack levels required when called:    7
 13293 ;; This function calls:
 13294 ;;		_memcpy
 13295 ;; This function is called by:
 13296 ;;		_EM1812EntryPoint
 13297 ;; This function uses a non-reentrant model
 13298 ;;
 13299                           psect	text40,local,class=CODE,delta=2,merge=1,group=0
 13300                           	file	"I2C.c"
 13301                           	line	43
 13302                           global __ptext40
 13303                           __ptext40:	;psect for function _I2C_SendData
 13304  1720                     psect	text40
 13305                           	file	"I2C.c"
 13306                           	line	43
 13307                           	global	__size_of_I2C_SendData
 13308                           	__size_of_I2C_SendData	equ	__end_of_I2C_SendData-_I2C_SendData
 13309  0045                     	
 13310                           _I2C_SendData:	
 13311  1720                     ;incstack = 0
 13312                           	opt	stack 7
 13313                           ; Regs used in _I2C_SendData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13314                           ;I2C_SendData@iData stored from wreg
 13315                           	movlb 0	; select bank0
 13316  1720  0020               	movwf	(I2C_SendData@iData)
 13317  1721  00C0               	line	45
 13318                           	
 13319                           l5590:	
 13320  1722                     ;I2C.c: 43: int I2C_SendData(uint8_t* iData,uint8_t iNumberofByte);I2C.c: 44: {;I2C.c: 4
                                 5:     if(wI2CCommandState == CommandCompleted || wI2CCommandState == CommandFailed)
 13321                           		movlw	3
 13322  1722  3003               	xorwf	((_wI2CCommandState)),w
 13323  1723  065F               	btfsc	status,2
 13324  1724  1903               	goto	u4101
 13325  1725  2F27               	goto	u4100
 13326  1726  2F28               u4101:
 13327  1727                     	goto	l5594
 13328  1727  2F2F               u4100:
 13329  1728                     	
 13330                           l5592:	
 13331  1728                     		movlw	5
 13332  1728  3005               	xorwf	((_wI2CCommandState)),w
 13333  1729  065F               	btfss	status,2
 13334  172A  1D03               	goto	u4111
 13335  172B  2F2D               	goto	u4110
 13336  172C  2F2E               u4111:
 13337  172D                     	goto	l5616
 13338  172D  2F61               u4110:
 13339  172E                     	goto	l5594
 13340  172E  2F2F               	
 13341                           l541:	
 13342  172F                     	line	47
 13343                           	
 13344                           l5594:	
 13345  172F                     ;I2C.c: 46:     {;I2C.c: 47:         if(iNumberofByte < wI2CTxBufferSize )
 13346                           	movf	(_wI2CTxBufferSize),w
 13347  172F  085E               	subwf	(I2C_SendData@iNumberofByte),w
 13348  1730  023C               	skipnc
 13349  1731  1803               	goto	u4121
 13350  1732  2F34               	goto	u4120
 13351  1733  2F35               u4121:
 13352  1734                     	goto	l5600
 13353  1734  2F4D               u4120:
 13354  1735                     	line	49
 13355                           	
 13356                           l5596:	
 13357  1735                     ;I2C.c: 48:         {;I2C.c: 49:             memcpy(wI2CTxBuffer,iData,iNumberofByte);
 13358                           	movlw	low(_wI2CTxBuffer)
 13359  1735  3050               	movwf	(memcpy@d1)
 13360  1736  00B0               	movlw	high(_wI2CTxBuffer)
 13361  1737  3002               	movwf	(memcpy@d1+1)
 13362  1738  00B1               	movf	(I2C_SendData@iData),w
 13363  1739  0840               	movwf	(memcpy@s1)
 13364  173A  00B2               	movlw	0x0
 13365  173B  3000               
 13366                           	movwf	(memcpy@s1+1)
 13367  173C  00B3               	movf	(I2C_SendData@iNumberofByte),w
 13368  173D  083C               	movwf	(??_I2C_SendData+0)+0
 13369  173E  00BE               	clrf	(??_I2C_SendData+0)+0+1
 13370  173F  01BF               	movf	0+(??_I2C_SendData+0)+0,w
 13371  1740  083E               	movwf	(memcpy@n)
 13372  1741  00B4               	movf	1+(??_I2C_SendData+0)+0,w
 13373  1742  083F               	movwf	(memcpy@n+1)
 13374  1743  00B5               	fcall	_memcpy
 13375  1744  3195  250F  3197   	line	50
 13376                           	
 13377                           l5598:	
 13378  1747                     ;I2C.c: 50:             wI2CTxNbOfByteToSend = iNumberofByte;
 13379                           	movlb 0	; select bank0
 13380  1747  0020               	movf	(I2C_SendData@iNumberofByte),w
 13381  1748  083C               	movwf	(??_I2C_SendData+0)+0
 13382  1749  00BE               	movf	(??_I2C_SendData+0)+0,w
 13383  174A  083E               	movwf	(_wI2CTxNbOfByteToSend)
 13384  174B  00D6               	line	51
 13385                           ;I2C.c: 51:         }
 13386                           	goto	l5604
 13387  174C  2F51               	line	52
 13388                           ;I2C.c: 52:         else
 13389                           	
 13390                           l542:	
 13391  174D                     	line	54
 13392                           	
 13393                           l5600:	
 13394  174D                     ;I2C.c: 53:         {;I2C.c: 54:             return 0;
 13395                           	clrf	(?_I2C_SendData)
 13396  174D  01BC               	clrf	(?_I2C_SendData+1)
 13397  174E  01BD               	goto	l544
 13398  174F  2F64               	
 13399                           l5602:	
 13400  1750                     	goto	l544
 13401  1750  2F64               	line	55
 13402                           ;I2C.c: 55:         }
 13403                           	
 13404                           l543:	
 13405  1751                     	line	56
 13406                           	
 13407                           l5604:	
 13408  1751                     ;I2C.c: 56:         wI2CTxSendPos = 0;
 13409                           	clrf	(_wI2CTxSendPos)
 13410  1751  01D3               	line	57
 13411                           	
 13412                           l5606:	
 13413  1752                     ;I2C.c: 57:         PIE1bits.SSPIE = 1;
 13414                           	movlb 1	; select bank1
 13415  1752  0021               	bsf	(145)^080h,3	;volatile
 13416  1753  1591               	line	58
 13417                           	
 13418                           l5608:	
 13419  1754                     ;I2C.c: 58:         SSPCON3bits.ACKTIM = 1;
 13420                           	movlb 4	; select bank4
 13421  1754  0024               	bsf	(535)^0200h,7	;volatile
 13422  1755  1797               	line	59
 13423                           ;I2C.c: 59:         wI2CCommandState = CommandSent;
 13424                           	movlb 0	; select bank0
 13425  1756  0020               	clrf	(_wI2CCommandState)
 13426  1757  01DF               	line	60
 13427                           	
 13428                           l5610:	
 13429  1758                     ;I2C.c: 60:         SSPCON2bits.SEN = 1;
 13430                           	movlb 4	; select bank4
 13431  1758  0024               	bsf	(534)^0200h,0	;volatile
 13432  1759  1416               	line	61
 13433                           	
 13434                           l5612:	
 13435  175A                     ;I2C.c: 61:         return 1;
 13436                           	movlw	01h
 13437  175A  3001               	movlb 0	; select bank0
 13438  175B  0020               	movwf	(?_I2C_SendData)
 13439  175C  00BC               	movlw	0
 13440  175D  3000               	movwf	((?_I2C_SendData))+1
 13441  175E  00BD               	goto	l544
 13442  175F  2F64               	
 13443                           l5614:	
 13444  1760                     	goto	l544
 13445  1760  2F64               	line	62
 13446                           ;I2C.c: 62:     }
 13447                           	
 13448                           l539:	
 13449  1761                     	line	63
 13450                           	
 13451                           l5616:	
 13452  1761                     ;I2C.c: 63:     return 0;
 13453                           	clrf	(?_I2C_SendData)
 13454  1761  01BC               	clrf	(?_I2C_SendData+1)
 13455  1762  01BD               	goto	l544
 13456  1763  2F64               	
 13457                           l5618:	
 13458  1764                     	line	64
 13459                           	
 13460                           l544:	
 13461  1764                     	return
 13462  1764  0008               	opt stack 0
 13463                           GLOBAL	__end_of_I2C_SendData
 13464                           	__end_of_I2C_SendData:
 13465  1765                     	signat	_I2C_SendData,8314
 13466                           	global	_I2C_GetData
 13467                           
 13468 ;; *************** function _I2C_GetData *****************
 13469 ;; Defined at:
 13470 ;;		line 66 in file "I2C.c"
 13471 ;; Parameters:    Size  Location     Type
 13472 ;;  iAdress         1    wreg     unsigned char 
 13473 ;;  iRxNumberOfB    1   16[BANK0 ] unsigned char 
 13474 ;; Auto vars:     Size  Location     Type
 13475 ;;  iAdress         1   19[BANK0 ] unsigned char 
 13476 ;; Return value:  Size  Location     Type
 13477 ;;                  2   16[BANK0 ] int 
 13478 ;; Registers used:
 13479 ;;		wreg, status,2, status,0
 13480 ;; Tracked objects:
 13481 ;;		On entry : 0/0
 13482 ;;		On exit  : 0/0
 13483 ;;		Unchanged: 0/0
 13484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13485 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 13486 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13487 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13488 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 13489 ;;Total ram usage:        4 bytes
 13490 ;; Hardware stack levels used:    1
 13491 ;; Hardware stack levels required when called:    6
 13492 ;; This function calls:
 13493 ;;		Nothing
 13494 ;; This function is called by:
 13495 ;;		_EM1812EntryPoint
 13496 ;; This function uses a non-reentrant model
 13497 ;;
 13498                           psect	text41,local,class=CODE,delta=2,merge=1,group=0
 13499                           	line	66
 13500                           global __ptext41
 13501                           __ptext41:	;psect for function _I2C_GetData
 13502  1571                     psect	text41
 13503                           	file	"I2C.c"
 13504                           	line	66
 13505                           	global	__size_of_I2C_GetData
 13506                           	__size_of_I2C_GetData	equ	__end_of_I2C_GetData-_I2C_GetData
 13507  0036                     	
 13508                           _I2C_GetData:	
 13509  1571                     ;incstack = 0
 13510                           	opt	stack 8
 13511                           ; Regs used in _I2C_GetData: [wreg+status,2+status,0]
 13512                           ;I2C_GetData@iAdress stored from wreg
 13513                           	movlb 0	; select bank0
 13514  1571  0020               	movwf	(I2C_GetData@iAdress)
 13515  1572  00B3               	line	68
 13516                           	
 13517                           l5624:	
 13518  1573                     ;I2C.c: 66: int I2C_GetData(uint8_t iAdress, uint8_t iRxNumberOfByteExpected);I2C.c: 67:
                                  {;I2C.c: 68:     if((wI2CCommandState == CommandCompleted || wI2CCommandState == Comman
                                 dFailed) && iRxNumberOfByteExpected <= wI2CRxBufferSize)
 13519                           		movlw	3
 13520  1573  3003               	xorwf	((_wI2CCommandState)),w
 13521  1574  065F               	btfsc	status,2
 13522  1575  1903               	goto	u4131
 13523  1576  2D78               	goto	u4130
 13524  1577  2D79               u4131:
 13525  1578                     	goto	l5628
 13526  1578  2D80               u4130:
 13527  1579                     	
 13528                           l5626:	
 13529  1579                     		movlw	5
 13530  1579  3005               	xorwf	((_wI2CCommandState)),w
 13531  157A  065F               	btfss	status,2
 13532  157B  1D03               	goto	u4141
 13533  157C  2D7E               	goto	u4140
 13534  157D  2D7F               u4141:
 13535  157E                     	goto	l5650
 13536  157E  2DA3               u4140:
 13537  157F                     	goto	l5628
 13538  157F  2D80               	
 13539                           l549:	
 13540  1580                     	
 13541                           l5628:	
 13542  1580                     	movf	(I2C_GetData@iRxNumberOfByteExpected),w
 13543  1580  0830               	subwf	(_wI2CRxBufferSize),w
 13544  1581  025D               	skipc
 13545  1582  1C03               	goto	u4151
 13546  1583  2D85               	goto	u4150
 13547  1584  2D86               u4151:
 13548  1585                     	goto	l5650
 13549  1585  2DA3               u4150:
 13550  1586                     	line	70
 13551                           	
 13552                           l5630:	
 13553  1586                     ;I2C.c: 69:     {;I2C.c: 70:         wI2CTxBuffer[0]= iAdress;
 13554                           	movf	(I2C_GetData@iAdress),w
 13555  1586  0833               	movwf	(??_I2C_GetData+0)+0
 13556  1587  00B2               	movf	(??_I2C_GetData+0)+0,w
 13557  1588  0832               	movlb 4	; select bank4
 13558  1589  0024               	movwf	(_wI2CTxBuffer)^0200h
 13559  158A  00D0               	line	71
 13560                           	
 13561                           l5632:	
 13562  158B                     ;I2C.c: 71:         wI2CTxNbOfByteToSend = 1;
 13563                           	movlb 0	; select bank0
 13564  158B  0020               	clrf	(_wI2CTxNbOfByteToSend)
 13565  158C  01D6               	incf	(_wI2CTxNbOfByteToSend),f
 13566  158D  0AD6               	line	72
 13567                           ;I2C.c: 72:         wI2CRxNbOfByteToReceived = iRxNumberOfByteExpected;
 13568                           	movf	(I2C_GetData@iRxNumberOfByteExpected),w
 13569  158E  0830               	movwf	(??_I2C_GetData+0)+0
 13570  158F  00B2               	movf	(??_I2C_GetData+0)+0,w
 13571  1590  0832               	movwf	(_wI2CRxNbOfByteToReceived)
 13572  1591  00D5               	line	73
 13573                           	
 13574                           l5634:	
 13575  1592                     ;I2C.c: 73:         wI2CTxSendPos = 0;
 13576                           	clrf	(_wI2CTxSendPos)
 13577  1592  01D3               	line	74
 13578                           	
 13579                           l5636:	
 13580  1593                     ;I2C.c: 74:         wReceptionBufferPosition = 0;
 13581                           	clrf	(_wReceptionBufferPosition)
 13582  1593  01D7               	line	75
 13583                           	
 13584                           l5638:	
 13585  1594                     ;I2C.c: 75:         PIE1bits.SSPIE = 1;
 13586                           	movlb 1	; select bank1
 13587  1594  0021               	bsf	(145)^080h,3	;volatile
 13588  1595  1591               	line	76
 13589                           	
 13590                           l5640:	
 13591  1596                     ;I2C.c: 76:         SSPCON3bits.ACKTIM = 1;
 13592                           	movlb 4	; select bank4
 13593  1596  0024               	bsf	(535)^0200h,7	;volatile
 13594  1597  1797               	line	77
 13595                           	
 13596                           l5642:	
 13597  1598                     ;I2C.c: 77:         wI2CCommandState = CommandSent;
 13598                           	movlb 0	; select bank0
 13599  1598  0020               	clrf	(_wI2CCommandState)
 13600  1599  01DF               	line	78
 13601                           	
 13602                           l5644:	
 13603  159A                     ;I2C.c: 78:         SSPCON2bits.SEN = 1;
 13604                           	movlb 4	; select bank4
 13605  159A  0024               	bsf	(534)^0200h,0	;volatile
 13606  159B  1416               	line	79
 13607                           	
 13608                           l5646:	
 13609  159C                     ;I2C.c: 79:         return 1;
 13610                           	movlw	01h
 13611  159C  3001               	movlb 0	; select bank0
 13612  159D  0020               	movwf	(?_I2C_GetData)
 13613  159E  00B0               	movlw	0
 13614  159F  3000               	movwf	((?_I2C_GetData))+1
 13615  15A0  00B1               	goto	l550
 13616  15A1  2DA6               	
 13617                           l5648:	
 13618  15A2                     	goto	l550
 13619  15A2  2DA6               	line	80
 13620                           ;I2C.c: 80:     }
 13621                           	
 13622                           l547:	
 13623  15A3                     	line	81
 13624                           	
 13625                           l5650:	
 13626  15A3                     ;I2C.c: 81:     return 0;
 13627                           	clrf	(?_I2C_GetData)
 13628  15A3  01B0               	clrf	(?_I2C_GetData+1)
 13629  15A4  01B1               	goto	l550
 13630  15A5  2DA6               	
 13631                           l5652:	
 13632  15A6                     	line	82
 13633                           	
 13634                           l550:	
 13635  15A6                     	return
 13636  15A6  0008               	opt stack 0
 13637                           GLOBAL	__end_of_I2C_GetData
 13638                           	__end_of_I2C_GetData:
 13639  15A7                     	signat	_I2C_GetData,8314
 13640                           	global	_GetNewReceivedData
 13641                           
 13642 ;; *************** function _GetNewReceivedData *****************
 13643 ;; Defined at:
 13644 ;;		line 84 in file "I2C.c"
 13645 ;; Parameters:    Size  Location     Type
 13646 ;;  oData           1    wreg     PTR unsigned char 
 13647 ;;		 -> EM1812EntryPoint@ReceptionBuffer(8), 
 13648 ;;  oDataSize       1   28[BANK0 ] unsigned char 
 13649 ;; Auto vars:     Size  Location     Type
 13650 ;;  oData           1   31[BANK0 ] PTR unsigned char 
 13651 ;;		 -> EM1812EntryPoint@ReceptionBuffer(8), 
 13652 ;; Return value:  Size  Location     Type
 13653 ;;                  2   28[BANK0 ] int 
 13654 ;; Registers used:
 13655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13656 ;; Tracked objects:
 13657 ;;		On entry : 0/0
 13658 ;;		On exit  : 0/0
 13659 ;;		Unchanged: 0/0
 13660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13661 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13662 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13663 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 13664 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 13665 ;;Total ram usage:        4 bytes
 13666 ;; Hardware stack levels used:    1
 13667 ;; Hardware stack levels required when called:    7
 13668 ;; This function calls:
 13669 ;;		_memcpy
 13670 ;; This function is called by:
 13671 ;;		_EM1812EntryPoint
 13672 ;; This function uses a non-reentrant model
 13673 ;;
 13674                           psect	text42,local,class=CODE,delta=2,merge=1,group=0
 13675                           	line	84
 13676                           global __ptext42
 13677                           __ptext42:	;psect for function _GetNewReceivedData
 13678  139E                     psect	text42
 13679                           	file	"I2C.c"
 13680                           	line	84
 13681                           	global	__size_of_GetNewReceivedData
 13682                           	__size_of_GetNewReceivedData	equ	__end_of_GetNewReceivedData-_GetNewReceivedData
 13683  0023                     	
 13684                           _GetNewReceivedData:	
 13685  139E                     ;incstack = 0
 13686                           	opt	stack 7
 13687                           ; Regs used in _GetNewReceivedData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13688                           ;GetNewReceivedData@oData stored from wreg
 13689                           	movlb 0	; select bank0
 13690  139E  0020               	movwf	(GetNewReceivedData@oData)
 13691  139F  00BF               	line	86
 13692                           	
 13693                           l5654:	
 13694  13A0                     ;I2C.c: 84: int GetNewReceivedData(uint8_t* oData, uint8_t oDataSize);I2C.c: 85: {;I2C.c
                                 : 86:     if(wNewI2CReception == 1 && wI2CCommandState == CommandCompleted)
 13695                           		decf	((_wNewI2CReception)),w
 13696  13A0  0354               	btfss	status,2
 13697  13A1  1D03               	goto	u4161
 13698  13A2  2BA4               	goto	u4160
 13699  13A3  2BA5               u4161:
 13700  13A4                     	goto	l554
 13701  13A4  2BC0               u4160:
 13702  13A5                     	
 13703                           l5656:	
 13704  13A5                     		movlw	3
 13705  13A5  3003               	xorwf	((_wI2CCommandState)),w
 13706  13A6  065F               	btfss	status,2
 13707  13A7  1D03               	goto	u4171
 13708  13A8  2BAA               	goto	u4170
 13709  13A9  2BAB               u4171:
 13710  13AA                     	goto	l554
 13711  13AA  2BC0               u4170:
 13712  13AB                     	line	88
 13713                           	
 13714                           l5658:	
 13715  13AB                     ;I2C.c: 87:     {;I2C.c: 88:         wNewI2CReception = 0;
 13716                           	clrf	(_wNewI2CReception)
 13717  13AB  01D4               	line	89
 13718                           	
 13719                           l5660:	
 13720  13AC                     ;I2C.c: 89:         memcpy(oData,wI2CRxBuffer,oDataSize);
 13721                           	movf	(GetNewReceivedData@oData),w
 13722  13AC  083F               	movwf	(memcpy@d1)
 13723  13AD  00B0               	movlw	0x0
 13724  13AE  3000               
 13725                           	movwf	(memcpy@d1+1)
 13726  13AF  00B1               	movlw	low(_wI2CRxBuffer)
 13727  13B0  303C               	movwf	(memcpy@s1)
 13728  13B1  00B2               	movlw	high(_wI2CRxBuffer)
 13729  13B2  3002               	movwf	(memcpy@s1+1)
 13730  13B3  00B3               	movf	(GetNewReceivedData@oDataSize),w
 13731  13B4  083C               	movwf	(??_GetNewReceivedData+0)+0
 13732  13B5  00BD               	clrf	(??_GetNewReceivedData+0)+0+1
 13733  13B6  01BE               	movf	0+(??_GetNewReceivedData+0)+0,w
 13734  13B7  083D               	movwf	(memcpy@n)
 13735  13B8  00B4               	movf	1+(??_GetNewReceivedData+0)+0,w
 13736  13B9  083E               	movwf	(memcpy@n+1)
 13737  13BA  00B5               	fcall	_memcpy
 13738  13BB  3195  250F  3193   	goto	l554
 13739  13BE  2BC0               	line	90
 13740                           	
 13741                           l5662:	
 13742  13BF                     ;I2C.c: 90:         return 1;;	Return value of _GetNewReceivedData is never used
 13743                           	goto	l554
 13744  13BF  2BC0               	line	91
 13745                           ;I2C.c: 91:     }
 13746                           	
 13747                           l553:	
 13748  13C0                     	line	93
 13749                           ;I2C.c: 92:     return 0;;	Return value of _GetNewReceivedData is never used
 13750                           	
 13751                           l554:	
 13752  13C0                     	return
 13753  13C0  0008               	opt stack 0
 13754                           GLOBAL	__end_of_GetNewReceivedData
 13755                           	__end_of_GetNewReceivedData:
 13756  13C1                     	signat	_GetNewReceivedData,8314
 13757                           	global	_memcpy
 13758                           
 13759 ;; *************** function _memcpy *****************
 13760 ;; Defined at:
 13761 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
 13762 ;; Parameters:    Size  Location     Type
 13763 ;;  d1              2   16[BANK0 ] PTR void 
 13764 ;;		 -> gEusartTXBuffer(70), Esp8266Entrypoint@wEspBuffer(70), wI2CTxBuffer(20), EM1812EntryPoint@ReceptionBuffer(8), 
 13765 ;;  s1              2   18[BANK0 ] PTR const void 
 13766 ;;		 -> gEusartRXBuffer(70), STR_14(14), Esp8266SetNetworkParameters@wCommand(70), Esp8266OpenSocketCommand@wCommand(70)
       , 
 13767 ;;		 -> wI2CRxBuffer(20), EM1812EntryPoint@SetGetTempCommand(4), 
 13768 ;;  n               2   20[BANK0 ] unsigned int 
 13769 ;; Auto vars:     Size  Location     Type
 13770 ;;  s               2   26[BANK0 ] PTR const unsigned char 
 13771 ;;		 -> gEusartRXBuffer(70), STR_14(14), Esp8266SetNetworkParameters@wCommand(70), Esp8266OpenSocketCommand@wCommand(70)
       , 
 13772 ;;		 -> wI2CRxBuffer(20), EM1812EntryPoint@SetGetTempCommand(4), 
 13773 ;;  d               2   24[BANK0 ] PTR unsigned char 
 13774 ;;		 -> gEusartTXBuffer(70), Esp8266Entrypoint@wEspBuffer(70), wI2CTxBuffer(20), EM1812EntryPoint@ReceptionBuffer(8), 
 13775 ;;  tmp             1   23[BANK0 ] unsigned char 
 13776 ;; Return value:  Size  Location     Type
 13777 ;;                  2   16[BANK0 ] PTR void 
 13778 ;; Registers used:
 13779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 13780 ;; Tracked objects:
 13781 ;;		On entry : 0/0
 13782 ;;		On exit  : 0/0
 13783 ;;		Unchanged: 0/0
 13784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13785 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 13786 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 13787 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13788 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0
 13789 ;;Total ram usage:       12 bytes
 13790 ;; Hardware stack levels used:    1
 13791 ;; Hardware stack levels required when called:    6
 13792 ;; This function calls:
 13793 ;;		Nothing
 13794 ;; This function is called by:
 13795 ;;		_I2C_SendData
 13796 ;;		_GetNewReceivedData
 13797 ;;		_Send_UART_Data
 13798 ;;		_EusartGetRxBuffer
 13799 ;; This function uses a non-reentrant model
 13800 ;;
 13801                           psect	text43,local,class=CODE,delta=2,merge=1,group=2
 13802                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
 13803                           	line	4
 13804                           global __ptext43
 13805                           __ptext43:	;psect for function _memcpy
 13806  150F                     psect	text43
 13807                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
 13808                           	line	4
 13809                           	global	__size_of_memcpy
 13810                           	__size_of_memcpy	equ	__end_of_memcpy-_memcpy
 13811  002F                     	
 13812                           _memcpy:	
 13813  150F                     ;incstack = 0
 13814                           	opt	stack 7
 13815                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
 13816                           	line	11
 13817                           	
 13818                           l5196:	
 13819  150F                     	movlb 0	; select bank0
 13820  150F  0020               	movf	(memcpy@s1+1),w
 13821  1510  0833               	movwf	(memcpy@s+1)
 13822  1511  00BB               	movf	(memcpy@s1),w
 13823  1512  0832               	movwf	(memcpy@s)
 13824  1513  00BA               	line	12
 13825                           	movf	(memcpy@d1+1),w
 13826  1514  0831               	movwf	(memcpy@d+1)
 13827  1515  00B9               	movf	(memcpy@d1),w
 13828  1516  0830               	movwf	(memcpy@d)
 13829  1517  00B8               	line	13
 13830                           	goto	l5206
 13831  1518  2D30               	
 13832                           l1257:	
 13833  1519                     	line	14
 13834                           	
 13835                           l5198:	
 13836  1519                     	movf	(memcpy@s),w
 13837  1519  083A               	movwf	fsr0l
 13838  151A  0084               	movf	((memcpy@s+1)),w
 13839  151B  083B               	movwf	fsr0h
 13840  151C  0085               	movf	indf0,w ;code access
 13841  151D  0800               	movwf	(??_memcpy+0)+0
 13842  151E  00B6               	movf	(??_memcpy+0)+0,w
 13843  151F  0836               	movwf	(memcpy@tmp)
 13844  1520  00B7               	
 13845                           l5200:	
 13846  1521                     	movlw	01h
 13847  1521  3001               	addwf	(memcpy@s),f
 13848  1522  07BA               	movlw	0
 13849  1523  3000               	addwfc	(memcpy@s+1),f
 13850  1524  3DBB               	line	15
 13851                           	
 13852                           l5202:	
 13853  1525                     	movf	(memcpy@d),w
 13854  1525  0838               	movwf	fsr1l
 13855  1526  0086               	movf	(memcpy@d+1),w
 13856  1527  0839               	movwf	fsr1h
 13857  1528  0087               	movf	(memcpy@tmp),w
 13858  1529  0837               	movwf	indf1
 13859  152A  0081               	
 13860                           l5204:	
 13861  152B                     	movlw	01h
 13862  152B  3001               	addwf	(memcpy@d),f
 13863  152C  07B8               	movlw	0
 13864  152D  3000               	addwfc	(memcpy@d+1),f
 13865  152E  3DB9               	goto	l5206
 13866  152F  2D30               	line	16
 13867                           	
 13868                           l1256:	
 13869  1530                     	line	13
 13870                           	
 13871                           l5206:	
 13872  1530                     	movlw	01h
 13873  1530  3001               	subwf	(memcpy@n),f
 13874  1531  02B4               	movlw	0
 13875  1532  3000               	subwfb	(memcpy@n+1),f
 13876  1533  3BB5               		incf	(((memcpy@n))),w
 13877  1534  0A34               	skipz
 13878  1535  1D03               	goto	u3521
 13879  1536  2D3B               	incf	(((memcpy@n+1))),w
 13880  1537  0A35               	btfss	status,2
 13881  1538  1D03               	goto	u3521
 13882  1539  2D3B               	goto	u3520
 13883  153A  2D3C               u3521:
 13884  153B                     	goto	l5198
 13885  153B  2D19               u3520:
 13886  153C                     	goto	l1259
 13887  153C  2D3D               	
 13888                           l1258:	
 13889  153D                     	line	18
 13890                           ;	Return value of _memcpy is never used
 13891                           	
 13892                           l1259:	
 13893  153D                     	return
 13894  153D  0008               	opt stack 0
 13895                           GLOBAL	__end_of_memcpy
 13896                           	__end_of_memcpy:
 13897  153E                     	signat	_memcpy,12409
 13898                           	global	_GetI2CStatus
 13899                           
 13900 ;; *************** function _GetI2CStatus *****************
 13901 ;; Defined at:
 13902 ;;		line 38 in file "I2C.c"
 13903 ;; Parameters:    Size  Location     Type
 13904 ;;		None
 13905 ;; Auto vars:     Size  Location     Type
 13906 ;;		None
 13907 ;; Return value:  Size  Location     Type
 13908 ;;                  2   16[BANK0 ] int 
 13909 ;; Registers used:
 13910 ;;		wreg
 13911 ;; Tracked objects:
 13912 ;;		On entry : 0/0
 13913 ;;		On exit  : 0/0
 13914 ;;		Unchanged: 0/0
 13915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13916 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 13917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13918 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 13919 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 13920 ;;Total ram usage:        4 bytes
 13921 ;; Hardware stack levels used:    1
 13922 ;; Hardware stack levels required when called:    6
 13923 ;; This function calls:
 13924 ;;		Nothing
 13925 ;; This function is called by:
 13926 ;;		_EM1812EntryPoint
 13927 ;; This function uses a non-reentrant model
 13928 ;;
 13929                           psect	text44,local,class=CODE,delta=2,merge=1,group=0
 13930                           	file	"I2C.c"
 13931                           	line	38
 13932                           global __ptext44
 13933                           __ptext44:	;psect for function _GetI2CStatus
 13934  130C                     psect	text44
 13935                           	file	"I2C.c"
 13936                           	line	38
 13937                           	global	__size_of_GetI2CStatus
 13938                           	__size_of_GetI2CStatus	equ	__end_of_GetI2CStatus-_GetI2CStatus
 13939  000A                     	
 13940                           _GetI2CStatus:	
 13941  130C                     ;incstack = 0
 13942                           	opt	stack 8
 13943                           ; Regs used in _GetI2CStatus: [wreg]
 13944                           	line	40
 13945                           	
 13946                           l5620:	
 13947  130C                     ;I2C.c: 40:   return wI2CCommandState;
 13948                           	movlb 0	; select bank0
 13949  130C  0020               	movf	(_wI2CCommandState),w
 13950  130D  085F               	movwf	(??_GetI2CStatus+0)+0
 13951  130E  00B2               	clrf	(??_GetI2CStatus+0)+0+1
 13952  130F  01B3               	movf	0+(??_GetI2CStatus+0)+0,w
 13953  1310  0832               	movwf	(?_GetI2CStatus)
 13954  1311  00B0               	movf	1+(??_GetI2CStatus+0)+0,w
 13955  1312  0833               	movwf	(?_GetI2CStatus+1)
 13956  1313  00B1               	goto	l536
 13957  1314  2B15               	
 13958                           l5622:	
 13959  1315                     	line	41
 13960                           	
 13961                           l536:	
 13962  1315                     	return
 13963  1315  0008               	opt stack 0
 13964                           GLOBAL	__end_of_GetI2CStatus
 13965                           	__end_of_GetI2CStatus:
 13966  1316                     	signat	_GetI2CStatus,90
 13967                           	global	_Debounce
 13968                           
 13969 ;; *************** function _Debounce *****************
 13970 ;; Defined at:
 13971 ;;		line 79 in file "161518_temp_main.c"
 13972 ;; Parameters:    Size  Location     Type
 13973 ;;  iSwitch         1    wreg     unsigned char 
 13974 ;;  ioTimer         1   16[BANK0 ] PTR unsigned short 
 13975 ;;		 -> main@wDebounceDown(2), main@wDebounceUp(2), main@wDebounceEnter(2), 
 13976 ;;  swPressed       1   17[BANK0 ] PTR unsigned char 
 13977 ;;		 -> main@wEnterBottonPressed(1), main@wDownBottonPressed(1), main@wUpBottonPressed(1), 
 13978 ;; Auto vars:     Size  Location     Type
 13979 ;;  iSwitch         1   20[BANK0 ] unsigned char 
 13980 ;; Return value:  Size  Location     Type
 13981 ;;                  1    wreg      void 
 13982 ;; Registers used:
 13983 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13984 ;; Tracked objects:
 13985 ;;		On entry : 0/0
 13986 ;;		On exit  : 0/0
 13987 ;;		Unchanged: 0/0
 13988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13989 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 13990 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13991 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 13992 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 13993 ;;Total ram usage:        5 bytes
 13994 ;; Hardware stack levels used:    1
 13995 ;; Hardware stack levels required when called:    6
 13996 ;; This function calls:
 13997 ;;		Nothing
 13998 ;; This function is called by:
 13999 ;;		_main
 14000 ;; This function uses a non-reentrant model
 14001 ;;
 14002                           psect	text45,local,class=CODE,delta=2,merge=1,group=0
 14003                           	file	"161518_temp_main.c"
 14004                           	line	79
 14005                           global __ptext45
 14006                           __ptext45:	;psect for function _Debounce
 14007  16DB                     psect	text45
 14008                           	file	"161518_temp_main.c"
 14009                           	line	79
 14010                           	global	__size_of_Debounce
 14011                           	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 14012  0045                     	
 14013                           _Debounce:	
 14014  16DB                     ;incstack = 0
 14015                           	opt	stack 9
 14016                           ; Regs used in _Debounce: [wreg+fsr1l+fsr1h+status,2+status,0]
 14017                           ;Debounce@iSwitch stored from wreg
 14018                           	movlb 0	; select bank0
 14019  16DB  0020               	movwf	(Debounce@iSwitch)
 14020  16DC  00B4               	line	81
 14021                           	
 14022                           l5864:	
 14023  16DD                     	movf	((Debounce@iSwitch)),w
 14024  16DD  0834               	btfss	status,2
 14025  16DE  1D03               	goto	u4401
 14026  16DF  2EE1               	goto	u4400
 14027  16E0  2EE2               u4401:
 14028  16E1                     	goto	l5868
 14029  16E1  2EEB               u4400:
 14030  16E2                     	line	83
 14031                           	
 14032                           l5866:	
 14033  16E2                     	movf	(Debounce@ioTimer),w
 14034  16E2  0830               	movwf	fsr1l
 14035  16E3  0086               	clrf fsr1h	
 14036  16E4  0187               	
 14037                           	movlw	01h
 14038  16E5  3001               	addwf	indf1,f
 14039  16E6  0781               	addfsr	fsr1,1
 14040  16E7  3141               	skipnc
 14041  16E8  1803               	incf	indf1,f
 14042  16E9  0A81               	line	84
 14043                           	goto	l5870
 14044  16EA  2EF2               	line	85
 14045                           	
 14046                           l146:	
 14047  16EB                     	line	87
 14048                           	
 14049                           l5868:	
 14050  16EB                     	movf	(Debounce@ioTimer),w
 14051  16EB  0830               	movwf	fsr1l
 14052  16EC  0086               	clrf fsr1h	
 14053  16ED  0187               	
 14054                           	movlw	0
 14055  16EE  3000               	movwi	[0]fsr1
 14056  16EF  3FC0               	movwi	[1]fsr1
 14057  16F0  3FC1               	goto	l5870
 14058  16F1  2EF2               	line	88
 14059                           	
 14060                           l147:	
 14061  16F2                     	line	89
 14062                           	
 14063                           l5870:	
 14064  16F2                     	movf	(Debounce@ioTimer),w
 14065  16F2  0830               	movwf	fsr1l
 14066  16F3  0086               	clrf fsr1h	
 14067  16F4  0187               	
 14068                           	moviw	fsr1++
 14069  16F5  0016               xorlw	208
 14070  16F6  3AD0               movwf	(??_Debounce+0)+0
 14071  16F7  00B2               moviw	fsr1++
 14072  16F8  0016               xorlw	7
 14073  16F9  3A07               iorwf	(??_Debounce+0)+0
 14074  16FA  04B2               	btfss	status,2
 14075  16FB  1D03               	goto	u4411
 14076  16FC  2EFE               	goto	u4410
 14077  16FD  2EFF               u4411:
 14078  16FE                     	goto	l5874
 14079  16FE  2F05               u4410:
 14080  16FF                     	line	91
 14081                           	
 14082                           l5872:	
 14083  16FF                     	movf	(Debounce@swPressed),w
 14084  16FF  0831               	movwf	fsr1l
 14085  1700  0086               	clrf fsr1h	
 14086  1701  0187               	
 14087                           	clrf	indf1
 14088  1702  0181               	incf	indf1,f
 14089  1703  0A81               	goto	l5874
 14090  1704  2F05               	line	92
 14091                           	
 14092                           l148:	
 14093  1705                     	line	93
 14094                           	
 14095                           l5874:	
 14096  1705                     	movf	(Debounce@ioTimer),w
 14097  1705  0830               	movwf	fsr1l
 14098  1706  0086               	clrf fsr1h	
 14099  1707  0187               	
 14100                           	moviw	fsr1++
 14101  1708  0016               xorlw	64
 14102  1709  3A40               movwf	(??_Debounce+0)+0
 14103  170A  00B2               moviw	fsr1++
 14104  170B  0016               xorlw	31
 14105  170C  3A1F               iorwf	(??_Debounce+0)+0
 14106  170D  04B2               	btfss	status,2
 14107  170E  1D03               	goto	u4421
 14108  170F  2F11               	goto	u4420
 14109  1710  2F12               u4421:
 14110  1711                     	goto	l150
 14111  1711  2F1F               u4420:
 14112  1712                     	line	95
 14113                           	
 14114                           l5876:	
 14115  1712                     	movf	(Debounce@ioTimer),w
 14116  1712  0830               	movwf	fsr1l
 14117  1713  0086               	clrf fsr1h	
 14118  1714  0187               	
 14119                           	movlw	0D1h
 14120  1715  30D1               	movwi	[0]fsr1
 14121  1716  3FC0               	movlw	07h
 14122  1717  3007               	movwi	[1]fsr1
 14123  1718  3FC1               	line	96
 14124                           	
 14125                           l5878:	
 14126  1719                     	movf	(Debounce@swPressed),w
 14127  1719  0831               	movwf	fsr1l
 14128  171A  0086               	clrf fsr1h	
 14129  171B  0187               	
 14130                           	clrf	indf1
 14131  171C  0181               	incf	indf1,f
 14132  171D  0A81               	goto	l150
 14133  171E  2F1F               	line	97
 14134                           	
 14135                           l149:	
 14136  171F                     	line	98
 14137                           	
 14138                           l150:	
 14139  171F                     	return
 14140  171F  0008               	opt stack 0
 14141                           GLOBAL	__end_of_Debounce
 14142                           	__end_of_Debounce:
 14143  1720                     	signat	_Debounce,12409
 14144                           	global	_AddTrace
 14145                           
 14146 ;; *************** function _AddTrace *****************
 14147 ;; Defined at:
 14148 ;;		line 24 in file "GeneralFunction.c"
 14149 ;; Parameters:    Size  Location     Type
 14150 ;;  oText           1    wreg     PTR unsigned char 
 14151 ;;		 -> wInterruptText(75), 
 14152 ;;  iSizeOfoText    1   43[BANK0 ] unsigned char 
 14153 ;;  iText           2   44[BANK0 ] PTR unsigned char 
 14154 ;;		 -> STR_2(9), STR_1(12), main@wReadout(20), 
 14155 ;; Auto vars:     Size  Location     Type
 14156 ;;  oText           1    6[BANK1 ] PTR unsigned char 
 14157 ;;		 -> wInterruptText(75), 
 14158 ;; Return value:  Size  Location     Type
 14159 ;;                  1    wreg      void 
 14160 ;; Registers used:
 14161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14162 ;; Tracked objects:
 14163 ;;		On entry : 0/0
 14164 ;;		On exit  : 0/0
 14165 ;;		Unchanged: 0/0
 14166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14167 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 14168 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
 14169 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
       0       0
 14170 ;;      Totals:         0       3       7       0       0       0       0       0       0       0       0       0       
       0       0
 14171 ;;Total ram usage:       10 bytes
 14172 ;; Hardware stack levels used:    1
 14173 ;; Hardware stack levels required when called:    8
 14174 ;; This function calls:
 14175 ;;		_strcat
 14176 ;;		_strlen
 14177 ;; This function is called by:
 14178 ;;		_main
 14179 ;; This function uses a non-reentrant model
 14180 ;;
 14181                           psect	text46,local,class=CODE,delta=2,merge=1,group=0
 14182                           	file	"GeneralFunction.c"
 14183                           	line	24
 14184                           global __ptext46
 14185                           __ptext46:	;psect for function _AddTrace
 14186  1765                     psect	text46
 14187                           	file	"GeneralFunction.c"
 14188                           	line	24
 14189                           	global	__size_of_AddTrace
 14190                           	__size_of_AddTrace	equ	__end_of_AddTrace-_AddTrace
 14191  0049                     	
 14192                           _AddTrace:	
 14193  1765                     ;incstack = 0
 14194                           	opt	stack 7
 14195                           ; Regs used in _AddTrace: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14196                           ;AddTrace@oText stored from wreg
 14197                           	movlb 1	; select bank1
 14198  1765  0021               	movwf	(AddTrace@oText)^080h
 14199  1766  00A6               	line	26
 14200                           	
 14201                           l6206:	
 14202  1767                     ;GeneralFunction.c: 24: void AddTrace(char* oText, char iSizeOfoText, char* iText);Gener
                                 alFunction.c: 25: {;GeneralFunction.c: 26:     if((iSizeOfoText - 1 - strlen(oText)) > s
                                 trlen(iText))
 14203                           	movf	(AddTrace@oText)^080h,w
 14204  1767  0826               	movlb 0	; select bank0
 14205  1768  0020               	movwf	(strlen@s)
 14206  1769  00B0               	movlw	0x2
 14207  176A  3002               
 14208                           	movwf	(strlen@s+1)
 14209  176B  00B1               	fcall	_strlen
 14210  176C  3193  23C1  3197   	movlb 0	; select bank0
 14211  176F  0020               	comf	(0+(?_strlen)),w
 14212  1770  0930               	movlb 1	; select bank1
 14213  1771  0021               	movwf	(??_AddTrace+0)^080h+0
 14214  1772  00A0               	movlb 0	; select bank0
 14215  1773  0020               	comf	(1+(?_strlen)),w
 14216  1774  0931               	movlb 1	; select bank1
 14217  1775  0021               	movwf	((??_AddTrace+0)^080h+0+1)
 14218  1776  00A1               	incf	(??_AddTrace+0)^080h+0,f
 14219  1777  0AA0               	skipnz
 14220  1778  1903               	incf	((??_AddTrace+0)^080h+0+1),f
 14221  1779  0AA1               	movlb 0	; select bank0
 14222  177A  0020               	movf	(AddTrace@iSizeOfoText),w
 14223  177B  084B               	movlb 1	; select bank1
 14224  177C  0021               	addwf	0+(??_AddTrace+0)^080h+0,w
 14225  177D  0720               	movwf	(??_AddTrace+2)^080h+0
 14226  177E  00A2               	movf	1+(??_AddTrace+0)^080h+0,w
 14227  177F  0821               	skipnc
 14228  1780  1803               	incf	1+(??_AddTrace+0)^080h+0,w
 14229  1781  0A21               	movwf	((??_AddTrace+2)^080h+0)+1
 14230  1782  00A3               	movf	0+(??_AddTrace+2)^080h+0,w
 14231  1783  0822               	addlw	0FFh
 14232  1784  3EFF               	movwf	(??_AddTrace+4)^080h+0
 14233  1785  00A4               	movlw	0FFh
 14234  1786  30FF               	addwfc	1+(??_AddTrace+2)^080h+0,w
 14235  1787  3D23               	movwf	1+(??_AddTrace+4)^080h+0
 14236  1788  00A5               	movlb 0	; select bank0
 14237  1789  0020               	movf	(AddTrace@iText+1),w
 14238  178A  084D               	movwf	(strlen@s+1)
 14239  178B  00B1               	movf	(AddTrace@iText),w
 14240  178C  084C               	movwf	(strlen@s)
 14241  178D  00B0               	fcall	_strlen
 14242  178E  3193  23C1  3197   	movlb 1	; select bank1
 14243  1791  0021               	movf	1+(??_AddTrace+4)^080h+0,w
 14244  1792  0825               	movlb 0	; select bank0
 14245  1793  0020               	subwf	(1+(?_strlen)),w
 14246  1794  0231               	skipz
 14247  1795  1D03               	goto	u4675
 14248  1796  2F9B               	movlb 1	; select bank1
 14249  1797  0021               	movf	0+(??_AddTrace+4)^080h+0,w
 14250  1798  0824               	movlb 0	; select bank0
 14251  1799  0020               	subwf	(0+(?_strlen)),w
 14252  179A  0230               u4675:
 14253  179B                     	skipnc
 14254  179B  1803               	goto	u4671
 14255  179C  2F9E               	goto	u4670
 14256  179D  2F9F               u4671:
 14257  179E                     	goto	l605
 14258  179E  2FAD               u4670:
 14259  179F                     	line	28
 14260                           	
 14261                           l6208:	
 14262  179F                     ;GeneralFunction.c: 27:     {;GeneralFunction.c: 28:         strcat(oText,iText);
 14263                           	movlb 1	; select bank1
 14264  179F  0021               	movf	(AddTrace@oText)^080h,w
 14265  17A0  0826               	movlb 0	; select bank0
 14266  17A1  0020               	movwf	(strcat@dest)
 14267  17A2  00C7               	movlw	0x2
 14268  17A3  3002               
 14269                           	movwf	(strcat@dest+1)
 14270  17A4  00C8               	movf	(AddTrace@iText+1),w
 14271  17A5  084D               	movwf	(strcat@src+1)
 14272  17A6  00CA               	movf	(AddTrace@iText),w
 14273  17A7  084C               	movwf	(strcat@src)
 14274  17A8  00C9               	fcall	_strcat
 14275  17A9  3193  236E  3197   	goto	l605
 14276  17AC  2FAD               	line	29
 14277                           ;GeneralFunction.c: 29:     }
 14278                           	
 14279                           l604:	
 14280  17AD                     	line	30
 14281                           	
 14282                           l605:	
 14283  17AD                     	return
 14284  17AD  0008               	opt stack 0
 14285                           GLOBAL	__end_of_AddTrace
 14286                           	__end_of_AddTrace:
 14287  17AE                     	signat	_AddTrace,12409
 14288                           	global	_strcat
 14289                           
 14290 ;; *************** function _strcat *****************
 14291 ;; Defined at:
 14292 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
 14293 ;; Parameters:    Size  Location     Type
 14294 ;;  dest            2   39[BANK0 ] PTR unsigned char 
 14295 ;;		 -> Esp8266SetNetworkParameters@wCommand(70), Esp8266OpenSocketCommand@wCommand(70), wInterruptText(75), 
 14296 ;;  src             2   41[BANK0 ] PTR const unsigned char 
 14297 ;;		 -> STR_19(14), STR_18(4), STR_16(9), STR_15(7), 
 14298 ;;		 -> STR_12(5), STR_11(5), Esp8266SetNetworkParameters@wNumber(3), STR_10(3), 
 14299 ;;		 -> STR_9(4), STR_6(3), Esp8266OpenSocketCommand@wPort(7), STR_5(3), 
 14300 ;;		 -> STR_4(4), NULL(0), STR_2(9), STR_1(12), 
 14301 ;;		 -> main@wReadout(20), 
 14302 ;; Auto vars:     Size  Location     Type
 14303 ;;		None
 14304 ;; Return value:  Size  Location     Type
 14305 ;;                  2   39[BANK0 ] PTR unsigned char 
 14306 ;; Registers used:
 14307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14308 ;; Tracked objects:
 14309 ;;		On entry : 0/0
 14310 ;;		On exit  : 0/0
 14311 ;;		Unchanged: 0/0
 14312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14313 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 14314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14316 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 14317 ;;Total ram usage:        4 bytes
 14318 ;; Hardware stack levels used:    1
 14319 ;; Hardware stack levels required when called:    7
 14320 ;; This function calls:
 14321 ;;		_strcpy
 14322 ;;		_strlen
 14323 ;; This function is called by:
 14324 ;;		_AddTrace
 14325 ;;		_Esp8266OpenSocketCommand
 14326 ;;		_Esp8266SetNetworkParameters
 14327 ;; This function uses a non-reentrant model
 14328 ;;
 14329                           psect	text47,local,class=CODE,delta=2,merge=1,group=2
 14330                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
 14331                           	line	3
 14332                           global __ptext47
 14333                           __ptext47:	;psect for function _strcat
 14334  136E                     psect	text47
 14335                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
 14336                           	line	3
 14337                           	global	__size_of_strcat
 14338                           	__size_of_strcat	equ	__end_of_strcat-_strcat
 14339  0018                     	
 14340                           _strcat:	
 14341  136E                     ;incstack = 0
 14342                           	opt	stack 6
 14343                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14344                           	line	5
 14345                           	
 14346                           l5352:	
 14347  136E                     	movlb 0	; select bank0
 14348  136E  0020               	movf	(strcat@dest+1),w
 14349  136F  0848               	movwf	(strlen@s+1)
 14350  1370  00B1               	movf	(strcat@dest),w
 14351  1371  0847               	movwf	(strlen@s)
 14352  1372  00B0               	fcall	_strlen
 14353  1373  3193  23C1  3193   	movlb 0	; select bank0
 14354  1376  0020               	movf	(0+(?_strlen)),w
 14355  1377  0830               	addwf	(strcat@dest),w
 14356  1378  0747               	movwf	(strcpy@dest)
 14357  1379  00B6               	movf	(1+(?_strlen)),w
 14358  137A  0831               	addwfc	(strcat@dest+1),w
 14359  137B  3D48               	movwf	1+(strcpy@dest)
 14360  137C  00B7               	movf	(strcat@src+1),w
 14361  137D  084A               	movwf	(strcpy@src+1)
 14362  137E  00B9               	movf	(strcat@src),w
 14363  137F  0849               	movwf	(strcpy@src)
 14364  1380  00B8               	fcall	_strcpy
 14365  1381  3194  240C  3193   	goto	l1276
 14366  1384  2B85               	line	6
 14367                           	
 14368                           l5354:	
 14369  1385                     	line	7
 14370                           ;	Return value of _strcat is never used
 14371                           	
 14372                           l1276:	
 14373  1385                     	return
 14374  1385  0008               	opt stack 0
 14375                           GLOBAL	__end_of_strcat
 14376                           	__end_of_strcat:
 14377  1386                     	signat	_strcat,8313
 14378                           	global	_strlen
 14379                           
 14380 ;; *************** function _strlen *****************
 14381 ;; Defined at:
 14382 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 14383 ;; Parameters:    Size  Location     Type
 14384 ;;  s               2   16[BANK0 ] PTR const unsigned char 
 14385 ;;		 -> STR_16(9), STR_15(7), Esp8266SetNetworkParameters@wCommand(70), STR_7(17), 
 14386 ;;		 -> Esp8266OpenSocketCommand@wCommand(70), STR_2(9), STR_1(12), main@wReadout(20), 
 14387 ;;		 -> wInterruptText(75), 
 14388 ;; Auto vars:     Size  Location     Type
 14389 ;;  a               2   20[BANK0 ] PTR const unsigned char 
 14390 ;;		 -> STR_16(9), STR_15(7), Esp8266SetNetworkParameters@wCommand(70), STR_7(17), 
 14391 ;;		 -> Esp8266OpenSocketCommand@wCommand(70), STR_2(9), STR_1(12), main@wReadout(20), 
 14392 ;;		 -> wInterruptText(75), 
 14393 ;; Return value:  Size  Location     Type
 14394 ;;                  2   16[BANK0 ] unsigned int 
 14395 ;; Registers used:
 14396 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 14397 ;; Tracked objects:
 14398 ;;		On entry : 0/0
 14399 ;;		On exit  : 0/0
 14400 ;;		Unchanged: 0/0
 14401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14402 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 14403 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 14404 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 14405 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 14406 ;;Total ram usage:        6 bytes
 14407 ;; Hardware stack levels used:    1
 14408 ;; Hardware stack levels required when called:    6
 14409 ;; This function calls:
 14410 ;;		Nothing
 14411 ;; This function is called by:
 14412 ;;		_PrintLog
 14413 ;;		_AddTrace
 14414 ;;		_Esp8266OpenSocketCommand
 14415 ;;		_Esp8266SetNetworkParameters
 14416 ;;		_strcat
 14417 ;; This function uses a non-reentrant model
 14418 ;;
 14419                           psect	text48,local,class=CODE,delta=2,merge=1,group=2
 14420                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 14421                           	line	12
 14422                           global __ptext48
 14423                           __ptext48:	;psect for function _strlen
 14424  13C1                     psect	text48
 14425                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 14426                           	line	12
 14427                           	global	__size_of_strlen
 14428                           	__size_of_strlen	equ	__end_of_strlen-_strlen
 14429  0024                     	
 14430                           _strlen:	
 14431  13C1                     ;incstack = 0
 14432                           	opt	stack 8
 14433                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 14434                           	line	14
 14435                           	
 14436                           l5146:	
 14437  13C1                     	movlb 0	; select bank0
 14438  13C1  0020               	movf	(strlen@s+1),w
 14439  13C2  0831               	movwf	(strlen@a+1)
 14440  13C3  00B5               	movf	(strlen@s),w
 14441  13C4  0830               	movwf	(strlen@a)
 14442  13C5  00B4               	line	16
 14443                           	goto	l5150
 14444  13C6  2BCC               	
 14445                           l1286:	
 14446  13C7                     	line	17
 14447                           	
 14448                           l5148:	
 14449  13C7                     	movlw	01h
 14450  13C7  3001               	addwf	(strlen@s),f
 14451  13C8  07B0               	movlw	0
 14452  13C9  3000               	addwfc	(strlen@s+1),f
 14453  13CA  3DB1               	goto	l5150
 14454  13CB  2BCC               	line	18
 14455                           	
 14456                           l1285:	
 14457  13CC                     	line	16
 14458                           	
 14459                           l5150:	
 14460  13CC                     	movf	(strlen@s),w
 14461  13CC  0830               	movwf	fsr0l
 14462  13CD  0084               	movf	((strlen@s+1)),w
 14463  13CE  0831               	movwf	fsr0h
 14464  13CF  0085               	moviw	fsr0++
 14465  13D0  0012               	btfss	status,2
 14466  13D1  1D03               	goto	u3491
 14467  13D2  2BD4               	goto	u3490
 14468  13D3  2BD5               u3491:
 14469  13D4                     	goto	l5148
 14470  13D4  2BC7               u3490:
 14471  13D5                     	goto	l5152
 14472  13D5  2BD6               	
 14473                           l1287:	
 14474  13D6                     	line	25
 14475                           	
 14476                           l5152:	
 14477  13D6                     	comf	(strlen@a),w
 14478  13D6  0934               	movwf	(??_strlen+0)+0
 14479  13D7  00B2               	comf	(strlen@a+1),w
 14480  13D8  0935               	movwf	((??_strlen+0)+0+1)
 14481  13D9  00B3               	incf	(??_strlen+0)+0,f
 14482  13DA  0AB2               	skipnz
 14483  13DB  1903               	incf	((??_strlen+0)+0+1),f
 14484  13DC  0AB3               	movf	(strlen@s),w
 14485  13DD  0830               	addwf	0+(??_strlen+0)+0,w
 14486  13DE  0732               	movwf	(?_strlen)
 14487  13DF  00B0               	movf	(strlen@s+1),w
 14488  13E0  0831               	addwfc	1+(??_strlen+0)+0,w
 14489  13E1  3D33               	movwf	1+(?_strlen)
 14490  13E2  00B1               	goto	l1288
 14491  13E3  2BE4               	
 14492                           l5154:	
 14493  13E4                     	line	26
 14494                           	
 14495                           l1288:	
 14496  13E4                     	return
 14497  13E4  0008               	opt stack 0
 14498                           GLOBAL	__end_of_strlen
 14499                           	__end_of_strlen:
 14500  13E5                     	signat	_strlen,4218
 14501                           	global	_strcpy
 14502                           
 14503 ;; *************** function _strcpy *****************
 14504 ;; Defined at:
 14505 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 14506 ;; Parameters:    Size  Location     Type
 14507 ;;  dest            2   22[BANK0 ] PTR unsigned char 
 14508 ;;		 -> Esp8266SetNetworkParameters@wCommand(70), Esp8266OpenSocketCommand@wCommand(70), wInterruptText(75), 
 14509 ;;  src             2   24[BANK0 ] PTR const unsigned char 
 14510 ;;		 -> STR_19(14), STR_18(4), STR_16(9), STR_15(7), 
 14511 ;;		 -> STR_12(5), STR_11(5), Esp8266SetNetworkParameters@wNumber(3), STR_10(3), 
 14512 ;;		 -> STR_9(4), STR_8(11), STR_6(3), Esp8266OpenSocketCommand@wPort(7), 
 14513 ;;		 -> STR_5(3), STR_4(4), STR_3(14), NULL(0), 
 14514 ;;		 -> STR_2(9), STR_1(12), main@wReadout(20), 
 14515 ;; Auto vars:     Size  Location     Type
 14516 ;;  d               2   32[BANK0 ] PTR unsigned char 
 14517 ;;		 -> Esp8266SetNetworkParameters@wCommand(70), Esp8266OpenSocketCommand@wCommand(70), wInterruptText(75), 
 14518 ;;  s               2   30[BANK0 ] PTR const unsigned char 
 14519 ;;		 -> STR_19(14), STR_18(4), STR_16(9), STR_15(7), 
 14520 ;;		 -> STR_12(5), STR_11(5), Esp8266SetNetworkParameters@wNumber(3), STR_10(3), 
 14521 ;;		 -> STR_9(4), STR_8(11), STR_6(3), Esp8266OpenSocketCommand@wPort(7), 
 14522 ;;		 -> STR_5(3), STR_4(4), STR_3(14), NULL(0), 
 14523 ;;		 -> STR_2(9), STR_1(12), main@wReadout(20), 
 14524 ;; Return value:  Size  Location     Type
 14525 ;;                  2   22[BANK0 ] PTR unsigned char 
 14526 ;; Registers used:
 14527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, pclath
 14528 ;; Tracked objects:
 14529 ;;		On entry : 0/0
 14530 ;;		On exit  : 0/0
 14531 ;;		Unchanged: 0/0
 14532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14533 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 14534 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 14535 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 14536 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0
 14537 ;;Total ram usage:       12 bytes
 14538 ;; Hardware stack levels used:    1
 14539 ;; Hardware stack levels required when called:    6
 14540 ;; This function calls:
 14541 ;;		Nothing
 14542 ;; This function is called by:
 14543 ;;		_Esp8266OpenSocketCommand
 14544 ;;		_Esp8266SetNetworkParameters
 14545 ;;		_strcat
 14546 ;; This function uses a non-reentrant model
 14547 ;;
 14548                           psect	text49,local,class=CODE,delta=2,merge=1,group=2
 14549                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 14550                           	line	7
 14551                           global __ptext49
 14552                           __ptext49:	;psect for function _strcpy
 14553  140C                     psect	text49
 14554                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 14555                           	line	7
 14556                           	global	__size_of_strcpy
 14557                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
 14558  002A                     	
 14559                           _strcpy:	
 14560  140C                     ;incstack = 0
 14561                           	opt	stack 7
 14562                           ; Regs used in _strcpy: [wreg-fsr1h+pclath]
 14563                           	line	13
 14564                           	
 14565                           l5208:	
 14566  140C                     	movlb 0	; select bank0
 14567  140C  0020               	movf	(strcpy@src+1),w
 14568  140D  0839               	movwf	(strcpy@s+1)
 14569  140E  00BF               	movf	(strcpy@src),w
 14570  140F  0838               	movwf	(strcpy@s)
 14571  1410  00BE               	line	14
 14572                           	movf	(strcpy@dest+1),w
 14573  1411  0837               	movwf	(strcpy@d+1)
 14574  1412  00C1               	movf	(strcpy@dest),w
 14575  1413  0836               	movwf	(strcpy@d)
 14576  1414  00C0               	line	15
 14577                           	goto	l5210
 14578  1415  2C17               	
 14579                           l1280:	
 14580  1416                     	goto	l5210
 14581  1416  2C17               	
 14582                           l1279:	
 14583  1417                     	
 14584                           l5210:	
 14585  1417                     	movf	(strcpy@d+1),w
 14586  1417  0841               	movwf	(??_strcpy+0)+0+1
 14587  1418  00BB               	movf	(strcpy@d),w
 14588  1419  0840               	movwf	(??_strcpy+0)+0
 14589  141A  00BA               	incf	(strcpy@d),f
 14590  141B  0AC0               	skipnz
 14591  141C  1903               	incf	(strcpy@d+1),f
 14592  141D  0AC1               	movf	0+(??_strcpy+0)+0,w
 14593  141E  083A               	movwf	fsr1l
 14594  141F  0086               	movf	1+(??_strcpy+0)+0,w
 14595  1420  083B               	movwf	fsr1h
 14596  1421  0087               
 14597                           	movf	(strcpy@s+1),w
 14598  1422  083F               	movwf	(??_strcpy+2)+0+1
 14599  1423  00BD               	movf	(strcpy@s),w
 14600  1424  083E               	movwf	(??_strcpy+2)+0
 14601  1425  00BC               	incf	(strcpy@s),f
 14602  1426  0ABE               	skipnz
 14603  1427  1903               	incf	(strcpy@s+1),f
 14604  1428  0ABF               	movf	0+(??_strcpy+2)+0,w
 14605  1429  083C               	movwf	fsr0l
 14606  142A  0084               	movf	(1+(??_strcpy+2)+0),w
 14607  142B  083D               	movwf	fsr0h
 14608  142C  0085               	movf	indf0,w ;code access
 14609  142D  0800               	movwi	[0]fsr1
 14610  142E  3FC0               	movf	wreg
 14611  142F  0889               	btfss	status,2
 14612  1430  1D03               	goto	u3531
 14613  1431  2C33               	goto	u3530
 14614  1432  2C34               u3531:
 14615  1433                     	goto	l5210
 14616  1433  2C17               u3530:
 14617  1434                     	goto	l1282
 14618  1434  2C35               	
 14619                           l1281:	
 14620  1435                     	line	18
 14621                           ;	Return value of _strcpy is never used
 14622                           	
 14623                           l1282:	
 14624  1435                     	return
 14625  1435  0008               	opt stack 0
 14626                           GLOBAL	__end_of_strcpy
 14627                           	__end_of_strcpy:
 14628  1436                     	signat	_strcpy,8313
 14629                           	global	_myint
 14630                           
 14631 ;; *************** function _myint *****************
 14632 ;; Defined at:
 14633 ;;		line 362 in file "161518_temp_main.c"
 14634 ;; Parameters:    Size  Location     Type
 14635 ;;		None
 14636 ;; Auto vars:     Size  Location     Type
 14637 ;;  wText           3    9[BANK0 ] unsigned char [3]
 14638 ;;  wText           3    6[BANK0 ] unsigned char [3]
 14639 ;;  wEUSARTError    2   14[BANK0 ] int 
 14640 ;;  wI2CError       2   12[BANK0 ] int 
 14641 ;; Return value:  Size  Location     Type
 14642 ;;                  1    wreg      void 
 14643 ;; Registers used:
 14644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14645 ;; Tracked objects:
 14646 ;;		On entry : 0/0
 14647 ;;		On exit  : 0/0
 14648 ;;		Unchanged: 0/0
 14649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14651 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
 14652 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14653 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
       0       0
 14654 ;;Total ram usage:       11 bytes
 14655 ;; Hardware stack levels used:    1
 14656 ;; Hardware stack levels required when called:    5
 14657 ;; This function calls:
 14658 ;;		_EUSARTInterrupt
 14659 ;;		_I2C_Interrupt
 14660 ;;		_TempUpdateRequest
 14661 ;;		i1_lcdWriteText
 14662 ;; This function is called by:
 14663 ;;		Interrupt level 1
 14664 ;; This function uses a non-reentrant model
 14665 ;;
 14666                           psect	intentry,class=CODE,delta=2
 14667                           global __pintentry
 14668                           __pintentry:
 14669  0004                     psect	intentry
 14670                           	file	"161518_temp_main.c"
 14671                           	line	362
 14672                           	global	__size_of_myint
 14673                           	__size_of_myint	equ	__end_of_myint-_myint
 14674  0075                     	
 14675                           _myint:	
 14676  0004                     ;incstack = 0
 14677                           	opt	stack 4
 14678                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
 14679  0004  147E               ; Regs used in _myint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14680                           psect	intentry
 14681                           	pagesel	$
 14682  0005  3180               	line	364
 14683                           	
 14684                           i1l6452:	
 14685  0006                     	movlb 0	; select bank0
 14686  0006  0020               	clrf	(myint@wI2CError)
 14687  0007  01AC               	clrf	(myint@wI2CError+1)
 14688  0008  01AD               	clrf	(myint@wEUSARTError)
 14689  0009  01AE               	clrf	(myint@wEUSARTError+1)
 14690  000A  01AF               	line	365
 14691                           	
 14692                           i1l6454:	
 14693  000B                     	fcall	_I2C_Interrupt
 14694  000B  318E  26DC  3180   	movf	(1+(?_I2C_Interrupt)),w
 14695  000E  0871               	movlb 0	; select bank0
 14696  000F  0020               	movwf	(myint@wI2CError+1)
 14697  0010  00AD               	movf	(0+(?_I2C_Interrupt)),w
 14698  0011  0870               	movwf	(myint@wI2CError)
 14699  0012  00AC               	line	366
 14700                           	
 14701                           i1l6456:	
 14702  0013                     	movf	((myint@wI2CError)),w
 14703  0013  082C               iorwf	((myint@wI2CError+1)),w
 14704  0014  042D               	btfsc	status,2
 14705  0015  1903               	goto	u477_21
 14706  0016  2818               	goto	u477_20
 14707  0017  2819               u477_21:
 14708  0018                     	goto	i1l6466
 14709  0018  282B               u477_20:
 14710  0019                     	line	369
 14711                           	
 14712                           i1l6458:	
 14713  0019                     	movlw	low(069h)
 14714  0019  3069               	movwf	(??_myint+0)+0
 14715  001A  00A5               	movf	(??_myint+0)+0,w
 14716  001B  0825               	movwf	(myint@wText)
 14717  001C  00A6               	line	370
 14718                           	
 14719                           i1l6460:	
 14720  001D                     	movf	(myint@wI2CError),w
 14721  001D  082C               	addlw	030h
 14722  001E  3E30               	movwf	(??_myint+0)+0
 14723  001F  00A5               	movf	(??_myint+0)+0,w
 14724  0020  0825               	movwf	0+(myint@wText)+01h
 14725  0021  00A7               	line	371
 14726                           	
 14727                           i1l6462:	
 14728  0022                     	clrf	0+(myint@wText)+02h
 14729  0022  01A8               	line	372
 14730                           	
 14731                           i1l6464:	
 14732  0023                     	movlw	low(myint@wText)
 14733  0023  3026               	movwf	(i1lcdWriteText@iText)
 14734  0024  00A0               	movlw	high(myint@wText)
 14735  0025  3000               	movwf	(i1lcdWriteText@iText+1)
 14736  0026  00A1               	fcall	i1_lcdWriteText
 14737  0027  3194  2460  3180   	goto	i1l6466
 14738  002A  282B               	line	373
 14739                           	
 14740                           i1l198:	
 14741  002B                     	line	375
 14742                           	
 14743                           i1l6466:	
 14744  002B                     	fcall	_EUSARTInterrupt
 14745  002B  318A  228C  3180   	movf	(1+(?_EUSARTInterrupt)),w
 14746  002E  0871               	movlb 0	; select bank0
 14747  002F  0020               	movwf	(myint@wEUSARTError+1)
 14748  0030  00AF               	movf	(0+(?_EUSARTInterrupt)),w
 14749  0031  0870               	movwf	(myint@wEUSARTError)
 14750  0032  00AE               	line	376
 14751                           	
 14752                           i1l6468:	
 14753  0033                     	movf	((myint@wEUSARTError)),w
 14754  0033  082E               iorwf	((myint@wEUSARTError+1)),w
 14755  0034  042F               	btfsc	status,2
 14756  0035  1903               	goto	u478_21
 14757  0036  2838               	goto	u478_20
 14758  0037  2839               u478_21:
 14759  0038                     	goto	i1l6478
 14760  0038  284B               u478_20:
 14761  0039                     	line	379
 14762                           	
 14763                           i1l6470:	
 14764  0039                     	movlw	low(075h)
 14765  0039  3075               	movwf	(??_myint+0)+0
 14766  003A  00A5               	movf	(??_myint+0)+0,w
 14767  003B  0825               	movwf	(myint@wText_501)
 14768  003C  00A9               	line	380
 14769                           	
 14770                           i1l6472:	
 14771  003D                     	movf	(myint@wEUSARTError),w
 14772  003D  082E               	addlw	030h
 14773  003E  3E30               	movwf	(??_myint+0)+0
 14774  003F  00A5               	movf	(??_myint+0)+0,w
 14775  0040  0825               	movwf	0+(myint@wText_501)+01h
 14776  0041  00AA               	line	381
 14777                           	
 14778                           i1l6474:	
 14779  0042                     	clrf	0+(myint@wText_501)+02h
 14780  0042  01AB               	line	382
 14781                           	
 14782                           i1l6476:	
 14783  0043                     	movlw	low(myint@wText_501)
 14784  0043  3029               	movwf	(i1lcdWriteText@iText)
 14785  0044  00A0               	movlw	high(myint@wText_501)
 14786  0045  3000               	movwf	(i1lcdWriteText@iText+1)
 14787  0046  00A1               	fcall	i1_lcdWriteText
 14788  0047  3194  2460  3180   	goto	i1l6478
 14789  004A  284B               	line	383
 14790                           	
 14791                           i1l199:	
 14792  004B                     	line	384
 14793                           	
 14794                           i1l6478:	
 14795  004B                     	movlb 0	; select bank0
 14796  004B  0020               	btfss	(17),0	;volatile
 14797  004C  1C11               	goto	u479_21
 14798  004D  284F               	goto	u479_20
 14799  004E  2850               u479_21:
 14800  004F                     	goto	i1l6492
 14801  004F  286C               u479_20:
 14802  0050                     	line	386
 14803                           	
 14804                           i1l6480:	
 14805  0050                     	movlw	low(01h)
 14806  0050  3001               	movwf	(??_myint+0)+0
 14807  0051  00A5               	movf	(??_myint+0)+0,w
 14808  0052  0825               	addwf	(_wTimer1IntCounter),f
 14809  0053  07CF               	line	387
 14810                           	
 14811                           i1l6482:	
 14812  0054                     	bcf	(17),0	;volatile
 14813  0054  1011               	line	389
 14814                           		movlw	7
 14815  0055  3007               	xorwf	((_wTimer1IntCounter)),w
 14816  0056  064F               	btfss	status,2
 14817  0057  1D03               	goto	u480_21
 14818  0058  285A               	goto	u480_20
 14819  0059  285B               u480_21:
 14820  005A                     	goto	i1l6486
 14821  005A  2860               u480_20:
 14822  005B                     	line	391
 14823                           	
 14824                           i1l6484:	
 14825  005B                     	movlw	low(04Ch)
 14826  005B  304C               	movwf	(23)	;volatile
 14827  005C  0097               	line	392
 14828                           	movlw	low(083h)
 14829  005D  3083               	movwf	(22)	;volatile
 14830  005E  0096               	goto	i1l6486
 14831  005F  2860               	line	393
 14832                           	
 14833                           i1l201:	
 14834  0060                     	line	394
 14835                           	
 14836                           i1l6486:	
 14837  0060                     		movlw	8
 14838  0060  3008               	xorwf	((_wTimer1IntCounter)),w
 14839  0061  064F               	btfss	status,2
 14840  0062  1D03               	goto	u481_21
 14841  0063  2865               	goto	u481_20
 14842  0064  2866               u481_21:
 14843  0065                     	goto	i1l6492
 14844  0065  286C               u481_20:
 14845  0066                     	line	396
 14846                           	
 14847                           i1l6488:	
 14848  0066                     	clrf	(_wTimer1IntCounter)
 14849  0066  01CF               	line	397
 14850                           	
 14851                           i1l6490:	
 14852  0067                     	fcall	_TempUpdateRequest
 14853  0067  3193  234C  3180   	goto	i1l6492
 14854  006A  286C               	line	398
 14855                           	
 14856                           i1l202:	
 14857  006B                     	goto	i1l6492
 14858  006B  286C               	line	399
 14859                           	
 14860                           i1l200:	
 14861  006C                     	line	400
 14862                           	
 14863                           i1l6492:	
 14864  006C                     	btfss	(11),2	;volatile
 14865  006C  1D0B               	goto	u482_21
 14866  006D  286F               	goto	u482_20
 14867  006E  2870               u482_21:
 14868  006F                     	goto	i1l204
 14869  006F  2877               u482_20:
 14870  0070                     	line	402
 14871                           	
 14872                           i1l6494:	
 14873  0070                     	bcf	(11),2	;volatile
 14874  0070  110B               	line	403
 14875                           	
 14876                           i1l6496:	
 14877  0071                     	movlw	low(01h)
 14878  0071  3001               	movlb 0	; select bank0
 14879  0072  0020               	movwf	(??_myint+0)+0
 14880  0073  00A5               	movf	(??_myint+0)+0,w
 14881  0074  0825               	addwf	(_wTimer0Counter),f
 14882  0075  07D8               	goto	i1l204
 14883  0076  2877               	line	404
 14884                           	
 14885                           i1l203:	
 14886  0077                     	line	405
 14887                           	
 14888                           i1l204:	
 14889  0077                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
 14890  0077  107E               	retfie
 14891  0078  0009               	opt stack 0
 14892                           GLOBAL	__end_of_myint
 14893                           	__end_of_myint:
 14894  0079                     	signat	_myint,89
 14895                           	global	i1_lcdWriteText
 14896                           
 14897 ;; *************** function i1_lcdWriteText *****************
 14898 ;; Defined at:
 14899 ;;		line 63 in file "LCD_hd44780u_qy_2004a.c"
 14900 ;; Parameters:    Size  Location     Type
 14901 ;;  iText           2    0[BANK0 ] PTR unsigned char 
 14902 ;;		 -> Esp8266Entrypoint@wReturnNumber(4), STR_25(4), STR_22(4), NULL(0), 
 14903 ;;		 -> myint@wText_501(3), myint@wText(3), wInterruptText(75), 
 14904 ;; Auto vars:     Size  Location     Type
 14905 ;;  lcdWriteText    1   13[COMMON] unsigned char 
 14906 ;; Return value:  Size  Location     Type
 14907 ;;                  1    wreg      void 
 14908 ;; Registers used:
 14909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14910 ;; Tracked objects:
 14911 ;;		On entry : 0/0
 14912 ;;		On exit  : 0/0
 14913 ;;		Unchanged: 0/0
 14914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14915 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 14916 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14917 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 14918 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 14919 ;;Total ram usage:        6 bytes
 14920 ;; Hardware stack levels used:    1
 14921 ;; Hardware stack levels required when called:    4
 14922 ;; This function calls:
 14923 ;;		i1_writeTxtChk
 14924 ;; This function is called by:
 14925 ;;		_myint
 14926 ;; This function uses a non-reentrant model
 14927 ;;
 14928                           psect	text51,local,class=CODE,delta=2,merge=1,group=0
 14929                           	file	"LCD_hd44780u_qy_2004a.c"
 14930                           	line	63
 14931                           global __ptext51
 14932                           __ptext51:	;psect for function i1_lcdWriteText
 14933  1460                     psect	text51
 14934                           	file	"LCD_hd44780u_qy_2004a.c"
 14935                           	line	63
 14936                           	global	__size_ofi1_lcdWriteText
 14937                           	__size_ofi1_lcdWriteText	equ	__end_ofi1_lcdWriteText-i1_lcdWriteText
 14938  002B                     	
 14939                           i1_lcdWriteText:	
 14940  1460                     ;incstack = 0
 14941                           	opt	stack 4
 14942                           ; Regs used in i1_lcdWriteText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14943                           	line	65
 14944                           	
 14945                           i1l6220:	
 14946  1460                     ;LCD_hd44780u_qy_2004a.c: 63: void lcdWriteText(char *iText);LCD_hd44780u_qy_2004a.c: 64
                                 :  {;LCD_hd44780u_qy_2004a.c: 65:   unsigned char wCharReadingPos = 0;
 14947                           	clrf	(i1lcdWriteText@wCharReadingPos)
 14948  1460  01FD               	line	66
 14949                           ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
 14950                           	goto	i1l6226
 14951  1461  2C78               	
 14952                           i1l249:	
 14953  1462                     	line	68
 14954                           	
 14955                           i1l6222:	
 14956  1462                     ;LCD_hd44780u_qy_2004a.c: 67:   {;LCD_hd44780u_qy_2004a.c: 68:     writeTxtChk(iText[wCh
                                 arReadingPos]);
 14957                           	movlb 0	; select bank0
 14958  1462  0020               	movf	(i1lcdWriteText@iText+1),w
 14959  1463  0821               	movwf	(??i1_lcdWriteText+0)+0+1
 14960  1464  00A3               	movf	(i1lcdWriteText@iText),w
 14961  1465  0820               	movwf	(??i1_lcdWriteText+0)+0
 14962  1466  00A2               	movf	(i1lcdWriteText@wCharReadingPos),w
 14963  1467  087D               	addwf	(??i1_lcdWriteText+0)+0,w
 14964  1468  0722               	movwf	fsr0l
 14965  1469  0084               	movf	(??i1_lcdWriteText+0)+1,w
 14966  146A  0823               	skipnc
 14967  146B  1803               	incf	(??i1_lcdWriteText+0)+1,w
 14968  146C  0A23               	movwf	fsr0h
 14969  146D  0085               
 14970                           	movf	indf0,w ;code access
 14971  146E  0800               	fcall	i1_writeTxtChk
 14972  146F  318B  238D  3194   	line	69
 14973                           	
 14974                           i1l6224:	
 14975  1472                     ;LCD_hd44780u_qy_2004a.c: 69:     wCharReadingPos++;
 14976                           	movlw	low(01h)
 14977  1472  3001               	movlb 0	; select bank0
 14978  1473  0020               	movwf	(??i1_lcdWriteText+0)+0
 14979  1474  00A2               	movf	(??i1_lcdWriteText+0)+0,w
 14980  1475  0822               	addwf	(i1lcdWriteText@wCharReadingPos),f
 14981  1476  07FD               	goto	i1l6226
 14982  1477  2C78               	line	70
 14983                           ;LCD_hd44780u_qy_2004a.c: 70:   }
 14984                           	
 14985                           i1l248:	
 14986  1478                     	line	66
 14987                           	
 14988                           i1l6226:	
 14989  1478                     ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
 14990                           	movlb 0	; select bank0
 14991  1478  0020               	movf	(i1lcdWriteText@iText+1),w
 14992  1479  0821               	movwf	(??i1_lcdWriteText+0)+0+1
 14993  147A  00A3               	movf	(i1lcdWriteText@iText),w
 14994  147B  0820               	movwf	(??i1_lcdWriteText+0)+0
 14995  147C  00A2               	movf	(i1lcdWriteText@wCharReadingPos),w
 14996  147D  087D               	addwf	(??i1_lcdWriteText+0)+0,w
 14997  147E  0722               	movwf	fsr0l
 14998  147F  0084               	movf	(??i1_lcdWriteText+0)+1,w
 14999  1480  0823               	skipnc
 15000  1481  1803               	incf	(??i1_lcdWriteText+0)+1,w
 15001  1482  0A23               	movwf	fsr0h
 15002  1483  0085               
 15003                           	moviw	fsr0++
 15004  1484  0012               	btfss	status,2
 15005  1485  1D03               	goto	u468_21
 15006  1486  2C88               	goto	u468_20
 15007  1487  2C89               u468_21:
 15008  1488                     	goto	i1l6222
 15009  1488  2C62               u468_20:
 15010  1489                     	goto	i1l251
 15011  1489  2C8A               	
 15012                           i1l250:	
 15013  148A                     	line	72
 15014                           	
 15015                           i1l251:	
 15016  148A                     	return
 15017  148A  0008               	opt stack 0
 15018                           GLOBAL	__end_ofi1_lcdWriteText
 15019                           	__end_ofi1_lcdWriteText:
 15020  148B                     	signat	i1_lcdWriteText,89
 15021                           	global	i1_writeTxtChk
 15022                           
 15023 ;; *************** function i1_writeTxtChk *****************
 15024 ;; Defined at:
 15025 ;;		line 125 in file "LCD_hd44780u_qy_2004a.c"
 15026 ;; Parameters:    Size  Location     Type
 15027 ;;  iOpCode         1    wreg     unsigned char 
 15028 ;; Auto vars:     Size  Location     Type
 15029 ;;  iOpCode         1   12[COMMON] unsigned char 
 15030 ;; Return value:  Size  Location     Type
 15031 ;;                  1    wreg      void 
 15032 ;; Registers used:
 15033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15034 ;; Tracked objects:
 15035 ;;		On entry : 0/0
 15036 ;;		On exit  : 0/0
 15037 ;;		Unchanged: 0/0
 15038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15040 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15041 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15042 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15043 ;;Total ram usage:        3 bytes
 15044 ;; Hardware stack levels used:    1
 15045 ;; Hardware stack levels required when called:    3
 15046 ;; This function calls:
 15047 ;;		i1_SetToSendDataToLCD
 15048 ;;		i1_setCursorPosition
 15049 ;;		i1_setData
 15050 ;;		i1_waitLCDBusy
 15051 ;; This function is called by:
 15052 ;;		i1_lcdWriteText
 15053 ;; This function uses a non-reentrant model
 15054 ;;
 15055                           psect	text52,local,class=CODE,delta=2,merge=1,group=0
 15056                           	line	125
 15057                           global __ptext52
 15058                           __ptext52:	;psect for function i1_writeTxtChk
 15059  0B8D                     psect	text52
 15060                           	file	"LCD_hd44780u_qy_2004a.c"
 15061                           	line	125
 15062                           	global	__size_ofi1_writeTxtChk
 15063                           	__size_ofi1_writeTxtChk	equ	__end_ofi1_writeTxtChk-i1_writeTxtChk
 15064  0098                     	
 15065                           i1_writeTxtChk:	
 15066  0B8D                     ;incstack = 0
 15067                           	opt	stack 4
 15068                           ; Regs used in i1_writeTxtChk: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15069                           ;i1writeTxtChk@iOpCode stored from wreg
 15070                           	movwf	(i1writeTxtChk@iOpCode)
 15071  0B8D  00FC               	line	127
 15072                           	
 15073                           i1l5794:	
 15074  0B8E                     ;LCD_hd44780u_qy_2004a.c: 125: void writeTxtChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 26: {;LCD_hd44780u_qy_2004a.c: 127:     if(iOpCode == '\r')
 15075                           		movlw	13
 15076  0B8E  300D               	xorwf	((i1writeTxtChk@iOpCode)),w
 15077  0B8F  067C               	btfss	status,2
 15078  0B90  1D03               	goto	u433_21
 15079  0B91  2B93               	goto	u433_20
 15080  0B92  2B94               u433_21:
 15081  0B93                     	goto	i1l5798
 15082  0B93  2B96               u433_20:
 15083  0B94                     	goto	i1l278
 15084  0B94  2C24               	line	129
 15085                           	
 15086                           i1l5796:	
 15087  0B95                     ;LCD_hd44780u_qy_2004a.c: 128:     {;LCD_hd44780u_qy_2004a.c: 129:       return;
 15088                           	goto	i1l278
 15089  0B95  2C24               	line	130
 15090                           ;LCD_hd44780u_qy_2004a.c: 130:     }
 15091                           	
 15092                           i1l277:	
 15093  0B96                     	line	131
 15094                           	
 15095                           i1l5798:	
 15096  0B96                     ;LCD_hd44780u_qy_2004a.c: 131:   SetToSendDataToLCD();
 15097                           	fcall	i1_SetToSendDataToLCD
 15098  0B96  3192  22D7  318B   	line	132
 15099                           	
 15100                           i1l5800:	
 15101  0B99                     ;LCD_hd44780u_qy_2004a.c: 132:   PORTAbits.RA0 = 1;
 15102                           	movlb 0	; select bank0
 15103  0B99  0020               	bsf	(12),0	;volatile
 15104  0B9A  140C               	line	133
 15105                           	
 15106                           i1l5802:	
 15107  0B9B                     ;LCD_hd44780u_qy_2004a.c: 133:   PORTAbits.RA1 = 0;
 15108                           	bcf	(12),1	;volatile
 15109  0B9B  108C               	line	134
 15110                           	
 15111                           i1l5804:	
 15112  0B9C                     ;LCD_hd44780u_qy_2004a.c: 134:   if(iOpCode == '\n')
 15113                           		movlw	10
 15114  0B9C  300A               	xorwf	((i1writeTxtChk@iOpCode)),w
 15115  0B9D  067C               	btfss	status,2
 15116  0B9E  1D03               	goto	u434_21
 15117  0B9F  2BA1               	goto	u434_20
 15118  0BA0  2BA2               u434_21:
 15119  0BA1                     	goto	i1l5834
 15120  0BA1  2BEF               u434_20:
 15121  0BA2                     	line	136
 15122                           	
 15123                           i1l5806:	
 15124  0BA2                     ;LCD_hd44780u_qy_2004a.c: 135:   {;LCD_hd44780u_qy_2004a.c: 136:    if(mWritingPosition 
                                 < 20)
 15125                           	movlw	low(014h)
 15126  0BA2  3014               	subwf	(_mWritingPosition),w
 15127  0BA3  025A               	skipnc
 15128  0BA4  1803               	goto	u435_21
 15129  0BA5  2BA7               	goto	u435_20
 15130  0BA6  2BA8               u435_21:
 15131  0BA7                     	goto	i1l5810
 15132  0BA7  2BAE               u435_20:
 15133  0BA8                     	line	138
 15134                           	
 15135                           i1l5808:	
 15136  0BA8                     ;LCD_hd44780u_qy_2004a.c: 137:    {;LCD_hd44780u_qy_2004a.c: 138:        setCursorPositi
                                 on(1,0);
 15137                           	clrf	(i1setCursorPosition@iPosition)
 15138  0BA8  01F5               	movlw	low(01h)
 15139  0BA9  3001               	fcall	i1_setCursorPosition
 15140  0BAA  3189  215C  318B   	line	139
 15141                           ;LCD_hd44780u_qy_2004a.c: 139:    }
 15142                           	goto	i1l278
 15143  0BAD  2C24               	line	140
 15144                           ;LCD_hd44780u_qy_2004a.c: 140:    else if(mWritingPosition < 40)
 15145                           	
 15146                           i1l280:	
 15147  0BAE                     	
 15148                           i1l5810:	
 15149  0BAE                     	movlw	low(028h)
 15150  0BAE  3028               	movlb 0	; select bank0
 15151  0BAF  0020               	subwf	(_mWritingPosition),w
 15152  0BB0  025A               	skipnc
 15153  0BB1  1803               	goto	u436_21
 15154  0BB2  2BB4               	goto	u436_20
 15155  0BB3  2BB5               u436_21:
 15156  0BB4                     	goto	i1l5814
 15157  0BB4  2BBB               u436_20:
 15158  0BB5                     	line	142
 15159                           	
 15160                           i1l5812:	
 15161  0BB5                     ;LCD_hd44780u_qy_2004a.c: 141:    {;LCD_hd44780u_qy_2004a.c: 142:        setCursorPositi
                                 on(2,0);
 15162                           	clrf	(i1setCursorPosition@iPosition)
 15163  0BB5  01F5               	movlw	low(02h)
 15164  0BB6  3002               	fcall	i1_setCursorPosition
 15165  0BB7  3189  215C  318B   	line	143
 15166                           ;LCD_hd44780u_qy_2004a.c: 143:    }
 15167                           	goto	i1l278
 15168  0BBA  2C24               	line	144
 15169                           ;LCD_hd44780u_qy_2004a.c: 144:    else if(mWritingPosition < 60)
 15170                           	
 15171                           i1l282:	
 15172  0BBB                     	
 15173                           i1l5814:	
 15174  0BBB                     	movlw	low(03Ch)
 15175  0BBB  303C               	movlb 0	; select bank0
 15176  0BBC  0020               	subwf	(_mWritingPosition),w
 15177  0BBD  025A               	skipnc
 15178  0BBE  1803               	goto	u437_21
 15179  0BBF  2BC1               	goto	u437_20
 15180  0BC0  2BC2               u437_21:
 15181  0BC1                     	goto	i1l5818
 15182  0BC1  2BC8               u437_20:
 15183  0BC2                     	line	146
 15184                           	
 15185                           i1l5816:	
 15186  0BC2                     ;LCD_hd44780u_qy_2004a.c: 145:    {;LCD_hd44780u_qy_2004a.c: 146:        setCursorPositi
                                 on(3,0);
 15187                           	clrf	(i1setCursorPosition@iPosition)
 15188  0BC2  01F5               	movlw	low(03h)
 15189  0BC3  3003               	fcall	i1_setCursorPosition
 15190  0BC4  3189  215C  318B   	line	147
 15191                           ;LCD_hd44780u_qy_2004a.c: 147:    }
 15192                           	goto	i1l278
 15193  0BC7  2C24               	line	148
 15194                           ;LCD_hd44780u_qy_2004a.c: 148:    else
 15195                           	
 15196                           i1l284:	
 15197  0BC8                     	line	150
 15198                           	
 15199                           i1l5818:	
 15200  0BC8                     ;LCD_hd44780u_qy_2004a.c: 149:    {;LCD_hd44780u_qy_2004a.c: 150:        setCursorPositi
                                 on(0,0);
 15201                           	clrf	(i1setCursorPosition@iPosition)
 15202  0BC8  01F5               	movlw	low(0)
 15203  0BC9  3000               	fcall	i1_setCursorPosition
 15204  0BCA  3189  215C  318B   	goto	i1l278
 15205  0BCD  2C24               	line	151
 15206                           ;LCD_hd44780u_qy_2004a.c: 151:    }
 15207                           	
 15208                           i1l285:	
 15209  0BCE                     	goto	i1l278
 15210  0BCE  2C24               	
 15211                           i1l283:	
 15212  0BCF                     	goto	i1l278
 15213  0BCF  2C24               	
 15214                           i1l281:	
 15215  0BD0                     	goto	i1l278
 15216  0BD0  2C24               	line	152
 15217                           	
 15218                           i1l5820:	
 15219  0BD1                     ;LCD_hd44780u_qy_2004a.c: 152:    return;
 15220                           	goto	i1l278
 15221  0BD1  2C24               	line	153
 15222                           ;LCD_hd44780u_qy_2004a.c: 153:   }
 15223                           	
 15224                           i1l279:	
 15225  0BD2                     	line	154
 15226                           ;LCD_hd44780u_qy_2004a.c: 154:   switch(mWritingPosition)
 15227                           	goto	i1l5834
 15228  0BD2  2BEF               	line	156
 15229                           ;LCD_hd44780u_qy_2004a.c: 155:   {;LCD_hd44780u_qy_2004a.c: 156:     case 20:
 15230                           	
 15231                           i1l287:	
 15232  0BD3                     	line	157
 15233                           	
 15234                           i1l5822:	
 15235  0BD3                     ;LCD_hd44780u_qy_2004a.c: 157:       setCursorPosition(1,0);
 15236                           	clrf	(i1setCursorPosition@iPosition)
 15237  0BD3  01F5               	movlw	low(01h)
 15238  0BD4  3001               	fcall	i1_setCursorPosition
 15239  0BD5  3189  215C  318B   	line	158
 15240                           ;LCD_hd44780u_qy_2004a.c: 158:       break;
 15241                           	goto	i1l5836
 15242  0BD8  2C06               	line	159
 15243                           ;LCD_hd44780u_qy_2004a.c: 159:     case 40:
 15244                           	
 15245                           i1l289:	
 15246  0BD9                     	line	160
 15247                           	
 15248                           i1l5824:	
 15249  0BD9                     ;LCD_hd44780u_qy_2004a.c: 160:       setCursorPosition(2,0);
 15250                           	clrf	(i1setCursorPosition@iPosition)
 15251  0BD9  01F5               	movlw	low(02h)
 15252  0BDA  3002               	fcall	i1_setCursorPosition
 15253  0BDB  3189  215C  318B   	line	161
 15254                           ;LCD_hd44780u_qy_2004a.c: 161:       break;
 15255                           	goto	i1l5836
 15256  0BDE  2C06               	line	162
 15257                           ;LCD_hd44780u_qy_2004a.c: 162:     case 60:
 15258                           	
 15259                           i1l290:	
 15260  0BDF                     	line	163
 15261                           	
 15262                           i1l5826:	
 15263  0BDF                     ;LCD_hd44780u_qy_2004a.c: 163:       setCursorPosition(3,0);
 15264                           	clrf	(i1setCursorPosition@iPosition)
 15265  0BDF  01F5               	movlw	low(03h)
 15266  0BE0  3003               	fcall	i1_setCursorPosition
 15267  0BE1  3189  215C  318B   	line	164
 15268                           ;LCD_hd44780u_qy_2004a.c: 164:       break;
 15269                           	goto	i1l5836
 15270  0BE4  2C06               	line	165
 15271                           ;LCD_hd44780u_qy_2004a.c: 165:     case 80:
 15272                           	
 15273                           i1l291:	
 15274  0BE5                     	line	166
 15275                           	
 15276                           i1l5828:	
 15277  0BE5                     ;LCD_hd44780u_qy_2004a.c: 166:       setCursorPosition(0,0);
 15278                           	clrf	(i1setCursorPosition@iPosition)
 15279  0BE5  01F5               	movlw	low(0)
 15280  0BE6  3000               	fcall	i1_setCursorPosition
 15281  0BE7  3189  215C  318B   	line	167
 15282                           	
 15283                           i1l5830:	
 15284  0BEA                     ;LCD_hd44780u_qy_2004a.c: 167:       mWritingPosition = 0;
 15285                           	movlb 0	; select bank0
 15286  0BEA  0020               	clrf	(_mWritingPosition)
 15287  0BEB  01DA               	line	168
 15288                           ;LCD_hd44780u_qy_2004a.c: 168:       break;
 15289                           	goto	i1l5836
 15290  0BEC  2C06               	line	169
 15291                           ;LCD_hd44780u_qy_2004a.c: 169:     default:
 15292                           	
 15293                           i1l292:	
 15294  0BED                     	line	170
 15295                           ;LCD_hd44780u_qy_2004a.c: 170:       break;
 15296                           	goto	i1l5836
 15297  0BED  2C06               	line	171
 15298                           	
 15299                           i1l5832:	
 15300  0BEE                     ;LCD_hd44780u_qy_2004a.c: 171:   }
 15301                           	goto	i1l5836
 15302  0BEE  2C06               	
 15303                           i1l286:	
 15304  0BEF                     	
 15305                           i1l5834:	
 15306  0BEF                     	movlb 0	; select bank0
 15307  0BEF  0020               	movf	(_mWritingPosition),w
 15308  0BF0  085A               	movwf	(??i1_writeTxtChk+0)+0
 15309  0BF1  00FA               	clrf	(??i1_writeTxtChk+0)+0+1
 15310  0BF2  01FB               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 15311                           ; Switch size 1, requested type "space"
 15312                           ; Number of cases is 1, Range of values is 0 to 0
 15313                           ; switch strategies available:
 15314                           ; Name         Instructions Cycles
 15315                           ; simple_byte            4     3 (average)
 15316                           ; direct_byte            8     6 (fixed)
 15317                           ; jumptable            260     6 (fixed)
 15318                           ;	Chosen strategy is simple_byte
 15319                           
 15320                           	movf 1+(??i1_writeTxtChk+0)+0,w
 15321  0BF3  087B               	opt asmopt_push
 15322                           	opt asmopt_off
 15323                           	xorlw	0^0	; case 0
 15324  0BF4  3A00               	skipnz
 15325  0BF5  1903               	goto	i1l6874
 15326  0BF6  2BF8               	goto	i1l5836
 15327  0BF7  2C06               	opt asmopt_pop
 15328                           	
 15329                           i1l6874:	
 15330  0BF8                     ; Switch size 1, requested type "space"
 15331                           ; Number of cases is 4, Range of values is 20 to 80
 15332                           ; switch strategies available:
 15333                           ; Name         Instructions Cycles
 15334                           ; simple_byte           13     7 (average)
 15335                           ; direct_byte          131     9 (fixed)
 15336                           ; jumptable            263     9 (fixed)
 15337                           ;	Chosen strategy is simple_byte
 15338                           
 15339                           	movf 0+(??i1_writeTxtChk+0)+0,w
 15340  0BF8  087A               	opt asmopt_push
 15341                           	opt asmopt_off
 15342                           	xorlw	20^0	; case 20
 15343  0BF9  3A14               	skipnz
 15344  0BFA  1903               	goto	i1l5822
 15345  0BFB  2BD3               	xorlw	40^20	; case 40
 15346  0BFC  3A3C               	skipnz
 15347  0BFD  1903               	goto	i1l5824
 15348  0BFE  2BD9               	xorlw	60^40	; case 60
 15349  0BFF  3A14               	skipnz
 15350  0C00  1903               	goto	i1l5826
 15351  0C01  2BDF               	xorlw	80^60	; case 80
 15352  0C02  3A6C               	skipnz
 15353  0C03  1903               	goto	i1l5828
 15354  0C04  2BE5               	goto	i1l5836
 15355  0C05  2C06               	opt asmopt_pop
 15356                           
 15357                           	
 15358                           i1l288:	
 15359  0C06                     	line	172
 15360                           	
 15361                           i1l5836:	
 15362  0C06                     ;LCD_hd44780u_qy_2004a.c: 172:   waitLCDBusy();
 15363                           	fcall	i1_waitLCDBusy
 15364  0C06  3194  24B6  318B   	line	173
 15365                           	
 15366                           i1l5838:	
 15367  0C09                     ;LCD_hd44780u_qy_2004a.c: 173:   SetToSendDataToLCD();
 15368                           	fcall	i1_SetToSendDataToLCD
 15369  0C09  3192  22D7  318B   	line	174
 15370                           	
 15371                           i1l5840:	
 15372  0C0C                     ;LCD_hd44780u_qy_2004a.c: 174:   PORTAbits.RA0 = 1;
 15373                           	movlb 0	; select bank0
 15374  0C0C  0020               	bsf	(12),0	;volatile
 15375  0C0D  140C               	line	175
 15376                           	
 15377                           i1l5842:	
 15378  0C0E                     ;LCD_hd44780u_qy_2004a.c: 175:   PORTAbits.RA1 = 0;
 15379                           	bcf	(12),1	;volatile
 15380  0C0E  108C               	line	176
 15381                           	
 15382                           i1l5844:	
 15383  0C0F                     ;LCD_hd44780u_qy_2004a.c: 176:   setData(iOpCode >> 4);
 15384                           	movf	(i1writeTxtChk@iOpCode),w
 15385  0C0F  087C               	movwf	(??i1_writeTxtChk+0)+0
 15386  0C10  00FA               	movlw	04h
 15387  0C11  3004               u438_25:
 15388  0C12                     	lsrf	(??i1_writeTxtChk+0)+0,f
 15389  0C12  36FA               	decfsz	wreg,f
 15390  0C13  0B89               	goto	u438_25
 15391  0C14  2C12               	movf	0+(??i1_writeTxtChk+0)+0,w
 15392  0C15  087A               	fcall	i1_setData
 15393  0C16  3195  25A7  318B   	line	177
 15394                           	
 15395                           i1l5846:	
 15396  0C19                     ;LCD_hd44780u_qy_2004a.c: 177:   setData(iOpCode);
 15397                           	movf	(i1writeTxtChk@iOpCode),w
 15398  0C19  087C               	fcall	i1_setData
 15399  0C1A  3195  25A7  318B   	line	178
 15400                           	
 15401                           i1l5848:	
 15402  0C1D                     ;LCD_hd44780u_qy_2004a.c: 178:   _delay((unsigned long)((1)*(16000000/4000000.0)));
 15403                           		opt asmopt_push
 15404                           	opt asmopt_off
 15405                           	nop2	;2 cycle nop
 15406  0C1D  3200               	nop2	;2 cycle nop
 15407  0C1E  3200               	opt asmopt_pop
 15408                           
 15409                           	line	179
 15410                           	
 15411                           i1l5850:	
 15412  0C1F                     ;LCD_hd44780u_qy_2004a.c: 179:   mWritingPosition++;
 15413                           	movlw	low(01h)
 15414  0C1F  3001               	movwf	(??i1_writeTxtChk+0)+0
 15415  0C20  00FA               	movf	(??i1_writeTxtChk+0)+0,w
 15416  0C21  087A               	movlb 0	; select bank0
 15417  0C22  0020               	addwf	(_mWritingPosition),f
 15418  0C23  07DA               	line	180
 15419                           	
 15420                           i1l278:	
 15421  0C24                     	return
 15422  0C24  0008               	opt stack 0
 15423                           GLOBAL	__end_ofi1_writeTxtChk
 15424                           	__end_ofi1_writeTxtChk:
 15425  0C25                     	signat	i1_writeTxtChk,89
 15426                           	global	i1_setCursorPosition
 15427                           
 15428 ;; *************** function i1_setCursorPosition *****************
 15429 ;; Defined at:
 15430 ;;		line 304 in file "LCD_hd44780u_qy_2004a.c"
 15431 ;; Parameters:    Size  Location     Type
 15432 ;;  iLine           1    wreg     unsigned char 
 15433 ;;  iPosition       1    5[COMMON] unsigned char 
 15434 ;; Auto vars:     Size  Location     Type
 15435 ;;  iLine           1    8[COMMON] unsigned char 
 15436 ;;  setCursorPos    1    9[COMMON] unsigned char 
 15437 ;; Return value:  Size  Location     Type
 15438 ;;                  1    wreg      void 
 15439 ;; Registers used:
 15440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15441 ;; Tracked objects:
 15442 ;;		On entry : 0/0
 15443 ;;		On exit  : 0/0
 15444 ;;		Unchanged: 0/0
 15445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15446 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15447 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15449 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15450 ;;Total ram usage:        5 bytes
 15451 ;; Hardware stack levels used:    1
 15452 ;; Hardware stack levels required when called:    2
 15453 ;; This function calls:
 15454 ;;		i1_SetToSendDataToLCD
 15455 ;;		i1_setData
 15456 ;;		i1_waitLCDBusy
 15457 ;; This function is called by:
 15458 ;;		i1_writeTxtChk
 15459 ;; This function uses a non-reentrant model
 15460 ;;
 15461                           psect	text53,local,class=CODE,delta=2,merge=1,group=0
 15462                           	line	304
 15463                           global __ptext53
 15464                           __ptext53:	;psect for function i1_setCursorPosition
 15465  095C                     psect	text53
 15466                           	file	"LCD_hd44780u_qy_2004a.c"
 15467                           	line	304
 15468                           	global	__size_ofi1_setCursorPosition
 15469                           	__size_ofi1_setCursorPosition	equ	__end_ofi1_setCursorPosition-i1_setCursorPosition
 15470  0062                     	
 15471                           i1_setCursorPosition:	
 15472  095C                     ;incstack = 0
 15473                           	opt	stack 4
 15474                           ; Regs used in i1_setCursorPosition: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15475                           ;i1setCursorPosition@iLine stored from wreg
 15476                           	movwf	(i1setCursorPosition@iLine)
 15477  095C  00F8               	line	306
 15478                           	
 15479                           i1l5484:	
 15480  095D                     ;LCD_hd44780u_qy_2004a.c: 304: void setCursorPosition(char iLine, char iPosition);LCD_hd
                                 44780u_qy_2004a.c: 305: {;LCD_hd44780u_qy_2004a.c: 306:   char wLCDIndex=0;
 15481                           	clrf	(i1setCursorPosition@wLCDIndex)
 15482  095D  01F9               	line	308
 15483                           ;LCD_hd44780u_qy_2004a.c: 308:   switch(iLine)
 15484                           	goto	i1l5496
 15485  095E  298F               	line	310
 15486                           ;LCD_hd44780u_qy_2004a.c: 309:   {;LCD_hd44780u_qy_2004a.c: 310:       case 0:
 15487                           	
 15488                           i1l356:	
 15489  095F                     	line	311
 15490                           	
 15491                           i1l5486:	
 15492  095F                     ;LCD_hd44780u_qy_2004a.c: 311:           wLCDIndex = 0x00 + iPosition;
 15493                           	movf	(i1setCursorPosition@iPosition),w
 15494  095F  0875               	movwf	(??i1_setCursorPosition+0)+0
 15495  0960  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 15496  0961  0876               	movwf	(i1setCursorPosition@wLCDIndex)
 15497  0962  00F9               	line	312
 15498                           ;LCD_hd44780u_qy_2004a.c: 312:           mWritingPosition = iPosition;
 15499                           	movf	(i1setCursorPosition@iPosition),w
 15500  0963  0875               	movwf	(??i1_setCursorPosition+0)+0
 15501  0964  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 15502  0965  0876               	movlb 0	; select bank0
 15503  0966  0020               	movwf	(_mWritingPosition)
 15504  0967  00DA               	line	313
 15505                           ;LCD_hd44780u_qy_2004a.c: 313:           break;
 15506                           	goto	i1l5498
 15507  0968  29A5               	line	314
 15508                           ;LCD_hd44780u_qy_2004a.c: 314:       case 1:
 15509                           	
 15510                           i1l358:	
 15511  0969                     	line	315
 15512                           	
 15513                           i1l5488:	
 15514  0969                     ;LCD_hd44780u_qy_2004a.c: 315:           wLCDIndex = 0x40 + iPosition;
 15515                           	movf	(i1setCursorPosition@iPosition),w
 15516  0969  0875               	addlw	040h
 15517  096A  3E40               	movwf	(??i1_setCursorPosition+0)+0
 15518  096B  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 15519  096C  0876               	movwf	(i1setCursorPosition@wLCDIndex)
 15520  096D  00F9               	line	316
 15521                           ;LCD_hd44780u_qy_2004a.c: 316:           mWritingPosition = 20 + iPosition;
 15522                           	movf	(i1setCursorPosition@iPosition),w
 15523  096E  0875               	addlw	014h
 15524  096F  3E14               	movwf	(??i1_setCursorPosition+0)+0
 15525  0970  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 15526  0971  0876               	movlb 0	; select bank0
 15527  0972  0020               	movwf	(_mWritingPosition)
 15528  0973  00DA               	line	317
 15529                           ;LCD_hd44780u_qy_2004a.c: 317:           break;
 15530                           	goto	i1l5498
 15531  0974  29A5               	line	318
 15532                           ;LCD_hd44780u_qy_2004a.c: 318:       case 2:
 15533                           	
 15534                           i1l359:	
 15535  0975                     	line	319
 15536                           	
 15537                           i1l5490:	
 15538  0975                     ;LCD_hd44780u_qy_2004a.c: 319:           wLCDIndex = 0x14 + iPosition;
 15539                           	movf	(i1setCursorPosition@iPosition),w
 15540  0975  0875               	addlw	014h
 15541  0976  3E14               	movwf	(??i1_setCursorPosition+0)+0
 15542  0977  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 15543  0978  0876               	movwf	(i1setCursorPosition@wLCDIndex)
 15544  0979  00F9               	line	320
 15545                           ;LCD_hd44780u_qy_2004a.c: 320:           mWritingPosition = 40 + iPosition;
 15546                           	movf	(i1setCursorPosition@iPosition),w
 15547  097A  0875               	addlw	028h
 15548  097B  3E28               	movwf	(??i1_setCursorPosition+0)+0
 15549  097C  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 15550  097D  0876               	movlb 0	; select bank0
 15551  097E  0020               	movwf	(_mWritingPosition)
 15552  097F  00DA               	line	321
 15553                           ;LCD_hd44780u_qy_2004a.c: 321:           break;
 15554                           	goto	i1l5498
 15555  0980  29A5               	line	322
 15556                           ;LCD_hd44780u_qy_2004a.c: 322:       case 3:
 15557                           	
 15558                           i1l360:	
 15559  0981                     	line	323
 15560                           	
 15561                           i1l5492:	
 15562  0981                     ;LCD_hd44780u_qy_2004a.c: 323:           wLCDIndex = 0x54 + iPosition;
 15563                           	movf	(i1setCursorPosition@iPosition),w
 15564  0981  0875               	addlw	054h
 15565  0982  3E54               	movwf	(??i1_setCursorPosition+0)+0
 15566  0983  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 15567  0984  0876               	movwf	(i1setCursorPosition@wLCDIndex)
 15568  0985  00F9               	line	324
 15569                           ;LCD_hd44780u_qy_2004a.c: 324:           mWritingPosition = 60 + iPosition;
 15570                           	movf	(i1setCursorPosition@iPosition),w
 15571  0986  0875               	addlw	03Ch
 15572  0987  3E3C               	movwf	(??i1_setCursorPosition+0)+0
 15573  0988  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 15574  0989  0876               	movlb 0	; select bank0
 15575  098A  0020               	movwf	(_mWritingPosition)
 15576  098B  00DA               	line	325
 15577                           ;LCD_hd44780u_qy_2004a.c: 325:           break;
 15578                           	goto	i1l5498
 15579  098C  29A5               	line	326
 15580                           ;LCD_hd44780u_qy_2004a.c: 326:       default:
 15581                           	
 15582                           i1l361:	
 15583  098D                     	line	327
 15584                           ;LCD_hd44780u_qy_2004a.c: 327:       break;
 15585                           	goto	i1l5498
 15586  098D  29A5               	line	328
 15587                           	
 15588                           i1l5494:	
 15589  098E                     ;LCD_hd44780u_qy_2004a.c: 328:   }
 15590                           	goto	i1l5498
 15591  098E  29A5               	
 15592                           i1l355:	
 15593  098F                     	
 15594                           i1l5496:	
 15595  098F                     	movf	(i1setCursorPosition@iLine),w
 15596  098F  0878               	movwf	(??i1_setCursorPosition+0)+0
 15597  0990  00F6               	clrf	(??i1_setCursorPosition+0)+0+1
 15598  0991  01F7               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 15599                           ; Switch size 1, requested type "space"
 15600                           ; Number of cases is 1, Range of values is 0 to 0
 15601                           ; switch strategies available:
 15602                           ; Name         Instructions Cycles
 15603                           ; simple_byte            4     3 (average)
 15604                           ; direct_byte            8     6 (fixed)
 15605                           ; jumptable            260     6 (fixed)
 15606                           ;	Chosen strategy is simple_byte
 15607                           
 15608                           	movf 1+(??i1_setCursorPosition+0)+0,w
 15609  0992  0877               	opt asmopt_push
 15610                           	opt asmopt_off
 15611                           	xorlw	0^0	; case 0
 15612  0993  3A00               	skipnz
 15613  0994  1903               	goto	i1l6876
 15614  0995  2997               	goto	i1l5498
 15615  0996  29A5               	opt asmopt_pop
 15616                           	
 15617                           i1l6876:	
 15618  0997                     ; Switch size 1, requested type "space"
 15619                           ; Number of cases is 4, Range of values is 0 to 3
 15620                           ; switch strategies available:
 15621                           ; Name         Instructions Cycles
 15622                           ; simple_byte           13     7 (average)
 15623                           ; direct_byte           14     6 (fixed)
 15624                           ; jumptable            260     6 (fixed)
 15625                           ;	Chosen strategy is simple_byte
 15626                           
 15627                           	movf 0+(??i1_setCursorPosition+0)+0,w
 15628  0997  0876               	opt asmopt_push
 15629                           	opt asmopt_off
 15630                           	xorlw	0^0	; case 0
 15631  0998  3A00               	skipnz
 15632  0999  1903               	goto	i1l5486
 15633  099A  295F               	xorlw	1^0	; case 1
 15634  099B  3A01               	skipnz
 15635  099C  1903               	goto	i1l5488
 15636  099D  2969               	xorlw	2^1	; case 2
 15637  099E  3A03               	skipnz
 15638  099F  1903               	goto	i1l5490
 15639  09A0  2975               	xorlw	3^2	; case 3
 15640  09A1  3A01               	skipnz
 15641  09A2  1903               	goto	i1l5492
 15642  09A3  2981               	goto	i1l5498
 15643  09A4  29A5               	opt asmopt_pop
 15644                           
 15645                           	
 15646                           i1l357:	
 15647  09A5                     	line	330
 15648                           	
 15649                           i1l5498:	
 15650  09A5                     ;LCD_hd44780u_qy_2004a.c: 330:   waitLCDBusy();
 15651                           	fcall	i1_waitLCDBusy
 15652  09A5  3194  24B6  3189   	line	332
 15653                           	
 15654                           i1l5500:	
 15655  09A8                     ;LCD_hd44780u_qy_2004a.c: 332:   SetToSendDataToLCD();
 15656                           	fcall	i1_SetToSendDataToLCD
 15657  09A8  3192  22D7  3189   	line	333
 15658                           	
 15659                           i1l5502:	
 15660  09AB                     ;LCD_hd44780u_qy_2004a.c: 333:   PORTAbits.RA0 = 0;
 15661                           	movlb 0	; select bank0
 15662  09AB  0020               	bcf	(12),0	;volatile
 15663  09AC  100C               	line	334
 15664                           	
 15665                           i1l5504:	
 15666  09AD                     ;LCD_hd44780u_qy_2004a.c: 334:   PORTAbits.RA1 = 0;
 15667                           	bcf	(12),1	;volatile
 15668  09AD  108C               	line	335
 15669                           	
 15670                           i1l5506:	
 15671  09AE                     ;LCD_hd44780u_qy_2004a.c: 335:   setData((wLCDIndex >> 4) | 0x8 );
 15672                           	movf	(i1setCursorPosition@wLCDIndex),w
 15673  09AE  0879               	movwf	(??i1_setCursorPosition+0)+0
 15674  09AF  00F6               	movlw	04h
 15675  09B0  3004               u402_25:
 15676  09B1                     	lsrf	(??i1_setCursorPosition+0)+0,f
 15677  09B1  36F6               	decfsz	wreg,f
 15678  09B2  0B89               	goto	u402_25
 15679  09B3  29B1               	movf	0+(??i1_setCursorPosition+0)+0,w
 15680  09B4  0876               	iorlw	08h
 15681  09B5  3808               	fcall	i1_setData
 15682  09B6  3195  25A7  3189   	line	336
 15683                           	
 15684                           i1l5508:	
 15685  09B9                     ;LCD_hd44780u_qy_2004a.c: 336:   setData(wLCDIndex);
 15686                           	movf	(i1setCursorPosition@wLCDIndex),w
 15687  09B9  0879               	fcall	i1_setData
 15688  09BA  3195  25A7  3189   	line	338
 15689                           	
 15690                           i1l362:	
 15691  09BD                     	return
 15692  09BD  0008               	opt stack 0
 15693                           GLOBAL	__end_ofi1_setCursorPosition
 15694                           	__end_ofi1_setCursorPosition:
 15695  09BE                     	signat	i1_setCursorPosition,89
 15696                           	global	i1_waitLCDBusy
 15697                           
 15698 ;; *************** function i1_waitLCDBusy *****************
 15699 ;; Defined at:
 15700 ;;		line 212 in file "LCD_hd44780u_qy_2004a.c"
 15701 ;; Parameters:    Size  Location     Type
 15702 ;;		None
 15703 ;; Auto vars:     Size  Location     Type
 15704 ;;  waitLCDBusy     2    3[COMMON] int 
 15705 ;; Return value:  Size  Location     Type
 15706 ;;                  1    wreg      void 
 15707 ;; Registers used:
 15708 ;;		wreg, status,2, status,0, pclath, cstack
 15709 ;; Tracked objects:
 15710 ;;		On entry : 0/0
 15711 ;;		On exit  : 0/0
 15712 ;;		Unchanged: 0/0
 15713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15715 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15716 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15717 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15718 ;;Total ram usage:        5 bytes
 15719 ;; Hardware stack levels used:    1
 15720 ;; Hardware stack levels required when called:    1
 15721 ;; This function calls:
 15722 ;;		i1_SetToReadDataFromLCD
 15723 ;; This function is called by:
 15724 ;;		i1_writeTxtChk
 15725 ;;		i1_setCursorPosition
 15726 ;; This function uses a non-reentrant model
 15727 ;;
 15728                           psect	text54,local,class=CODE,delta=2,merge=1,group=0
 15729                           	line	212
 15730                           global __ptext54
 15731                           __ptext54:	;psect for function i1_waitLCDBusy
 15732  14B6                     psect	text54
 15733                           	file	"LCD_hd44780u_qy_2004a.c"
 15734                           	line	212
 15735                           	global	__size_ofi1_waitLCDBusy
 15736                           	__size_ofi1_waitLCDBusy	equ	__end_ofi1_waitLCDBusy-i1_waitLCDBusy
 15737  002C                     	
 15738                           i1_waitLCDBusy:	
 15739  14B6                     ;incstack = 0
 15740                           	opt	stack 5
 15741                           ; Regs used in i1_waitLCDBusy: [wreg+status,2+status,0+pclath+cstack]
 15742                           	line	214
 15743                           	
 15744                           i1l5272:	
 15745  14B6                     ;LCD_hd44780u_qy_2004a.c: 214:   PORTAbits.RA0 = 0;
 15746                           	movlb 0	; select bank0
 15747  14B6  0020               	bcf	(12),0	;volatile
 15748  14B7  100C               	line	215
 15749                           ;LCD_hd44780u_qy_2004a.c: 215:   PORTAbits.RA1 = 1;
 15750                           	bsf	(12),1	;volatile
 15751  14B8  148C               	line	217
 15752                           	
 15753                           i1l5274:	
 15754  14B9                     ;LCD_hd44780u_qy_2004a.c: 217:   SetToReadDataFromLCD();
 15755                           	fcall	i1_SetToReadDataFromLCD
 15756  14B9  3192  22DD  3194   	line	219
 15757                           	
 15758                           i1l5276:	
 15759  14BC                     ;LCD_hd44780u_qy_2004a.c: 219:   int busyFlag = 1;
 15760                           	movlw	01h
 15761  14BC  3001               	movwf	(i1waitLCDBusy@busyFlag)
 15762  14BD  00F3               	movlw	0
 15763  14BE  3000               	movwf	((i1waitLCDBusy@busyFlag))+1
 15764  14BF  00F4               	line	220
 15765                           ;LCD_hd44780u_qy_2004a.c: 220:   while(busyFlag == 1)
 15766                           	goto	i1l307
 15767  14C0  2CDA               	
 15768                           i1l308:	
 15769  14C1                     	line	223
 15770                           ;LCD_hd44780u_qy_2004a.c: 221:   {;LCD_hd44780u_qy_2004a.c: 223:     PORTAbits.RA2 = 1;

 15771                           	movlb 0	; select bank0
 15772  14C1  0020               	bsf	(12),2	;volatile
 15773  14C2  150C               	line	224
 15774                           ;LCD_hd44780u_qy_2004a.c: 224:     _delay((unsigned long)((1)*(16000000/4000000.0)));
 15775                           		opt asmopt_push
 15776                           	opt asmopt_off
 15777                           	nop2	;2 cycle nop
 15778  14C3  3200               	nop2	;2 cycle nop
 15779  14C4  3200               	opt asmopt_pop
 15780                           
 15781                           	line	225
 15782                           	
 15783                           i1l5278:	
 15784  14C5                     ;LCD_hd44780u_qy_2004a.c: 225:     busyFlag = PORTAbits.RA3;
 15785                           	movlb 0	; select bank0
 15786  14C5  0020               	rrf	(12),w	;volatile
 15787  14C6  0C0C               	movwf	(??i1_waitLCDBusy+0)+0
 15788  14C7  00F0               	rrf	(??i1_waitLCDBusy+0)+0,f
 15789  14C8  0CF0               	rrf	(??i1_waitLCDBusy+0)+0,w
 15790  14C9  0C70               	andlw	(1<<1)-1
 15791  14CA  3901               	movwf	(??i1_waitLCDBusy+1)+0
 15792  14CB  00F1               	clrf	(??i1_waitLCDBusy+1)+0+1
 15793  14CC  01F2               	movf	0+(??i1_waitLCDBusy+1)+0,w
 15794  14CD  0871               	movwf	(i1waitLCDBusy@busyFlag)
 15795  14CE  00F3               	movf	1+(??i1_waitLCDBusy+1)+0,w
 15796  14CF  0872               	movwf	(i1waitLCDBusy@busyFlag+1)
 15797  14D0  00F4               	line	226
 15798                           	
 15799                           i1l5280:	
 15800  14D1                     ;LCD_hd44780u_qy_2004a.c: 226:     PORTAbits.RA2 = 0;
 15801                           	bcf	(12),2	;volatile
 15802  14D1  110C               	line	227
 15803                           	
 15804                           i1l5282:	
 15805  14D2                     ;LCD_hd44780u_qy_2004a.c: 227:     _delay((unsigned long)((2)*(16000000/4000000.0)));
 15806                           		opt asmopt_push
 15807                           	opt asmopt_off
 15808                           	nop2	;2 cycle nop
 15809  14D2  3200               	nop2	;2 cycle nop
 15810  14D3  3200               	nop2	;2 cycle nop
 15811  14D4  3200               	nop2	;2 cycle nop
 15812  14D5  3200               	opt asmopt_pop
 15813                           
 15814                           	line	229
 15815                           	
 15816                           i1l5284:	
 15817  14D6                     ;LCD_hd44780u_qy_2004a.c: 229:     PORTAbits.RA2 = 1;
 15818                           	movlb 0	; select bank0
 15819  14D6  0020               	bsf	(12),2	;volatile
 15820  14D7  150C               	line	230
 15821                           	
 15822                           i1l5286:	
 15823  14D8                     ;LCD_hd44780u_qy_2004a.c: 230:     _delay((unsigned long)((1)*(16000000/4000000.0)));
 15824                           		opt asmopt_push
 15825                           	opt asmopt_off
 15826                           	nop2	;2 cycle nop
 15827  14D8  3200               	nop2	;2 cycle nop
 15828  14D9  3200               	opt asmopt_pop
 15829                           
 15830                           	line	231
 15831                           ;LCD_hd44780u_qy_2004a.c: 231:   }
 15832                           	
 15833                           i1l307:	
 15834  14DA                     	line	220
 15835                           ;LCD_hd44780u_qy_2004a.c: 220:   while(busyFlag == 1)
 15836                           		decf	((i1waitLCDBusy@busyFlag)),w
 15837  14DA  0373               iorwf	((i1waitLCDBusy@busyFlag+1)),w
 15838  14DB  0474               	btfsc	status,2
 15839  14DC  1903               	goto	u369_21
 15840  14DD  2CDF               	goto	u369_20
 15841  14DE  2CE0               u369_21:
 15842  14DF                     	goto	i1l308
 15843  14DF  2CC1               u369_20:
 15844  14E0                     	goto	i1l310
 15845  14E0  2CE1               	
 15846                           i1l309:	
 15847  14E1                     	line	232
 15848                           	
 15849                           i1l310:	
 15850  14E1                     	return
 15851  14E1  0008               	opt stack 0
 15852                           GLOBAL	__end_ofi1_waitLCDBusy
 15853                           	__end_ofi1_waitLCDBusy:
 15854  14E2                     	signat	i1_waitLCDBusy,89
 15855                           	global	i1_SetToReadDataFromLCD
 15856                           
 15857 ;; *************** function i1_SetToReadDataFromLCD *****************
 15858 ;; Defined at:
 15859 ;;		line 197 in file "LCD_hd44780u_qy_2004a.c"
 15860 ;; Parameters:    Size  Location     Type
 15861 ;;		None
 15862 ;; Auto vars:     Size  Location     Type
 15863 ;;		None
 15864 ;; Return value:  Size  Location     Type
 15865 ;;                  1    wreg      void 
 15866 ;; Registers used:
 15867 ;;		None
 15868 ;; Tracked objects:
 15869 ;;		On entry : 0/0
 15870 ;;		On exit  : 0/0
 15871 ;;		Unchanged: 0/0
 15872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15877 ;;Total ram usage:        0 bytes
 15878 ;; Hardware stack levels used:    1
 15879 ;; This function calls:
 15880 ;;		Nothing
 15881 ;; This function is called by:
 15882 ;;		i1_waitLCDBusy
 15883 ;; This function uses a non-reentrant model
 15884 ;;
 15885                           psect	text55,local,class=CODE,delta=2,merge=1,group=0
 15886                           	line	197
 15887                           global __ptext55
 15888                           __ptext55:	;psect for function i1_SetToReadDataFromLCD
 15889  12DD                     psect	text55
 15890                           	file	"LCD_hd44780u_qy_2004a.c"
 15891                           	line	197
 15892                           	global	__size_ofi1_SetToReadDataFromLCD
 15893                           	__size_ofi1_SetToReadDataFromLCD	equ	__end_ofi1_SetToReadDataFromLCD-i1_SetToReadDataFr
                                 omLCD
 15894  0006                     	
 15895                           i1_SetToReadDataFromLCD:	
 15896  12DD                     ;incstack = 0
 15897                           	opt	stack 5
 15898                           ; Regs used in i1_SetToReadDataFromLCD: []
 15899                           	line	199
 15900                           	
 15901                           i1l5144:	
 15902  12DD                     ;LCD_hd44780u_qy_2004a.c: 199:   TRISAbits.TRISA3 = 1;
 15903                           	movlb 1	; select bank1
 15904  12DD  0021               	bsf	(140)^080h,3	;volatile
 15905  12DE  158C               	line	200
 15906                           ;LCD_hd44780u_qy_2004a.c: 200:   TRISCbits.TRISC2 = 1;
 15907                           	bsf	(142)^080h,2	;volatile
 15908  12DF  150E               	line	201
 15909                           ;LCD_hd44780u_qy_2004a.c: 201:   TRISCbits.TRISC1 = 1;
 15910                           	bsf	(142)^080h,1	;volatile
 15911  12E0  148E               	line	202
 15912                           ;LCD_hd44780u_qy_2004a.c: 202:   TRISCbits.TRISC0 = 1;
 15913                           	bsf	(142)^080h,0	;volatile
 15914  12E1  140E               	line	203
 15915                           	
 15916                           i1l301:	
 15917  12E2                     	return
 15918  12E2  0008               	opt stack 0
 15919                           GLOBAL	__end_ofi1_SetToReadDataFromLCD
 15920                           	__end_ofi1_SetToReadDataFromLCD:
 15921  12E3                     	signat	i1_SetToReadDataFromLCD,89
 15922                           	global	i1_setData
 15923                           
 15924 ;; *************** function i1_setData *****************
 15925 ;; Defined at:
 15926 ;;		line 113 in file "LCD_hd44780u_qy_2004a.c"
 15927 ;; Parameters:    Size  Location     Type
 15928 ;;  iValue          1    wreg     unsigned char 
 15929 ;; Auto vars:     Size  Location     Type
 15930 ;;  iValue          1    2[COMMON] unsigned char 
 15931 ;; Return value:  Size  Location     Type
 15932 ;;                  1    wreg      void 
 15933 ;; Registers used:
 15934 ;;		wreg, status,2, status,0
 15935 ;; Tracked objects:
 15936 ;;		On entry : 0/0
 15937 ;;		On exit  : 0/0
 15938 ;;		Unchanged: 0/0
 15939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15942 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15943 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15944 ;;Total ram usage:        3 bytes
 15945 ;; Hardware stack levels used:    1
 15946 ;; This function calls:
 15947 ;;		Nothing
 15948 ;; This function is called by:
 15949 ;;		i1_writeTxtChk
 15950 ;;		i1_setCursorPosition
 15951 ;; This function uses a non-reentrant model
 15952 ;;
 15953                           psect	text56,local,class=CODE,delta=2,merge=1,group=0
 15954                           	line	113
 15955                           global __ptext56
 15956                           __ptext56:	;psect for function i1_setData
 15957  15A7                     psect	text56
 15958                           	file	"LCD_hd44780u_qy_2004a.c"
 15959                           	line	113
 15960                           	global	__size_ofi1_setData
 15961                           	__size_ofi1_setData	equ	__end_ofi1_setData-i1_setData
 15962  003C                     	
 15963                           i1_setData:	
 15964  15A7                     ;incstack = 0
 15965                           	opt	stack 6
 15966                           ; Regs used in i1_setData: [wreg+status,2+status,0]
 15967                           ;i1setData@iValue stored from wreg
 15968                           	movwf	(i1setData@iValue)
 15969  15A7  00F2               	line	115
 15970                           	
 15971                           i1l5260:	
 15972  15A8                     ;LCD_hd44780u_qy_2004a.c: 113: void setData(char iValue);LCD_hd44780u_qy_2004a.c: 114: {
                                 ;LCD_hd44780u_qy_2004a.c: 115:   PORTAbits.RA2 = 1;
 15973                           	movlb 0	; select bank0
 15974  15A8  0020               	bsf	(12),2	;volatile
 15975  15A9  150C               	line	116
 15976                           	
 15977                           i1l5262:	
 15978  15AA                     ;LCD_hd44780u_qy_2004a.c: 116:   PORTAbits.RA3 = (iValue & 0x8) >> 3;
 15979                           	movf	(i1setData@iValue),w
 15980  15AA  0872               	movwf	(??i1_setData+0)+0
 15981  15AB  00F0               	movlw	03h
 15982  15AC  3003               u367_25:
 15983  15AD                     	lsrf	(??i1_setData+0)+0,f
 15984  15AD  36F0               	decfsz	wreg,f
 15985  15AE  0B89               	goto	u367_25
 15986  15AF  2DAD               	movf	0+(??i1_setData+0)+0,w
 15987  15B0  0870               	andlw	01h
 15988  15B1  3901               	movwf	(??i1_setData+1)+0
 15989  15B2  00F1               	rlf	(??i1_setData+1)+0,f
 15990  15B3  0DF1               	rlf	(??i1_setData+1)+0,f
 15991  15B4  0DF1               	rlf	(??i1_setData+1)+0,f
 15992  15B5  0DF1               	movf	(12),w	;volatile
 15993  15B6  080C               	xorwf	(??i1_setData+1)+0,w
 15994  15B7  0671               	andlw	not (((1<<1)-1)<<3)
 15995  15B8  39F7               	xorwf	(??i1_setData+1)+0,w
 15996  15B9  0671               	movwf	(12)	;volatile
 15997  15BA  008C               	line	117
 15998                           ;LCD_hd44780u_qy_2004a.c: 117:   PORTCbits.RC2 = (iValue & 0x4) >> 2;
 15999                           	movf	(i1setData@iValue),w
 16000  15BB  0872               	movwf	(??i1_setData+0)+0
 16001  15BC  00F0               	movlw	02h
 16002  15BD  3002               u368_25:
 16003  15BE                     	lsrf	(??i1_setData+0)+0,f
 16004  15BE  36F0               	decfsz	wreg,f
 16005  15BF  0B89               	goto	u368_25
 16006  15C0  2DBE               	movf	0+(??i1_setData+0)+0,w
 16007  15C1  0870               	andlw	01h
 16008  15C2  3901               	movwf	(??i1_setData+1)+0
 16009  15C3  00F1               	rlf	(??i1_setData+1)+0,f
 16010  15C4  0DF1               	rlf	(??i1_setData+1)+0,f
 16011  15C5  0DF1               	movf	(14),w	;volatile
 16012  15C6  080E               	xorwf	(??i1_setData+1)+0,w
 16013  15C7  0671               	andlw	not (((1<<1)-1)<<2)
 16014  15C8  39FB               	xorwf	(??i1_setData+1)+0,w
 16015  15C9  0671               	movwf	(14)	;volatile
 16016  15CA  008E               	line	118
 16017                           ;LCD_hd44780u_qy_2004a.c: 118:   PORTCbits.RC1 = (iValue & 0x2) >> 1;
 16018                           	lsrf	(i1setData@iValue),w
 16019  15CB  3672               	andlw	01h
 16020  15CC  3901               	movwf	(??i1_setData+0)+0
 16021  15CD  00F0               	rlf	(??i1_setData+0)+0,f
 16022  15CE  0DF0               	movf	(14),w	;volatile
 16023  15CF  080E               	xorwf	(??i1_setData+0)+0,w
 16024  15D0  0670               	andlw	not (((1<<1)-1)<<1)
 16025  15D1  39FD               	xorwf	(??i1_setData+0)+0,w
 16026  15D2  0670               	movwf	(14)	;volatile
 16027  15D3  008E               	line	119
 16028                           ;LCD_hd44780u_qy_2004a.c: 119:   PORTCbits.RC0 = (iValue & 0x1) ;
 16029                           	movlw	low(01h)
 16030  15D4  3001               	andwf	(i1setData@iValue),w
 16031  15D5  0572               	movwf	(??i1_setData+0)+0
 16032  15D6  00F0               	movf	(14),w	;volatile
 16033  15D7  080E               	xorwf	0+(??i1_setData+0)+0,w
 16034  15D8  0670               	andlw	not ((1<<1)-1)
 16035  15D9  39FE               	xorwf	0+(??i1_setData+0)+0,w
 16036  15DA  0670               	movwf	(14)	;volatile
 16037  15DB  008E               	line	120
 16038                           	
 16039                           i1l5264:	
 16040  15DC                     ;LCD_hd44780u_qy_2004a.c: 120:   _delay((unsigned long)((1)*(16000000/4000000.0)));
 16041                           		opt asmopt_push
 16042                           	opt asmopt_off
 16043                           	nop2	;2 cycle nop
 16044  15DC  3200               	nop2	;2 cycle nop
 16045  15DD  3200               	opt asmopt_pop
 16046                           
 16047                           	line	121
 16048                           	
 16049                           i1l5266:	
 16050  15DE                     ;LCD_hd44780u_qy_2004a.c: 121:   PORTAbits.RA2 = 0;
 16051                           	movlb 0	; select bank0
 16052  15DE  0020               	bcf	(12),2	;volatile
 16053  15DF  110C               	line	122
 16054                           	
 16055                           i1l5268:	
 16056  15E0                     ;LCD_hd44780u_qy_2004a.c: 122:   _delay((unsigned long)((1)*(16000000/4000000.0)));
 16057                           		opt asmopt_push
 16058                           	opt asmopt_off
 16059                           	nop2	;2 cycle nop
 16060  15E0  3200               	nop2	;2 cycle nop
 16061  15E1  3200               	opt asmopt_pop
 16062                           
 16063                           	line	123
 16064                           	
 16065                           i1l274:	
 16066  15E2                     	return
 16067  15E2  0008               	opt stack 0
 16068                           GLOBAL	__end_ofi1_setData
 16069                           	__end_ofi1_setData:
 16070  15E3                     	signat	i1_setData,89
 16071                           	global	i1_SetToSendDataToLCD
 16072                           
 16073 ;; *************** function i1_SetToSendDataToLCD *****************
 16074 ;; Defined at:
 16075 ;;		line 204 in file "LCD_hd44780u_qy_2004a.c"
 16076 ;; Parameters:    Size  Location     Type
 16077 ;;		None
 16078 ;; Auto vars:     Size  Location     Type
 16079 ;;		None
 16080 ;; Return value:  Size  Location     Type
 16081 ;;                  1    wreg      void 
 16082 ;; Registers used:
 16083 ;;		None
 16084 ;; Tracked objects:
 16085 ;;		On entry : 0/0
 16086 ;;		On exit  : 0/0
 16087 ;;		Unchanged: 0/0
 16088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16093 ;;Total ram usage:        0 bytes
 16094 ;; Hardware stack levels used:    1
 16095 ;; This function calls:
 16096 ;;		Nothing
 16097 ;; This function is called by:
 16098 ;;		i1_writeTxtChk
 16099 ;;		i1_setCursorPosition
 16100 ;; This function uses a non-reentrant model
 16101 ;;
 16102                           psect	text57,local,class=CODE,delta=2,merge=1,group=0
 16103                           	line	204
 16104                           global __ptext57
 16105                           __ptext57:	;psect for function i1_SetToSendDataToLCD
 16106  12D7                     psect	text57
 16107                           	file	"LCD_hd44780u_qy_2004a.c"
 16108                           	line	204
 16109                           	global	__size_ofi1_SetToSendDataToLCD
 16110                           	__size_ofi1_SetToSendDataToLCD	equ	__end_ofi1_SetToSendDataToLCD-i1_SetToSendDataToLCD

 16111  0006                     	
 16112                           i1_SetToSendDataToLCD:	
 16113  12D7                     ;incstack = 0
 16114                           	opt	stack 5
 16115                           ; Regs used in i1_SetToSendDataToLCD: []
 16116                           	line	206
 16117                           	
 16118                           i1l5270:	
 16119  12D7                     ;LCD_hd44780u_qy_2004a.c: 206:   TRISAbits.TRISA3 = 0;;
 16120                           	movlb 1	; select bank1
 16121  12D7  0021               	bcf	(140)^080h,3	;volatile
 16122  12D8  118C               	line	207
 16123                           ;LCD_hd44780u_qy_2004a.c: 207:   TRISCbits.TRISC2 = 0;;
 16124                           	bcf	(142)^080h,2	;volatile
 16125  12D9  110E               	line	208
 16126                           ;LCD_hd44780u_qy_2004a.c: 208:   TRISCbits.TRISC1 = 0;;
 16127                           	bcf	(142)^080h,1	;volatile
 16128  12DA  108E               	line	209
 16129                           ;LCD_hd44780u_qy_2004a.c: 209:   TRISCbits.TRISC0 = 0;;
 16130                           	bcf	(142)^080h,0	;volatile
 16131  12DB  100E               	line	210
 16132                           	
 16133                           i1l304:	
 16134  12DC                     	return
 16135  12DC  0008               	opt stack 0
 16136                           GLOBAL	__end_ofi1_SetToSendDataToLCD
 16137                           	__end_ofi1_SetToSendDataToLCD:
 16138  12DD                     	signat	i1_SetToSendDataToLCD,89
 16139                           	global	_TempUpdateRequest
 16140                           
 16141 ;; *************** function _TempUpdateRequest *****************
 16142 ;; Defined at:
 16143 ;;		line 80 in file "EM1812.c"
 16144 ;; Parameters:    Size  Location     Type
 16145 ;;		None
 16146 ;; Auto vars:     Size  Location     Type
 16147 ;;		None
 16148 ;; Return value:  Size  Location     Type
 16149 ;;                  2   76[None  ] int 
 16150 ;; Registers used:
 16151 ;;		wreg, status,2, status,0
 16152 ;; Tracked objects:
 16153 ;;		On entry : 0/0
 16154 ;;		On exit  : 0/0
 16155 ;;		Unchanged: 0/0
 16156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16161 ;;Total ram usage:        0 bytes
 16162 ;; Hardware stack levels used:    1
 16163 ;; This function calls:
 16164 ;;		Nothing
 16165 ;; This function is called by:
 16166 ;;		_myint
 16167 ;; This function uses a non-reentrant model
 16168 ;;
 16169                           psect	text58,local,class=CODE,delta=2,merge=1,group=0
 16170                           	file	"EM1812.c"
 16171                           	line	80
 16172                           global __ptext58
 16173                           __ptext58:	;psect for function _TempUpdateRequest
 16174  134C                     psect	text58
 16175                           	file	"EM1812.c"
 16176                           	line	80
 16177                           	global	__size_of_TempUpdateRequest
 16178                           	__size_of_TempUpdateRequest	equ	__end_of_TempUpdateRequest-_TempUpdateRequest
 16179  000D                     	
 16180                           _TempUpdateRequest:	
 16181  134C                     ;incstack = 0
 16182                           	opt	stack 8
 16183                           ; Regs used in _TempUpdateRequest: [wreg+status,2+status,0]
 16184                           	line	82
 16185                           	
 16186                           i1l4476:	
 16187  134C                     ;EM1812.c: 82:     if(wTempState == eIdle)
 16188                           		movlw	5
 16189  134C  3005               	movlb 0	; select bank0
 16190  134D  0020               	xorwf	((_wTempState)),w
 16191  134E  0659               	btfss	status,2
 16192  134F  1D03               	goto	u326_21
 16193  1350  2B52               	goto	u326_20
 16194  1351  2B53               u326_21:
 16195  1352                     	goto	i1l433
 16196  1352  2B58               u326_20:
 16197  1353                     	line	84
 16198                           	
 16199                           i1l4478:	
 16200  1353                     ;EM1812.c: 83:     {;EM1812.c: 84:         wTempState = eSetGetTemp;
 16201                           	clrf	(_wTempState)
 16202  1353  01D9               	goto	i1l433
 16203  1354  2B58               	line	85
 16204                           	
 16205                           i1l4480:	
 16206  1355                     ;EM1812.c: 85:         return 1;;	Return value of _TempUpdateRequest is never used
 16207                           	goto	i1l433
 16208  1355  2B58               	line	86
 16209                           	
 16210                           i1l4482:	
 16211  1356                     ;EM1812.c: 86:     }
 16212                           	goto	i1l433
 16213  1356  2B58               	line	87
 16214                           ;EM1812.c: 87:     else
 16215                           	
 16216                           i1l432:	
 16217  1357                     	line	89
 16218                           ;EM1812.c: 88:     {;EM1812.c: 89:         return 0;;	Return value of _TempUpdateRequest
                                  is never used
 16219                           	goto	i1l433
 16220  1357  2B58               	line	90
 16221                           ;EM1812.c: 90:     }
 16222                           	
 16223                           i1l434:	
 16224  1358                     	line	92
 16225                           	
 16226                           i1l433:	
 16227  1358                     	return
 16228  1358  0008               	opt stack 0
 16229                           GLOBAL	__end_of_TempUpdateRequest
 16230                           	__end_of_TempUpdateRequest:
 16231  1359                     	signat	_TempUpdateRequest,90
 16232                           	global	_I2C_Interrupt
 16233                           
 16234 ;; *************** function _I2C_Interrupt *****************
 16235 ;; Defined at:
 16236 ;;		line 95 in file "I2C.c"
 16237 ;; Parameters:    Size  Location     Type
 16238 ;;		None
 16239 ;; Auto vars:     Size  Location     Type
 16240 ;;  oErrorCode      1    4[COMMON] unsigned char 
 16241 ;; Return value:  Size  Location     Type
 16242 ;;                  2    0[COMMON] int 
 16243 ;; Registers used:
 16244 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16245 ;; Tracked objects:
 16246 ;;		On entry : 0/0
 16247 ;;		On exit  : 0/0
 16248 ;;		Unchanged: 0/0
 16249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16250 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16251 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16252 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16253 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16254 ;;Total ram usage:        5 bytes
 16255 ;; Hardware stack levels used:    1
 16256 ;; This function calls:
 16257 ;;		Nothing
 16258 ;; This function is called by:
 16259 ;;		_myint
 16260 ;; This function uses a non-reentrant model
 16261 ;;
 16262                           psect	text59,local,class=CODE,delta=2,merge=1,group=0
 16263                           	file	"I2C.c"
 16264                           	line	95
 16265                           global __ptext59
 16266                           __ptext59:	;psect for function _I2C_Interrupt
 16267  0EDC                     psect	text59
 16268                           	file	"I2C.c"
 16269                           	line	95
 16270                           	global	__size_of_I2C_Interrupt
 16271                           	__size_of_I2C_Interrupt	equ	__end_of_I2C_Interrupt-_I2C_Interrupt
 16272  0124                     	
 16273                           _I2C_Interrupt:	
 16274  0EDC                     ;incstack = 0
 16275                           	opt	stack 8
 16276                           ; Regs used in _I2C_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 16277                           	line	97
 16278                           	
 16279                           i1l4344:	
 16280  0EDC                     ;I2C.c: 97:     uint8_t oErrorCode=0;
 16281                           	clrf	(I2C_Interrupt@oErrorCode)
 16282  0EDC  01F4               	line	99
 16283                           	
 16284                           i1l4346:	
 16285  0EDD                     ;I2C.c: 99:     if(PIR1bits.SSPIF == 1)
 16286                           	movlb 0	; select bank0
 16287  0EDD  0020               	btfss	(17),3	;volatile
 16288  0EDE  1D91               	goto	u296_21
 16289  0EDF  2EE1               	goto	u296_20
 16290  0EE0  2EE2               u296_21:
 16291  0EE1                     	goto	i1l4434
 16292  0EE1  2FED               u296_20:
 16293  0EE2                     	line	101
 16294                           	
 16295                           i1l4348:	
 16296  0EE2                     ;I2C.c: 100:     {;I2C.c: 101:         PIR1bits.SSPIF = 0;
 16297                           	bcf	(17),3	;volatile
 16298  0EE2  1191               	line	102
 16299                           	
 16300                           i1l4350:	
 16301  0EE3                     ;I2C.c: 102:         if( wI2CTxNbOfByteToSend != 0)
 16302                           	movf	((_wI2CTxNbOfByteToSend)),w
 16303  0EE3  0856               	btfsc	status,2
 16304  0EE4  1903               	goto	u297_21
 16305  0EE5  2EE7               	goto	u297_20
 16306  0EE6  2EE8               u297_21:
 16307  0EE7                     	goto	i1l4434
 16308  0EE7  2FED               u297_20:
 16309  0EE8                     	line	104
 16310                           	
 16311                           i1l4352:	
 16312  0EE8                     ;I2C.c: 103:         {;I2C.c: 104:             if((wI2CTxBuffer[0] & 0x01) == 1)
 16313                           	movlb 4	; select bank4
 16314  0EE8  0024               	btfss	(_wI2CTxBuffer)^0200h,(0)&7
 16315  0EE9  1C50               	goto	u298_21
 16316  0EEA  2EEC               	goto	u298_20
 16317  0EEB  2EED               u298_21:
 16318  0EEC                     	goto	i1l559
 16319  0EEC  2F73               u298_20:
 16320  0EED                     	line	106
 16321                           	
 16322                           i1l4354:	
 16323  0EED                     ;I2C.c: 105:             {;I2C.c: 106:                 if(SSPSTATbits.P)
 16324                           	btfss	(532)^0200h,4	;volatile
 16325  0EED  1E14               	goto	u299_21
 16326  0EEE  2EF0               	goto	u299_20
 16327  0EEF  2EF1               u299_21:
 16328  0EF0                     	goto	i1l560
 16329  0EF0  2EF7               u299_20:
 16330  0EF1                     	line	108
 16331                           	
 16332                           i1l4356:	
 16333  0EF1                     ;I2C.c: 107:                 {;I2C.c: 108:                   PIE1bits.SSPIE = 0;
 16334                           	movlb 1	; select bank1
 16335  0EF1  0021               	bcf	(145)^080h,3	;volatile
 16336  0EF2  1191               	line	109
 16337                           	
 16338                           i1l4358:	
 16339  0EF3                     ;I2C.c: 109:                   wI2CTxNbOfByteToSend=0;
 16340                           	movlb 0	; select bank0
 16341  0EF3  0020               	clrf	(_wI2CTxNbOfByteToSend)
 16342  0EF4  01D6               	line	110
 16343                           ;I2C.c: 110:                   wI2CTxSendPos=0;
 16344                           	clrf	(_wI2CTxSendPos)
 16345  0EF5  01D3               	line	111
 16346                           ;I2C.c: 111:                 }
 16347                           	goto	i1l4434
 16348  0EF6  2FED               	line	112
 16349                           ;I2C.c: 112:                 else if(SSPSTATbits.S && wI2CTxSendPos == 0)
 16350                           	
 16351                           i1l560:	
 16352  0EF7                     	btfss	(532)^0200h,3	;volatile
 16353  0EF7  1D94               	goto	u300_21
 16354  0EF8  2EFA               	goto	u300_20
 16355  0EF9  2EFB               u300_21:
 16356  0EFA                     	goto	i1l562
 16357  0EFA  2F11               u300_20:
 16358  0EFB                     	
 16359                           i1l4360:	
 16360  0EFB                     	movlb 0	; select bank0
 16361  0EFB  0020               	movf	((_wI2CTxSendPos)),w
 16362  0EFC  0853               	btfss	status,2
 16363  0EFD  1D03               	goto	u301_21
 16364  0EFE  2F00               	goto	u301_20
 16365  0EFF  2F01               u301_21:
 16366  0F00                     	goto	i1l562
 16367  0F00  2F11               u301_20:
 16368  0F01                     	line	114
 16369                           	
 16370                           i1l4362:	
 16371  0F01                     ;I2C.c: 113:                 {;I2C.c: 114:                     SSPBUF = wI2CTxBuffer[wI2
                                 CTxSendPos];
 16372                           	movf	(_wI2CTxSendPos),w
 16373  0F01  0853               	addlw	low(_wI2CTxBuffer|((0x2)<<8))&0ffh
 16374  0F02  3E50               	movwf	fsr1l
 16375  0F03  0086               	movlw 2	; select bank4/5
 16376  0F04  3002               	movwf fsr1h	
 16377  0F05  0087               	
 16378                           	movf	indf1,w
 16379  0F06  0801               	movlb 4	; select bank4
 16380  0F07  0024               	movwf	(529)^0200h	;volatile
 16381  0F08  0091               	line	115
 16382                           	
 16383                           i1l4364:	
 16384  0F09                     ;I2C.c: 115:                     wI2CCommandState = ProcessingCommand;
 16385                           	movlb 0	; select bank0
 16386  0F09  0020               	clrf	(_wI2CCommandState)
 16387  0F0A  01DF               	incf	(_wI2CCommandState),f
 16388  0F0B  0ADF               	line	116
 16389                           	
 16390                           i1l4366:	
 16391  0F0C                     ;I2C.c: 116:                     wI2CTxSendPos++;
 16392                           	movlw	low(01h)
 16393  0F0C  3001               	movwf	(??_I2C_Interrupt+0)+0
 16394  0F0D  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 16395  0F0E  0872               	addwf	(_wI2CTxSendPos),f
 16396  0F0F  07D3               	line	117
 16397                           ;I2C.c: 117:                 }
 16398                           	goto	i1l4434
 16399  0F10  2FED               	line	118
 16400                           ;I2C.c: 118:                 else if(SSPSTATbits.BF == 1)
 16401                           	
 16402                           i1l562:	
 16403  0F11                     	movlb 4	; select bank4
 16404  0F11  0024               	btfss	(532)^0200h,0	;volatile
 16405  0F12  1C14               	goto	u302_21
 16406  0F13  2F15               	goto	u302_20
 16407  0F14  2F16               u302_21:
 16408  0F15                     	goto	i1l564
 16409  0F15  2F3D               u302_20:
 16410  0F16                     	line	120
 16411                           	
 16412                           i1l4368:	
 16413  0F16                     ;I2C.c: 119:                 {;I2C.c: 120:                     wI2CRxBuffer[wReceptionBu
                                 fferPosition] = SSPBUF;
 16414                           	movf	(529)^0200h,w	;volatile
 16415  0F16  0811               	movwf	(??_I2C_Interrupt+0)+0
 16416  0F17  00F2               	movlb 0	; select bank0
 16417  0F18  0020               	movf	(_wReceptionBufferPosition),w
 16418  0F19  0857               	addlw	low(_wI2CRxBuffer|((0x2)<<8))&0ffh
 16419  0F1A  3E3C               	movwf	fsr1l
 16420  0F1B  0086               	movlw 2	; select bank4/5
 16421  0F1C  3002               	movwf fsr1h	
 16422  0F1D  0087               	
 16423                           	movf	(??_I2C_Interrupt+0)+0,w
 16424  0F1E  0872               	movwf	indf1
 16425  0F1F  0081               	line	121
 16426                           	
 16427                           i1l4370:	
 16428  0F20                     ;I2C.c: 121:                     wReceptionBufferPosition++;
 16429                           	movlw	low(01h)
 16430  0F20  3001               	movwf	(??_I2C_Interrupt+0)+0
 16431  0F21  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 16432  0F22  0872               	addwf	(_wReceptionBufferPosition),f
 16433  0F23  07D7               	line	123
 16434                           	
 16435                           i1l4372:	
 16436  0F24                     ;I2C.c: 123:                     SSPSTATbits.BF = 0 ;
 16437                           	movlb 4	; select bank4
 16438  0F24  0024               	bcf	(532)^0200h,0	;volatile
 16439  0F25  1014               	line	124
 16440                           	
 16441                           i1l4374:	
 16442  0F26                     ;I2C.c: 124:                     if( wReceptionBufferPosition < wI2CRxNbOfByteToReceived
                                 )
 16443                           	movlb 0	; select bank0
 16444  0F26  0020               	movf	(_wI2CRxNbOfByteToReceived),w
 16445  0F27  0855               	subwf	(_wReceptionBufferPosition),w
 16446  0F28  0257               	skipnc
 16447  0F29  1803               	goto	u303_21
 16448  0F2A  2F2C               	goto	u303_20
 16449  0F2B  2F2D               u303_21:
 16450  0F2C                     	goto	i1l565
 16451  0F2C  2F30               u303_20:
 16452  0F2D                     	line	126
 16453                           	
 16454                           i1l4376:	
 16455  0F2D                     ;I2C.c: 125:                     {;I2C.c: 126:                         SSPCON2bits.ACKDT
                                  = 0;
 16456                           	movlb 4	; select bank4
 16457  0F2D  0024               	bcf	(534)^0200h,5	;volatile
 16458  0F2E  1296               	line	127
 16459                           ;I2C.c: 127:                     }
 16460                           	goto	i1l4382
 16461  0F2F  2F3A               	line	128
 16462                           ;I2C.c: 128:                     else
 16463                           	
 16464                           i1l565:	
 16465  0F30                     	line	130
 16466                           ;I2C.c: 129:                     {;I2C.c: 130:                         SSPCON2bits.ACKDT
                                  = 1;
 16467                           	movlb 4	; select bank4
 16468  0F30  0024               	bsf	(534)^0200h,5	;volatile
 16469  0F31  1696               	line	131
 16470                           	
 16471                           i1l4378:	
 16472  0F32                     ;I2C.c: 131:                         wI2CCommandState = CommandCompleted;
 16473                           	movlw	low(03h)
 16474  0F32  3003               	movwf	(??_I2C_Interrupt+0)+0
 16475  0F33  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 16476  0F34  0872               	movlb 0	; select bank0
 16477  0F35  0020               	movwf	(_wI2CCommandState)
 16478  0F36  00DF               	line	132
 16479                           	
 16480                           i1l4380:	
 16481  0F37                     ;I2C.c: 132:                         wNewI2CReception = 1;
 16482                           	clrf	(_wNewI2CReception)
 16483  0F37  01D4               	incf	(_wNewI2CReception),f
 16484  0F38  0AD4               	goto	i1l4382
 16485  0F39  2F3A               	line	133
 16486                           ;I2C.c: 133:                     }
 16487                           	
 16488                           i1l566:	
 16489  0F3A                     	line	134
 16490                           	
 16491                           i1l4382:	
 16492  0F3A                     ;I2C.c: 134:                     SSPCON2bits.ACKEN = 1;
 16493                           	movlb 4	; select bank4
 16494  0F3A  0024               	bsf	(534)^0200h,4	;volatile
 16495  0F3B  1616               	line	135
 16496                           ;I2C.c: 135:                 }
 16497                           	goto	i1l4434
 16498  0F3C  2FED               	line	136
 16499                           ;I2C.c: 136:                 else
 16500                           	
 16501                           i1l564:	
 16502  0F3D                     	line	138
 16503                           ;I2C.c: 137:                 {;I2C.c: 138:                     if(SSPCON2bits.ACKSTAT ==
                                  0 && wI2CTxSendPos != 0)
 16504                           	btfsc	(534)^0200h,6	;volatile
 16505  0F3D  1B16               	goto	u304_21
 16506  0F3E  2F40               	goto	u304_20
 16507  0F3F  2F41               u304_21:
 16508  0F40                     	goto	i1l568
 16509  0F40  2F54               u304_20:
 16510  0F41                     	
 16511                           i1l4384:	
 16512  0F41                     	movlb 0	; select bank0
 16513  0F41  0020               	movf	((_wI2CTxSendPos)),w
 16514  0F42  0853               	btfsc	status,2
 16515  0F43  1903               	goto	u305_21
 16516  0F44  2F46               	goto	u305_20
 16517  0F45  2F47               u305_21:
 16518  0F46                     	goto	i1l568
 16519  0F46  2F54               u305_20:
 16520  0F47                     	line	140
 16521                           	
 16522                           i1l4386:	
 16523  0F47                     ;I2C.c: 139:                     {;I2C.c: 140:                         if( wReceptionBuf
                                 ferPosition < wI2CRxNbOfByteToReceived)
 16524                           	movf	(_wI2CRxNbOfByteToReceived),w
 16525  0F47  0855               	subwf	(_wReceptionBufferPosition),w
 16526  0F48  0257               	skipnc
 16527  0F49  1803               	goto	u306_21
 16528  0F4A  2F4C               	goto	u306_20
 16529  0F4B  2F4D               u306_21:
 16530  0F4C                     	goto	i1l569
 16531  0F4C  2F50               u306_20:
 16532  0F4D                     	line	143
 16533                           	
 16534                           i1l4388:	
 16535  0F4D                     ;I2C.c: 141:                         {;I2C.c: 143:                           SSPCON2bits
                                 .RCEN = 1;
 16536                           	movlb 4	; select bank4
 16537  0F4D  0024               	bsf	(534)^0200h,3	;volatile
 16538  0F4E  1596               	line	144
 16539                           ;I2C.c: 144:                         }
 16540                           	goto	i1l4434
 16541  0F4F  2FED               	line	145
 16542                           ;I2C.c: 145:                         else
 16543                           	
 16544                           i1l569:	
 16545  0F50                     	line	147
 16546                           ;I2C.c: 146:                         {;I2C.c: 147:                           SSPCON2bits
                                 .PEN = 1;
 16547                           	movlb 4	; select bank4
 16548  0F50  0024               	bsf	(534)^0200h,2	;volatile
 16549  0F51  1516               	goto	i1l4434
 16550  0F52  2FED               	line	148
 16551                           ;I2C.c: 148:                         }
 16552                           	
 16553                           i1l570:	
 16554  0F53                     	line	149
 16555                           ;I2C.c: 149:                     }
 16556                           	goto	i1l4434
 16557  0F53  2FED               	line	150
 16558                           ;I2C.c: 150:                     else if(SSPCON2bits.ACKSTAT == 1)
 16559                           	
 16560                           i1l568:	
 16561  0F54                     	movlb 4	; select bank4
 16562  0F54  0024               	btfss	(534)^0200h,6	;volatile
 16563  0F55  1F16               	goto	u307_21
 16564  0F56  2F58               	goto	u307_20
 16565  0F57  2F59               u307_21:
 16566  0F58                     	goto	i1l572
 16567  0F58  2F6B               u307_20:
 16568  0F59                     	line	152
 16569                           	
 16570                           i1l4390:	
 16571  0F59                     ;I2C.c: 151:                     {;I2C.c: 152:                         SSPCON2bits.ACKST
                                 AT = 0;
 16572                           	bcf	(534)^0200h,6	;volatile
 16573  0F59  1316               	line	153
 16574                           	
 16575                           i1l4392:	
 16576  0F5A                     ;I2C.c: 153:                         wI2CCommandState = CommandFailed;
 16577                           	movlw	low(05h)
 16578  0F5A  3005               	movwf	(??_I2C_Interrupt+0)+0
 16579  0F5B  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 16580  0F5C  0872               	movlb 0	; select bank0
 16581  0F5D  0020               	movwf	(_wI2CCommandState)
 16582  0F5E  00DF               	line	154
 16583                           	
 16584                           i1l4394:	
 16585  0F5F                     ;I2C.c: 154:                         if(wI2CTxSendPos != 0)
 16586                           	movf	((_wI2CTxSendPos)),w
 16587  0F5F  0853               	btfsc	status,2
 16588  0F60  1903               	goto	u308_21
 16589  0F61  2F63               	goto	u308_20
 16590  0F62  2F64               u308_21:
 16591  0F63                     	goto	i1l573
 16592  0F63  2F67               u308_20:
 16593  0F64                     	line	156
 16594                           	
 16595                           i1l4396:	
 16596  0F64                     ;I2C.c: 155:                         {;I2C.c: 156:                           SSPCON2bits
                                 .PEN = 1;
 16597                           	movlb 4	; select bank4
 16598  0F64  0024               	bsf	(534)^0200h,2	;volatile
 16599  0F65  1516               	line	157
 16600                           ;I2C.c: 157:                         }
 16601                           	goto	i1l4434
 16602  0F66  2FED               	line	158
 16603                           ;I2C.c: 158:                         else
 16604                           	
 16605                           i1l573:	
 16606  0F67                     	line	160
 16607                           ;I2C.c: 159:                         {;I2C.c: 160:                           SSPCON2bits
                                 .PEN = 1;
 16608                           	movlb 4	; select bank4
 16609  0F67  0024               	bsf	(534)^0200h,2	;volatile
 16610  0F68  1516               	goto	i1l4434
 16611  0F69  2FED               	line	161
 16612                           ;I2C.c: 161:                         }
 16613                           	
 16614                           i1l574:	
 16615  0F6A                     	line	162
 16616                           ;I2C.c: 162:                     }
 16617                           	goto	i1l4434
 16618  0F6A  2FED               	line	163
 16619                           ;I2C.c: 163:                     else
 16620                           	
 16621                           i1l572:	
 16622  0F6B                     	line	165
 16623                           ;I2C.c: 164:                     {;I2C.c: 165:                         oErrorCode = 1;
 16624                           	clrf	(I2C_Interrupt@oErrorCode)
 16625  0F6B  01F4               	incf	(I2C_Interrupt@oErrorCode),f
 16626  0F6C  0AF4               	goto	i1l4434
 16627  0F6D  2FED               	line	166
 16628                           ;I2C.c: 166:                     }
 16629                           	
 16630                           i1l575:	
 16631  0F6E                     	goto	i1l4434
 16632  0F6E  2FED               	
 16633                           i1l571:	
 16634  0F6F                     	goto	i1l4434
 16635  0F6F  2FED               	line	167
 16636                           ;I2C.c: 167:                 }
 16637                           	
 16638                           i1l567:	
 16639  0F70                     	goto	i1l4434
 16640  0F70  2FED               	
 16641                           i1l563:	
 16642  0F71                     	goto	i1l4434
 16643  0F71  2FED               	
 16644                           i1l561:	
 16645  0F72                     	line	169
 16646                           ;I2C.c: 169:             }
 16647                           	goto	i1l4434
 16648  0F72  2FED               	line	170
 16649                           ;I2C.c: 170:             else
 16650                           	
 16651                           i1l559:	
 16652  0F73                     	line	172
 16653                           ;I2C.c: 171:             {;I2C.c: 172:                 if(SSPSTATbits.P)
 16654                           	btfss	(532)^0200h,4	;volatile
 16655  0F73  1E14               	goto	u309_21
 16656  0F74  2F76               	goto	u309_20
 16657  0F75  2F77               u309_21:
 16658  0F76                     	goto	i1l577
 16659  0F76  2F93               u309_20:
 16660  0F77                     	line	174
 16661                           	
 16662                           i1l4398:	
 16663  0F77                     ;I2C.c: 173:                 {;I2C.c: 174:                   PIE1bits.SSPIE = 0;
 16664                           	movlb 1	; select bank1
 16665  0F77  0021               	bcf	(145)^080h,3	;volatile
 16666  0F78  1191               	line	175
 16667                           	
 16668                           i1l4400:	
 16669  0F79                     ;I2C.c: 175:                   wI2CTxNbOfByteToSend=0;
 16670                           	movlb 0	; select bank0
 16671  0F79  0020               	clrf	(_wI2CTxNbOfByteToSend)
 16672  0F7A  01D6               	line	176
 16673                           ;I2C.c: 176:                   wI2CTxSendPos = 0;
 16674                           	clrf	(_wI2CTxSendPos)
 16675  0F7B  01D3               	line	177
 16676                           	
 16677                           i1l4402:	
 16678  0F7C                     ;I2C.c: 177:                   if(wI2CCommandState == CommandWillComplet)
 16679                           		movlw	2
 16680  0F7C  3002               	xorwf	((_wI2CCommandState)),w
 16681  0F7D  065F               	btfss	status,2
 16682  0F7E  1D03               	goto	u310_21
 16683  0F7F  2F81               	goto	u310_20
 16684  0F80  2F82               u310_21:
 16685  0F81                     	goto	i1l4406
 16686  0F81  2F87               u310_20:
 16687  0F82                     	line	179
 16688                           	
 16689                           i1l4404:	
 16690  0F82                     ;I2C.c: 178:                   {;I2C.c: 179:                       wI2CCommandState = Co
                                 mmandCompleted;
 16691                           	movlw	low(03h)
 16692  0F82  3003               	movwf	(??_I2C_Interrupt+0)+0
 16693  0F83  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 16694  0F84  0872               	movwf	(_wI2CCommandState)
 16695  0F85  00DF               	goto	i1l4406
 16696  0F86  2F87               	line	180
 16697                           ;I2C.c: 180:                   }
 16698                           	
 16699                           i1l578:	
 16700  0F87                     	line	181
 16701                           	
 16702                           i1l4406:	
 16703  0F87                     ;I2C.c: 181:                   if(wI2CCommandState == CommandWillFail)
 16704                           		movlw	4
 16705  0F87  3004               	xorwf	((_wI2CCommandState)),w
 16706  0F88  065F               	btfss	status,2
 16707  0F89  1D03               	goto	u311_21
 16708  0F8A  2F8C               	goto	u311_20
 16709  0F8B  2F8D               u311_21:
 16710  0F8C                     	goto	i1l4434
 16711  0F8C  2FED               u311_20:
 16712  0F8D                     	line	183
 16713                           	
 16714                           i1l4408:	
 16715  0F8D                     ;I2C.c: 182:                   {;I2C.c: 183:                       wI2CCommandState = Co
                                 mmandFailed;
 16716                           	movlw	low(05h)
 16717  0F8D  3005               	movwf	(??_I2C_Interrupt+0)+0
 16718  0F8E  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 16719  0F8F  0872               	movwf	(_wI2CCommandState)
 16720  0F90  00DF               	goto	i1l4434
 16721  0F91  2FED               	line	184
 16722                           ;I2C.c: 184:                   }
 16723                           	
 16724                           i1l579:	
 16725  0F92                     	line	185
 16726                           ;I2C.c: 185:                 }
 16727                           	goto	i1l4434
 16728  0F92  2FED               	line	186
 16729                           ;I2C.c: 186:                 else if(SSPSTATbits.S && wI2CTxSendPos == 0)
 16730                           	
 16731                           i1l577:	
 16732  0F93                     	btfss	(532)^0200h,3	;volatile
 16733  0F93  1D94               	goto	u312_21
 16734  0F94  2F96               	goto	u312_20
 16735  0F95  2F97               u312_21:
 16736  0F96                     	goto	i1l581
 16737  0F96  2FAD               u312_20:
 16738  0F97                     	
 16739                           i1l4410:	
 16740  0F97                     	movlb 0	; select bank0
 16741  0F97  0020               	movf	((_wI2CTxSendPos)),w
 16742  0F98  0853               	btfss	status,2
 16743  0F99  1D03               	goto	u313_21
 16744  0F9A  2F9C               	goto	u313_20
 16745  0F9B  2F9D               u313_21:
 16746  0F9C                     	goto	i1l581
 16747  0F9C  2FAD               u313_20:
 16748  0F9D                     	line	188
 16749                           	
 16750                           i1l4412:	
 16751  0F9D                     ;I2C.c: 187:                 {;I2C.c: 188:                     wI2CCommandState = Proces
                                 singCommand;
 16752                           	clrf	(_wI2CCommandState)
 16753  0F9D  01DF               	incf	(_wI2CCommandState),f
 16754  0F9E  0ADF               	line	189
 16755                           	
 16756                           i1l4414:	
 16757  0F9F                     ;I2C.c: 189:                     SSPBUF = wI2CTxBuffer[wI2CTxSendPos];
 16758                           	movf	(_wI2CTxSendPos),w
 16759  0F9F  0853               	addlw	low(_wI2CTxBuffer|((0x2)<<8))&0ffh
 16760  0FA0  3E50               	movwf	fsr1l
 16761  0FA1  0086               	movlw 2	; select bank4/5
 16762  0FA2  3002               	movwf fsr1h	
 16763  0FA3  0087               	
 16764                           	movf	indf1,w
 16765  0FA4  0801               	movlb 4	; select bank4
 16766  0FA5  0024               	movwf	(529)^0200h	;volatile
 16767  0FA6  0091               	line	190
 16768                           	
 16769                           i1l4416:	
 16770  0FA7                     ;I2C.c: 190:                     wI2CTxSendPos++;
 16771                           	movlw	low(01h)
 16772  0FA7  3001               	movwf	(??_I2C_Interrupt+0)+0
 16773  0FA8  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 16774  0FA9  0872               	movlb 0	; select bank0
 16775  0FAA  0020               	addwf	(_wI2CTxSendPos),f
 16776  0FAB  07D3               	line	191
 16777                           ;I2C.c: 191:                 }
 16778                           	goto	i1l4434
 16779  0FAC  2FED               	line	192
 16780                           ;I2C.c: 192:                 else
 16781                           	
 16782                           i1l581:	
 16783  0FAD                     	line	194
 16784                           ;I2C.c: 193:                 {;I2C.c: 194:                     if(SSPCON2bits.ACKSTAT ==
                                  0 && wI2CTxSendPos != 0)
 16785                           	movlb 4	; select bank4
 16786  0FAD  0024               	btfsc	(534)^0200h,6	;volatile
 16787  0FAE  1B16               	goto	u314_21
 16788  0FAF  2FB1               	goto	u314_20
 16789  0FB0  2FB2               u314_21:
 16790  0FB1                     	goto	i1l583
 16791  0FB1  2FD5               u314_20:
 16792  0FB2                     	
 16793                           i1l4418:	
 16794  0FB2                     	movlb 0	; select bank0
 16795  0FB2  0020               	movf	((_wI2CTxSendPos)),w
 16796  0FB3  0853               	btfsc	status,2
 16797  0FB4  1903               	goto	u315_21
 16798  0FB5  2FB7               	goto	u315_20
 16799  0FB6  2FB8               u315_21:
 16800  0FB7                     	goto	i1l583
 16801  0FB7  2FD5               u315_20:
 16802  0FB8                     	line	196
 16803                           	
 16804                           i1l4420:	
 16805  0FB8                     ;I2C.c: 195:                     {;I2C.c: 196:                       if(wI2CTxSendPos < 
                                 wI2CTxNbOfByteToSend)
 16806                           	movf	(_wI2CTxNbOfByteToSend),w
 16807  0FB8  0856               	subwf	(_wI2CTxSendPos),w
 16808  0FB9  0253               	skipnc
 16809  0FBA  1803               	goto	u316_21
 16810  0FBB  2FBD               	goto	u316_20
 16811  0FBC  2FBE               u316_21:
 16812  0FBD                     	goto	i1l584
 16813  0FBD  2FCC               u316_20:
 16814  0FBE                     	line	198
 16815                           	
 16816                           i1l4422:	
 16817  0FBE                     ;I2C.c: 197:                       {;I2C.c: 198:                         SSPBUF = wI2CTx
                                 Buffer[wI2CTxSendPos];
 16818                           	movf	(_wI2CTxSendPos),w
 16819  0FBE  0853               	addlw	low(_wI2CTxBuffer|((0x2)<<8))&0ffh
 16820  0FBF  3E50               	movwf	fsr1l
 16821  0FC0  0086               	movlw 2	; select bank4/5
 16822  0FC1  3002               	movwf fsr1h	
 16823  0FC2  0087               	
 16824                           	movf	indf1,w
 16825  0FC3  0801               	movlb 4	; select bank4
 16826  0FC4  0024               	movwf	(529)^0200h	;volatile
 16827  0FC5  0091               	line	199
 16828                           	
 16829                           i1l4424:	
 16830  0FC6                     ;I2C.c: 199:                         wI2CTxSendPos++;
 16831                           	movlw	low(01h)
 16832  0FC6  3001               	movwf	(??_I2C_Interrupt+0)+0
 16833  0FC7  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 16834  0FC8  0872               	movlb 0	; select bank0
 16835  0FC9  0020               	addwf	(_wI2CTxSendPos),f
 16836  0FCA  07D3               	line	200
 16837                           ;I2C.c: 200:                       }
 16838                           	goto	i1l4434
 16839  0FCB  2FED               	line	201
 16840                           ;I2C.c: 201:                       else
 16841                           	
 16842                           i1l584:	
 16843  0FCC                     	line	203
 16844                           ;I2C.c: 202:                       {;I2C.c: 203:                             SSPCON2bits
                                 .PEN = 1;
 16845                           	movlb 4	; select bank4
 16846  0FCC  0024               	bsf	(534)^0200h,2	;volatile
 16847  0FCD  1516               	line	204
 16848                           	
 16849                           i1l4426:	
 16850  0FCE                     ;I2C.c: 204:                             wI2CCommandState = CommandWillComplet;
 16851                           	movlw	low(02h)
 16852  0FCE  3002               	movwf	(??_I2C_Interrupt+0)+0
 16853  0FCF  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 16854  0FD0  0872               	movlb 0	; select bank0
 16855  0FD1  0020               	movwf	(_wI2CCommandState)
 16856  0FD2  00DF               	goto	i1l4434
 16857  0FD3  2FED               	line	205
 16858                           ;I2C.c: 205:                       }
 16859                           	
 16860                           i1l585:	
 16861  0FD4                     	line	206
 16862                           ;I2C.c: 206:                     }
 16863                           	goto	i1l4434
 16864  0FD4  2FED               	line	207
 16865                           ;I2C.c: 207:                     else if(SSPCON2bits.ACKSTAT == 1)
 16866                           	
 16867                           i1l583:	
 16868  0FD5                     	movlb 4	; select bank4
 16869  0FD5  0024               	btfss	(534)^0200h,6	;volatile
 16870  0FD6  1F16               	goto	u317_21
 16871  0FD7  2FD9               	goto	u317_20
 16872  0FD8  2FDA               u317_21:
 16873  0FD9                     	goto	i1l4432
 16874  0FD9  2FE2               u317_20:
 16875  0FDA                     	line	209
 16876                           	
 16877                           i1l4428:	
 16878  0FDA                     ;I2C.c: 208:                     {;I2C.c: 209:                         SSPCON2bits.ACKST
                                 AT = 0;
 16879                           	bcf	(534)^0200h,6	;volatile
 16880  0FDA  1316               	line	210
 16881                           ;I2C.c: 210:                         SSPCON2bits.PEN = 1;
 16882                           	bsf	(534)^0200h,2	;volatile
 16883  0FDB  1516               	line	211
 16884                           	
 16885                           i1l4430:	
 16886  0FDC                     ;I2C.c: 211:                         wI2CCommandState = CommandWillFail;
 16887                           	movlw	low(04h)
 16888  0FDC  3004               	movwf	(??_I2C_Interrupt+0)+0
 16889  0FDD  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 16890  0FDE  0872               	movlb 0	; select bank0
 16891  0FDF  0020               	movwf	(_wI2CCommandState)
 16892  0FE0  00DF               	line	212
 16893                           ;I2C.c: 212:                     }
 16894                           	goto	i1l4434
 16895  0FE1  2FED               	line	213
 16896                           ;I2C.c: 213:                     else
 16897                           	
 16898                           i1l587:	
 16899  0FE2                     	line	215
 16900                           	
 16901                           i1l4432:	
 16902  0FE2                     ;I2C.c: 214:                     {;I2C.c: 215:                        oErrorCode = 3;
 16903                           	movlw	low(03h)
 16904  0FE2  3003               	movwf	(??_I2C_Interrupt+0)+0
 16905  0FE3  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 16906  0FE4  0872               	movwf	(I2C_Interrupt@oErrorCode)
 16907  0FE5  00F4               	goto	i1l4434
 16908  0FE6  2FED               	line	216
 16909                           ;I2C.c: 216:                     }
 16910                           	
 16911                           i1l588:	
 16912  0FE7                     	goto	i1l4434
 16913  0FE7  2FED               	
 16914                           i1l586:	
 16915  0FE8                     	goto	i1l4434
 16916  0FE8  2FED               	line	217
 16917                           ;I2C.c: 217:                 }
 16918                           	
 16919                           i1l582:	
 16920  0FE9                     	goto	i1l4434
 16921  0FE9  2FED               	
 16922                           i1l580:	
 16923  0FEA                     	goto	i1l4434
 16924  0FEA  2FED               	line	218
 16925                           ;I2C.c: 218:             }
 16926                           	
 16927                           i1l576:	
 16928  0FEB                     	goto	i1l4434
 16929  0FEB  2FED               	line	219
 16930                           ;I2C.c: 219:         }
 16931                           	
 16932                           i1l558:	
 16933  0FEC                     	goto	i1l4434
 16934  0FEC  2FED               	line	220
 16935                           ;I2C.c: 220:     }
 16936                           	
 16937                           i1l557:	
 16938  0FED                     	line	221
 16939                           	
 16940                           i1l4434:	
 16941  0FED                     ;I2C.c: 221:     if(PIR2bits.BCLIF == 1)
 16942                           	movlb 0	; select bank0
 16943  0FED  0020               	btfss	(18),3	;volatile
 16944  0FEE  1D92               	goto	u318_21
 16945  0FEF  2FF1               	goto	u318_20
 16946  0FF0  2FF2               u318_21:
 16947  0FF1                     	goto	i1l589
 16948  0FF1  2FF7               u318_20:
 16949  0FF2                     	line	223
 16950                           	
 16951                           i1l4436:	
 16952  0FF2                     ;I2C.c: 222:     {;I2C.c: 223:         PIR2bits.BCLIF = 0;
 16953                           	bcf	(18),3	;volatile
 16954  0FF2  1192               	line	224
 16955                           	
 16956                           i1l4438:	
 16957  0FF3                     ;I2C.c: 224:         oErrorCode = 2;
 16958                           	movlw	low(02h)
 16959  0FF3  3002               	movwf	(??_I2C_Interrupt+0)+0
 16960  0FF4  00F2               	movf	(??_I2C_Interrupt+0)+0,w
 16961  0FF5  0872               	movwf	(I2C_Interrupt@oErrorCode)
 16962  0FF6  00F4               	line	225
 16963                           ;I2C.c: 225:     }
 16964                           	
 16965                           i1l589:	
 16966  0FF7                     	line	227
 16967                           ;I2C.c: 227:     return oErrorCode;
 16968                           	movf	(I2C_Interrupt@oErrorCode),w
 16969  0FF7  0874               	movwf	(??_I2C_Interrupt+0)+0
 16970  0FF8  00F2               	clrf	(??_I2C_Interrupt+0)+0+1
 16971  0FF9  01F3               	movf	0+(??_I2C_Interrupt+0)+0,w
 16972  0FFA  0872               	movwf	(?_I2C_Interrupt)
 16973  0FFB  00F0               	movf	1+(??_I2C_Interrupt+0)+0,w
 16974  0FFC  0873               	movwf	(?_I2C_Interrupt+1)
 16975  0FFD  00F1               	goto	i1l590
 16976  0FFE  2FFF               	
 16977                           i1l4440:	
 16978  0FFF                     	line	228
 16979                           	
 16980                           i1l590:	
 16981  0FFF                     	return
 16982  0FFF  0008               	opt stack 0
 16983                           GLOBAL	__end_of_I2C_Interrupt
 16984                           	__end_of_I2C_Interrupt:
 16985  1000                     	signat	_I2C_Interrupt,90
 16986                           	global	_EUSARTInterrupt
 16987                           
 16988 ;; *************** function _EUSARTInterrupt *****************
 16989 ;; Defined at:
 16990 ;;		line 41 in file "EUSART.c"
 16991 ;; Parameters:    Size  Location     Type
 16992 ;;		None
 16993 ;; Auto vars:     Size  Location     Type
 16994 ;;  gErrorCode      1    4[COMMON] unsigned char 
 16995 ;; Return value:  Size  Location     Type
 16996 ;;                  2    0[COMMON] int 
 16997 ;; Registers used:
 16998 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16999 ;; Tracked objects:
 17000 ;;		On entry : 0/0
 17001 ;;		On exit  : 0/0
 17002 ;;		Unchanged: 0/0
 17003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17006 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17007 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17008 ;;Total ram usage:        5 bytes
 17009 ;; Hardware stack levels used:    1
 17010 ;; This function calls:
 17011 ;;		Nothing
 17012 ;; This function is called by:
 17013 ;;		_myint
 17014 ;; This function uses a non-reentrant model
 17015 ;;
 17016                           psect	text60,local,class=CODE,delta=2,merge=1,group=0
 17017                           	file	"EUSART.c"
 17018                           	line	41
 17019                           global __ptext60
 17020                           __ptext60:	;psect for function _EUSARTInterrupt
 17021  0A8C                     psect	text60
 17022                           	file	"EUSART.c"
 17023                           	line	41
 17024                           	global	__size_of_EUSARTInterrupt
 17025                           	__size_of_EUSARTInterrupt	equ	__end_of_EUSARTInterrupt-_EUSARTInterrupt
 17026  0070                     	
 17027                           _EUSARTInterrupt:	
 17028  0A8C                     ;incstack = 0
 17029                           	opt	stack 8
 17030                           ; Regs used in _EUSARTInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 17031                           	line	44
 17032                           	
 17033                           i1l4442:	
 17034  0A8C                     ;EUSART.c: 43:     uint8_t gErrorCode;;EUSART.c: 44:     if( PIR1bits.TXIF == 1 )
 17035                           	movlb 0	; select bank0
 17036  0A8C  0020               	btfss	(17),4	;volatile
 17037  0A8D  1E11               	goto	u319_21
 17038  0A8E  2A90               	goto	u319_20
 17039  0A8F  2A91               u319_21:
 17040  0A90                     	goto	i1l4454
 17041  0A90  2AAB               u319_20:
 17042  0A91                     	line	46
 17043                           	
 17044                           i1l4444:	
 17045  0A91                     ;EUSART.c: 45:     {;EUSART.c: 46:       if(gTxReadingPosition < gTxTransmitSize)
 17046                           	movf	(_gTxTransmitSize),w
 17047  0A91  0850               	subwf	(_gTxReadingPosition),w
 17048  0A92  0251               	skipnc
 17049  0A93  1803               	goto	u320_21
 17050  0A94  2A96               	goto	u320_20
 17051  0A95  2A97               u320_21:
 17052  0A96                     	goto	i1l4450
 17053  0A96  2AA5               u320_20:
 17054  0A97                     	line	48
 17055                           	
 17056                           i1l4446:	
 17057  0A97                     ;EUSART.c: 47:       {;EUSART.c: 48:           TXREG = gEusartTXBuffer[gTxReadingPositio
                                 n];
 17058                           	movf	(_gTxReadingPosition),w
 17059  0A97  0851               	addlw	low(_gEusartTXBuffer|((0x3)<<8))&0ffh
 17060  0A98  3EA0               	movwf	fsr1l
 17061  0A99  0086               	movlw 3	; select bank7/8
 17062  0A9A  3003               	movwf fsr1h	
 17063  0A9B  0087               	
 17064                           	movf	indf1,w
 17065  0A9C  0801               	movlb 3	; select bank3
 17066  0A9D  0023               	movwf	(410)^0180h	;volatile
 17067  0A9E  009A               	line	49
 17068                           	
 17069                           i1l4448:	
 17070  0A9F                     ;EUSART.c: 49:           gTxReadingPosition++;
 17071                           	movlw	low(01h)
 17072  0A9F  3001               	movwf	(??_EUSARTInterrupt+0)+0
 17073  0AA0  00F2               	movf	(??_EUSARTInterrupt+0)+0,w
 17074  0AA1  0872               	movlb 0	; select bank0
 17075  0AA2  0020               	addwf	(_gTxReadingPosition),f
 17076  0AA3  07D1               	line	50
 17077                           ;EUSART.c: 50:       }
 17078                           	goto	i1l4454
 17079  0AA4  2AAB               	line	51
 17080                           ;EUSART.c: 51:       else
 17081                           	
 17082                           i1l789:	
 17083  0AA5                     	line	53
 17084                           	
 17085                           i1l4450:	
 17086  0AA5                     ;EUSART.c: 52:       {;EUSART.c: 53:            gTxReadingPosition = 0;
 17087                           	clrf	(_gTxReadingPosition)
 17088  0AA5  01D1               	line	54
 17089                           ;EUSART.c: 54:            gTxTransmitSize = 0;
 17090                           	clrf	(_gTxTransmitSize)
 17091  0AA6  01D0               	line	55
 17092                           	
 17093                           i1l4452:	
 17094  0AA7                     ;EUSART.c: 55:            PIE1bits.TXIE =0;
 17095                           	movlb 1	; select bank1
 17096  0AA7  0021               	bcf	(145)^080h,4	;volatile
 17097  0AA8  1211               	goto	i1l4454
 17098  0AA9  2AAB               	line	56
 17099                           ;EUSART.c: 56:       }
 17100                           	
 17101                           i1l790:	
 17102  0AAA                     	goto	i1l4454
 17103  0AAA  2AAB               	line	57
 17104                           ;EUSART.c: 57:     }
 17105                           	
 17106                           i1l788:	
 17107  0AAB                     	line	58
 17108                           	
 17109                           i1l4454:	
 17110  0AAB                     ;EUSART.c: 58:     if( PIR1bits.RCIF == 1)
 17111                           	movlb 0	; select bank0
 17112  0AAB  0020               	btfss	(17),5	;volatile
 17113  0AAC  1E91               	goto	u321_21
 17114  0AAD  2AAF               	goto	u321_20
 17115  0AAE  2AB0               u321_21:
 17116  0AAF                     	goto	i1l4472
 17117  0AAF  2AF3               u321_20:
 17118  0AB0                     	line	60
 17119                           	
 17120                           i1l4456:	
 17121  0AB0                     ;EUSART.c: 59:     {;EUSART.c: 60:         if(RCSTAbits.FERR == 1 || RCSTAbits.OERR == 1
                                  )
 17122                           	movlb 3	; select bank3
 17123  0AB0  0023               	btfsc	(413)^0180h,2	;volatile
 17124  0AB1  191D               	goto	u322_21
 17125  0AB2  2AB4               	goto	u322_20
 17126  0AB3  2AB5               u322_21:
 17127  0AB4                     	goto	i1l4460
 17128  0AB4  2ABA               u322_20:
 17129  0AB5                     	
 17130                           i1l4458:	
 17131  0AB5                     	btfss	(413)^0180h,1	;volatile
 17132  0AB5  1C9D               	goto	u323_21
 17133  0AB6  2AB8               	goto	u323_20
 17134  0AB7  2AB9               u323_21:
 17135  0AB8                     	goto	i1l4462
 17136  0AB8  2AC9               u323_20:
 17137  0AB9                     	goto	i1l4460
 17138  0AB9  2ABA               	
 17139                           i1l794:	
 17140  0ABA                     	line	62
 17141                           	
 17142                           i1l4460:	
 17143  0ABA                     ;EUSART.c: 61:         {;EUSART.c: 62:             gErrorCode = RCSTAbits.FERR + (RCSTAb
                                 its.OERR<<1);
 17144                           	rrf	(413)^0180h,w	;volatile
 17145  0ABA  0C1D               	andlw	(1<<1)-1
 17146  0ABB  3901               	movwf	(??_EUSARTInterrupt+0)+0
 17147  0ABC  00F2               	movlw	01h
 17148  0ABD  3001               u324_25:
 17149  0ABE                     	lslf	(??_EUSARTInterrupt+0)+0,f
 17150  0ABE  35F2               	decfsz	wreg,f
 17151  0ABF  0B89               	goto	u324_25
 17152  0AC0  2ABE               	rrf	(413)^0180h,w	;volatile
 17153  0AC1  0C1D               	rrf	wreg,f
 17154  0AC2  0C89               	andlw	(1<<1)-1
 17155  0AC3  3901               	addwf	0+(??_EUSARTInterrupt+0)+0,w
 17156  0AC4  0772               	movwf	(??_EUSARTInterrupt+1)+0
 17157  0AC5  00F3               	movf	(??_EUSARTInterrupt+1)+0,w
 17158  0AC6  0873               	movwf	(EUSARTInterrupt@gErrorCode)
 17159  0AC7  00F4               	line	63
 17160                           ;EUSART.c: 63:         }
 17161                           	goto	i1l4472
 17162  0AC8  2AF3               	line	64
 17163                           ;EUSART.c: 64:         else
 17164                           	
 17165                           i1l792:	
 17166  0AC9                     	line	66
 17167                           	
 17168                           i1l4462:	
 17169  0AC9                     ;EUSART.c: 65:         {;EUSART.c: 66:             if(gEusartRXBufferIndex < sizeof(gEus
                                 artRXBuffer) )
 17170                           	movlw	low(046h)
 17171  0AC9  3046               	movlb 0	; select bank0
 17172  0ACA  0020               	subwf	(_gEusartRXBufferIndex),w
 17173  0ACB  0252               	skipnc
 17174  0ACC  1803               	goto	u325_21
 17175  0ACD  2ACF               	goto	u325_20
 17176  0ACE  2AD0               u325_21:
 17177  0ACF                     	goto	i1l4468
 17178  0ACF  2AE0               u325_20:
 17179  0AD0                     	line	68
 17180                           	
 17181                           i1l4464:	
 17182  0AD0                     ;EUSART.c: 67:             {;EUSART.c: 68:               gEusartRXBuffer[gEusartRXBuffer
                                 Index] = RCREG;
 17183                           	movlb 3	; select bank3
 17184  0AD0  0023               	movf	(409)^0180h,w	;volatile
 17185  0AD1  0819               	movwf	(??_EUSARTInterrupt+0)+0
 17186  0AD2  00F2               	movlb 0	; select bank0
 17187  0AD3  0020               	movf	(_gEusartRXBufferIndex),w
 17188  0AD4  0852               	addlw	low(_gEusartRXBuffer|((0x3)<<8))&0ffh
 17189  0AD5  3E20               	movwf	fsr1l
 17190  0AD6  0086               	movlw 3	; select bank6/7
 17191  0AD7  3003               	movwf fsr1h	
 17192  0AD8  0087               	
 17193                           	movf	(??_EUSARTInterrupt+0)+0,w
 17194  0AD9  0872               	movwf	indf1
 17195  0ADA  0081               	line	69
 17196                           	
 17197                           i1l4466:	
 17198  0ADB                     ;EUSART.c: 69:               gEusartRXBufferIndex++;
 17199                           	movlw	low(01h)
 17200  0ADB  3001               	movwf	(??_EUSARTInterrupt+0)+0
 17201  0ADC  00F2               	movf	(??_EUSARTInterrupt+0)+0,w
 17202  0ADD  0872               	addwf	(_gEusartRXBufferIndex),f
 17203  0ADE  07D2               	line	70
 17204                           ;EUSART.c: 70:             }
 17205                           	goto	i1l4472
 17206  0ADF  2AF3               	line	71
 17207                           ;EUSART.c: 71:             else
 17208                           	
 17209                           i1l796:	
 17210  0AE0                     	line	73
 17211                           	
 17212                           i1l4468:	
 17213  0AE0                     ;EUSART.c: 72:             {;EUSART.c: 73:               gEusartRXBuffer[gEusartRXBuffer
                                 Index-1] = RCREG;
 17214                           	movlb 3	; select bank3
 17215  0AE0  0023               	movf	(409)^0180h,w	;volatile
 17216  0AE1  0819               	movwf	(??_EUSARTInterrupt+0)+0
 17217  0AE2  00F2               	movlb 0	; select bank0
 17218  0AE3  0020               	movf	(_gEusartRXBufferIndex),w
 17219  0AE4  0852               	addlw	0FFh
 17220  0AE5  3EFF               	addlw	low(_gEusartRXBuffer|((0x3)<<8))&0ffh
 17221  0AE6  3E20               	movwf	fsr1l
 17222  0AE7  0086               	movlw 3	; select bank6/7
 17223  0AE8  3003               	movwf fsr1h	
 17224  0AE9  0087               	
 17225                           	movf	(??_EUSARTInterrupt+0)+0,w
 17226  0AEA  0872               	movwf	indf1
 17227  0AEB  0081               	line	74
 17228                           	
 17229                           i1l4470:	
 17230  0AEC                     ;EUSART.c: 74:               gErrorCode = 3;
 17231                           	movlw	low(03h)
 17232  0AEC  3003               	movwf	(??_EUSARTInterrupt+0)+0
 17233  0AED  00F2               	movf	(??_EUSARTInterrupt+0)+0,w
 17234  0AEE  0872               	movwf	(EUSARTInterrupt@gErrorCode)
 17235  0AEF  00F4               	goto	i1l4472
 17236  0AF0  2AF3               	line	75
 17237                           ;EUSART.c: 75:             }
 17238                           	
 17239                           i1l797:	
 17240  0AF1                     	goto	i1l4472
 17241  0AF1  2AF3               	line	76
 17242                           ;EUSART.c: 76:         }
 17243                           	
 17244                           i1l795:	
 17245  0AF2                     	goto	i1l4472
 17246  0AF2  2AF3               	line	78
 17247                           ;EUSART.c: 78:     }
 17248                           	
 17249                           i1l791:	
 17250  0AF3                     	line	79
 17251                           	
 17252                           i1l4472:	
 17253  0AF3                     ;EUSART.c: 79:     return gErrorCode;
 17254                           	movf	(EUSARTInterrupt@gErrorCode),w
 17255  0AF3  0874               	movwf	(??_EUSARTInterrupt+0)+0
 17256  0AF4  00F2               	clrf	(??_EUSARTInterrupt+0)+0+1
 17257  0AF5  01F3               	movf	0+(??_EUSARTInterrupt+0)+0,w
 17258  0AF6  0872               	movwf	(?_EUSARTInterrupt)
 17259  0AF7  00F0               	movf	1+(??_EUSARTInterrupt+0)+0,w
 17260  0AF8  0873               	movwf	(?_EUSARTInterrupt+1)
 17261  0AF9  00F1               	goto	i1l798
 17262  0AFA  2AFB               	
 17263                           i1l4474:	
 17264  0AFB                     	line	80
 17265                           	
 17266                           i1l798:	
 17267  0AFB                     	return
 17268  0AFB  0008               	opt stack 0
 17269                           GLOBAL	__end_of_EUSARTInterrupt
 17270                           	__end_of_EUSARTInterrupt:
 17271  0AFC                     	signat	_EUSARTInterrupt,90
 17272                           global	___latbits
 17273                           ___latbits	equ	3
 17274  0003                     	global	btemp
 17275                           	btemp set 07Eh
 17276  007E                     
 17277                           	DABS	1,126,2	;btemp
 17278                           	global	int$flags
 17279                           	int$flags	set btemp
 17280  007E                     	global	wtemp0
 17281                           	wtemp0 set btemp+0
 17282  007E                     	end


Data Sizes:
    Strings     176
    Constant    0
    Data        15
    BSS         318
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     46      64
    BANK1            80     62      63
    BANK2            80     75      79
    BANK3            80      0      27
    BANK4            80      0      68
    BANK5            80      0      75
    BANK6            80      0      70
    BANK7            80      0      70
    BANK8            80     79      79
    BANK9            80     76      76
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_16(CODE[9]), STR_15(CODE[7]), Esp8266SetNetworkParameters@wCommand(BANK2[70]), STR_7(CODE[17]), 
		 -> Esp8266OpenSocketCommand@wCommand(BANK8[70]), STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), 
		 -> wInterruptText(BANK5[75]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_16(CODE[9]), STR_15(CODE[7]), Esp8266SetNetworkParameters@wCommand(BANK2[70]), STR_7(CODE[17]), 
		 -> Esp8266OpenSocketCommand@wCommand(BANK8[70]), STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), 
		 -> wInterruptText(BANK5[75]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 75
		 -> Esp8266SetNetworkParameters@wCommand(BANK2[70]), Esp8266OpenSocketCommand@wCommand(BANK8[70]), wInterruptText(BANK5[75]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 75
		 -> Esp8266SetNetworkParameters@wCommand(BANK2[70]), Esp8266OpenSocketCommand@wCommand(BANK8[70]), wInterruptText(BANK5[75]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_19(CODE[14]), STR_18(CODE[4]), STR_16(CODE[9]), STR_15(CODE[7]), 
		 -> STR_12(CODE[5]), STR_11(CODE[5]), Esp8266SetNetworkParameters@wNumber(BANK2[3]), STR_10(CODE[3]), 
		 -> STR_9(CODE[4]), STR_8(CODE[11]), STR_6(CODE[3]), Esp8266OpenSocketCommand@wPort(BANK8[7]), 
		 -> STR_5(CODE[3]), STR_4(CODE[4]), STR_3(CODE[14]), NULL(NULL[0]), 
		 -> STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_19(CODE[14]), STR_18(CODE[4]), STR_16(CODE[9]), STR_15(CODE[7]), 
		 -> STR_12(CODE[5]), STR_11(CODE[5]), Esp8266SetNetworkParameters@wNumber(BANK2[3]), STR_10(CODE[3]), 
		 -> STR_9(CODE[4]), STR_8(CODE[11]), STR_6(CODE[3]), Esp8266OpenSocketCommand@wPort(BANK8[7]), 
		 -> STR_5(CODE[3]), STR_4(CODE[4]), STR_3(CODE[14]), NULL(NULL[0]), 
		 -> STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_19(CODE[14]), STR_18(CODE[4]), STR_16(CODE[9]), STR_15(CODE[7]), 
		 -> STR_12(CODE[5]), STR_11(CODE[5]), Esp8266SetNetworkParameters@wNumber(BANK2[3]), STR_10(CODE[3]), 
		 -> STR_9(CODE[4]), STR_6(CODE[3]), Esp8266OpenSocketCommand@wPort(BANK8[7]), STR_5(CODE[3]), 
		 -> STR_4(CODE[4]), NULL(NULL[0]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK1[20]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 75
		 -> Esp8266SetNetworkParameters@wCommand(BANK2[70]), Esp8266OpenSocketCommand@wCommand(BANK8[70]), wInterruptText(BANK5[75]), 

    memset@dest	PTR void  size(1) Largest target is 75
		 -> wI2CRxBuffer(BANK4[20]), wI2CTxBuffer(BANK4[20]), wInterruptText(BANK5[75]), 

    memset@s	PTR unsigned char  size(1) Largest target is 75
		 -> wI2CRxBuffer(BANK4[20]), wI2CTxBuffer(BANK4[20]), wInterruptText(BANK5[75]), 

    memcpy@d1	PTR void  size(2) Largest target is 70
		 -> gEusartTXBuffer(BANK7[70]), Esp8266Entrypoint@wEspBuffer(BANK9[70]), wI2CTxBuffer(BANK4[20]), EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 70
		 -> gEusartTXBuffer(BANK7[70]), Esp8266Entrypoint@wEspBuffer(BANK9[70]), wI2CTxBuffer(BANK4[20]), EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 70
		 -> gEusartRXBuffer(BANK6[70]), STR_14(CODE[14]), Esp8266SetNetworkParameters@wCommand(BANK2[70]), Esp8266OpenSocketCommand@wCommand(BANK8[70]), 
		 -> wI2CRxBuffer(BANK4[20]), EM1812EntryPoint@SetGetTempCommand(BANK1[4]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 70
		 -> gEusartRXBuffer(BANK6[70]), STR_14(CODE[14]), Esp8266SetNetworkParameters@wCommand(BANK2[70]), Esp8266OpenSocketCommand@wCommand(BANK8[70]), 
		 -> wI2CRxBuffer(BANK4[20]), EM1812EntryPoint@SetGetTempCommand(BANK1[4]), 

    memcmp@vr	PTR const void  size(2) Largest target is 18
		 -> STR_24(CODE[18]), STR_23(CODE[3]), STR_21(CODE[3]), 

    memcmp@r	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_24(CODE[18]), STR_23(CODE[3]), STR_21(CODE[3]), 

    memcmp@vl	PTR const void  size(1) Largest target is 70
		 -> Esp8266Entrypoint@wEspBuffer(BANK9[70]), 

    memcmp@l	PTR const unsigned char  size(1) Largest target is 70
		 -> Esp8266Entrypoint@wEspBuffer(BANK9[70]), 

    EusartGetRxBuffer@oData	PTR unsigned char  size(1) Largest target is 70
		 -> Esp8266Entrypoint@wEspBuffer(BANK9[70]), 

    EusartGetRxBuffer@oNbOfByteReceived	PTR unsigned char  size(1) Largest target is 1
		 -> Esp8266Entrypoint@wEusartNbByteReceived(BANK9[1]), 

    Send_UART_Data@iData	PTR unsigned char  size(2) Largest target is 70
		 -> STR_14(CODE[14]), Esp8266SetNetworkParameters@wCommand(BANK2[70]), Esp8266OpenSocketCommand@wCommand(BANK8[70]), 

    Esp8266Entrypoint@wCommandAnswer	PTR unsigned char  size(1) Largest target is 70
		 -> Esp8266Entrypoint@wEspBuffer(BANK9[70]), 

    Esp8266SetNetworkParameters@iWifiPassword	PTR unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[9]), 

    Esp8266SetNetworkParameters@iWifiNetworkName	PTR unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[7]), 

    Esp8266OpenSocketCommand@iDestination	PTR unsigned char  size(2) Largest target is 14
		 -> STR_19(CODE[14]), 

    Esp8266OpenSocketCommand@iType	PTR unsigned char  size(2) Largest target is 4
		 -> STR_18(CODE[4]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 75
		 -> Esp8266SetNetworkParameters@wCommand(BANK2[70]), Esp8266OpenSocketCommand@wCommand(BANK8[70]), wInterruptText(BANK5[75]), 

    uint16_tToa@wText	PTR unsigned char  size(1) Largest target is 7
		 -> Esp8266OpenSocketCommand@wPort(BANK8[7]), 

    sp__uint16_tToa	PTR unsigned char  size(1) Largest target is 7
		 -> Esp8266OpenSocketCommand@wPort(BANK8[7]), NULL(NULL[0]), 

    uint8_tToa@wText	PTR unsigned char  size(1) Largest target is 4
		 -> Esp8266Entrypoint@wReturnNumber(BANK9[4]), 

    sp__uint8_tToa	PTR unsigned char  size(1) Largest target is 4
		 -> Esp8266Entrypoint@wReturnNumber(BANK9[4]), NULL(NULL[0]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 75
		 -> Esp8266SetNetworkParameters@wCommand(BANK2[70]), Esp8266OpenSocketCommand@wCommand(BANK8[70]), wInterruptText(BANK5[75]), 

    AddTrace@iText	PTR unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[9]), STR_1(CODE[12]), main@wReadout(BANK1[20]), 

    AddTrace@oText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK5[75]), 

    sp__moveToNextChar	PTR unsigned char  size(1) Largest target is 70
		 -> Esp8266Entrypoint@wEspBuffer(BANK9[70]), 

    moveToNextChar@iText	PTR unsigned char  size(1) Largest target is 70
		 -> Esp8266Entrypoint@wEspBuffer(BANK9[70]), 

    GetNewReceivedData@oData	PTR unsigned char  size(1) Largest target is 8
		 -> EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 

    sp__memcpy	PTR void  size(2) Largest target is 70
		 -> gEusartTXBuffer(BANK7[70]), Esp8266Entrypoint@wEspBuffer(BANK9[70]), wI2CTxBuffer(BANK4[20]), EM1812EntryPoint@ReceptionBuffer(BANK1[8]), 

    I2C_SendData@iData	PTR unsigned char  size(1) Largest target is 4
		 -> EM1812EntryPoint@SetGetTempCommand(BANK1[4]), 

    EM1812EntryPoint@oTemperature	PTR short  size(1) Largest target is 2
		 -> wTemperature(BANK3[2]), 

    EM1812EntryPoint@oHumidity	PTR short  size(1) Largest target is 2
		 -> wHumidity(BANK3[2]), 

    printEM1812@oTextOut	PTR unsigned char  size(1) Largest target is 20
		 -> main@wReadout(BANK1[20]), 

    lcdWriteAllText@iText	PTR unsigned char  size(2) Largest target is 70
		 -> Esp8266Entrypoint@wEspBuffer(BANK9[70]), STR_20(CODE[8]), STR_17(CODE[6]), STR_13(CODE[9]), 

    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
		 -> Esp8266Entrypoint@wReturnNumber(BANK9[4]), STR_25(CODE[4]), STR_22(CODE[4]), NULL(NULL[0]), 
		 -> myint@wText_501(BANK0[3]), myint@wText(BANK0[3]), wInterruptText(BANK5[75]), 

    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
		 -> main@wEnterBottonPressed(BANK1[1]), main@wDownBottonPressed(BANK1[1]), main@wUpBottonPressed(BANK1[1]), 

    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
		 -> main@wDebounceDown(BANK1[2]), main@wDebounceUp(BANK1[2]), main@wDebounceEnter(BANK1[2]), 

    sp__memset	PTR void  size(1) Largest target is 75
		 -> wI2CRxBuffer(BANK4[20]), wI2CTxBuffer(BANK4[20]), wInterruptText(BANK5[75]), 

    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK5[75]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myint in COMMON

    _myint->i1_lcdWriteText
    i1_lcdWriteText->i1_writeTxtChk
    i1_writeTxtChk->i1_setCursorPosition
    i1_setCursorPosition->i1_waitLCDBusy

Critical Paths under _main in BANK0

    _main->_AddTrace
    _main->_Esp8266Entrypoint
    _setNotBlinkingCursor->_writeInsChk
    _setCursorOff->_writeInsChk
    _printEM1812->___awdiv
    _powerOnLcd->_writeInsChk
    _moveCursorToHome->_writeInsChk
    _initLCD->_writeInsChk
    _clearDisplay->_writeInsChk
    _writeInsChk->_waitLCDBusy
    _writeInsChk->_writeInsNoChk
    _writeInsNoChk->_setData
    _PrintLog->_lcdWriteText
    _I2CInit->_memset
    _Esp8266Entrypoint->_Esp8266OpenSocketCommand
    _uint8_tToa->___awdiv
    _lcdWriteText->_uint8_tToa
    _lcdWriteAllText->_writeTxtChk
    _writeTxtChk->_setCursorPosition
    _setCursorPosition->_waitLCDBusy
    _EusartGetRxBuffer->_memcpy
    _Esp8266SetNetworkParameters->_strcat
    _Esp8266OpenSocketCommand->_strcat
    _uint16_tToa->___lwdiv
    _Send_UART_Data->_memcpy
    _EM1812EntryPoint->_I2C_SendData
    _I2C_SendData->_memcpy
    _GetNewReceivedData->_memcpy
    _AddTrace->_strcat
    _strcat->_uint16_tToa
    _strcpy->_strlen

Critical Paths under _myint in BANK0

    _myint->i1_lcdWriteText

Critical Paths under _main in BANK1

    _Esp8266Entrypoint->_Esp8266SetNetworkParameters

Critical Paths under _myint in BANK1

    None.

Critical Paths under _main in BANK2

    _Esp8266Entrypoint->_Esp8266SetNetworkParameters

Critical Paths under _myint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myint in BANK7

    None.

Critical Paths under _main in BANK8

    _Esp8266Entrypoint->_Esp8266OpenSocketCommand

Critical Paths under _myint in BANK8

    None.

Critical Paths under _main in BANK9

    _main->_Esp8266Entrypoint

Critical Paths under _myint in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myint in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myint in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myint in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0   60781
                                             14 BANK1     48    48      0
                           _AddTrace
                           _Debounce
                   _EM1812EntryPoint
                         _EUSARTInit
                  _Esp8266Entrypoint
                  _Esp8266OpenSocket
          _Esp8266SetAccessPointMode
                   _Esp8266SetupWifi
                            _I2CInit
                           _PrintLog
                       _clearDisplay
                            _initLCD
                             _memset
                   _moveCursorToHome
                         _powerOnLcd
                        _printEM1812
                       _setCursorOff
                  _setCursorPosition
               _setNotBlinkingCursor
 ---------------------------------------------------------------------------------
 (1) _setNotBlinkingCursor                                 1     1      0     254
                                             22 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _setCursorOff                                         1     1      0     254
                                             22 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _printEM1812                                         10     7      3    3824
                                             25 BANK0     10     7      3
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _powerOnLcd                                           1     1      0     254
                                             22 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _moveCursorToHome                                     0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     632
                                             22 BANK0      1     1      0
                       _clearDisplay
                            _setData
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _clearDisplay                                         0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _writeInsChk                                          1     1      0     254
                                             21 BANK0      1     1      0
                        _waitLCDBusy
                      _writeInsNoChk
 ---------------------------------------------------------------------------------
 (3) _writeInsNoChk                                        2     2      0     186
                                             19 BANK0      2     2      0
                 _SetToSendDataToLCD
                            _setData
 ---------------------------------------------------------------------------------
 (1) _PrintLog                                             4     4      0    5227
                                             40 BANK0      4     4      0
                       _lcdWriteText
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _I2CInit                                              0     0      0    1881
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                              10     6      4    1881
                                             16 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _Esp8266SetupWifi                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Esp8266SetAccessPointMode                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Esp8266OpenSocket                                    1     1      0       0
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Esp8266Entrypoint                                   78    78      0   33689
                                             44 BANK0      2     2      0
                                              0 BANK9     76    76      0
           _Esp8266OpenSocketCommand
        _Esp8266SetNetworkParameters
            _EusartGetNbByteReceived
                  _EusartGetRxBuffer
                     _Send_UART_Data
                    _lcdWriteAllText
                       _lcdWriteText
                             _memcmp
                     _moveToNextChar
                         _uint8_tToa
 ---------------------------------------------------------------------------------
 (2) _uint8_tToa                                           9     7      2    3653
                                             25 BANK0      9     7      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _moveToNextChar                                       5     4      1     442
                                             16 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _memcmp                                              10     6      4     911
                                             16 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) _lcdWriteText                                         6     4      2    2212
                                             34 BANK0      6     4      2
                         _uint8_tToa (ARG)
                        _writeTxtChk
 ---------------------------------------------------------------------------------
 (2) _lcdWriteAllText                                      7     5      2    2164
                                             29 BANK0      7     5      2
                        _writeTxtChk
 ---------------------------------------------------------------------------------
 (3) _writeTxtChk                                          3     3      0    1612
                                             26 BANK0      3     3      0
                 _SetToSendDataToLCD
                  _setCursorPosition
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (1) _setCursorPosition                                    5     4      1    1327
                                             21 BANK0      5     4      1
                 _SetToSendDataToLCD
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (3) _waitLCDBusy                                          5     5      0      37
                                             16 BANK0      5     5      0
               _SetToReadDataFromLCD
 ---------------------------------------------------------------------------------
 (4) _SetToReadDataFromLCD                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setData                                              3     3      0     124
                                             16 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _SetToSendDataToLCD                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EusartGetRxBuffer                                    5     3      2    1766
                                             28 BANK0      5     3      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _EusartGetNbByteReceived                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Esp8266SetNetworkParameters                         89    83      6   10771
                                              0 BANK1     14     8      6
                                              0 BANK2     75    75      0
                     _Send_UART_Data
                            ___awdiv
                            ___awmod
                             _strcat
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1333
                                             16 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1345
                                             16 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _Esp8266OpenSocketCommand                            86    80      6    9287
                                             43 BANK0      1     1      0
                                              0 BANK1      6     0      6
                                              0 BANK8     79    79      0
                     _Send_UART_Data
                             _strcat
                             _strcpy
                             _strlen
                        _uint16_tToa
 ---------------------------------------------------------------------------------
 (3) _uint16_tToa                                         15    12      3    1637
                                             24 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     421
                                             16 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _Send_UART_Data                                       5     2      3    1997
                                             28 BANK0      5     2      3
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _EUSARTInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EM1812EntryPoint                                    20    18      2    3954
                                             33 BANK0      7     5      2
                                              0 BANK1     13    13      0
                       _GetI2CStatus
                 _GetNewReceivedData
                        _I2C_GetData
                       _I2C_SendData
 ---------------------------------------------------------------------------------
 (2) _I2C_SendData                                         5     3      2    1583
                                             28 BANK0      5     3      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _I2C_GetData                                          4     2      2     183
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _GetNewReceivedData                                   4     3      1    1521
                                             28 BANK0      4     3      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              12     6      6    1333
                                             16 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) _GetI2CStatus                                         4     2      2       0
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Debounce                                             5     3      2     788
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _AddTrace                                            10     7      3    5346
                                             43 BANK0      3     0      3
                                              0 BANK1      7     7      0
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     0      4    3387
                                             39 BANK0      4     0      4
                             _strcpy
                             _strlen
                        _uint16_tToa (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     940
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                              12     8      4     527
                                             22 BANK0     12     8      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _myint                                               11    11      0    1708
                                              5 BANK0     11    11      0
                    _EUSARTInterrupt
                      _I2C_Interrupt
                  _TempUpdateRequest
                     i1_lcdWriteText
 ---------------------------------------------------------------------------------
 (8) i1_lcdWriteText                                       6     4      2    1282
                                             13 COMMON     1     1      0
                                              0 BANK0      5     3      2
                      i1_writeTxtChk
 ---------------------------------------------------------------------------------
 (9) i1_writeTxtChk                                        3     3      0    1082
                                             10 COMMON     3     3      0
               i1_SetToSendDataToLCD
                i1_setCursorPosition
                          i1_setData
                      i1_waitLCDBusy
 ---------------------------------------------------------------------------------
 (10) i1_setCursorPosition                                 5     4      1     797
                                              5 COMMON     5     4      1
               i1_SetToSendDataToLCD
                          i1_setData
                      i1_waitLCDBusy
 ---------------------------------------------------------------------------------
 (10) i1_waitLCDBusy                                       5     5      0      37
                                              0 COMMON     5     5      0
             i1_SetToReadDataFromLCD
 ---------------------------------------------------------------------------------
 (11) i1_SetToReadDataFromLCD                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_setData                                           3     3      0     124
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (11) i1_SetToSendDataToLCD                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TempUpdateRequest                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_Interrupt                                        5     3      2      26
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (8) _EUSARTInterrupt                                      5     3      2      24
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AddTrace
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
       _uint16_tToa (ARG)
         ___lwdiv
         ___lwmod
     _strlen
   _Debounce
   _EM1812EntryPoint
     _GetI2CStatus
     _GetNewReceivedData
       _memcpy
     _I2C_GetData
     _I2C_SendData
       _memcpy
   _EUSARTInit
   _Esp8266Entrypoint
     _Esp8266OpenSocketCommand
       _Send_UART_Data
         _memcpy
       _strcat
         _strcpy
           _strlen (ARG)
         _strlen
         _uint16_tToa (ARG)
           ___lwdiv
           ___lwmod
       _strcpy
         _strlen (ARG)
       _strlen
       _uint16_tToa
         ___lwdiv
         ___lwmod
     _Esp8266SetNetworkParameters
       _Send_UART_Data
         _memcpy
       ___awdiv
       ___awmod
       _strcat
         _strcpy
           _strlen (ARG)
         _strlen
         _uint16_tToa (ARG)
           ___lwdiv
           ___lwmod
       _strcpy
         _strlen (ARG)
       _strlen
     _EusartGetNbByteReceived
     _EusartGetRxBuffer
       _memcpy
     _Send_UART_Data
       _memcpy
     _lcdWriteAllText
       _writeTxtChk
         _SetToSendDataToLCD
         _setCursorPosition
           _SetToSendDataToLCD
           _setData
           _waitLCDBusy
             _SetToReadDataFromLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
     _lcdWriteText
       _uint8_tToa (ARG)
         ___awdiv
         ___awmod
       _writeTxtChk (ARG)
         _SetToSendDataToLCD
         _setCursorPosition
           _SetToSendDataToLCD
           _setData
           _waitLCDBusy
             _SetToReadDataFromLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
     _memcmp
     _moveToNextChar
     _uint8_tToa
       ___awdiv
       ___awmod
   _Esp8266OpenSocket
   _Esp8266SetAccessPointMode
   _Esp8266SetupWifi
   _I2CInit
     _memset
   _PrintLog
     _lcdWriteText
       _uint8_tToa (ARG)
         ___awdiv
         ___awmod
       _writeTxtChk (ARG)
         _SetToSendDataToLCD
         _setCursorPosition
           _SetToSendDataToLCD
           _setData
           _waitLCDBusy
             _SetToReadDataFromLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
     _memset
     _strlen
   _clearDisplay
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _initLCD
     _clearDisplay
       _writeInsChk
         _waitLCDBusy
           _SetToReadDataFromLCD
         _writeInsNoChk
           _SetToSendDataToLCD
           _setData
     _setData
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _memset
   _moveCursorToHome
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _powerOnLcd
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _printEM1812
     ___awdiv
     ___awmod
   _setCursorOff
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _setCursorPosition
     _SetToSendDataToLCD
     _setData
     _waitLCDBusy
       _SetToReadDataFromLCD
   _setNotBlinkingCursor
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData

 _myint (ROOT)
   _EUSARTInterrupt
   _I2C_Interrupt
   _TempUpdateRequest
   i1_lcdWriteText
     i1_writeTxtChk
       i1_SetToSendDataToLCD
       i1_setCursorPosition
         i1_SetToSendDataToLCD
         i1_setData
         i1_waitLCDBusy
           i1_SetToReadDataFromLCD
       i1_setData
       i1_waitLCDBusy
         i1_SetToReadDataFromLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     3E      3F       7       78.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     4B      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      1B      11       33.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      44      13       85.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      4B      15       93.8%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      46      17       87.5%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0      46      19       87.5%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     2AD      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50     4F      4F      22       98.8%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50     4C      4C      24       95.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     2AD      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Mar 13 21:53:19 2019

                                            pc 0002                                     __CFG_FOSC$ 0002  
                                  __CFG_CP$OFF 0000                                    _SSPSTATbits 0214  
                                 ___awdiv@sign 0036                             _SetToSendDataToLCD 12E3  
                         __size_of_I2C_GetData 0036           __size_of_Esp8266SetNetworkParameters 013A  
                                  ?_EUSARTInit 0070                                            l301 12EE  
                                          l150 171F                                            l310 150E  
                                          l142 14B5                                            l143 14B5  
                                          l304 12E8                                            l146 16EB  
                                          l250 145F                                            l322 134B  
                                          l170 02B3                                            l147 16F2  
                                          l307 1506                                            l251 145F  
                                          l171 029F                                            l148 1705  
                                          l308 14EE                                            l260 0858  
                                          l316 1335                                            l420 0D73  
                                          l180 02E6                                            l172 028E  
                                          l149 171F                                            l309 150E  
                                          l261 089D                                            l245 0A21  
                                          l325 1340                                            l181 02C4  
                                          l173 02B2                                            l165 01A6  
                                          l262 089D                                            l254 088C  
                                          l190 0320                                            l182 02CC  
                                          l174 028F                                            l166 0248  
                                          l255 0845                                            l191 0320  
                                          l183 02CD                                            l175 0297  
                                          l167 0247                                            l360 091F  
                                          l280 0C47                                            l256 086A  
                                          l248 144E                                            l600 1696  
                                          l352 1302                                            l184 0307  
                                          l176 0298                                            l361 092A  
                                          l281 0C6A                                            l257 0846  
                                          l249 1439                                            l601 1691  
                                          l417 0CD3                                            l185 0300  
                                          l177 02E7                                            l169 01D2  
                                          l450 054A                                            l274 165A  
                                          l362 095B                                            l290 0C7B  
                                          l282 0C54                                            l258 0886  
                                          l610 0DF7                                            l418 0D2B  
                                          l186 0306                                            l178 02D2  
                                          l443 060E                                            l451 0549  
                                          l355 092C                                            l291 0C82  
                                          l283 0C69                                            l259 084F  
                                          l611 0E25                                            l419 0D40  
                                          l187 0314                                            l179 02C3  
                                          l604 17AD                                            l460 0607  
                                          l452 056F                                            l444 050A  
                                          l356 0900                                            l292 0C8B  
                                          l284 0C61                                            l612 0E15  
                                          l188 031E                                            l605 17AD  
                                          l541 172F                                            l461 05C3  
                                          l453 056E                                            l445 0520  
                                          l621 0B4B                                            l357 0942  
                                          l285 0C68                                            l277 0C2F  
                                          l613 0E24                                            l533 1570  
                                          l349 12D6                                            l189 031F  
                                          l550 15A6                                            l542 174D  
                                          l446 0620                                            l462 05CD  
                                          l454 056D                                            l622 0B8C  
                                          l358 0909                                            l286 0C8D  
                                          l278 0CC3                                            l710 038B  
                                          l543 1751                                            l463 05F1  
                                          l455 0570                                            l447 0521  
                                          l623 0B55                                            l359 0914  
                                          l287 0C6D                                            l279 0C6C  
                                          l711 0324                                            l295 132A  
                                          l536 1315                                            l544 1764  
                                          l464 05FC                                            l456 057C  
                                          l448 052D                                            l624 0B73  
                                          l288 0CA4                                            l608 0DCF  
                                          l720 04E7                                            l712 039F  
                                          l553 13C0                                            l465 0623  
                                          l457 057D                                            l449 052E  
                                          l625 0B5A                                            l801 12C8  
                                          l289 0C74                                            l609 0E27  
                                          l721 03B0                                            l713 0341  
                                          l554 13C0                                            l466 0609  
                                          l458 058A                                            l626 0B81  
                                          l618 0B0E                                            l730 041A  
                                          l722 03B9                                            l714 0365  
                                          l298 139D                                            l547 15A3  
                                          l539 1761                                            l467 060B  
                                          l459 0608                                            l619 0B4E  
                                          l731 0440                                            l723 03DB  
                                          l715 0366                                            l468 060C  
                                          l804 0823                                            l708 04CC  
                                          l740 04C7                                            l732 0497  
                                          l724 03DA                                            l716 0386  
                                          l549 1580                                            l805 083F  
                                          l741 04C9                                            l733 0441  
                                          l725 03E6                                            l717 0386  
                                          l709 0323                                            l806 0841  
                                          l742 04CA                                            l734 0442  
                                          l726 03E7                                            l718 03AC  
                                          l727 04C8                                            l735 047D  
                                          l719 03AF                                            l743 04E7  
                                          l728 0483                                            l737 046C  
                                          l729 0419                                            l738 047E  
                                          l682 12CC                                            l691 0678  
                                          l739 047E                                            l780 136D  
                                          l693 0673                                            l597 1683  
                                          l685 12D1                                            l678 07F5  
                                          l694 075D                                            l598 1660  
                                          l783 13ED                                            l679 07FE  
                                          l695 075D                                            l599 167F  
                                          l784 140B                                            l960 0A6E  
                                          l696 06FF                                            l688 130B  
                                          l785 140B                                            l961 0A7A  
                                          l953 0A30                                            l697 0708  
                                          l962 0A86                                            l954 0A3E  
                                          l970 08BF                                            l698 0727  
                                          l963 0A8B                                            l955 0A7B  
                                          l971 08CE                                            l699 0734  
                                          l956 0A53                                            l972 08CF  
           Esp8266SetNetworkParameters@iHidden 00A5                                            l957 0A49  
                                          l973 08DE                                            l958 0A58  
                                          l974 08EA                                            l966 08AC  
                                          l959 0A59                                            l975 08F6  
                                          l967 08B6                                            l976 08FB  
                                          l968 08EB                                            l969 08C9  
                              __end_of_I2CInit 1571                          _wReceptionCounterPrev 01AB  
                                 ___awmod@sign 0036                                   __CFG_BORV$LO 0000  
                   __size_of_EusartGetRxBuffer 0042                                            wreg 0009  
                          ?_SetToSendDataToLCD 0070             I2C_GetData@iRxNumberOfByteExpected 0030  
                                         S6860 1018                                           S6872 1000  
                                         S6856 100E                      EM1812EntryPoint@oHumidity 00AC  
                                 __CFG_LVP$OFF 0000                                 ??_lcdWriteText 0044  
          Esp8266SetNetworkParameters@iChannel 00A4                                 myint@wI2CError 002C  
                                         l1100 161E                                           l1090 16DA  
                                         l1250 17E6                                           l1083 16D5  
                                         l1084 16AD                                           l1252 17FE  
                                         l1244 17C5                                           l1085 16A3  
                                         l1093 1619                                           l1253 17FF  
                                         l1245 17B9                                           l1086 16B2  
                                         l1094 15F7                                           l1262 0E36  
                                         l1087 16B3                                           l1095 15ED  
                                         l1247 17DC                                           l1263 0EDB  
                                         l1280 1416                                           l1256 1530  
                                         l1088 16C8                                           l1096 15FC  
                                         l1248 17DD                                           l1264 0E55  
                                         l1281 1435                                           l1257 1519  
                                         l1089 16D4                                           l1097 15FD  
                                         l1265 0E89                                           l1282 1435  
                                         l1258 153D                                           l1098 160C  
                                         l1266 0EA9                                           l1259 153D  
                                         l1099 1618                                           l1267 0ED4  
                                         l1276 1385                                           l1268 0EC3  
                                         l1285 13CC                                           l1269 0EDB  
                                         l1286 13C7                                           l1279 1417  
                                         l1287 13D6                                           l1288 13E4  
                                         l5200 1521                                           l5120 1654  
                                         l6000 03C2                                           l5210 1417  
                                         l5202 1525                                           l5122 1656  
                                         l5114 12E9                                           l5130 14E5  
                                         l6010 03E7                                           l6002 03C7  
                                         l5204 152B                                           l6100 053E  
                                         l5220 16A8                                           l5212 1697  
                                         l5124 1658                                           l5116 1621  
                                         l5140 1502                                           l5132 14E8  
                                         l5300 0C35                                           l6020 041A  
                                         l6012 03EF                                           l6004 03D3  
                                         l5150 13CC                                           l5206 1530  
                                         l6110 0568                                           l6102 0544  
                                         l5230 16C8                                           l5222 16AD  
                                         l5214 169A                                           l5126 12E3  
                                         l5118 1622                                           l5142 1504  
                                         l5134 14F1                                           l5310 0C54  
                                         l5302 0C3B                                           l6030 0457  
                                         l6022 042F                                           l6014 03FC  
                                         l6006 03DB                                           l5208 140C  
                                         l5152 13D6                                           l6120 0576  
                                         l6112 0569                                           l6104 054A  
                                         l5400 13F8                                           l5232 16CD  
                                         l5224 16B3                                           l5216 16A0  
                                         l5240 15EA                                           l5136 14FD  
                                         l5128 14E2                                           l5160 0909  
                                         l5320 0C74                                           l5312 0C5B  
                                         l5304 0C41                                           l6032 046C  
                                         l6024 0436                                           l6040 0483  
                                         l6016 0403                                           l6008 03E3  
                                         l6200 0D59                                           l5154 13E4  
                                         l5146 13C1                                           l6130 0595  
                                         l6122 057A                                           l6114 056A  
                                         l6106 0555                                           l5226 16C2  
                                         l5218 16A3                                           l5234 16D5  
                                         l5250 1607                                           l5242 15ED  
                                         l5410 0A30                                           l5402 0A22  
                                         l5138 14FE                                           l5162 0914  
                                         l5170 0942                                           l5322 0C7B  
                                         l5314 0C61                                           l5306 0C47  
                                         l5330 0C8D                                           l6050 04C4  
                                         l6034 0473                                           l6026 0439  
                                         l6042 0497                                           l6018 0405  
                                         l6210 1303                                           l6202 0D68  
                                         l5148 13C7                                           l6140 05D2  
                                         l6132 059D                                           l6124 057D  
                                         l6116 056B                                           l6108 0564  
                                         l5236 16DA                                           l5228 16C6  
                                         l5252 160C                                           l5244 15F2  
                                         l5420 0A46                                           l5412 0A34  
                                         l5404 0A24                                           l5180 0956  
                                         l5172 0945                                           l5164 091F  
                                         l5156 08FE                                           l5340 0CAD  
                                         l5324 0C82                                           l5332 0CA4  
                                         l5316 0C6B                                           l5308 0C4E  
                                         l6052 04CB                                           l6044 049D  
                                         l6036 0476                                           l6028 0442  
                                         l6212 1305                                           l6204 0D6C  
                                         l6300 0128                                           l6206 1767  
                                         l6150 0609                                           l6142 05F1  
                                         l6134 05A2                                           l6126 0588  
                                         l6118 0570                                           l5254 1611  
                                         l5246 15F7                                           l5238 15E3  
                                         l5430 0A68                                           l5422 0A49  
                                         l5414 0A39                                           l5406 0A28  
                                         l5174 0948                                           l5166 092B  
                                         l5158 0900                                           l5342 0CB7  
                                         l5334 0CA7                                           l5326 0C88  
                                         l5318 0C6D                                           l6046 04A6  
                                         l6038 0482                                           l6054 04CC  
                                         l6214 12C9                                           l5190 138D  
                                         l6310 0152                                           l6302 0134  
                                         l6230 00DC                                           l5352 136E  
                                         l6208 179F                                           l5600 174D  
                                         l6152 060D                                           l6144 05FC  
                                         l6136 05C3                                           l6128 058A  
                                         l6080 050A                                           l5248 15FD  
                                         l5256 1619                                           l5360 0B0E  
                                         l5440 0A80                                           l5432 0A6C  
                                         l5424 0A4E                                           l5416 0A3E  
                                         l5408 0A2D                                           l5176 094A  
                                         l5168 092C                                           l5344 0CBC  
                                         l5336 0CAA                                           l5328 0C8C  
                                         l5520 144E                                           l6048 04BE  
                                         l6216 12CD                                           l5192 138E  
                                         l6400 02BF                                           l6320 0173  
                                         l6312 0155                                           l6304 0137  
                                         l6240 00EF                                           l6232 00E8  
                                         l5354 1385                                           l5610 1758  
                                         l5602 1750                                           l6146 0601  
                                         l6138 05CD                                           l6090 0527  
                                         l6082 0519                                           l6154 060E  
                                         l5258 161E                                           l5370 0B4B  
                                         l5362 0B22                                           l5442 0A86  
                                         l5434 0A6E                                           l5426 0A53  
                                         l5418 0A40                                           l5450 08A4  
                                         l5178 094B                                           l5346 0CBE  
                                         l5338 0CAC                                           l5290 0C27  
                                         l5514 1436                                           l6218 12CF  
                                         l5530 0E3E                                           l5522 0E2A  
                                         l5194 1398                                           l5186 1388  
                                         l6170 0CC7                                           l6402 02C4  
                                         l6410 02E7                                           l6330 0193  
                                         l6322 0183                                           l6314 0161  
                                         l6306 0143                                           l6250 00F5  
                                         l6242 00F0                                           l6234 00EB  
                                         l5620 130C                                           l5196 150F  
                                         l5612 175A                                           l5604 1751  
                                         l6148 0606                                           l6092 052B  
                                         l6084 051C                                           l6156 0620  
                                         l6076 04EA                                           l5380 0B6E  
                                         l5372 0B4D                                           l5364 0B32  
                                         l5356 0AFE                                           l5444 0A8B  
                                         l5436 0A73                                           l5428 0A59  
                                         l5460 08BC                                           l5452 08A9  
                                         l5292 0C2E                                           l5516 1439  
                                         l5700 0E1E                                           l5540 0E66  
                                         l5532 0E4A                                           l5524 0E2E  
                                         l5188 138B                                           l6180 0CF3  
                                         l6172 0CCB                                           l6420 02F7  
                                         l6412 02ED                                           l6404 02CD  
                                         l6340 01A6                                           l6332 0195  
                                         l6324 0185                                           l6316 0164  
                                         l6308 0146                                           l6260 00FF  
                                         l6252 00F7                                           l6244 00F1  
                                         l6236 00ED                                           l6228 00D5  
                                         l5622 1315                                           l5198 1519  
                                         l5630 1586                                           l5614 1760  
                                         l5606 1752                                           l6158 0623  
                                         l6094 052E                                           l6086 051E  
                                         l6078 04FA                                           l5390 13E5  
                                         l5382 0B73                                           l5374 0B4E  
                                         l5366 0B36                                           l5358 0B0C  
                                         l5710 0768                                           l5438 0A7B  
                                         l5470 08D9                                           l5462 08BF  
                                         l5454 08AC                                           l5446 089E  
                                         l5294 0C2F                                           l5518 1448  
                                         l5702 0E25                                           l5550 0E9E  
                                         l5542 0E72                                           l5534 0E54  
                                         l5526 0E35                                           l6190 0D2B  
                                         l6182 0D03                                           l6174 0CCD  
                                         l6430 030D                                           l6422 02FC  
                                         l6414 02EF                                           l6406 02D1  
                                         l6350 01D2                                           l6342 01A9  
                                         l6334 0196                                           l6326 0188  
                                         l6318 0170                                           l6270 0106  
                                         l6262 0101                                           l6254 00F9  
                                         l6246 00F2                                           l6238 00EE  
                                         l5640 1596                                           l5632 158B  
                                         l5624 1573                                           l5608 1754  
                                         l5616 1761                                           l6096 0539  
                                         l6088 0521                                           l5392 13EC  
                                         l5384 0B81                                           l5376 0B55  
                                         l5368 0B3C                                           l5712 07D6  
                                         l5480 08F6                                           l5472 08DE  
                                         l5464 08C4                                           l5456 08B0  
                                         l5448 08A0                                           l5720 0624  
                                         l5296 0C32                                           l5704 0E27  
                                         l5560 0EC3                                           l5552 0EA8  
                                         l5544 0E7E                                           l5536 0E55  
                                         l5528 0E36                                           l5288 1322  
                                         l6192 0D30                                           l6184 0D13  
                                         l6176 0CD3                                           l6168 0CC4  
                                         l6432 030F                                           l6424 0300  
                                         l6416 02F0                                           l6408 02D2  
                                         l6360 0215                                           l6352 01E2  
                                         l6344 01B4                                           l6336 0197  
                                         l6328 018B                                           l6280 010F  
                                         l6272 0108                                           l6264 0102  
                                         l6256 00FB                                           l6248 00F3  
                                         l5642 1598                                           l5634 1592  
                                         l5650 15A3                                           l5626 1579  
                                         l5618 1764                                           l6098 053A  
                                         l5394 13ED                                           l5386 0B8A  
                                         l5378 0B5A                                           l5714 07E6  
                                         l5706 075E                                           l5482 08FB  
                                         l5474 08E3                                           l5466 08C9  
                                         l5458 08B6                                           l5730 0678  
                                         l5722 062B                                           l5298 0C34  
                                         l5570 0842                                           l5562 0ECB  
                                         l5554 0EA9                                           l5546 0E88  
                                         l5538 0E5D                                           l6194 0D3B  
                                         l6186 0D1C                                           l6178 0CE3  
                                         l6434 0314                                           l6426 0303  
                                         l6418 02F5                                           l6370 024D  
                                         l6362 0226                                           l6354 01E8  
                                         l6346 01B5                                           l6338 0198  
                                         l6290 011B                                           l6282 0111  
                                         l6274 010C                                           l6266 0104  
                                         l6258 00FD                                           l5660 13AC  
                                         l5652 15A6                                           l5644 159A  
                                         l5636 1593                                           l5628 1580  
                                         l5396 13F3                                           l5388 0B8C  
                                         l5716 07F5                                           l5708 0761  
                                         l5468 08CF                                           l5476 08EB  
                                         l5740 06FF                                           l5732 06BC  
                                         l5724 0673                                           l5572 0846  
                                         l5580 086A                                           l5564 0ECF  
                                         l5556 0EBA                                           l5548 0E89  
                                         l5900 1569                                           l6196 0D40  
                                         l6188 0D26                                           l6436 031A  
                                         l6428 0307                                           l6380 0289  
                                         l6372 025D                                           l6364 0234  
                                         l6356 01F9                                           l6348 01C3  
                                         l6292 011E                                           l6284 0113  
                                         l6276 010D                                           l6268 0105  
                                         l5662 13BF                                           l5654 13A0  
                                         l5646 159C                                           l5638 1594  
                                         l5590 1722                                           l5398 13F4  
                                         l5718 07FE                                           l5478 08F0  
                                         l5750 0727                                           l5742 0706  
                                         l5734 06C3                                           l5726 0676  
                                         l5574 084F                                           l5582 0886  
                                         l5670 167B                                           l5566 0ED4  
                                         l5558 0EBE                                           l5910 156F  
                                         l5902 156A                                           l6198 0D4F  
                                         l6438 031C                                           l6390 029F  
                                         l6382 028C                                           l6374 026E  
                                         l6366 0242                                           l6358 0207  
                                         l6294 0121                                           l6286 0116  
                                         l6278 010E                                           l5656 13A5  
                                         l5648 15A2                                           l5592 1728  
                                         l5920 1366                                           l5912 1359  
                                         l5752 0734                                           l5744 0708  
                                         l5736 06F7                                           l5728 0677  
                                         l5760 12C5                                           l5576 0858  
                                         l5584 088C                                           l5672 167E  
                                         l5664 165D                                           l5680 0D76  
                                         l5904 156B                                           l5568 12D2  
                                         l6384 028F                                           l6392 02B3  
                                         l6376 0280                                           l6368 0248  
                                         l6296 0122                                           l6288 0119  
                                         l5658 13AB                                           l5594 172F  
                                         l5930 136C                                           l5922 1367  
                                         l5914 135F                                           l5754 0744  
                                         l5746 0714                                           l5738 06FD  
                                         l5762 12C8                                           l5770 0823  
                                         l5578 0869                                           l5674 167F  
                                         l5666 1660                                           l5690 0DCF  
                                         l5682 0DC2                                           l5906 156C  
                                         l6394 02B9                                           l6386 0298  
                                         l6378 0286                                           l6298 0125  
                                         l5596 1735                                           l5924 1368  
                                         l5916 1363                                           l5756 0753  
                                         l5748 071A                                           l5772 082C  
                                         l5764 0802                                           l5780 17BD  
                                         l5676 1691                                           l5668 166E  
                                         l5692 0DD4                                           l5684 0DC6  
                                         l5908 156D                                           l5860 149E  
                                         l5940 09F3                                           l5932 09BE  
                                         l6396 02BB                                           l6388 029E  
                                         l5870 16F2                                           l5598 1747  
                                         l5926 1369                                           l5918 1365  
                                         l5758 075C                                           l5774 083F  
                                         l5766 0808                                           l5790 17E6  
                                         l5782 17C1                                           l5678 1696  
                                         l5694 0DF7                                           l5686 0DCC  
                                         l5862 14A5                                           l5950 0A0F  
                                         l5942 09F6                                           l5934 09DA  
                                         l6398 02BC                                           l5872 16FF  
                                         l5864 16DD                                           l5928 136B  
                                         l5768 0810                                           l5792 17FF  
                                         l5784 17CB                                           l5776 17B0  
                                         l5696 0DFC                                           l5688 0DCE  
                                         l5880 153E                                           l5856 148D  
                                         l5952 0A1E                                           l5944 09FE  
                                         l5936 09E2                                           l5960 133C  
                                         l5874 1705                                           l5866 16E2  
                                         l5786 17DD                                           l5778 17B9  
                                         l5698 0E15                                           l5970 0322  
                                         l5890 1564                                           l5882 1544  
                                         l5858 1499                                           l5946 0A02  
                                         l5938 09E6                                           l5962 12FB  
                                         l5954 132B                                           l6850 02A7  
                                         l5876 1712                                           l5868 16EB  
                                         l5788 17E3                                           l5980 035C  
                                         l5972 0324                                           l5892 1565  
                                         l5884 155C                                           l5948 0A0A  
                                         l5964 12FF                                           l5956 1331  
                                         l6852 02DB                                           l5878 1719  
                                         l6870 0616                                           l6862 04D6  
                                         l6854 0395                                           l5982 0366  
                                         l5990 039F                                           l5974 032A  
                                         l5894 1566                                           l5886 1561  
                                         l5958 1336                                           l5966 1341  
                                         l6864 087E                                           l5992 03A5  
                                         l5984 037D                                           l5976 0332  
                                         l5896 1567                                           l5888 1563  
                                         l5968 1347                                           l6866 0C96  
                                         l6858 048D                                           l5994 03B0  
                                         l5986 038A                                           l5978 0341  
                                         l5898 1568                                           l6868 0934  
                                         l5996 03B2                                           l5988 038B  
                                         l5998 03B9                                           STR_1 184D  
                                         STR_2 1876                                           STR_3 1831  
                                         STR_4 18A2                                           STR_5 18AA  
                                         STR_6 1896                                           STR_7 1812  
                                         STR_8 1859                                           STR_9 18A2  
           Esp8266SetNetworkParameters@wNumber 0166                                           u4000 08E9  
                                         u4001 08E8                                           u4010 08F0  
                                         u4011 08EF                                           u4100 1728  
                                         u4101 1727                                           u4110 172E  
                                         u4030 145E                                           u4111 172D  
                                         u4031 145D                                           u4120 1735  
                                         u4200 1690                                           u4040 0E34  
                                         u4121 1734                                           u4201 168F  
                                         u4041 0E33                                           u4130 1579  
                                         u4210 0DCC                                           u4050 0E53  
                                         u4131 1578                                           u4211 0DCB  
                                         u4051 0E52                                           u4140 157F  
                                         u4300 17CB                                           u4220 0DD4  
                                         u4060 0E87                                           u4141 157E  
                                         u4301 17CA                                           u4205 168C  
                                         u4221 0DD3                                           u4061 0E86  
                                         u4150 1586                                           u4310 17DB  
                                         u4230 0DFC                                           u4070 0EA7  
                                         u4151 1585                                           u4311 17DA  
                                         u4231 0DFB                                           u4071 0EA6  
                                         u4400 16E2                                           u3520 153C  
                                         u4160 13A5                                           u3600 16D3  
                                         u4240 0768                                           u4320 17E3  
                                         u4080 0EDA                                           u4401 16E1  
                                         u3521 153B                                           u4161 13A4  
                                         u3601 16D2                                           u4241 0767  
                                         u3505 094E                                           u4321 17E2  
                                         u4081 0ED9                                           u3530 1434  
                                         u4410 16FF                                           u4170 13AB  
                                         u3610 15EA                                           u4250 062B  
                                         u4090 089C                                           u3531 1433  
                                         u4411 16FE                                           u4171 13AA  
                                         u3611 15E9                                           u4251 062A  
                                         u4091 089B                                           u3515 1391  
                                         u4420 1712                                           u3540 16A0  
                                         u4260 0672                                           u3700 0C2D  
                                         u4180 166E                                           u4500 046B  
                                         u4421 1711                                           u3541 169F  
                                         u4261 0671                                           u3701 0C2C  
                                         u4181 166D                                           u4501 046A  
                                         u3630 15FB                                           u4270 06C3  
                                         u3710 0C3B                                           u4190 167B  
                                         u4510 049D                                           u4430 03A5  
                                         u3631 15FA                                           u4271 06C2  
                                         u3711 0C3A                                           u4191 167A  
                                         u4511 049C                                           u4431 03A4  
                                         u4600 0588                                           u4520 0505  
                                         u3560 16B1                                           u3640 1607  
                                         u3800 0B80                                           u4280 071A  
                                         u3480 150D                                           u3720 0C41  
                                         u4440 03C2                                           u4601 0587  
                                         u3561 16B0                                           u3641 1606  
                                         u3625 15EE                                           u3801 0B7F  
                                         u4281 0719                                           u3465 1625  
                                         u3481 150C                                           u3721 0C40  
                                         u4441 03C1                                           u3490 13D5  
                                         u4610 0595                                           u4530 0519  
                                         u3810 13EB                                           u4290 0808  
                                         u3730 0C4E                                           u4450 03C7  
Esp8266SetNetworkParameters@wCommandSizeReturn 0169                                           u3491 13D4  
                                         u4611 0594                                           u4531 0518  
                                         u3811 13EA                                           u3555 16A4  
                                         u4291 0807                                           u3475 1636  
                                         u3731 0C4D                                           u4451 03C6  
                                         u4620 05A2                                           u4540 0527  
                                         u3820 13F3                                           u3580 16C2  
                                         u3660 1617                                           u3740 0C5B  
                                         u4460 03D3                                           u4700 01D1  
                                         u4621 05A1                                           u4541 0526  
                                         u3821 13F2                                           u3581 16C1  
                                         u3661 1616                                           u3645 1603  
                                         u3805 0B7C                                           u3741 0C5A  
                                         u4461 03D2                                           u4701 01D0  
                                         u4630 05D2                                           u4550 0539  
                                         u3910 0A79                                           u3830 0A28  
                                         u4470 03EF                                           u4390 149E  
                                         u4710 0286                                           u4631 05D1  
                                         u4551 0538                                           u3575 16B4  
                                         u3655 160D                                           u3911 0A78  
                                         u3831 0A27                                           u4471 03EE  
                                         u4391 149D                                           u4711 0285  
                                         u4560 0544                                           u3760 0B08  
                                         u3920 0A80                                           u3840 0A34  
                                         u4480 042F                                           u4640 0CCB  
                                         u4720 02B9                                           u4561 0543  
                                         u3585 16BE                                           u3921 0A7F  
                                         u3905 0A6F                                           u3841 0A33  
                                         u4481 042E                                           u4641 0CCA  
                                         u4721 02B8                                           u4705 01CD  
                                         u4570 0555                                           u3770 0B3C  
                                         u3850 0A46                                           u3930 08A4  
                                         u4490 0457                                           u4650 0D1C  
                                         u4730 02ED                                           u4571 0554  
                                         u3595 16C9                                           u3771 0B3B  
                                         u3851 0A45                                           u3931 08A3  
                                         u3755 0CB0                                           u4491 0456  
                                         u4651 0D1B                                           u4731 02EC  
                                         u4580 0564                                           u3780 0B4A  
                                         u3940 08B0                                           u4660 0D30  
                                         u4740 02F5                                           u4581 0563  
                                         u3781 0B49                                           u3941 08AF  
                                         u4661 0D2F                                           u4741 02F4  
                                         u4670 179F                                           u4590 0576  
                                         u3790 0B54                                           u3870 0A57  
                                         u3950 08BC                                           u4750 030D  
                                         u4671 179E                                           u4591 0575  
                                         u3791 0B53                                           u3871 0A56  
                                         u3951 08BB                                           u4751 030C  
                                         u4760 031A                                           u3865 0A4A  
                                         u4761 0319                                           u3890 0A68  
                                         u3970 08CD                                           u4690 01C3  
                                         u4675 179B                                           u3891 0A67  
                                         u3971 08CC                                           u4691 01C2  
                                         u4907 015B                                           u3980 08D9  
                                         u3885 0A5A                                           u3981 08D8  
                                         u3965 08C0                                           u4917 016A  
                                         u3895 0A64                                           u4695 01BF  
                                         u4927 018F                                           u3985 08D5  
                                         u4937 019E                                           u3995 08DF  
                                         u4947 09DE                                           u4957 09EA  
                                         u4877 012E                                           u4967 09F4  
                                         u4887 013D                                           u4977 09FB  
                                         u4897 014C                                           u4987 0A03  
                                         _TMR0 0015                                           _WPUB 020D  
                                 __CFG_WRT$OFF 0000              __size_of_Esp8266OpenSocketCommand 00A1  
                         printEM1812@wVariable 0039                      ?_Esp8266OpenSocketCommand 00A0  
                                         _main 00D5                                           _test 01A6  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                  __CFG_BOREN$ON 0000  
                                         start 0079                          __size_of_I2C_SendData 0045  
                                __CFG_IESO$OFF 0000                           ??_SetToSendDataToLCD 0030  
                        __size_of_GetI2CStatus 000A                           __end_of_clearDisplay 12D7  
                    __size_of_Esp8266SetupWifi 0005            Esp8266SetNetworkParameters@wCommand 0120  
                      I2C_Interrupt@oErrorCode 0074                        __size_of_moveToNextChar 003C  
                             ??_Send_UART_Data 003F                                   main@wCounter 00C8  
                                        ?_main 0070                                    _writeInsChk 1320  
                              __end_of___awdiv 0A8C                                          STR_10 18AA  
                                        STR_11 1899                                          STR_12 1894  
                                        STR_20 187F                                          STR_21 18AD  
                                        STR_13 186D                                          STR_22 189E  
                                        STR_14 1823                                          STR_23 18AD  
                                        STR_15 1887                                          STR_16 1864  
                                        STR_24 1800                                          STR_25 189E  
                                        STR_17 188E                                  __CFG_WDTE$OFF 0000  
                                        STR_18 18A6                                          STR_19 183F  
                              __end_of___awmod 08FC                                ___awdiv@divisor 0030  
                                 main@wReadout 00B4                                __end_of___lwdiv 16DB  
                                        i1l200 006C                                          i1l201 0060  
                                        i1l202 006B                                          i1l203 0077  
                                        i1l204 0077                                          i1l301 12E2  
                                        i1l310 14E1                                          i1l304 12DC  
                                        i1l250 148A                                          i1l307 14DA  
                                        i1l251 148A                                          i1l308 14C1  
                                        i1l309 14E1                                          i1l432 1357  
                                        i1l360 0981                                          i1l280 0BAE  
                                        i1l248 1478                                          i1l433 1358  
                                        i1l361 098D                                          i1l281 0BD0  
                                        i1l249 1462                                __end_of___lwmod 161F  
                                        i1l434 1358                                          i1l274 15E2  
                                        i1l362 09BD                                          i1l290 0BDF  
                                        i1l282 0BBB                                          i1l355 098F  
                                        i1l291 0BE5                                          i1l283 0BCF  
                                        i1l356 095F                                          i1l292 0BED  
                                        i1l284 0BC8                                          i1l357 09A5  
                                        i1l285 0BCE                                          i1l277 0B96  
                                        i1l358 0969                                          i1l286 0BEF  
                                        i1l278 0C24                                          i1l198 002B  
                                        i1l359 0975                                          i1l287 0BD3  
                                        i1l279 0BD2                                          i1l199 004B  
                                        i1l560 0EF7                                          i1l288 0C06  
                                        i1l561 0F72                                          i1l289 0BD9  
                                        i1l570 0F53                                          i1l562 0F11  
                                        i1l563 0F71                                          i1l571 0F6F  
                                        i1l580 0FEA                                          i1l572 0F6B  
                                        i1l564 0F3D                                          i1l557 0FED  
                                        i1l581 0FAD                                          i1l573 0F67  
                                        i1l565 0F30                                          i1l590 0FFF  
                                        i1l558 0FEC                                          i1l582 0FE9  
                                        i1l574 0F6A                                          i1l566 0F3A  
                                        i1l583 0FD5                                          i1l567 0F70  
                                        i1l575 0F6E                                          i1l559 0F73  
                                        i1l576 0FEB                                          i1l584 0FCC  
                                        i1l568 0F54                                          i1l585 0FD4  
                                        i1l577 0F93                                          i1l569 0F50  
                                        i1l586 0FE8                                          i1l578 0F87  
                                        i1l587 0FE2                                          i1l579 0F92  
                                        i1l588 0FE7                                          i1l589 0FF7  
                                        i1l790 0AAA                                          i1l791 0AF3  
                                        i1l792 0AC9                                          i1l794 0ABA  
                                        i1l795 0AF2                                          i1l796 0AE0  
                                        i1l788 0AAB                                          i1l797 0AF1  
                                        i1l789 0AA5                                          i1l798 0AFB  
                              ___awdiv@counter 0035                                          _RCREG 0199  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _PORTA 000C                                          _PORTB 000D  
                       printEM1812@wIsNegative 0040                                          _TRISB 008D  
                                        _TXREG 019A                                    _writeTxtChk 0C25  
                                __CFG_PWRTE$ON 0000                                 __CFG_FCMEN$OFF 0000  
                      ?i1_SetToReadDataFromLCD 0070                                __end_of_initLCD 0A22  
                       ??_SetToReadDataFromLCD 0030                               __end_of_AddTrace 17AE  
                                 _I2C_SendData 1720                                          _myint 0004  
                              __end_of_setData 165B                              ??_EUSARTInterrupt 0072  
                                 _GetI2CStatus 130C                              ?_EM1812EntryPoint 0041  
                     _wI2CRxNbOfByteToReceived 0055                         __size_of_I2C_Interrupt 0124  
                Esp8266Entrypoint@wCommandsize 016B                                          status 0003  
                                        wtemp0 007E                            __size_of_EUSARTInit 0015  
                             __end_of_Debounce 1720                         ??_setNotBlinkingCursor 0036  
                           ??_EM1812EntryPoint 0043                                 __CFG_MCLRE$OFF 0000  
                  Esp8266Entrypoint@wEspBuffer 04A0                                __initialization 007B  
                i1lcdWriteText@wCharReadingPos 007D                                   __end_of_main 0322  
                         _gEusartRXBufferIndex 0052                       __size_of_lcdWriteAllText 005C  
                          i1lcdWriteText@iText 0020                             __size_ofi1_setData 003C  
                                    ??_I2CInit 003A                                 __CFG_LPBOR$OFF 0000  
                               myint@wText_501 0029                                         ??_main 00AE  
         Esp8266OpenSocketCommand@iDestination 00A2                             I2C_GetData@iAdress 0033  
                                AddTrace@iText 004C                 __end_ofi1_SetToReadDataFromLCD 12E3  
                                AddTrace@oText 00A6                          __end_ofi1_writeTxtChk 0C25  
                             __end_of_PrintLog 14B6                                   ?_waitLCDBusy 0070  
                         EM1812EntryPoint@wTry 004E                               ___awdiv@dividend 0032  
                                       ?_myint 0070                                         _ANSELB 018D  
                                       i1l4400 0F79                                         i1l4410 0F97  
                                       i1l4402 0F7C                                         i1l4420 0FB8  
                                       i1l4412 0F9D                                         i1l4404 0F82  
                                       i1l4430 0FDC                                         i1l4422 0FBE  
                                       i1l4414 0F9F                                         i1l4406 0F87  
                                       i1l4350 0EE3                                         i1l4440 0FFF  
                                       i1l4432 0FE2                                         i1l4424 0FC6  
                                       i1l4416 0FA7                                         i1l4408 0F8D  
                                       i1l4360 0EFB                                         i1l4352 0EE8  
                                       i1l4344 0EDC                                         i1l5144 12DD  
                                       i1l4450 0AA5                                         i1l4442 0A8C  
                                       i1l4426 0FCE                                         i1l4418 0FB2  
                                       i1l4370 0F20                                         i1l4362 0F01  
                                       i1l4354 0EED                                         i1l4434 0FED  
                                       i1l4346 0EDD                                         i1l4460 0ABA  
                                       i1l4452 0AA7                                         i1l4444 0A91  
                                       i1l4436 0FF2                                         i1l4428 0FDA  
                                       i1l4380 0F37                                         i1l4372 0F24  
                                       i1l4364 0F09                                         i1l4356 0EF1  
                                       i1l4348 0EE2                                         i1l5260 15A8  
                                       i1l5500 09A8                                         i1l6220 1460  
                                       i1l4470 0AEC                                         i1l4462 0AC9  
                                       i1l4446 0A97                                         i1l4454 0AAB  
                                       i1l4438 0FF3                                         i1l4390 0F59  
                                       i1l4382 0F3A                                         i1l4374 0F26  
                                       i1l4366 0F0C                                         i1l4358 0EF3  
                                       i1l5270 12D7                                         i1l5262 15AA  
                                       i1l5502 09AB                                         i1l6222 1462  
                                       i1l4464 0AD0                                         i1l4456 0AB0  
                                       i1l4472 0AF3                                         i1l4448 0A9F  
                                       i1l4392 0F5A                                         i1l4384 0F41  
                                       i1l4376 0F2D                                         i1l4368 0F16  
                                       u300_20 0EFB                                         i1l4480 1355  
                                       i1l5264 15DC                                         i1l5280 14D1  
                                       i1l5272 14B6                                         i1l5504 09AD  
                                       i1l6224 1472                                         u300_21 0EFA  
                                       i1l4474 0AFB                                         i1l4466 0ADB  
                                       i1l4458 0AB5                                         i1l4394 0F5F  
                                       i1l4386 0F47                                         i1l4378 0F32  
                                       i1l4482 1356                                         i1l5266 15DE  
                                       i1l5282 14D2                                         i1l5274 14B9  
                                       i1l5506 09AE                                         i1l6226 1478  
                                       i1l4468 0AE0                                         i1l4396 0F64  
                                       i1l4388 0F4D                                         i1l4476 134C  
                                       i1l5268 15E0                                         i1l5284 14D6  
                                       i1l5276 14BC                                         i1l5508 09B9  
                                       i1l4398 0F77                                         i1l4478 1353  
                                       i1l5286 14D8                                         i1l5278 14C5  
                                       u301_20 0F01                                         i1l5800 0B99  
                                       u301_21 0F00                                         i1l5490 0975  
                                       i1l5810 0BAE                                         i1l5802 0B9B  
                                       i1l5492 0981                                         i1l5484 095D  
                                       i1l5820 0BD1                                         i1l5812 0BB5  
                                       i1l5804 0B9C                                         i1l6460 001D  
                                       i1l6452 0006                                         i1l5494 098E  
                                       i1l5486 095F                                         i1l5830 0BEA  
                                       i1l5822 0BD3                                         i1l5814 0BBB  
                                       i1l5806 0BA2                                         i1l6470 0039  
                                       i1l6462 0022                                         i1l6454 000B  
                                       u310_20 0F82                                         u302_20 0F16  
                                       i1l5488 0969                                         i1l5496 098F  
                                       i1l5840 0C0C                                         i1l5832 0BEE  
                                       i1l5824 0BD9                                         i1l5816 0BC2  
                                       i1l5808 0BA8                                         i1l6480 0050  
                                       i1l6472 003D                                         i1l6464 0023  
                                       i1l6456 0013                                         u310_21 0F81  
                                       u302_21 0F15                                         i1l5498 09A5  
                                       i1l5850 0C1F                                         i1l5842 0C0E  
                                       i1l5826 0BDF                                         i1l5818 0BC8  
                                       i1l5834 0BEF                                         i1l6490 0067  
                                       i1l6482 0054                                         i1l6474 0042  
                                       i1l6458 0019                                         i1l6466 002B  
                                       i1l5844 0C0F                                         i1l5828 0BE5  
                                       i1l5836 0C06                                         i1l6484 005B  
                                       i1l6492 006C                                         i1l6476 0043  
                                       i1l6468 0033                                         i1l5846 0C19  
                                       i1l5838 0C09                                         i1l6494 0070  
                                       i1l6486 0060                                         i1l6478 004B  
                                       u311_20 0F8D                                         u303_20 0F2D  
                                       i1l5848 0C1D                                         i1l6496 0071  
                                       i1l6488 0066                                         u311_21 0F8C  
                                       u303_21 0F2C                                         i1l5794 0B8E  
                                       i1l5796 0B95                                         i1l5798 0B96  
                                setData@iValue 0032                                         u320_20 0A97  
                                       u312_20 0F97                                         u304_20 0F41  
                                       u320_21 0A96                                         u312_21 0F96  
                                       u304_21 0F40                                         i1l6874 0BF8  
                                       i1l6876 0997                                         u321_20 0AB0  
                                       u313_20 0F9D                                         u305_20 0F47  
                                       u321_21 0AAF                                         u313_21 0F9C  
                                       u305_21 0F46                                         u322_20 0AB5  
                                       u314_20 0FB2                                         u306_20 0F4D  
                                       u322_21 0AB4                                         u314_21 0FB1  
                                       u306_21 0F4C                                         u402_25 09B1  
                                       u323_20 0AB9                                         u315_20 0FB8  
                                       u307_20 0F59                                         u323_21 0AB8  
                                       u315_21 0FB7                                         u307_21 0F58  
                                       u316_20 0FBE                                         u308_20 0F64  
                                       u316_21 0FBD                                         u308_21 0F63  
                                       u324_25 0ABE                                         u325_20 0AD0  
                                       u317_20 0FDA                                         u309_20 0F77  
                                       u325_21 0ACF                                         u317_21 0FD9  
                                       u309_21 0F76                                         u318_20 0FF2  
                                       u326_20 1353                                         u318_21 0FF1  
                                       u326_21 1352                                         u319_20 0A91  
                                       u319_21 0A90                                         u433_20 0B94  
                                       u433_21 0B93                              _setCursorPosition 08FC  
                                       u434_20 0BA2                                         u434_21 0BA1  
                                       u435_20 0BA8                                         u435_21 0BA7  
                                       u436_20 0BB5                                         u436_21 0BB4  
                                       u437_20 0BC2                                         u437_21 0BC1  
                                       u438_25 0C12                                         u367_25 15AD  
                                       u296_20 0EE2                                         u480_20 005B  
                                       u296_21 0EE1                                         u480_21 005A  
                                       u368_25 15BE                                         u297_20 0EE8  
                                       u369_20 14E0                                         u481_20 0066  
                                       u297_21 0EE7                                         u369_21 14DF  
                                       u481_21 0065                                         u298_20 0EED  
                                       u482_20 0070                                         u298_21 0EEC  
                                       u482_21 006F                                         u299_20 0EF1  
                                       u299_21 0EF0                                         u468_20 1489  
                                       u468_21 1488                                         u477_20 0019  
                                       u477_21 0018                                         u478_20 0039  
                                       u478_21 0038                                         u479_20 0050  
                                       u479_21 004F                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _SSPADD 0212  
                                       _SSPBUF 0211                             ?_setCursorPosition 0035  
                                 ?_uint16_tToa 0038                                moveToNextChar@i 0033  
                            _TempUpdateRequest 134C                            ??_setCursorPosition 0036  
                                    ??___awdiv 0034                                      ??___awmod 0034  
                          uint16_tToa@wNumbers 003D                           __end_of_lcdWriteText 1460  
                                    ??___lwdiv 0034                                      ??___lwmod 0034  
                      main@wEnterBottonPressed 00DC                                         _memcmp 17AE  
                                       _memcpy 150F                                   ?_printEM1812 0039  
                                       _memset 0E28                             ?_TempUpdateRequest 0070  
                                       _wTrial 01AA                            moveToNextChar@iText 0032  
                             ___awdiv@quotient 0037                                ___awmod@divisor 0030  
                  __size_of_GetNewReceivedData 0023                                  _I2C_Interrupt 0EDC  
                              ___awmod@counter 0035                                         _strcat 136E  
                                       _strcpy 140C                                         _strlen 13C1  
                                    ??_initLCD 0036                          uint8_tToa@iSizeofText 0039  
                                    ??_setData 0030                            ??_TempUpdateRequest 0070  
                     __end_of_moveCursorToHome 1303                      __end_of_setCursorPosition 095C  
                           _gTxReadingPosition 0051                                     _gErrorCode 01A9  
                            __end_ofi1_setData 15E3                         __size_of_writeInsNoChk 0018  
                                  _gESPCommand 016D                       ?_EusartGetNbByteReceived 0070  
                      __end_of__initialization 00D1                               main@wEditingMode 00CF  
                        __size_of_clearDisplay 0005                   ?_Esp8266SetNetworkParameters 00A0  
                   setCursorPosition@wLCDIndex 0039                      __end_of_TempUpdateRequest 1359  
                               __pcstackCOMMON 0070                               _Esp8266SetupWifi 12CD  
                                 __pidataBANK0 12C2                                   __pidataBANK2 0002  
                                 __pidataBANK3 1316                              I2C_SendData@iData 0040  
                                __end_of_myint 0079                                 ?_I2C_Interrupt 0070  
                               _moveToNextChar 165B                  __size_ofi1_SetToSendDataToLCD 0006  
                                    ?_AddTrace 004B                                   ??_EUSARTInit 0030  
                         writeInsNoChk@iOpCode 0034               __end_of_Esp8266OpenSocketCommand 07FF  
                            ??_lcdWriteAllText 003F                     setCursorPosition@iPosition 0035  
                               _wInterruptText 02A0                                 _OPTION_REGbits 0095  
                                    ?_Debounce 0030                                   _clearDisplay 12D2  
                                      ??_myint 0025                                     __pbssBANK0 004E  
                                   __pbssBANK1 00DE                                     __pbssBANK2 016B  
                                   __pbssBANK3 01A0                                     __pbssBANK4 0220  
                                   __pbssBANK5 02A0                                     __pbssBANK6 0320  
                                   __pbssBANK7 03A0                              _wReceptionCounter 01AC  
                 __size_ofi1_setCursorPosition 0062                                  ?_setCursorOff 0070  
                        EM1812EntryPoint@F1955 01B1                          EM1812EntryPoint@F1957 0234  
                              __CFG_VCAPEN$OFF 0000                        __size_ofi1_lcdWriteText 002B  
                            uint8_tToa@iNumber 003A                             __end_of_EUSARTInit 136E  
                              i1setData@iValue 0072                                     __pmaintext 00D5  
                ??_Esp8266SetNetworkParameters 00A6                                      ?_PrintLog 0070  
                       __size_ofi1_waitLCDBusy 002C                                  ??_I2C_GetData 0032  
                       __end_of_moveToNextChar 1697                                     __pintentry 0004  
                                      ?_memcmp 0030                                        _I2CInit 153E  
                                      ?_memcpy 0030                                  _writeInsNoChk 1386  
                                      ?_memset 0030                                     ??_AddTrace 00A0  
                                 ?_writeInsChk 0070                                        ?_strcat 0047  
                                      ?_strcpy 0036                                        ?_strlen 0030  
                              _EUSARTInterrupt 0A8C                    GetNewReceivedData@oDataSize 003C  
                                 ?_writeTxtChk 0070                                     ??_Debounce 0032  
              __end_of_EusartGetNbByteReceived 12C9                     __size_of_setCursorPosition 0060  
                         __size_of_waitLCDBusy 002D                                 ??_setCursorOff 0036  
                         AddTrace@iSizeOfoText 004B                   EM1812EntryPoint@oTemperature 0041  
                              _gTxTransmitSize 0050                          __size_of_lcdWriteText 002A  
                         main@wTemperaturePrev 00D2                     __size_of_TempUpdateRequest 000D  
                  __size_of_SetToSendDataToLCD 0006                     ?_Esp8266SetAccessPointMode 0070  
                                   ??_PrintLog 0048                           __size_of_uint16_tToa 0091  
            EM1812EntryPoint@SetGetTempCommand 00A0                                ??_I2C_Interrupt 0072  
                              ?_moveToNextChar 0030                                        ___awdiv 0A22  
                                      ___awmod 089E                                printEM1812@wTen 0041  
                                      ___lwdiv 1697                                 ?_writeInsNoChk 0070  
                                   _wTempState 0059                                        ___lwmod 15E3  
                              __CFG_STVREN$OFF 0000                      __size_of_EM1812EntryPoint 013C  
                              Debounce@iSwitch 0034                                __size_of_memcmp 0052  
                             _wI2CCommandState 005F                                __size_of_memcpy 002F  
                              __size_of_memset 00B4                            Send_UART_Data@iData 003C  
                                      __ptext1 1341                                        __ptext2 1336  
                                      __ptext3 0CC4                                        __ptext4 132B  
                                      __ptext5 12FB                                        __ptext6 09BE  
                                      __ptext7 12D2                                        __ptext8 1320  
                                      __ptext9 1386                           uint16_tToa@wPosition 0046  
                              Debounce@ioTimer 0030                                __size_of_strcat 0018  
                         __size_of_printEM1812 00B0                                __size_of_strcpy 002A  
                              __size_of_strlen 0024                                        _initLCD 09BE  
                          __end_of_I2C_GetData 15A7                                      _T1CONbits 0018  
                             ___awmod@dividend 0032                                        _setData 161F  
                            main@wDebounceDown 00D8                                  i1_waitLCDBusy 14B6  
                      moveToNextChar@iTextSize 0030                       _Esp8266OpenSocketCommand 075E  
                                      clrloop0 12F0                           end_of_initialization 00D1  
                       uint16_tToa@iSizeofText 0038     Esp8266OpenSocketCommand@wCommandSizeReturn 046D  
                                 _lcdWriteText 1436                  __size_of_SetToReadDataFromLCD 0006  
                                      memcmp@l 0039                                        memcmp@n 0032  
                                      memcmp@r 0037                                        memcpy@d 0038  
                                      memcpy@n 0034                                        memcpy@s 003A  
              Esp8266Entrypoint@wCommandAnswer 04EA                                        init_ram 12F5  
                                      memset@c 0030                                        memset@k 0036  
                                      memset@n 0032                                        memset@s 0039  
                                      initloop 12F6        Esp8266OpenSocketCommand@DestinationPort 00A4  
                 i1setCursorPosition@wLCDIndex 0079                               __CFG_CLKOUTEN$ON 0000  
                __size_of_setNotBlinkingCursor 000B                           _wI2CTxNbOfByteToSend 0056  
                            _Esp8266Entrypoint 0322                                      _RCSTAbits 019D  
            __end_of_Esp8266SetAccessPointMode 12CD                        __end_of_EUSARTInterrupt 0AFC  
                           ?_Esp8266Entrypoint 0070                                        strcpy@d 0040  
                                   _uint8_tToa 0D74                                        strlen@a 0034  
                                      strcpy@s 003E                                        strlen@s 0030  
                                    _PORTAbits 000C                                      _PORTBbits 000D  
                                    _PORTCbits 000E                   i1setCursorPosition@iPosition 0075  
                                   _powerOnLcd 132B                            ??_Esp8266Entrypoint 004C  
                         main@wUpBottonPressed 00DA                  Esp8266OpenSocketCommand@iType 00A0  
                Esp8266OpenSocketCommand@wPort 0466                                      _TRISAbits 008C  
                               ?i1_waitLCDBusy 0070                                      _TRISCbits 008E  
                            ?_moveCursorToHome 0070                              _Esp8266OpenSocket 1303  
                     __end_of_Esp8266SetupWifi 12D2                            printEM1812@wDecimal 003F  
                            _wTimer1IntCounter 004F                        __size_of_Send_UART_Data 0027  
                   Send_UART_Data@iData_Length 003E                             ??_moveCursorToHome 0036  
                          printEM1812@oTextOut 003B                             ?_Esp8266OpenSocket 0070  
                               i1_lcdWriteText 1460                                      _TXSTAbits 019E  
                                    i1_setData 15A7                      __end_of_Esp8266Entrypoint 04E8  
                          waitLCDBusy@busyFlag 0033                            ??_Esp8266OpenSocket 0030  
                       __size_ofi1_writeTxtChk 0098                                ??_writeInsNoChk 0033  
                              _lcdWriteAllText 0842                     __end_of_GetNewReceivedData 13C1  
                                  _I2C_GetData 1571               __size_of_EusartGetNbByteReceived 0004  
                          i1_setCursorPosition 095C                                  _gEsp8266State 016E  
                             _mWritingPosition 005A                           __end_of_setCursorOff 1341  
                               __end_of_memcmp 1800                                 __end_of_memcpy 153E  
                               __end_of_memset 0EDC                    printEM1812@wWritingPosition 0042  
                            myint@wEUSARTError 002E                              __size_of_AddTrace 0049  
                               __end_of_strcat 1386                                 _wTimer0Counter 0058  
                               __end_of_strcpy 1436                                 __end_of_strlen 13E5  
                         __size_of_writeInsChk 000B                      __end_of_Esp8266OpenSocket 130C  
                          start_initialization 007B                           __size_of_writeTxtChk 009F  
                            __size_of_Debounce 0045                         __end_ofi1_lcdWriteText 148B  
                 __end_ofi1_SetToSendDataToLCD 12DD                           ?i1_setCursorPosition 0075  
                           uint16_tToa@iNumber 0039                                     ?i1_setData 0070  
                   EusartGetRxBuffer@iDataSize 003C                           i1writeTxtChk@iOpCode 007C  
                              main@wDebounceUp 00D6                               ?_EUSARTInterrupt 0070  
                     ??i1_SetToReadDataFromLCD 0070                                    __pdataBANK0 005D  
                                  __pdataBANK2 016D                                    __pdataBANK3 01B1  
                             _EM1812EntryPoint 04E8                                  _wI2CTxSendPos 0053  
                                     ??_memcmp 0034                                       ?_I2CInit 0070  
                                     ??_memcpy 0036                              __size_of_PrintLog 002B  
                                  ?_uint8_tToa 0039                                       ??_memset 0034  
                                   memset@dest 0038                                       ??_strcat 004B  
                                     ??_strcpy 003A                                       ??_strlen 0032  
                     i1setCursorPosition@iLine 0078                                    ?_powerOnLcd 0070  
                              ??i1_waitLCDBusy 0070                               uint16_tToa@F1867 01A0  
                                    ___latbits 0003                                  i1_writeTxtChk 0B8D  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0120                                  __pcstackBANK8 0420  
                                __pcstackBANK9 04A0                              printEM1812@wUnity 003E  
                    Esp8266Entrypoint@wCounter 00DE                                  ?_I2C_SendData 003C  
                        ??i1_setCursorPosition 0076                                ?i1_lcdWriteText 0020  
                                ?_GetI2CStatus 0030                               uint16_tToa@wText 0043  
                      __end_of_lcdWriteAllText 089E                               ??_moveToNextChar 0031  
                                 _wTemperature 01AD                     __size_of_Esp8266Entrypoint 01C6  
                             ___lwdiv@dividend 0032                             writeInsChk@iOpCode 0035  
                  ??_Esp8266SetAccessPointMode 0030                                       ?___awdiv 0030  
                                     ?___awmod 0030                             uint8_tToa@wHundred 003E  
                                     ?___lwdiv 0030                                       ?___lwmod 0030  
               lcdWriteAllText@wCharReadingPos 0043                     ??_Esp8266OpenSocketCommand 004B  
                                    __pswtext1 100E                                      __pswtext2 1018  
                                    __pswtext3 1000                                      _wCounter2 01A8  
                                     ?_initLCD 0070                 Esp8266Entrypoint@wReturnNumber 04E6  
                               ?i1_writeTxtChk 0070                     __size_of_Esp8266OpenSocket 0009  
                                     ?_setData 0070                                  ??_waitLCDBusy 0030  
                                    _wHumidity 01AF                                 ??_I2C_SendData 003E  
                                PrintLog@iText 004B                               ___lwdiv@quotient 0036  
                               _Send_UART_Data 13E5                                 ??_GetI2CStatus 0032  
                               __size_of_myint 0075                               _mDisplayOnOffReg 005C  
                          __size_of_uint8_tToa 00B4            __end_of_Esp8266SetNetworkParameters 075E  
                  _Esp8266SetNetworkParameters 0624                     __end_of_SetToSendDataToLCD 12E9  
                                    clear_ram0 12EF                                    ??i1_setData 0070  
                                     _PIE1bits 0091                                       _PIE2bits 0092  
                                ??_uint16_tToa 003B    Esp8266SetNetworkParameters@iWifiNetworkName 00A0  
                          __size_of_powerOnLcd 000B                                       _PIR1bits 0011  
                                     _PIR2bits 0012                          __size_of_setCursorOff 000B  
                                    main@F2356 01B5                        _EusartGetNbByteReceived 12C5  
                     _wReceptionBufferPosition 0057                              Debounce@swPressed 0031  
                 __end_of_SetToReadDataFromLCD 12EF                                  ??_printEM1812 003C  
                        __end_of_I2C_Interrupt 1000                __size_ofi1_SetToReadDataFromLCD 0006  
                  lcdWriteText@wCharReadingPos 0047                                       _AddTrace 1765  
                         i1_SetToSendDataToLCD 12D7                               __size_of_I2CInit 0033  
                             _wI2CRxBufferSize 005D                                     myint@wText 0026  
                                    main@wConv 00B0                                      main@wMenu 00DD  
                 __end_of_setNotBlinkingCursor 134C                                      main@wTemp 00CA  
                                     _Debounce 16DB                         __end_of_Send_UART_Data 140C  
                    _Esp8266SetAccessPointMode 12C9                              ?_Esp8266SetupWifi 0070  
                            lcdWriteText@iText 0042         Esp8266Entrypoint@wEusartNbByteReceived 04EB  
                          __end_of_waitLCDBusy 150F                             ??_Esp8266SetupWifi 0030  
                              main@wUpdateMenu 00CE                                   _setCursorOff 1336  
                             ?_lcdWriteAllText 003D                                   _wI2CRxBuffer 023C  
                    __size_of_moveCursorToHome 0008                                      memcpy@tmp 0037  
                                 _wI2CTxBuffer 0250             EusartGetRxBuffer@oNbOfByteReceived 003D  
                                     _PrintLog 148B                                   ?_I2C_GetData 0030  
                             __size_of___awdiv 006A                               __size_of___awmod 005E  
                          __end_of_uint16_tToa 0B8D                          ?i1_SetToSendDataToLCD 0070  
                             __size_of___lwdiv 0044                               __size_of___lwmod 003C  
                             _wI2CTxBufferSize 005E                                ??i1_writeTxtChk 007A  
                                   _ANSELAbits 018C                                     _ANSELCbits 018E  
                    EUSARTInterrupt@gErrorCode 0074                               __size_of_initLCD 0064  
                                   strcat@dest 0047                            __end_of_printEM1812 0D74  
                              ?_Send_UART_Data 003C                             _GetNewReceivedData 139E  
                    PrintLog@wInterruptTextLen 004A                                ___lwdiv@divisor 0030  
                             __size_of_setData 003C                                uint8_tToa@wText 0041  
                              uint8_tToa@wUnit 0040                                ___lwdiv@counter 0035  
                                ?_clearDisplay 0070                                       __ptext10 148B  
                                     __ptext11 153E                                       __ptext20 1436  
                                     __ptext12 0E28                                       __ptext21 0842  
                                     __ptext13 12CD                                       __ptext30 0624  
                                     __ptext22 0C25                                       __ptext14 12C9  
                                     __ptext31 089E                                       __ptext23 08FC  
                                     __ptext15 1303                                       __ptext40 1720  
                                     __ptext32 0A22                                       __ptext24 14E2  
                                     __ptext16 0322                                       __ptext41 1571  
                                     __ptext33 075E                                       __ptext25 12E9  
                                     __ptext17 0D74                                       __ptext42 139E  
                                     __ptext34 0AFC                                       __ptext26 161F  
                                     __ptext18 165B                                       __ptext51 1460  
                                     __ptext43 150F                                       __ptext35 15E3  
                                     __ptext27 12E3                                       __ptext19 17AE  
                                     __ptext60 0A8C                                       __ptext52 0B8D  
                                     __ptext44 130C                                       __ptext36 1697  
                                     __ptext28 0800                                       __ptext53 095C  
                                     __ptext45 16DB                                       __ptext37 13E5  
                                     __ptext29 12C5                                       __ptext54 14B6  
                                     __ptext46 1765                                       __ptext38 1359  
                                     __ptext55 12DD                                       __ptext47 136E  
                                     __ptext39 04E8                                       __ptext56 15A7  
                                     __ptext48 13C1                                       __ptext57 12D7  
                                     __ptext49 140C                                       __ptext58 134C  
                                     __ptext59 0EDC                        GetNewReceivedData@oData 003F  
                            _EusartGetRxBuffer 0800                                       _wHexTemp 0220  
                        main@wIterationCounter 00CC                         i1_SetToReadDataFromLCD 12DD  
                           ?_EusartGetRxBuffer 003C                       __end_of_EM1812EntryPoint 0624  
                                   strcpy@dest 0036                            ?_GetNewReceivedData 003C  
                                     _wTempSet 01B9                                   uint16_tToa@i 0044  
                                __size_of_main 024D                            ??_EusartGetRxBuffer 003E  
                           main@wDebounceEnter 00D4                      ??_EusartGetNbByteReceived 0030  
                    I2C_SendData@iNumberofByte 003C                             writeTxtChk@iOpCode 003C  
     Esp8266SetNetworkParameters@iWifiPassword 00A2                                       int$flags 007E  
                         __end_of_I2C_SendData 1765                          __end_of_writeInsNoChk 139E  
                                 ??_uint8_tToa 003B                              main@wHumidityPrev 00D0  
                         __end_of_GetI2CStatus 1316                           ??_GetNewReceivedData 003D  
                                ??_writeInsChk 0035                                     _EUSARTInit 1359  
                                 ??_powerOnLcd 0036                                  ??_writeTxtChk 003A  
                         lcdWriteAllText@iText 003D                                     _INTCONbits 000B  
                    __end_of_EusartGetRxBuffer 0842                               ??i1_lcdWriteText 0022  
                                     memcmp@vl 0036                                       memcmp@vr 0030  
                                     memcpy@d1 0030                                       memcpy@s1 0032  
                                  _waitLCDBusy 14E2                                 ??_clearDisplay 0036  
                               __pstringtext10 1876                                 __pstringtext11 187F  
                               __pstringtext20 18AD                                 __pstringtext12 1887  
                               __pstringtext21 0000                                 __pstringtext13 188E  
                               __pstringtext14 1894                                 __pstringtext15 1899  
                               __pstringtext16 189E                                 __pstringtext17 18A2  
                               __pstringtext18 18A6                                 __pstringtext19 18AA  
                       EusartGetRxBuffer@oData 0040                               _wNewI2CReception 0054  
                       setCursorPosition@iLine 0038                                       intlevel1 0000  
                       main@wDownBottonPressed 00DB                           _SetToReadDataFromLCD 12E9  
                                    strcat@src 0049                                 uint8_tToa@wTen 003F  
                             ___lwmod@dividend 0032                             __end_of_uint8_tToa 0E28  
                                    strcpy@src 0038                                    _uint16_tToa 0AFC  
                                   _OSCCONbits 0099                           _setNotBlinkingCursor 1341  
                           __end_of_powerOnLcd 1336                         ??i1_SetToSendDataToLCD 0070  
                                  _printEM1812 0CC4                                  __pstringtext1 1800  
                                __pstringtext2 1812                                  __pstringtext3 1823  
                                __pstringtext4 1831                                  __pstringtext5 183F  
                                __pstringtext6 184D                                  __pstringtext7 1859  
                                __pstringtext8 1864                                  __pstringtext9 186D  
             Esp8266OpenSocketCommand@wCommand 0420                                ___lwmod@divisor 0030  
                     __size_of_EUSARTInterrupt 0070                    __end_ofi1_setCursorPosition 09BE  
                              ___lwmod@counter 0035                          __end_ofi1_waitLCDBusy 14E2  
    Esp8266Entrypoint@prevEusartNbByteReceived 016C                            __end_of_writeInsChk 132B  
                                  _SSPCON1bits 0215                                    _SSPCON2bits 0216  
                                  _SSPCON3bits 0217                                _gEusartRXBuffer 0320  
                                ?_lcdWriteText 0042                            __end_of_writeTxtChk 0CC4  
                              _gEusartTXBuffer 03A0                          ?_SetToReadDataFromLCD 0070  
              EM1812EntryPoint@ReceptionBuffer 00A4             __size_of_Esp8266SetAccessPointMode 0004  
                        i1waitLCDBusy@busyFlag 0073                          ?_setNotBlinkingCursor 0070  
                             _moveCursorToHome 12FB                         _mCursorDisplayShiftReg 005B  
