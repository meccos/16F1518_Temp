

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Feb 26 22:26:32 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F1518 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   120                           PORTB equ 0Dh ;# 
   121  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   122                           PORTC equ 0Eh ;# 
   123  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   124                           PORTE equ 010h ;# 
   125  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   126                           PIR1 equ 011h ;# 
   127  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   128                           PIR2 equ 012h ;# 
   129  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   130                           TMR0 equ 015h ;# 
   131  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   132                           TMR1 equ 016h ;# 
   133  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   134                           TMR1L equ 016h ;# 
   135  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   136                           TMR1H equ 017h ;# 
   137  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   138                           T1CON equ 018h ;# 
   139  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   140                           T1GCON equ 019h ;# 
   141  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   142                           TMR2 equ 01Ah ;# 
   143  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   144                           PR2 equ 01Bh ;# 
   145  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   146                           T2CON equ 01Ch ;# 
   147  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   148                           TRISA equ 08Ch ;# 
   149  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   150                           TRISB equ 08Dh ;# 
   151  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   152                           TRISC equ 08Eh ;# 
   153  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   154                           TRISE equ 090h ;# 
   155  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   156                           PIE1 equ 091h ;# 
   157  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   158                           PIE2 equ 092h ;# 
   159  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   160                           OPTION_REG equ 095h ;# 
   161  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   162                           PCON equ 096h ;# 
   163  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   164                           WDTCON equ 097h ;# 
   165  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   166                           OSCCON equ 099h ;# 
   167  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   168                           OSCSTAT equ 09Ah ;# 
   169  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   170                           ADRES equ 09Bh ;# 
   171  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   172                           ADRESL equ 09Bh ;# 
   173  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   174                           ADRESH equ 09Ch ;# 
   175  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   176                           ADCON0 equ 09Dh ;# 
   177  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   178                           ADCON1 equ 09Eh ;# 
   179  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   180                           LATA equ 010Ch ;# 
   181  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   182                           LATB equ 010Dh ;# 
   183  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   184                           LATC equ 010Eh ;# 
   185  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   186                           BORCON equ 0116h ;# 
   187  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   188                           FVRCON equ 0117h ;# 
   189  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   190                           APFCON equ 011Dh ;# 
   191  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   192                           ANSELA equ 018Ch ;# 
   193  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   194                           ANSELB equ 018Dh ;# 
   195  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   196                           ANSELC equ 018Eh ;# 
   197  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   198                           PMADR equ 0191h ;# 
   199  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   200                           PMADRL equ 0191h ;# 
   201  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   202                           PMADRH equ 0192h ;# 
   203  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   204                           PMDAT equ 0193h ;# 
   205  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   206                           PMDATL equ 0193h ;# 
   207  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   208                           PMDATH equ 0194h ;# 
   209  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   210                           PMCON1 equ 0195h ;# 
   211  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   212                           PMCON2 equ 0196h ;# 
   213  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   214                           VREGCON equ 0197h ;# 
   215  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   216                           RCREG equ 0199h ;# 
   217  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   218                           TXREG equ 019Ah ;# 
   219  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   220                           SP1BRG equ 019Bh ;# 
   221  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   222                           SP1BRGL equ 019Bh ;# 
   223  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   224                           SPBRG equ 019Bh ;# 
   225  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   226                           SPBRGL equ 019Bh ;# 
   227  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   228                           SP1BRGH equ 019Ch ;# 
   229  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   230                           SPBRGH equ 019Ch ;# 
   231  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   232                           RCSTA equ 019Dh ;# 
   233  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   234                           TXSTA equ 019Eh ;# 
   235  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   236                           BAUDCON equ 019Fh ;# 
   237  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   238                           WPUB equ 020Dh ;# 
   239  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   240                           WPUE equ 0210h ;# 
   241  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   242                           SSPBUF equ 0211h ;# 
   243  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   244                           SSP1BUF equ 0211h ;# 
   245  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   246                           SSPADD equ 0212h ;# 
   247  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   248                           SSP1ADD equ 0212h ;# 
   249  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   250                           SSPMSK equ 0213h ;# 
   251  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   252                           SSP1MSK equ 0213h ;# 
   253  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   254                           SSPSTAT equ 0214h ;# 
   255  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   256                           SSP1STAT equ 0214h ;# 
   257  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   258                           SSPCON1 equ 0215h ;# 
   259  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   260                           SSPCON equ 0215h ;# 
   261  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   262                           SSP1CON1 equ 0215h ;# 
   263  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   264                           SSPCON2 equ 0216h ;# 
   265  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   266                           SSP1CON2 equ 0216h ;# 
   267  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   268                           SSPCON3 equ 0217h ;# 
   269  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   270                           SSP1CON3 equ 0217h ;# 
   271  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   272                           CCPR1 equ 0291h ;# 
   273  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   274                           CCPR1L equ 0291h ;# 
   275  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   276                           CCPR1H equ 0292h ;# 
   277  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   278                           CCP1CON equ 0293h ;# 
   279  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   280                           CCPR2 equ 0298h ;# 
   281  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   282                           CCPR2L equ 0298h ;# 
   283  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   284                           CCPR2H equ 0299h ;# 
   285  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   286                           CCP2CON equ 029Ah ;# 
   287  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   288                           IOCBP equ 0394h ;# 
   289  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   290                           IOCBN equ 0395h ;# 
   291  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   292                           IOCBF equ 0396h ;# 
   293  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   294                           STATUS_SHAD equ 0FE4h ;# 
   295  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   296                           WREG_SHAD equ 0FE5h ;# 
   297  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   298                           BSR_SHAD equ 0FE6h ;# 
   299  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   300                           PCLATH_SHAD equ 0FE7h ;# 
   301  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   302                           FSR0L_SHAD equ 0FE8h ;# 
   303  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   304                           FSR0H_SHAD equ 0FE9h ;# 
   305  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   306                           FSR1L_SHAD equ 0FEAh ;# 
   307  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   308                           FSR1H_SHAD equ 0FEBh ;# 
   309  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   310                           STKPTR equ 0FEDh ;# 
   311  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   312                           TOSL equ 0FEEh ;# 
   313  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   314                           TOSH equ 0FEFh ;# 
   315  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   316                           INDF0 equ 00h ;# 
   317  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   318                           INDF1 equ 01h ;# 
   319  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   320                           PCL equ 02h ;# 
   321  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   322                           STATUS equ 03h ;# 
   323  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   324                           FSR0L equ 04h ;# 
   325  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   326                           FSR0H equ 05h ;# 
   327  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   328                           FSR1L equ 06h ;# 
   329  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   330                           FSR1H equ 07h ;# 
   331  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   332                           BSR equ 08h ;# 
   333  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   334                           WREG equ 09h ;# 
   335  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   336                           PCLATH equ 0Ah ;# 
   337  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   338                           INTCON equ 0Bh ;# 
   339  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   340                           PORTA equ 0Ch ;# 
   341  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   342                           PORTB equ 0Dh ;# 
   343  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   344                           PORTC equ 0Eh ;# 
   345  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   346                           PORTE equ 010h ;# 
   347  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   348                           PIR1 equ 011h ;# 
   349  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   350                           PIR2 equ 012h ;# 
   351  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   352                           TMR0 equ 015h ;# 
   353  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   354                           TMR1 equ 016h ;# 
   355  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   356                           TMR1L equ 016h ;# 
   357  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   358                           TMR1H equ 017h ;# 
   359  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   360                           T1CON equ 018h ;# 
   361  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   362                           T1GCON equ 019h ;# 
   363  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   364                           TMR2 equ 01Ah ;# 
   365  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   366                           PR2 equ 01Bh ;# 
   367  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   368                           T2CON equ 01Ch ;# 
   369  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   370                           TRISA equ 08Ch ;# 
   371  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   372                           TRISB equ 08Dh ;# 
   373  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   374                           TRISC equ 08Eh ;# 
   375  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   376                           TRISE equ 090h ;# 
   377  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   378                           PIE1 equ 091h ;# 
   379  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   380                           PIE2 equ 092h ;# 
   381  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   382                           OPTION_REG equ 095h ;# 
   383  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   384                           PCON equ 096h ;# 
   385  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   386                           WDTCON equ 097h ;# 
   387  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   388                           OSCCON equ 099h ;# 
   389  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   390                           OSCSTAT equ 09Ah ;# 
   391  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   392                           ADRES equ 09Bh ;# 
   393  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   394                           ADRESL equ 09Bh ;# 
   395  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   396                           ADRESH equ 09Ch ;# 
   397  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   398                           ADCON0 equ 09Dh ;# 
   399  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   400                           ADCON1 equ 09Eh ;# 
   401  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   402                           LATA equ 010Ch ;# 
   403  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   404                           LATB equ 010Dh ;# 
   405  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   406                           LATC equ 010Eh ;# 
   407  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   408                           BORCON equ 0116h ;# 
   409  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   410                           FVRCON equ 0117h ;# 
   411  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   412                           APFCON equ 011Dh ;# 
   413  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   414                           ANSELA equ 018Ch ;# 
   415  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   416                           ANSELB equ 018Dh ;# 
   417  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   418                           ANSELC equ 018Eh ;# 
   419  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   420                           PMADR equ 0191h ;# 
   421  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   422                           PMADRL equ 0191h ;# 
   423  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   424                           PMADRH equ 0192h ;# 
   425  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   426                           PMDAT equ 0193h ;# 
   427  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   428                           PMDATL equ 0193h ;# 
   429  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   430                           PMDATH equ 0194h ;# 
   431  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   432                           PMCON1 equ 0195h ;# 
   433  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   434                           PMCON2 equ 0196h ;# 
   435  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   436                           VREGCON equ 0197h ;# 
   437  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   438                           RCREG equ 0199h ;# 
   439  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   440                           TXREG equ 019Ah ;# 
   441  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   442                           SP1BRG equ 019Bh ;# 
   443  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   444                           SP1BRGL equ 019Bh ;# 
   445  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   446                           SPBRG equ 019Bh ;# 
   447  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   448                           SPBRGL equ 019Bh ;# 
   449  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   450                           SP1BRGH equ 019Ch ;# 
   451  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   452                           SPBRGH equ 019Ch ;# 
   453  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   454                           RCSTA equ 019Dh ;# 
   455  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   456                           TXSTA equ 019Eh ;# 
   457  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   458                           BAUDCON equ 019Fh ;# 
   459  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   460                           WPUB equ 020Dh ;# 
   461  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   462                           WPUE equ 0210h ;# 
   463  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   464                           SSPBUF equ 0211h ;# 
   465  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   466                           SSP1BUF equ 0211h ;# 
   467  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   468                           SSPADD equ 0212h ;# 
   469  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   470                           SSP1ADD equ 0212h ;# 
   471  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   472                           SSPMSK equ 0213h ;# 
   473  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   474                           SSP1MSK equ 0213h ;# 
   475  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   476                           SSPSTAT equ 0214h ;# 
   477  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   478                           SSP1STAT equ 0214h ;# 
   479  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   480                           SSPCON1 equ 0215h ;# 
   481  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   482                           SSPCON equ 0215h ;# 
   483  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   484                           SSP1CON1 equ 0215h ;# 
   485  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   486                           SSPCON2 equ 0216h ;# 
   487  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   488                           SSP1CON2 equ 0216h ;# 
   489  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   490                           SSPCON3 equ 0217h ;# 
   491  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   492                           SSP1CON3 equ 0217h ;# 
   493  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   494                           CCPR1 equ 0291h ;# 
   495  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   496                           CCPR1L equ 0291h ;# 
   497  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   498                           CCPR1H equ 0292h ;# 
   499  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   500                           CCP1CON equ 0293h ;# 
   501  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   502                           CCPR2 equ 0298h ;# 
   503  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   504                           CCPR2L equ 0298h ;# 
   505  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   506                           CCPR2H equ 0299h ;# 
   507  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   508                           CCP2CON equ 029Ah ;# 
   509  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   510                           IOCBP equ 0394h ;# 
   511  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   512                           IOCBN equ 0395h ;# 
   513  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   514                           IOCBF equ 0396h ;# 
   515  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   516                           STATUS_SHAD equ 0FE4h ;# 
   517  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   518                           WREG_SHAD equ 0FE5h ;# 
   519  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   520                           BSR_SHAD equ 0FE6h ;# 
   521  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   522                           PCLATH_SHAD equ 0FE7h ;# 
   523  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   524                           FSR0L_SHAD equ 0FE8h ;# 
   525  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   526                           FSR0H_SHAD equ 0FE9h ;# 
   527  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   528                           FSR1L_SHAD equ 0FEAh ;# 
   529  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   530                           FSR1H_SHAD equ 0FEBh ;# 
   531  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   532                           STKPTR equ 0FEDh ;# 
   533  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   534                           TOSL equ 0FEEh ;# 
   535  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   536                           TOSH equ 0FEFh ;# 
   537  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   538                           INDF0 equ 00h ;# 
   539  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   540                           INDF1 equ 01h ;# 
   541  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   542                           PCL equ 02h ;# 
   543  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   544                           STATUS equ 03h ;# 
   545  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   546                           FSR0L equ 04h ;# 
   547  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   548                           FSR0H equ 05h ;# 
   549  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   550                           FSR1L equ 06h ;# 
   551  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   552                           FSR1H equ 07h ;# 
   553  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   554                           BSR equ 08h ;# 
   555  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   556                           WREG equ 09h ;# 
   557  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   558                           PCLATH equ 0Ah ;# 
   559  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   560                           INTCON equ 0Bh ;# 
   561  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   562                           PORTA equ 0Ch ;# 
   563  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   564                           PORTB equ 0Dh ;# 
   565  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   566                           PORTC equ 0Eh ;# 
   567  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   568                           PORTE equ 010h ;# 
   569  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   570                           PIR1 equ 011h ;# 
   571  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   572                           PIR2 equ 012h ;# 
   573  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   574                           TMR0 equ 015h ;# 
   575  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   576                           TMR1 equ 016h ;# 
   577  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   578                           TMR1L equ 016h ;# 
   579  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   580                           TMR1H equ 017h ;# 
   581  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   582                           T1CON equ 018h ;# 
   583  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   584                           T1GCON equ 019h ;# 
   585  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   586                           TMR2 equ 01Ah ;# 
   587  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   588                           PR2 equ 01Bh ;# 
   589  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   590                           T2CON equ 01Ch ;# 
   591  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   592                           TRISA equ 08Ch ;# 
   593  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   594                           TRISB equ 08Dh ;# 
   595  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   596                           TRISC equ 08Eh ;# 
   597  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   598                           TRISE equ 090h ;# 
   599  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   600                           PIE1 equ 091h ;# 
   601  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   602                           PIE2 equ 092h ;# 
   603  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   604                           OPTION_REG equ 095h ;# 
   605  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   606                           PCON equ 096h ;# 
   607  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   608                           WDTCON equ 097h ;# 
   609  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   610                           OSCCON equ 099h ;# 
   611  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   612                           OSCSTAT equ 09Ah ;# 
   613  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   614                           ADRES equ 09Bh ;# 
   615  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   616                           ADRESL equ 09Bh ;# 
   617  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   618                           ADRESH equ 09Ch ;# 
   619  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   620                           ADCON0 equ 09Dh ;# 
   621  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   622                           ADCON1 equ 09Eh ;# 
   623  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   624                           LATA equ 010Ch ;# 
   625  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   626                           LATB equ 010Dh ;# 
   627  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   628                           LATC equ 010Eh ;# 
   629  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   630                           BORCON equ 0116h ;# 
   631  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   632                           FVRCON equ 0117h ;# 
   633  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   634                           APFCON equ 011Dh ;# 
   635  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   636                           ANSELA equ 018Ch ;# 
   637  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   638                           ANSELB equ 018Dh ;# 
   639  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   640                           ANSELC equ 018Eh ;# 
   641  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   642                           PMADR equ 0191h ;# 
   643  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   644                           PMADRL equ 0191h ;# 
   645  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   646                           PMADRH equ 0192h ;# 
   647  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   648                           PMDAT equ 0193h ;# 
   649  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   650                           PMDATL equ 0193h ;# 
   651  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   652                           PMDATH equ 0194h ;# 
   653  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   654                           PMCON1 equ 0195h ;# 
   655  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   656                           PMCON2 equ 0196h ;# 
   657  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   658                           VREGCON equ 0197h ;# 
   659  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   660                           RCREG equ 0199h ;# 
   661  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   662                           TXREG equ 019Ah ;# 
   663  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   664                           SP1BRG equ 019Bh ;# 
   665  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   666                           SP1BRGL equ 019Bh ;# 
   667  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   668                           SPBRG equ 019Bh ;# 
   669  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   670                           SPBRGL equ 019Bh ;# 
   671  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   672                           SP1BRGH equ 019Ch ;# 
   673  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   674                           SPBRGH equ 019Ch ;# 
   675  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   676                           RCSTA equ 019Dh ;# 
   677  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   678                           TXSTA equ 019Eh ;# 
   679  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   680                           BAUDCON equ 019Fh ;# 
   681  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   682                           WPUB equ 020Dh ;# 
   683  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   684                           WPUE equ 0210h ;# 
   685  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   686                           SSPBUF equ 0211h ;# 
   687  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   688                           SSP1BUF equ 0211h ;# 
   689  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   690                           SSPADD equ 0212h ;# 
   691  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   692                           SSP1ADD equ 0212h ;# 
   693  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   694                           SSPMSK equ 0213h ;# 
   695  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   696                           SSP1MSK equ 0213h ;# 
   697  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   698                           SSPSTAT equ 0214h ;# 
   699  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   700                           SSP1STAT equ 0214h ;# 
   701  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   702                           SSPCON1 equ 0215h ;# 
   703  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   704                           SSPCON equ 0215h ;# 
   705  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   706                           SSP1CON1 equ 0215h ;# 
   707  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   708                           SSPCON2 equ 0216h ;# 
   709  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   710                           SSP1CON2 equ 0216h ;# 
   711  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   712                           SSPCON3 equ 0217h ;# 
   713  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   714                           SSP1CON3 equ 0217h ;# 
   715  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   716                           CCPR1 equ 0291h ;# 
   717  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   718                           CCPR1L equ 0291h ;# 
   719  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   720                           CCPR1H equ 0292h ;# 
   721  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   722                           CCP1CON equ 0293h ;# 
   723  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   724                           CCPR2 equ 0298h ;# 
   725  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   726                           CCPR2L equ 0298h ;# 
   727  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   728                           CCPR2H equ 0299h ;# 
   729  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   730                           CCP2CON equ 029Ah ;# 
   731  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   732                           IOCBP equ 0394h ;# 
   733  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   734                           IOCBN equ 0395h ;# 
   735  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   736                           IOCBF equ 0396h ;# 
   737  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   738                           STATUS_SHAD equ 0FE4h ;# 
   739  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   740                           WREG_SHAD equ 0FE5h ;# 
   741  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   742                           BSR_SHAD equ 0FE6h ;# 
   743  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   744                           PCLATH_SHAD equ 0FE7h ;# 
   745  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   746                           FSR0L_SHAD equ 0FE8h ;# 
   747  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   748                           FSR0H_SHAD equ 0FE9h ;# 
   749  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   750                           FSR1L_SHAD equ 0FEAh ;# 
   751  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   752                           FSR1H_SHAD equ 0FEBh ;# 
   753  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   754                           STKPTR equ 0FEDh ;# 
   755  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   756                           TOSL equ 0FEEh ;# 
   757  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   758                           TOSH equ 0FEFh ;# 
   759  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   760                           INDF0 equ 00h ;# 
   761  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   762                           INDF1 equ 01h ;# 
   763  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   764                           PCL equ 02h ;# 
   765  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   766                           STATUS equ 03h ;# 
   767  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   768                           FSR0L equ 04h ;# 
   769  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   770                           FSR0H equ 05h ;# 
   771  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   772                           FSR1L equ 06h ;# 
   773  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   774                           FSR1H equ 07h ;# 
   775  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   776                           BSR equ 08h ;# 
   777  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   778                           WREG equ 09h ;# 
   779  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   780                           PCLATH equ 0Ah ;# 
   781  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   782                           INTCON equ 0Bh ;# 
   783  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   784                           PORTA equ 0Ch ;# 
   785  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   786                           PORTB equ 0Dh ;# 
   787  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   788                           PORTC equ 0Eh ;# 
   789  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   790                           PORTE equ 010h ;# 
   791  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   792                           PIR1 equ 011h ;# 
   793  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   794                           PIR2 equ 012h ;# 
   795  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   796                           TMR0 equ 015h ;# 
   797  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   798                           TMR1 equ 016h ;# 
   799  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   800                           TMR1L equ 016h ;# 
   801  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   802                           TMR1H equ 017h ;# 
   803  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   804                           T1CON equ 018h ;# 
   805  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   806                           T1GCON equ 019h ;# 
   807  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   808                           TMR2 equ 01Ah ;# 
   809  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   810                           PR2 equ 01Bh ;# 
   811  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   812                           T2CON equ 01Ch ;# 
   813  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   814                           TRISA equ 08Ch ;# 
   815  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   816                           TRISB equ 08Dh ;# 
   817  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   818                           TRISC equ 08Eh ;# 
   819  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   820                           TRISE equ 090h ;# 
   821  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   822                           PIE1 equ 091h ;# 
   823  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   824                           PIE2 equ 092h ;# 
   825  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   826                           OPTION_REG equ 095h ;# 
   827  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   828                           PCON equ 096h ;# 
   829  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   830                           WDTCON equ 097h ;# 
   831  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   832                           OSCCON equ 099h ;# 
   833  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   834                           OSCSTAT equ 09Ah ;# 
   835  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   836                           ADRES equ 09Bh ;# 
   837  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   838                           ADRESL equ 09Bh ;# 
   839  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   840                           ADRESH equ 09Ch ;# 
   841  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   842                           ADCON0 equ 09Dh ;# 
   843  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   844                           ADCON1 equ 09Eh ;# 
   845  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   846                           LATA equ 010Ch ;# 
   847  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   848                           LATB equ 010Dh ;# 
   849  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   850                           LATC equ 010Eh ;# 
   851  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   852                           BORCON equ 0116h ;# 
   853  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   854                           FVRCON equ 0117h ;# 
   855  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   856                           APFCON equ 011Dh ;# 
   857  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   858                           ANSELA equ 018Ch ;# 
   859  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   860                           ANSELB equ 018Dh ;# 
   861  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   862                           ANSELC equ 018Eh ;# 
   863  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   864                           PMADR equ 0191h ;# 
   865  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   866                           PMADRL equ 0191h ;# 
   867  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   868                           PMADRH equ 0192h ;# 
   869  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   870                           PMDAT equ 0193h ;# 
   871  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   872                           PMDATL equ 0193h ;# 
   873  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   874                           PMDATH equ 0194h ;# 
   875  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   876                           PMCON1 equ 0195h ;# 
   877  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   878                           PMCON2 equ 0196h ;# 
   879  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   880                           VREGCON equ 0197h ;# 
   881  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   882                           RCREG equ 0199h ;# 
   883  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   884                           TXREG equ 019Ah ;# 
   885  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   886                           SP1BRG equ 019Bh ;# 
   887  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   888                           SP1BRGL equ 019Bh ;# 
   889  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   890                           SPBRG equ 019Bh ;# 
   891  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   892                           SPBRGL equ 019Bh ;# 
   893  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   894                           SP1BRGH equ 019Ch ;# 
   895  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   896                           SPBRGH equ 019Ch ;# 
   897  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   898                           RCSTA equ 019Dh ;# 
   899  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   900                           TXSTA equ 019Eh ;# 
   901  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   902                           BAUDCON equ 019Fh ;# 
   903  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   904                           WPUB equ 020Dh ;# 
   905  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   906                           WPUE equ 0210h ;# 
   907  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   908                           SSPBUF equ 0211h ;# 
   909  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   910                           SSP1BUF equ 0211h ;# 
   911  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   912                           SSPADD equ 0212h ;# 
   913  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   914                           SSP1ADD equ 0212h ;# 
   915  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   916                           SSPMSK equ 0213h ;# 
   917  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   918                           SSP1MSK equ 0213h ;# 
   919  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   920                           SSPSTAT equ 0214h ;# 
   921  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   922                           SSP1STAT equ 0214h ;# 
   923  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   924                           SSPCON1 equ 0215h ;# 
   925  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   926                           SSPCON equ 0215h ;# 
   927  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   928                           SSP1CON1 equ 0215h ;# 
   929  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   930                           SSPCON2 equ 0216h ;# 
   931  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   932                           SSP1CON2 equ 0216h ;# 
   933  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   934                           SSPCON3 equ 0217h ;# 
   935  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   936                           SSP1CON3 equ 0217h ;# 
   937  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   938                           CCPR1 equ 0291h ;# 
   939  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   940                           CCPR1L equ 0291h ;# 
   941  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   942                           CCPR1H equ 0292h ;# 
   943  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   944                           CCP1CON equ 0293h ;# 
   945  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   946                           CCPR2 equ 0298h ;# 
   947  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   948                           CCPR2L equ 0298h ;# 
   949  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   950                           CCPR2H equ 0299h ;# 
   951  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   952                           CCP2CON equ 029Ah ;# 
   953  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   954                           IOCBP equ 0394h ;# 
   955  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   956                           IOCBN equ 0395h ;# 
   957  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   958                           IOCBF equ 0396h ;# 
   959  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   960                           STATUS_SHAD equ 0FE4h ;# 
   961  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   962                           WREG_SHAD equ 0FE5h ;# 
   963  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   964                           BSR_SHAD equ 0FE6h ;# 
   965  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   966                           PCLATH_SHAD equ 0FE7h ;# 
   967  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   968                           FSR0L_SHAD equ 0FE8h ;# 
   969  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   970                           FSR0H_SHAD equ 0FE9h ;# 
   971  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   972                           FSR1L_SHAD equ 0FEAh ;# 
   973  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   974                           FSR1H_SHAD equ 0FEBh ;# 
   975  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   976                           STKPTR equ 0FEDh ;# 
   977  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   978                           TOSL equ 0FEEh ;# 
   979  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   980                           TOSH equ 0FEFh ;# 
   981  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   982                           INDF0 equ 00h ;# 
   983  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   984                           INDF1 equ 01h ;# 
   985  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   986                           PCL equ 02h ;# 
   987  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   988                           STATUS equ 03h ;# 
   989  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   990                           FSR0L equ 04h ;# 
   991  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   992                           FSR0H equ 05h ;# 
   993  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   994                           FSR1L equ 06h ;# 
   995  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   996                           FSR1H equ 07h ;# 
   997  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   998                           BSR equ 08h ;# 
   999  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1000                           WREG equ 09h ;# 
  1001  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1002                           PCLATH equ 0Ah ;# 
  1003  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1004                           INTCON equ 0Bh ;# 
  1005  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1006                           PORTA equ 0Ch ;# 
  1007  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1008                           PORTB equ 0Dh ;# 
  1009  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1010                           PORTC equ 0Eh ;# 
  1011  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1012                           PORTE equ 010h ;# 
  1013  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1014                           PIR1 equ 011h ;# 
  1015  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1016                           PIR2 equ 012h ;# 
  1017  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1018                           TMR0 equ 015h ;# 
  1019  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1020                           TMR1 equ 016h ;# 
  1021  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1022                           TMR1L equ 016h ;# 
  1023  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1024                           TMR1H equ 017h ;# 
  1025  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1026                           T1CON equ 018h ;# 
  1027  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1028                           T1GCON equ 019h ;# 
  1029  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1030                           TMR2 equ 01Ah ;# 
  1031  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1032                           PR2 equ 01Bh ;# 
  1033  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1034                           T2CON equ 01Ch ;# 
  1035  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1036                           TRISA equ 08Ch ;# 
  1037  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1038                           TRISB equ 08Dh ;# 
  1039  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1040                           TRISC equ 08Eh ;# 
  1041  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1042                           TRISE equ 090h ;# 
  1043  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1044                           PIE1 equ 091h ;# 
  1045  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1046                           PIE2 equ 092h ;# 
  1047  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1048                           OPTION_REG equ 095h ;# 
  1049  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1050                           PCON equ 096h ;# 
  1051  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1052                           WDTCON equ 097h ;# 
  1053  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1054                           OSCCON equ 099h ;# 
  1055  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1056                           OSCSTAT equ 09Ah ;# 
  1057  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1058                           ADRES equ 09Bh ;# 
  1059  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1060                           ADRESL equ 09Bh ;# 
  1061  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1062                           ADRESH equ 09Ch ;# 
  1063  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1064                           ADCON0 equ 09Dh ;# 
  1065  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1066                           ADCON1 equ 09Eh ;# 
  1067  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1068                           LATA equ 010Ch ;# 
  1069  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1070                           LATB equ 010Dh ;# 
  1071  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1072                           LATC equ 010Eh ;# 
  1073  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1074                           BORCON equ 0116h ;# 
  1075  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1076                           FVRCON equ 0117h ;# 
  1077  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1078                           APFCON equ 011Dh ;# 
  1079  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1080                           ANSELA equ 018Ch ;# 
  1081  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1082                           ANSELB equ 018Dh ;# 
  1083  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1084                           ANSELC equ 018Eh ;# 
  1085  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1086                           PMADR equ 0191h ;# 
  1087  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1088                           PMADRL equ 0191h ;# 
  1089  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1090                           PMADRH equ 0192h ;# 
  1091  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1092                           PMDAT equ 0193h ;# 
  1093  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1094                           PMDATL equ 0193h ;# 
  1095  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1096                           PMDATH equ 0194h ;# 
  1097  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1098                           PMCON1 equ 0195h ;# 
  1099  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1100                           PMCON2 equ 0196h ;# 
  1101  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1102                           VREGCON equ 0197h ;# 
  1103  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1104                           RCREG equ 0199h ;# 
  1105  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1106                           TXREG equ 019Ah ;# 
  1107  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1108                           SP1BRG equ 019Bh ;# 
  1109  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1110                           SP1BRGL equ 019Bh ;# 
  1111  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1112                           SPBRG equ 019Bh ;# 
  1113  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1114                           SPBRGL equ 019Bh ;# 
  1115  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1116                           SP1BRGH equ 019Ch ;# 
  1117  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1118                           SPBRGH equ 019Ch ;# 
  1119  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1120                           RCSTA equ 019Dh ;# 
  1121  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1122                           TXSTA equ 019Eh ;# 
  1123  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1124                           BAUDCON equ 019Fh ;# 
  1125  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1126                           WPUB equ 020Dh ;# 
  1127  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1128                           WPUE equ 0210h ;# 
  1129  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1130                           SSPBUF equ 0211h ;# 
  1131  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1132                           SSP1BUF equ 0211h ;# 
  1133  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1134                           SSPADD equ 0212h ;# 
  1135  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1136                           SSP1ADD equ 0212h ;# 
  1137  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1138                           SSPMSK equ 0213h ;# 
  1139  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1140                           SSP1MSK equ 0213h ;# 
  1141  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1142                           SSPSTAT equ 0214h ;# 
  1143  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1144                           SSP1STAT equ 0214h ;# 
  1145  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1146                           SSPCON1 equ 0215h ;# 
  1147  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1148                           SSPCON equ 0215h ;# 
  1149  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1150                           SSP1CON1 equ 0215h ;# 
  1151  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1152                           SSPCON2 equ 0216h ;# 
  1153  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1154                           SSP1CON2 equ 0216h ;# 
  1155  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1156                           SSPCON3 equ 0217h ;# 
  1157  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1158                           SSP1CON3 equ 0217h ;# 
  1159  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1160                           CCPR1 equ 0291h ;# 
  1161  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1162                           CCPR1L equ 0291h ;# 
  1163  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1164                           CCPR1H equ 0292h ;# 
  1165  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1166                           CCP1CON equ 0293h ;# 
  1167  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1168                           CCPR2 equ 0298h ;# 
  1169  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1170                           CCPR2L equ 0298h ;# 
  1171  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1172                           CCPR2H equ 0299h ;# 
  1173  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1174                           CCP2CON equ 029Ah ;# 
  1175  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1176                           IOCBP equ 0394h ;# 
  1177  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1178                           IOCBN equ 0395h ;# 
  1179  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1180                           IOCBF equ 0396h ;# 
  1181  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1182                           STATUS_SHAD equ 0FE4h ;# 
  1183  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1184                           WREG_SHAD equ 0FE5h ;# 
  1185  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1186                           BSR_SHAD equ 0FE6h ;# 
  1187  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1188                           PCLATH_SHAD equ 0FE7h ;# 
  1189  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1190                           FSR0L_SHAD equ 0FE8h ;# 
  1191  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1192                           FSR0H_SHAD equ 0FE9h ;# 
  1193  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1194                           FSR1L_SHAD equ 0FEAh ;# 
  1195  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1196                           FSR1H_SHAD equ 0FEBh ;# 
  1197  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1198                           STKPTR equ 0FEDh ;# 
  1199  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1200                           TOSL equ 0FEEh ;# 
  1201  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1202                           TOSH equ 0FEFh ;# 
  1203  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1204                           INDF0 equ 00h ;# 
  1205  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1206                           INDF1 equ 01h ;# 
  1207  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1208                           PCL equ 02h ;# 
  1209  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1210                           STATUS equ 03h ;# 
  1211  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1212                           FSR0L equ 04h ;# 
  1213  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1214                           FSR0H equ 05h ;# 
  1215  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1216                           FSR1L equ 06h ;# 
  1217  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1218                           FSR1H equ 07h ;# 
  1219  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1220                           BSR equ 08h ;# 
  1221  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1222                           WREG equ 09h ;# 
  1223  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1224                           PCLATH equ 0Ah ;# 
  1225  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1226                           INTCON equ 0Bh ;# 
  1227  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1228                           PORTA equ 0Ch ;# 
  1229  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1230                           PORTB equ 0Dh ;# 
  1231  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1232                           PORTC equ 0Eh ;# 
  1233  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1234                           PORTE equ 010h ;# 
  1235  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1236                           PIR1 equ 011h ;# 
  1237  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1238                           PIR2 equ 012h ;# 
  1239  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1240                           TMR0 equ 015h ;# 
  1241  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1242                           TMR1 equ 016h ;# 
  1243  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1244                           TMR1L equ 016h ;# 
  1245  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1246                           TMR1H equ 017h ;# 
  1247  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1248                           T1CON equ 018h ;# 
  1249  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1250                           T1GCON equ 019h ;# 
  1251  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1252                           TMR2 equ 01Ah ;# 
  1253  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1254                           PR2 equ 01Bh ;# 
  1255  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1256                           T2CON equ 01Ch ;# 
  1257  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1258                           TRISA equ 08Ch ;# 
  1259  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1260                           TRISB equ 08Dh ;# 
  1261  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1262                           TRISC equ 08Eh ;# 
  1263  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1264                           TRISE equ 090h ;# 
  1265  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1266                           PIE1 equ 091h ;# 
  1267  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1268                           PIE2 equ 092h ;# 
  1269  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1270                           OPTION_REG equ 095h ;# 
  1271  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1272                           PCON equ 096h ;# 
  1273  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1274                           WDTCON equ 097h ;# 
  1275  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1276                           OSCCON equ 099h ;# 
  1277  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1278                           OSCSTAT equ 09Ah ;# 
  1279  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1280                           ADRES equ 09Bh ;# 
  1281  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1282                           ADRESL equ 09Bh ;# 
  1283  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1284                           ADRESH equ 09Ch ;# 
  1285  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1286                           ADCON0 equ 09Dh ;# 
  1287  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1288                           ADCON1 equ 09Eh ;# 
  1289  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1290                           LATA equ 010Ch ;# 
  1291  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1292                           LATB equ 010Dh ;# 
  1293  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1294                           LATC equ 010Eh ;# 
  1295  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1296                           BORCON equ 0116h ;# 
  1297  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1298                           FVRCON equ 0117h ;# 
  1299  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1300                           APFCON equ 011Dh ;# 
  1301  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1302                           ANSELA equ 018Ch ;# 
  1303  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1304                           ANSELB equ 018Dh ;# 
  1305  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1306                           ANSELC equ 018Eh ;# 
  1307  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1308                           PMADR equ 0191h ;# 
  1309  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1310                           PMADRL equ 0191h ;# 
  1311  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1312                           PMADRH equ 0192h ;# 
  1313  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1314                           PMDAT equ 0193h ;# 
  1315  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1316                           PMDATL equ 0193h ;# 
  1317  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1318                           PMDATH equ 0194h ;# 
  1319  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1320                           PMCON1 equ 0195h ;# 
  1321  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1322                           PMCON2 equ 0196h ;# 
  1323  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1324                           VREGCON equ 0197h ;# 
  1325  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1326                           RCREG equ 0199h ;# 
  1327  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1328                           TXREG equ 019Ah ;# 
  1329  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1330                           SP1BRG equ 019Bh ;# 
  1331  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1332                           SP1BRGL equ 019Bh ;# 
  1333  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1334                           SPBRG equ 019Bh ;# 
  1335  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1336                           SPBRGL equ 019Bh ;# 
  1337  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1338                           SP1BRGH equ 019Ch ;# 
  1339  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1340                           SPBRGH equ 019Ch ;# 
  1341  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1342                           RCSTA equ 019Dh ;# 
  1343  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1344                           TXSTA equ 019Eh ;# 
  1345  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1346                           BAUDCON equ 019Fh ;# 
  1347  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1348                           WPUB equ 020Dh ;# 
  1349  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1350                           WPUE equ 0210h ;# 
  1351  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1352                           SSPBUF equ 0211h ;# 
  1353  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1354                           SSP1BUF equ 0211h ;# 
  1355  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1356                           SSPADD equ 0212h ;# 
  1357  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1358                           SSP1ADD equ 0212h ;# 
  1359  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1360                           SSPMSK equ 0213h ;# 
  1361  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1362                           SSP1MSK equ 0213h ;# 
  1363  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1364                           SSPSTAT equ 0214h ;# 
  1365  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1366                           SSP1STAT equ 0214h ;# 
  1367  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1368                           SSPCON1 equ 0215h ;# 
  1369  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1370                           SSPCON equ 0215h ;# 
  1371  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1372                           SSP1CON1 equ 0215h ;# 
  1373  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1374                           SSPCON2 equ 0216h ;# 
  1375  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1376                           SSP1CON2 equ 0216h ;# 
  1377  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1378                           SSPCON3 equ 0217h ;# 
  1379  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1380                           SSP1CON3 equ 0217h ;# 
  1381  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1382                           CCPR1 equ 0291h ;# 
  1383  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1384                           CCPR1L equ 0291h ;# 
  1385  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1386                           CCPR1H equ 0292h ;# 
  1387  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1388                           CCP1CON equ 0293h ;# 
  1389  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1390                           CCPR2 equ 0298h ;# 
  1391  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1392                           CCPR2L equ 0298h ;# 
  1393  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1394                           CCPR2H equ 0299h ;# 
  1395  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1396                           CCP2CON equ 029Ah ;# 
  1397  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1398                           IOCBP equ 0394h ;# 
  1399  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1400                           IOCBN equ 0395h ;# 
  1401  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1402                           IOCBF equ 0396h ;# 
  1403  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1404                           STATUS_SHAD equ 0FE4h ;# 
  1405  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1406                           WREG_SHAD equ 0FE5h ;# 
  1407  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1408                           BSR_SHAD equ 0FE6h ;# 
  1409  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1410                           PCLATH_SHAD equ 0FE7h ;# 
  1411  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1412                           FSR0L_SHAD equ 0FE8h ;# 
  1413  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1414                           FSR0H_SHAD equ 0FE9h ;# 
  1415  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1416                           FSR1L_SHAD equ 0FEAh ;# 
  1417  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1418                           FSR1H_SHAD equ 0FEBh ;# 
  1419  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1420                           STKPTR equ 0FEDh ;# 
  1421  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1422                           TOSL equ 0FEEh ;# 
  1423  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1424                           TOSH equ 0FEFh ;# 
  1425  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1426                           INDF0 equ 00h ;# 
  1427  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1428                           INDF1 equ 01h ;# 
  1429  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1430                           PCL equ 02h ;# 
  1431  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1432                           STATUS equ 03h ;# 
  1433  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1434                           FSR0L equ 04h ;# 
  1435  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1436                           FSR0H equ 05h ;# 
  1437  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1438                           FSR1L equ 06h ;# 
  1439  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1440                           FSR1H equ 07h ;# 
  1441  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1442                           BSR equ 08h ;# 
  1443  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1444                           WREG equ 09h ;# 
  1445  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1446                           PCLATH equ 0Ah ;# 
  1447  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1448                           INTCON equ 0Bh ;# 
  1449  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1450                           PORTA equ 0Ch ;# 
  1451  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1452                           PORTB equ 0Dh ;# 
  1453  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1454                           PORTC equ 0Eh ;# 
  1455  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1456                           PORTE equ 010h ;# 
  1457  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1458                           PIR1 equ 011h ;# 
  1459  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1460                           PIR2 equ 012h ;# 
  1461  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1462                           TMR0 equ 015h ;# 
  1463  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1464                           TMR1 equ 016h ;# 
  1465  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1466                           TMR1L equ 016h ;# 
  1467  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1468                           TMR1H equ 017h ;# 
  1469  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1470                           T1CON equ 018h ;# 
  1471  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1472                           T1GCON equ 019h ;# 
  1473  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1474                           TMR2 equ 01Ah ;# 
  1475  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1476                           PR2 equ 01Bh ;# 
  1477  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1478                           T2CON equ 01Ch ;# 
  1479  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1480                           TRISA equ 08Ch ;# 
  1481  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1482                           TRISB equ 08Dh ;# 
  1483  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1484                           TRISC equ 08Eh ;# 
  1485  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1486                           TRISE equ 090h ;# 
  1487  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1488                           PIE1 equ 091h ;# 
  1489  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1490                           PIE2 equ 092h ;# 
  1491  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1492                           OPTION_REG equ 095h ;# 
  1493  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1494                           PCON equ 096h ;# 
  1495  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1496                           WDTCON equ 097h ;# 
  1497  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1498                           OSCCON equ 099h ;# 
  1499  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1500                           OSCSTAT equ 09Ah ;# 
  1501  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1502                           ADRES equ 09Bh ;# 
  1503  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1504                           ADRESL equ 09Bh ;# 
  1505  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1506                           ADRESH equ 09Ch ;# 
  1507  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1508                           ADCON0 equ 09Dh ;# 
  1509  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1510                           ADCON1 equ 09Eh ;# 
  1511  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1512                           LATA equ 010Ch ;# 
  1513  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1514                           LATB equ 010Dh ;# 
  1515  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1516                           LATC equ 010Eh ;# 
  1517  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1518                           BORCON equ 0116h ;# 
  1519  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1520                           FVRCON equ 0117h ;# 
  1521  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1522                           APFCON equ 011Dh ;# 
  1523  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1524                           ANSELA equ 018Ch ;# 
  1525  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1526                           ANSELB equ 018Dh ;# 
  1527  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1528                           ANSELC equ 018Eh ;# 
  1529  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1530                           PMADR equ 0191h ;# 
  1531  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1532                           PMADRL equ 0191h ;# 
  1533  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1534                           PMADRH equ 0192h ;# 
  1535  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1536                           PMDAT equ 0193h ;# 
  1537  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1538                           PMDATL equ 0193h ;# 
  1539  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1540                           PMDATH equ 0194h ;# 
  1541  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1542                           PMCON1 equ 0195h ;# 
  1543  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1544                           PMCON2 equ 0196h ;# 
  1545  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1546                           VREGCON equ 0197h ;# 
  1547  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1548                           RCREG equ 0199h ;# 
  1549  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1550                           TXREG equ 019Ah ;# 
  1551  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1552                           SP1BRG equ 019Bh ;# 
  1553  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1554                           SP1BRGL equ 019Bh ;# 
  1555  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1556                           SPBRG equ 019Bh ;# 
  1557  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1558                           SPBRGL equ 019Bh ;# 
  1559  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1560                           SP1BRGH equ 019Ch ;# 
  1561  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1562                           SPBRGH equ 019Ch ;# 
  1563  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1564                           RCSTA equ 019Dh ;# 
  1565  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1566                           TXSTA equ 019Eh ;# 
  1567  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1568                           BAUDCON equ 019Fh ;# 
  1569  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1570                           WPUB equ 020Dh ;# 
  1571  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1572                           WPUE equ 0210h ;# 
  1573  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1574                           SSPBUF equ 0211h ;# 
  1575  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1576                           SSP1BUF equ 0211h ;# 
  1577  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1578                           SSPADD equ 0212h ;# 
  1579  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1580                           SSP1ADD equ 0212h ;# 
  1581  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1582                           SSPMSK equ 0213h ;# 
  1583  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1584                           SSP1MSK equ 0213h ;# 
  1585  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1586                           SSPSTAT equ 0214h ;# 
  1587  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1588                           SSP1STAT equ 0214h ;# 
  1589  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1590                           SSPCON1 equ 0215h ;# 
  1591  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1592                           SSPCON equ 0215h ;# 
  1593  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1594                           SSP1CON1 equ 0215h ;# 
  1595  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1596                           SSPCON2 equ 0216h ;# 
  1597  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1598                           SSP1CON2 equ 0216h ;# 
  1599  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1600                           SSPCON3 equ 0217h ;# 
  1601  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1602                           SSP1CON3 equ 0217h ;# 
  1603  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1604                           CCPR1 equ 0291h ;# 
  1605  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1606                           CCPR1L equ 0291h ;# 
  1607  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1608                           CCPR1H equ 0292h ;# 
  1609  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1610                           CCP1CON equ 0293h ;# 
  1611  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1612                           CCPR2 equ 0298h ;# 
  1613  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1614                           CCPR2L equ 0298h ;# 
  1615  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1616                           CCPR2H equ 0299h ;# 
  1617  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1618                           CCP2CON equ 029Ah ;# 
  1619  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1620                           IOCBP equ 0394h ;# 
  1621  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1622                           IOCBN equ 0395h ;# 
  1623  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1624                           IOCBF equ 0396h ;# 
  1625  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1626                           STATUS_SHAD equ 0FE4h ;# 
  1627  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1628                           WREG_SHAD equ 0FE5h ;# 
  1629  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1630                           BSR_SHAD equ 0FE6h ;# 
  1631  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1632                           PCLATH_SHAD equ 0FE7h ;# 
  1633  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1634                           FSR0L_SHAD equ 0FE8h ;# 
  1635  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1636                           FSR0H_SHAD equ 0FE9h ;# 
  1637  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1638                           FSR1L_SHAD equ 0FEAh ;# 
  1639  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1640                           FSR1H_SHAD equ 0FEBh ;# 
  1641  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1642                           STKPTR equ 0FEDh ;# 
  1643  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1644                           TOSL equ 0FEEh ;# 
  1645  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
  1646                           TOSH equ 0FEFh ;# 
  1647  0FEF                     	FNCALL	_main,_Debounce
  1648                           	FNCALL	_main,_EUSARTInit
  1649                           	FNCALL	_main,_Esp8266Entrypoint
  1650                           	FNCALL	_main,_Esp8266SetAccessPointMode
  1651                           	FNCALL	_main,_Esp8266SetupWifi
  1652                           	FNCALL	_main,_clearDisplay
  1653                           	FNCALL	_main,_initLCD
  1654                           	FNCALL	_main,_memset
  1655                           	FNCALL	_main,_moveCursorToHome
  1656                           	FNCALL	_main,_powerOnLcd
  1657                           	FNCALL	_main,_setCursorOff
  1658                           	FNCALL	_main,_setNotBlinkingCursor
  1659                           	FNCALL	_setNotBlinkingCursor,_writeInsChk
  1660                           	FNCALL	_setCursorOff,_writeInsChk
  1661                           	FNCALL	_powerOnLcd,_writeInsChk
  1662                           	FNCALL	_moveCursorToHome,_writeInsChk
  1663                           	FNCALL	_initLCD,_clearDisplay
  1664                           	FNCALL	_initLCD,_setData
  1665                           	FNCALL	_initLCD,_writeInsChk
  1666                           	FNCALL	_clearDisplay,_writeInsChk
  1667                           	FNCALL	_writeInsChk,_waitLCDBusy
  1668                           	FNCALL	_writeInsChk,_writeInsNoChk
  1669                           	FNCALL	_writeInsNoChk,_SetToSendDataToLCD
  1670                           	FNCALL	_writeInsNoChk,_setData
  1671                           	FNCALL	_Esp8266Entrypoint,_Esp8266SetNetworkParameters
  1672                           	FNCALL	_Esp8266Entrypoint,_EusartGetNbByteReceived
  1673                           	FNCALL	_Esp8266Entrypoint,_EusartGetRxBuffer
  1674                           	FNCALL	_Esp8266Entrypoint,_Send_UART_Data
  1675                           	FNCALL	_Esp8266Entrypoint,_lcdWriteAllText
  1676                           	FNCALL	_Esp8266Entrypoint,_lcdWriteText
  1677                           	FNCALL	_Esp8266Entrypoint,_memcmp
  1678                           	FNCALL	_Esp8266Entrypoint,_uint8_tToa
  1679                           	FNCALL	_uint8_tToa,___awdiv
  1680                           	FNCALL	_uint8_tToa,___awmod
  1681                           	FNCALL	_lcdWriteText,_writeTxtChk
  1682                           	FNCALL	_lcdWriteAllText,_writeTxtChk
  1683                           	FNCALL	_writeTxtChk,_SetToSendDataToLCD
  1684                           	FNCALL	_writeTxtChk,_setCursorPosition
  1685                           	FNCALL	_writeTxtChk,_setData
  1686                           	FNCALL	_writeTxtChk,_waitLCDBusy
  1687                           	FNCALL	_setCursorPosition,_SetToSendDataToLCD
  1688                           	FNCALL	_setCursorPosition,_setData
  1689                           	FNCALL	_setCursorPosition,_waitLCDBusy
  1690                           	FNCALL	_waitLCDBusy,_SetToReadDataFromLCD
  1691                           	FNCALL	_EusartGetRxBuffer,_memcpy
  1692                           	FNCALL	_Esp8266SetNetworkParameters,_Send_UART_Data
  1693                           	FNCALL	_Esp8266SetNetworkParameters,___awdiv
  1694                           	FNCALL	_Esp8266SetNetworkParameters,___awmod
  1695                           	FNCALL	_Esp8266SetNetworkParameters,_strcat
  1696                           	FNCALL	_Esp8266SetNetworkParameters,_strcpy
  1697                           	FNCALL	_Esp8266SetNetworkParameters,_strlen
  1698                           	FNCALL	_strcat,_strcpy
  1699                           	FNCALL	_strcat,_strlen
  1700                           	FNCALL	_Send_UART_Data,_memcpy
  1701                           	FNROOT	_main
  1702                           	FNCALL	_myint,_EUSARTInterrupt
  1703                           	FNCALL	_myint,_TempUpdateRequest
  1704                           	FNCALL	_myint,i1_lcdWriteText
  1705                           	FNCALL	i1_lcdWriteText,i1_writeTxtChk
  1706                           	FNCALL	i1_writeTxtChk,i1_SetToSendDataToLCD
  1707                           	FNCALL	i1_writeTxtChk,i1_setCursorPosition
  1708                           	FNCALL	i1_writeTxtChk,i1_setData
  1709                           	FNCALL	i1_writeTxtChk,i1_waitLCDBusy
  1710                           	FNCALL	i1_setCursorPosition,i1_SetToSendDataToLCD
  1711                           	FNCALL	i1_setCursorPosition,i1_setData
  1712                           	FNCALL	i1_setCursorPosition,i1_waitLCDBusy
  1713                           	FNCALL	i1_waitLCDBusy,i1_SetToReadDataFromLCD
  1714                           	FNCALL	intlevel1,_myint
  1715                           	global	intlevel1
  1716                           	FNROOT	intlevel1
  1717                           	global	_wI2CRxBufferSize
  1718                           	global	_wI2CTxBufferSize
  1719                           	global	_wI2CCommandState
  1720                           	global	EM1812EntryPoint@F1955
  1721                           	global	_gESPCommand
  1722                           	global	_gEsp8266State
  1723                           	global	main@F2342
  1724                           	global	_wTempSet
  1725                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1726                           global __pidataBANK0
  1727                           __pidataBANK0:
  1728  0A76                     	file	"./I2C.h"
  1729                           	line	24
  1730                           
  1731                           ;initializer for _wI2CRxBufferSize
  1732                           	retlw	014h
  1733  0A76  3414               	line	23
  1734                           
  1735                           ;initializer for _wI2CTxBufferSize
  1736                           	retlw	014h
  1737  0A77  3414               	line	14
  1738                           
  1739                           ;initializer for _wI2CCommandState
  1740                           	retlw	03h
  1741  0A78  3403               psect	idataBANK2,class=CODE,space=0,delta=2,noexec
  1742                           global __pidataBANK2
  1743                           __pidataBANK2:
  1744  0AB5                     	file	"EM1812.c"
  1745                           	line	96
  1746                           
  1747                           ;initializer for EM1812EntryPoint@F1955
  1748                           	retlw	0B8h
  1749  0AB5  34B8               	retlw	03h
  1750  0AB6  3403               	retlw	low(0)
  1751  0AB7  3400               	retlw	04h
  1752  0AB8  3404               	file	"./ESP8266.h"
  1753                           	line	13
  1754                           
  1755                           ;initializer for _gESPCommand
  1756                           	retlw	03h
  1757  0AB9  3403               	line	12
  1758                           
  1759                           ;initializer for _gEsp8266State
  1760                           	retlw	01h
  1761  0ABA  3401               psect	idataBANK3,class=CODE,space=0,delta=2,noexec
  1762                           global __pidataBANK3
  1763                           __pidataBANK3:
  1764  0AAF                     	file	"161518_temp_main.c"
  1765                           	line	199
  1766                           
  1767                           ;initializer for main@F2342
  1768                           	retlw	02Bh
  1769  0AAF  342B               	retlw	low(0)
  1770  0AB0  3400               	retlw	078h
  1771  0AB1  3478               	retlw	low(0)
  1772  0AB2  3400               	line	113
  1773                           
  1774                           ;initializer for _wTempSet
  1775                           	retlw	0D2h
  1776  0AB3  34D2               	retlw	0
  1777  0AB4  3400               
  1778                           	global	EM1812EntryPoint@wTry
  1779                           	global	_wTimer1IntCounter
  1780                           	global	_gTxTransmitSize
  1781                           	global	_gTxReadingPosition
  1782                           	global	_gEusartRXBufferIndex
  1783                           	global	_wI2CTxSendPos
  1784                           	global	_wNewI2CReception
  1785                           	global	_wI2CRxNbOfByteToReceived
  1786                           	global	_wI2CTxNbOfByteToSend
  1787                           	global	_wReceptionBufferPosition
  1788                           	global	_wTimer0Counter
  1789                           	global	_wTempState
  1790                           	global	_mWritingPosition
  1791                           	global	_mCursorDisplayShiftReg
  1792                           	global	_mDisplayOnOffReg
  1793                           	global	EM1812EntryPoint@F1957
  1794                           	global	Esp8266Entrypoint@wCommandsize
  1795                           	global	Esp8266Entrypoint@wCounter
  1796                           	global	Esp8266Entrypoint@prevEusartNbByteReceived
  1797                           	global	_gErrorCode
  1798                           	global	_wI2CRxBuffer
  1799                           	global	_wI2CTxBuffer
  1800                           	global	_gEusartRXBuffer
  1801                           	global	_gEusartTXBuffer
  1802                           	global	_wInterruptText
  1803                           	global	_PIR2bits
  1804                           _PIR2bits	set	0x12
  1805  0012                     	global	_TMR0
  1806                           _TMR0	set	0x15
  1807  0015                     	global	_PORTCbits
  1808                           _PORTCbits	set	0xE
  1809  000E                     	global	_PORTAbits
  1810                           _PORTAbits	set	0xC
  1811  000C                     	global	_TMR1L
  1812                           _TMR1L	set	0x16
  1813  0016                     	global	_TMR1H
  1814                           _TMR1H	set	0x17
  1815  0017                     	global	_PIR1bits
  1816                           _PIR1bits	set	0x11
  1817  0011                     	global	_PORTB
  1818                           _PORTB	set	0xD
  1819  000D                     	global	_T1CONbits
  1820                           _T1CONbits	set	0x18
  1821  0018                     	global	_PORTA
  1822                           _PORTA	set	0xC
  1823  000C                     	global	_INTCONbits
  1824                           _INTCONbits	set	0xB
  1825  000B                     	global	_PORTBbits
  1826                           _PORTBbits	set	0xD
  1827  000D                     	global	_PIE2bits
  1828                           _PIE2bits	set	0x92
  1829  0092                     	global	_TRISCbits
  1830                           _TRISCbits	set	0x8E
  1831  008E                     	global	_TRISAbits
  1832                           _TRISAbits	set	0x8C
  1833  008C                     	global	_TRISB
  1834                           _TRISB	set	0x8D
  1835  008D                     	global	_OPTION_REGbits
  1836                           _OPTION_REGbits	set	0x95
  1837  0095                     	global	_PIE1bits
  1838                           _PIE1bits	set	0x91
  1839  0091                     	global	_OSCCONbits
  1840                           _OSCCONbits	set	0x99
  1841  0099                     	global	_RCREG
  1842                           _RCREG	set	0x199
  1843  0199                     	global	_TXREG
  1844                           _TXREG	set	0x19A
  1845  019A                     	global	_TXSTAbits
  1846                           _TXSTAbits	set	0x19E
  1847  019E                     	global	_SPBRGL
  1848                           _SPBRGL	set	0x19B
  1849  019B                     	global	_SPBRGH
  1850                           _SPBRGH	set	0x19C
  1851  019C                     	global	_ANSELCbits
  1852                           _ANSELCbits	set	0x18E
  1853  018E                     	global	_ANSELAbits
  1854                           _ANSELAbits	set	0x18C
  1855  018C                     	global	_RCSTAbits
  1856                           _RCSTAbits	set	0x19D
  1857  019D                     	global	_ANSELB
  1858                           _ANSELB	set	0x18D
  1859  018D                     	global	_SSPBUF
  1860                           _SSPBUF	set	0x211
  1861  0211                     	global	_SSPSTATbits
  1862                           _SSPSTATbits	set	0x214
  1863  0214                     	global	_SSPCON2bits
  1864                           _SSPCON2bits	set	0x216
  1865  0216                     	global	_SSPADD
  1866                           _SSPADD	set	0x212
  1867  0212                     	global	_SSPCON1bits
  1868                           _SSPCON1bits	set	0x215
  1869  0215                     	global	_SSPCON3bits
  1870                           _SSPCON3bits	set	0x217
  1871  0217                     	global	_WPUB
  1872                           _WPUB	set	0x20D
  1873  020D                     psect	stringtext1,class=STRCODE,delta=2,noexec
  1874                           global __pstringtext1
  1875                           __pstringtext1:
  1876  1000                     	
  1877                           STR_1:	
  1878  1000                     	retlw	65	;'A'
  1879  1000  3441               	retlw	84	;'T'
  1880  1001  3454               	retlw	43	;'+'
  1881  1002  342B               	retlw	67	;'C'
  1882  1003  3443               	retlw	87	;'W'
  1883  1004  3457               	retlw	83	;'S'
  1884  1005  3453               	retlw	65	;'A'
  1885  1006  3441               	retlw	80	;'P'
  1886  1007  3450               	retlw	61	;'='
  1887  1008  343D               	retlw	34	;'"'
  1888  1009  3422               	retlw	34	;'"'
  1889  100A  3422               	retlw	44	;','
  1890  100B  342C               	retlw	34	;'"'
  1891  100C  3422               	retlw	34	;'"'
  1892  100D  3422               	retlw	44	;','
  1893  100E  342C               	retlw	44	;','
  1894  100F  342C               	retlw	0
  1895  1010  3400               psect	stringtext2,class=STRCODE,delta=2,noexec
  1896                           global __pstringtext2
  1897                           __pstringtext2:
  1898  1011                     	
  1899                           STR_7:	
  1900  1011                     	retlw	65	;'A'
  1901  1011  3441               	retlw	84	;'T'
  1902  1012  3454               	retlw	43	;'+'
  1903  1013  342B               	retlw	67	;'C'
  1904  1014  3443               	retlw	87	;'W'
  1905  1015  3457               	retlw	77	;'M'
  1906  1016  344D               	retlw	79	;'O'
  1907  1017  344F               	retlw	68	;'D'
  1908  1018  3444               	retlw	69	;'E'
  1909  1019  3445               	retlw	61	;'='
  1910  101A  343D               	retlw	50	;'2'
  1911  101B  3432               	retlw	13
  1912  101C  340D               	retlw	10
  1913  101D  340A               	retlw	0
  1914  101E  3400               psect	stringtext3,class=STRCODE,delta=2,noexec
  1915                           global __pstringtext3
  1916                           __pstringtext3:
  1917  101F                     	
  1918                           STR_2:	
  1919  101F                     	retlw	65	;'A'
  1920  101F  3441               	retlw	84	;'T'
  1921  1020  3454               	retlw	43	;'+'
  1922  1021  342B               	retlw	67	;'C'
  1923  1022  3443               	retlw	87	;'W'
  1924  1023  3457               	retlw	83	;'S'
  1925  1024  3453               	retlw	65	;'A'
  1926  1025  3441               	retlw	80	;'P'
  1927  1026  3450               	retlw	61	;'='
  1928  1027  343D               	retlw	34	;'"'
  1929  1028  3422               	retlw	0
  1930  1029  3400               psect	stringtext4,class=STRCODE,delta=2,noexec
  1931                           global __pstringtext4
  1932                           __pstringtext4:
  1933  102A                     	
  1934                           STR_10:	
  1935  102A                     	retlw	49	;'1'
  1936  102A  3431               	retlw	50	;'2'
  1937  102B  3432               	retlw	51	;'3'
  1938  102C  3433               	retlw	52	;'4'
  1939  102D  3434               	retlw	53	;'5'
  1940  102E  3435               	retlw	54	;'6'
  1941  102F  3436               	retlw	55	;'7'
  1942  1030  3437               	retlw	56	;'8'
  1943  1031  3438               	retlw	0
  1944  1032  3400               psect	stringtext5,class=STRCODE,delta=2,noexec
  1945                           global __pstringtext5
  1946                           __pstringtext5:
  1947  1033                     	
  1948                           STR_13:	
  1949  1033                     	retlw	82	;'R'
  1950  1033  3452               	retlw	101	;'e'
  1951  1034  3465               	retlw	116	;'t'
  1952  1035  3474               	retlw	114	;'r'
  1953  1036  3472               	retlw	121	;'y'
  1954  1037  3479               	retlw	105	;'i'
  1955  1038  3469               	retlw	110	;'n'
  1956  1039  346E               	retlw	103	;'g'
  1957  103A  3467               	retlw	0
  1958  103B  3400               psect	stringtext6,class=STRCODE,delta=2,noexec
  1959                           global __pstringtext6
  1960                           __pstringtext6:
  1961  103C                     	
  1962                           STR_11:	
  1963  103C                     	retlw	13
  1964  103C  340D               	retlw	10
  1965  103D  340A               	retlw	79	;'O'
  1966  103E  344F               	retlw	75	;'K'
  1967  103F  344B               	retlw	13
  1968  1040  340D               	retlw	10
  1969  1041  340A               	retlw	0
  1970  1042  3400               psect	stringtext7,class=STRCODE,delta=2,noexec
  1971                           global __pstringtext7
  1972                           __pstringtext7:
  1973  1043                     	
  1974                           STR_9:	
  1975  1043                     	retlw	77	;'M'
  1976  1043  344D               	retlw	101	;'e'
  1977  1044  3465               	retlw	99	;'c'
  1978  1045  3463               	retlw	99	;'c'
  1979  1046  3463               	retlw	111	;'o'
  1980  1047  346F               	retlw	115	;'s'
  1981  1048  3473               	retlw	0
  1982  1049  3400               psect	stringtext8,class=STRCODE,delta=2,noexec
  1983                           global __pstringtext8
  1984                           __pstringtext8:
  1985  104A                     	
  1986                           STR_12:	
  1987  104A                     	retlw	79	;'O'
  1988  104A  344F               	retlw	75	;'K'
  1989  104B  344B               	retlw	33	;'!'
  1990  104C  3421               	retlw	32	;' '
  1991  104D  3420               	retlw	58	;':'
  1992  104E  343A               	retlw	0
  1993  104F  3400               psect	stringtext9,class=STRCODE,delta=2,noexec
  1994                           global __pstringtext9
  1995                           __pstringtext9:
  1996  1050                     	
  1997                           STR_6:	
  1998  1050                     	retlw	44	;','
  1999  1050  342C               	retlw	48	;'0'
  2000  1051  3430               	retlw	13
  2001  1052  340D               	retlw	10
  2002  1053  340A               	retlw	0
  2003  1054  3400               psect	stringtext10,class=STRCODE,delta=2,noexec
  2004                           global __pstringtext10
  2005                           __pstringtext10:
  2006  1055                     	
  2007                           STR_5:	
  2008  1055                     	retlw	44	;','
  2009  1055  342C               	retlw	49	;'1'
  2010  1056  3431               	retlw	13
  2011  1057  340D               	retlw	10
  2012  1058  340A               	retlw	0
  2013  1059  3400               psect	stringtext11,class=STRCODE,delta=2,noexec
  2014                           global __pstringtext11
  2015                           __pstringtext11:
  2016  105A                     	
  2017                           STR_3:	
  2018  105A                     	retlw	34	;'"'
  2019  105A  3422               	retlw	44	;','
  2020  105B  342C               	retlw	34	;'"'
  2021  105C  3422               	retlw	0
  2022  105D  3400               psect	stringtext12,class=STRCODE,delta=2,noexec
  2023                           global __pstringtext12
  2024                           __pstringtext12:
  2025  105E                     	
  2026                           STR_4:	
  2027  105E                     	retlw	34	;'"'
  2028  105E  3422               	retlw	44	;','
  2029  105F  342C               	retlw	0
  2030  1060  3400               psect	stringtext13,class=STRCODE,delta=2,noexec
  2031                           global __pstringtext13
  2032                           __pstringtext13:
  2033  0000                     STR_8	equ	STR_7+0
  2034  1011                     ; #config settings
  2035                           global __CFG_FOSC$
  2036                           __CFG_FOSC$ equ 0x2
  2037  0002                     global __CFG_WDTE$OFF
  2038                           __CFG_WDTE$OFF equ 0x0
  2039  0000                     global __CFG_PWRTE$ON
  2040                           __CFG_PWRTE$ON equ 0x0
  2041  0000                     global __CFG_MCLRE$OFF
  2042                           __CFG_MCLRE$OFF equ 0x0
  2043  0000                     global __CFG_CP$OFF
  2044                           __CFG_CP$OFF equ 0x0
  2045  0000                     global __CFG_BOREN$ON
  2046                           __CFG_BOREN$ON equ 0x0
  2047  0000                     global __CFG_CLKOUTEN$ON
  2048                           __CFG_CLKOUTEN$ON equ 0x0
  2049  0000                     global __CFG_IESO$OFF
  2050                           __CFG_IESO$OFF equ 0x0
  2051  0000                     global __CFG_FCMEN$OFF
  2052                           __CFG_FCMEN$OFF equ 0x0
  2053  0000                     global __CFG_WRT$OFF
  2054                           __CFG_WRT$OFF equ 0x0
  2055  0000                     global __CFG_VCAPEN$OFF
  2056                           __CFG_VCAPEN$OFF equ 0x0
  2057  0000                     global __CFG_STVREN$OFF
  2058                           __CFG_STVREN$OFF equ 0x0
  2059  0000                     global __CFG_BORV$LO
  2060                           __CFG_BORV$LO equ 0x0
  2061  0000                     global __CFG_LPBOR$OFF
  2062                           __CFG_LPBOR$OFF equ 0x0
  2063  0000                     global __CFG_LVP$OFF
  2064                           __CFG_LVP$OFF equ 0x0
  2065  0000                     	file	"C:\Users\dell\AppData\Local\Temp\sao4."
  2066                           	line	#
  2067                           psect cinit,class=CODE,delta=2
  2068                           global start_initialization
  2069                           start_initialization:
  2070  006F                     
  2071                           global __initialization
  2072                           __initialization:
  2073  006F                     psect	bssBANK0,class=BANK0,space=1,noexec
  2074                           global __pbssBANK0
  2075                           __pbssBANK0:
  2076  0046                     _wHumidity:
  2077  0046                            ds      2
  2078  0046                     
  2079                           _test:
  2080  0048                            ds      2
  2081  0048                     
  2082                           EM1812EntryPoint@wTry:
  2083  004A                            ds      1
  2084  004A                     
  2085                           _wCounter2:
  2086  004B                            ds      1
  2087  004B                     
  2088                           _wTimer1IntCounter:
  2089  004C                            ds      1
  2090  004C                     
  2091                           _wTrial:
  2092  004D                            ds      1
  2093  004D                     
  2094                           _gTxTransmitSize:
  2095  004E                            ds      1
  2096  004E                     
  2097                           _gTxReadingPosition:
  2098  004F                            ds      1
  2099  004F                     
  2100                           _gEusartRXBufferIndex:
  2101  0050                            ds      1
  2102  0050                     
  2103                           _wI2CTxSendPos:
  2104  0051                            ds      1
  2105  0051                     
  2106                           _wNewI2CReception:
  2107  0052                            ds      1
  2108  0052                     
  2109                           _wI2CRxNbOfByteToReceived:
  2110  0053                            ds      1
  2111  0053                     
  2112                           _wI2CTxNbOfByteToSend:
  2113  0054                            ds      1
  2114  0054                     
  2115                           _wReceptionCounterPrev:
  2116  0055                            ds      1
  2117  0055                     
  2118                           _wReceptionCounter:
  2119  0056                            ds      1
  2120  0056                     
  2121                           _wReceptionBufferPosition:
  2122  0057                            ds      1
  2123  0057                     
  2124                           _wTimer0Counter:
  2125  0058                            ds      1
  2126  0058                     
  2127                           _wTempState:
  2128  0059                            ds      1
  2129  0059                     
  2130                           _mWritingPosition:
  2131  005A                            ds      1
  2132  005A                     
  2133                           _mCursorDisplayShiftReg:
  2134  005B                            ds      1
  2135  005B                     
  2136                           _mDisplayOnOffReg:
  2137  005C                            ds      1
  2138  005C                     
  2139                           psect	dataBANK0,class=BANK0,space=1,noexec
  2140                           global __pdataBANK0
  2141                           __pdataBANK0:
  2142  005D                     	file	"./I2C.h"
  2143                           	line	24
  2144                           _wI2CRxBufferSize:
  2145  005D                            ds      1
  2146  005D                     
  2147                           psect	dataBANK0
  2148                           	file	"./I2C.h"
  2149                           	line	23
  2150                           _wI2CTxBufferSize:
  2151  005E                            ds      1
  2152  005E                     
  2153                           psect	dataBANK0
  2154                           	file	"./I2C.h"
  2155                           	line	14
  2156                           _wI2CCommandState:
  2157  005F                            ds      1
  2158  005F                     
  2159                           psect	bssBANK1,class=BANK1,space=1,noexec
  2160                           global __pbssBANK1
  2161                           __pbssBANK1:
  2162  00E9                     _wTemperature:
  2163  00E9                            ds      2
  2164  00E9                     
  2165                           psect	bssBANK2,class=BANK2,space=1,noexec
  2166                           global __pbssBANK2
  2167                           __pbssBANK2:
  2168  013A                     EM1812EntryPoint@F1957:
  2169  013A                            ds      8
  2170  013A                     
  2171                           Esp8266Entrypoint@wCommandsize:
  2172  0142                            ds      1
  2173  0142                     
  2174                           Esp8266Entrypoint@wCounter:
  2175  0143                            ds      1
  2176  0143                     
  2177                           Esp8266Entrypoint@prevEusartNbByteReceived:
  2178  0144                            ds      1
  2179  0144                     
  2180                           psect	dataBANK2,class=BANK2,space=1,noexec
  2181                           global __pdataBANK2
  2182                           __pdataBANK2:
  2183  0145                     	file	"EM1812.c"
  2184                           	line	96
  2185                           EM1812EntryPoint@F1955:
  2186  0145                            ds      4
  2187  0145                     
  2188                           psect	dataBANK2
  2189                           	file	"./ESP8266.h"
  2190                           	line	13
  2191                           _gESPCommand:
  2192  0149                            ds      1
  2193  0149                     
  2194                           psect	dataBANK2
  2195                           	file	"./ESP8266.h"
  2196                           	line	12
  2197                           _gEsp8266State:
  2198  014A                            ds      1
  2199  014A                     
  2200                           psect	bssBANK3,class=BANK3,space=1,noexec
  2201                           global __pbssBANK3
  2202                           __pbssBANK3:
  2203  01A0                     _gErrorCode:
  2204  01A0                            ds      1
  2205  01A0                     
  2206                           _wI2CRxBuffer:
  2207  01A1                            ds      20
  2208  01A1                     
  2209                           _wI2CTxBuffer:
  2210  01B5                            ds      20
  2211  01B5                     
  2212                           psect	dataBANK3,class=BANK3,space=1,noexec
  2213                           global __pdataBANK3
  2214                           __pdataBANK3:
  2215  01C9                     	file	"161518_temp_main.c"
  2216                           	line	199
  2217                           main@F2342:
  2218  01C9                            ds      4
  2219  01C9                     
  2220                           psect	dataBANK3
  2221                           	file	"161518_temp_main.c"
  2222                           	line	113
  2223                           _wTempSet:
  2224  01CD                            ds      2
  2225  01CD                     
  2226                           psect	bssBANK4,class=BANK4,space=1,noexec
  2227                           global __pbssBANK4
  2228                           __pbssBANK4:
  2229  0220                     _wHexTemp:
  2230  0220                            ds      20
  2231  0220                     
  2232                           _gEusartRXBuffer:
  2233  0234                            ds      50
  2234  0234                     
  2235                           psect	bssBANK5,class=BANK5,space=1,noexec
  2236                           global __pbssBANK5
  2237                           __pbssBANK5:
  2238  02A0                     _gEusartTXBuffer:
  2239  02A0                            ds      50
  2240  02A0                     
  2241                           psect	bssBANK6,class=BANK6,space=1,noexec
  2242                           global __pbssBANK6
  2243                           __pbssBANK6:
  2244  0320                     _wInterruptText:
  2245  0320                            ds      75
  2246  0320                     
  2247                           	file	"C:\Users\dell\AppData\Local\Temp\sao4."
  2248                           	line	#
  2249                           psect inittext,class=CODE,delta=2
  2250                           global init_ram,btemp
  2251                           init_ram:
  2252  0AA9                     	movwf btemp,f
  2253  0AA9  00FE               initloop:
  2254  0AAA                     	moviw fsr0++
  2255  0AAA  0012               	movwi fsr1++
  2256  0AAB  001E               	decfsz btemp
  2257  0AAC  0BFE               	goto initloop
  2258  0AAD  2AAA               	retlw 0
  2259  0AAE  3400               ; Initialize objects allocated to BANK0
  2260                           	global __pidataBANK0,__pdataBANK0
  2261                           psect cinit,class=CODE,delta=2,merge=1
  2262                           	movlw low(__pidataBANK0)
  2263  006F  3076               	movwf fsr0l
  2264  0070  0084               	movlw high(__pidataBANK0)|80h
  2265  0071  308A               	movwf fsr0h
  2266  0072  0085               	movlw low(__pdataBANK0)
  2267  0073  305D               	movwf fsr1l
  2268  0074  0086               	movlw high(__pdataBANK0)
  2269  0075  3000               	movwf fsr1h
  2270  0076  0087               	movlw 03h
  2271  0077  3003               	fcall init_ram
  2272  0078  318A  22A9  3180   ; Initialize objects allocated to BANK2
  2273                           	global __pidataBANK2,__pdataBANK2
  2274                           psect cinit,class=CODE,delta=2,merge=1
  2275                           	movlw low(__pidataBANK2)
  2276  007B  30B5               	movwf fsr0l
  2277  007C  0084               	movlw high(__pidataBANK2)|80h
  2278  007D  308A               	movwf fsr0h
  2279  007E  0085               	movlw low(__pdataBANK2)
  2280  007F  3045               	movwf fsr1l
  2281  0080  0086               	movlw high(__pdataBANK2)
  2282  0081  3001               	movwf fsr1h
  2283  0082  0087               	movlw 06h
  2284  0083  3006               	fcall init_ram
  2285  0084  318A  22A9  3180   ; Initialize objects allocated to BANK3
  2286                           	global __pidataBANK3,__pdataBANK3
  2287                           psect cinit,class=CODE,delta=2,merge=1
  2288                           	movlw low(__pidataBANK3)
  2289  0087  30AF               	movwf fsr0l
  2290  0088  0084               	movlw high(__pidataBANK3)|80h
  2291  0089  308A               	movwf fsr0h
  2292  008A  0085               	movlw low(__pdataBANK3)
  2293  008B  30C9               	movwf fsr1l
  2294  008C  0086               	movlw high(__pdataBANK3)
  2295  008D  3001               	movwf fsr1h
  2296  008E  0087               	movlw 06h
  2297  008F  3006               	fcall init_ram
  2298  0090  318A  22A9  3180   	line	#
  2299                           psect clrtext,class=CODE,delta=2
  2300                           global clear_ram0
  2301                           ;	Called with FSR0 containing the base address, and
  2302                           ;	WREG with the size to clear
  2303                           clear_ram0:
  2304  0AA3                     	clrwdt			;clear the watchdog before getting into this loop
  2305  0AA3  0064               clrloop0:
  2306  0AA4                     	clrf	indf0		;clear RAM location pointed to by FSR
  2307  0AA4  0180               	addfsr	0,1
  2308  0AA5  3101               	decfsz wreg		;Have we reached the end of clearing yet?
  2309  0AA6  0B89               	goto clrloop0	;have we reached the end yet?
  2310  0AA7  2AA4               	retlw	0		;all done for this memory range, return
  2311  0AA8  3400               ; Clear objects allocated to BANK0
  2312                           psect cinit,class=CODE,delta=2,merge=1
  2313                           	global __pbssBANK0
  2314                           	movlw	low(__pbssBANK0)
  2315  0093  3046               	movwf	fsr0l
  2316  0094  0084               	movlw	high(__pbssBANK0)
  2317  0095  3000               	movwf	fsr0h
  2318  0096  0085               	movlw	017h
  2319  0097  3017               	fcall	clear_ram0
  2320  0098  318A  22A3  3180   ; Clear objects allocated to BANK1
  2321                           psect cinit,class=CODE,delta=2,merge=1
  2322                           	global __pbssBANK1
  2323                           	movlb 1	; select bank1
  2324  009B  0021               	clrf	((__pbssBANK1)+0)&07Fh
  2325  009C  01E9               	clrf	((__pbssBANK1)+1)&07Fh
  2326  009D  01EA               ; Clear objects allocated to BANK2
  2327                           psect cinit,class=CODE,delta=2,merge=1
  2328                           	global __pbssBANK2
  2329                           	movlw	low(__pbssBANK2)
  2330  009E  303A               	movwf	fsr0l
  2331  009F  0084               	movlw	high(__pbssBANK2)
  2332  00A0  3001               	movwf	fsr0h
  2333  00A1  0085               	movlw	0Bh
  2334  00A2  300B               	fcall	clear_ram0
  2335  00A3  318A  22A3  3180   ; Clear objects allocated to BANK3
  2336                           psect cinit,class=CODE,delta=2,merge=1
  2337                           	global __pbssBANK3
  2338                           	movlw	low(__pbssBANK3)
  2339  00A6  30A0               	movwf	fsr0l
  2340  00A7  0084               	movlw	high(__pbssBANK3)
  2341  00A8  3001               	movwf	fsr0h
  2342  00A9  0085               	movlw	029h
  2343  00AA  3029               	fcall	clear_ram0
  2344  00AB  318A  22A3  3180   ; Clear objects allocated to BANK4
  2345                           psect cinit,class=CODE,delta=2,merge=1
  2346                           	global __pbssBANK4
  2347                           	movlw	low(__pbssBANK4)
  2348  00AE  3020               	movwf	fsr0l
  2349  00AF  0084               	movlw	high(__pbssBANK4)
  2350  00B0  3002               	movwf	fsr0h
  2351  00B1  0085               	movlw	046h
  2352  00B2  3046               	fcall	clear_ram0
  2353  00B3  318A  22A3  3180   ; Clear objects allocated to BANK5
  2354                           psect cinit,class=CODE,delta=2,merge=1
  2355                           	global __pbssBANK5
  2356                           	movlw	low(__pbssBANK5)
  2357  00B6  30A0               	movwf	fsr0l
  2358  00B7  0084               	movlw	high(__pbssBANK5)
  2359  00B8  3002               	movwf	fsr0h
  2360  00B9  0085               	movlw	032h
  2361  00BA  3032               	fcall	clear_ram0
  2362  00BB  318A  22A3  3180   ; Clear objects allocated to BANK6
  2363                           psect cinit,class=CODE,delta=2,merge=1
  2364                           	global __pbssBANK6
  2365                           	movlw	low(__pbssBANK6)
  2366  00BE  3020               	movwf	fsr0l
  2367  00BF  0084               	movlw	high(__pbssBANK6)
  2368  00C0  3003               	movwf	fsr0h
  2369  00C1  0085               	movlw	04Bh
  2370  00C2  304B               	fcall	clear_ram0
  2371  00C3  318A  22A3  3180   psect cinit,class=CODE,delta=2,merge=1
  2372                           global end_of_initialization,__end_of__initialization
  2373                           
  2374                           ;End of C runtime variable initialization code
  2375                           
  2376                           end_of_initialization:
  2377  00C6                     __end_of__initialization:
  2378  00C6                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  2379  00C6  107E               movlb 0
  2380  00C7  0020               ljmp _main	;jump to C main() function
  2381  00C8  3180  28CA         psect	cstackBANK7,class=BANK7,space=1,noexec
  2382                           global __pcstackBANK7
  2383                           __pcstackBANK7:
  2384  03A0                     	global	Esp8266SetNetworkParameters@wCommand
  2385                           Esp8266SetNetworkParameters@wCommand:	; 70 bytes @ 0x0
  2386  03A0                     	ds	70
  2387  03A0                     	global	Esp8266SetNetworkParameters@wNumber
  2388                           Esp8266SetNetworkParameters@wNumber:	; 3 bytes @ 0x46
  2389  03E6                     	ds	3
  2390  03E6                     	global	Esp8266SetNetworkParameters@wCommandSizeReturn
  2391                           Esp8266SetNetworkParameters@wCommandSizeReturn:	; 2 bytes @ 0x49
  2392  03E9                     	ds	2
  2393  03E9                     psect	cstackBANK2,class=BANK2,space=1,noexec
  2394                           global __pcstackBANK2
  2395                           __pcstackBANK2:
  2396  0120                     	global	main@wConv
  2397                           main@wConv:	; 4 bytes @ 0x0
  2398  0120                     	ds	4
  2399  0120                     	global	main@wHumidityPrev
  2400                           main@wHumidityPrev:	; 2 bytes @ 0x4
  2401  0124                     	ds	2
  2402  0124                     	global	main@wTemperaturePrev
  2403                           main@wTemperaturePrev:	; 2 bytes @ 0x6
  2404  0126                     	ds	2
  2405  0126                     	global	main@wCounter
  2406                           main@wCounter:	; 2 bytes @ 0x8
  2407  0128                     	ds	2
  2408  0128                     	global	main@wTemp
  2409                           main@wTemp:	; 2 bytes @ 0xA
  2410  012A                     	ds	2
  2411  012A                     	global	main@wIterationCounter
  2412                           main@wIterationCounter:	; 2 bytes @ 0xC
  2413  012C                     	ds	2
  2414  012C                     	global	main@wUpdateMenu
  2415                           main@wUpdateMenu:	; 1 bytes @ 0xE
  2416  012E                     	ds	1
  2417  012E                     	global	main@wEditingMode
  2418                           main@wEditingMode:	; 1 bytes @ 0xF
  2419  012F                     	ds	1
  2420  012F                     	global	main@wDebounceEnter
  2421                           main@wDebounceEnter:	; 2 bytes @ 0x10
  2422  0130                     	ds	2
  2423  0130                     	global	main@wDebounceUp
  2424                           main@wDebounceUp:	; 2 bytes @ 0x12
  2425  0132                     	ds	2
  2426  0132                     	global	main@wDebounceDown
  2427                           main@wDebounceDown:	; 2 bytes @ 0x14
  2428  0134                     	ds	2
  2429  0134                     	global	main@wUpBottonPressed
  2430                           main@wUpBottonPressed:	; 1 bytes @ 0x16
  2431  0136                     	ds	1
  2432  0136                     	global	main@wDownBottonPressed
  2433                           main@wDownBottonPressed:	; 1 bytes @ 0x17
  2434  0137                     	ds	1
  2435  0137                     	global	main@wEnterBottonPressed
  2436                           main@wEnterBottonPressed:	; 1 bytes @ 0x18
  2437  0138                     	ds	1
  2438  0138                     	global	main@wMenu
  2439                           main@wMenu:	; 1 bytes @ 0x19
  2440  0139                     	ds	1
  2441  0139                     psect	cstackBANK1,class=BANK1,space=1,noexec
  2442                           global __pcstackBANK1
  2443                           __pcstackBANK1:
  2444  00A0                     	global	?_Esp8266SetNetworkParameters
  2445                           ?_Esp8266SetNetworkParameters:	; 2 bytes @ 0x0
  2446  00A0                     	global	lcdWriteText@wCharReadingPos
  2447                           lcdWriteText@wCharReadingPos:	; 1 bytes @ 0x0
  2448  00A0                     	global	Esp8266SetNetworkParameters@iWifiNetworkName
  2449                           Esp8266SetNetworkParameters@iWifiNetworkName:	; 2 bytes @ 0x0
  2450  00A0                     	ds	2
  2451  00A0                     	global	Esp8266SetNetworkParameters@iWifiPassword
  2452                           Esp8266SetNetworkParameters@iWifiPassword:	; 2 bytes @ 0x2
  2453  00A2                     	ds	2
  2454  00A2                     	global	Esp8266SetNetworkParameters@iChannel
  2455                           Esp8266SetNetworkParameters@iChannel:	; 1 bytes @ 0x4
  2456  00A4                     	ds	1
  2457  00A4                     	global	Esp8266SetNetworkParameters@iHidden
  2458                           Esp8266SetNetworkParameters@iHidden:	; 1 bytes @ 0x5
  2459  00A5                     	ds	1
  2460  00A5                     ??_Esp8266SetNetworkParameters:	; 1 bytes @ 0x6
  2461  00A6                     	ds	8
  2462  00A6                     ??_Esp8266Entrypoint:	; 1 bytes @ 0xE
  2463  00AE                     	ds	2
  2464  00AE                     	global	Esp8266Entrypoint@wEspBuffer
  2465                           Esp8266Entrypoint@wEspBuffer:	; 50 bytes @ 0x10
  2466  00B0                     	ds	50
  2467  00B0                     	global	Esp8266Entrypoint@wReturnNumber
  2468                           Esp8266Entrypoint@wReturnNumber:	; 4 bytes @ 0x42
  2469  00E2                     	ds	4
  2470  00E2                     	global	Esp8266Entrypoint@wEusartNbByteReceived
  2471                           Esp8266Entrypoint@wEusartNbByteReceived:	; 1 bytes @ 0x46
  2472  00E6                     	ds	1
  2473  00E6                     ??_main:	; 1 bytes @ 0x47
  2474  00E7                     	ds	2
  2475  00E7                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2476                           global __pcstackCOMMON
  2477                           __pcstackCOMMON:
  2478  0070                     ?_EUSARTInit:	; 1 bytes @ 0x0
  2479  0070                     ?_initLCD:	; 1 bytes @ 0x0
  2480  0070                     ?_clearDisplay:	; 1 bytes @ 0x0
  2481  0070                     ?_powerOnLcd:	; 1 bytes @ 0x0
  2482  0070                     ?_setCursorOff:	; 1 bytes @ 0x0
  2483  0070                     ?_moveCursorToHome:	; 1 bytes @ 0x0
  2484  0070                     ?_setNotBlinkingCursor:	; 1 bytes @ 0x0
  2485  0070                     ?_Esp8266Entrypoint:	; 1 bytes @ 0x0
  2486  0070                     ?_Esp8266SetAccessPointMode:	; 1 bytes @ 0x0
  2487  0070                     ?_Esp8266SetupWifi:	; 1 bytes @ 0x0
  2488  0070                     ??_TempUpdateRequest:	; 1 bytes @ 0x0
  2489  0070                     ?_setData:	; 1 bytes @ 0x0
  2490  0070                     ?_writeInsChk:	; 1 bytes @ 0x0
  2491  0070                     ?_writeTxtChk:	; 1 bytes @ 0x0
  2492  0070                     ?_SetToSendDataToLCD:	; 1 bytes @ 0x0
  2493  0070                     ?_waitLCDBusy:	; 1 bytes @ 0x0
  2494  0070                     ?_writeInsNoChk:	; 1 bytes @ 0x0
  2495  0070                     ?_EusartGetNbByteReceived:	; 1 bytes @ 0x0
  2496  0070                     ?_main:	; 1 bytes @ 0x0
  2497  0070                     ?_myint:	; 1 bytes @ 0x0
  2498  0070                     ?_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  2499  0070                     ?i1_setData:	; 1 bytes @ 0x0
  2500  0070                     ??i1_setData:	; 1 bytes @ 0x0
  2501  0070                     ?i1_writeTxtChk:	; 1 bytes @ 0x0
  2502  0070                     ?i1_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  2503  0070                     ??i1_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  2504  0070                     ?i1_SetToSendDataToLCD:	; 1 bytes @ 0x0
  2505  0070                     ??i1_SetToSendDataToLCD:	; 1 bytes @ 0x0
  2506  0070                     ?i1_waitLCDBusy:	; 1 bytes @ 0x0
  2507  0070                     ??i1_waitLCDBusy:	; 1 bytes @ 0x0
  2508  0070                     	global	?_EUSARTInterrupt
  2509                           ?_EUSARTInterrupt:	; 2 bytes @ 0x0
  2510  0070                     ?_TempUpdateRequest:	; 2 bytes @ 0x0
  2511  0070                     	ds	2
  2512  0070                     ??_EUSARTInterrupt:	; 1 bytes @ 0x2
  2513  0072                     	global	i1setData@iValue
  2514                           i1setData@iValue:	; 1 bytes @ 0x2
  2515  0072                     	ds	1
  2516  0072                     	global	i1waitLCDBusy@busyFlag
  2517                           i1waitLCDBusy@busyFlag:	; 2 bytes @ 0x3
  2518  0073                     	ds	1
  2519  0073                     	global	EUSARTInterrupt@gErrorCode
  2520                           EUSARTInterrupt@gErrorCode:	; 1 bytes @ 0x4
  2521  0074                     	ds	1
  2522  0074                     ?i1_setCursorPosition:	; 1 bytes @ 0x5
  2523  0075                     	global	i1setCursorPosition@iPosition
  2524                           i1setCursorPosition@iPosition:	; 1 bytes @ 0x5
  2525  0075                     	ds	1
  2526  0075                     ??i1_setCursorPosition:	; 1 bytes @ 0x6
  2527  0076                     	ds	2
  2528  0076                     	global	i1setCursorPosition@iLine
  2529                           i1setCursorPosition@iLine:	; 1 bytes @ 0x8
  2530  0078                     	ds	1
  2531  0078                     	global	i1setCursorPosition@wLCDIndex
  2532                           i1setCursorPosition@wLCDIndex:	; 1 bytes @ 0x9
  2533  0079                     	ds	1
  2534  0079                     ??i1_writeTxtChk:	; 1 bytes @ 0xA
  2535  007A                     	ds	2
  2536  007A                     	global	i1writeTxtChk@iOpCode
  2537                           i1writeTxtChk@iOpCode:	; 1 bytes @ 0xC
  2538  007C                     	ds	1
  2539  007C                     	global	i1lcdWriteText@wCharReadingPos
  2540                           i1lcdWriteText@wCharReadingPos:	; 1 bytes @ 0xD
  2541  007D                     	ds	1
  2542  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2543                           global __pcstackBANK0
  2544                           __pcstackBANK0:
  2545  0020                     ?i1_lcdWriteText:	; 1 bytes @ 0x0
  2546  0020                     	global	i1lcdWriteText@iText
  2547                           i1lcdWriteText@iText:	; 2 bytes @ 0x0
  2548  0020                     	ds	2
  2549  0020                     ??i1_lcdWriteText:	; 1 bytes @ 0x2
  2550  0022                     	ds	3
  2551  0022                     ??_myint:	; 1 bytes @ 0x5
  2552  0025                     	ds	1
  2553  0025                     	global	myint@wText_460
  2554                           myint@wText_460:	; 3 bytes @ 0x6
  2555  0026                     	ds	3
  2556  0026                     	global	myint@wI2CError
  2557                           myint@wI2CError:	; 2 bytes @ 0x9
  2558  0029                     	ds	2
  2559  0029                     	global	myint@wText
  2560                           myint@wText:	; 3 bytes @ 0xB
  2561  002B                     	ds	3
  2562  002B                     	global	myint@wEUSARTError
  2563                           myint@wEUSARTError:	; 2 bytes @ 0xE
  2564  002E                     	ds	2
  2565  002E                     ??_EUSARTInit:	; 1 bytes @ 0x10
  2566  0030                     ??_Esp8266SetAccessPointMode:	; 1 bytes @ 0x10
  2567  0030                     ??_Esp8266SetupWifi:	; 1 bytes @ 0x10
  2568  0030                     ??_setData:	; 1 bytes @ 0x10
  2569  0030                     ??_SetToSendDataToLCD:	; 1 bytes @ 0x10
  2570  0030                     ??_waitLCDBusy:	; 1 bytes @ 0x10
  2571  0030                     ??_EusartGetNbByteReceived:	; 1 bytes @ 0x10
  2572  0030                     ?_Debounce:	; 1 bytes @ 0x10
  2573  0030                     ??_SetToReadDataFromLCD:	; 1 bytes @ 0x10
  2574  0030                     	global	?_strlen
  2575                           ?_strlen:	; 2 bytes @ 0x10
  2576  0030                     ?_memset:	; 2 bytes @ 0x10
  2577  0030                     ?_memcpy:	; 2 bytes @ 0x10
  2578  0030                     	global	?_memcmp
  2579                           ?_memcmp:	; 2 bytes @ 0x10
  2580  0030                     	global	?___awdiv
  2581                           ?___awdiv:	; 2 bytes @ 0x10
  2582  0030                     	global	?___awmod
  2583                           ?___awmod:	; 2 bytes @ 0x10
  2584  0030                     	global	Debounce@ioTimer
  2585                           Debounce@ioTimer:	; 1 bytes @ 0x10
  2586  0030                     	global	___awdiv@divisor
  2587                           ___awdiv@divisor:	; 2 bytes @ 0x10
  2588  0030                     	global	___awmod@divisor
  2589                           ___awmod@divisor:	; 2 bytes @ 0x10
  2590  0030                     	global	memcmp@vr
  2591                           memcmp@vr:	; 2 bytes @ 0x10
  2592  0030                     	global	memcpy@d1
  2593                           memcpy@d1:	; 2 bytes @ 0x10
  2594  0030                     	global	memset@dest
  2595                           memset@dest:	; 2 bytes @ 0x10
  2596  0030                     	global	strlen@s
  2597                           strlen@s:	; 2 bytes @ 0x10
  2598  0030                     	ds	1
  2599  0030                     	global	Debounce@swPressed
  2600                           Debounce@swPressed:	; 1 bytes @ 0x11
  2601  0031                     	ds	1
  2602  0031                     ??_strlen:	; 1 bytes @ 0x12
  2603  0032                     ??_Debounce:	; 1 bytes @ 0x12
  2604  0032                     	global	setData@iValue
  2605                           setData@iValue:	; 1 bytes @ 0x12
  2606  0032                     	global	___awdiv@dividend
  2607                           ___awdiv@dividend:	; 2 bytes @ 0x12
  2608  0032                     	global	___awmod@dividend
  2609                           ___awmod@dividend:	; 2 bytes @ 0x12
  2610  0032                     	global	memcmp@n
  2611                           memcmp@n:	; 2 bytes @ 0x12
  2612  0032                     	global	memcpy@s1
  2613                           memcpy@s1:	; 2 bytes @ 0x12
  2614  0032                     	global	memset@c
  2615                           memset@c:	; 2 bytes @ 0x12
  2616  0032                     	ds	1
  2617  0032                     ??_writeInsNoChk:	; 1 bytes @ 0x13
  2618  0033                     	global	waitLCDBusy@busyFlag
  2619                           waitLCDBusy@busyFlag:	; 2 bytes @ 0x13
  2620  0033                     	ds	1
  2621  0033                     ??_memcmp:	; 1 bytes @ 0x14
  2622  0034                     ??___awdiv:	; 1 bytes @ 0x14
  2623  0034                     ??___awmod:	; 1 bytes @ 0x14
  2624  0034                     	global	Debounce@iSwitch
  2625                           Debounce@iSwitch:	; 1 bytes @ 0x14
  2626  0034                     	global	writeInsNoChk@iOpCode
  2627                           writeInsNoChk@iOpCode:	; 1 bytes @ 0x14
  2628  0034                     	global	memcpy@n
  2629                           memcpy@n:	; 2 bytes @ 0x14
  2630  0034                     	global	memset@n
  2631                           memset@n:	; 2 bytes @ 0x14
  2632  0034                     	global	strlen@a
  2633                           strlen@a:	; 2 bytes @ 0x14
  2634  0034                     	ds	1
  2635  0034                     ??_writeInsChk:	; 1 bytes @ 0x15
  2636  0035                     ?_setCursorPosition:	; 1 bytes @ 0x15
  2637  0035                     	global	writeInsChk@iOpCode
  2638                           writeInsChk@iOpCode:	; 1 bytes @ 0x15
  2639  0035                     	global	setCursorPosition@iPosition
  2640                           setCursorPosition@iPosition:	; 1 bytes @ 0x15
  2641  0035                     	global	___awdiv@counter
  2642                           ___awdiv@counter:	; 1 bytes @ 0x15
  2643  0035                     	global	___awmod@counter
  2644                           ___awmod@counter:	; 1 bytes @ 0x15
  2645  0035                     	ds	1
  2646  0035                     ??_memset:	; 1 bytes @ 0x16
  2647  0036                     ??_initLCD:	; 1 bytes @ 0x16
  2648  0036                     ??_clearDisplay:	; 1 bytes @ 0x16
  2649  0036                     ??_powerOnLcd:	; 1 bytes @ 0x16
  2650  0036                     ??_setCursorOff:	; 1 bytes @ 0x16
  2651  0036                     ??_moveCursorToHome:	; 1 bytes @ 0x16
  2652  0036                     ??_setNotBlinkingCursor:	; 1 bytes @ 0x16
  2653  0036                     ??_setCursorPosition:	; 1 bytes @ 0x16
  2654  0036                     ??_memcpy:	; 1 bytes @ 0x16
  2655  0036                     ?_strcpy:	; 1 bytes @ 0x16
  2656  0036                     	global	___awdiv@sign
  2657                           ___awdiv@sign:	; 1 bytes @ 0x16
  2658  0036                     	global	___awmod@sign
  2659                           ___awmod@sign:	; 1 bytes @ 0x16
  2660  0036                     	global	memcmp@vl
  2661                           memcmp@vl:	; 1 bytes @ 0x16
  2662  0036                     	global	strcpy@src
  2663                           strcpy@src:	; 2 bytes @ 0x16
  2664  0036                     	ds	1
  2665  0036                     	global	memcpy@tmp
  2666                           memcpy@tmp:	; 1 bytes @ 0x17
  2667  0037                     	global	___awdiv@quotient
  2668                           ___awdiv@quotient:	; 2 bytes @ 0x17
  2669  0037                     	global	memcmp@r
  2670                           memcmp@r:	; 2 bytes @ 0x17
  2671  0037                     	ds	1
  2672  0037                     ??_strcpy:	; 1 bytes @ 0x18
  2673  0038                     	global	setCursorPosition@iLine
  2674                           setCursorPosition@iLine:	; 1 bytes @ 0x18
  2675  0038                     	global	memcpy@d
  2676                           memcpy@d:	; 2 bytes @ 0x18
  2677  0038                     	ds	1
  2678  0038                     ?_uint8_tToa:	; 1 bytes @ 0x19
  2679  0039                     	global	setCursorPosition@wLCDIndex
  2680                           setCursorPosition@wLCDIndex:	; 1 bytes @ 0x19
  2681  0039                     	global	uint8_tToa@iNumber
  2682                           uint8_tToa@iNumber:	; 1 bytes @ 0x19
  2683  0039                     	global	memcmp@l
  2684                           memcmp@l:	; 1 bytes @ 0x19
  2685  0039                     	ds	1
  2686  0039                     ??_writeTxtChk:	; 1 bytes @ 0x1A
  2687  003A                     ??_uint8_tToa:	; 1 bytes @ 0x1A
  2688  003A                     	global	memcpy@s
  2689                           memcpy@s:	; 2 bytes @ 0x1A
  2690  003A                     	global	memset@k
  2691                           memset@k:	; 2 bytes @ 0x1A
  2692  003A                     	global	strcpy@s
  2693                           strcpy@s:	; 2 bytes @ 0x1A
  2694  003A                     	ds	2
  2695  003A                     ?_Send_UART_Data:	; 1 bytes @ 0x1C
  2696  003C                     ?_EusartGetRxBuffer:	; 1 bytes @ 0x1C
  2697  003C                     	global	writeTxtChk@iOpCode
  2698                           writeTxtChk@iOpCode:	; 1 bytes @ 0x1C
  2699  003C                     	global	EusartGetRxBuffer@iDataSize
  2700                           EusartGetRxBuffer@iDataSize:	; 1 bytes @ 0x1C
  2701  003C                     	global	strcpy@d
  2702                           strcpy@d:	; 1 bytes @ 0x1C
  2703  003C                     	global	Send_UART_Data@iData
  2704                           Send_UART_Data@iData:	; 2 bytes @ 0x1C
  2705  003C                     	global	memset@s
  2706                           memset@s:	; 2 bytes @ 0x1C
  2707  003C                     	ds	1
  2708  003C                     ?_lcdWriteAllText:	; 1 bytes @ 0x1D
  2709  003D                     	global	uint8_tToa@wHundred
  2710                           uint8_tToa@wHundred:	; 1 bytes @ 0x1D
  2711  003D                     	global	EusartGetRxBuffer@oNbOfByteReceived
  2712                           EusartGetRxBuffer@oNbOfByteReceived:	; 1 bytes @ 0x1D
  2713  003D                     	global	strcpy@dest
  2714                           strcpy@dest:	; 1 bytes @ 0x1D
  2715  003D                     	global	lcdWriteAllText@iText
  2716                           lcdWriteAllText@iText:	; 2 bytes @ 0x1D
  2717  003D                     	ds	1
  2718  003D                     ?_strcat:	; 1 bytes @ 0x1E
  2719  003E                     ??_EusartGetRxBuffer:	; 1 bytes @ 0x1E
  2720  003E                     	global	uint8_tToa@wTen
  2721                           uint8_tToa@wTen:	; 1 bytes @ 0x1E
  2722  003E                     	global	Send_UART_Data@iData_Length
  2723                           Send_UART_Data@iData_Length:	; 1 bytes @ 0x1E
  2724  003E                     	global	strcat@src
  2725                           strcat@src:	; 2 bytes @ 0x1E
  2726  003E                     	ds	1
  2727  003E                     ??_Send_UART_Data:	; 1 bytes @ 0x1F
  2728  003F                     ??_lcdWriteAllText:	; 1 bytes @ 0x1F
  2729  003F                     	global	uint8_tToa@wUnit
  2730                           uint8_tToa@wUnit:	; 1 bytes @ 0x1F
  2731  003F                     	ds	1
  2732  003F                     ??_strcat:	; 1 bytes @ 0x20
  2733  0040                     	global	uint8_tToa@wText
  2734                           uint8_tToa@wText:	; 1 bytes @ 0x20
  2735  0040                     	global	EusartGetRxBuffer@oData
  2736                           EusartGetRxBuffer@oData:	; 1 bytes @ 0x20
  2737  0040                     	ds	1
  2738  0040                     ?_lcdWriteText:	; 1 bytes @ 0x21
  2739  0041                     	global	lcdWriteText@iText
  2740                           lcdWriteText@iText:	; 2 bytes @ 0x21
  2741  0041                     	ds	1
  2742  0041                     	global	strcat@dest
  2743                           strcat@dest:	; 1 bytes @ 0x22
  2744  0042                     	ds	1
  2745  0042                     ??_lcdWriteText:	; 1 bytes @ 0x23
  2746  0043                     	global	lcdWriteAllText@wCharReadingPos
  2747                           lcdWriteAllText@wCharReadingPos:	; 1 bytes @ 0x23
  2748  0043                     	ds	3
  2749  0043                     ;!
  2750                           ;!Data Sizes:
  2751                           ;!    Strings     97
  2752                           ;!    Constant    0
  2753                           ;!    Data        15
  2754                           ;!    BSS         272
  2755                           ;!    Persistent  0
  2756                           ;!    Stack       0
  2757                           ;!
  2758                           ;!Auto Spaces:
  2759                           ;!    Space          Size  Autos    Used
  2760                           ;!    COMMON           14     14      14
  2761                           ;!    BANK0            80     38      64
  2762                           ;!    BANK1            80     73      75
  2763                           ;!    BANK2            80     26      43
  2764                           ;!    BANK3            80      0      47
  2765                           ;!    BANK4            80      0      70
  2766                           ;!    BANK5            80      0      50
  2767                           ;!    BANK6            80      0      75
  2768                           ;!    BANK7            80     75      75
  2769                           ;!    BANK8            80      0       0
  2770                           ;!    BANK9            80      0       0
  2771                           ;!    BANK10           80      0       0
  2772                           ;!    BANK11           80      0       0
  2773                           ;!    BANK12           48      0       0
  2774                           
  2775                           ;!
  2776                           ;!Pointer List with Targets:
  2777                           ;!
  2778                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 70
  2779                           ;!		 -> STR_10(CODE[9]), STR_9(CODE[7]), Esp8266SetNetworkParameters@wCommand(BANK7[70])
                                 , STR_1(CODE[17]), 
  2780                           ;!
  2781                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 70
  2782                           ;!		 -> STR_10(CODE[9]), STR_9(CODE[7]), Esp8266SetNetworkParameters@wCommand(BANK7[70])
                                 , STR_1(CODE[17]), 
  2783                           ;!
  2784                           ;!    strcpy@dest	PTR unsigned char  size(1) Largest target is 70
  2785                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK7[70]), 
  2786                           ;!
  2787                           ;!    strcpy@d	PTR unsigned char  size(1) Largest target is 70
  2788                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK7[70]), 
  2789                           ;!
  2790                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 11
  2791                           ;!		 -> STR_10(CODE[9]), STR_9(CODE[7]), STR_6(CODE[5]), STR_5(CODE[5]), 
  2792                           ;!		 -> Esp8266SetNetworkParameters@wNumber(BANK7[3]), STR_4(CODE[3]), STR_3(CODE[4]), S
                                 TR_2(CODE[11]), 
  2793                           ;!
  2794                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 11
  2795                           ;!		 -> STR_10(CODE[9]), STR_9(CODE[7]), STR_6(CODE[5]), STR_5(CODE[5]), 
  2796                           ;!		 -> Esp8266SetNetworkParameters@wNumber(BANK7[3]), STR_4(CODE[3]), STR_3(CODE[4]), S
                                 TR_2(CODE[11]), 
  2797                           ;!
  2798                           ;!    strcat@src	PTR const unsigned char  size(2) Largest target is 9
  2799                           ;!		 -> STR_10(CODE[9]), STR_9(CODE[7]), STR_6(CODE[5]), STR_5(CODE[5]), 
  2800                           ;!		 -> Esp8266SetNetworkParameters@wNumber(BANK7[3]), STR_4(CODE[3]), STR_3(CODE[4]), 

  2801                           ;!
  2802                           ;!    strcat@dest	PTR unsigned char  size(1) Largest target is 70
  2803                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK7[70]), 
  2804                           ;!
  2805                           ;!    memset@dest	PTR void  size(2) Largest target is 75
  2806                           ;!		 -> wI2CRxBuffer(BANK3[20]), wI2CTxBuffer(BANK3[20]), wInterruptText(BANK6[75]), 
  2807                           ;!
  2808                           ;!    memset@s	PTR unsigned char  size(2) Largest target is 75
  2809                           ;!		 -> wI2CRxBuffer(BANK3[20]), wI2CTxBuffer(BANK3[20]), wInterruptText(BANK6[75]), 
  2810                           ;!
  2811                           ;!    memcpy@d1	PTR void  size(2) Largest target is 50
  2812                           ;!		 -> gEusartTXBuffer(BANK5[50]), Esp8266Entrypoint@wEspBuffer(BANK1[50]), wI2CTxBuffe
                                 r(BANK3[20]), EM1812EntryPoint@ReceptionBuffer(COMMON[8]), 
  2813                           ;!
  2814                           ;!    memcpy@d	PTR unsigned char  size(2) Largest target is 50
  2815                           ;!		 -> gEusartTXBuffer(BANK5[50]), Esp8266Entrypoint@wEspBuffer(BANK1[50]), wI2CTxBuffe
                                 r(BANK3[20]), EM1812EntryPoint@ReceptionBuffer(COMMON[8]), 
  2816                           ;!
  2817                           ;!    memcpy@s1	PTR const void  size(2) Largest target is 70
  2818                           ;!		 -> gEusartRXBuffer(BANK4[50]), STR_8(CODE[14]), Esp8266SetNetworkParameters@wComman
                                 d(BANK7[70]), wI2CRxBuffer(BANK3[20]), 
  2819                           ;!		 -> EM1812EntryPoint@SetGetTempCommand(COMMON[4]), 
  2820                           ;!
  2821                           ;!    memcpy@s	PTR const unsigned char  size(2) Largest target is 70
  2822                           ;!		 -> gEusartRXBuffer(BANK4[50]), STR_8(CODE[14]), Esp8266SetNetworkParameters@wComman
                                 d(BANK7[70]), wI2CRxBuffer(BANK3[20]), 
  2823                           ;!		 -> EM1812EntryPoint@SetGetTempCommand(COMMON[4]), 
  2824                           ;!
  2825                           ;!    memcmp@vr	PTR const void  size(2) Largest target is 7
  2826                           ;!		 -> STR_11(CODE[7]), 
  2827                           ;!
  2828                           ;!    memcmp@r	PTR const unsigned char  size(2) Largest target is 7
  2829                           ;!		 -> STR_11(CODE[7]), 
  2830                           ;!
  2831                           ;!    memcmp@vl	PTR const void  size(1) Largest target is 50
  2832                           ;!		 -> Esp8266Entrypoint@wEspBuffer(BANK1[50]), 
  2833                           ;!
  2834                           ;!    memcmp@l	PTR const unsigned char  size(1) Largest target is 50
  2835                           ;!		 -> Esp8266Entrypoint@wEspBuffer(BANK1[50]), 
  2836                           ;!
  2837                           ;!    EusartGetRxBuffer@oData	PTR unsigned char  size(1) Largest target is 50
  2838                           ;!		 -> Esp8266Entrypoint@wEspBuffer(BANK1[50]), 
  2839                           ;!
  2840                           ;!    EusartGetRxBuffer@oNbOfByteReceived	PTR unsigned char  size(1) Largest target is 1
                                 
  2841                           ;!		 -> Esp8266Entrypoint@wEusartNbByteReceived(BANK1[1]), 
  2842                           ;!
  2843                           ;!    Send_UART_Data@iData	PTR unsigned char  size(2) Largest target is 70
  2844                           ;!		 -> STR_8(CODE[14]), Esp8266SetNetworkParameters@wCommand(BANK7[70]), 
  2845                           ;!
  2846                           ;!    sp__strcpy	PTR unsigned char  size(1) Largest target is 70
  2847                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK7[70]), 
  2848                           ;!
  2849                           ;!    Esp8266SetNetworkParameters@iWifiPassword	PTR unsigned char  size(2) Largest targe
                                 t is 9
  2850                           ;!		 -> STR_10(CODE[9]), 
  2851                           ;!
  2852                           ;!    Esp8266SetNetworkParameters@iWifiNetworkName	PTR unsigned char  size(2) Largest ta
                                 rget is 7
  2853                           ;!		 -> STR_9(CODE[7]), 
  2854                           ;!
  2855                           ;!    sp__uint8_tToa	PTR unsigned char  size(1) Largest target is 4
  2856                           ;!		 -> Esp8266Entrypoint@wReturnNumber(BANK1[4]), 
  2857                           ;!
  2858                           ;!    uint8_tToa@wText	PTR unsigned char  size(1) Largest target is 4
  2859                           ;!		 -> Esp8266Entrypoint@wReturnNumber(BANK1[4]), 
  2860                           ;!
  2861                           ;!    sp__strcat	PTR unsigned char  size(1) Largest target is 70
  2862                           ;!		 -> Esp8266SetNetworkParameters@wCommand(BANK7[70]), 
  2863                           ;!
  2864                           ;!    sp__memcpy	PTR void  size(2) Largest target is 50
  2865                           ;!		 -> gEusartTXBuffer(BANK5[50]), Esp8266Entrypoint@wEspBuffer(BANK1[50]), wI2CTxBuffe
                                 r(BANK3[20]), EM1812EntryPoint@ReceptionBuffer(COMMON[8]), 
  2866                           ;!
  2867                           ;!    lcdWriteAllText@iText	PTR unsigned char  size(2) Largest target is 14
  2868                           ;!		 -> STR_7(CODE[14]), 
  2869                           ;!
  2870                           ;!    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 9
  2871                           ;!		 -> STR_13(CODE[9]), Esp8266Entrypoint@wReturnNumber(BANK1[4]), STR_12(CODE[6]), myi
                                 nt@wText_460(BANK0[3]), 
  2872                           ;!		 -> myint@wText(BANK0[3]), 
  2873                           ;!
  2874                           ;!    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
  2875                           ;!		 -> main@wEnterBottonPressed(BANK2[1]), main@wDownBottonPressed(BANK2[1]), main@wUpB
                                 ottonPressed(BANK2[1]), 
  2876                           ;!
  2877                           ;!    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
  2878                           ;!		 -> main@wDebounceDown(BANK2[2]), main@wDebounceUp(BANK2[2]), main@wDebounceEnter(BA
                                 NK2[2]), 
  2879                           ;!
  2880                           ;!    sp__memset	PTR void  size(2) Largest target is 75
  2881                           ;!		 -> wI2CRxBuffer(BANK3[20]), wI2CTxBuffer(BANK3[20]), wInterruptText(BANK6[75]), 
  2882                           ;!
  2883                           
  2884                           
  2885                           ;!
  2886                           ;!Critical Paths under _main in COMMON
  2887                           ;!
  2888                           ;!    None.
  2889                           ;!
  2890                           ;!Critical Paths under _myint in COMMON
  2891                           ;!
  2892                           ;!    _myint->i1_lcdWriteText
  2893                           ;!    i1_lcdWriteText->i1_writeTxtChk
  2894                           ;!    i1_writeTxtChk->i1_setCursorPosition
  2895                           ;!    i1_setCursorPosition->i1_waitLCDBusy
  2896                           ;!
  2897                           ;!Critical Paths under _main in BANK0
  2898                           ;!
  2899                           ;!    _setNotBlinkingCursor->_writeInsChk
  2900                           ;!    _setCursorOff->_writeInsChk
  2901                           ;!    _powerOnLcd->_writeInsChk
  2902                           ;!    _moveCursorToHome->_writeInsChk
  2903                           ;!    _initLCD->_writeInsChk
  2904                           ;!    _clearDisplay->_writeInsChk
  2905                           ;!    _writeInsChk->_waitLCDBusy
  2906                           ;!    _writeInsChk->_writeInsNoChk
  2907                           ;!    _writeInsNoChk->_setData
  2908                           ;!    _Esp8266Entrypoint->_lcdWriteText
  2909                           ;!    _uint8_tToa->___awdiv
  2910                           ;!    _lcdWriteText->_uint8_tToa
  2911                           ;!    _lcdWriteAllText->_writeTxtChk
  2912                           ;!    _writeTxtChk->_setCursorPosition
  2913                           ;!    _setCursorPosition->_waitLCDBusy
  2914                           ;!    _EusartGetRxBuffer->_memcpy
  2915                           ;!    _Esp8266SetNetworkParameters->_strcat
  2916                           ;!    _strcat->_strcpy
  2917                           ;!    _strcpy->_strlen
  2918                           ;!    _Send_UART_Data->_memcpy
  2919                           ;!
  2920                           ;!Critical Paths under _myint in BANK0
  2921                           ;!
  2922                           ;!    _myint->i1_lcdWriteText
  2923                           ;!
  2924                           ;!Critical Paths under _main in BANK1
  2925                           ;!
  2926                           ;!    _main->_Esp8266Entrypoint
  2927                           ;!    _Esp8266Entrypoint->_Esp8266SetNetworkParameters
  2928                           ;!
  2929                           ;!Critical Paths under _myint in BANK1
  2930                           ;!
  2931                           ;!    None.
  2932                           ;!
  2933                           ;!Critical Paths under _main in BANK2
  2934                           ;!
  2935                           ;!    None.
  2936                           ;!
  2937                           ;!Critical Paths under _myint in BANK2
  2938                           ;!
  2939                           ;!    None.
  2940                           ;!
  2941                           ;!Critical Paths under _main in BANK3
  2942                           ;!
  2943                           ;!    None.
  2944                           ;!
  2945                           ;!Critical Paths under _myint in BANK3
  2946                           ;!
  2947                           ;!    None.
  2948                           ;!
  2949                           ;!Critical Paths under _main in BANK4
  2950                           ;!
  2951                           ;!    None.
  2952                           ;!
  2953                           ;!Critical Paths under _myint in BANK4
  2954                           ;!
  2955                           ;!    None.
  2956                           ;!
  2957                           ;!Critical Paths under _main in BANK5
  2958                           ;!
  2959                           ;!    None.
  2960                           ;!
  2961                           ;!Critical Paths under _myint in BANK5
  2962                           ;!
  2963                           ;!    None.
  2964                           ;!
  2965                           ;!Critical Paths under _main in BANK6
  2966                           ;!
  2967                           ;!    None.
  2968                           ;!
  2969                           ;!Critical Paths under _myint in BANK6
  2970                           ;!
  2971                           ;!    None.
  2972                           ;!
  2973                           ;!Critical Paths under _main in BANK7
  2974                           ;!
  2975                           ;!    _Esp8266Entrypoint->_Esp8266SetNetworkParameters
  2976                           ;!
  2977                           ;!Critical Paths under _myint in BANK7
  2978                           ;!
  2979                           ;!    None.
  2980                           ;!
  2981                           ;!Critical Paths under _main in BANK8
  2982                           ;!
  2983                           ;!    None.
  2984                           ;!
  2985                           ;!Critical Paths under _myint in BANK8
  2986                           ;!
  2987                           ;!    None.
  2988                           ;!
  2989                           ;!Critical Paths under _main in BANK9
  2990                           ;!
  2991                           ;!    None.
  2992                           ;!
  2993                           ;!Critical Paths under _myint in BANK9
  2994                           ;!
  2995                           ;!    None.
  2996                           ;!
  2997                           ;!Critical Paths under _main in BANK10
  2998                           ;!
  2999                           ;!    None.
  3000                           ;!
  3001                           ;!Critical Paths under _myint in BANK10
  3002                           ;!
  3003                           ;!    None.
  3004                           ;!
  3005                           ;!Critical Paths under _main in BANK11
  3006                           ;!
  3007                           ;!    None.
  3008                           ;!
  3009                           ;!Critical Paths under _myint in BANK11
  3010                           ;!
  3011                           ;!    None.
  3012                           ;!
  3013                           ;!Critical Paths under _main in BANK12
  3014                           ;!
  3015                           ;!    None.
  3016                           ;!
  3017                           ;!Critical Paths under _myint in BANK12
  3018                           ;!
  3019                           ;!    None.
  3020                           
  3021 ;;
  3022 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3023 ;;
  3024                           
  3025                           ;!
  3026                           ;!Call Graph Tables:
  3027                           ;!
  3028                           ;! ---------------------------------------------------------------------------------
  3029                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3030                           ;! ---------------------------------------------------------------------------------
  3031                           ;! (0) _main                                                48    48      0   26440
  3032                           ;!                                             71 BANK1      2     2      0
  3033                           ;!                                              0 BANK2     26    26      0
  3034                           ;!                           _Debounce
  3035                           ;!                         _EUSARTInit
  3036                           ;!                  _Esp8266Entrypoint
  3037                           ;!          _Esp8266SetAccessPointMode
  3038                           ;!                   _Esp8266SetupWifi
  3039                           ;!                       _clearDisplay
  3040                           ;!                            _initLCD
  3041                           ;!                             _memset
  3042                           ;!                   _moveCursorToHome
  3043                           ;!                         _powerOnLcd
  3044                           ;!                       _setCursorOff
  3045                           ;!               _setNotBlinkingCursor
  3046                           ;! ---------------------------------------------------------------------------------
  3047                           ;! (1) _setNotBlinkingCursor                                 1     1      0     254
  3048                           ;!                                             22 BANK0      1     1      0
  3049                           ;!                        _writeInsChk
  3050                           ;! ---------------------------------------------------------------------------------
  3051                           ;! (1) _setCursorOff                                         1     1      0     254
  3052                           ;!                                             22 BANK0      1     1      0
  3053                           ;!                        _writeInsChk
  3054                           ;! ---------------------------------------------------------------------------------
  3055                           ;! (1) _powerOnLcd                                           1     1      0     254
  3056                           ;!                                             22 BANK0      1     1      0
  3057                           ;!                        _writeInsChk
  3058                           ;! ---------------------------------------------------------------------------------
  3059                           ;! (1) _moveCursorToHome                                     0     0      0     254
  3060                           ;!                        _writeInsChk
  3061                           ;! ---------------------------------------------------------------------------------
  3062                           ;! (1) _memset                                              14     8      6    1897
  3063                           ;!                                             16 BANK0     14     8      6
  3064                           ;! ---------------------------------------------------------------------------------
  3065                           ;! (1) _initLCD                                              1     1      0     632
  3066                           ;!                                             22 BANK0      1     1      0
  3067                           ;!                       _clearDisplay
  3068                           ;!                            _setData
  3069                           ;!                        _writeInsChk
  3070                           ;! ---------------------------------------------------------------------------------
  3071                           ;! (2) _clearDisplay                                         0     0      0     254
  3072                           ;!                        _writeInsChk
  3073                           ;! ---------------------------------------------------------------------------------
  3074                           ;! (2) _writeInsChk                                          1     1      0     254
  3075                           ;!                                             21 BANK0      1     1      0
  3076                           ;!                        _waitLCDBusy
  3077                           ;!                      _writeInsNoChk
  3078                           ;! ---------------------------------------------------------------------------------
  3079                           ;! (3) _writeInsNoChk                                        2     2      0     186
  3080                           ;!                                             19 BANK0      2     2      0
  3081                           ;!                 _SetToSendDataToLCD
  3082                           ;!                            _setData
  3083                           ;! ---------------------------------------------------------------------------------
  3084                           ;! (1) _Esp8266SetupWifi                                     0     0      0       0
  3085                           ;! ---------------------------------------------------------------------------------
  3086                           ;! (1) _Esp8266SetAccessPointMode                            0     0      0       0
  3087                           ;! ---------------------------------------------------------------------------------
  3088                           ;! (1) _Esp8266Entrypoint                                   57    57      0   21187
  3089                           ;!                                             14 BANK1     57    57      0
  3090                           ;!        _Esp8266SetNetworkParameters
  3091                           ;!            _EusartGetNbByteReceived
  3092                           ;!                  _EusartGetRxBuffer
  3093                           ;!                     _Send_UART_Data
  3094                           ;!                    _lcdWriteAllText
  3095                           ;!                       _lcdWriteText
  3096                           ;!                             _memcmp
  3097                           ;!                         _uint8_tToa
  3098                           ;! ---------------------------------------------------------------------------------
  3099                           ;! (2) _uint8_tToa                                           8     7      1    3532
  3100                           ;!                                             25 BANK0      8     7      1
  3101                           ;!                            ___awdiv
  3102                           ;!                            ___awmod
  3103                           ;! ---------------------------------------------------------------------------------
  3104                           ;! (2) _memcmp                                              10     6      4     479
  3105                           ;!                                             16 BANK0     10     6      4
  3106                           ;! ---------------------------------------------------------------------------------
  3107                           ;! (2) _lcdWriteText                                         6     4      2    2122
  3108                           ;!                                             33 BANK0      5     3      2
  3109                           ;!                                              0 BANK1      1     1      0
  3110                           ;!                         _uint8_tToa (ARG)
  3111                           ;!                        _writeTxtChk
  3112                           ;! ---------------------------------------------------------------------------------
  3113                           ;! (2) _lcdWriteAllText                                      7     5      2    1804
  3114                           ;!                                             29 BANK0      7     5      2
  3115                           ;!                        _writeTxtChk
  3116                           ;! ---------------------------------------------------------------------------------
  3117                           ;! (3) _writeTxtChk                                          3     3      0    1522
  3118                           ;!                                             26 BANK0      3     3      0
  3119                           ;!                 _SetToSendDataToLCD
  3120                           ;!                  _setCursorPosition
  3121                           ;!                            _setData
  3122                           ;!                        _waitLCDBusy
  3123                           ;! ---------------------------------------------------------------------------------
  3124                           ;! (4) _setCursorPosition                                    5     4      1    1237
  3125                           ;!                                             21 BANK0      5     4      1
  3126                           ;!                 _SetToSendDataToLCD
  3127                           ;!                            _setData
  3128                           ;!                        _waitLCDBusy
  3129                           ;! ---------------------------------------------------------------------------------
  3130                           ;! (3) _waitLCDBusy                                          5     5      0      37
  3131                           ;!                                             16 BANK0      5     5      0
  3132                           ;!               _SetToReadDataFromLCD
  3133                           ;! ---------------------------------------------------------------------------------
  3134                           ;! (4) _SetToReadDataFromLCD                                 0     0      0       0
  3135                           ;! ---------------------------------------------------------------------------------
  3136                           ;! (4) _setData                                              3     3      0     124
  3137                           ;!                                             16 BANK0      3     3      0
  3138                           ;! ---------------------------------------------------------------------------------
  3139                           ;! (4) _SetToSendDataToLCD                                   0     0      0       0
  3140                           ;! ---------------------------------------------------------------------------------
  3141                           ;! (2) _EusartGetRxBuffer                                    5     3      2    1766
  3142                           ;!                                             28 BANK0      5     3      2
  3143                           ;!                             _memcpy
  3144                           ;! ---------------------------------------------------------------------------------
  3145                           ;! (2) _EusartGetNbByteReceived                              0     0      0       0
  3146                           ;! ---------------------------------------------------------------------------------
  3147                           ;! (2) _Esp8266SetNetworkParameters                         89    83      6    9323
  3148                           ;!                                              0 BANK1     14     8      6
  3149                           ;!                                              0 BANK7     75    75      0
  3150                           ;!                     _Send_UART_Data
  3151                           ;!                            ___awdiv
  3152                           ;!                            ___awmod
  3153                           ;!                             _strcat
  3154                           ;!                             _strcpy
  3155                           ;!                             _strlen
  3156                           ;! ---------------------------------------------------------------------------------
  3157                           ;! (3) _strcat                                               5     3      2    2347
  3158                           ;!                                             30 BANK0      5     3      2
  3159                           ;!                             _strcpy
  3160                           ;!                             _strlen
  3161                           ;! ---------------------------------------------------------------------------------
  3162                           ;! (3) _strlen                                               6     4      2     850
  3163                           ;!                                             16 BANK0      6     4      2
  3164                           ;! ---------------------------------------------------------------------------------
  3165                           ;! (3) _strcpy                                               8     6      2     389
  3166                           ;!                                             22 BANK0      8     6      2
  3167                           ;!                             _strlen (ARG)
  3168                           ;! ---------------------------------------------------------------------------------
  3169                           ;! (3) ___awmod                                              7     3      4    1333
  3170                           ;!                                             16 BANK0      7     3      4
  3171                           ;! ---------------------------------------------------------------------------------
  3172                           ;! (3) ___awdiv                                              9     5      4    1345
  3173                           ;!                                             16 BANK0      9     5      4
  3174                           ;! ---------------------------------------------------------------------------------
  3175                           ;! (2) _Send_UART_Data                                       5     2      3    1817
  3176                           ;!                                             28 BANK0      5     2      3
  3177                           ;!                             _memcpy
  3178                           ;! ---------------------------------------------------------------------------------
  3179                           ;! (3) _memcpy                                              12     6      6    1333
  3180                           ;!                                             16 BANK0     12     6      6
  3181                           ;! ---------------------------------------------------------------------------------
  3182                           ;! (1) _EUSARTInit                                           0     0      0       0
  3183                           ;! ---------------------------------------------------------------------------------
  3184                           ;! (1) _Debounce                                             5     3      2     788
  3185                           ;!                                             16 BANK0      5     3      2
  3186                           ;! ---------------------------------------------------------------------------------
  3187                           ;! Estimated maximum stack depth 4
  3188                           ;! ---------------------------------------------------------------------------------
  3189                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3190                           ;! ---------------------------------------------------------------------------------
  3191                           ;! (7) _myint                                               11    11      0    1707
  3192                           ;!                                              5 BANK0     11    11      0
  3193                           ;!                    _EUSARTInterrupt
  3194                           ;!                  _TempUpdateRequest
  3195                           ;!                     i1_lcdWriteText
  3196                           ;! ---------------------------------------------------------------------------------
  3197                           ;! (8) i1_lcdWriteText                                       6     4      2    1282
  3198                           ;!                                             13 COMMON     1     1      0
  3199                           ;!                                              0 BANK0      5     3      2
  3200                           ;!                      i1_writeTxtChk
  3201                           ;! ---------------------------------------------------------------------------------
  3202                           ;! (9) i1_writeTxtChk                                        3     3      0    1082
  3203                           ;!                                             10 COMMON     3     3      0
  3204                           ;!               i1_SetToSendDataToLCD
  3205                           ;!                i1_setCursorPosition
  3206                           ;!                          i1_setData
  3207                           ;!                      i1_waitLCDBusy
  3208                           ;! ---------------------------------------------------------------------------------
  3209                           ;! (10) i1_setCursorPosition                                 5     4      1     797
  3210                           ;!                                              5 COMMON     5     4      1
  3211                           ;!               i1_SetToSendDataToLCD
  3212                           ;!                          i1_setData
  3213                           ;!                      i1_waitLCDBusy
  3214                           ;! ---------------------------------------------------------------------------------
  3215                           ;! (10) i1_waitLCDBusy                                       5     5      0      37
  3216                           ;!                                              0 COMMON     5     5      0
  3217                           ;!             i1_SetToReadDataFromLCD
  3218                           ;! ---------------------------------------------------------------------------------
  3219                           ;! (11) i1_SetToReadDataFromLCD                              0     0      0       0
  3220                           ;! ---------------------------------------------------------------------------------
  3221                           ;! (10) i1_setData                                           3     3      0     124
  3222                           ;!                                              0 COMMON     3     3      0
  3223                           ;! ---------------------------------------------------------------------------------
  3224                           ;! (11) i1_SetToSendDataToLCD                                0     0      0       0
  3225                           ;! ---------------------------------------------------------------------------------
  3226                           ;! (8) _TempUpdateRequest                                    0     0      0       0
  3227                           ;! ---------------------------------------------------------------------------------
  3228                           ;! (8) _EUSARTInterrupt                                      5     3      2      24
  3229                           ;!                                              0 COMMON     5     3      2
  3230                           ;! ---------------------------------------------------------------------------------
  3231                           ;! Estimated maximum stack depth 11
  3232                           ;! ---------------------------------------------------------------------------------
  3233                           ;!
  3234                           ;! Call Graph Graphs:
  3235                           ;!
  3236                           ;! _main (ROOT)
  3237                           ;!   _Debounce
  3238                           ;!   _EUSARTInit
  3239                           ;!   _Esp8266Entrypoint
  3240                           ;!     _Esp8266SetNetworkParameters
  3241                           ;!       _Send_UART_Data
  3242                           ;!         _memcpy
  3243                           ;!       ___awdiv
  3244                           ;!       ___awmod
  3245                           ;!       _strcat
  3246                           ;!         _strcpy
  3247                           ;!           _strlen (ARG)
  3248                           ;!         _strlen
  3249                           ;!       _strcpy
  3250                           ;!         _strlen (ARG)
  3251                           ;!       _strlen
  3252                           ;!     _EusartGetNbByteReceived
  3253                           ;!     _EusartGetRxBuffer
  3254                           ;!       _memcpy
  3255                           ;!     _Send_UART_Data
  3256                           ;!       _memcpy
  3257                           ;!     _lcdWriteAllText
  3258                           ;!       _writeTxtChk
  3259                           ;!         _SetToSendDataToLCD
  3260                           ;!         _setCursorPosition
  3261                           ;!           _SetToSendDataToLCD
  3262                           ;!           _setData
  3263                           ;!           _waitLCDBusy
  3264                           ;!             _SetToReadDataFromLCD
  3265                           ;!         _setData
  3266                           ;!         _waitLCDBusy
  3267                           ;!           _SetToReadDataFromLCD
  3268                           ;!     _lcdWriteText
  3269                           ;!       _uint8_tToa (ARG)
  3270                           ;!         ___awdiv
  3271                           ;!         ___awmod
  3272                           ;!       _writeTxtChk (ARG)
  3273                           ;!         _SetToSendDataToLCD
  3274                           ;!         _setCursorPosition
  3275                           ;!           _SetToSendDataToLCD
  3276                           ;!           _setData
  3277                           ;!           _waitLCDBusy
  3278                           ;!             _SetToReadDataFromLCD
  3279                           ;!         _setData
  3280                           ;!         _waitLCDBusy
  3281                           ;!           _SetToReadDataFromLCD
  3282                           ;!     _memcmp
  3283                           ;!     _uint8_tToa
  3284                           ;!       ___awdiv
  3285                           ;!       ___awmod
  3286                           ;!   _Esp8266SetAccessPointMode
  3287                           ;!   _Esp8266SetupWifi
  3288                           ;!   _clearDisplay
  3289                           ;!     _writeInsChk
  3290                           ;!       _waitLCDBusy
  3291                           ;!         _SetToReadDataFromLCD
  3292                           ;!       _writeInsNoChk
  3293                           ;!         _SetToSendDataToLCD
  3294                           ;!         _setData
  3295                           ;!   _initLCD
  3296                           ;!     _clearDisplay
  3297                           ;!       _writeInsChk
  3298                           ;!         _waitLCDBusy
  3299                           ;!           _SetToReadDataFromLCD
  3300                           ;!         _writeInsNoChk
  3301                           ;!           _SetToSendDataToLCD
  3302                           ;!           _setData
  3303                           ;!     _setData
  3304                           ;!     _writeInsChk
  3305                           ;!       _waitLCDBusy
  3306                           ;!         _SetToReadDataFromLCD
  3307                           ;!       _writeInsNoChk
  3308                           ;!         _SetToSendDataToLCD
  3309                           ;!         _setData
  3310                           ;!   _memset
  3311                           ;!   _moveCursorToHome
  3312                           ;!     _writeInsChk
  3313                           ;!       _waitLCDBusy
  3314                           ;!         _SetToReadDataFromLCD
  3315                           ;!       _writeInsNoChk
  3316                           ;!         _SetToSendDataToLCD
  3317                           ;!         _setData
  3318                           ;!   _powerOnLcd
  3319                           ;!     _writeInsChk
  3320                           ;!       _waitLCDBusy
  3321                           ;!         _SetToReadDataFromLCD
  3322                           ;!       _writeInsNoChk
  3323                           ;!         _SetToSendDataToLCD
  3324                           ;!         _setData
  3325                           ;!   _setCursorOff
  3326                           ;!     _writeInsChk
  3327                           ;!       _waitLCDBusy
  3328                           ;!         _SetToReadDataFromLCD
  3329                           ;!       _writeInsNoChk
  3330                           ;!         _SetToSendDataToLCD
  3331                           ;!         _setData
  3332                           ;!   _setNotBlinkingCursor
  3333                           ;!     _writeInsChk
  3334                           ;!       _waitLCDBusy
  3335                           ;!         _SetToReadDataFromLCD
  3336                           ;!       _writeInsNoChk
  3337                           ;!         _SetToSendDataToLCD
  3338                           ;!         _setData
  3339                           ;!
  3340                           ;! _myint (ROOT)
  3341                           ;!   _EUSARTInterrupt
  3342                           ;!   _TempUpdateRequest
  3343                           ;!   i1_lcdWriteText
  3344                           ;!     i1_writeTxtChk
  3345                           ;!       i1_SetToSendDataToLCD
  3346                           ;!       i1_setCursorPosition
  3347                           ;!         i1_SetToSendDataToLCD
  3348                           ;!         i1_setData
  3349                           ;!         i1_waitLCDBusy
  3350                           ;!           i1_SetToReadDataFromLCD
  3351                           ;!       i1_setData
  3352                           ;!       i1_waitLCDBusy
  3353                           ;!         i1_SetToReadDataFromLCD
  3354                           ;!
  3355                           
  3356                           ;! Address spaces:
  3357                           
  3358                           ;!Name               Size   Autos  Total    Cost      Usage
  3359                           ;!BIGRAM             3F0      0       0       0        0.0%
  3360                           ;!NULL                 0      0       0       0        0.0%
  3361                           ;!CODE                 0      0       0       0        0.0%
  3362                           ;!BITCOMMON            E      0       0       1        0.0%
  3363                           ;!BITSFR0              0      0       0       1        0.0%
  3364                           ;!SFR0                 0      0       0       1        0.0%
  3365                           ;!COMMON               E      E       E       2      100.0%
  3366                           ;!BITSFR1              0      0       0       2        0.0%
  3367                           ;!SFR1                 0      0       0       2        0.0%
  3368                           ;!BITSFR2              0      0       0       3        0.0%
  3369                           ;!SFR2                 0      0       0       3        0.0%
  3370                           ;!STACK                0      0       0       3        0.0%
  3371                           ;!BITBANK0            50      0       0       4        0.0%
  3372                           ;!BITSFR3              0      0       0       4        0.0%
  3373                           ;!SFR3                 0      0       0       4        0.0%
  3374                           ;!BANK0               50     26      40       5       80.0%
  3375                           ;!BITSFR4              0      0       0       5        0.0%
  3376                           ;!SFR4                 0      0       0       5        0.0%
  3377                           ;!BITBANK1            50      0       0       6        0.0%
  3378                           ;!BITSFR5              0      0       0       6        0.0%
  3379                           ;!SFR5                 0      0       0       6        0.0%
  3380                           ;!BANK1               50     49      4B       7       93.8%
  3381                           ;!BITSFR6              0      0       0       7        0.0%
  3382                           ;!SFR6                 0      0       0       7        0.0%
  3383                           ;!BITBANK2            50      0       0       8        0.0%
  3384                           ;!BITSFR7              0      0       0       8        0.0%
  3385                           ;!SFR7                 0      0       0       8        0.0%
  3386                           ;!BANK2               50     1A      2B       9       53.8%
  3387                           ;!BITSFR8              0      0       0       9        0.0%
  3388                           ;!SFR8                 0      0       0       9        0.0%
  3389                           ;!BITBANK3            50      0       0      10        0.0%
  3390                           ;!BITSFR9              0      0       0      10        0.0%
  3391                           ;!SFR9                 0      0       0      10        0.0%
  3392                           ;!BANK3               50      0      2F      11       58.8%
  3393                           ;!BITSFR10             0      0       0      11        0.0%
  3394                           ;!SFR10                0      0       0      11        0.0%
  3395                           ;!BITBANK4            50      0       0      12        0.0%
  3396                           ;!BITSFR11             0      0       0      12        0.0%
  3397                           ;!SFR11                0      0       0      12        0.0%
  3398                           ;!BANK4               50      0      46      13       87.5%
  3399                           ;!BITSFR12             0      0       0      13        0.0%
  3400                           ;!SFR12                0      0       0      13        0.0%
  3401                           ;!BITBANK5            50      0       0      14        0.0%
  3402                           ;!BITSFR13             0      0       0      14        0.0%
  3403                           ;!SFR13                0      0       0      14        0.0%
  3404                           ;!BANK5               50      0      32      15       62.5%
  3405                           ;!BITSFR14             0      0       0      15        0.0%
  3406                           ;!SFR14                0      0       0      15        0.0%
  3407                           ;!BITBANK6            50      0       0      16        0.0%
  3408                           ;!BITSFR15             0      0       0      16        0.0%
  3409                           ;!SFR15                0      0       0      16        0.0%
  3410                           ;!BANK6               50      0      4B      17       93.8%
  3411                           ;!BITSFR16             0      0       0      17        0.0%
  3412                           ;!SFR16                0      0       0      17        0.0%
  3413                           ;!BITBANK7            50      0       0      18        0.0%
  3414                           ;!BITSFR17             0      0       0      18        0.0%
  3415                           ;!SFR17                0      0       0      18        0.0%
  3416                           ;!BANK7               50     4B      4B      19       93.8%
  3417                           ;!BITSFR18             0      0       0      19        0.0%
  3418                           ;!SFR18                0      0       0      19        0.0%
  3419                           ;!BITSFR19             0      0       0      20        0.0%
  3420                           ;!SFR19                0      0       0      20        0.0%
  3421                           ;!ABS                  0      0     201      20        0.0%
  3422                           ;!BITBANK8            50      0       0      21        0.0%
  3423                           ;!BITSFR20             0      0       0      21        0.0%
  3424                           ;!SFR20                0      0       0      21        0.0%
  3425                           ;!BANK8               50      0       0      22        0.0%
  3426                           ;!BITSFR21             0      0       0      22        0.0%
  3427                           ;!SFR21                0      0       0      22        0.0%
  3428                           ;!BITBANK9            50      0       0      23        0.0%
  3429                           ;!BITSFR22             0      0       0      23        0.0%
  3430                           ;!SFR22                0      0       0      23        0.0%
  3431                           ;!BANK9               50      0       0      24        0.0%
  3432                           ;!BITSFR23             0      0       0      24        0.0%
  3433                           ;!SFR23                0      0       0      24        0.0%
  3434                           ;!BITBANK10           50      0       0      25        0.0%
  3435                           ;!BITSFR24             0      0       0      25        0.0%
  3436                           ;!SFR24                0      0       0      25        0.0%
  3437                           ;!BANK10              50      0       0      26        0.0%
  3438                           ;!BITSFR25             0      0       0      26        0.0%
  3439                           ;!SFR25                0      0       0      26        0.0%
  3440                           ;!BITBANK11           50      0       0      27        0.0%
  3441                           ;!BITSFR26             0      0       0      27        0.0%
  3442                           ;!SFR26                0      0       0      27        0.0%
  3443                           ;!BANK11              50      0       0      28        0.0%
  3444                           ;!BITSFR27             0      0       0      28        0.0%
  3445                           ;!SFR27                0      0       0      28        0.0%
  3446                           ;!BITBANK12           30      0       0      29        0.0%
  3447                           ;!BITSFR28             0      0       0      29        0.0%
  3448                           ;!SFR28                0      0       0      29        0.0%
  3449                           ;!BANK12              30      0       0      30        0.0%
  3450                           ;!BITSFR29             0      0       0      30        0.0%
  3451                           ;!SFR29                0      0       0      30        0.0%
  3452                           ;!BITSFR30             0      0       0      31        0.0%
  3453                           ;!SFR30                0      0       0      31        0.0%
  3454                           ;!DATA                 0      0     201      31        0.0%
  3455                           ;!BITSFR31             0      0       0      32        0.0%
  3456                           ;!SFR31                0      0       0      32        0.0%
  3457                           
  3458                           	global	_main
  3459                           
  3460 ;; *************** function _main *****************
  3461 ;; Defined at:
  3462 ;;		line 122 in file "161518_temp_main.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;		None
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  wReadout       20    0        unsigned char [20]
  3467 ;;  wConv           4    0[BANK2 ] unsigned char [4]
  3468 ;;  wDebounceDow    2   20[BANK2 ] unsigned short 
  3469 ;;  wDebounceUp     2   18[BANK2 ] unsigned short 
  3470 ;;  wDebounceEnt    2   16[BANK2 ] unsigned short 
  3471 ;;  wIterationCo    2   12[BANK2 ] unsigned short 
  3472 ;;  wTemp           2   10[BANK2 ] int 
  3473 ;;  wCounter        2    8[BANK2 ] int 
  3474 ;;  wTemperature    2    6[BANK2 ] short 
  3475 ;;  wHumidityPre    2    4[BANK2 ] short 
  3476 ;;  wMenu           1   25[BANK2 ] unsigned char 
  3477 ;;  wEnterBotton    1   24[BANK2 ] unsigned char 
  3478 ;;  wDownBottonP    1   23[BANK2 ] unsigned char 
  3479 ;;  wUpBottonPre    1   22[BANK2 ] unsigned char 
  3480 ;;  wEditingMode    1   15[BANK2 ] unsigned char 
  3481 ;;  wUpdateMenu     1   14[BANK2 ] unsigned char 
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  1    wreg      void 
  3484 ;; Registers used:
  3485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : B1F/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3492 ;;      Locals:         0       0       0      26       0       0       0       0       0       0       0       0       
       0       0
  3493 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  3494 ;;      Totals:         0       0       2      26       0       0       0       0       0       0       0       0       
       0       0
  3495 ;;Total ram usage:       28 bytes
  3496 ;; Hardware stack levels required when called:   12
  3497 ;; This function calls:
  3498 ;;		_Debounce
  3499 ;;		_EUSARTInit
  3500 ;;		_Esp8266Entrypoint
  3501 ;;		_Esp8266SetAccessPointMode
  3502 ;;		_Esp8266SetupWifi
  3503 ;;		_clearDisplay
  3504 ;;		_initLCD
  3505 ;;		_memset
  3506 ;;		_moveCursorToHome
  3507 ;;		_powerOnLcd
  3508 ;;		_setCursorOff
  3509 ;;		_setNotBlinkingCursor
  3510 ;; This function is called by:
  3511 ;;		Startup code after reset
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  3515                           	file	"161518_temp_main.c"
  3516                           	line	122
  3517                           global __pmaintext
  3518                           __pmaintext:	;psect for function _main
  3519  00CA                     psect	maintext
  3520                           	file	"161518_temp_main.c"
  3521                           	line	122
  3522                           	global	__size_of_main
  3523                           	__size_of_main	equ	__end_of_main-_main
  3524  01B3                     	
  3525                           _main:	
  3526  00CA                     ;incstack = 0
  3527                           	opt	stack 4
  3528                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3529                           	line	125
  3530                           	
  3531                           l5064:	
  3532  00CA                     	movlb 3	; select bank3
  3533  00CA  0023               	clrf	(_gErrorCode)^0180h
  3534  00CB  01A0               	line	128
  3535                           	movlb 2	; select bank2
  3536  00CC  0022               	clrf	(main@wHumidityPrev)^0100h
  3537  00CD  01A4               	clrf	(main@wHumidityPrev+1)^0100h
  3538  00CE  01A5               	line	129
  3539                           	clrf	(main@wTemperaturePrev)^0100h
  3540  00CF  01A6               	clrf	(main@wTemperaturePrev+1)^0100h
  3541  00D0  01A7               	line	130
  3542                           	
  3543                           l5066:	
  3544  00D1                     	movlw	low(_wInterruptText)
  3545  00D1  3020               	movlb 0	; select bank0
  3546  00D2  0020               	movwf	(memset@dest)
  3547  00D3  00B0               	movlw	high(_wInterruptText)
  3548  00D4  3003               	movwf	(memset@dest+1)
  3549  00D5  00B1               	movlw	0
  3550  00D6  3000               	movwf	(memset@c)
  3551  00D7  00B2               	movwf	(memset@c+1)
  3552  00D8  00B3               	movlw	04Bh
  3553  00D9  304B               	movwf	(memset@n)
  3554  00DA  00B4               	movlw	0
  3555  00DB  3000               	movwf	((memset@n))+1
  3556  00DC  00B5               	fcall	_memset
  3557  00DD  3184  24BE  3180   	line	133
  3558                           	
  3559                           l5068:	
  3560  00E0                     	movlw	(0Fh & ((1<<4)-1))<<3
  3561  00E0  3078               	movlb 1	; select bank1
  3562  00E1  0021               	iorwf	(153)^080h,f	;volatile
  3563  00E2  0499               	line	134
  3564                           	
  3565                           l5070:	
  3566  00E3                     	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
  3567  00E3  30FC               	andwf	(153)^080h,f	;volatile
  3568  00E4  0599               	line	135
  3569                           	
  3570                           l5072:	
  3571  00E5                     	bcf	(11),7	;volatile
  3572  00E5  138B               	line	137
  3573                           	
  3574                           l5074:	
  3575  00E6                     	movlb 2	; select bank2
  3576  00E6  0022               	clrf	(main@wUpBottonPressed)^0100h
  3577  00E7  01B6               	line	138
  3578                           	
  3579                           l5076:	
  3580  00E8                     	clrf	(main@wDownBottonPressed)^0100h
  3581  00E8  01B7               	line	139
  3582                           	
  3583                           l5078:	
  3584  00E9                     	clrf	(main@wEnterBottonPressed)^0100h
  3585  00E9  01B8               	line	141
  3586                           	
  3587                           l5080:	
  3588  00EA                     	clrf	(main@wEditingMode)^0100h
  3589  00EA  01AF               	line	142
  3590                           	
  3591                           l5082:	
  3592  00EB                     	clrf	(main@wMenu)^0100h
  3593  00EB  01B9               	line	143
  3594                           	
  3595                           l5084:	
  3596  00EC                     	clrf	(main@wUpdateMenu)^0100h
  3597  00EC  01AE               	incf	(main@wUpdateMenu)^0100h,f
  3598  00ED  0AAE               	line	145
  3599                           	
  3600                           l5086:	
  3601  00EE                     	clrf	(main@wIterationCounter)^0100h
  3602  00EE  01AC               	clrf	(main@wIterationCounter+1)^0100h
  3603  00EF  01AD               	line	146
  3604                           	
  3605                           l5088:	
  3606  00F0                     	clrf	(main@wDebounceEnter)^0100h
  3607  00F0  01B0               	clrf	(main@wDebounceEnter+1)^0100h
  3608  00F1  01B1               	line	147
  3609                           	
  3610                           l5090:	
  3611  00F2                     	clrf	(main@wDebounceUp)^0100h
  3612  00F2  01B2               	clrf	(main@wDebounceUp+1)^0100h
  3613  00F3  01B3               	line	148
  3614                           	
  3615                           l5092:	
  3616  00F4                     	clrf	(main@wDebounceDown)^0100h
  3617  00F4  01B4               	clrf	(main@wDebounceDown+1)^0100h
  3618  00F5  01B5               	line	150
  3619                           	
  3620                           l5094:	
  3621  00F6                     	movlb 0	; select bank0
  3622  00F6  0020               	clrf	(12)	;volatile
  3623  00F7  018C               	line	154
  3624                           	
  3625                           l5096:	
  3626  00F8                     	movlw	((0 & ((1<<2)-1))<<6)|not (((1<<2)-1)<<6)
  3627  00F8  303F               	andwf	(24),f	;volatile
  3628  00F9  0598               	line	155
  3629                           	
  3630                           l5098:	
  3631  00FA                     	bcf	(24),3	;volatile
  3632  00FA  1198               	line	156
  3633                           	
  3634                           l5100:	
  3635  00FB                     	movlw	(03h & ((1<<2)-1))<<4
  3636  00FB  3030               	iorwf	(24),f	;volatile
  3637  00FC  0498               	line	157
  3638                           	
  3639                           l5102:	
  3640  00FD                     	bcf	(24),2	;volatile
  3641  00FD  1118               	line	158
  3642                           	
  3643                           l5104:	
  3644  00FE                     	bsf	(24),0	;volatile
  3645  00FE  1418               	line	159
  3646                           	
  3647                           l5106:	
  3648  00FF                     	movlb 1	; select bank1
  3649  00FF  0021               	bsf	(145)^080h,0	;volatile
  3650  0100  1411               	line	163
  3651                           	
  3652                           l5108:	
  3653  0101                     	movf	(149)^080h,w	;volatile
  3654  0101  0815               	andlw	not (((1<<3)-1)<<0)
  3655  0102  39F8               	iorlw	(02h & ((1<<3)-1))<<0
  3656  0103  3802               	movwf	(149)^080h	;volatile
  3657  0104  0095               	line	164
  3658                           	
  3659                           l5110:	
  3660  0105                     	bcf	(149)^080h,5	;volatile
  3661  0105  1295               	line	165
  3662                           	
  3663                           l5112:	
  3664  0106                     	bcf	(149)^080h,3	;volatile
  3665  0106  1195               	line	166
  3666                           	
  3667                           l5114:	
  3668  0107                     	bcf	(11),5	;volatile
  3669  0107  128B               	line	170
  3670                           	
  3671                           l5116:	
  3672  0108                     	movlb 0	; select bank0
  3673  0108  0020               	clrf	(13)	;volatile
  3674  0109  018D               	line	171
  3675                           	
  3676                           l5118:	
  3677  010A                     	movlb 3	; select bank3
  3678  010A  0023               	clrf	(397)^0180h	;volatile
  3679  010B  018D               	line	172
  3680                           	
  3681                           l5120:	
  3682  010C                     	movlw	low(0Fh)
  3683  010C  300F               	movlb 1	; select bank1
  3684  010D  0021               	movwf	(141)^080h	;volatile
  3685  010E  008D               	line	173
  3686                           	
  3687                           l5122:	
  3688  010F                     	movlw	low(0Fh)
  3689  010F  300F               	movlb 4	; select bank4
  3690  0110  0024               	movwf	(525)^0200h	;volatile
  3691  0111  008D               	line	174
  3692                           	
  3693                           l5124:	
  3694  0112                     	movlb 1	; select bank1
  3695  0112  0021               	bcf	(149)^080h,7	;volatile
  3696  0113  1395               	line	179
  3697                           	
  3698                           l5126:	
  3699  0114                     	fcall	_EUSARTInit
  3700  0114  318A  22FC  3180   	line	183
  3701                           	
  3702                           l5128:	
  3703  0117                     	bsf	(11),7	;volatile
  3704  0117  178B               	line	186
  3705                           	
  3706                           l5130:	
  3707  0118                     	fcall	_initLCD
  3708  0118  318F  279C  3180   	line	187
  3709                           	
  3710                           l5132:	
  3711  011B                     	fcall	_clearDisplay
  3712  011B  318A  2286  3180   	line	188
  3713                           	
  3714                           l5134:	
  3715  011E                     	opt asmopt_push
  3716                           opt asmopt_off
  3717                           movlw  3
  3718  011E  3003               	movlb 1	; select bank1
  3719  011F  0021               movwf	((??_main+0)^080h+0+1),f
  3720  0120  00E8               movlw	8
  3721  0121  3008               movwf	((??_main+0)^080h+0),f
  3722  0122  00E7               	movlw	119
  3723  0123  3077               u3947:
  3724  0124                     decfsz	wreg
  3725  0124  0B89               	goto	u3947
  3726  0125  2924               	decfsz	((??_main+0)^080h+0),f
  3727  0126  0BE7               	goto	u3947
  3728  0127  2924               	decfsz	((??_main+0)^080h+0+1),f
  3729  0128  0BE8               	goto	u3947
  3730  0129  2924               opt asmopt_pop
  3731                           
  3732                           	line	189
  3733                           	
  3734                           l5136:	
  3735  012A                     	fcall	_powerOnLcd
  3736  012A  318A  22CE  3180   	line	190
  3737                           	
  3738                           l5138:	
  3739  012D                     	opt asmopt_push
  3740                           opt asmopt_off
  3741                           movlw  3
  3742  012D  3003               	movlb 1	; select bank1
  3743  012E  0021               movwf	((??_main+0)^080h+0+1),f
  3744  012F  00E8               movlw	8
  3745  0130  3008               movwf	((??_main+0)^080h+0),f
  3746  0131  00E7               	movlw	119
  3747  0132  3077               u3957:
  3748  0133                     decfsz	wreg
  3749  0133  0B89               	goto	u3957
  3750  0134  2933               	decfsz	((??_main+0)^080h+0),f
  3751  0135  0BE7               	goto	u3957
  3752  0136  2933               	decfsz	((??_main+0)^080h+0+1),f
  3753  0137  0BE8               	goto	u3957
  3754  0138  2933               opt asmopt_pop
  3755                           
  3756                           	line	191
  3757                           	
  3758                           l5140:	
  3759  0139                     	fcall	_setCursorOff
  3760  0139  318A  22D9  3180   	line	192
  3761                           	
  3762                           l5142:	
  3763  013C                     	opt asmopt_push
  3764                           opt asmopt_off
  3765                           movlw  3
  3766  013C  3003               	movlb 1	; select bank1
  3767  013D  0021               movwf	((??_main+0)^080h+0+1),f
  3768  013E  00E8               movlw	8
  3769  013F  3008               movwf	((??_main+0)^080h+0),f
  3770  0140  00E7               	movlw	119
  3771  0141  3077               u3967:
  3772  0142                     decfsz	wreg
  3773  0142  0B89               	goto	u3967
  3774  0143  2942               	decfsz	((??_main+0)^080h+0),f
  3775  0144  0BE7               	goto	u3967
  3776  0145  2942               	decfsz	((??_main+0)^080h+0+1),f
  3777  0146  0BE8               	goto	u3967
  3778  0147  2942               opt asmopt_pop
  3779                           
  3780                           	line	193
  3781                           	
  3782                           l5144:	
  3783  0148                     	fcall	_moveCursorToHome
  3784  0148  318A  22BB  3180   	line	194
  3785                           	
  3786                           l5146:	
  3787  014B                     	opt asmopt_push
  3788                           opt asmopt_off
  3789                           movlw  3
  3790  014B  3003               	movlb 1	; select bank1
  3791  014C  0021               movwf	((??_main+0)^080h+0+1),f
  3792  014D  00E8               movlw	8
  3793  014E  3008               movwf	((??_main+0)^080h+0),f
  3794  014F  00E7               	movlw	119
  3795  0150  3077               u3977:
  3796  0151                     decfsz	wreg
  3797  0151  0B89               	goto	u3977
  3798  0152  2951               	decfsz	((??_main+0)^080h+0),f
  3799  0153  0BE7               	goto	u3977
  3800  0154  2951               	decfsz	((??_main+0)^080h+0+1),f
  3801  0155  0BE8               	goto	u3977
  3802  0156  2951               opt asmopt_pop
  3803                           
  3804                           	line	195
  3805                           	
  3806                           l5148:	
  3807  0157                     	fcall	_setNotBlinkingCursor
  3808  0157  318A  22E4  3180   	line	196
  3809                           	
  3810                           l5150:	
  3811  015A                     	opt asmopt_push
  3812                           opt asmopt_off
  3813                           movlw  3
  3814  015A  3003               	movlb 1	; select bank1
  3815  015B  0021               movwf	((??_main+0)^080h+0+1),f
  3816  015C  00E8               movlw	8
  3817  015D  3008               movwf	((??_main+0)^080h+0),f
  3818  015E  00E7               	movlw	119
  3819  015F  3077               u3987:
  3820  0160                     decfsz	wreg
  3821  0160  0B89               	goto	u3987
  3822  0161  2960               	decfsz	((??_main+0)^080h+0),f
  3823  0162  0BE7               	goto	u3987
  3824  0163  2960               	decfsz	((??_main+0)^080h+0+1),f
  3825  0164  0BE8               	goto	u3987
  3826  0165  2960               opt asmopt_pop
  3827                           
  3828                           	line	199
  3829                           	
  3830                           l5152:	
  3831  0166                     	movlb 2	; select bank2
  3832  0166  0022               	clrf	(main@wCounter)^0100h
  3833  0167  01A8               	clrf	(main@wCounter+1)^0100h
  3834  0168  01A9               	line	200
  3835                           	
  3836                           l5154:	
  3837  0169                     	movlb 3	; select bank3
  3838  0169  0023               	movf	(main@F2342+3)^0180h,w
  3839  016A  084C               	movlb 2	; select bank2
  3840  016B  0022               	movwf	(main@wConv+3)^0100h
  3841  016C  00A3               	movlb 3	; select bank3
  3842  016D  0023               	movf	(main@F2342+2)^0180h,w
  3843  016E  084B               	movlb 2	; select bank2
  3844  016F  0022               	movwf	(main@wConv+2)^0100h
  3845  0170  00A2               	movlb 3	; select bank3
  3846  0171  0023               	movf	(main@F2342+1)^0180h,w
  3847  0172  084A               	movlb 2	; select bank2
  3848  0173  0022               	movwf	(main@wConv+1)^0100h
  3849  0174  00A1               	movlb 3	; select bank3
  3850  0175  0023               	movf	(main@F2342)^0180h,w
  3851  0176  0849               	movlb 2	; select bank2
  3852  0177  0022               	movwf	(main@wConv)^0100h
  3853  0178  00A0               
  3854                           	line	201
  3855                           	
  3856                           l5156:	
  3857  0179                     	clrf	(main@wTemp)^0100h
  3858  0179  01AA               	clrf	(main@wTemp+1)^0100h
  3859  017A  01AB               	line	204
  3860                           	
  3861                           l5158:	
  3862  017B                     	fcall	_clearDisplay
  3863  017B  318A  2286  3180   	line	205
  3864                           	
  3865                           l5160:	
  3866  017E                     	fcall	_moveCursorToHome
  3867  017E  318A  22BB  3180   	line	206
  3868                           	
  3869                           l5162:	
  3870  0181                     	opt asmopt_push
  3871                           opt asmopt_off
  3872                           movlw	156
  3873  0181  309C               	movlb 1	; select bank1
  3874  0182  0021               movwf	((??_main+0)^080h+0),f
  3875  0183  00E7               	movlw	215
  3876  0184  30D7               u3997:
  3877  0185                     decfsz	wreg
  3878  0185  0B89               	goto	u3997
  3879  0186  2985               	decfsz	((??_main+0)^080h+0),f
  3880  0187  0BE7               	goto	u3997
  3881  0188  2985               opt asmopt_pop
  3882                           
  3883                           	line	209
  3884                           	
  3885                           l5164:	
  3886  0189                     	movlb 3	; select bank3
  3887  0189  0023               	bsf	(413)^0180h,7	;volatile
  3888  018A  179D               	line	210
  3889                           	
  3890                           l5166:	
  3891  018B                     	bsf	(413)^0180h,4	;volatile
  3892  018B  161D               	line	211
  3893                           	
  3894                           l5168:	
  3895  018C                     	bcf	(413)^0180h,3	;volatile
  3896  018C  119D               	line	212
  3897                           	
  3898                           l5170:	
  3899  018D                     	bcf	(413)^0180h,6	;volatile
  3900  018D  131D               	line	214
  3901                           	
  3902                           l5172:	
  3903  018E                     	opt asmopt_push
  3904                           opt asmopt_off
  3905                           movlw  21
  3906  018E  3015               	movlb 1	; select bank1
  3907  018F  0021               movwf	((??_main+0)^080h+0+1),f
  3908  0190  00E8               movlw	75
  3909  0191  304B               movwf	((??_main+0)^080h+0),f
  3910  0192  00E7               	movlw	190
  3911  0193  30BE               u4007:
  3912  0194                     decfsz	wreg
  3913  0194  0B89               	goto	u4007
  3914  0195  2994               	decfsz	((??_main+0)^080h+0),f
  3915  0196  0BE7               	goto	u4007
  3916  0197  2994               	decfsz	((??_main+0)^080h+0+1),f
  3917  0198  0BE8               	goto	u4007
  3918  0199  2994               	nop
  3919  019A  0000               opt asmopt_pop
  3920                           
  3921                           	goto	l5174
  3922  019B  299C               	line	215
  3923                           	
  3924                           l151:	
  3925  019C                     	line	259
  3926                           	
  3927                           l5174:	
  3928  019C                     	fcall	_Esp8266Entrypoint
  3929  019C  3182  227D  3180   	line	277
  3930                           	
  3931                           l5176:	
  3932  019F                     	movlw	01h
  3933  019F  3001               	movlb 2	; select bank2
  3934  01A0  0022               	addwf	(main@wIterationCounter)^0100h,f
  3935  01A1  07AC               	movlw	0
  3936  01A2  3000               	addwfc	(main@wIterationCounter+1)^0100h,f
  3937  01A3  3DAD               	line	280
  3938                           	
  3939                           l5178:	
  3940  01A4                     	movlw	(low(main@wDebounceEnter|((0x1)<<8)))&0ffh
  3941  01A4  3030               	movlb 1	; select bank1
  3942  01A5  0021               	movwf	(??_main+0)^080h+0
  3943  01A6  00E7               	movf	(??_main+0)^080h+0,w
  3944  01A7  0867               	movlb 0	; select bank0
  3945  01A8  0020               	movwf	(Debounce@ioTimer)
  3946  01A9  00B0               	movlw	(low(main@wEnterBottonPressed|((0x1)<<8)))&0ffh
  3947  01AA  3038               	movlb 1	; select bank1
  3948  01AB  0021               	movwf	(??_main+1)^080h+0
  3949  01AC  00E8               	movf	(??_main+1)^080h+0,w
  3950  01AD  0868               	movlb 0	; select bank0
  3951  01AE  0020               	movwf	(Debounce@swPressed)
  3952  01AF  00B1               	movf	(13),w	;volatile
  3953  01B0  080D               	andlw	(1<<1)-1
  3954  01B1  3901               	fcall	_Debounce
  3955  01B2  318D  2521  3180   	line	281
  3956                           	
  3957                           l5180:	
  3958  01B5                     	movlw	(low(main@wDebounceUp|((0x1)<<8)))&0ffh
  3959  01B5  3032               	movlb 1	; select bank1
  3960  01B6  0021               	movwf	(??_main+0)^080h+0
  3961  01B7  00E7               	movf	(??_main+0)^080h+0,w
  3962  01B8  0867               	movlb 0	; select bank0
  3963  01B9  0020               	movwf	(Debounce@ioTimer)
  3964  01BA  00B0               	movlw	(low(main@wUpBottonPressed|((0x1)<<8)))&0ffh
  3965  01BB  3036               	movlb 1	; select bank1
  3966  01BC  0021               	movwf	(??_main+1)^080h+0
  3967  01BD  00E8               	movf	(??_main+1)^080h+0,w
  3968  01BE  0868               	movlb 0	; select bank0
  3969  01BF  0020               	movwf	(Debounce@swPressed)
  3970  01C0  00B1               	rrf	(13),w	;volatile
  3971  01C1  0C0D               	andlw	(1<<1)-1
  3972  01C2  3901               	fcall	_Debounce
  3973  01C3  318D  2521  3180   	line	282
  3974                           	
  3975                           l5182:	
  3976  01C6                     	movlw	(low(main@wDebounceDown|((0x1)<<8)))&0ffh
  3977  01C6  3034               	movlb 1	; select bank1
  3978  01C7  0021               	movwf	(??_main+0)^080h+0
  3979  01C8  00E7               	movf	(??_main+0)^080h+0,w
  3980  01C9  0867               	movlb 0	; select bank0
  3981  01CA  0020               	movwf	(Debounce@ioTimer)
  3982  01CB  00B0               	movlw	(low(main@wDownBottonPressed|((0x1)<<8)))&0ffh
  3983  01CC  3037               	movlb 1	; select bank1
  3984  01CD  0021               	movwf	(??_main+1)^080h+0
  3985  01CE  00E8               	movf	(??_main+1)^080h+0,w
  3986  01CF  0868               	movlb 0	; select bank0
  3987  01D0  0020               	movwf	(Debounce@swPressed)
  3988  01D1  00B1               	rrf	(13),w	;volatile
  3989  01D2  0C0D               	rrf	wreg,f
  3990  01D3  0C89               	andlw	(1<<1)-1
  3991  01D4  3901               	fcall	_Debounce
  3992  01D5  318D  2521  3180   	line	286
  3993                           	
  3994                           l5184:	
  3995  01D8                     	movlb 2	; select bank2
  3996  01D8  0022               		decf	((main@wUpBottonPressed)^0100h),w
  3997  01D9  0336               	btfss	status,2
  3998  01DA  1D03               	goto	u3591
  3999  01DB  29DD               	goto	u3590
  4000  01DC  29DE               u3591:
  4001  01DD                     	goto	l5198
  4002  01DD  2A09               u3590:
  4003  01DE                     	line	288
  4004                           	
  4005                           l5186:	
  4006  01DE                     	clrf	(main@wUpdateMenu)^0100h
  4007  01DE  01AE               	incf	(main@wUpdateMenu)^0100h,f
  4008  01DF  0AAE               	line	289
  4009                           	
  4010                           l5188:	
  4011  01E0                     	clrf	(main@wUpBottonPressed)^0100h
  4012  01E0  01B6               	line	290
  4013                           	goto	l5196
  4014  01E1  29F4               	line	292
  4015                           	
  4016                           l154:	
  4017  01E2                     	line	294
  4018                           	goto	l5198
  4019  01E2  2A09               	line	295
  4020                           	
  4021                           l156:	
  4022  01E3                     	line	296
  4023                           	
  4024                           l5190:	
  4025  01E3                     	movlb 3	; select bank3
  4026  01E3  0023               	movf	(_wTempSet)^0180h,w
  4027  01E4  084D               	addlw	01h
  4028  01E5  3E01               	movwf	(_wTempSet)^0180h
  4029  01E6  00CD               	movlw	0
  4030  01E7  3000               	addwfc	(_wTempSet+1)^0180h,w
  4031  01E8  3D4E               	movwf	1+(_wTempSet)^0180h
  4032  01E9  00CE               	line	297
  4033                           	goto	l5198
  4034  01EA  2A09               	line	298
  4035                           	
  4036                           l157:	
  4037  01EB                     	line	299
  4038                           	goto	l5198
  4039  01EB  2A09               	line	300
  4040                           	
  4041                           l158:	
  4042  01EC                     	line	301
  4043                           	
  4044                           l5192:	
  4045  01EC                     	movlw	low(01h)
  4046  01EC  3001               	movlb 1	; select bank1
  4047  01ED  0021               	movwf	(??_main+0)^080h+0
  4048  01EE  00E7               	movf	(??_main+0)^080h+0,w
  4049  01EF  0867               	movlb 2	; select bank2
  4050  01F0  0022               	addwf	(main@wMenu)^0100h,f
  4051  01F1  07B9               	line	302
  4052                           	goto	l5198
  4053  01F2  2A09               	line	303
  4054                           	
  4055                           l5194:	
  4056  01F3                     	goto	l5198
  4057  01F3  2A09               	
  4058                           l153:	
  4059  01F4                     	
  4060                           l5196:	
  4061  01F4                     	movf	(main@wMenu)^0100h,w
  4062  01F4  0839               	movlb 1	; select bank1
  4063  01F5  0021               	movwf	(??_main+0)^080h+0
  4064  01F6  00E7               	clrf	(??_main+0)^080h+0+1
  4065  01F7  01E8               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4066                           ; Switch size 1, requested type "space"
  4067                           ; Number of cases is 1, Range of values is 0 to 0
  4068                           ; switch strategies available:
  4069                           ; Name         Instructions Cycles
  4070                           ; simple_byte            4     3 (average)
  4071                           ; direct_byte            8     6 (fixed)
  4072                           ; jumptable            260     6 (fixed)
  4073                           ;	Chosen strategy is simple_byte
  4074                           
  4075                           	movf 1+(??_main+0)^080h+0,w
  4076  01F8  0868               	opt asmopt_push
  4077                           	opt asmopt_off
  4078                           	xorlw	0^0	; case 0
  4079  01F9  3A00               	skipnz
  4080  01FA  1903               	goto	l5730
  4081  01FB  29FD               	goto	l5192
  4082  01FC  29EC               	opt asmopt_pop
  4083                           	
  4084                           l5730:	
  4085  01FD                     ; Switch size 1, requested type "space"
  4086                           ; Number of cases is 3, Range of values is 128 to 130
  4087                           ; switch strategies available:
  4088                           ; Name         Instructions Cycles
  4089                           ; simple_byte           10     6 (average)
  4090                           ; direct_byte           15     9 (fixed)
  4091                           ; jumptable            263     9 (fixed)
  4092                           ;	Chosen strategy is simple_byte
  4093                           
  4094                           	movf 0+(??_main+0)^080h+0,w
  4095  01FD  0867               	opt asmopt_push
  4096                           	opt asmopt_off
  4097                           	xorlw	128^0	; case 128
  4098  01FE  3A80               	skipnz
  4099  01FF  1903               	goto	l5198
  4100  0200  2A09               	xorlw	129^128	; case 129
  4101  0201  3A01               	skipnz
  4102  0202  1903               	goto	l5190
  4103  0203  29E3               	xorlw	130^129	; case 130
  4104  0204  3A03               	skipnz
  4105  0205  1903               	goto	l5198
  4106  0206  2A09               	goto	l5192
  4107  0207  29EC               	opt asmopt_pop
  4108                           
  4109                           	
  4110                           l155:	
  4111  0208                     	goto	l5198
  4112  0208  2A09               	line	305
  4113                           	
  4114                           l152:	
  4115  0209                     	line	306
  4116                           	
  4117                           l5198:	
  4118  0209                     	movlb 2	; select bank2
  4119  0209  0022               		decf	((main@wDownBottonPressed)^0100h),w
  4120  020A  0337               	btfss	status,2
  4121  020B  1D03               	goto	u3601
  4122  020C  2A0E               	goto	u3600
  4123  020D  2A0F               u3601:
  4124  020E                     	goto	l5216
  4125  020E  2A3E               u3600:
  4126  020F                     	line	308
  4127                           	
  4128                           l5200:	
  4129  020F                     	clrf	(main@wUpdateMenu)^0100h
  4130  020F  01AE               	incf	(main@wUpdateMenu)^0100h,f
  4131  0210  0AAE               	line	309
  4132                           	
  4133                           l5202:	
  4134  0211                     	clrf	(main@wDownBottonPressed)^0100h
  4135  0211  01B7               	line	310
  4136                           	
  4137                           l5204:	
  4138  0212                     	fcall	_clearDisplay
  4139  0212  318A  2286  3180   	line	311
  4140                           	
  4141                           l5206:	
  4142  0215                     	fcall	_moveCursorToHome
  4143  0215  318A  22BB  3180   	line	312
  4144                           	goto	l5214
  4145  0218  2A28               	line	314
  4146                           	
  4147                           l161:	
  4148  0219                     	line	316
  4149                           	goto	l5216
  4150  0219  2A3E               	line	317
  4151                           	
  4152                           l163:	
  4153  021A                     	line	318
  4154                           	
  4155                           l5208:	
  4156  021A                     	movlb 3	; select bank3
  4157  021A  0023               	movf	(_wTempSet)^0180h,w
  4158  021B  084D               	addlw	0FFh
  4159  021C  3EFF               	movwf	(_wTempSet)^0180h
  4160  021D  00CD               	movlw	0FFh
  4161  021E  30FF               	addwfc	(_wTempSet+1)^0180h,w
  4162  021F  3D4E               	movwf	1+(_wTempSet)^0180h
  4163  0220  00CE               	line	319
  4164                           	goto	l5216
  4165  0221  2A3E               	line	320
  4166                           	
  4167                           l164:	
  4168  0222                     	line	321
  4169                           	goto	l5216
  4170  0222  2A3E               	line	322
  4171                           	
  4172                           l165:	
  4173  0223                     	line	323
  4174                           	
  4175                           l5210:	
  4176  0223                     	movlw	01h
  4177  0223  3001               	movlb 2	; select bank2
  4178  0224  0022               	subwf	(main@wMenu)^0100h,f
  4179  0225  02B9               	line	324
  4180                           	goto	l5216
  4181  0226  2A3E               	line	325
  4182                           	
  4183                           l5212:	
  4184  0227                     	goto	l5216
  4185  0227  2A3E               	
  4186                           l160:	
  4187  0228                     	
  4188                           l5214:	
  4189  0228                     	movlb 2	; select bank2
  4190  0228  0022               	movf	(main@wMenu)^0100h,w
  4191  0229  0839               	movlb 1	; select bank1
  4192  022A  0021               	movwf	(??_main+0)^080h+0
  4193  022B  00E7               	clrf	(??_main+0)^080h+0+1
  4194  022C  01E8               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4195                           ; Switch size 1, requested type "space"
  4196                           ; Number of cases is 1, Range of values is 0 to 0
  4197                           ; switch strategies available:
  4198                           ; Name         Instructions Cycles
  4199                           ; simple_byte            4     3 (average)
  4200                           ; direct_byte            8     6 (fixed)
  4201                           ; jumptable            260     6 (fixed)
  4202                           ;	Chosen strategy is simple_byte
  4203                           
  4204                           	movf 1+(??_main+0)^080h+0,w
  4205  022D  0868               	opt asmopt_push
  4206                           	opt asmopt_off
  4207                           	xorlw	0^0	; case 0
  4208  022E  3A00               	skipnz
  4209  022F  1903               	goto	l5732
  4210  0230  2A32               	goto	l5210
  4211  0231  2A23               	opt asmopt_pop
  4212                           	
  4213                           l5732:	
  4214  0232                     ; Switch size 1, requested type "space"
  4215                           ; Number of cases is 3, Range of values is 128 to 130
  4216                           ; switch strategies available:
  4217                           ; Name         Instructions Cycles
  4218                           ; simple_byte           10     6 (average)
  4219                           ; direct_byte           15     9 (fixed)
  4220                           ; jumptable            263     9 (fixed)
  4221                           ;	Chosen strategy is simple_byte
  4222                           
  4223                           	movf 0+(??_main+0)^080h+0,w
  4224  0232  0867               	opt asmopt_push
  4225                           	opt asmopt_off
  4226                           	xorlw	128^0	; case 128
  4227  0233  3A80               	skipnz
  4228  0234  1903               	goto	l5216
  4229  0235  2A3E               	xorlw	129^128	; case 129
  4230  0236  3A01               	skipnz
  4231  0237  1903               	goto	l5208
  4232  0238  2A1A               	xorlw	130^129	; case 130
  4233  0239  3A03               	skipnz
  4234  023A  1903               	goto	l5216
  4235  023B  2A3E               	goto	l5210
  4236  023C  2A23               	opt asmopt_pop
  4237                           
  4238                           	
  4239                           l162:	
  4240  023D                     	goto	l5216
  4241  023D  2A3E               	line	326
  4242                           	
  4243                           l159:	
  4244  023E                     	line	327
  4245                           	
  4246                           l5216:	
  4247  023E                     	movlb 2	; select bank2
  4248  023E  0022               		decf	((main@wEnterBottonPressed)^0100h),w
  4249  023F  0338               	btfss	status,2
  4250  0240  1D03               	goto	u3611
  4251  0241  2A43               	goto	u3610
  4252  0242  2A44               u3611:
  4253  0243                     	goto	l5234
  4254  0243  2A60               u3610:
  4255  0244                     	line	329
  4256                           	
  4257                           l5218:	
  4258  0244                     	clrf	(main@wUpdateMenu)^0100h
  4259  0244  01AE               	incf	(main@wUpdateMenu)^0100h,f
  4260  0245  0AAE               	line	330
  4261                           	
  4262                           l5220:	
  4263  0246                     	clrf	(main@wEnterBottonPressed)^0100h
  4264  0246  01B8               	line	332
  4265                           	
  4266                           l5222:	
  4267  0247                     	movf	((main@wEditingMode)^0100h),w
  4268  0247  082F               	btfss	status,2
  4269  0248  1D03               	goto	u3621
  4270  0249  2A4B               	goto	u3620
  4271  024A  2A4C               u3621:
  4272  024B                     	goto	l5230
  4273  024B  2A59               u3620:
  4274  024C                     	line	334
  4275                           	
  4276                           l5224:	
  4277  024C                     	clrf	(main@wEditingMode)^0100h
  4278  024C  01AF               	incf	(main@wEditingMode)^0100h,f
  4279  024D  0AAF               	line	335
  4280                           	
  4281                           l5226:	
  4282  024E                     	movf	(main@wMenu)^0100h,w
  4283  024E  0839               	addlw	080h
  4284  024F  3E80               	movlb 1	; select bank1
  4285  0250  0021               	movwf	(??_main+0)^080h+0
  4286  0251  00E7               	movf	(??_main+0)^080h+0,w
  4287  0252  0867               	movlb 2	; select bank2
  4288  0253  0022               	movwf	(main@wMenu)^0100h
  4289  0254  00B9               	line	336
  4290                           	
  4291                           l5228:	
  4292  0255                     	fcall	_Esp8266SetAccessPointMode
  4293  0255  318A  227D  3180   	line	337
  4294                           	goto	l5234
  4295  0258  2A60               	line	338
  4296                           	
  4297                           l167:	
  4298  0259                     	line	340
  4299                           	
  4300                           l5230:	
  4301  0259                     	fcall	_Esp8266SetupWifi
  4302  0259  318A  2281  3180   	line	341
  4303                           	
  4304                           l5232:	
  4305  025C                     	movlb 2	; select bank2
  4306  025C  0022               	clrf	(main@wEditingMode)^0100h
  4307  025D  01AF               	goto	l5234
  4308  025E  2A60               	line	342
  4309                           	
  4310                           l168:	
  4311  025F                     	goto	l5234
  4312  025F  2A60               	line	343
  4313                           	
  4314                           l166:	
  4315  0260                     	line	344
  4316                           	
  4317                           l5234:	
  4318  0260                     	movlb 2	; select bank2
  4319  0260  0022               		incf	((main@wMenu)^0100h),w
  4320  0261  0A39               	btfss	status,2
  4321  0262  1D03               	goto	u3631
  4322  0263  2A65               	goto	u3630
  4323  0264  2A66               u3631:
  4324  0265                     	goto	l5240
  4325  0265  2A6F               u3630:
  4326  0266                     	line	346
  4327                           	
  4328                           l5236:	
  4329  0266                     	clrf	(main@wUpdateMenu)^0100h
  4330  0266  01AE               	incf	(main@wUpdateMenu)^0100h,f
  4331  0267  0AAE               	line	347
  4332                           	
  4333                           l5238:	
  4334  0268                     	movlw	low(02h)
  4335  0268  3002               	movlb 1	; select bank1
  4336  0269  0021               	movwf	(??_main+0)^080h+0
  4337  026A  00E7               	movf	(??_main+0)^080h+0,w
  4338  026B  0867               	movlb 2	; select bank2
  4339  026C  0022               	movwf	(main@wMenu)^0100h
  4340  026D  00B9               	goto	l5240
  4341  026E  2A6F               	line	348
  4342                           	
  4343                           l169:	
  4344  026F                     	line	349
  4345                           	
  4346                           l5240:	
  4347  026F                     		movlw	3
  4348  026F  3003               	xorwf	((main@wMenu)^0100h),w
  4349  0270  0639               	btfss	status,2
  4350  0271  1D03               	goto	u3641
  4351  0272  2A74               	goto	u3640
  4352  0273  2A75               u3641:
  4353  0274                     	goto	l5174
  4354  0274  299C               u3640:
  4355  0275                     	line	351
  4356                           	
  4357                           l5242:	
  4358  0275                     	clrf	(main@wUpdateMenu)^0100h
  4359  0275  01AE               	incf	(main@wUpdateMenu)^0100h,f
  4360  0276  0AAE               	line	352
  4361                           	
  4362                           l5244:	
  4363  0277                     	clrf	(main@wMenu)^0100h
  4364  0277  01B9               	goto	l5174
  4365  0278  299C               	line	353
  4366                           	
  4367                           l170:	
  4368  0279                     	goto	l5174
  4369  0279  299C               	line	356
  4370                           	
  4371                           l171:	
  4372  027A                     	goto	l5174
  4373  027A  299C               	
  4374                           l172:	
  4375  027B                     	line	358
  4376                           	
  4377                           l173:	
  4378  027B                     	global	start
  4379                           	ljmp	start
  4380  027B  3180  286D         	opt stack 0
  4381                           GLOBAL	__end_of_main
  4382                           	__end_of_main:
  4383  027D                     	signat	_main,89
  4384                           	global	_setNotBlinkingCursor
  4385                           
  4386 ;; *************** function _setNotBlinkingCursor *****************
  4387 ;; Defined at:
  4388 ;;		line 248 in file "LCD_hd44780u_qy_2004a.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;		None
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;		None
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  1    wreg      void 
  4395 ;; Registers used:
  4396 ;;		wreg, status,2, status,0, pclath, cstack
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4404 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4405 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4406 ;;Total ram usage:        1 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; Hardware stack levels required when called:    9
  4409 ;; This function calls:
  4410 ;;		_writeInsChk
  4411 ;; This function is called by:
  4412 ;;		_main
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4416                           	file	"LCD_hd44780u_qy_2004a.c"
  4417                           	line	248
  4418                           global __ptext1
  4419                           __ptext1:	;psect for function _setNotBlinkingCursor
  4420  0AE4                     psect	text1
  4421                           	file	"LCD_hd44780u_qy_2004a.c"
  4422                           	line	248
  4423                           	global	__size_of_setNotBlinkingCursor
  4424                           	__size_of_setNotBlinkingCursor	equ	__end_of_setNotBlinkingCursor-_setNotBlinkingCursor

  4425  000B                     	
  4426                           _setNotBlinkingCursor:	
  4427  0AE4                     ;incstack = 0
  4428                           	opt	stack 6
  4429                           ; Regs used in _setNotBlinkingCursor: [wreg+status,2+status,0+pclath+cstack]
  4430                           	line	250
  4431                           	
  4432                           l4972:	
  4433  0AE4                     ;LCD_hd44780u_qy_2004a.c: 250:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFE;
  4434                           	movlb 0	; select bank0
  4435  0AE4  0020               	movf	(_mDisplayOnOffReg),w
  4436  0AE5  085C               	andlw	0FEh
  4437  0AE6  39FE               	movwf	(??_setNotBlinkingCursor+0)+0
  4438  0AE7  00B6               	movf	(??_setNotBlinkingCursor+0)+0,w
  4439  0AE8  0836               	movwf	(_mDisplayOnOffReg)
  4440  0AE9  00DC               	line	251
  4441                           	
  4442                           l4974:	
  4443  0AEA                     ;LCD_hd44780u_qy_2004a.c: 251:   writeInsChk(mDisplayOnOffReg);
  4444                           	movf	(_mDisplayOnOffReg),w
  4445  0AEA  085C               	fcall	_writeInsChk
  4446  0AEB  318A  22C3  318A   	line	252
  4447                           	
  4448                           l304:	
  4449  0AEE                     	return
  4450  0AEE  0008               	opt stack 0
  4451                           GLOBAL	__end_of_setNotBlinkingCursor
  4452                           	__end_of_setNotBlinkingCursor:
  4453  0AEF                     	signat	_setNotBlinkingCursor,89
  4454                           	global	_setCursorOff
  4455                           
  4456 ;; *************** function _setCursorOff *****************
  4457 ;; Defined at:
  4458 ;;		line 253 in file "LCD_hd44780u_qy_2004a.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;		None
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;		None
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      void 
  4465 ;; Registers used:
  4466 ;;		wreg, status,2, status,0, pclath, cstack
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4474 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4475 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4476 ;;Total ram usage:        1 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; Hardware stack levels required when called:    9
  4479 ;; This function calls:
  4480 ;;		_writeInsChk
  4481 ;; This function is called by:
  4482 ;;		_main
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4486                           	line	253
  4487                           global __ptext2
  4488                           __ptext2:	;psect for function _setCursorOff
  4489  0AD9                     psect	text2
  4490                           	file	"LCD_hd44780u_qy_2004a.c"
  4491                           	line	253
  4492                           	global	__size_of_setCursorOff
  4493                           	__size_of_setCursorOff	equ	__end_of_setCursorOff-_setCursorOff
  4494  000B                     	
  4495                           _setCursorOff:	
  4496  0AD9                     ;incstack = 0
  4497                           	opt	stack 6
  4498                           ; Regs used in _setCursorOff: [wreg+status,2+status,0+pclath+cstack]
  4499                           	line	255
  4500                           	
  4501                           l4964:	
  4502  0AD9                     ;LCD_hd44780u_qy_2004a.c: 255:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFD;
  4503                           	movlb 0	; select bank0
  4504  0AD9  0020               	movf	(_mDisplayOnOffReg),w
  4505  0ADA  085C               	andlw	0FDh
  4506  0ADB  39FD               	movwf	(??_setCursorOff+0)+0
  4507  0ADC  00B6               	movf	(??_setCursorOff+0)+0,w
  4508  0ADD  0836               	movwf	(_mDisplayOnOffReg)
  4509  0ADE  00DC               	line	256
  4510                           	
  4511                           l4966:	
  4512  0ADF                     ;LCD_hd44780u_qy_2004a.c: 256:   writeInsChk(mDisplayOnOffReg);
  4513                           	movf	(_mDisplayOnOffReg),w
  4514  0ADF  085C               	fcall	_writeInsChk
  4515  0AE0  318A  22C3  318A   	line	257
  4516                           	
  4517                           l307:	
  4518  0AE3                     	return
  4519  0AE3  0008               	opt stack 0
  4520                           GLOBAL	__end_of_setCursorOff
  4521                           	__end_of_setCursorOff:
  4522  0AE4                     	signat	_setCursorOff,89
  4523                           	global	_powerOnLcd
  4524                           
  4525 ;; *************** function _powerOnLcd *****************
  4526 ;; Defined at:
  4527 ;;		line 238 in file "LCD_hd44780u_qy_2004a.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;		None
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;		None
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      void 
  4534 ;; Registers used:
  4535 ;;		wreg, status,2, status,0, pclath, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4543 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4544 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4545 ;;Total ram usage:        1 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:    9
  4548 ;; This function calls:
  4549 ;;		_writeInsChk
  4550 ;; This function is called by:
  4551 ;;		_main
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4555                           	line	238
  4556                           global __ptext3
  4557                           __ptext3:	;psect for function _powerOnLcd
  4558  0ACE                     psect	text3
  4559                           	file	"LCD_hd44780u_qy_2004a.c"
  4560                           	line	238
  4561                           	global	__size_of_powerOnLcd
  4562                           	__size_of_powerOnLcd	equ	__end_of_powerOnLcd-_powerOnLcd
  4563  000B                     	
  4564                           _powerOnLcd:	
  4565  0ACE                     ;incstack = 0
  4566                           	opt	stack 6
  4567                           ; Regs used in _powerOnLcd: [wreg+status,2+status,0+pclath+cstack]
  4568                           	line	240
  4569                           	
  4570                           l4960:	
  4571  0ACE                     ;LCD_hd44780u_qy_2004a.c: 240:   mDisplayOnOffReg = mDisplayOnOffReg | 0x04;
  4572                           	movlb 0	; select bank0
  4573  0ACE  0020               	movf	(_mDisplayOnOffReg),w
  4574  0ACF  085C               	iorlw	04h
  4575  0AD0  3804               	movwf	(??_powerOnLcd+0)+0
  4576  0AD1  00B6               	movf	(??_powerOnLcd+0)+0,w
  4577  0AD2  0836               	movwf	(_mDisplayOnOffReg)
  4578  0AD3  00DC               	line	241
  4579                           	
  4580                           l4962:	
  4581  0AD4                     ;LCD_hd44780u_qy_2004a.c: 241:   writeInsChk(mDisplayOnOffReg);
  4582                           	movf	(_mDisplayOnOffReg),w
  4583  0AD4  085C               	fcall	_writeInsChk
  4584  0AD5  318A  22C3  318A   	line	242
  4585                           	
  4586                           l298:	
  4587  0AD8                     	return
  4588  0AD8  0008               	opt stack 0
  4589                           GLOBAL	__end_of_powerOnLcd
  4590                           	__end_of_powerOnLcd:
  4591  0AD9                     	signat	_powerOnLcd,89
  4592                           	global	_moveCursorToHome
  4593                           
  4594 ;; *************** function _moveCursorToHome *****************
  4595 ;; Defined at:
  4596 ;;		line 299 in file "LCD_hd44780u_qy_2004a.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;		None
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;		None
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      void 
  4603 ;; Registers used:
  4604 ;;		wreg, status,2, status,0, pclath, cstack
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4614 ;;Total ram usage:        0 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:    9
  4617 ;; This function calls:
  4618 ;;		_writeInsChk
  4619 ;; This function is called by:
  4620 ;;		_main
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4624                           	line	299
  4625                           global __ptext4
  4626                           __ptext4:	;psect for function _moveCursorToHome
  4627  0ABB                     psect	text4
  4628                           	file	"LCD_hd44780u_qy_2004a.c"
  4629                           	line	299
  4630                           	global	__size_of_moveCursorToHome
  4631                           	__size_of_moveCursorToHome	equ	__end_of_moveCursorToHome-_moveCursorToHome
  4632  0008                     	
  4633                           _moveCursorToHome:	
  4634  0ABB                     ;incstack = 0
  4635                           	opt	stack 6
  4636                           ; Regs used in _moveCursorToHome: [wreg+status,2+status,0+pclath+cstack]
  4637                           	line	301
  4638                           	
  4639                           l4968:	
  4640  0ABB                     ;LCD_hd44780u_qy_2004a.c: 301:   writeInsChk(0x02);
  4641                           	movlw	low(02h)
  4642  0ABB  3002               	fcall	_writeInsChk
  4643  0ABC  318A  22C3  318A   	line	302
  4644                           	
  4645                           l4970:	
  4646  0ABF                     ;LCD_hd44780u_qy_2004a.c: 302:   mWritingPosition=1;
  4647                           	movlb 0	; select bank0
  4648  0ABF  0020               	clrf	(_mWritingPosition)
  4649  0AC0  01DA               	incf	(_mWritingPosition),f
  4650  0AC1  0ADA               	line	303
  4651                           	
  4652                           l334:	
  4653  0AC2                     	return
  4654  0AC2  0008               	opt stack 0
  4655                           GLOBAL	__end_of_moveCursorToHome
  4656                           	__end_of_moveCursorToHome:
  4657  0AC3                     	signat	_moveCursorToHome,89
  4658                           	global	_memset
  4659                           
  4660 ;; *************** function _memset *****************
  4661 ;; Defined at:
  4662 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;  dest            2   16[BANK0 ] PTR void 
  4665 ;;		 -> wI2CRxBuffer(20), wI2CTxBuffer(20), wInterruptText(75), 
  4666 ;;  c               2   18[BANK0 ] int 
  4667 ;;  n               2   20[BANK0 ] unsigned int 
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;  s               2   28[BANK0 ] PTR unsigned char 
  4670 ;;		 -> wI2CRxBuffer(20), wI2CTxBuffer(20), wInterruptText(75), 
  4671 ;;  k               2   26[BANK0 ] unsigned int 
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  2   16[BANK0 ] PTR void 
  4674 ;; Registers used:
  4675 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4681 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  4682 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4683 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4684 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
  4685 ;;Total ram usage:       14 bytes
  4686 ;; Hardware stack levels used:    1
  4687 ;; Hardware stack levels required when called:    6
  4688 ;; This function calls:
  4689 ;;		Nothing
  4690 ;; This function is called by:
  4691 ;;		_main
  4692 ;;		_PrintLog
  4693 ;;		_I2CInit
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           psect	text5,local,class=CODE,delta=2,merge=1,group=2
  4697                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  4698                           	line	4
  4699                           global __ptext5
  4700                           __ptext5:	;psect for function _memset
  4701  04BE                     psect	text5
  4702                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  4703                           	line	4
  4704                           	global	__size_of_memset
  4705                           	__size_of_memset	equ	__end_of_memset-_memset
  4706  00D1                     	
  4707                           _memset:	
  4708  04BE                     ;incstack = 0
  4709                           	opt	stack 9
  4710                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4711                           	line	6
  4712                           	
  4713                           l4860:	
  4714  04BE                     	movlb 0	; select bank0
  4715  04BE  0020               	movf	(memset@dest+1),w
  4716  04BF  0831               	movwf	(memset@s+1)
  4717  04C0  00BD               	movf	(memset@dest),w
  4718  04C1  0830               	movwf	(memset@s)
  4719  04C2  00BC               	line	13
  4720                           	
  4721                           l4862:	
  4722  04C3                     	movf	((memset@n)),w
  4723  04C3  0834               iorwf	((memset@n+1)),w
  4724  04C4  0435               	btfss	status,2
  4725  04C5  1D03               	goto	u3431
  4726  04C6  2CC8               	goto	u3430
  4727  04C7  2CC9               u3431:
  4728  04C8                     	goto	l4866
  4729  04C8  2CCB               u3430:
  4730  04C9                     	goto	l1201
  4731  04C9  2D8E               	
  4732                           l4864:	
  4733  04CA                     ;	Return value of _memset is never used
  4734                           	goto	l1201
  4735  04CA  2D8E               	
  4736                           l1200:	
  4737  04CB                     	line	14
  4738                           	
  4739                           l4866:	
  4740  04CB                     	movf	(memset@s),w
  4741  04CB  083C               	movwf	fsr1l
  4742  04CC  0086               	movf	(memset@s+1),w
  4743  04CD  083D               	movwf	fsr1h
  4744  04CE  0087               	movf	(memset@c),w
  4745  04CF  0832               	movwf	indf1
  4746  04D0  0081               	line	15
  4747                           	
  4748                           l4868:	
  4749  04D1                     	movf	(memset@n),w
  4750  04D1  0834               	addlw	0FFh
  4751  04D2  3EFF               	movwf	(??_memset+0)+0
  4752  04D3  00B6               	movlw	0FFh
  4753  04D4  30FF               	addwfc	(memset@n+1),w
  4754  04D5  3D35               	movwf	1+(??_memset+0)+0
  4755  04D6  00B7               	movf	0+(??_memset+0)+0,w
  4756  04D7  0836               	addwf	(memset@s),w
  4757  04D8  073C               	movwf	(??_memset+2)+0
  4758  04D9  00B8               	movf	1+(??_memset+0)+0,w
  4759  04DA  0837               	addwfc	(memset@s+1),w
  4760  04DB  3D3D               	movwf	1+(??_memset+2)+0
  4761  04DC  00B9               	movf	0+(??_memset+2)+0,w
  4762  04DD  0838               	movwf	fsr1l
  4763  04DE  0086               	movf	1+(??_memset+2)+0,w
  4764  04DF  0839               	movwf	fsr1h
  4765  04E0  0087               	movf	(memset@c),w
  4766  04E1  0832               	movwf	indf1
  4767  04E2  0081               	line	16
  4768                           	
  4769                           l4870:	
  4770  04E3                     	movlw	0
  4771  04E3  3000               	subwf	(memset@n+1),w
  4772  04E4  0235               	movlw	03h
  4773  04E5  3003               	skipnz
  4774  04E6  1903               	subwf	(memset@n),w
  4775  04E7  0234               	skipnc
  4776  04E8  1803               	goto	u3441
  4777  04E9  2CEB               	goto	u3440
  4778  04EA  2CEC               u3441:
  4779  04EB                     	goto	l4874
  4780  04EB  2CEE               u3440:
  4781  04EC                     	goto	l1201
  4782  04EC  2D8E               	
  4783                           l4872:	
  4784  04ED                     ;	Return value of _memset is never used
  4785                           	goto	l1201
  4786  04ED  2D8E               	
  4787                           l1202:	
  4788  04EE                     	line	17
  4789                           	
  4790                           l4874:	
  4791  04EE                     	movf	(memset@s),w
  4792  04EE  083C               	addlw	01h
  4793  04EF  3E01               	movwf	(??_memset+0)+0
  4794  04F0  00B6               	movlw	0
  4795  04F1  3000               	addwfc	(memset@s+1),w
  4796  04F2  3D3D               	movwf	1+(??_memset+0)+0
  4797  04F3  00B7               	movf	0+(??_memset+0)+0,w
  4798  04F4  0836               	movwf	fsr1l
  4799  04F5  0086               	movf	1+(??_memset+0)+0,w
  4800  04F6  0837               	movwf	fsr1h
  4801  04F7  0087               	movf	(memset@c),w
  4802  04F8  0832               	movwf	indf1
  4803  04F9  0081               	line	18
  4804                           	movf	(memset@s),w
  4805  04FA  083C               	addlw	02h
  4806  04FB  3E02               	movwf	(??_memset+0)+0
  4807  04FC  00B6               	movlw	0
  4808  04FD  3000               	addwfc	(memset@s+1),w
  4809  04FE  3D3D               	movwf	1+(??_memset+0)+0
  4810  04FF  00B7               	movf	0+(??_memset+0)+0,w
  4811  0500  0836               	movwf	fsr1l
  4812  0501  0086               	movf	1+(??_memset+0)+0,w
  4813  0502  0837               	movwf	fsr1h
  4814  0503  0087               	movf	(memset@c),w
  4815  0504  0832               	movwf	indf1
  4816  0505  0081               	line	19
  4817                           	movf	(memset@n),w
  4818  0506  0834               	addlw	0FEh
  4819  0507  3EFE               	movwf	(??_memset+0)+0
  4820  0508  00B6               	movlw	0FFh
  4821  0509  30FF               	addwfc	(memset@n+1),w
  4822  050A  3D35               	movwf	1+(??_memset+0)+0
  4823  050B  00B7               	movf	0+(??_memset+0)+0,w
  4824  050C  0836               	addwf	(memset@s),w
  4825  050D  073C               	movwf	(??_memset+2)+0
  4826  050E  00B8               	movf	1+(??_memset+0)+0,w
  4827  050F  0837               	addwfc	(memset@s+1),w
  4828  0510  3D3D               	movwf	1+(??_memset+2)+0
  4829  0511  00B9               	movf	0+(??_memset+2)+0,w
  4830  0512  0838               	movwf	fsr1l
  4831  0513  0086               	movf	1+(??_memset+2)+0,w
  4832  0514  0839               	movwf	fsr1h
  4833  0515  0087               	movf	(memset@c),w
  4834  0516  0832               	movwf	indf1
  4835  0517  0081               	line	20
  4836                           	movf	(memset@n),w
  4837  0518  0834               	addlw	0FDh
  4838  0519  3EFD               	movwf	(??_memset+0)+0
  4839  051A  00B6               	movlw	0FFh
  4840  051B  30FF               	addwfc	(memset@n+1),w
  4841  051C  3D35               	movwf	1+(??_memset+0)+0
  4842  051D  00B7               	movf	0+(??_memset+0)+0,w
  4843  051E  0836               	addwf	(memset@s),w
  4844  051F  073C               	movwf	(??_memset+2)+0
  4845  0520  00B8               	movf	1+(??_memset+0)+0,w
  4846  0521  0837               	addwfc	(memset@s+1),w
  4847  0522  3D3D               	movwf	1+(??_memset+2)+0
  4848  0523  00B9               	movf	0+(??_memset+2)+0,w
  4849  0524  0838               	movwf	fsr1l
  4850  0525  0086               	movf	1+(??_memset+2)+0,w
  4851  0526  0839               	movwf	fsr1h
  4852  0527  0087               	movf	(memset@c),w
  4853  0528  0832               	movwf	indf1
  4854  0529  0081               	line	21
  4855                           	
  4856                           l4876:	
  4857  052A                     	movlw	0
  4858  052A  3000               	subwf	(memset@n+1),w
  4859  052B  0235               	movlw	07h
  4860  052C  3007               	skipnz
  4861  052D  1903               	subwf	(memset@n),w
  4862  052E  0234               	skipnc
  4863  052F  1803               	goto	u3451
  4864  0530  2D32               	goto	u3450
  4865  0531  2D33               u3451:
  4866  0532                     	goto	l4880
  4867  0532  2D35               u3450:
  4868  0533                     	goto	l1201
  4869  0533  2D8E               	
  4870                           l4878:	
  4871  0534                     ;	Return value of _memset is never used
  4872                           	goto	l1201
  4873  0534  2D8E               	
  4874                           l1203:	
  4875  0535                     	line	22
  4876                           	
  4877                           l4880:	
  4878  0535                     	movf	(memset@s),w
  4879  0535  083C               	addlw	03h
  4880  0536  3E03               	movwf	(??_memset+0)+0
  4881  0537  00B6               	movlw	0
  4882  0538  3000               	addwfc	(memset@s+1),w
  4883  0539  3D3D               	movwf	1+(??_memset+0)+0
  4884  053A  00B7               	movf	0+(??_memset+0)+0,w
  4885  053B  0836               	movwf	fsr1l
  4886  053C  0086               	movf	1+(??_memset+0)+0,w
  4887  053D  0837               	movwf	fsr1h
  4888  053E  0087               	movf	(memset@c),w
  4889  053F  0832               	movwf	indf1
  4890  0540  0081               	line	23
  4891                           	movf	(memset@n),w
  4892  0541  0834               	addlw	0FCh
  4893  0542  3EFC               	movwf	(??_memset+0)+0
  4894  0543  00B6               	movlw	0FFh
  4895  0544  30FF               	addwfc	(memset@n+1),w
  4896  0545  3D35               	movwf	1+(??_memset+0)+0
  4897  0546  00B7               	movf	0+(??_memset+0)+0,w
  4898  0547  0836               	addwf	(memset@s),w
  4899  0548  073C               	movwf	(??_memset+2)+0
  4900  0549  00B8               	movf	1+(??_memset+0)+0,w
  4901  054A  0837               	addwfc	(memset@s+1),w
  4902  054B  3D3D               	movwf	1+(??_memset+2)+0
  4903  054C  00B9               	movf	0+(??_memset+2)+0,w
  4904  054D  0838               	movwf	fsr1l
  4905  054E  0086               	movf	1+(??_memset+2)+0,w
  4906  054F  0839               	movwf	fsr1h
  4907  0550  0087               	movf	(memset@c),w
  4908  0551  0832               	movwf	indf1
  4909  0552  0081               	line	24
  4910                           	
  4911                           l4882:	
  4912  0553                     	movlw	0
  4913  0553  3000               	subwf	(memset@n+1),w
  4914  0554  0235               	movlw	09h
  4915  0555  3009               	skipnz
  4916  0556  1903               	subwf	(memset@n),w
  4917  0557  0234               	skipnc
  4918  0558  1803               	goto	u3461
  4919  0559  2D5B               	goto	u3460
  4920  055A  2D5C               u3461:
  4921  055B                     	goto	l4886
  4922  055B  2D5E               u3460:
  4923  055C                     	goto	l1201
  4924  055C  2D8E               	
  4925                           l4884:	
  4926  055D                     ;	Return value of _memset is never used
  4927                           	goto	l1201
  4928  055D  2D8E               	
  4929                           l1204:	
  4930  055E                     	line	31
  4931                           	
  4932                           l4886:	
  4933  055E                     	comf	(memset@s),w
  4934  055E  093C               	movwf	(??_memset+0)+0
  4935  055F  00B6               	comf	(memset@s+1),w
  4936  0560  093D               	movwf	((??_memset+0)+0+1)
  4937  0561  00B7               	incf	(??_memset+0)+0,f
  4938  0562  0AB6               	skipnz
  4939  0563  1903               	incf	((??_memset+0)+0+1),f
  4940  0564  0AB7               	movlw	03h
  4941  0565  3003               	andwf	0+(??_memset+0)+0,w
  4942  0566  0536               	movwf	(memset@k)
  4943  0567  00BA               	movlw	0
  4944  0568  3000               	andwf	1+(??_memset+0)+0,w
  4945  0569  0537               	movwf	1+(memset@k)
  4946  056A  00BB               	line	32
  4947                           	
  4948                           l4888:	
  4949  056B                     	movf	(memset@k),w
  4950  056B  083A               	addwf	(memset@s),f
  4951  056C  07BC               	movf	(memset@k+1),w
  4952  056D  083B               	addwfc	(memset@s+1),f
  4953  056E  3DBD               	line	33
  4954                           	
  4955                           l4890:	
  4956  056F                     	movf	(memset@k),w
  4957  056F  083A               	subwf	(memset@n),f
  4958  0570  02B4               	movf	(memset@k+1),w
  4959  0571  083B               	subwfb	(memset@n+1),f
  4960  0572  3BB5               	line	34
  4961                           	
  4962                           l4892:	
  4963  0573                     	movlw	0FCh
  4964  0573  30FC               	andwf	(memset@n),f
  4965  0574  05B4               	movlw	0FFh
  4966  0575  30FF               	andwf	(memset@n+1),f
  4967  0576  05B5               	line	86
  4968                           	goto	l4900
  4969  0577  2D87               	
  4970                           l1206:	
  4971  0578                     	
  4972                           l4894:	
  4973  0578                     	movf	(memset@s),w
  4974  0578  083C               	movwf	fsr1l
  4975  0579  0086               	movf	(memset@s+1),w
  4976  057A  083D               	movwf	fsr1h
  4977  057B  0087               	movf	(memset@c),w
  4978  057C  0832               	movwf	indf1
  4979  057D  0081               	
  4980                           l4896:	
  4981  057E                     	movlw	01h
  4982  057E  3001               	subwf	(memset@n),f
  4983  057F  02B4               	movlw	0
  4984  0580  3000               	subwfb	(memset@n+1),f
  4985  0581  3BB5               	
  4986                           l4898:	
  4987  0582                     	movlw	01h
  4988  0582  3001               	addwf	(memset@s),f
  4989  0583  07BC               	movlw	0
  4990  0584  3000               	addwfc	(memset@s+1),f
  4991  0585  3DBD               	goto	l4900
  4992  0586  2D87               	
  4993                           l1205:	
  4994  0587                     	
  4995                           l4900:	
  4996  0587                     	movf	((memset@n)),w
  4997  0587  0834               iorwf	((memset@n+1)),w
  4998  0588  0435               	btfss	status,2
  4999  0589  1D03               	goto	u3471
  5000  058A  2D8C               	goto	u3470
  5001  058B  2D8D               u3471:
  5002  058C                     	goto	l4894
  5003  058C  2D78               u3470:
  5004  058D                     	goto	l1201
  5005  058D  2D8E               	
  5006                           l1207:	
  5007  058E                     	line	90
  5008                           ;	Return value of _memset is never used
  5009                           	
  5010                           l1201:	
  5011  058E                     	return
  5012  058E  0008               	opt stack 0
  5013                           GLOBAL	__end_of_memset
  5014                           	__end_of_memset:
  5015  058F                     	signat	_memset,12409
  5016                           	global	_initLCD
  5017                           
  5018 ;; *************** function _initLCD *****************
  5019 ;; Defined at:
  5020 ;;		line 10 in file "LCD_hd44780u_qy_2004a.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;		None
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;		None
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  1    wreg      void 
  5027 ;; Registers used:
  5028 ;;		wreg, status,2, status,0, pclath, cstack
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5036 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5037 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5038 ;;Total ram usage:        1 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; Hardware stack levels required when called:   10
  5041 ;; This function calls:
  5042 ;;		_clearDisplay
  5043 ;;		_setData
  5044 ;;		_writeInsChk
  5045 ;; This function is called by:
  5046 ;;		_main
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  5050                           	file	"LCD_hd44780u_qy_2004a.c"
  5051                           	line	10
  5052                           global __ptext6
  5053                           __ptext6:	;psect for function _initLCD
  5054  0F9C                     psect	text6
  5055                           	file	"LCD_hd44780u_qy_2004a.c"
  5056                           	line	10
  5057                           	global	__size_of_initLCD
  5058                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  5059  0064                     	
  5060                           _initLCD:	
  5061  0F9C                     ;incstack = 0
  5062                           	opt	stack 5
  5063                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  5064                           	line	13
  5065                           	
  5066                           l4938:	
  5067  0F9C                     ;LCD_hd44780u_qy_2004a.c: 13:   ANSELAbits.ANSA3 = 0;
  5068                           	movlb 3	; select bank3
  5069  0F9C  0023               	bcf	(396)^0180h,3	;volatile
  5070  0F9D  118C               	line	14
  5071                           ;LCD_hd44780u_qy_2004a.c: 14:   ANSELCbits.ANSC2 = 0;
  5072                           	bcf	(398)^0180h,2	;volatile
  5073  0F9E  110E               	line	15
  5074                           ;LCD_hd44780u_qy_2004a.c: 15:   ANSELCbits.ANSC1 = 0;
  5075                           	bcf	(398)^0180h,1	;volatile
  5076  0F9F  108E               	line	16
  5077                           ;LCD_hd44780u_qy_2004a.c: 16:   ANSELCbits.ANSC0 = 0;
  5078                           	bcf	(398)^0180h,0	;volatile
  5079  0FA0  100E               	line	17
  5080                           ;LCD_hd44780u_qy_2004a.c: 17:   ANSELAbits.ANSA0 = 0;
  5081                           	bcf	(396)^0180h,0	;volatile
  5082  0FA1  100C               	line	18
  5083                           ;LCD_hd44780u_qy_2004a.c: 18:   ANSELAbits.ANSA1 = 0;
  5084                           	bcf	(396)^0180h,1	;volatile
  5085  0FA2  108C               	line	19
  5086                           ;LCD_hd44780u_qy_2004a.c: 19:   ANSELAbits.ANSA2 = 0;
  5087                           	bcf	(396)^0180h,2	;volatile
  5088  0FA3  110C               	line	21
  5089                           ;LCD_hd44780u_qy_2004a.c: 21:   PORTAbits.RA3 = 0;
  5090                           	movlb 0	; select bank0
  5091  0FA4  0020               	bcf	(12),3	;volatile
  5092  0FA5  118C               	line	22
  5093                           ;LCD_hd44780u_qy_2004a.c: 22:   PORTCbits.RC2 = 0;
  5094                           	bcf	(14),2	;volatile
  5095  0FA6  110E               	line	23
  5096                           ;LCD_hd44780u_qy_2004a.c: 23:   PORTCbits.RC1 = 0;
  5097                           	bcf	(14),1	;volatile
  5098  0FA7  108E               	line	24
  5099                           ;LCD_hd44780u_qy_2004a.c: 24:   PORTCbits.RC0 = 0;
  5100                           	bcf	(14),0	;volatile
  5101  0FA8  100E               	line	25
  5102                           ;LCD_hd44780u_qy_2004a.c: 25:   PORTAbits.RA0=0;
  5103                           	bcf	(12),0	;volatile
  5104  0FA9  100C               	line	26
  5105                           ;LCD_hd44780u_qy_2004a.c: 26:   PORTAbits.RA1=0;
  5106                           	bcf	(12),1	;volatile
  5107  0FAA  108C               	line	27
  5108                           ;LCD_hd44780u_qy_2004a.c: 27:   PORTAbits.RA2=0;
  5109                           	bcf	(12),2	;volatile
  5110  0FAB  110C               	line	29
  5111                           ;LCD_hd44780u_qy_2004a.c: 29:   TRISAbits.TRISA0 = 0;
  5112                           	movlb 1	; select bank1
  5113  0FAC  0021               	bcf	(140)^080h,0	;volatile
  5114  0FAD  100C               	line	30
  5115                           ;LCD_hd44780u_qy_2004a.c: 30:   TRISAbits.TRISA1 = 0;
  5116                           	bcf	(140)^080h,1	;volatile
  5117  0FAE  108C               	line	31
  5118                           ;LCD_hd44780u_qy_2004a.c: 31:   TRISAbits.TRISA2 = 0;
  5119                           	bcf	(140)^080h,2	;volatile
  5120  0FAF  110C               	line	32
  5121                           ;LCD_hd44780u_qy_2004a.c: 32:   TRISAbits.TRISA3 = 0;
  5122                           	bcf	(140)^080h,3	;volatile
  5123  0FB0  118C               	line	33
  5124                           ;LCD_hd44780u_qy_2004a.c: 33:   TRISCbits.TRISC2 = 0;
  5125                           	bcf	(142)^080h,2	;volatile
  5126  0FB1  110E               	line	34
  5127                           ;LCD_hd44780u_qy_2004a.c: 34:   TRISCbits.TRISC1 = 0;
  5128                           	bcf	(142)^080h,1	;volatile
  5129  0FB2  108E               	line	35
  5130                           ;LCD_hd44780u_qy_2004a.c: 35:   TRISCbits.TRISC0 = 0;
  5131                           	bcf	(142)^080h,0	;volatile
  5132  0FB3  100E               	line	38
  5133                           ;LCD_hd44780u_qy_2004a.c: 38:   PORTAbits.RA0 = 0;
  5134                           	movlb 0	; select bank0
  5135  0FB4  0020               	bcf	(12),0	;volatile
  5136  0FB5  100C               	line	39
  5137                           ;LCD_hd44780u_qy_2004a.c: 39:   PORTAbits.RA1 = 0;
  5138                           	bcf	(12),1	;volatile
  5139  0FB6  108C               	line	40
  5140                           ;LCD_hd44780u_qy_2004a.c: 40:   PORTAbits.RA2 = 0;
  5141                           	bcf	(12),2	;volatile
  5142  0FB7  110C               	line	43
  5143                           	
  5144                           l4940:	
  5145  0FB8                     ;LCD_hd44780u_qy_2004a.c: 43:   _delay((unsigned long)((15)*(16000000/4000.0)));
  5146                           	opt asmopt_push
  5147                           opt asmopt_off
  5148                           movlw	78
  5149  0FB8  304E               	movlb 0	; select bank0
  5150  0FB9  0020               movwf	((??_initLCD+0)+0),f
  5151  0FBA  00B6               	movlw	235
  5152  0FBB  30EB               u4017:
  5153  0FBC                     decfsz	wreg
  5154  0FBC  0B89               	goto	u4017
  5155  0FBD  2FBC               	decfsz	((??_initLCD+0)+0),f
  5156  0FBE  0BB6               	goto	u4017
  5157  0FBF  2FBC               opt asmopt_pop
  5158                           
  5159                           	line	44
  5160                           	
  5161                           l4942:	
  5162  0FC0                     ;LCD_hd44780u_qy_2004a.c: 44:   setData(0x3);
  5163                           	movlw	low(03h)
  5164  0FC0  3003               	fcall	_setData
  5165  0FC1  318C  24A5  318F   	line	45
  5166                           	
  5167                           l4944:	
  5168  0FC4                     ;LCD_hd44780u_qy_2004a.c: 45:   _delay((unsigned long)((5)*(16000000/4000.0)));
  5169                           	opt asmopt_push
  5170                           opt asmopt_off
  5171                           movlw	26
  5172  0FC4  301A               	movlb 0	; select bank0
  5173  0FC5  0020               movwf	((??_initLCD+0)+0),f
  5174  0FC6  00B6               	movlw	248
  5175  0FC7  30F8               u4027:
  5176  0FC8                     decfsz	wreg
  5177  0FC8  0B89               	goto	u4027
  5178  0FC9  2FC8               	decfsz	((??_initLCD+0)+0),f
  5179  0FCA  0BB6               	goto	u4027
  5180  0FCB  2FC8               	nop
  5181  0FCC  0000               opt asmopt_pop
  5182                           
  5183                           	line	46
  5184                           ;LCD_hd44780u_qy_2004a.c: 46:   setData(0x3);
  5185                           	movlw	low(03h)
  5186  0FCD  3003               	fcall	_setData
  5187  0FCE  318C  24A5  318F   	line	47
  5188                           	
  5189                           l4946:	
  5190  0FD1                     ;LCD_hd44780u_qy_2004a.c: 47:   _delay((unsigned long)((150)*(16000000/4000000.0)));
  5191                           	opt asmopt_push
  5192                           opt asmopt_off
  5193                           	movlw	200
  5194  0FD1  30C8               u4037:
  5195  0FD2                     decfsz	wreg
  5196  0FD2  0B89               	goto	u4037
  5197  0FD3  2FD2               opt asmopt_pop
  5198                           
  5199                           	line	48
  5200                           	
  5201                           l4948:	
  5202  0FD4                     ;LCD_hd44780u_qy_2004a.c: 48:   setData(0x3);
  5203                           	movlw	low(03h)
  5204  0FD4  3003               	fcall	_setData
  5205  0FD5  318C  24A5  318F   	line	49
  5206                           ;LCD_hd44780u_qy_2004a.c: 49:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  5207                           	opt asmopt_push
  5208                           opt asmopt_off
  5209                           	movlw	13
  5210  0FD8  300D               u4047:
  5211  0FD9                     decfsz	wreg
  5212  0FD9  0B89               	goto	u4047
  5213  0FDA  2FD9               	nop
  5214  0FDB  0000               opt asmopt_pop
  5215                           
  5216                           	line	50
  5217                           	
  5218                           l4950:	
  5219  0FDC                     ;LCD_hd44780u_qy_2004a.c: 50:   setData(0x2);
  5220                           	movlw	low(02h)
  5221  0FDC  3002               	fcall	_setData
  5222  0FDD  318C  24A5  318F   	line	51
  5223                           	
  5224                           l4952:	
  5225  0FE0                     ;LCD_hd44780u_qy_2004a.c: 51:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  5226                           	opt asmopt_push
  5227                           opt asmopt_off
  5228                           	movlw	13
  5229  0FE0  300D               u4057:
  5230  0FE1                     decfsz	wreg
  5231  0FE1  0B89               	goto	u4057
  5232  0FE2  2FE1               	nop
  5233  0FE3  0000               opt asmopt_pop
  5234                           
  5235                           	line	52
  5236                           ;LCD_hd44780u_qy_2004a.c: 52:   writeInsChk(0x28);
  5237                           	movlw	low(028h)
  5238  0FE4  3028               	fcall	_writeInsChk
  5239  0FE5  318A  22C3  318F   	line	53
  5240                           	
  5241                           l4954:	
  5242  0FE8                     ;LCD_hd44780u_qy_2004a.c: 53:   mDisplayOnOffReg = 0x0F;
  5243                           	movlw	low(0Fh)
  5244  0FE8  300F               	movlb 0	; select bank0
  5245  0FE9  0020               	movwf	(??_initLCD+0)+0
  5246  0FEA  00B6               	movf	(??_initLCD+0)+0,w
  5247  0FEB  0836               	movwf	(_mDisplayOnOffReg)
  5248  0FEC  00DC               	line	54
  5249                           	
  5250                           l4956:	
  5251  0FED                     ;LCD_hd44780u_qy_2004a.c: 54:   mCursorDisplayShiftReg= 0x06;
  5252                           	movlw	low(06h)
  5253  0FED  3006               	movwf	(??_initLCD+0)+0
  5254  0FEE  00B6               	movf	(??_initLCD+0)+0,w
  5255  0FEF  0836               	movwf	(_mCursorDisplayShiftReg)
  5256  0FF0  00DB               	line	55
  5257                           ;LCD_hd44780u_qy_2004a.c: 55:   writeInsChk(mDisplayOnOffReg);
  5258                           	movf	(_mDisplayOnOffReg),w
  5259  0FF1  085C               	fcall	_writeInsChk
  5260  0FF2  318A  22C3  318F   	line	57
  5261                           ;LCD_hd44780u_qy_2004a.c: 57:   clearDisplay();
  5262                           	fcall	_clearDisplay
  5263  0FF5  318A  2286  318F   	line	58
  5264                           ;LCD_hd44780u_qy_2004a.c: 58:   writeInsChk(0x06);
  5265                           	movlw	low(06h)
  5266  0FF8  3006               	fcall	_writeInsChk
  5267  0FF9  318A  22C3  318F   	line	59
  5268                           	
  5269                           l4958:	
  5270  0FFC                     ;LCD_hd44780u_qy_2004a.c: 59:   mWritingPosition=1;
  5271                           	movlb 0	; select bank0
  5272  0FFC  0020               	clrf	(_mWritingPosition)
  5273  0FFD  01DA               	incf	(_mWritingPosition),f
  5274  0FFE  0ADA               	line	61
  5275                           	
  5276                           l227:	
  5277  0FFF                     	return
  5278  0FFF  0008               	opt stack 0
  5279                           GLOBAL	__end_of_initLCD
  5280                           	__end_of_initLCD:
  5281  1000                     	signat	_initLCD,89
  5282                           	global	_clearDisplay
  5283                           
  5284 ;; *************** function _clearDisplay *****************
  5285 ;; Defined at:
  5286 ;;		line 295 in file "LCD_hd44780u_qy_2004a.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;		None
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;		None
  5291 ;; Return value:  Size  Location     Type
  5292 ;;                  1    wreg      void 
  5293 ;; Registers used:
  5294 ;;		wreg, status,2, status,0, pclath, cstack
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5304 ;;Total ram usage:        0 bytes
  5305 ;; Hardware stack levels used:    1
  5306 ;; Hardware stack levels required when called:    9
  5307 ;; This function calls:
  5308 ;;		_writeInsChk
  5309 ;; This function is called by:
  5310 ;;		_main
  5311 ;;		_initLCD
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  5315                           	line	295
  5316                           global __ptext7
  5317                           __ptext7:	;psect for function _clearDisplay
  5318  0A86                     psect	text7
  5319                           	file	"LCD_hd44780u_qy_2004a.c"
  5320                           	line	295
  5321                           	global	__size_of_clearDisplay
  5322                           	__size_of_clearDisplay	equ	__end_of_clearDisplay-_clearDisplay
  5323  0005                     	
  5324                           _clearDisplay:	
  5325  0A86                     ;incstack = 0
  5326                           	opt	stack 5
  5327                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  5328                           	line	297
  5329                           	
  5330                           l4682:	
  5331  0A86                     ;LCD_hd44780u_qy_2004a.c: 297:   writeInsChk(0x01);
  5332                           	movlw	low(01h)
  5333  0A86  3001               	fcall	_writeInsChk
  5334  0A87  318A  22C3  318A   	line	298
  5335                           	
  5336                           l331:	
  5337  0A8A                     	return
  5338  0A8A  0008               	opt stack 0
  5339                           GLOBAL	__end_of_clearDisplay
  5340                           	__end_of_clearDisplay:
  5341  0A8B                     	signat	_clearDisplay,89
  5342                           	global	_writeInsChk
  5343                           
  5344 ;; *************** function _writeInsChk *****************
  5345 ;; Defined at:
  5346 ;;		line 182 in file "LCD_hd44780u_qy_2004a.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;  iOpCode         1    wreg     unsigned char 
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;  iOpCode         1   21[BANK0 ] unsigned char 
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      void 
  5353 ;; Registers used:
  5354 ;;		wreg, status,2, status,0, pclath, cstack
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5361 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5363 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5364 ;;Total ram usage:        1 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    8
  5367 ;; This function calls:
  5368 ;;		_waitLCDBusy
  5369 ;;		_writeInsNoChk
  5370 ;; This function is called by:
  5371 ;;		_initLCD
  5372 ;;		_powerOnLcd
  5373 ;;		_setNotBlinkingCursor
  5374 ;;		_setCursorOff
  5375 ;;		_clearDisplay
  5376 ;;		_moveCursorToHome
  5377 ;;		_powerOffLcd
  5378 ;;		_setBlinkingCursor
  5379 ;;		_setCursorOn
  5380 ;;		_setCursorMovingLeft
  5381 ;;		_setCursorMovingRight
  5382 ;;		_setDisplayMovingRight
  5383 ;;		_setDisplayMovingLeft
  5384 ;;		_moveCursorRight
  5385 ;;		_moveCursorLeft
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  5389                           	line	182
  5390                           global __ptext8
  5391                           __ptext8:	;psect for function _writeInsChk
  5392  0AC3                     psect	text8
  5393                           	file	"LCD_hd44780u_qy_2004a.c"
  5394                           	line	182
  5395                           	global	__size_of_writeInsChk
  5396                           	__size_of_writeInsChk	equ	__end_of_writeInsChk-_writeInsChk
  5397  000B                     	
  5398                           _writeInsChk:	
  5399  0AC3                     ;incstack = 0
  5400                           	opt	stack 6
  5401                           ; Regs used in _writeInsChk: [wreg+status,2+status,0+pclath+cstack]
  5402                           ;writeInsChk@iOpCode stored from wreg
  5403                           	movlb 0	; select bank0
  5404  0AC3  0020               	movwf	(writeInsChk@iOpCode)
  5405  0AC4  00B5               	line	184
  5406                           	
  5407                           l4482:	
  5408  0AC5                     ;LCD_hd44780u_qy_2004a.c: 182: void writeInsChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 83: {;LCD_hd44780u_qy_2004a.c: 184:   waitLCDBusy();
  5409                           	fcall	_waitLCDBusy
  5410  0AC5  3187  27D2  318A   	line	185
  5411                           ;LCD_hd44780u_qy_2004a.c: 185:   writeInsNoChk(iOpCode);
  5412                           	movlb 0	; select bank0
  5413  0AC8  0020               	movf	(writeInsChk@iOpCode),w
  5414  0AC9  0835               	fcall	_writeInsNoChk
  5415  0ACA  318B  2311  318A   	line	186
  5416                           	
  5417                           l277:	
  5418  0ACD                     	return
  5419  0ACD  0008               	opt stack 0
  5420                           GLOBAL	__end_of_writeInsChk
  5421                           	__end_of_writeInsChk:
  5422  0ACE                     	signat	_writeInsChk,4217
  5423                           	global	_writeInsNoChk
  5424                           
  5425 ;; *************** function _writeInsNoChk *****************
  5426 ;; Defined at:
  5427 ;;		line 188 in file "LCD_hd44780u_qy_2004a.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;  iOpCode         1    wreg     unsigned char 
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;  iOpCode         1   20[BANK0 ] unsigned char 
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  1    wreg      void 
  5434 ;; Registers used:
  5435 ;;		wreg, status,2, status,0, pclath, cstack
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5442 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5443 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5444 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5445 ;;Total ram usage:        2 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; Hardware stack levels required when called:    7
  5448 ;; This function calls:
  5449 ;;		_SetToSendDataToLCD
  5450 ;;		_setData
  5451 ;; This function is called by:
  5452 ;;		_writeInsChk
  5453 ;; This function uses a non-reentrant model
  5454 ;;
  5455                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  5456                           	line	188
  5457                           global __ptext9
  5458                           __ptext9:	;psect for function _writeInsNoChk
  5459  0B11                     psect	text9
  5460                           	file	"LCD_hd44780u_qy_2004a.c"
  5461                           	line	188
  5462                           	global	__size_of_writeInsNoChk
  5463                           	__size_of_writeInsNoChk	equ	__end_of_writeInsNoChk-_writeInsNoChk
  5464  0018                     	
  5465                           _writeInsNoChk:	
  5466  0B11                     ;incstack = 0
  5467                           	opt	stack 6
  5468                           ; Regs used in _writeInsNoChk: [wreg+status,2+status,0+pclath+cstack]
  5469                           ;writeInsNoChk@iOpCode stored from wreg
  5470                           	movlb 0	; select bank0
  5471  0B11  0020               	movwf	(writeInsNoChk@iOpCode)
  5472  0B12  00B4               	line	190
  5473                           	
  5474                           l4428:	
  5475  0B13                     ;LCD_hd44780u_qy_2004a.c: 188: void writeInsNoChk(char iOpCode);LCD_hd44780u_qy_2004a.c:
                                  189: {;LCD_hd44780u_qy_2004a.c: 190:   SetToSendDataToLCD();
  5476                           	fcall	_SetToSendDataToLCD
  5477  0B13  318A  2297  318B   	line	191
  5478                           	
  5479                           l4430:	
  5480  0B16                     ;LCD_hd44780u_qy_2004a.c: 191:   PORTAbits.RA0 = 0;
  5481                           	movlb 0	; select bank0
  5482  0B16  0020               	bcf	(12),0	;volatile
  5483  0B17  100C               	line	192
  5484                           	
  5485                           l4432:	
  5486  0B18                     ;LCD_hd44780u_qy_2004a.c: 192:   PORTAbits.RA1 = 0;
  5487                           	bcf	(12),1	;volatile
  5488  0B18  108C               	line	193
  5489                           	
  5490                           l4434:	
  5491  0B19                     ;LCD_hd44780u_qy_2004a.c: 193:   setData(iOpCode >> 4);
  5492                           	movf	(writeInsNoChk@iOpCode),w
  5493  0B19  0834               	movwf	(??_writeInsNoChk+0)+0
  5494  0B1A  00B3               	movlw	04h
  5495  0B1B  3004               u2915:
  5496  0B1C                     	lsrf	(??_writeInsNoChk+0)+0,f
  5497  0B1C  36B3               	decfsz	wreg,f
  5498  0B1D  0B89               	goto	u2915
  5499  0B1E  2B1C               	movf	0+(??_writeInsNoChk+0)+0,w
  5500  0B1F  0833               	fcall	_setData
  5501  0B20  318C  24A5  318B   	line	194
  5502                           	
  5503                           l4436:	
  5504  0B23                     ;LCD_hd44780u_qy_2004a.c: 194:   setData(iOpCode);
  5505                           	movlb 0	; select bank0
  5506  0B23  0020               	movf	(writeInsNoChk@iOpCode),w
  5507  0B24  0834               	fcall	_setData
  5508  0B25  318C  24A5  318B   	line	195
  5509                           	
  5510                           l280:	
  5511  0B28                     	return
  5512  0B28  0008               	opt stack 0
  5513                           GLOBAL	__end_of_writeInsNoChk
  5514                           	__end_of_writeInsNoChk:
  5515  0B29                     	signat	_writeInsNoChk,4217
  5516                           	global	_Esp8266SetupWifi
  5517                           
  5518 ;; *************** function _Esp8266SetupWifi *****************
  5519 ;; Defined at:
  5520 ;;		line 16 in file "ESP8266.c"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;		None
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;		None
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  1    wreg      void 
  5527 ;; Registers used:
  5528 ;;		status,2
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5538 ;;Total ram usage:        0 bytes
  5539 ;; Hardware stack levels used:    1
  5540 ;; Hardware stack levels required when called:    6
  5541 ;; This function calls:
  5542 ;;		Nothing
  5543 ;; This function is called by:
  5544 ;;		_main
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5548                           	file	"ESP8266.c"
  5549                           	line	16
  5550                           global __ptext10
  5551                           __ptext10:	;psect for function _Esp8266SetupWifi
  5552  0A81                     psect	text10
  5553                           	file	"ESP8266.c"
  5554                           	line	16
  5555                           	global	__size_of_Esp8266SetupWifi
  5556                           	__size_of_Esp8266SetupWifi	equ	__end_of_Esp8266SetupWifi-_Esp8266SetupWifi
  5557  0005                     	
  5558                           _Esp8266SetupWifi:	
  5559  0A81                     ;incstack = 0
  5560                           	opt	stack 9
  5561                           ; Regs used in _Esp8266SetupWifi: [status,2]
  5562                           	line	18
  5563                           	
  5564                           l5044:	
  5565  0A81                     ;ESP8266.c: 18:     gEsp8266State = eSettingUpCommand;
  5566                           	movlb 2	; select bank2
  5567  0A81  0022               	clrf	(_gEsp8266State)^0100h
  5568  0A82  01CA               	line	19
  5569                           	
  5570                           l5046:	
  5571  0A83                     ;ESP8266.c: 19:     gESPCommand = eSettingWiFiMode;
  5572                           	clrf	(_gESPCommand)^0100h
  5573  0A83  01C9               	incf	(_gESPCommand)^0100h,f
  5574  0A84  0AC9               	line	20
  5575                           	
  5576                           l638:	
  5577  0A85                     	return
  5578  0A85  0008               	opt stack 0
  5579                           GLOBAL	__end_of_Esp8266SetupWifi
  5580                           	__end_of_Esp8266SetupWifi:
  5581  0A86                     	signat	_Esp8266SetupWifi,89
  5582                           	global	_Esp8266SetAccessPointMode
  5583                           
  5584 ;; *************** function _Esp8266SetAccessPointMode *****************
  5585 ;; Defined at:
  5586 ;;		line 11 in file "ESP8266.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;		None
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;		None
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      void 
  5593 ;; Registers used:
  5594 ;;		status,2
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5604 ;;Total ram usage:        0 bytes
  5605 ;; Hardware stack levels used:    1
  5606 ;; Hardware stack levels required when called:    6
  5607 ;; This function calls:
  5608 ;;		Nothing
  5609 ;; This function is called by:
  5610 ;;		_main
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  5614                           	line	11
  5615                           global __ptext11
  5616                           __ptext11:	;psect for function _Esp8266SetAccessPointMode
  5617  0A7D                     psect	text11
  5618                           	file	"ESP8266.c"
  5619                           	line	11
  5620                           	global	__size_of_Esp8266SetAccessPointMode
  5621                           	__size_of_Esp8266SetAccessPointMode	equ	__end_of_Esp8266SetAccessPointMode-_Esp8266SetA
                                 ccessPointMode
  5622  0004                     	
  5623                           _Esp8266SetAccessPointMode:	
  5624  0A7D                     ;incstack = 0
  5625                           	opt	stack 9
  5626                           ; Regs used in _Esp8266SetAccessPointMode: [status,2]
  5627                           	line	13
  5628                           	
  5629                           l5042:	
  5630  0A7D                     ;ESP8266.c: 13:     gEsp8266State = eSettingUpCommand;
  5631                           	movlb 2	; select bank2
  5632  0A7D  0022               	clrf	(_gEsp8266State)^0100h
  5633  0A7E  01CA               	line	14
  5634                           ;ESP8266.c: 14:     gESPCommand = eSettingAPMode;
  5635                           	clrf	(_gESPCommand)^0100h
  5636  0A7F  01C9               	line	15
  5637                           	
  5638                           l635:	
  5639  0A80                     	return
  5640  0A80  0008               	opt stack 0
  5641                           GLOBAL	__end_of_Esp8266SetAccessPointMode
  5642                           	__end_of_Esp8266SetAccessPointMode:
  5643  0A81                     	signat	_Esp8266SetAccessPointMode,89
  5644                           	global	_Esp8266Entrypoint
  5645                           
  5646 ;; *************** function _Esp8266Entrypoint *****************
  5647 ;; Defined at:
  5648 ;;		line 64 in file "ESP8266.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;		None
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;  wEspBuffer     50   16[BANK1 ] unsigned char [50]
  5653 ;;  wReturnNumbe    4   66[BANK1 ] unsigned char [4]
  5654 ;;  wEusartNbByt    1   70[BANK1 ] unsigned char 
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  1    wreg      void 
  5657 ;; Registers used:
  5658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5665 ;;      Locals:         0       0      55       0       0       0       0       0       0       0       0       0       
       0       0
  5666 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  5667 ;;      Totals:         0       0      57       0       0       0       0       0       0       0       0       0       
       0       0
  5668 ;;Total ram usage:       57 bytes
  5669 ;; Hardware stack levels used:    1
  5670 ;; Hardware stack levels required when called:   11
  5671 ;; This function calls:
  5672 ;;		_Esp8266SetNetworkParameters
  5673 ;;		_EusartGetNbByteReceived
  5674 ;;		_EusartGetRxBuffer
  5675 ;;		_Send_UART_Data
  5676 ;;		_lcdWriteAllText
  5677 ;;		_lcdWriteText
  5678 ;;		_memcmp
  5679 ;;		_uint8_tToa
  5680 ;; This function is called by:
  5681 ;;		_main
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5685                           	line	64
  5686                           global __ptext12
  5687                           __ptext12:	;psect for function _Esp8266Entrypoint
  5688  027D                     psect	text12
  5689                           	file	"ESP8266.c"
  5690                           	line	64
  5691                           	global	__size_of_Esp8266Entrypoint
  5692                           	__size_of_Esp8266Entrypoint	equ	__end_of_Esp8266Entrypoint-_Esp8266Entrypoint
  5693  0121                     	
  5694                           _Esp8266Entrypoint:	
  5695  027D                     ;incstack = 0
  5696                           	opt	stack 4
  5697                           ; Regs used in _Esp8266Entrypoint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5698                           	line	73
  5699                           	
  5700                           l4976:	
  5701  027D                     ;ESP8266.c: 66:     static uint8_t prevEusartNbByteReceived;;ESP8266.c: 67:     static u
                                 int8_t wCounter;;ESP8266.c: 68:     static uint8_t wCommandsize;;ESP8266.c: 69:     uint
                                 8_t wEspBuffer[50];;ESP8266.c: 70:     uint8_t wEusartNbByteReceived;;ESP8266.c: 71:    
                                  char wReturnNumber[4];;ESP8266.c: 73:     switch(gEsp8266State)
  5702                           	goto	l5032
  5703  027D  2B82               	line	75
  5704                           ;ESP8266.c: 74:     {;ESP8266.c: 75:         case eSettingUpCommand:
  5705                           	
  5706                           l659:	
  5707  027E                     	line	76
  5708                           ;ESP8266.c: 76:             switch(gESPCommand)
  5709                           	goto	l4988
  5710  027E  2ABC               	line	78
  5711                           ;ESP8266.c: 77:             {;ESP8266.c: 78:                 case eSettingAPMode:
  5712                           	
  5713                           l661:	
  5714  027F                     	line	79
  5715                           	
  5716                           l4978:	
  5717  027F                     ;ESP8266.c: 79:                     wCommandsize = sizeof("AT+CWMODE=2\r\n");
  5718                           	movlw	low(0Eh)
  5719  027F  300E               	movlb 1	; select bank1
  5720  0280  0021               	movwf	(??_Esp8266Entrypoint+0)^080h+0
  5721  0281  00AE               	movf	(??_Esp8266Entrypoint+0)^080h+0,w
  5722  0282  082E               	movlb 2	; select bank2
  5723  0283  0022               	movwf	(Esp8266Entrypoint@wCommandsize)^0100h
  5724  0284  00C2               	line	80
  5725                           	
  5726                           l4980:	
  5727  0285                     ;ESP8266.c: 80:                     lcdWriteAllText("AT+CWMODE=2\r\n");
  5728                           	movlw	low(((STR_7)|8000h))
  5729  0285  3011               	movlb 0	; select bank0
  5730  0286  0020               	movwf	(lcdWriteAllText@iText)
  5731  0287  00BD               	movlw	high(((STR_7)|8000h))
  5732  0288  3090               	movwf	((lcdWriteAllText@iText))+1
  5733  0289  00BE               	fcall	_lcdWriteAllText
  5734  028A  318D  25BD  3182   	line	81
  5735                           	
  5736                           l4982:	
  5737  028D                     ;ESP8266.c: 81:                     Send_UART_Data((uint8_t*)"AT+CWMODE=2\r\n",wCommands
                                 ize);
  5738                           	movlw	low(((STR_8)|8000h))
  5739  028D  3011               	movlb 0	; select bank0
  5740  028E  0020               	movwf	(Send_UART_Data@iData)
  5741  028F  00BC               	movlw	high(((STR_8)|8000h))
  5742  0290  3090               	movwf	((Send_UART_Data@iData))+1
  5743  0291  00BD               	movlb 2	; select bank2
  5744  0292  0022               	movf	(Esp8266Entrypoint@wCommandsize)^0100h,w
  5745  0293  0842               	movlb 1	; select bank1
  5746  0294  0021               	movwf	(??_Esp8266Entrypoint+0)^080h+0
  5747  0295  00AE               	movf	(??_Esp8266Entrypoint+0)^080h+0,w
  5748  0296  082E               	movlb 0	; select bank0
  5749  0297  0020               	movwf	(Send_UART_Data@iData_Length)
  5750  0298  00BE               	fcall	_Send_UART_Data
  5751  0299  318B  238B  3182   	line	82
  5752                           ;ESP8266.c: 82:                     break;
  5753                           	goto	l4990
  5754  029C  2AD4               	line	83
  5755                           ;ESP8266.c: 83:                 case eSettingWiFiMode:
  5756                           	
  5757                           l663:	
  5758  029D                     	line	84
  5759                           	
  5760                           l4984:	
  5761  029D                     ;ESP8266.c: 84:                     wCommandsize = Esp8266SetNetworkParameters("Meccos",
                                 "12345678",5,eBroadcastSSID);
  5762                           	movlw	low(((STR_9)|8000h))
  5763  029D  3043               	movlb 1	; select bank1
  5764  029E  0021               	movwf	(Esp8266SetNetworkParameters@iWifiNetworkName)^080h
  5765  029F  00A0               	movlw	high(((STR_9)|8000h))
  5766  02A0  3090               	movwf	((Esp8266SetNetworkParameters@iWifiNetworkName)^080h)+1
  5767  02A1  00A1               	movlw	low(((STR_10)|8000h))
  5768  02A2  302A               	movwf	(Esp8266SetNetworkParameters@iWifiPassword)^080h
  5769  02A3  00A2               	movlw	high(((STR_10)|8000h))
  5770  02A4  3090               	movwf	((Esp8266SetNetworkParameters@iWifiPassword)^080h)+1
  5771  02A5  00A3               	movlw	low(05h)
  5772  02A6  3005               	movwf	(??_Esp8266Entrypoint+0)^080h+0
  5773  02A7  00AE               	movf	(??_Esp8266Entrypoint+0)^080h+0,w
  5774  02A8  082E               	movwf	(Esp8266SetNetworkParameters@iChannel)^080h
  5775  02A9  00A4               	clrf	(Esp8266SetNetworkParameters@iHidden)^080h
  5776  02AA  01A5               	incf	(Esp8266SetNetworkParameters@iHidden)^080h,f
  5777  02AB  0AA5               	fcall	_Esp8266SetNetworkParameters
  5778  02AC  3183  239E  3182   	movlb 1	; select bank1
  5779  02AF  0021               	movf	(0+(?_Esp8266SetNetworkParameters))^080h,w
  5780  02B0  0820               	movwf	(??_Esp8266Entrypoint+1)^080h+0
  5781  02B1  00AF               	movf	(??_Esp8266Entrypoint+1)^080h+0,w
  5782  02B2  082F               	movlb 2	; select bank2
  5783  02B3  0022               	movwf	(Esp8266Entrypoint@wCommandsize)^0100h
  5784  02B4  00C2               	line	85
  5785                           ;ESP8266.c: 85:                     break;
  5786                           	goto	l4990
  5787  02B5  2AD4               	line	86
  5788                           ;ESP8266.c: 86:                 case eSendData:
  5789                           	
  5790                           l664:	
  5791  02B6                     	line	87
  5792                           ;ESP8266.c: 87:                     break;
  5793                           	goto	l4990
  5794  02B6  2AD4               	line	88
  5795                           ;ESP8266.c: 88:                 case eNothing:
  5796                           	
  5797                           l665:	
  5798  02B7                     	line	89
  5799                           ;ESP8266.c: 89:                 default:
  5800                           	
  5801                           l666:	
  5802  02B7                     	line	90
  5803                           ;ESP8266.c: 90:                     gEsp8266State = eESPIdle;
  5804                           	movlb 2	; select bank2
  5805  02B7  0022               	clrf	(_gEsp8266State)^0100h
  5806  02B8  01CA               	incf	(_gEsp8266State)^0100h,f
  5807  02B9  0ACA               	line	91
  5808                           ;ESP8266.c: 91:                     break;
  5809                           	goto	l4990
  5810  02BA  2AD4               	line	92
  5811                           	
  5812                           l4986:	
  5813  02BB                     ;ESP8266.c: 92:             }
  5814                           	goto	l4990
  5815  02BB  2AD4               	
  5816                           l660:	
  5817  02BC                     	
  5818                           l4988:	
  5819  02BC                     	movlb 2	; select bank2
  5820  02BC  0022               	movf	(_gESPCommand)^0100h,w
  5821  02BD  0849               	movlb 1	; select bank1
  5822  02BE  0021               	movwf	(??_Esp8266Entrypoint+0)^080h+0
  5823  02BF  00AE               	clrf	(??_Esp8266Entrypoint+0)^080h+0+1
  5824  02C0  01AF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5825                           ; Switch size 1, requested type "space"
  5826                           ; Number of cases is 1, Range of values is 0 to 0
  5827                           ; switch strategies available:
  5828                           ; Name         Instructions Cycles
  5829                           ; simple_byte            4     3 (average)
  5830                           ; direct_byte            8     6 (fixed)
  5831                           ; jumptable            260     6 (fixed)
  5832                           ;	Chosen strategy is simple_byte
  5833                           
  5834                           	movf 1+(??_Esp8266Entrypoint+0)^080h+0,w
  5835  02C1  082F               	opt asmopt_push
  5836                           	opt asmopt_off
  5837                           	xorlw	0^0	; case 0
  5838  02C2  3A00               	skipnz
  5839  02C3  1903               	goto	l5734
  5840  02C4  2AC6               	goto	l666
  5841  02C5  2AB7               	opt asmopt_pop
  5842                           	
  5843                           l5734:	
  5844  02C6                     ; Switch size 1, requested type "space"
  5845                           ; Number of cases is 4, Range of values is 0 to 3
  5846                           ; switch strategies available:
  5847                           ; Name         Instructions Cycles
  5848                           ; simple_byte           13     7 (average)
  5849                           ; direct_byte           14     6 (fixed)
  5850                           ; jumptable            260     6 (fixed)
  5851                           ;	Chosen strategy is simple_byte
  5852                           
  5853                           	movf 0+(??_Esp8266Entrypoint+0)^080h+0,w
  5854  02C6  082E               	opt asmopt_push
  5855                           	opt asmopt_off
  5856                           	xorlw	0^0	; case 0
  5857  02C7  3A00               	skipnz
  5858  02C8  1903               	goto	l4978
  5859  02C9  2A7F               	xorlw	1^0	; case 1
  5860  02CA  3A01               	skipnz
  5861  02CB  1903               	goto	l4984
  5862  02CC  2A9D               	xorlw	2^1	; case 2
  5863  02CD  3A03               	skipnz
  5864  02CE  1903               	goto	l4990
  5865  02CF  2AD4               	xorlw	3^2	; case 3
  5866  02D0  3A01               	skipnz
  5867  02D1  1903               	goto	l666
  5868  02D2  2AB7               	goto	l666
  5869  02D3  2AB7               	opt asmopt_pop
  5870                           
  5871                           	
  5872                           l662:	
  5873  02D4                     	line	93
  5874                           	
  5875                           l4990:	
  5876  02D4                     ;ESP8266.c: 93:             if(wCommandsize !=0 )
  5877                           	movlb 2	; select bank2
  5878  02D4  0022               	movf	((Esp8266Entrypoint@wCommandsize)^0100h),w
  5879  02D5  0842               	btfsc	status,2
  5880  02D6  1903               	goto	u3511
  5881  02D7  2AD9               	goto	u3510
  5882  02D8  2ADA               u3511:
  5883  02D9                     	goto	l667
  5884  02D9  2AE1               u3510:
  5885  02DA                     	line	95
  5886                           	
  5887                           l4992:	
  5888  02DA                     ;ESP8266.c: 94:             {;ESP8266.c: 95:                 gEsp8266State = eESPCommand
                                 Sent;
  5889                           	movlw	low(03h)
  5890  02DA  3003               	movlb 1	; select bank1
  5891  02DB  0021               	movwf	(??_Esp8266Entrypoint+0)^080h+0
  5892  02DC  00AE               	movf	(??_Esp8266Entrypoint+0)^080h+0,w
  5893  02DD  082E               	movlb 2	; select bank2
  5894  02DE  0022               	movwf	(_gEsp8266State)^0100h
  5895  02DF  00CA               	line	96
  5896                           ;ESP8266.c: 96:             }
  5897                           	goto	l681
  5898  02E0  2B9D               	line	97
  5899                           ;ESP8266.c: 97:             else
  5900                           	
  5901                           l667:	
  5902  02E1                     	line	99
  5903                           ;ESP8266.c: 98:             {;ESP8266.c: 99:                 gEsp8266State = eESPIdle;
  5904                           	clrf	(_gEsp8266State)^0100h
  5905  02E1  01CA               	incf	(_gEsp8266State)^0100h,f
  5906  02E2  0ACA               	goto	l681
  5907  02E3  2B9D               	line	100
  5908                           ;ESP8266.c: 100:             }
  5909                           	
  5910                           l668:	
  5911  02E4                     	line	101
  5912                           ;ESP8266.c: 101:             break;
  5913                           	goto	l681
  5914  02E4  2B9D               	line	102
  5915                           ;ESP8266.c: 102:         case eESPCommandSent:
  5916                           	
  5917                           l670:	
  5918  02E5                     	line	103
  5919                           	
  5920                           l4994:	
  5921  02E5                     ;ESP8266.c: 103:             wCounter=0;
  5922                           	movlb 2	; select bank2
  5923  02E5  0022               	clrf	(Esp8266Entrypoint@wCounter)^0100h
  5924  02E6  01C3               	line	104
  5925                           	
  5926                           l4996:	
  5927  02E7                     ;ESP8266.c: 104:             gEsp8266State = eESPWaitConfirmation;
  5928                           	movlw	low(04h)
  5929  02E7  3004               	movlb 1	; select bank1
  5930  02E8  0021               	movwf	(??_Esp8266Entrypoint+0)^080h+0
  5931  02E9  00AE               	movf	(??_Esp8266Entrypoint+0)^080h+0,w
  5932  02EA  082E               	movlb 2	; select bank2
  5933  02EB  0022               	movwf	(_gEsp8266State)^0100h
  5934  02EC  00CA               	line	105
  5935                           ;ESP8266.c: 105:             break;
  5936                           	goto	l681
  5937  02ED  2B9D               	line	106
  5938                           ;ESP8266.c: 106:         case eESPWaitConfirmation:
  5939                           	
  5940                           l671:	
  5941  02EE                     	line	107
  5942                           	
  5943                           l4998:	
  5944  02EE                     ;ESP8266.c: 107:             if(prevEusartNbByteReceived == EusartGetNbByteReceived() &&
                                  prevEusartNbByteReceived != 0 )
  5945                           	fcall	_EusartGetNbByteReceived
  5946  02EE  318A  2279  3182   	movlb 2	; select bank2
  5947  02F1  0022               	xorwf	(Esp8266Entrypoint@prevEusartNbByteReceived)^0100h,w
  5948  02F2  0644               	skipz
  5949  02F3  1D03               	goto	u3521
  5950  02F4  2AF6               	goto	u3520
  5951  02F5  2AF7               u3521:
  5952  02F6                     	goto	l5006
  5953  02F6  2B10               u3520:
  5954  02F7                     	
  5955                           l5000:	
  5956  02F7                     	movf	((Esp8266Entrypoint@prevEusartNbByteReceived)^0100h),w
  5957  02F7  0844               	btfsc	status,2
  5958  02F8  1903               	goto	u3531
  5959  02F9  2AFB               	goto	u3530
  5960  02FA  2AFC               u3531:
  5961  02FB                     	goto	l5006
  5962  02FB  2B10               u3530:
  5963  02FC                     	line	109
  5964                           	
  5965                           l5002:	
  5966  02FC                     ;ESP8266.c: 108:             {;ESP8266.c: 109:                 wCounter++;
  5967                           	movlw	low(01h)
  5968  02FC  3001               	movlb 1	; select bank1
  5969  02FD  0021               	movwf	(??_Esp8266Entrypoint+0)^080h+0
  5970  02FE  00AE               	movf	(??_Esp8266Entrypoint+0)^080h+0,w
  5971  02FF  082E               	movlb 2	; select bank2
  5972  0300  0022               	addwf	(Esp8266Entrypoint@wCounter)^0100h,f
  5973  0301  07C3               	line	110
  5974                           ;ESP8266.c: 110:                 if(wCounter == 10)
  5975                           		movlw	10
  5976  0302  300A               	xorwf	((Esp8266Entrypoint@wCounter)^0100h),w
  5977  0303  0643               	btfss	status,2
  5978  0304  1D03               	goto	u3541
  5979  0305  2B07               	goto	u3540
  5980  0306  2B08               u3541:
  5981  0307                     	goto	l681
  5982  0307  2B9D               u3540:
  5983  0308                     	line	112
  5984                           	
  5985                           l5004:	
  5986  0308                     ;ESP8266.c: 111:                 {;ESP8266.c: 112:                     gEsp8266State = e
                                 ESPCommandReceived;
  5987                           	movlw	low(05h)
  5988  0308  3005               	movlb 1	; select bank1
  5989  0309  0021               	movwf	(??_Esp8266Entrypoint+0)^080h+0
  5990  030A  00AE               	movf	(??_Esp8266Entrypoint+0)^080h+0,w
  5991  030B  082E               	movlb 2	; select bank2
  5992  030C  0022               	movwf	(_gEsp8266State)^0100h
  5993  030D  00CA               	goto	l681
  5994  030E  2B9D               	line	113
  5995                           ;ESP8266.c: 113:                 }
  5996                           	
  5997                           l673:	
  5998  030F                     	line	114
  5999                           ;ESP8266.c: 114:             }
  6000                           	goto	l681
  6001  030F  2B9D               	line	115
  6002                           ;ESP8266.c: 115:             else
  6003                           	
  6004                           l672:	
  6005  0310                     	line	117
  6006                           	
  6007                           l5006:	
  6008  0310                     ;ESP8266.c: 116:             {;ESP8266.c: 117:               prevEusartNbByteReceived = 
                                 EusartGetNbByteReceived();
  6009                           	fcall	_EusartGetNbByteReceived
  6010  0310  318A  2279  3182   	movlb 1	; select bank1
  6011  0313  0021               	movwf	(??_Esp8266Entrypoint+0)^080h+0
  6012  0314  00AE               	movf	(??_Esp8266Entrypoint+0)^080h+0,w
  6013  0315  082E               	movlb 2	; select bank2
  6014  0316  0022               	movwf	(Esp8266Entrypoint@prevEusartNbByteReceived)^0100h
  6015  0317  00C4               	line	118
  6016                           	
  6017                           l5008:	
  6018  0318                     ;ESP8266.c: 118:               wCounter = 0;
  6019                           	clrf	(Esp8266Entrypoint@wCounter)^0100h
  6020  0318  01C3               	goto	l681
  6021  0319  2B9D               	line	119
  6022                           ;ESP8266.c: 119:             }
  6023                           	
  6024                           l674:	
  6025  031A                     	line	120
  6026                           ;ESP8266.c: 120:             break;
  6027                           	goto	l681
  6028  031A  2B9D               	line	121
  6029                           ;ESP8266.c: 121:         case eESPCommandReceived:
  6030                           	
  6031                           l675:	
  6032  031B                     	line	122
  6033                           	
  6034                           l5010:	
  6035  031B                     ;ESP8266.c: 122:             if(EusartGetNbByteReceived())
  6036                           	fcall	_EusartGetNbByteReceived
  6037  031B  318A  2279  3182   	xorlw	low(0)&0ffh
  6038  031E  3A00               	skipnz
  6039  031F  1903               	goto	u3551
  6040  0320  2B22               	goto	u3550
  6041  0321  2B23               u3551:
  6042  0322                     	goto	l681
  6043  0322  2B9D               u3550:
  6044  0323                     	line	124
  6045                           	
  6046                           l5012:	
  6047  0323                     ;ESP8266.c: 123:             {;ESP8266.c: 124:                 EusartGetRxBuffer(wEspBuf
                                 fer,sizeof(wEspBuffer)-1,&wEusartNbByteReceived);
  6048                           	movlw	low(031h)
  6049  0323  3031               	movlb 1	; select bank1
  6050  0324  0021               	movwf	(??_Esp8266Entrypoint+0)^080h+0
  6051  0325  00AE               	movf	(??_Esp8266Entrypoint+0)^080h+0,w
  6052  0326  082E               	movlb 0	; select bank0
  6053  0327  0020               	movwf	(EusartGetRxBuffer@iDataSize)
  6054  0328  00BC               	movlw	(low(Esp8266Entrypoint@wEusartNbByteReceived|((0x0)<<8)))&0ffh
  6055  0329  30E6               	movlb 1	; select bank1
  6056  032A  0021               	movwf	(??_Esp8266Entrypoint+1)^080h+0
  6057  032B  00AF               	movf	(??_Esp8266Entrypoint+1)^080h+0,w
  6058  032C  082F               	movlb 0	; select bank0
  6059  032D  0020               	movwf	(EusartGetRxBuffer@oNbOfByteReceived)
  6060  032E  00BD               	movlw	(low(Esp8266Entrypoint@wEspBuffer|((0x0)<<8)))&0ffh
  6061  032F  30B0               	fcall	_EusartGetRxBuffer
  6062  0330  318C  24E1  3182   	line	125
  6063                           	
  6064                           l5014:	
  6065  0333                     ;ESP8266.c: 125:                 wEspBuffer[wEusartNbByteReceived] = 0;
  6066                           	movlb 1	; select bank1
  6067  0333  0021               	movf	(Esp8266Entrypoint@wEusartNbByteReceived)^080h,w
  6068  0334  0866               	addlw	low(Esp8266Entrypoint@wEspBuffer|((0x0)<<8))&0ffh
  6069  0335  3EB0               	movwf	fsr1l
  6070  0336  0086               	clrf fsr1h	
  6071  0337  0187               	
  6072                           	clrf	indf1
  6073  0338  0181               	line	126
  6074                           	
  6075                           l5016:	
  6076  0339                     ;ESP8266.c: 126:                 if( memcmp((char*)wEspBuffer+wEusartNbByteReceived-size
                                 of("\r\nOK\r\n")+1,"\r\nOK\r\n",sizeof("\r\nOK\r\n")) == 0)
  6077                           	movlw	low(((STR_11)|8000h))
  6078  0339  303C               	movlb 0	; select bank0
  6079  033A  0020               	movwf	(memcmp@vr)
  6080  033B  00B0               	movlw	high(((STR_11)|8000h))
  6081  033C  3090               	movwf	((memcmp@vr))+1
  6082  033D  00B1               	movlw	07h
  6083  033E  3007               	movwf	(memcmp@n)
  6084  033F  00B2               	movlw	0
  6085  0340  3000               	movwf	((memcmp@n))+1
  6086  0341  00B3               	movlb 1	; select bank1
  6087  0342  0021               	movf	(Esp8266Entrypoint@wEusartNbByteReceived)^080h,w
  6088  0343  0866               	addlw	-6
  6089  0344  3EFA               	addlw	low(Esp8266Entrypoint@wEspBuffer|((0x0)<<8))&0ffh
  6090  0345  3EB0               	fcall	_memcmp
  6091  0346  318D  256D  3182   	movlb 0	; select bank0
  6092  0349  0020               	movf	((0+(?_memcmp))),w
  6093  034A  0830               iorwf	((1+(?_memcmp))),w
  6094  034B  0431               	btfss	status,2
  6095  034C  1D03               	goto	u3561
  6096  034D  2B4F               	goto	u3560
  6097  034E  2B50               u3561:
  6098  034F                     	goto	l5026
  6099  034F  2B72               u3560:
  6100  0350                     	line	128
  6101                           	
  6102                           l5018:	
  6103  0350                     ;ESP8266.c: 127:                 {;ESP8266.c: 128:                     lcdWriteText("OK!
                                  :");
  6104                           	movlw	low(((STR_12)|8000h))
  6105  0350  304A               	movwf	(lcdWriteText@iText)
  6106  0351  00C1               	movlw	high(((STR_12)|8000h))
  6107  0352  3090               	movwf	((lcdWriteText@iText))+1
  6108  0353  00C2               	fcall	_lcdWriteText
  6109  0354  318C  2438  3182   	line	129
  6110                           	
  6111                           l5020:	
  6112  0357                     ;ESP8266.c: 129:                     lcdWriteText(uint8_tToa(wReturnNumber,wEusartNbByte
                                 Received));
  6113                           	movlb 1	; select bank1
  6114  0357  0021               	movf	(Esp8266Entrypoint@wEusartNbByteReceived)^080h,w
  6115  0358  0866               	movwf	(??_Esp8266Entrypoint+0)^080h+0
  6116  0359  00AE               	movf	(??_Esp8266Entrypoint+0)^080h+0,w
  6117  035A  082E               	movlb 0	; select bank0
  6118  035B  0020               	movwf	(uint8_tToa@iNumber)
  6119  035C  00B9               	movlw	(low(Esp8266Entrypoint@wReturnNumber|((0x0)<<8)))&0ffh
  6120  035D  30E2               	fcall	_uint8_tToa
  6121  035E  3185  258F  3182   	movlb 0	; select bank0
  6122  0361  0020               	movwf	(lcdWriteText@iText)
  6123  0362  00C1               	movlw	0x0
  6124  0363  3000               
  6125                           	movwf	(lcdWriteText@iText+1)
  6126  0364  00C2               	fcall	_lcdWriteText
  6127  0365  318C  2438  3182   	line	130
  6128                           	
  6129                           l5022:	
  6130  0368                     ;ESP8266.c: 130:                     gEsp8266State = eESPIdle;
  6131                           	movlb 2	; select bank2
  6132  0368  0022               	clrf	(_gEsp8266State)^0100h
  6133  0369  01CA               	incf	(_gEsp8266State)^0100h,f
  6134  036A  0ACA               	line	131
  6135                           	
  6136                           l5024:	
  6137  036B                     ;ESP8266.c: 131:                     gESPCommand = eNothing;
  6138                           	movlw	low(03h)
  6139  036B  3003               	movlb 1	; select bank1
  6140  036C  0021               	movwf	(??_Esp8266Entrypoint+0)^080h+0
  6141  036D  00AE               	movf	(??_Esp8266Entrypoint+0)^080h+0,w
  6142  036E  082E               	movlb 2	; select bank2
  6143  036F  0022               	movwf	(_gESPCommand)^0100h
  6144  0370  00C9               	line	133
  6145                           ;ESP8266.c: 133:                 }
  6146                           	goto	l681
  6147  0371  2B9D               	line	134
  6148                           ;ESP8266.c: 134:                 else
  6149                           	
  6150                           l677:	
  6151  0372                     	line	136
  6152                           	
  6153                           l5026:	
  6154  0372                     ;ESP8266.c: 135:                 {;ESP8266.c: 136:                     lcdWriteText("Ret
                                 rying");
  6155                           	movlw	low(((STR_13)|8000h))
  6156  0372  3033               	movlb 0	; select bank0
  6157  0373  0020               	movwf	(lcdWriteText@iText)
  6158  0374  00C1               	movlw	high(((STR_13)|8000h))
  6159  0375  3090               	movwf	((lcdWriteText@iText))+1
  6160  0376  00C2               	fcall	_lcdWriteText
  6161  0377  318C  2438  3182   	line	137
  6162                           	
  6163                           l5028:	
  6164  037A                     ;ESP8266.c: 137:                     gEsp8266State = eSettingUpCommand;
  6165                           	movlb 2	; select bank2
  6166  037A  0022               	clrf	(_gEsp8266State)^0100h
  6167  037B  01CA               	goto	l681
  6168  037C  2B9D               	line	138
  6169                           ;ESP8266.c: 138:                 }
  6170                           	
  6171                           l678:	
  6172  037D                     	goto	l681
  6173  037D  2B9D               	line	141
  6174                           ;ESP8266.c: 141:             }
  6175                           	
  6176                           l676:	
  6177  037E                     	line	143
  6178                           ;ESP8266.c: 143:             break;
  6179                           	goto	l681
  6180  037E  2B9D               	line	145
  6181                           ;ESP8266.c: 145:         case eESPIdle:
  6182                           	
  6183                           l679:	
  6184  037F                     	goto	l681
  6185  037F  2B9D               	line	147
  6186                           ;ESP8266.c: 147:         default:
  6187                           	
  6188                           l680:	
  6189  0380                     	line	148
  6190                           ;ESP8266.c: 148:             break;
  6191                           	goto	l681
  6192  0380  2B9D               	line	149
  6193                           	
  6194                           l5030:	
  6195  0381                     ;ESP8266.c: 149:     }
  6196                           	goto	l681
  6197  0381  2B9D               	
  6198                           l658:	
  6199  0382                     	
  6200                           l5032:	
  6201  0382                     	movlb 2	; select bank2
  6202  0382  0022               	movf	(_gEsp8266State)^0100h,w
  6203  0383  084A               	movlb 1	; select bank1
  6204  0384  0021               	movwf	(??_Esp8266Entrypoint+0)^080h+0
  6205  0385  00AE               	clrf	(??_Esp8266Entrypoint+0)^080h+0+1
  6206  0386  01AF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6207                           ; Switch size 1, requested type "space"
  6208                           ; Number of cases is 1, Range of values is 0 to 0
  6209                           ; switch strategies available:
  6210                           ; Name         Instructions Cycles
  6211                           ; simple_byte            4     3 (average)
  6212                           ; direct_byte            8     6 (fixed)
  6213                           ; jumptable            260     6 (fixed)
  6214                           ;	Chosen strategy is simple_byte
  6215                           
  6216                           	movf 1+(??_Esp8266Entrypoint+0)^080h+0,w
  6217  0387  082F               	opt asmopt_push
  6218                           	opt asmopt_off
  6219                           	xorlw	0^0	; case 0
  6220  0388  3A00               	skipnz
  6221  0389  1903               	goto	l5736
  6222  038A  2B8C               	goto	l681
  6223  038B  2B9D               	opt asmopt_pop
  6224                           	
  6225                           l5736:	
  6226  038C                     ; Switch size 1, requested type "space"
  6227                           ; Number of cases is 5, Range of values is 0 to 5
  6228                           ; switch strategies available:
  6229                           ; Name         Instructions Cycles
  6230                           ; simple_byte           16     9 (average)
  6231                           ; direct_byte           18     6 (fixed)
  6232                           ; jumptable            260     6 (fixed)
  6233                           ;	Chosen strategy is simple_byte
  6234                           
  6235                           	movf 0+(??_Esp8266Entrypoint+0)^080h+0,w
  6236  038C  082E               	opt asmopt_push
  6237                           	opt asmopt_off
  6238                           	xorlw	0^0	; case 0
  6239  038D  3A00               	skipnz
  6240  038E  1903               	goto	l4988
  6241  038F  2ABC               	xorlw	1^0	; case 1
  6242  0390  3A01               	skipnz
  6243  0391  1903               	goto	l681
  6244  0392  2B9D               	xorlw	3^1	; case 3
  6245  0393  3A02               	skipnz
  6246  0394  1903               	goto	l4994
  6247  0395  2AE5               	xorlw	4^3	; case 4
  6248  0396  3A07               	skipnz
  6249  0397  1903               	goto	l4998
  6250  0398  2AEE               	xorlw	5^4	; case 5
  6251  0399  3A01               	skipnz
  6252  039A  1903               	goto	l5010
  6253  039B  2B1B               	goto	l681
  6254  039C  2B9D               	opt asmopt_pop
  6255                           
  6256                           	
  6257                           l669:	
  6258  039D                     	line	150
  6259                           	
  6260                           l681:	
  6261  039D                     	return
  6262  039D  0008               	opt stack 0
  6263                           GLOBAL	__end_of_Esp8266Entrypoint
  6264                           	__end_of_Esp8266Entrypoint:
  6265  039E                     	signat	_Esp8266Entrypoint,89
  6266                           	global	_uint8_tToa
  6267                           
  6268 ;; *************** function _uint8_tToa *****************
  6269 ;; Defined at:
  6270 ;;		line 20 in file "GeneralFunction.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;  wText           1    wreg     PTR unsigned char 
  6273 ;;		 -> Esp8266Entrypoint@wReturnNumber(4), 
  6274 ;;  iNumber         1   25[BANK0 ] unsigned char 
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;  wText           1   32[BANK0 ] PTR unsigned char 
  6277 ;;		 -> Esp8266Entrypoint@wReturnNumber(4), 
  6278 ;;  wUnit           1   31[BANK0 ] unsigned char 
  6279 ;;  wTen            1   30[BANK0 ] unsigned char 
  6280 ;;  wHundred        1   29[BANK0 ] unsigned char 
  6281 ;; Return value:  Size  Location     Type
  6282 ;;                  1    wreg      PTR unsigned char 
  6283 ;; Registers used:
  6284 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6285 ;; Tracked objects:
  6286 ;;		On entry : 0/0
  6287 ;;		On exit  : 0/0
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6290 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6291 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6292 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  6293 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
  6294 ;;Total ram usage:        8 bytes
  6295 ;; Hardware stack levels used:    1
  6296 ;; Hardware stack levels required when called:    7
  6297 ;; This function calls:
  6298 ;;		___awdiv
  6299 ;;		___awmod
  6300 ;; This function is called by:
  6301 ;;		_Esp8266Entrypoint
  6302 ;; This function uses a non-reentrant model
  6303 ;;
  6304                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  6305                           	file	"GeneralFunction.c"
  6306                           	line	20
  6307                           global __ptext13
  6308                           __ptext13:	;psect for function _uint8_tToa
  6309  058F                     psect	text13
  6310                           	file	"GeneralFunction.c"
  6311                           	line	20
  6312                           	global	__size_of_uint8_tToa
  6313                           	__size_of_uint8_tToa	equ	__end_of_uint8_tToa-_uint8_tToa
  6314  00A2                     	
  6315                           _uint8_tToa:	
  6316  058F                     ;incstack = 0
  6317                           	opt	stack 7
  6318                           ; Regs used in _uint8_tToa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6319                           ;uint8_tToa@wText stored from wreg
  6320                           	movlb 0	; select bank0
  6321  058F  0020               	movwf	(uint8_tToa@wText)
  6322  0590  00C0               	line	25
  6323                           	
  6324                           l4704:	
  6325  0591                     ;GeneralFunction.c: 20: char* uint8_tToa(char* wText, uint8_t iNumber);GeneralFunction.c
                                 : 21: {;GeneralFunction.c: 22:     uint8_t wHundred;;GeneralFunction.c: 23:     uint8_t 
                                 wTen;;GeneralFunction.c: 24:     uint8_t wUnit;;GeneralFunction.c: 25:     wUnit = iNumb
                                 er % 10;
  6326                           	movlw	0Ah
  6327  0591  300A               	movwf	(___awmod@divisor)
  6328  0592  00B0               	movlw	0
  6329  0593  3000               	movwf	((___awmod@divisor))+1
  6330  0594  00B1               	movf	(uint8_tToa@iNumber),w
  6331  0595  0839               	movwf	(??_uint8_tToa+0)+0
  6332  0596  00BA               	clrf	(??_uint8_tToa+0)+0+1
  6333  0597  01BB               	movf	0+(??_uint8_tToa+0)+0,w
  6334  0598  083A               	movwf	(___awmod@dividend)
  6335  0599  00B2               	movf	1+(??_uint8_tToa+0)+0,w
  6336  059A  083B               	movwf	(___awmod@dividend+1)
  6337  059B  00B3               	fcall	___awmod
  6338  059C  318E  2619  3185   	movlb 0	; select bank0
  6339  059F  0020               	movf	(0+(?___awmod)),w
  6340  05A0  0830               	movwf	(??_uint8_tToa+2)+0
  6341  05A1  00BC               	movf	(??_uint8_tToa+2)+0,w
  6342  05A2  083C               	movwf	(uint8_tToa@wUnit)
  6343  05A3  00BF               	line	26
  6344                           ;GeneralFunction.c: 26:     iNumber = iNumber / 10;
  6345                           	movlw	0Ah
  6346  05A4  300A               	movwf	(___awdiv@divisor)
  6347  05A5  00B0               	movlw	0
  6348  05A6  3000               	movwf	((___awdiv@divisor))+1
  6349  05A7  00B1               	movf	(uint8_tToa@iNumber),w
  6350  05A8  0839               	movwf	(??_uint8_tToa+0)+0
  6351  05A9  00BA               	clrf	(??_uint8_tToa+0)+0+1
  6352  05AA  01BB               	movf	0+(??_uint8_tToa+0)+0,w
  6353  05AB  083A               	movwf	(___awdiv@dividend)
  6354  05AC  00B2               	movf	1+(??_uint8_tToa+0)+0,w
  6355  05AD  083B               	movwf	(___awdiv@dividend+1)
  6356  05AE  00B3               	fcall	___awdiv
  6357  05AF  3187  2768  3185   	movlb 0	; select bank0
  6358  05B2  0020               	movf	(0+(?___awdiv)),w
  6359  05B3  0830               	movwf	(??_uint8_tToa+2)+0
  6360  05B4  00BC               	movf	(??_uint8_tToa+2)+0,w
  6361  05B5  083C               	movwf	(uint8_tToa@iNumber)
  6362  05B6  00B9               	line	27
  6363                           ;GeneralFunction.c: 27:     wTen = iNumber % 10;
  6364                           	movlw	0Ah
  6365  05B7  300A               	movwf	(___awmod@divisor)
  6366  05B8  00B0               	movlw	0
  6367  05B9  3000               	movwf	((___awmod@divisor))+1
  6368  05BA  00B1               	movf	(uint8_tToa@iNumber),w
  6369  05BB  0839               	movwf	(??_uint8_tToa+0)+0
  6370  05BC  00BA               	clrf	(??_uint8_tToa+0)+0+1
  6371  05BD  01BB               	movf	0+(??_uint8_tToa+0)+0,w
  6372  05BE  083A               	movwf	(___awmod@dividend)
  6373  05BF  00B2               	movf	1+(??_uint8_tToa+0)+0,w
  6374  05C0  083B               	movwf	(___awmod@dividend+1)
  6375  05C1  00B3               	fcall	___awmod
  6376  05C2  318E  2619  3185   	movlb 0	; select bank0
  6377  05C5  0020               	movf	(0+(?___awmod)),w
  6378  05C6  0830               	movwf	(??_uint8_tToa+2)+0
  6379  05C7  00BC               	movf	(??_uint8_tToa+2)+0,w
  6380  05C8  083C               	movwf	(uint8_tToa@wTen)
  6381  05C9  00BE               	line	28
  6382                           ;GeneralFunction.c: 28:     iNumber = iNumber / 10;
  6383                           	movlw	0Ah
  6384  05CA  300A               	movwf	(___awdiv@divisor)
  6385  05CB  00B0               	movlw	0
  6386  05CC  3000               	movwf	((___awdiv@divisor))+1
  6387  05CD  00B1               	movf	(uint8_tToa@iNumber),w
  6388  05CE  0839               	movwf	(??_uint8_tToa+0)+0
  6389  05CF  00BA               	clrf	(??_uint8_tToa+0)+0+1
  6390  05D0  01BB               	movf	0+(??_uint8_tToa+0)+0,w
  6391  05D1  083A               	movwf	(___awdiv@dividend)
  6392  05D2  00B2               	movf	1+(??_uint8_tToa+0)+0,w
  6393  05D3  083B               	movwf	(___awdiv@dividend+1)
  6394  05D4  00B3               	fcall	___awdiv
  6395  05D5  3187  2768  3185   	movlb 0	; select bank0
  6396  05D8  0020               	movf	(0+(?___awdiv)),w
  6397  05D9  0830               	movwf	(??_uint8_tToa+2)+0
  6398  05DA  00BC               	movf	(??_uint8_tToa+2)+0,w
  6399  05DB  083C               	movwf	(uint8_tToa@iNumber)
  6400  05DC  00B9               	line	29
  6401                           	
  6402                           l4706:	
  6403  05DD                     ;GeneralFunction.c: 29:     wHundred = iNumber;
  6404                           	movf	(uint8_tToa@iNumber),w
  6405  05DD  0839               	movwf	(??_uint8_tToa+0)+0
  6406  05DE  00BA               	movf	(??_uint8_tToa+0)+0,w
  6407  05DF  083A               	movwf	(uint8_tToa@wHundred)
  6408  05E0  00BD               	line	32
  6409                           	
  6410                           l4708:	
  6411  05E1                     ;GeneralFunction.c: 32:     if(wHundred != 0)
  6412                           	movf	((uint8_tToa@wHundred)),w
  6413  05E1  083D               	btfsc	status,2
  6414  05E2  1903               	goto	u3271
  6415  05E3  2DE5               	goto	u3270
  6416  05E4  2DE6               u3271:
  6417  05E5                     	goto	l4712
  6418  05E5  2E05               u3270:
  6419  05E6                     	line	34
  6420                           	
  6421                           l4710:	
  6422  05E6                     ;GeneralFunction.c: 33:     {;GeneralFunction.c: 34:         wText[0] = '0' + wHundred;

  6423                           	movf	(uint8_tToa@wHundred),w
  6424  05E6  083D               	addlw	030h
  6425  05E7  3E30               	movwf	(??_uint8_tToa+0)+0
  6426  05E8  00BA               	movf	(uint8_tToa@wText),w
  6427  05E9  0840               	movwf	fsr1l
  6428  05EA  0086               	clrf fsr1h	
  6429  05EB  0187               	
  6430                           	movf	(??_uint8_tToa+0)+0,w
  6431  05EC  083A               	movwf	indf1
  6432  05ED  0081               	line	35
  6433                           ;GeneralFunction.c: 35:         wText[1] = '0' + wTen;
  6434                           	movf	(uint8_tToa@wTen),w
  6435  05EE  083E               	addlw	030h
  6436  05EF  3E30               	movwf	(??_uint8_tToa+0)+0
  6437  05F0  00BA               	incf	(uint8_tToa@wText),w
  6438  05F1  0A40               	movwf	fsr1l
  6439  05F2  0086               	clrf fsr1h	
  6440  05F3  0187               	
  6441                           	movf	(??_uint8_tToa+0)+0,w
  6442  05F4  083A               	movwf	indf1
  6443  05F5  0081               	line	36
  6444                           ;GeneralFunction.c: 36:         wText[2] = '0' + wUnit;
  6445                           	movf	(uint8_tToa@wUnit),w
  6446  05F6  083F               	addlw	030h
  6447  05F7  3E30               	movwf	(??_uint8_tToa+0)+0
  6448  05F8  00BA               	movf	(uint8_tToa@wText),w
  6449  05F9  0840               	addlw	02h
  6450  05FA  3E02               	movwf	fsr1l
  6451  05FB  0086               	clrf fsr1h	
  6452  05FC  0187               	
  6453                           	movf	(??_uint8_tToa+0)+0,w
  6454  05FD  083A               	movwf	indf1
  6455  05FE  0081               	line	37
  6456                           ;GeneralFunction.c: 37:         wText[3] = 0;
  6457                           	movf	(uint8_tToa@wText),w
  6458  05FF  0840               	addlw	03h
  6459  0600  3E03               	movwf	fsr1l
  6460  0601  0086               	clrf fsr1h	
  6461  0602  0187               	
  6462                           	clrf	indf1
  6463  0603  0181               	line	38
  6464                           ;GeneralFunction.c: 38:     }
  6465                           	goto	l4720
  6466  0604  2E2E               	line	39
  6467                           ;GeneralFunction.c: 39:     else
  6468                           	
  6469                           l583:	
  6470  0605                     	line	41
  6471                           	
  6472                           l4712:	
  6473  0605                     ;GeneralFunction.c: 40:     {;GeneralFunction.c: 41:         if(wTen !=0)
  6474                           	movf	((uint8_tToa@wTen)),w
  6475  0605  083E               	btfsc	status,2
  6476  0606  1903               	goto	u3281
  6477  0607  2E09               	goto	u3280
  6478  0608  2E0A               u3281:
  6479  0609                     	goto	l4716
  6480  0609  2E20               u3280:
  6481  060A                     	line	43
  6482                           	
  6483                           l4714:	
  6484  060A                     ;GeneralFunction.c: 42:         {;GeneralFunction.c: 43:             wText[0] = '0' + wT
                                 en;
  6485                           	movf	(uint8_tToa@wTen),w
  6486  060A  083E               	addlw	030h
  6487  060B  3E30               	movwf	(??_uint8_tToa+0)+0
  6488  060C  00BA               	movf	(uint8_tToa@wText),w
  6489  060D  0840               	movwf	fsr1l
  6490  060E  0086               	clrf fsr1h	
  6491  060F  0187               	
  6492                           	movf	(??_uint8_tToa+0)+0,w
  6493  0610  083A               	movwf	indf1
  6494  0611  0081               	line	44
  6495                           ;GeneralFunction.c: 44:             wText[1] = '0' + wUnit;
  6496                           	movf	(uint8_tToa@wUnit),w
  6497  0612  083F               	addlw	030h
  6498  0613  3E30               	movwf	(??_uint8_tToa+0)+0
  6499  0614  00BA               	incf	(uint8_tToa@wText),w
  6500  0615  0A40               	movwf	fsr1l
  6501  0616  0086               	clrf fsr1h	
  6502  0617  0187               	
  6503                           	movf	(??_uint8_tToa+0)+0,w
  6504  0618  083A               	movwf	indf1
  6505  0619  0081               	line	45
  6506                           ;GeneralFunction.c: 45:             wText[2] = 0;
  6507                           	movf	(uint8_tToa@wText),w
  6508  061A  0840               	addlw	02h
  6509  061B  3E02               	movwf	fsr1l
  6510  061C  0086               	clrf fsr1h	
  6511  061D  0187               	
  6512                           	clrf	indf1
  6513  061E  0181               	line	46
  6514                           ;GeneralFunction.c: 46:         }
  6515                           	goto	l4720
  6516  061F  2E2E               	line	47
  6517                           ;GeneralFunction.c: 47:         else
  6518                           	
  6519                           l585:	
  6520  0620                     	line	49
  6521                           	
  6522                           l4716:	
  6523  0620                     ;GeneralFunction.c: 48:         {;GeneralFunction.c: 49:             wText[0] = '0' + wU
                                 nit;
  6524                           	movf	(uint8_tToa@wUnit),w
  6525  0620  083F               	addlw	030h
  6526  0621  3E30               	movwf	(??_uint8_tToa+0)+0
  6527  0622  00BA               	movf	(uint8_tToa@wText),w
  6528  0623  0840               	movwf	fsr1l
  6529  0624  0086               	clrf fsr1h	
  6530  0625  0187               	
  6531                           	movf	(??_uint8_tToa+0)+0,w
  6532  0626  083A               	movwf	indf1
  6533  0627  0081               	line	50
  6534                           	
  6535                           l4718:	
  6536  0628                     ;GeneralFunction.c: 50:             wText[1] = 0;
  6537                           	incf	(uint8_tToa@wText),w
  6538  0628  0A40               	movwf	fsr1l
  6539  0629  0086               	clrf fsr1h	
  6540  062A  0187               	
  6541                           	clrf	indf1
  6542  062B  0181               	goto	l4720
  6543  062C  2E2E               	line	51
  6544                           ;GeneralFunction.c: 51:         }
  6545                           	
  6546                           l586:	
  6547  062D                     	goto	l4720
  6548  062D  2E2E               	line	52
  6549                           ;GeneralFunction.c: 52:     }
  6550                           	
  6551                           l584:	
  6552  062E                     	line	53
  6553                           	
  6554                           l4720:	
  6555  062E                     ;GeneralFunction.c: 53:     return wText;
  6556                           	movf	(uint8_tToa@wText),w
  6557  062E  0840               	goto	l587
  6558  062F  2E30               	
  6559                           l4722:	
  6560  0630                     	line	56
  6561                           	
  6562                           l587:	
  6563  0630                     	return
  6564  0630  0008               	opt stack 0
  6565                           GLOBAL	__end_of_uint8_tToa
  6566                           	__end_of_uint8_tToa:
  6567  0631                     	signat	_uint8_tToa,8313
  6568                           	global	_memcmp
  6569                           
  6570 ;; *************** function _memcmp *****************
  6571 ;; Defined at:
  6572 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcmp.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  vl              1    wreg     PTR const void 
  6575 ;;		 -> Esp8266Entrypoint@wEspBuffer(50), 
  6576 ;;  vr              2   16[BANK0 ] PTR const void 
  6577 ;;		 -> STR_11(7), 
  6578 ;;  n               2   18[BANK0 ] unsigned int 
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;  vl              1   22[BANK0 ] PTR const void 
  6581 ;;		 -> Esp8266Entrypoint@wEspBuffer(50), 
  6582 ;;  r               2   23[BANK0 ] PTR const unsigned char 
  6583 ;;		 -> STR_11(7), 
  6584 ;;  l               1   25[BANK0 ] PTR const unsigned char 
  6585 ;;		 -> Esp8266Entrypoint@wEspBuffer(50), 
  6586 ;; Return value:  Size  Location     Type
  6587 ;;                  2   16[BANK0 ] int 
  6588 ;; Registers used:
  6589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6595 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6596 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6597 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6598 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  6599 ;;Total ram usage:       10 bytes
  6600 ;; Hardware stack levels used:    1
  6601 ;; Hardware stack levels required when called:    6
  6602 ;; This function calls:
  6603 ;;		Nothing
  6604 ;; This function is called by:
  6605 ;;		_Esp8266Entrypoint
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           psect	text14,local,class=CODE,delta=2,merge=1,group=2
  6609                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcmp.c"
  6610                           	line	3
  6611                           global __ptext14
  6612                           __ptext14:	;psect for function _memcmp
  6613  0D6D                     psect	text14
  6614                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcmp.c"
  6615                           	line	3
  6616                           	global	__size_of_memcmp
  6617                           	__size_of_memcmp	equ	__end_of_memcmp-_memcmp
  6618  0050                     	
  6619                           _memcmp:	
  6620  0D6D                     ;incstack = 0
  6621                           	opt	stack 8
  6622                           ; Regs used in _memcmp: [wreg-fsr1h+status,2+status,0+pclath]
  6623                           ;memcmp@vl stored from wreg
  6624                           	movlb 0	; select bank0
  6625  0D6D  0020               	movwf	(memcmp@vl)
  6626  0D6E  00B6               	line	5
  6627                           	
  6628                           l4780:	
  6629  0D6F                     	movf	(memcmp@vl),w
  6630  0D6F  0836               	movwf	(??_memcmp+0)+0
  6631  0D70  00B4               	movf	(??_memcmp+0)+0,w
  6632  0D71  0834               	movwf	(memcmp@l)
  6633  0D72  00B9               	movf	(memcmp@vr+1),w
  6634  0D73  0831               	movwf	(memcmp@r+1)
  6635  0D74  00B8               	movf	(memcmp@vr),w
  6636  0D75  0830               	movwf	(memcmp@r)
  6637  0D76  00B7               	line	6
  6638                           	goto	l1182
  6639  0D77  2D84               	
  6640                           l1183:	
  6641  0D78                     	
  6642                           l4782:	
  6643  0D78                     	movlw	01h
  6644  0D78  3001               	subwf	(memcmp@n),f
  6645  0D79  02B2               	movlw	0
  6646  0D7A  3000               	subwfb	(memcmp@n+1),f
  6647  0D7B  3BB3               	
  6648                           l4784:	
  6649  0D7C                     	movlw	low(01h)
  6650  0D7C  3001               	movwf	(??_memcmp+0)+0
  6651  0D7D  00B4               	movf	(??_memcmp+0)+0,w
  6652  0D7E  0834               	addwf	(memcmp@l),f
  6653  0D7F  07B9               	
  6654                           l4786:	
  6655  0D80                     	movlw	01h
  6656  0D80  3001               	addwf	(memcmp@r),f
  6657  0D81  07B7               	movlw	0
  6658  0D82  3000               	addwfc	(memcmp@r+1),f
  6659  0D83  3DB8               	
  6660                           l1182:	
  6661  0D84                     	movf	((memcmp@n)),w
  6662  0D84  0832               iorwf	((memcmp@n+1)),w
  6663  0D85  0433               	btfsc	status,2
  6664  0D86  1903               	goto	u3341
  6665  0D87  2D89               	goto	u3340
  6666  0D88  2D8A               u3341:
  6667  0D89                     	goto	l4790
  6668  0D89  2D9B               u3340:
  6669  0D8A                     	
  6670                           l4788:	
  6671  0D8A                     	movf	(memcmp@r),w
  6672  0D8A  0837               	movwf	fsr0l
  6673  0D8B  0084               	movf	((memcmp@r+1)),w
  6674  0D8C  0838               	movwf	fsr0h
  6675  0D8D  0085               	movf	indf0,w ;code access
  6676  0D8E  0800               	movwf	(??_memcmp+0)+0
  6677  0D8F  00B4               	movf	(memcmp@l),w
  6678  0D90  0839               	movwf	fsr1l
  6679  0D91  0086               	clrf fsr1h	
  6680  0D92  0187               	
  6681                           	movf	indf1,w
  6682  0D93  0801               	xorwf	(??_memcmp+0)+0,w
  6683  0D94  0634               	skipnz
  6684  0D95  1903               	goto	u3351
  6685  0D96  2D98               	goto	u3350
  6686  0D97  2D99               u3351:
  6687  0D98                     	goto	l4782
  6688  0D98  2D78               u3350:
  6689  0D99                     	goto	l4790
  6690  0D99  2D9B               	
  6691                           l1185:	
  6692  0D9A                     	goto	l4790
  6693  0D9A  2D9B               	
  6694                           l1186:	
  6695  0D9B                     	line	7
  6696                           	
  6697                           l4790:	
  6698  0D9B                     	movf	((memcmp@n)),w
  6699  0D9B  0832               iorwf	((memcmp@n+1)),w
  6700  0D9C  0433               	btfss	status,2
  6701  0D9D  1D03               	goto	u3361
  6702  0D9E  2DA0               	goto	u3360
  6703  0D9F  2DA1               u3361:
  6704  0DA0                     	goto	l4794
  6705  0DA0  2DA4               u3360:
  6706  0DA1                     	
  6707                           l4792:	
  6708  0DA1                     	clrf	(?_memcmp)
  6709  0DA1  01B0               	clrf	(?_memcmp+1)
  6710  0DA2  01B1               	goto	l1191
  6711  0DA3  2DBC               	
  6712                           l1188:	
  6713  0DA4                     	
  6714                           l4794:	
  6715  0DA4                     	movf	(memcmp@r),w
  6716  0DA4  0837               	movwf	fsr0l
  6717  0DA5  0084               	movf	((memcmp@r+1)),w
  6718  0DA6  0838               	movwf	fsr0h
  6719  0DA7  0085               	movf	indf0,w ;code access
  6720  0DA8  0800               	movwf	(??_memcmp+0)+0
  6721  0DA9  00B4               	clrf	(??_memcmp+0)+0+1
  6722  0DAA  01B5               	comf	(??_memcmp+0)+0,f
  6723  0DAB  09B4               	comf	(??_memcmp+0)+1,f
  6724  0DAC  09B5               	incf	(??_memcmp+0)+0,f
  6725  0DAD  0AB4               	skipnz
  6726  0DAE  1903               	incf	(??_memcmp+0)+1,f
  6727  0DAF  0AB5               	movf	(memcmp@l),w
  6728  0DB0  0839               	movwf	fsr1l
  6729  0DB1  0086               	clrf fsr1h	
  6730  0DB2  0187               	
  6731                           	movf	indf1,w
  6732  0DB3  0801               	addwf	0+(??_memcmp+0)+0,w
  6733  0DB4  0734               	movwf	(?_memcmp)
  6734  0DB5  00B0               	movf	1+(??_memcmp+0)+0,w
  6735  0DB6  0835               	skipnc
  6736  0DB7  1803               	incf	1+(??_memcmp+0)+0,w
  6737  0DB8  0A35               	movwf	((?_memcmp))+1
  6738  0DB9  00B1               	goto	l1191
  6739  0DBA  2DBC               	
  6740                           l1190:	
  6741  0DBB                     	goto	l1191
  6742  0DBB  2DBC               	
  6743                           l4796:	
  6744  0DBC                     	line	8
  6745                           	
  6746                           l1191:	
  6747  0DBC                     	return
  6748  0DBC  0008               	opt stack 0
  6749                           GLOBAL	__end_of_memcmp
  6750                           	__end_of_memcmp:
  6751  0DBD                     	signat	_memcmp,12410
  6752                           	global	_lcdWriteText
  6753                           
  6754 ;; *************** function _lcdWriteText *****************
  6755 ;; Defined at:
  6756 ;;		line 63 in file "LCD_hd44780u_qy_2004a.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;  iText           2   33[BANK0 ] PTR unsigned char 
  6759 ;;		 -> STR_13(9), Esp8266Entrypoint@wReturnNumber(4), STR_12(6), myint@wText_460(3), 
  6760 ;;		 -> myint@wText(3), 
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;  wCharReading    1    0[BANK1 ] unsigned char 
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  1    wreg      void 
  6765 ;; Registers used:
  6766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6772 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6773 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  6774 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  6775 ;;      Totals:         0       5       1       0       0       0       0       0       0       0       0       0       
       0       0
  6776 ;;Total ram usage:        6 bytes
  6777 ;; Hardware stack levels used:    1
  6778 ;; Hardware stack levels required when called:   10
  6779 ;; This function calls:
  6780 ;;		_writeTxtChk
  6781 ;; This function is called by:
  6782 ;;		_Esp8266Entrypoint
  6783 ;;		_PrintLog
  6784 ;; This function uses a non-reentrant model
  6785 ;;
  6786                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  6787                           	file	"LCD_hd44780u_qy_2004a.c"
  6788                           	line	63
  6789                           global __ptext15
  6790                           __ptext15:	;psect for function _lcdWriteText
  6791  0C38                     psect	text15
  6792                           	file	"LCD_hd44780u_qy_2004a.c"
  6793                           	line	63
  6794                           	global	__size_of_lcdWriteText
  6795                           	__size_of_lcdWriteText	equ	__end_of_lcdWriteText-_lcdWriteText
  6796  0031                     	
  6797                           _lcdWriteText:	
  6798  0C38                     ;incstack = 0
  6799                           	opt	stack 4
  6800                           ; Regs used in _lcdWriteText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6801                           	line	65
  6802                           	
  6803                           l4674:	
  6804  0C38                     ;LCD_hd44780u_qy_2004a.c: 63: void lcdWriteText(char *iText);LCD_hd44780u_qy_2004a.c: 64
                                 :  {;LCD_hd44780u_qy_2004a.c: 65:   unsigned char wCharReadingPos = 0;
  6805                           	movlb 1	; select bank1
  6806  0C38  0021               	clrf	(lcdWriteText@wCharReadingPos)^080h
  6807  0C39  01A0               	line	66
  6808                           ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
  6809                           	goto	l4680
  6810  0C3A  2C54               	
  6811                           l231:	
  6812  0C3B                     	line	68
  6813                           	
  6814                           l4676:	
  6815  0C3B                     ;LCD_hd44780u_qy_2004a.c: 67:   {;LCD_hd44780u_qy_2004a.c: 68:     writeTxtChk(iText[wCh
                                 arReadingPos]);
  6816                           	movlb 0	; select bank0
  6817  0C3B  0020               	movf	(lcdWriteText@iText+1),w
  6818  0C3C  0842               	movwf	(??_lcdWriteText+0)+0+1
  6819  0C3D  00C4               	movf	(lcdWriteText@iText),w
  6820  0C3E  0841               	movwf	(??_lcdWriteText+0)+0
  6821  0C3F  00C3               	movlb 1	; select bank1
  6822  0C40  0021               	movf	(lcdWriteText@wCharReadingPos)^080h,w
  6823  0C41  0820               	movlb 0	; select bank0
  6824  0C42  0020               	addwf	(??_lcdWriteText+0)+0,w
  6825  0C43  0743               	movwf	fsr0l
  6826  0C44  0084               	movf	(??_lcdWriteText+0)+1,w
  6827  0C45  0844               	skipnc
  6828  0C46  1803               	incf	(??_lcdWriteText+0)+1,w
  6829  0C47  0A44               	movwf	fsr0h
  6830  0C48  0085               
  6831                           	movf	indf0,w ;code access
  6832  0C49  0800               	fcall	_writeTxtChk
  6833  0C4A  3186  2631  318C   	line	69
  6834                           	
  6835                           l4678:	
  6836  0C4D                     ;LCD_hd44780u_qy_2004a.c: 69:     wCharReadingPos++;
  6837                           	movlw	low(01h)
  6838  0C4D  3001               	movlb 0	; select bank0
  6839  0C4E  0020               	movwf	(??_lcdWriteText+0)+0
  6840  0C4F  00C3               	movf	(??_lcdWriteText+0)+0,w
  6841  0C50  0843               	movlb 1	; select bank1
  6842  0C51  0021               	addwf	(lcdWriteText@wCharReadingPos)^080h,f
  6843  0C52  07A0               	goto	l4680
  6844  0C53  2C54               	line	70
  6845                           ;LCD_hd44780u_qy_2004a.c: 70:   }
  6846                           	
  6847                           l230:	
  6848  0C54                     	line	66
  6849                           	
  6850                           l4680:	
  6851  0C54                     ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
  6852                           	movlb 0	; select bank0
  6853  0C54  0020               	movf	(lcdWriteText@iText+1),w
  6854  0C55  0842               	movwf	(??_lcdWriteText+0)+0+1
  6855  0C56  00C4               	movf	(lcdWriteText@iText),w
  6856  0C57  0841               	movwf	(??_lcdWriteText+0)+0
  6857  0C58  00C3               	movlb 1	; select bank1
  6858  0C59  0021               	movf	(lcdWriteText@wCharReadingPos)^080h,w
  6859  0C5A  0820               	movlb 0	; select bank0
  6860  0C5B  0020               	addwf	(??_lcdWriteText+0)+0,w
  6861  0C5C  0743               	movwf	fsr0l
  6862  0C5D  0084               	movf	(??_lcdWriteText+0)+1,w
  6863  0C5E  0844               	skipnc
  6864  0C5F  1803               	incf	(??_lcdWriteText+0)+1,w
  6865  0C60  0A44               	movwf	fsr0h
  6866  0C61  0085               
  6867                           	moviw	fsr0++
  6868  0C62  0012               	btfss	status,2
  6869  0C63  1D03               	goto	u3251
  6870  0C64  2C66               	goto	u3250
  6871  0C65  2C67               u3251:
  6872  0C66                     	goto	l4676
  6873  0C66  2C3B               u3250:
  6874  0C67                     	goto	l233
  6875  0C67  2C68               	
  6876                           l232:	
  6877  0C68                     	line	72
  6878                           	
  6879                           l233:	
  6880  0C68                     	return
  6881  0C68  0008               	opt stack 0
  6882                           GLOBAL	__end_of_lcdWriteText
  6883                           	__end_of_lcdWriteText:
  6884  0C69                     	signat	_lcdWriteText,4217
  6885                           	global	_lcdWriteAllText
  6886                           
  6887 ;; *************** function _lcdWriteAllText *****************
  6888 ;; Defined at:
  6889 ;;		line 74 in file "LCD_hd44780u_qy_2004a.c"
  6890 ;; Parameters:    Size  Location     Type
  6891 ;;  iText           2   29[BANK0 ] PTR unsigned char 
  6892 ;;		 -> STR_7(14), 
  6893 ;; Auto vars:     Size  Location     Type
  6894 ;;  wCharReading    1   35[BANK0 ] unsigned char 
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  1    wreg      void 
  6897 ;; Registers used:
  6898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6904 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6906 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6907 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
  6908 ;;Total ram usage:        7 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:   10
  6911 ;; This function calls:
  6912 ;;		_writeTxtChk
  6913 ;; This function is called by:
  6914 ;;		_Esp8266Entrypoint
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  6918                           	line	74
  6919                           global __ptext16
  6920                           __ptext16:	;psect for function _lcdWriteAllText
  6921  0DBD                     psect	text16
  6922                           	file	"LCD_hd44780u_qy_2004a.c"
  6923                           	line	74
  6924                           	global	__size_of_lcdWriteAllText
  6925                           	__size_of_lcdWriteAllText	equ	__end_of_lcdWriteAllText-_lcdWriteAllText
  6926  005C                     	
  6927                           _lcdWriteAllText:	
  6928  0DBD                     ;incstack = 0
  6929                           	opt	stack 4
  6930                           ; Regs used in _lcdWriteAllText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6931                           	line	76
  6932                           	
  6933                           l4684:	
  6934  0DBD                     ;LCD_hd44780u_qy_2004a.c: 74: void lcdWriteAllText(char *iText);LCD_hd44780u_qy_2004a.c:
                                  75:  {;LCD_hd44780u_qy_2004a.c: 76:   unsigned char wCharReadingPos = 0;
  6935                           	movlb 0	; select bank0
  6936  0DBD  0020               	clrf	(lcdWriteAllText@wCharReadingPos)
  6937  0DBE  01C3               	line	77
  6938                           ;LCD_hd44780u_qy_2004a.c: 77:   while( iText[wCharReadingPos] != 0)
  6939                           	goto	l4698
  6940  0DBF  2E07               	
  6941                           l237:	
  6942  0DC0                     	line	79
  6943                           ;LCD_hd44780u_qy_2004a.c: 78:   {;LCD_hd44780u_qy_2004a.c: 79:     switch(iText[wCharRea
                                 dingPos])
  6944                           	goto	l4694
  6945  0DC0  2DE5               	line	81
  6946                           ;LCD_hd44780u_qy_2004a.c: 80:     {;LCD_hd44780u_qy_2004a.c: 81:         case '\r':
  6947                           	
  6948                           l239:	
  6949  0DC1                     	line	82
  6950                           	
  6951                           l4686:	
  6952  0DC1                     ;LCD_hd44780u_qy_2004a.c: 82:             writeTxtChk('/');
  6953                           	movlw	low(02Fh)
  6954  0DC1  302F               	fcall	_writeTxtChk
  6955  0DC2  3186  2631  318D   	line	83
  6956                           ;LCD_hd44780u_qy_2004a.c: 83:             writeTxtChk('r');
  6957                           	movlw	low(072h)
  6958  0DC5  3072               	fcall	_writeTxtChk
  6959  0DC6  3186  2631  318D   	line	84
  6960                           ;LCD_hd44780u_qy_2004a.c: 84:             break;
  6961                           	goto	l4696
  6962  0DC9  2E01               	line	85
  6963                           ;LCD_hd44780u_qy_2004a.c: 85:         case '\n':
  6964                           	
  6965                           l241:	
  6966  0DCA                     	line	86
  6967                           	
  6968                           l4688:	
  6969  0DCA                     ;LCD_hd44780u_qy_2004a.c: 86:             writeTxtChk('/');
  6970                           	movlw	low(02Fh)
  6971  0DCA  302F               	fcall	_writeTxtChk
  6972  0DCB  3186  2631  318D   	line	87
  6973                           ;LCD_hd44780u_qy_2004a.c: 87:             writeTxtChk('n');
  6974                           	movlw	low(06Eh)
  6975  0DCE  306E               	fcall	_writeTxtChk
  6976  0DCF  3186  2631  318D   	line	88
  6977                           ;LCD_hd44780u_qy_2004a.c: 88:             break;
  6978                           	goto	l4696
  6979  0DD2  2E01               	line	89
  6980                           ;LCD_hd44780u_qy_2004a.c: 89:         default:
  6981                           	
  6982                           l242:	
  6983  0DD3                     	line	90
  6984                           	
  6985                           l4690:	
  6986  0DD3                     ;LCD_hd44780u_qy_2004a.c: 90:             writeTxtChk(iText[wCharReadingPos]);
  6987                           	movlb 0	; select bank0
  6988  0DD3  0020               	movf	(lcdWriteAllText@iText+1),w
  6989  0DD4  083E               	movwf	(??_lcdWriteAllText+0)+0+1
  6990  0DD5  00C0               	movf	(lcdWriteAllText@iText),w
  6991  0DD6  083D               	movwf	(??_lcdWriteAllText+0)+0
  6992  0DD7  00BF               	movf	(lcdWriteAllText@wCharReadingPos),w
  6993  0DD8  0843               	addwf	(??_lcdWriteAllText+0)+0,w
  6994  0DD9  073F               	movwf	fsr0l
  6995  0DDA  0084               	movf	(??_lcdWriteAllText+0)+1,w
  6996  0DDB  0840               	skipnc
  6997  0DDC  1803               	incf	(??_lcdWriteAllText+0)+1,w
  6998  0DDD  0A40               	movwf	fsr0h
  6999  0DDE  0085               
  7000                           	movf	indf0,w ;code access
  7001  0DDF  0800               	fcall	_writeTxtChk
  7002  0DE0  3186  2631  318D   	line	91
  7003                           ;LCD_hd44780u_qy_2004a.c: 91:             break;
  7004                           	goto	l4696
  7005  0DE3  2E01               	line	92
  7006                           	
  7007                           l4692:	
  7008  0DE4                     ;LCD_hd44780u_qy_2004a.c: 92:     }
  7009                           	goto	l4696
  7010  0DE4  2E01               	
  7011                           l238:	
  7012  0DE5                     	
  7013                           l4694:	
  7014  0DE5                     	movlb 0	; select bank0
  7015  0DE5  0020               	movf	(lcdWriteAllText@iText+1),w
  7016  0DE6  083E               	movwf	(??_lcdWriteAllText+0)+0+1
  7017  0DE7  00C0               	movf	(lcdWriteAllText@iText),w
  7018  0DE8  083D               	movwf	(??_lcdWriteAllText+0)+0
  7019  0DE9  00BF               	movf	(lcdWriteAllText@wCharReadingPos),w
  7020  0DEA  0843               	addwf	(??_lcdWriteAllText+0)+0,w
  7021  0DEB  073F               	movwf	fsr0l
  7022  0DEC  0084               	movf	(??_lcdWriteAllText+0)+1,w
  7023  0DED  0840               	skipnc
  7024  0DEE  1803               	incf	(??_lcdWriteAllText+0)+1,w
  7025  0DEF  0A40               	movwf	fsr0h
  7026  0DF0  0085               
  7027                           	movf	indf0,w ;code access
  7028  0DF1  0800               	movwf	(??_lcdWriteAllText+2)+0
  7029  0DF2  00C1               	clrf	(??_lcdWriteAllText+2)+0+1
  7030  0DF3  01C2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  7031                           ; Switch size 1, requested type "space"
  7032                           ; Number of cases is 1, Range of values is 0 to 0
  7033                           ; switch strategies available:
  7034                           ; Name         Instructions Cycles
  7035                           ; simple_byte            4     3 (average)
  7036                           ; direct_byte            8     6 (fixed)
  7037                           ; jumptable            260     6 (fixed)
  7038                           ;	Chosen strategy is simple_byte
  7039                           
  7040                           	movf 1+(??_lcdWriteAllText+2)+0,w
  7041  0DF4  0842               	opt asmopt_push
  7042                           	opt asmopt_off
  7043                           	xorlw	0^0	; case 0
  7044  0DF5  3A00               	skipnz
  7045  0DF6  1903               	goto	l5738
  7046  0DF7  2DF9               	goto	l4690
  7047  0DF8  2DD3               	opt asmopt_pop
  7048                           	
  7049                           l5738:	
  7050  0DF9                     ; Switch size 1, requested type "space"
  7051                           ; Number of cases is 2, Range of values is 10 to 13
  7052                           ; switch strategies available:
  7053                           ; Name         Instructions Cycles
  7054                           ; simple_byte            7     4 (average)
  7055                           ; direct_byte           17     9 (fixed)
  7056                           ; jumptable            263     9 (fixed)
  7057                           ;	Chosen strategy is simple_byte
  7058                           
  7059                           	movf 0+(??_lcdWriteAllText+2)+0,w
  7060  0DF9  0841               	opt asmopt_push
  7061                           	opt asmopt_off
  7062                           	xorlw	10^0	; case 10
  7063  0DFA  3A0A               	skipnz
  7064  0DFB  1903               	goto	l4688
  7065  0DFC  2DCA               	xorlw	13^10	; case 13
  7066  0DFD  3A07               	skipnz
  7067  0DFE  1903               	goto	l4686
  7068  0DFF  2DC1               	goto	l4690
  7069  0E00  2DD3               	opt asmopt_pop
  7070                           
  7071                           	
  7072                           l240:	
  7073  0E01                     	line	93
  7074                           	
  7075                           l4696:	
  7076  0E01                     ;LCD_hd44780u_qy_2004a.c: 93:     wCharReadingPos++;
  7077                           	movlw	low(01h)
  7078  0E01  3001               	movlb 0	; select bank0
  7079  0E02  0020               	movwf	(??_lcdWriteAllText+0)+0
  7080  0E03  00BF               	movf	(??_lcdWriteAllText+0)+0,w
  7081  0E04  083F               	addwf	(lcdWriteAllText@wCharReadingPos),f
  7082  0E05  07C3               	goto	l4698
  7083  0E06  2E07               	line	94
  7084                           ;LCD_hd44780u_qy_2004a.c: 94:   }
  7085                           	
  7086                           l236:	
  7087  0E07                     	line	77
  7088                           	
  7089                           l4698:	
  7090  0E07                     ;LCD_hd44780u_qy_2004a.c: 77:   while( iText[wCharReadingPos] != 0)
  7091                           	movf	(lcdWriteAllText@iText+1),w
  7092  0E07  083E               	movwf	(??_lcdWriteAllText+0)+0+1
  7093  0E08  00C0               	movf	(lcdWriteAllText@iText),w
  7094  0E09  083D               	movwf	(??_lcdWriteAllText+0)+0
  7095  0E0A  00BF               	movf	(lcdWriteAllText@wCharReadingPos),w
  7096  0E0B  0843               	addwf	(??_lcdWriteAllText+0)+0,w
  7097  0E0C  073F               	movwf	fsr0l
  7098  0E0D  0084               	movf	(??_lcdWriteAllText+0)+1,w
  7099  0E0E  0840               	skipnc
  7100  0E0F  1803               	incf	(??_lcdWriteAllText+0)+1,w
  7101  0E10  0A40               	movwf	fsr0h
  7102  0E11  0085               
  7103                           	moviw	fsr0++
  7104  0E12  0012               	btfss	status,2
  7105  0E13  1D03               	goto	u3261
  7106  0E14  2E16               	goto	u3260
  7107  0E15  2E17               u3261:
  7108  0E16                     	goto	l4694
  7109  0E16  2DE5               u3260:
  7110  0E17                     	goto	l244
  7111  0E17  2E18               	
  7112                           l243:	
  7113  0E18                     	line	96
  7114                           	
  7115                           l244:	
  7116  0E18                     	return
  7117  0E18  0008               	opt stack 0
  7118                           GLOBAL	__end_of_lcdWriteAllText
  7119                           	__end_of_lcdWriteAllText:
  7120  0E19                     	signat	_lcdWriteAllText,4217
  7121                           	global	_writeTxtChk
  7122                           
  7123 ;; *************** function _writeTxtChk *****************
  7124 ;; Defined at:
  7125 ;;		line 125 in file "LCD_hd44780u_qy_2004a.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;  iOpCode         1    wreg     unsigned char 
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;  iOpCode         1   28[BANK0 ] unsigned char 
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  1    wreg      void 
  7132 ;; Registers used:
  7133 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7140 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7141 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7142 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  7143 ;;Total ram usage:        3 bytes
  7144 ;; Hardware stack levels used:    1
  7145 ;; Hardware stack levels required when called:    9
  7146 ;; This function calls:
  7147 ;;		_SetToSendDataToLCD
  7148 ;;		_setCursorPosition
  7149 ;;		_setData
  7150 ;;		_waitLCDBusy
  7151 ;; This function is called by:
  7152 ;;		_lcdWriteText
  7153 ;;		_lcdWriteAllText
  7154 ;;		_lcdWriteRotText
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  7158                           	line	125
  7159                           global __ptext17
  7160                           __ptext17:	;psect for function _writeTxtChk
  7161  0631                     psect	text17
  7162                           	file	"LCD_hd44780u_qy_2004a.c"
  7163                           	line	125
  7164                           	global	__size_of_writeTxtChk
  7165                           	__size_of_writeTxtChk	equ	__end_of_writeTxtChk-_writeTxtChk
  7166  009F                     	
  7167                           _writeTxtChk:	
  7168  0631                     ;incstack = 0
  7169                           	opt	stack 4
  7170                           ; Regs used in _writeTxtChk: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7171                           ;writeTxtChk@iOpCode stored from wreg
  7172                           	movlb 0	; select bank0
  7173  0631  0020               	movwf	(writeTxtChk@iOpCode)
  7174  0632  00BC               	line	127
  7175                           	
  7176                           l4484:	
  7177  0633                     ;LCD_hd44780u_qy_2004a.c: 125: void writeTxtChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 26: {;LCD_hd44780u_qy_2004a.c: 127:     if(iOpCode == '\r')
  7178                           		movlw	13
  7179  0633  300D               	xorwf	((writeTxtChk@iOpCode)),w
  7180  0634  063C               	btfss	status,2
  7181  0635  1D03               	goto	u2971
  7182  0636  2E38               	goto	u2970
  7183  0637  2E39               u2971:
  7184  0638                     	goto	l4488
  7185  0638  2E3B               u2970:
  7186  0639                     	goto	l260
  7187  0639  2ECF               	line	129
  7188                           	
  7189                           l4486:	
  7190  063A                     ;LCD_hd44780u_qy_2004a.c: 128:     {;LCD_hd44780u_qy_2004a.c: 129:       return;
  7191                           	goto	l260
  7192  063A  2ECF               	line	130
  7193                           ;LCD_hd44780u_qy_2004a.c: 130:     }
  7194                           	
  7195                           l259:	
  7196  063B                     	line	131
  7197                           	
  7198                           l4488:	
  7199  063B                     ;LCD_hd44780u_qy_2004a.c: 131:   SetToSendDataToLCD();
  7200                           	fcall	_SetToSendDataToLCD
  7201  063B  318A  2297  3186   	line	132
  7202                           	
  7203                           l4490:	
  7204  063E                     ;LCD_hd44780u_qy_2004a.c: 132:   PORTAbits.RA0 = 1;
  7205                           	movlb 0	; select bank0
  7206  063E  0020               	bsf	(12),0	;volatile
  7207  063F  140C               	line	133
  7208                           	
  7209                           l4492:	
  7210  0640                     ;LCD_hd44780u_qy_2004a.c: 133:   PORTAbits.RA1 = 0;
  7211                           	bcf	(12),1	;volatile
  7212  0640  108C               	line	134
  7213                           	
  7214                           l4494:	
  7215  0641                     ;LCD_hd44780u_qy_2004a.c: 134:   if(iOpCode == '\n')
  7216                           		movlw	10
  7217  0641  300A               	xorwf	((writeTxtChk@iOpCode)),w
  7218  0642  063C               	btfss	status,2
  7219  0643  1D03               	goto	u2981
  7220  0644  2E46               	goto	u2980
  7221  0645  2E47               u2981:
  7222  0646                     	goto	l4524
  7223  0646  2E99               u2980:
  7224  0647                     	line	136
  7225                           	
  7226                           l4496:	
  7227  0647                     ;LCD_hd44780u_qy_2004a.c: 135:   {;LCD_hd44780u_qy_2004a.c: 136:    if(mWritingPosition 
                                 < 20)
  7228                           	movlw	low(014h)
  7229  0647  3014               	subwf	(_mWritingPosition),w
  7230  0648  025A               	skipnc
  7231  0649  1803               	goto	u2991
  7232  064A  2E4C               	goto	u2990
  7233  064B  2E4D               u2991:
  7234  064C                     	goto	l4500
  7235  064C  2E53               u2990:
  7236  064D                     	line	138
  7237                           	
  7238                           l4498:	
  7239  064D                     ;LCD_hd44780u_qy_2004a.c: 137:    {;LCD_hd44780u_qy_2004a.c: 138:        setCursorPositi
                                 on(1,0);
  7240                           	clrf	(setCursorPosition@iPosition)
  7241  064D  01B5               	movlw	low(01h)
  7242  064E  3001               	fcall	_setCursorPosition
  7243  064F  318E  2677  3186   	line	139
  7244                           ;LCD_hd44780u_qy_2004a.c: 139:    }
  7245                           	goto	l260
  7246  0652  2ECF               	line	140
  7247                           ;LCD_hd44780u_qy_2004a.c: 140:    else if(mWritingPosition < 40)
  7248                           	
  7249                           l262:	
  7250  0653                     	
  7251                           l4500:	
  7252  0653                     	movlw	low(028h)
  7253  0653  3028               	movlb 0	; select bank0
  7254  0654  0020               	subwf	(_mWritingPosition),w
  7255  0655  025A               	skipnc
  7256  0656  1803               	goto	u3001
  7257  0657  2E59               	goto	u3000
  7258  0658  2E5A               u3001:
  7259  0659                     	goto	l4504
  7260  0659  2E60               u3000:
  7261  065A                     	line	142
  7262                           	
  7263                           l4502:	
  7264  065A                     ;LCD_hd44780u_qy_2004a.c: 141:    {;LCD_hd44780u_qy_2004a.c: 142:        setCursorPositi
                                 on(2,0);
  7265                           	clrf	(setCursorPosition@iPosition)
  7266  065A  01B5               	movlw	low(02h)
  7267  065B  3002               	fcall	_setCursorPosition
  7268  065C  318E  2677  3186   	line	143
  7269                           ;LCD_hd44780u_qy_2004a.c: 143:    }
  7270                           	goto	l260
  7271  065F  2ECF               	line	144
  7272                           ;LCD_hd44780u_qy_2004a.c: 144:    else if(mWritingPosition < 60)
  7273                           	
  7274                           l264:	
  7275  0660                     	
  7276                           l4504:	
  7277  0660                     	movlw	low(03Ch)
  7278  0660  303C               	movlb 0	; select bank0
  7279  0661  0020               	subwf	(_mWritingPosition),w
  7280  0662  025A               	skipnc
  7281  0663  1803               	goto	u3011
  7282  0664  2E66               	goto	u3010
  7283  0665  2E67               u3011:
  7284  0666                     	goto	l4508
  7285  0666  2E6D               u3010:
  7286  0667                     	line	146
  7287                           	
  7288                           l4506:	
  7289  0667                     ;LCD_hd44780u_qy_2004a.c: 145:    {;LCD_hd44780u_qy_2004a.c: 146:        setCursorPositi
                                 on(3,0);
  7290                           	clrf	(setCursorPosition@iPosition)
  7291  0667  01B5               	movlw	low(03h)
  7292  0668  3003               	fcall	_setCursorPosition
  7293  0669  318E  2677  3186   	line	147
  7294                           ;LCD_hd44780u_qy_2004a.c: 147:    }
  7295                           	goto	l260
  7296  066C  2ECF               	line	148
  7297                           ;LCD_hd44780u_qy_2004a.c: 148:    else
  7298                           	
  7299                           l266:	
  7300  066D                     	line	150
  7301                           	
  7302                           l4508:	
  7303  066D                     ;LCD_hd44780u_qy_2004a.c: 149:    {;LCD_hd44780u_qy_2004a.c: 150:        setCursorPositi
                                 on(0,0);
  7304                           	movlb 0	; select bank0
  7305  066D  0020               	clrf	(setCursorPosition@iPosition)
  7306  066E  01B5               	movlw	low(0)
  7307  066F  3000               	fcall	_setCursorPosition
  7308  0670  318E  2677  3186   	goto	l260
  7309  0673  2ECF               	line	151
  7310                           ;LCD_hd44780u_qy_2004a.c: 151:    }
  7311                           	
  7312                           l267:	
  7313  0674                     	goto	l260
  7314  0674  2ECF               	
  7315                           l265:	
  7316  0675                     	goto	l260
  7317  0675  2ECF               	
  7318                           l263:	
  7319  0676                     	goto	l260
  7320  0676  2ECF               	line	152
  7321                           	
  7322                           l4510:	
  7323  0677                     ;LCD_hd44780u_qy_2004a.c: 152:    return;
  7324                           	goto	l260
  7325  0677  2ECF               	line	153
  7326                           ;LCD_hd44780u_qy_2004a.c: 153:   }
  7327                           	
  7328                           l261:	
  7329  0678                     	line	154
  7330                           ;LCD_hd44780u_qy_2004a.c: 154:   switch(mWritingPosition)
  7331                           	goto	l4524
  7332  0678  2E99               	line	156
  7333                           ;LCD_hd44780u_qy_2004a.c: 155:   {;LCD_hd44780u_qy_2004a.c: 156:     case 20:
  7334                           	
  7335                           l269:	
  7336  0679                     	line	157
  7337                           	
  7338                           l4512:	
  7339  0679                     ;LCD_hd44780u_qy_2004a.c: 157:       setCursorPosition(1,0);
  7340                           	movlb 0	; select bank0
  7341  0679  0020               	clrf	(setCursorPosition@iPosition)
  7342  067A  01B5               	movlw	low(01h)
  7343  067B  3001               	fcall	_setCursorPosition
  7344  067C  318E  2677  3186   	line	158
  7345                           ;LCD_hd44780u_qy_2004a.c: 158:       break;
  7346                           	goto	l4526
  7347  067F  2EB0               	line	159
  7348                           ;LCD_hd44780u_qy_2004a.c: 159:     case 40:
  7349                           	
  7350                           l271:	
  7351  0680                     	line	160
  7352                           	
  7353                           l4514:	
  7354  0680                     ;LCD_hd44780u_qy_2004a.c: 160:       setCursorPosition(2,0);
  7355                           	movlb 0	; select bank0
  7356  0680  0020               	clrf	(setCursorPosition@iPosition)
  7357  0681  01B5               	movlw	low(02h)
  7358  0682  3002               	fcall	_setCursorPosition
  7359  0683  318E  2677  3186   	line	161
  7360                           ;LCD_hd44780u_qy_2004a.c: 161:       break;
  7361                           	goto	l4526
  7362  0686  2EB0               	line	162
  7363                           ;LCD_hd44780u_qy_2004a.c: 162:     case 60:
  7364                           	
  7365                           l272:	
  7366  0687                     	line	163
  7367                           	
  7368                           l4516:	
  7369  0687                     ;LCD_hd44780u_qy_2004a.c: 163:       setCursorPosition(3,0);
  7370                           	movlb 0	; select bank0
  7371  0687  0020               	clrf	(setCursorPosition@iPosition)
  7372  0688  01B5               	movlw	low(03h)
  7373  0689  3003               	fcall	_setCursorPosition
  7374  068A  318E  2677  3186   	line	164
  7375                           ;LCD_hd44780u_qy_2004a.c: 164:       break;
  7376                           	goto	l4526
  7377  068D  2EB0               	line	165
  7378                           ;LCD_hd44780u_qy_2004a.c: 165:     case 80:
  7379                           	
  7380                           l273:	
  7381  068E                     	line	166
  7382                           	
  7383                           l4518:	
  7384  068E                     ;LCD_hd44780u_qy_2004a.c: 166:       setCursorPosition(0,0);
  7385                           	movlb 0	; select bank0
  7386  068E  0020               	clrf	(setCursorPosition@iPosition)
  7387  068F  01B5               	movlw	low(0)
  7388  0690  3000               	fcall	_setCursorPosition
  7389  0691  318E  2677  3186   	line	167
  7390                           	
  7391                           l4520:	
  7392  0694                     ;LCD_hd44780u_qy_2004a.c: 167:       mWritingPosition = 0;
  7393                           	movlb 0	; select bank0
  7394  0694  0020               	clrf	(_mWritingPosition)
  7395  0695  01DA               	line	168
  7396                           ;LCD_hd44780u_qy_2004a.c: 168:       break;
  7397                           	goto	l4526
  7398  0696  2EB0               	line	169
  7399                           ;LCD_hd44780u_qy_2004a.c: 169:     default:
  7400                           	
  7401                           l274:	
  7402  0697                     	line	170
  7403                           ;LCD_hd44780u_qy_2004a.c: 170:       break;
  7404                           	goto	l4526
  7405  0697  2EB0               	line	171
  7406                           	
  7407                           l4522:	
  7408  0698                     ;LCD_hd44780u_qy_2004a.c: 171:   }
  7409                           	goto	l4526
  7410  0698  2EB0               	
  7411                           l268:	
  7412  0699                     	
  7413                           l4524:	
  7414  0699                     	movlb 0	; select bank0
  7415  0699  0020               	movf	(_mWritingPosition),w
  7416  069A  085A               	movwf	(??_writeTxtChk+0)+0
  7417  069B  00BA               	clrf	(??_writeTxtChk+0)+0+1
  7418  069C  01BB               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  7419                           ; Switch size 1, requested type "space"
  7420                           ; Number of cases is 1, Range of values is 0 to 0
  7421                           ; switch strategies available:
  7422                           ; Name         Instructions Cycles
  7423                           ; simple_byte            4     3 (average)
  7424                           ; direct_byte            8     6 (fixed)
  7425                           ; jumptable            260     6 (fixed)
  7426                           ;	Chosen strategy is simple_byte
  7427                           
  7428                           	movf 1+(??_writeTxtChk+0)+0,w
  7429  069D  083B               	opt asmopt_push
  7430                           	opt asmopt_off
  7431                           	xorlw	0^0	; case 0
  7432  069E  3A00               	skipnz
  7433  069F  1903               	goto	l5740
  7434  06A0  2EA2               	goto	l4526
  7435  06A1  2EB0               	opt asmopt_pop
  7436                           	
  7437                           l5740:	
  7438  06A2                     ; Switch size 1, requested type "space"
  7439                           ; Number of cases is 4, Range of values is 20 to 80
  7440                           ; switch strategies available:
  7441                           ; Name         Instructions Cycles
  7442                           ; simple_byte           13     7 (average)
  7443                           ; direct_byte          131     9 (fixed)
  7444                           ; jumptable            263     9 (fixed)
  7445                           ;	Chosen strategy is simple_byte
  7446                           
  7447                           	movf 0+(??_writeTxtChk+0)+0,w
  7448  06A2  083A               	opt asmopt_push
  7449                           	opt asmopt_off
  7450                           	xorlw	20^0	; case 20
  7451  06A3  3A14               	skipnz
  7452  06A4  1903               	goto	l4512
  7453  06A5  2E79               	xorlw	40^20	; case 40
  7454  06A6  3A3C               	skipnz
  7455  06A7  1903               	goto	l4514
  7456  06A8  2E80               	xorlw	60^40	; case 60
  7457  06A9  3A14               	skipnz
  7458  06AA  1903               	goto	l4516
  7459  06AB  2E87               	xorlw	80^60	; case 80
  7460  06AC  3A6C               	skipnz
  7461  06AD  1903               	goto	l4518
  7462  06AE  2E8E               	goto	l4526
  7463  06AF  2EB0               	opt asmopt_pop
  7464                           
  7465                           	
  7466                           l270:	
  7467  06B0                     	line	172
  7468                           	
  7469                           l4526:	
  7470  06B0                     ;LCD_hd44780u_qy_2004a.c: 172:   waitLCDBusy();
  7471                           	fcall	_waitLCDBusy
  7472  06B0  3187  27D2  3186   	line	173
  7473                           	
  7474                           l4528:	
  7475  06B3                     ;LCD_hd44780u_qy_2004a.c: 173:   SetToSendDataToLCD();
  7476                           	fcall	_SetToSendDataToLCD
  7477  06B3  318A  2297  3186   	line	174
  7478                           	
  7479                           l4530:	
  7480  06B6                     ;LCD_hd44780u_qy_2004a.c: 174:   PORTAbits.RA0 = 1;
  7481                           	movlb 0	; select bank0
  7482  06B6  0020               	bsf	(12),0	;volatile
  7483  06B7  140C               	line	175
  7484                           	
  7485                           l4532:	
  7486  06B8                     ;LCD_hd44780u_qy_2004a.c: 175:   PORTAbits.RA1 = 0;
  7487                           	bcf	(12),1	;volatile
  7488  06B8  108C               	line	176
  7489                           	
  7490                           l4534:	
  7491  06B9                     ;LCD_hd44780u_qy_2004a.c: 176:   setData(iOpCode >> 4);
  7492                           	movf	(writeTxtChk@iOpCode),w
  7493  06B9  083C               	movwf	(??_writeTxtChk+0)+0
  7494  06BA  00BA               	movlw	04h
  7495  06BB  3004               u3025:
  7496  06BC                     	lsrf	(??_writeTxtChk+0)+0,f
  7497  06BC  36BA               	decfsz	wreg,f
  7498  06BD  0B89               	goto	u3025
  7499  06BE  2EBC               	movf	0+(??_writeTxtChk+0)+0,w
  7500  06BF  083A               	fcall	_setData
  7501  06C0  318C  24A5  3186   	line	177
  7502                           	
  7503                           l4536:	
  7504  06C3                     ;LCD_hd44780u_qy_2004a.c: 177:   setData(iOpCode);
  7505                           	movlb 0	; select bank0
  7506  06C3  0020               	movf	(writeTxtChk@iOpCode),w
  7507  06C4  083C               	fcall	_setData
  7508  06C5  318C  24A5  3186   	line	178
  7509                           	
  7510                           l4538:	
  7511  06C8                     ;LCD_hd44780u_qy_2004a.c: 178:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  7512                           		opt asmopt_push
  7513                           	opt asmopt_off
  7514                           	nop2	;2 cycle nop
  7515  06C8  3200               	nop2	;2 cycle nop
  7516  06C9  3200               	opt asmopt_pop
  7517                           
  7518                           	line	179
  7519                           	
  7520                           l4540:	
  7521  06CA                     ;LCD_hd44780u_qy_2004a.c: 179:   mWritingPosition++;
  7522                           	movlw	low(01h)
  7523  06CA  3001               	movlb 0	; select bank0
  7524  06CB  0020               	movwf	(??_writeTxtChk+0)+0
  7525  06CC  00BA               	movf	(??_writeTxtChk+0)+0,w
  7526  06CD  083A               	addwf	(_mWritingPosition),f
  7527  06CE  07DA               	line	180
  7528                           	
  7529                           l260:	
  7530  06CF                     	return
  7531  06CF  0008               	opt stack 0
  7532                           GLOBAL	__end_of_writeTxtChk
  7533                           	__end_of_writeTxtChk:
  7534  06D0                     	signat	_writeTxtChk,4217
  7535                           	global	_setCursorPosition
  7536                           
  7537 ;; *************** function _setCursorPosition *****************
  7538 ;; Defined at:
  7539 ;;		line 304 in file "LCD_hd44780u_qy_2004a.c"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;  iLine           1    wreg     unsigned char 
  7542 ;;  iPosition       1   21[BANK0 ] unsigned char 
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;  iLine           1   24[BANK0 ] unsigned char 
  7545 ;;  wLCDIndex       1   25[BANK0 ] unsigned char 
  7546 ;; Return value:  Size  Location     Type
  7547 ;;                  1    wreg      void 
  7548 ;; Registers used:
  7549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7555 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7556 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7557 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7558 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7559 ;;Total ram usage:        5 bytes
  7560 ;; Hardware stack levels used:    1
  7561 ;; Hardware stack levels required when called:    8
  7562 ;; This function calls:
  7563 ;;		_SetToSendDataToLCD
  7564 ;;		_setData
  7565 ;;		_waitLCDBusy
  7566 ;; This function is called by:
  7567 ;;		_writeTxtChk
  7568 ;; This function uses a non-reentrant model
  7569 ;;
  7570                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  7571                           	line	304
  7572                           global __ptext18
  7573                           __ptext18:	;psect for function _setCursorPosition
  7574  0E77                     psect	text18
  7575                           	file	"LCD_hd44780u_qy_2004a.c"
  7576                           	line	304
  7577                           	global	__size_of_setCursorPosition
  7578                           	__size_of_setCursorPosition	equ	__end_of_setCursorPosition-_setCursorPosition
  7579  0060                     	
  7580                           _setCursorPosition:	
  7581  0E77                     ;incstack = 0
  7582                           	opt	stack 4
  7583                           ; Regs used in _setCursorPosition: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7584                           ;setCursorPosition@iLine stored from wreg
  7585                           	movlb 0	; select bank0
  7586  0E77  0020               	movwf	(setCursorPosition@iLine)
  7587  0E78  00B8               	line	306
  7588                           	
  7589                           l4398:	
  7590  0E79                     ;LCD_hd44780u_qy_2004a.c: 304: void setCursorPosition(char iLine, char iPosition);LCD_hd
                                 44780u_qy_2004a.c: 305: {;LCD_hd44780u_qy_2004a.c: 306:   char wLCDIndex=0;
  7591                           	clrf	(setCursorPosition@wLCDIndex)
  7592  0E79  01B9               	line	308
  7593                           ;LCD_hd44780u_qy_2004a.c: 308:   switch(iLine)
  7594                           	goto	l4410
  7595  0E7A  2EA7               	line	310
  7596                           ;LCD_hd44780u_qy_2004a.c: 309:   {;LCD_hd44780u_qy_2004a.c: 310:       case 0:
  7597                           	
  7598                           l338:	
  7599  0E7B                     	line	311
  7600                           	
  7601                           l4400:	
  7602  0E7B                     ;LCD_hd44780u_qy_2004a.c: 311:           wLCDIndex = 0x00 + iPosition;
  7603                           	movf	(setCursorPosition@iPosition),w
  7604  0E7B  0835               	movwf	(??_setCursorPosition+0)+0
  7605  0E7C  00B6               	movf	(??_setCursorPosition+0)+0,w
  7606  0E7D  0836               	movwf	(setCursorPosition@wLCDIndex)
  7607  0E7E  00B9               	line	312
  7608                           ;LCD_hd44780u_qy_2004a.c: 312:           mWritingPosition = iPosition;
  7609                           	movf	(setCursorPosition@iPosition),w
  7610  0E7F  0835               	movwf	(??_setCursorPosition+0)+0
  7611  0E80  00B6               	movf	(??_setCursorPosition+0)+0,w
  7612  0E81  0836               	movwf	(_mWritingPosition)
  7613  0E82  00DA               	line	313
  7614                           ;LCD_hd44780u_qy_2004a.c: 313:           break;
  7615                           	goto	l4412
  7616  0E83  2EBD               	line	314
  7617                           ;LCD_hd44780u_qy_2004a.c: 314:       case 1:
  7618                           	
  7619                           l340:	
  7620  0E84                     	line	315
  7621                           	
  7622                           l4402:	
  7623  0E84                     ;LCD_hd44780u_qy_2004a.c: 315:           wLCDIndex = 0x40 + iPosition;
  7624                           	movf	(setCursorPosition@iPosition),w
  7625  0E84  0835               	addlw	040h
  7626  0E85  3E40               	movwf	(??_setCursorPosition+0)+0
  7627  0E86  00B6               	movf	(??_setCursorPosition+0)+0,w
  7628  0E87  0836               	movwf	(setCursorPosition@wLCDIndex)
  7629  0E88  00B9               	line	316
  7630                           ;LCD_hd44780u_qy_2004a.c: 316:           mWritingPosition = 20 + iPosition;
  7631                           	movf	(setCursorPosition@iPosition),w
  7632  0E89  0835               	addlw	014h
  7633  0E8A  3E14               	movwf	(??_setCursorPosition+0)+0
  7634  0E8B  00B6               	movf	(??_setCursorPosition+0)+0,w
  7635  0E8C  0836               	movwf	(_mWritingPosition)
  7636  0E8D  00DA               	line	317
  7637                           ;LCD_hd44780u_qy_2004a.c: 317:           break;
  7638                           	goto	l4412
  7639  0E8E  2EBD               	line	318
  7640                           ;LCD_hd44780u_qy_2004a.c: 318:       case 2:
  7641                           	
  7642                           l341:	
  7643  0E8F                     	line	319
  7644                           	
  7645                           l4404:	
  7646  0E8F                     ;LCD_hd44780u_qy_2004a.c: 319:           wLCDIndex = 0x14 + iPosition;
  7647                           	movf	(setCursorPosition@iPosition),w
  7648  0E8F  0835               	addlw	014h
  7649  0E90  3E14               	movwf	(??_setCursorPosition+0)+0
  7650  0E91  00B6               	movf	(??_setCursorPosition+0)+0,w
  7651  0E92  0836               	movwf	(setCursorPosition@wLCDIndex)
  7652  0E93  00B9               	line	320
  7653                           ;LCD_hd44780u_qy_2004a.c: 320:           mWritingPosition = 40 + iPosition;
  7654                           	movf	(setCursorPosition@iPosition),w
  7655  0E94  0835               	addlw	028h
  7656  0E95  3E28               	movwf	(??_setCursorPosition+0)+0
  7657  0E96  00B6               	movf	(??_setCursorPosition+0)+0,w
  7658  0E97  0836               	movwf	(_mWritingPosition)
  7659  0E98  00DA               	line	321
  7660                           ;LCD_hd44780u_qy_2004a.c: 321:           break;
  7661                           	goto	l4412
  7662  0E99  2EBD               	line	322
  7663                           ;LCD_hd44780u_qy_2004a.c: 322:       case 3:
  7664                           	
  7665                           l342:	
  7666  0E9A                     	line	323
  7667                           	
  7668                           l4406:	
  7669  0E9A                     ;LCD_hd44780u_qy_2004a.c: 323:           wLCDIndex = 0x54 + iPosition;
  7670                           	movf	(setCursorPosition@iPosition),w
  7671  0E9A  0835               	addlw	054h
  7672  0E9B  3E54               	movwf	(??_setCursorPosition+0)+0
  7673  0E9C  00B6               	movf	(??_setCursorPosition+0)+0,w
  7674  0E9D  0836               	movwf	(setCursorPosition@wLCDIndex)
  7675  0E9E  00B9               	line	324
  7676                           ;LCD_hd44780u_qy_2004a.c: 324:           mWritingPosition = 60 + iPosition;
  7677                           	movf	(setCursorPosition@iPosition),w
  7678  0E9F  0835               	addlw	03Ch
  7679  0EA0  3E3C               	movwf	(??_setCursorPosition+0)+0
  7680  0EA1  00B6               	movf	(??_setCursorPosition+0)+0,w
  7681  0EA2  0836               	movwf	(_mWritingPosition)
  7682  0EA3  00DA               	line	325
  7683                           ;LCD_hd44780u_qy_2004a.c: 325:           break;
  7684                           	goto	l4412
  7685  0EA4  2EBD               	line	326
  7686                           ;LCD_hd44780u_qy_2004a.c: 326:       default:
  7687                           	
  7688                           l343:	
  7689  0EA5                     	line	327
  7690                           ;LCD_hd44780u_qy_2004a.c: 327:       break;
  7691                           	goto	l4412
  7692  0EA5  2EBD               	line	328
  7693                           	
  7694                           l4408:	
  7695  0EA6                     ;LCD_hd44780u_qy_2004a.c: 328:   }
  7696                           	goto	l4412
  7697  0EA6  2EBD               	
  7698                           l337:	
  7699  0EA7                     	
  7700                           l4410:	
  7701  0EA7                     	movf	(setCursorPosition@iLine),w
  7702  0EA7  0838               	movwf	(??_setCursorPosition+0)+0
  7703  0EA8  00B6               	clrf	(??_setCursorPosition+0)+0+1
  7704  0EA9  01B7               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  7705                           ; Switch size 1, requested type "space"
  7706                           ; Number of cases is 1, Range of values is 0 to 0
  7707                           ; switch strategies available:
  7708                           ; Name         Instructions Cycles
  7709                           ; simple_byte            4     3 (average)
  7710                           ; direct_byte            8     6 (fixed)
  7711                           ; jumptable            260     6 (fixed)
  7712                           ;	Chosen strategy is simple_byte
  7713                           
  7714                           	movf 1+(??_setCursorPosition+0)+0,w
  7715  0EAA  0837               	opt asmopt_push
  7716                           	opt asmopt_off
  7717                           	xorlw	0^0	; case 0
  7718  0EAB  3A00               	skipnz
  7719  0EAC  1903               	goto	l5742
  7720  0EAD  2EAF               	goto	l4412
  7721  0EAE  2EBD               	opt asmopt_pop
  7722                           	
  7723                           l5742:	
  7724  0EAF                     ; Switch size 1, requested type "space"
  7725                           ; Number of cases is 4, Range of values is 0 to 3
  7726                           ; switch strategies available:
  7727                           ; Name         Instructions Cycles
  7728                           ; simple_byte           13     7 (average)
  7729                           ; direct_byte           14     6 (fixed)
  7730                           ; jumptable            260     6 (fixed)
  7731                           ;	Chosen strategy is simple_byte
  7732                           
  7733                           	movf 0+(??_setCursorPosition+0)+0,w
  7734  0EAF  0836               	opt asmopt_push
  7735                           	opt asmopt_off
  7736                           	xorlw	0^0	; case 0
  7737  0EB0  3A00               	skipnz
  7738  0EB1  1903               	goto	l4400
  7739  0EB2  2E7B               	xorlw	1^0	; case 1
  7740  0EB3  3A01               	skipnz
  7741  0EB4  1903               	goto	l4402
  7742  0EB5  2E84               	xorlw	2^1	; case 2
  7743  0EB6  3A03               	skipnz
  7744  0EB7  1903               	goto	l4404
  7745  0EB8  2E8F               	xorlw	3^2	; case 3
  7746  0EB9  3A01               	skipnz
  7747  0EBA  1903               	goto	l4406
  7748  0EBB  2E9A               	goto	l4412
  7749  0EBC  2EBD               	opt asmopt_pop
  7750                           
  7751                           	
  7752                           l339:	
  7753  0EBD                     	line	330
  7754                           	
  7755                           l4412:	
  7756  0EBD                     ;LCD_hd44780u_qy_2004a.c: 330:   waitLCDBusy();
  7757                           	fcall	_waitLCDBusy
  7758  0EBD  3187  27D2  318E   	line	332
  7759                           	
  7760                           l4414:	
  7761  0EC0                     ;LCD_hd44780u_qy_2004a.c: 332:   SetToSendDataToLCD();
  7762                           	fcall	_SetToSendDataToLCD
  7763  0EC0  318A  2297  318E   	line	333
  7764                           	
  7765                           l4416:	
  7766  0EC3                     ;LCD_hd44780u_qy_2004a.c: 333:   PORTAbits.RA0 = 0;
  7767                           	movlb 0	; select bank0
  7768  0EC3  0020               	bcf	(12),0	;volatile
  7769  0EC4  100C               	line	334
  7770                           	
  7771                           l4418:	
  7772  0EC5                     ;LCD_hd44780u_qy_2004a.c: 334:   PORTAbits.RA1 = 0;
  7773                           	bcf	(12),1	;volatile
  7774  0EC5  108C               	line	335
  7775                           	
  7776                           l4420:	
  7777  0EC6                     ;LCD_hd44780u_qy_2004a.c: 335:   setData((wLCDIndex >> 4) | 0x8 );
  7778                           	movf	(setCursorPosition@wLCDIndex),w
  7779  0EC6  0839               	movwf	(??_setCursorPosition+0)+0
  7780  0EC7  00B6               	movlw	04h
  7781  0EC8  3004               u2905:
  7782  0EC9                     	lsrf	(??_setCursorPosition+0)+0,f
  7783  0EC9  36B6               	decfsz	wreg,f
  7784  0ECA  0B89               	goto	u2905
  7785  0ECB  2EC9               	movf	0+(??_setCursorPosition+0)+0,w
  7786  0ECC  0836               	iorlw	08h
  7787  0ECD  3808               	fcall	_setData
  7788  0ECE  318C  24A5  318E   	line	336
  7789                           	
  7790                           l4422:	
  7791  0ED1                     ;LCD_hd44780u_qy_2004a.c: 336:   setData(wLCDIndex);
  7792                           	movlb 0	; select bank0
  7793  0ED1  0020               	movf	(setCursorPosition@wLCDIndex),w
  7794  0ED2  0839               	fcall	_setData
  7795  0ED3  318C  24A5  318E   	line	338
  7796                           	
  7797                           l344:	
  7798  0ED6                     	return
  7799  0ED6  0008               	opt stack 0
  7800                           GLOBAL	__end_of_setCursorPosition
  7801                           	__end_of_setCursorPosition:
  7802  0ED7                     	signat	_setCursorPosition,8313
  7803                           	global	_waitLCDBusy
  7804                           
  7805 ;; *************** function _waitLCDBusy *****************
  7806 ;; Defined at:
  7807 ;;		line 212 in file "LCD_hd44780u_qy_2004a.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;		None
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;  busyFlag        2   19[BANK0 ] int 
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  1    wreg      void 
  7814 ;; Registers used:
  7815 ;;		wreg, status,2, status,0, pclath, cstack
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7822 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7823 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  7824 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7825 ;;Total ram usage:        5 bytes
  7826 ;; Hardware stack levels used:    1
  7827 ;; Hardware stack levels required when called:    7
  7828 ;; This function calls:
  7829 ;;		_SetToReadDataFromLCD
  7830 ;; This function is called by:
  7831 ;;		_writeTxtChk
  7832 ;;		_writeInsChk
  7833 ;;		_setCursorPosition
  7834 ;; This function uses a non-reentrant model
  7835 ;;
  7836                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  7837                           	line	212
  7838                           global __ptext19
  7839                           __ptext19:	;psect for function _waitLCDBusy
  7840  07D2                     psect	text19
  7841                           	file	"LCD_hd44780u_qy_2004a.c"
  7842                           	line	212
  7843                           	global	__size_of_waitLCDBusy
  7844                           	__size_of_waitLCDBusy	equ	__end_of_waitLCDBusy-_waitLCDBusy
  7845  002D                     	
  7846                           _waitLCDBusy:	
  7847  07D2                     ;incstack = 0
  7848                           	opt	stack 6
  7849                           ; Regs used in _waitLCDBusy: [wreg+status,2+status,0+pclath+cstack]
  7850                           	line	214
  7851                           	
  7852                           l4370:	
  7853  07D2                     ;LCD_hd44780u_qy_2004a.c: 214:   PORTAbits.RA0 = 0;
  7854                           	movlb 0	; select bank0
  7855  07D2  0020               	bcf	(12),0	;volatile
  7856  07D3  100C               	line	215
  7857                           ;LCD_hd44780u_qy_2004a.c: 215:   PORTAbits.RA1 = 1;
  7858                           	bsf	(12),1	;volatile
  7859  07D4  148C               	line	217
  7860                           	
  7861                           l4372:	
  7862  07D5                     ;LCD_hd44780u_qy_2004a.c: 217:   SetToReadDataFromLCD();
  7863                           	fcall	_SetToReadDataFromLCD
  7864  07D5  318A  229D  3187   	line	219
  7865                           	
  7866                           l4374:	
  7867  07D8                     ;LCD_hd44780u_qy_2004a.c: 219:   int busyFlag = 1;
  7868                           	movlw	01h
  7869  07D8  3001               	movlb 0	; select bank0
  7870  07D9  0020               	movwf	(waitLCDBusy@busyFlag)
  7871  07DA  00B3               	movlw	0
  7872  07DB  3000               	movwf	((waitLCDBusy@busyFlag))+1
  7873  07DC  00B4               	line	220
  7874                           ;LCD_hd44780u_qy_2004a.c: 220:   while(busyFlag == 1)
  7875                           	goto	l289
  7876  07DD  2FF6               	
  7877                           l290:	
  7878  07DE                     	line	223
  7879                           ;LCD_hd44780u_qy_2004a.c: 221:   {;LCD_hd44780u_qy_2004a.c: 223:     PORTAbits.RA2 = 1;

  7880                           	bsf	(12),2	;volatile
  7881  07DE  150C               	line	224
  7882                           ;LCD_hd44780u_qy_2004a.c: 224:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  7883                           		opt asmopt_push
  7884                           	opt asmopt_off
  7885                           	nop2	;2 cycle nop
  7886  07DF  3200               	nop2	;2 cycle nop
  7887  07E0  3200               	opt asmopt_pop
  7888                           
  7889                           	line	225
  7890                           	
  7891                           l4376:	
  7892  07E1                     ;LCD_hd44780u_qy_2004a.c: 225:     busyFlag = PORTAbits.RA3;
  7893                           	movlb 0	; select bank0
  7894  07E1  0020               	rrf	(12),w	;volatile
  7895  07E2  0C0C               	movwf	(??_waitLCDBusy+0)+0
  7896  07E3  00B0               	rrf	(??_waitLCDBusy+0)+0,f
  7897  07E4  0CB0               	rrf	(??_waitLCDBusy+0)+0,w
  7898  07E5  0C30               	andlw	(1<<1)-1
  7899  07E6  3901               	movwf	(??_waitLCDBusy+1)+0
  7900  07E7  00B1               	clrf	(??_waitLCDBusy+1)+0+1
  7901  07E8  01B2               	movf	0+(??_waitLCDBusy+1)+0,w
  7902  07E9  0831               	movwf	(waitLCDBusy@busyFlag)
  7903  07EA  00B3               	movf	1+(??_waitLCDBusy+1)+0,w
  7904  07EB  0832               	movwf	(waitLCDBusy@busyFlag+1)
  7905  07EC  00B4               	line	226
  7906                           	
  7907                           l4378:	
  7908  07ED                     ;LCD_hd44780u_qy_2004a.c: 226:     PORTAbits.RA2 = 0;
  7909                           	bcf	(12),2	;volatile
  7910  07ED  110C               	line	227
  7911                           	
  7912                           l4380:	
  7913  07EE                     ;LCD_hd44780u_qy_2004a.c: 227:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  7914                           		opt asmopt_push
  7915                           	opt asmopt_off
  7916                           	nop2	;2 cycle nop
  7917  07EE  3200               	nop2	;2 cycle nop
  7918  07EF  3200               	nop2	;2 cycle nop
  7919  07F0  3200               	nop2	;2 cycle nop
  7920  07F1  3200               	opt asmopt_pop
  7921                           
  7922                           	line	229
  7923                           	
  7924                           l4382:	
  7925  07F2                     ;LCD_hd44780u_qy_2004a.c: 229:     PORTAbits.RA2 = 1;
  7926                           	movlb 0	; select bank0
  7927  07F2  0020               	bsf	(12),2	;volatile
  7928  07F3  150C               	line	230
  7929                           	
  7930                           l4384:	
  7931  07F4                     ;LCD_hd44780u_qy_2004a.c: 230:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  7932                           		opt asmopt_push
  7933                           	opt asmopt_off
  7934                           	nop2	;2 cycle nop
  7935  07F4  3200               	nop2	;2 cycle nop
  7936  07F5  3200               	opt asmopt_pop
  7937                           
  7938                           	line	231
  7939                           ;LCD_hd44780u_qy_2004a.c: 231:   }
  7940                           	
  7941                           l289:	
  7942  07F6                     	line	220
  7943                           ;LCD_hd44780u_qy_2004a.c: 220:   while(busyFlag == 1)
  7944                           	movlb 0	; select bank0
  7945  07F6  0020               		decf	((waitLCDBusy@busyFlag)),w
  7946  07F7  0333               iorwf	((waitLCDBusy@busyFlag+1)),w
  7947  07F8  0434               	btfsc	status,2
  7948  07F9  1903               	goto	u2881
  7949  07FA  2FFC               	goto	u2880
  7950  07FB  2FFD               u2881:
  7951  07FC                     	goto	l290
  7952  07FC  2FDE               u2880:
  7953  07FD                     	goto	l292
  7954  07FD  2FFE               	
  7955                           l291:	
  7956  07FE                     	line	232
  7957                           	
  7958                           l292:	
  7959  07FE                     	return
  7960  07FE  0008               	opt stack 0
  7961                           GLOBAL	__end_of_waitLCDBusy
  7962                           	__end_of_waitLCDBusy:
  7963  07FF                     	signat	_waitLCDBusy,89
  7964                           	global	_SetToReadDataFromLCD
  7965                           
  7966 ;; *************** function _SetToReadDataFromLCD *****************
  7967 ;; Defined at:
  7968 ;;		line 197 in file "LCD_hd44780u_qy_2004a.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;		None
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;		None
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  1    wreg      void 
  7975 ;; Registers used:
  7976 ;;		None
  7977 ;; Tracked objects:
  7978 ;;		On entry : 0/0
  7979 ;;		On exit  : 0/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7986 ;;Total ram usage:        0 bytes
  7987 ;; Hardware stack levels used:    1
  7988 ;; Hardware stack levels required when called:    6
  7989 ;; This function calls:
  7990 ;;		Nothing
  7991 ;; This function is called by:
  7992 ;;		_waitLCDBusy
  7993 ;; This function uses a non-reentrant model
  7994 ;;
  7995                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  7996                           	line	197
  7997                           global __ptext20
  7998                           __ptext20:	;psect for function _SetToReadDataFromLCD
  7999  0A9D                     psect	text20
  8000                           	file	"LCD_hd44780u_qy_2004a.c"
  8001                           	line	197
  8002                           	global	__size_of_SetToReadDataFromLCD
  8003                           	__size_of_SetToReadDataFromLCD	equ	__end_of_SetToReadDataFromLCD-_SetToReadDataFromLCD

  8004  0006                     	
  8005                           _SetToReadDataFromLCD:	
  8006  0A9D                     ;incstack = 0
  8007                           	opt	stack 6
  8008                           ; Regs used in _SetToReadDataFromLCD: []
  8009                           	line	199
  8010                           	
  8011                           l4356:	
  8012  0A9D                     ;LCD_hd44780u_qy_2004a.c: 199:   TRISAbits.TRISA3 = 1;
  8013                           	movlb 1	; select bank1
  8014  0A9D  0021               	bsf	(140)^080h,3	;volatile
  8015  0A9E  158C               	line	200
  8016                           ;LCD_hd44780u_qy_2004a.c: 200:   TRISCbits.TRISC2 = 1;
  8017                           	bsf	(142)^080h,2	;volatile
  8018  0A9F  150E               	line	201
  8019                           ;LCD_hd44780u_qy_2004a.c: 201:   TRISCbits.TRISC1 = 1;
  8020                           	bsf	(142)^080h,1	;volatile
  8021  0AA0  148E               	line	202
  8022                           ;LCD_hd44780u_qy_2004a.c: 202:   TRISCbits.TRISC0 = 1;
  8023                           	bsf	(142)^080h,0	;volatile
  8024  0AA1  140E               	line	203
  8025                           	
  8026                           l283:	
  8027  0AA2                     	return
  8028  0AA2  0008               	opt stack 0
  8029                           GLOBAL	__end_of_SetToReadDataFromLCD
  8030                           	__end_of_SetToReadDataFromLCD:
  8031  0AA3                     	signat	_SetToReadDataFromLCD,89
  8032                           	global	_setData
  8033                           
  8034 ;; *************** function _setData *****************
  8035 ;; Defined at:
  8036 ;;		line 113 in file "LCD_hd44780u_qy_2004a.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;  iValue          1    wreg     unsigned char 
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;  iValue          1   18[BANK0 ] unsigned char 
  8041 ;; Return value:  Size  Location     Type
  8042 ;;                  1    wreg      void 
  8043 ;; Registers used:
  8044 ;;		wreg, status,2, status,0
  8045 ;; Tracked objects:
  8046 ;;		On entry : 0/0
  8047 ;;		On exit  : 0/0
  8048 ;;		Unchanged: 0/0
  8049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8051 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8052 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8053 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  8054 ;;Total ram usage:        3 bytes
  8055 ;; Hardware stack levels used:    1
  8056 ;; Hardware stack levels required when called:    6
  8057 ;; This function calls:
  8058 ;;		Nothing
  8059 ;; This function is called by:
  8060 ;;		_initLCD
  8061 ;;		_writeTxtChk
  8062 ;;		_writeInsNoChk
  8063 ;;		_setCursorPosition
  8064 ;; This function uses a non-reentrant model
  8065 ;;
  8066                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  8067                           	line	113
  8068                           global __ptext21
  8069                           __ptext21:	;psect for function _setData
  8070  0CA5                     psect	text21
  8071                           	file	"LCD_hd44780u_qy_2004a.c"
  8072                           	line	113
  8073                           	global	__size_of_setData
  8074                           	__size_of_setData	equ	__end_of_setData-_setData
  8075  003C                     	
  8076                           _setData:	
  8077  0CA5                     ;incstack = 0
  8078                           	opt	stack 6
  8079                           ; Regs used in _setData: [wreg+status,2+status,0]
  8080                           ;setData@iValue stored from wreg
  8081                           	movlb 0	; select bank0
  8082  0CA5  0020               	movwf	(setData@iValue)
  8083  0CA6  00B2               	line	115
  8084                           	
  8085                           l4358:	
  8086  0CA7                     ;LCD_hd44780u_qy_2004a.c: 113: void setData(char iValue);LCD_hd44780u_qy_2004a.c: 114: {
                                 ;LCD_hd44780u_qy_2004a.c: 115:   PORTAbits.RA2 = 1;
  8087                           	bsf	(12),2	;volatile
  8088  0CA7  150C               	line	116
  8089                           	
  8090                           l4360:	
  8091  0CA8                     ;LCD_hd44780u_qy_2004a.c: 116:   PORTAbits.RA3 = (iValue & 0x8) >> 3;
  8092                           	movf	(setData@iValue),w
  8093  0CA8  0832               	movwf	(??_setData+0)+0
  8094  0CA9  00B0               	movlw	03h
  8095  0CAA  3003               u2865:
  8096  0CAB                     	lsrf	(??_setData+0)+0,f
  8097  0CAB  36B0               	decfsz	wreg,f
  8098  0CAC  0B89               	goto	u2865
  8099  0CAD  2CAB               	movf	0+(??_setData+0)+0,w
  8100  0CAE  0830               	andlw	01h
  8101  0CAF  3901               	movwf	(??_setData+1)+0
  8102  0CB0  00B1               	rlf	(??_setData+1)+0,f
  8103  0CB1  0DB1               	rlf	(??_setData+1)+0,f
  8104  0CB2  0DB1               	rlf	(??_setData+1)+0,f
  8105  0CB3  0DB1               	movf	(12),w	;volatile
  8106  0CB4  080C               	xorwf	(??_setData+1)+0,w
  8107  0CB5  0631               	andlw	not (((1<<1)-1)<<3)
  8108  0CB6  39F7               	xorwf	(??_setData+1)+0,w
  8109  0CB7  0631               	movwf	(12)	;volatile
  8110  0CB8  008C               	line	117
  8111                           ;LCD_hd44780u_qy_2004a.c: 117:   PORTCbits.RC2 = (iValue & 0x4) >> 2;
  8112                           	movf	(setData@iValue),w
  8113  0CB9  0832               	movwf	(??_setData+0)+0
  8114  0CBA  00B0               	movlw	02h
  8115  0CBB  3002               u2875:
  8116  0CBC                     	lsrf	(??_setData+0)+0,f
  8117  0CBC  36B0               	decfsz	wreg,f
  8118  0CBD  0B89               	goto	u2875
  8119  0CBE  2CBC               	movf	0+(??_setData+0)+0,w
  8120  0CBF  0830               	andlw	01h
  8121  0CC0  3901               	movwf	(??_setData+1)+0
  8122  0CC1  00B1               	rlf	(??_setData+1)+0,f
  8123  0CC2  0DB1               	rlf	(??_setData+1)+0,f
  8124  0CC3  0DB1               	movf	(14),w	;volatile
  8125  0CC4  080E               	xorwf	(??_setData+1)+0,w
  8126  0CC5  0631               	andlw	not (((1<<1)-1)<<2)
  8127  0CC6  39FB               	xorwf	(??_setData+1)+0,w
  8128  0CC7  0631               	movwf	(14)	;volatile
  8129  0CC8  008E               	line	118
  8130                           ;LCD_hd44780u_qy_2004a.c: 118:   PORTCbits.RC1 = (iValue & 0x2) >> 1;
  8131                           	lsrf	(setData@iValue),w
  8132  0CC9  3632               	andlw	01h
  8133  0CCA  3901               	movwf	(??_setData+0)+0
  8134  0CCB  00B0               	rlf	(??_setData+0)+0,f
  8135  0CCC  0DB0               	movf	(14),w	;volatile
  8136  0CCD  080E               	xorwf	(??_setData+0)+0,w
  8137  0CCE  0630               	andlw	not (((1<<1)-1)<<1)
  8138  0CCF  39FD               	xorwf	(??_setData+0)+0,w
  8139  0CD0  0630               	movwf	(14)	;volatile
  8140  0CD1  008E               	line	119
  8141                           ;LCD_hd44780u_qy_2004a.c: 119:   PORTCbits.RC0 = (iValue & 0x1) ;
  8142                           	movlw	low(01h)
  8143  0CD2  3001               	andwf	(setData@iValue),w
  8144  0CD3  0532               	movwf	(??_setData+0)+0
  8145  0CD4  00B0               	movf	(14),w	;volatile
  8146  0CD5  080E               	xorwf	0+(??_setData+0)+0,w
  8147  0CD6  0630               	andlw	not ((1<<1)-1)
  8148  0CD7  39FE               	xorwf	0+(??_setData+0)+0,w
  8149  0CD8  0630               	movwf	(14)	;volatile
  8150  0CD9  008E               	line	120
  8151                           	
  8152                           l4362:	
  8153  0CDA                     ;LCD_hd44780u_qy_2004a.c: 120:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  8154                           		opt asmopt_push
  8155                           	opt asmopt_off
  8156                           	nop2	;2 cycle nop
  8157  0CDA  3200               	nop2	;2 cycle nop
  8158  0CDB  3200               	opt asmopt_pop
  8159                           
  8160                           	line	121
  8161                           	
  8162                           l4364:	
  8163  0CDC                     ;LCD_hd44780u_qy_2004a.c: 121:   PORTAbits.RA2 = 0;
  8164                           	movlb 0	; select bank0
  8165  0CDC  0020               	bcf	(12),2	;volatile
  8166  0CDD  110C               	line	122
  8167                           	
  8168                           l4366:	
  8169  0CDE                     ;LCD_hd44780u_qy_2004a.c: 122:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  8170                           		opt asmopt_push
  8171                           	opt asmopt_off
  8172                           	nop2	;2 cycle nop
  8173  0CDE  3200               	nop2	;2 cycle nop
  8174  0CDF  3200               	opt asmopt_pop
  8175                           
  8176                           	line	123
  8177                           	
  8178                           l256:	
  8179  0CE0                     	return
  8180  0CE0  0008               	opt stack 0
  8181                           GLOBAL	__end_of_setData
  8182                           	__end_of_setData:
  8183  0CE1                     	signat	_setData,4217
  8184                           	global	_SetToSendDataToLCD
  8185                           
  8186 ;; *************** function _SetToSendDataToLCD *****************
  8187 ;; Defined at:
  8188 ;;		line 204 in file "LCD_hd44780u_qy_2004a.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;		None
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;		None
  8193 ;; Return value:  Size  Location     Type
  8194 ;;                  1    wreg      void 
  8195 ;; Registers used:
  8196 ;;		None
  8197 ;; Tracked objects:
  8198 ;;		On entry : 0/0
  8199 ;;		On exit  : 0/0
  8200 ;;		Unchanged: 0/0
  8201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8206 ;;Total ram usage:        0 bytes
  8207 ;; Hardware stack levels used:    1
  8208 ;; Hardware stack levels required when called:    6
  8209 ;; This function calls:
  8210 ;;		Nothing
  8211 ;; This function is called by:
  8212 ;;		_writeTxtChk
  8213 ;;		_writeInsNoChk
  8214 ;;		_setCursorPosition
  8215 ;; This function uses a non-reentrant model
  8216 ;;
  8217                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  8218                           	line	204
  8219                           global __ptext22
  8220                           __ptext22:	;psect for function _SetToSendDataToLCD
  8221  0A97                     psect	text22
  8222                           	file	"LCD_hd44780u_qy_2004a.c"
  8223                           	line	204
  8224                           	global	__size_of_SetToSendDataToLCD
  8225                           	__size_of_SetToSendDataToLCD	equ	__end_of_SetToSendDataToLCD-_SetToSendDataToLCD
  8226  0006                     	
  8227                           _SetToSendDataToLCD:	
  8228  0A97                     ;incstack = 0
  8229                           	opt	stack 6
  8230                           ; Regs used in _SetToSendDataToLCD: []
  8231                           	line	206
  8232                           	
  8233                           l4368:	
  8234  0A97                     ;LCD_hd44780u_qy_2004a.c: 206:   TRISAbits.TRISA3 = 0;;
  8235                           	movlb 1	; select bank1
  8236  0A97  0021               	bcf	(140)^080h,3	;volatile
  8237  0A98  118C               	line	207
  8238                           ;LCD_hd44780u_qy_2004a.c: 207:   TRISCbits.TRISC2 = 0;;
  8239                           	bcf	(142)^080h,2	;volatile
  8240  0A99  110E               	line	208
  8241                           ;LCD_hd44780u_qy_2004a.c: 208:   TRISCbits.TRISC1 = 0;;
  8242                           	bcf	(142)^080h,1	;volatile
  8243  0A9A  108E               	line	209
  8244                           ;LCD_hd44780u_qy_2004a.c: 209:   TRISCbits.TRISC0 = 0;;
  8245                           	bcf	(142)^080h,0	;volatile
  8246  0A9B  100E               	line	210
  8247                           	
  8248                           l286:	
  8249  0A9C                     	return
  8250  0A9C  0008               	opt stack 0
  8251                           GLOBAL	__end_of_SetToSendDataToLCD
  8252                           	__end_of_SetToSendDataToLCD:
  8253  0A9D                     	signat	_SetToSendDataToLCD,89
  8254                           	global	_EusartGetRxBuffer
  8255                           
  8256 ;; *************** function _EusartGetRxBuffer *****************
  8257 ;; Defined at:
  8258 ;;		line 86 in file "EUSART.c"
  8259 ;; Parameters:    Size  Location     Type
  8260 ;;  oData           1    wreg     PTR unsigned char 
  8261 ;;		 -> Esp8266Entrypoint@wEspBuffer(50), 
  8262 ;;  iDataSize       1   28[BANK0 ] unsigned char 
  8263 ;;  oNbOfByteRec    1   29[BANK0 ] PTR unsigned char 
  8264 ;;		 -> Esp8266Entrypoint@wEusartNbByteReceived(1), 
  8265 ;; Auto vars:     Size  Location     Type
  8266 ;;  oData           1   32[BANK0 ] PTR unsigned char 
  8267 ;;		 -> Esp8266Entrypoint@wEspBuffer(50), 
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  1    wreg      void 
  8270 ;; Registers used:
  8271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8277 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8278 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8279 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8280 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  8281 ;;Total ram usage:        5 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:    7
  8284 ;; This function calls:
  8285 ;;		_memcpy
  8286 ;; This function is called by:
  8287 ;;		_Esp8266Entrypoint
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  8291                           	file	"EUSART.c"
  8292                           	line	86
  8293                           global __ptext23
  8294                           __ptext23:	;psect for function _EusartGetRxBuffer
  8295  0CE1                     psect	text23
  8296                           	file	"EUSART.c"
  8297                           	line	86
  8298                           	global	__size_of_EusartGetRxBuffer
  8299                           	__size_of_EusartGetRxBuffer	equ	__end_of_EusartGetRxBuffer-_EusartGetRxBuffer
  8300  0040                     	
  8301                           _EusartGetRxBuffer:	
  8302  0CE1                     ;incstack = 0
  8303                           	opt	stack 7
  8304                           ; Regs used in _EusartGetRxBuffer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8305                           ;EusartGetRxBuffer@oData stored from wreg
  8306                           	movlb 0	; select bank0
  8307  0CE1  0020               	movwf	(EusartGetRxBuffer@oData)
  8308  0CE2  00C0               	line	88
  8309                           	
  8310                           l4768:	
  8311  0CE3                     ;EUSART.c: 86: void EusartGetRxBuffer(uint8_t* oData, uint8_t iDataSize, uint8_t* oNbOfB
                                 yteReceived);EUSART.c: 87: {;EUSART.c: 88:     if(gEusartRXBufferIndex < iDataSize )
  8312                           	movf	(EusartGetRxBuffer@iDataSize),w
  8313  0CE3  083C               	subwf	(_gEusartRXBufferIndex),w
  8314  0CE4  0250               	skipnc
  8315  0CE5  1803               	goto	u3331
  8316  0CE6  2CE8               	goto	u3330
  8317  0CE7  2CE9               u3331:
  8318  0CE8                     	goto	l4774
  8319  0CE8  2D03               u3330:
  8320  0CE9                     	line	90
  8321                           	
  8322                           l4770:	
  8323  0CE9                     ;EUSART.c: 89:     {;EUSART.c: 90:         *oNbOfByteReceived = gEusartRXBufferIndex;
  8324                           	movf	(_gEusartRXBufferIndex),w
  8325  0CE9  0850               	movwf	(??_EusartGetRxBuffer+0)+0
  8326  0CEA  00BE               	movf	(EusartGetRxBuffer@oNbOfByteReceived),w
  8327  0CEB  083D               	movwf	fsr1l
  8328  0CEC  0086               	clrf fsr1h	
  8329  0CED  0187               	
  8330                           	movf	(??_EusartGetRxBuffer+0)+0,w
  8331  0CEE  083E               	movwf	indf1
  8332  0CEF  0081               	line	91
  8333                           	
  8334                           l4772:	
  8335  0CF0                     ;EUSART.c: 91:          memcpy(oData,gEusartRXBuffer,gEusartRXBufferIndex);
  8336                           	movf	(EusartGetRxBuffer@oData),w
  8337  0CF0  0840               	movwf	(memcpy@d1)
  8338  0CF1  00B0               	movlw	0x0
  8339  0CF2  3000               
  8340                           	movwf	(memcpy@d1+1)
  8341  0CF3  00B1               	movlw	low(_gEusartRXBuffer)
  8342  0CF4  3034               	movwf	(memcpy@s1)
  8343  0CF5  00B2               	movlw	high(_gEusartRXBuffer)
  8344  0CF6  3002               	movwf	(memcpy@s1+1)
  8345  0CF7  00B3               	movf	(_gEusartRXBufferIndex),w
  8346  0CF8  0850               	movwf	(??_EusartGetRxBuffer+0)+0
  8347  0CF9  00BE               	clrf	(??_EusartGetRxBuffer+0)+0+1
  8348  0CFA  01BF               	movf	0+(??_EusartGetRxBuffer+0)+0,w
  8349  0CFB  083E               	movwf	(memcpy@n)
  8350  0CFC  00B4               	movf	1+(??_EusartGetRxBuffer+0)+0,w
  8351  0CFD  083F               	movwf	(memcpy@n+1)
  8352  0CFE  00B5               	fcall	_memcpy
  8353  0CFF  318C  2409  318C   	line	92
  8354                           ;EUSART.c: 92:     }
  8355                           	goto	l4778
  8356  0D02  2D1E               	line	93
  8357                           ;EUSART.c: 93:     else
  8358                           	
  8359                           l742:	
  8360  0D03                     	line	95
  8361                           	
  8362                           l4774:	
  8363  0D03                     ;EUSART.c: 94:     {;EUSART.c: 95:         *oNbOfByteReceived = iDataSize;
  8364                           	movlb 0	; select bank0
  8365  0D03  0020               	movf	(EusartGetRxBuffer@iDataSize),w
  8366  0D04  083C               	movwf	(??_EusartGetRxBuffer+0)+0
  8367  0D05  00BE               	movf	(EusartGetRxBuffer@oNbOfByteReceived),w
  8368  0D06  083D               	movwf	fsr1l
  8369  0D07  0086               	clrf fsr1h	
  8370  0D08  0187               	
  8371                           	movf	(??_EusartGetRxBuffer+0)+0,w
  8372  0D09  083E               	movwf	indf1
  8373  0D0A  0081               	line	96
  8374                           	
  8375                           l4776:	
  8376  0D0B                     ;EUSART.c: 96:          memcpy(oData,gEusartRXBuffer,iDataSize);
  8377                           	movf	(EusartGetRxBuffer@oData),w
  8378  0D0B  0840               	movwf	(memcpy@d1)
  8379  0D0C  00B0               	movlw	0x0
  8380  0D0D  3000               
  8381                           	movwf	(memcpy@d1+1)
  8382  0D0E  00B1               	movlw	low(_gEusartRXBuffer)
  8383  0D0F  3034               	movwf	(memcpy@s1)
  8384  0D10  00B2               	movlw	high(_gEusartRXBuffer)
  8385  0D11  3002               	movwf	(memcpy@s1+1)
  8386  0D12  00B3               	movf	(EusartGetRxBuffer@iDataSize),w
  8387  0D13  083C               	movwf	(??_EusartGetRxBuffer+0)+0
  8388  0D14  00BE               	clrf	(??_EusartGetRxBuffer+0)+0+1
  8389  0D15  01BF               	movf	0+(??_EusartGetRxBuffer+0)+0,w
  8390  0D16  083E               	movwf	(memcpy@n)
  8391  0D17  00B4               	movf	1+(??_EusartGetRxBuffer+0)+0,w
  8392  0D18  083F               	movwf	(memcpy@n+1)
  8393  0D19  00B5               	fcall	_memcpy
  8394  0D1A  318C  2409  318C   	goto	l4778
  8395  0D1D  2D1E               	line	97
  8396                           ;EUSART.c: 97:     }
  8397                           	
  8398                           l743:	
  8399  0D1E                     	line	98
  8400                           	
  8401                           l4778:	
  8402  0D1E                     ;EUSART.c: 98:     gEusartRXBufferIndex=0;
  8403                           	movlb 0	; select bank0
  8404  0D1E  0020               	clrf	(_gEusartRXBufferIndex)
  8405  0D1F  01D0               	line	102
  8406                           	
  8407                           l744:	
  8408  0D20                     	return
  8409  0D20  0008               	opt stack 0
  8410                           GLOBAL	__end_of_EusartGetRxBuffer
  8411                           	__end_of_EusartGetRxBuffer:
  8412  0D21                     	signat	_EusartGetRxBuffer,12409
  8413                           	global	_EusartGetNbByteReceived
  8414                           
  8415 ;; *************** function _EusartGetNbByteReceived *****************
  8416 ;; Defined at:
  8417 ;;		line 81 in file "EUSART.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;		None
  8420 ;; Auto vars:     Size  Location     Type
  8421 ;;		None
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  1    wreg      unsigned char 
  8424 ;; Registers used:
  8425 ;;		wreg
  8426 ;; Tracked objects:
  8427 ;;		On entry : 0/0
  8428 ;;		On exit  : 0/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8435 ;;Total ram usage:        0 bytes
  8436 ;; Hardware stack levels used:    1
  8437 ;; Hardware stack levels required when called:    6
  8438 ;; This function calls:
  8439 ;;		Nothing
  8440 ;; This function is called by:
  8441 ;;		_Esp8266Entrypoint
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  8445                           	line	81
  8446                           global __ptext24
  8447                           __ptext24:	;psect for function _EusartGetNbByteReceived
  8448  0A79                     psect	text24
  8449                           	file	"EUSART.c"
  8450                           	line	81
  8451                           	global	__size_of_EusartGetNbByteReceived
  8452                           	__size_of_EusartGetNbByteReceived	equ	__end_of_EusartGetNbByteReceived-_EusartGetNbByte
                                 Received
  8453  0004                     	
  8454                           _EusartGetNbByteReceived:	
  8455  0A79                     ;incstack = 0
  8456                           	opt	stack 8
  8457                           ; Regs used in _EusartGetNbByteReceived: [wreg]
  8458                           	line	83
  8459                           	
  8460                           l4764:	
  8461  0A79                     ;EUSART.c: 83:     return gEusartRXBufferIndex;
  8462                           	movlb 0	; select bank0
  8463  0A79  0020               	movf	(_gEusartRXBufferIndex),w
  8464  0A7A  0850               	goto	l739
  8465  0A7B  2A7C               	
  8466                           l4766:	
  8467  0A7C                     	line	84
  8468                           	
  8469                           l739:	
  8470  0A7C                     	return
  8471  0A7C  0008               	opt stack 0
  8472                           GLOBAL	__end_of_EusartGetNbByteReceived
  8473                           	__end_of_EusartGetNbByteReceived:
  8474  0A7D                     	signat	_EusartGetNbByteReceived,89
  8475                           	global	_Esp8266SetNetworkParameters
  8476                           
  8477 ;; *************** function _Esp8266SetNetworkParameters *****************
  8478 ;; Defined at:
  8479 ;;		line 21 in file "ESP8266.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;  iWifiNetwork    2    0[BANK1 ] PTR unsigned char 
  8482 ;;		 -> STR_9(7), 
  8483 ;;  iWifiPasswor    2    2[BANK1 ] PTR unsigned char 
  8484 ;;		 -> STR_10(9), 
  8485 ;;  iChannel        1    4[BANK1 ] unsigned char 
  8486 ;;  iHidden         1    5[BANK1 ] unsigned char 
  8487 ;; Auto vars:     Size  Location     Type
  8488 ;;  wCommand       70    0[BANK7 ] unsigned char [70]
  8489 ;;  wNumber         3   70[BANK7 ] unsigned char [3]
  8490 ;;  wCommandSize    2   73[BANK7 ] int 
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  2    0[BANK1 ] int 
  8493 ;; Registers used:
  8494 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8500 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
       0       0
  8501 ;;      Locals:         0       0       0       0       0       0       0       0      75       0       0       0       
       0       0
  8502 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
       0       0
  8503 ;;      Totals:         0       0      14       0       0       0       0       0      75       0       0       0       
       0       0
  8504 ;;Total ram usage:       89 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:    8
  8507 ;; This function calls:
  8508 ;;		_Send_UART_Data
  8509 ;;		___awdiv
  8510 ;;		___awmod
  8511 ;;		_strcat
  8512 ;;		_strcpy
  8513 ;;		_strlen
  8514 ;; This function is called by:
  8515 ;;		_Esp8266Entrypoint
  8516 ;; This function uses a non-reentrant model
  8517 ;;
  8518                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  8519                           	file	"ESP8266.c"
  8520                           	line	21
  8521                           global __ptext25
  8522                           __ptext25:	;psect for function _Esp8266SetNetworkParameters
  8523  039E                     psect	text25
  8524                           	file	"ESP8266.c"
  8525                           	line	21
  8526                           	global	__size_of_Esp8266SetNetworkParameters
  8527                           	__size_of_Esp8266SetNetworkParameters	equ	__end_of_Esp8266SetNetworkParameters-_Esp8266
                                 SetNetworkParameters
  8528  0120                     	
  8529                           _Esp8266SetNetworkParameters:	
  8530  039E                     ;incstack = 0
  8531                           	opt	stack 6
  8532                           ; Regs used in _Esp8266SetNetworkParameters: [wreg-fsr1h+status,2+status,0+pclath+cstack
                                 ]
  8533                           	line	24
  8534                           	
  8535                           l4724:	
  8536  039E                     ;ESP8266.c: 21: int Esp8266SetNetworkParameters(char* iWifiNetworkName, char* iWifiPassw
                                 ord, uint8_t iChannel, uint8_t iHidden);ESP8266.c: 22: {;ESP8266.c: 23:     int wCommand
                                 SizeReturn;;ESP8266.c: 24:     if(iChannel > 11 || (strlen("AT+CWSAP=\"\",\"\",,") + str
                                 len(iWifiNetworkName) + strlen(iWifiPassword) + 2 + 1) > 70 )
  8537                           	movlw	low(0Ch)
  8538  039E  300C               	movlb 1	; select bank1
  8539  039F  0021               	subwf	(Esp8266SetNetworkParameters@iChannel)^080h,w
  8540  03A0  0224               	skipnc
  8541  03A1  1803               	goto	u3291
  8542  03A2  2BA4               	goto	u3290
  8543  03A3  2BA5               u3291:
  8544  03A4                     	goto	l4728
  8545  03A4  2BED               u3290:
  8546  03A5                     	
  8547                           l4726:	
  8548  03A5                     	movlw	low(((STR_1)|8000h))
  8549  03A5  3000               	movlb 0	; select bank0
  8550  03A6  0020               	movwf	(strlen@s)
  8551  03A7  00B0               	movlw	high(((STR_1)|8000h))
  8552  03A8  3090               	movwf	((strlen@s))+1
  8553  03A9  00B1               	fcall	_strlen
  8554  03AA  318B  2342  3183   	movlb 0	; select bank0
  8555  03AD  0020               	movf	(0+?_strlen),w
  8556  03AE  0830               	movlb 1	; select bank1
  8557  03AF  0021               	movwf	(??_Esp8266SetNetworkParameters+0)^080h+0
  8558  03B0  00A6               	movlb 0	; select bank0
  8559  03B1  0020               	movf	(1+?_strlen),w
  8560  03B2  0831               	movlb 1	; select bank1
  8561  03B3  0021               	movwf	((??_Esp8266SetNetworkParameters+0)^080h+0+1)
  8562  03B4  00A7               	movf	(Esp8266SetNetworkParameters@iWifiNetworkName+1)^080h,w
  8563  03B5  0821               	movlb 0	; select bank0
  8564  03B6  0020               	movwf	(strlen@s+1)
  8565  03B7  00B1               	movlb 1	; select bank1
  8566  03B8  0021               	movf	(Esp8266SetNetworkParameters@iWifiNetworkName)^080h,w
  8567  03B9  0820               	movlb 0	; select bank0
  8568  03BA  0020               	movwf	(strlen@s)
  8569  03BB  00B0               	fcall	_strlen
  8570  03BC  318B  2342  3183   	movlb 0	; select bank0
  8571  03BF  0020               	movf	(0+(?_strlen)),w
  8572  03C0  0830               	movlb 1	; select bank1
  8573  03C1  0021               	addwf	0+(??_Esp8266SetNetworkParameters+0)^080h+0,w
  8574  03C2  0726               	movwf	(??_Esp8266SetNetworkParameters+2)^080h+0
  8575  03C3  00A8               	movlb 0	; select bank0
  8576  03C4  0020               	movf	(1+(?_strlen)),w
  8577  03C5  0831               	movlb 1	; select bank1
  8578  03C6  0021               	addwfc	1+(??_Esp8266SetNetworkParameters+0)^080h+0,w
  8579  03C7  3D27               	movwf	1+(??_Esp8266SetNetworkParameters+2)^080h+0
  8580  03C8  00A9               	movf	(Esp8266SetNetworkParameters@iWifiPassword+1)^080h,w
  8581  03C9  0823               	movlb 0	; select bank0
  8582  03CA  0020               	movwf	(strlen@s+1)
  8583  03CB  00B1               	movlb 1	; select bank1
  8584  03CC  0021               	movf	(Esp8266SetNetworkParameters@iWifiPassword)^080h,w
  8585  03CD  0822               	movlb 0	; select bank0
  8586  03CE  0020               	movwf	(strlen@s)
  8587  03CF  00B0               	fcall	_strlen
  8588  03D0  318B  2342  3183   	movlb 0	; select bank0
  8589  03D3  0020               	movf	(0+(?_strlen)),w
  8590  03D4  0830               	movlb 1	; select bank1
  8591  03D5  0021               	addwf	0+(??_Esp8266SetNetworkParameters+2)^080h+0,w
  8592  03D6  0728               	movwf	(??_Esp8266SetNetworkParameters+4)^080h+0
  8593  03D7  00AA               	movlb 0	; select bank0
  8594  03D8  0020               	movf	(1+(?_strlen)),w
  8595  03D9  0831               	movlb 1	; select bank1
  8596  03DA  0021               	addwfc	1+(??_Esp8266SetNetworkParameters+2)^080h+0,w
  8597  03DB  3D29               	movwf	1+(??_Esp8266SetNetworkParameters+4)^080h+0
  8598  03DC  00AB               	movf	0+(??_Esp8266SetNetworkParameters+4)^080h+0,w
  8599  03DD  082A               	addlw	03h
  8600  03DE  3E03               	movwf	(??_Esp8266SetNetworkParameters+6)^080h+0
  8601  03DF  00AC               	movlw	0
  8602  03E0  3000               	addwfc	1+(??_Esp8266SetNetworkParameters+4)^080h+0,w
  8603  03E1  3D2B               	movwf	1+(??_Esp8266SetNetworkParameters+6)^080h+0
  8604  03E2  00AD               	movlw	0
  8605  03E3  3000               	subwf	1+(??_Esp8266SetNetworkParameters+6)^080h+0,w
  8606  03E4  022D               	movlw	047h
  8607  03E5  3047               	skipnz
  8608  03E6  1903               	subwf	0+(??_Esp8266SetNetworkParameters+6)^080h+0,w
  8609  03E7  022C               	skipc
  8610  03E8  1C03               	goto	u3301
  8611  03E9  2BEB               	goto	u3300
  8612  03EA  2BEC               u3301:
  8613  03EB                     	goto	l4734
  8614  03EB  2BF2               u3300:
  8615  03EC                     	goto	l4728
  8616  03EC  2BED               	
  8617                           l643:	
  8618  03ED                     	line	26
  8619                           	
  8620                           l4728:	
  8621  03ED                     ;ESP8266.c: 25:     {;ESP8266.c: 26:         return 0;
  8622                           	clrf	(?_Esp8266SetNetworkParameters)^080h
  8623  03ED  01A0               	clrf	(?_Esp8266SetNetworkParameters+1)^080h
  8624  03EE  01A1               	goto	l644
  8625  03EF  2CBD               	
  8626                           l4730:	
  8627  03F0                     	goto	l644
  8628  03F0  2CBD               	line	27
  8629                           	
  8630                           l4732:	
  8631  03F1                     ;ESP8266.c: 27:     }
  8632                           	goto	l644
  8633  03F1  2CBD               	line	28
  8634                           ;ESP8266.c: 28:     else
  8635                           	
  8636                           l641:	
  8637  03F2                     	line	31
  8638                           	
  8639                           l4734:	
  8640  03F2                     ;ESP8266.c: 29:     {;ESP8266.c: 30:         char wCommand[70];;ESP8266.c: 31:         s
                                 trcpy(wCommand,"AT+CWSAP=\"");
  8641                           	movlw	low(((STR_2)|8000h))
  8642  03F2  301F               	movlb 0	; select bank0
  8643  03F3  0020               	movwf	(strcpy@src)
  8644  03F4  00B6               	movlw	high(((STR_2)|8000h))
  8645  03F5  3090               	movwf	((strcpy@src))+1
  8646  03F6  00B7               	movlw	(low(Esp8266SetNetworkParameters@wCommand|((0x3)<<8)))&0ffh
  8647  03F7  30A0               	fcall	_strcpy
  8648  03F8  318B  2366  3183   	line	32
  8649                           ;ESP8266.c: 32:         strcat(wCommand,iWifiNetworkName);
  8650                           	movlb 1	; select bank1
  8651  03FB  0021               	movf	(Esp8266SetNetworkParameters@iWifiNetworkName+1)^080h,w
  8652  03FC  0821               	movlb 0	; select bank0
  8653  03FD  0020               	movwf	(strcat@src+1)
  8654  03FE  00BF               	movlb 1	; select bank1
  8655  03FF  0021               	movf	(Esp8266SetNetworkParameters@iWifiNetworkName)^080h,w
  8656  0400  0820               	movlb 0	; select bank0
  8657  0401  0020               	movwf	(strcat@src)
  8658  0402  00BE               	movlw	(low(Esp8266SetNetworkParameters@wCommand|((0x3)<<8)))&0ffh
  8659  0403  30A0               	fcall	_strcat
  8660  0404  318B  2329  3183   	line	33
  8661                           ;ESP8266.c: 33:         strcat(wCommand,"\",\"");
  8662                           	movlw	low(((STR_3)|8000h))
  8663  0407  305A               	movlb 0	; select bank0
  8664  0408  0020               	movwf	(strcat@src)
  8665  0409  00BE               	movlw	high(((STR_3)|8000h))
  8666  040A  3090               	movwf	((strcat@src))+1
  8667  040B  00BF               	movlw	(low(Esp8266SetNetworkParameters@wCommand|((0x3)<<8)))&0ffh
  8668  040C  30A0               	fcall	_strcat
  8669  040D  318B  2329  3183   	line	34
  8670                           ;ESP8266.c: 34:         strcat(wCommand,iWifiPassword);
  8671                           	movlb 1	; select bank1
  8672  0410  0021               	movf	(Esp8266SetNetworkParameters@iWifiPassword+1)^080h,w
  8673  0411  0823               	movlb 0	; select bank0
  8674  0412  0020               	movwf	(strcat@src+1)
  8675  0413  00BF               	movlb 1	; select bank1
  8676  0414  0021               	movf	(Esp8266SetNetworkParameters@iWifiPassword)^080h,w
  8677  0415  0822               	movlb 0	; select bank0
  8678  0416  0020               	movwf	(strcat@src)
  8679  0417  00BE               	movlw	(low(Esp8266SetNetworkParameters@wCommand|((0x3)<<8)))&0ffh
  8680  0418  30A0               	fcall	_strcat
  8681  0419  318B  2329  3183   	line	35
  8682                           ;ESP8266.c: 35:         strcat(wCommand,"\",");
  8683                           	movlw	low(((STR_4)|8000h))
  8684  041C  305E               	movlb 0	; select bank0
  8685  041D  0020               	movwf	(strcat@src)
  8686  041E  00BE               	movlw	high(((STR_4)|8000h))
  8687  041F  3090               	movwf	((strcat@src))+1
  8688  0420  00BF               	movlw	(low(Esp8266SetNetworkParameters@wCommand|((0x3)<<8)))&0ffh
  8689  0421  30A0               	fcall	_strcat
  8690  0422  318B  2329  3183   	line	38
  8691                           	
  8692                           l4736:	
  8693  0425                     ;ESP8266.c: 37:         char wNumber[3];;ESP8266.c: 38:         if(iChannel > 9 )
  8694                           	movlw	low(0Ah)
  8695  0425  300A               	movlb 1	; select bank1
  8696  0426  0021               	subwf	(Esp8266SetNetworkParameters@iChannel)^080h,w
  8697  0427  0224               	skipc
  8698  0428  1C03               	goto	u3311
  8699  0429  2C2B               	goto	u3310
  8700  042A  2C2C               u3311:
  8701  042B                     	goto	l4744
  8702  042B  2C68               u3310:
  8703  042C                     	line	40
  8704                           	
  8705                           l4738:	
  8706  042C                     ;ESP8266.c: 39:         {;ESP8266.c: 40:             wNumber[0] = '0' + (iChannel / 10);
                                 
  8707                           	movlw	0Ah
  8708  042C  300A               	movlb 0	; select bank0
  8709  042D  0020               	movwf	(___awdiv@divisor)
  8710  042E  00B0               	movlw	0
  8711  042F  3000               	movwf	((___awdiv@divisor))+1
  8712  0430  00B1               	movlb 1	; select bank1
  8713  0431  0021               	movf	(Esp8266SetNetworkParameters@iChannel)^080h,w
  8714  0432  0824               	movwf	(??_Esp8266SetNetworkParameters+0)^080h+0
  8715  0433  00A6               	clrf	(??_Esp8266SetNetworkParameters+0)^080h+0+1
  8716  0434  01A7               	movf	0+(??_Esp8266SetNetworkParameters+0)^080h+0,w
  8717  0435  0826               	movlb 0	; select bank0
  8718  0436  0020               	movwf	(___awdiv@dividend)
  8719  0437  00B2               	movlb 1	; select bank1
  8720  0438  0021               	movf	1+(??_Esp8266SetNetworkParameters+0)^080h+0,w
  8721  0439  0827               	movlb 0	; select bank0
  8722  043A  0020               	movwf	(___awdiv@dividend+1)
  8723  043B  00B3               	fcall	___awdiv
  8724  043C  3187  2768  3183   	movlb 0	; select bank0
  8725  043F  0020               	movf	(0+(?___awdiv)),w
  8726  0440  0830               	addlw	030h
  8727  0441  3E30               	movlb 1	; select bank1
  8728  0442  0021               	movwf	(??_Esp8266SetNetworkParameters+2)^080h+0
  8729  0443  00A8               	movf	(??_Esp8266SetNetworkParameters+2)^080h+0,w
  8730  0444  0828               	movlb 7	; select bank7
  8731  0445  0027               	movwf	(Esp8266SetNetworkParameters@wNumber)^0380h
  8732  0446  00E6               	line	41
  8733                           ;ESP8266.c: 41:             iChannel = iChannel % 10;
  8734                           	movlw	0Ah
  8735  0447  300A               	movlb 0	; select bank0
  8736  0448  0020               	movwf	(___awmod@divisor)
  8737  0449  00B0               	movlw	0
  8738  044A  3000               	movwf	((___awmod@divisor))+1
  8739  044B  00B1               	movlb 1	; select bank1
  8740  044C  0021               	movf	(Esp8266SetNetworkParameters@iChannel)^080h,w
  8741  044D  0824               	movwf	(??_Esp8266SetNetworkParameters+0)^080h+0
  8742  044E  00A6               	clrf	(??_Esp8266SetNetworkParameters+0)^080h+0+1
  8743  044F  01A7               	movf	0+(??_Esp8266SetNetworkParameters+0)^080h+0,w
  8744  0450  0826               	movlb 0	; select bank0
  8745  0451  0020               	movwf	(___awmod@dividend)
  8746  0452  00B2               	movlb 1	; select bank1
  8747  0453  0021               	movf	1+(??_Esp8266SetNetworkParameters+0)^080h+0,w
  8748  0454  0827               	movlb 0	; select bank0
  8749  0455  0020               	movwf	(___awmod@dividend+1)
  8750  0456  00B3               	fcall	___awmod
  8751  0457  318E  2619  3183   	movlb 0	; select bank0
  8752  045A  0020               	movf	(0+(?___awmod)),w
  8753  045B  0830               	movlb 1	; select bank1
  8754  045C  0021               	movwf	(??_Esp8266SetNetworkParameters+2)^080h+0
  8755  045D  00A8               	movf	(??_Esp8266SetNetworkParameters+2)^080h+0,w
  8756  045E  0828               	movwf	(Esp8266SetNetworkParameters@iChannel)^080h
  8757  045F  00A4               	line	42
  8758                           	
  8759                           l4740:	
  8760  0460                     ;ESP8266.c: 42:             wNumber[1] = '0' + iChannel;
  8761                           	movf	(Esp8266SetNetworkParameters@iChannel)^080h,w
  8762  0460  0824               	addlw	030h
  8763  0461  3E30               	movwf	(??_Esp8266SetNetworkParameters+0)^080h+0
  8764  0462  00A6               	movf	(??_Esp8266SetNetworkParameters+0)^080h+0,w
  8765  0463  0826               	movlb 7	; select bank7
  8766  0464  0027               	movwf	0+(Esp8266SetNetworkParameters@wNumber)^0380h+01h
  8767  0465  00E7               	line	43
  8768                           	
  8769                           l4742:	
  8770  0466                     ;ESP8266.c: 43:             wNumber[2] = 0;
  8771                           	clrf	0+(Esp8266SetNetworkParameters@wNumber)^0380h+02h
  8772  0466  01E8               	line	44
  8773                           ;ESP8266.c: 44:         }
  8774                           	goto	l4748
  8775  0467  2C71               	line	45
  8776                           ;ESP8266.c: 45:         else
  8777                           	
  8778                           l646:	
  8779  0468                     	line	47
  8780                           	
  8781                           l4744:	
  8782  0468                     ;ESP8266.c: 46:         {;ESP8266.c: 47:             wNumber[0] = '0' + iChannel;
  8783                           	movlb 1	; select bank1
  8784  0468  0021               	movf	(Esp8266SetNetworkParameters@iChannel)^080h,w
  8785  0469  0824               	addlw	030h
  8786  046A  3E30               	movwf	(??_Esp8266SetNetworkParameters+0)^080h+0
  8787  046B  00A6               	movf	(??_Esp8266SetNetworkParameters+0)^080h+0,w
  8788  046C  0826               	movlb 7	; select bank7
  8789  046D  0027               	movwf	(Esp8266SetNetworkParameters@wNumber)^0380h
  8790  046E  00E6               	line	48
  8791                           	
  8792                           l4746:	
  8793  046F                     ;ESP8266.c: 48:             wNumber[1] = 0;
  8794                           	clrf	0+(Esp8266SetNetworkParameters@wNumber)^0380h+01h
  8795  046F  01E7               	goto	l4748
  8796  0470  2C71               	line	49
  8797                           ;ESP8266.c: 49:         }
  8798                           	
  8799                           l647:	
  8800  0471                     	line	50
  8801                           	
  8802                           l4748:	
  8803  0471                     ;ESP8266.c: 50:         strcat(wCommand,wNumber);
  8804                           	movlw	low(Esp8266SetNetworkParameters@wNumber)
  8805  0471  30E6               	movlb 0	; select bank0
  8806  0472  0020               	movwf	(strcat@src)
  8807  0473  00BE               	movlw	high(Esp8266SetNetworkParameters@wNumber)
  8808  0474  3003               	movwf	(strcat@src+1)
  8809  0475  00BF               	movlw	(low(Esp8266SetNetworkParameters@wCommand|((0x3)<<8)))&0ffh
  8810  0476  30A0               	fcall	_strcat
  8811  0477  318B  2329  3183   	line	51
  8812                           	
  8813                           l4750:	
  8814  047A                     ;ESP8266.c: 51:         if(iHidden == eHideSSID)
  8815                           	movlb 1	; select bank1
  8816  047A  0021               	movf	((Esp8266SetNetworkParameters@iHidden)^080h),w
  8817  047B  0825               	btfss	status,2
  8818  047C  1D03               	goto	u3321
  8819  047D  2C7F               	goto	u3320
  8820  047E  2C80               u3321:
  8821  047F                     	goto	l4754
  8822  047F  2C8A               u3320:
  8823  0480                     	line	53
  8824                           	
  8825                           l4752:	
  8826  0480                     ;ESP8266.c: 52:         {;ESP8266.c: 53:           strcat(wCommand,",1\r\n");
  8827                           	movlw	low(((STR_5)|8000h))
  8828  0480  3055               	movlb 0	; select bank0
  8829  0481  0020               	movwf	(strcat@src)
  8830  0482  00BE               	movlw	high(((STR_5)|8000h))
  8831  0483  3090               	movwf	((strcat@src))+1
  8832  0484  00BF               	movlw	(low(Esp8266SetNetworkParameters@wCommand|((0x3)<<8)))&0ffh
  8833  0485  30A0               	fcall	_strcat
  8834  0486  318B  2329  3183   	line	54
  8835                           ;ESP8266.c: 54:         }
  8836                           	goto	l4756
  8837  0489  2C94               	line	55
  8838                           ;ESP8266.c: 55:         else
  8839                           	
  8840                           l648:	
  8841  048A                     	line	57
  8842                           	
  8843                           l4754:	
  8844  048A                     ;ESP8266.c: 56:         {;ESP8266.c: 57:           strcat(wCommand,",0\r\n");
  8845                           	movlw	low(((STR_6)|8000h))
  8846  048A  3050               	movlb 0	; select bank0
  8847  048B  0020               	movwf	(strcat@src)
  8848  048C  00BE               	movlw	high(((STR_6)|8000h))
  8849  048D  3090               	movwf	((strcat@src))+1
  8850  048E  00BF               	movlw	(low(Esp8266SetNetworkParameters@wCommand|((0x3)<<8)))&0ffh
  8851  048F  30A0               	fcall	_strcat
  8852  0490  318B  2329  3183   	goto	l4756
  8853  0493  2C94               	line	58
  8854                           ;ESP8266.c: 58:         }
  8855                           	
  8856                           l649:	
  8857  0494                     	line	59
  8858                           	
  8859                           l4756:	
  8860  0494                     ;ESP8266.c: 59:         wCommandSizeReturn = strlen(wCommand);
  8861                           	movlw	low(Esp8266SetNetworkParameters@wCommand)
  8862  0494  30A0               	movlb 0	; select bank0
  8863  0495  0020               	movwf	(strlen@s)
  8864  0496  00B0               	movlw	high(Esp8266SetNetworkParameters@wCommand)
  8865  0497  3003               	movwf	(strlen@s+1)
  8866  0498  00B1               	fcall	_strlen
  8867  0499  318B  2342  3183   	movlb 0	; select bank0
  8868  049C  0020               	movf	(1+(?_strlen)),w
  8869  049D  0831               	movlb 7	; select bank7
  8870  049E  0027               	movwf	(Esp8266SetNetworkParameters@wCommandSizeReturn+1)^0380h
  8871  049F  00EA               	movlb 0	; select bank0
  8872  04A0  0020               	movf	(0+(?_strlen)),w
  8873  04A1  0830               	movlb 7	; select bank7
  8874  04A2  0027               	movwf	(Esp8266SetNetworkParameters@wCommandSizeReturn)^0380h
  8875  04A3  00E9               	line	60
  8876                           	
  8877                           l4758:	
  8878  04A4                     ;ESP8266.c: 60:         Send_UART_Data((uint8_t*)wCommand,wCommandSizeReturn);
  8879                           	movlw	low(Esp8266SetNetworkParameters@wCommand)
  8880  04A4  30A0               	movlb 0	; select bank0
  8881  04A5  0020               	movwf	(Send_UART_Data@iData)
  8882  04A6  00BC               	movlw	high(Esp8266SetNetworkParameters@wCommand)
  8883  04A7  3003               	movwf	(Send_UART_Data@iData+1)
  8884  04A8  00BD               	movlb 7	; select bank7
  8885  04A9  0027               	movf	(Esp8266SetNetworkParameters@wCommandSizeReturn)^0380h,w
  8886  04AA  0869               	movlb 1	; select bank1
  8887  04AB  0021               	movwf	(??_Esp8266SetNetworkParameters+0)^080h+0
  8888  04AC  00A6               	movf	(??_Esp8266SetNetworkParameters+0)^080h+0,w
  8889  04AD  0826               	movlb 0	; select bank0
  8890  04AE  0020               	movwf	(Send_UART_Data@iData_Length)
  8891  04AF  00BE               	fcall	_Send_UART_Data
  8892  04B0  318B  238B  3183   	line	61
  8893                           	
  8894                           l4760:	
  8895  04B3                     ;ESP8266.c: 61:         return wCommandSizeReturn;
  8896                           	movlb 7	; select bank7
  8897  04B3  0027               	movf	(Esp8266SetNetworkParameters@wCommandSizeReturn+1)^0380h,w
  8898  04B4  086A               	movlb 1	; select bank1
  8899  04B5  0021               	movwf	(?_Esp8266SetNetworkParameters+1)^080h
  8900  04B6  00A1               	movlb 7	; select bank7
  8901  04B7  0027               	movf	(Esp8266SetNetworkParameters@wCommandSizeReturn)^0380h,w
  8902  04B8  0869               	movlb 1	; select bank1
  8903  04B9  0021               	movwf	(?_Esp8266SetNetworkParameters)^080h
  8904  04BA  00A0               	goto	l644
  8905  04BB  2CBD               	
  8906                           l4762:	
  8907  04BC                     	goto	l644
  8908  04BC  2CBD               	line	62
  8909                           ;ESP8266.c: 62:     }
  8910                           	
  8911                           l645:	
  8912  04BD                     	line	63
  8913                           	
  8914                           l644:	
  8915  04BD                     	return
  8916  04BD  0008               	opt stack 0
  8917                           GLOBAL	__end_of_Esp8266SetNetworkParameters
  8918                           	__end_of_Esp8266SetNetworkParameters:
  8919  04BE                     	signat	_Esp8266SetNetworkParameters,16506
  8920                           	global	_strcat
  8921                           
  8922 ;; *************** function _strcat *****************
  8923 ;; Defined at:
  8924 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  8925 ;; Parameters:    Size  Location     Type
  8926 ;;  dest            1    wreg     PTR unsigned char 
  8927 ;;		 -> Esp8266SetNetworkParameters@wCommand(70), 
  8928 ;;  src             2   30[BANK0 ] PTR const unsigned char 
  8929 ;;		 -> STR_10(9), STR_9(7), STR_6(5), STR_5(5), 
  8930 ;;		 -> Esp8266SetNetworkParameters@wNumber(3), STR_4(3), STR_3(4), 
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;  dest            1   34[BANK0 ] PTR unsigned char 
  8933 ;;		 -> Esp8266SetNetworkParameters@wCommand(70), 
  8934 ;; Return value:  Size  Location     Type
  8935 ;;                  1    wreg      PTR unsigned char 
  8936 ;; Registers used:
  8937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8938 ;; Tracked objects:
  8939 ;;		On entry : 0/0
  8940 ;;		On exit  : 0/0
  8941 ;;		Unchanged: 0/0
  8942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8943 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8944 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8945 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8946 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  8947 ;;Total ram usage:        5 bytes
  8948 ;; Hardware stack levels used:    1
  8949 ;; Hardware stack levels required when called:    7
  8950 ;; This function calls:
  8951 ;;		_strcpy
  8952 ;;		_strlen
  8953 ;; This function is called by:
  8954 ;;		_Esp8266SetNetworkParameters
  8955 ;;		_AddTrace
  8956 ;; This function uses a non-reentrant model
  8957 ;;
  8958                           psect	text26,local,class=CODE,delta=2,merge=1,group=2
  8959                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  8960                           	line	3
  8961                           global __ptext26
  8962                           __ptext26:	;psect for function _strcat
  8963  0B29                     psect	text26
  8964                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  8965                           	line	3
  8966                           	global	__size_of_strcat
  8967                           	__size_of_strcat	equ	__end_of_strcat-_strcat
  8968  0019                     	
  8969                           _strcat:	
  8970  0B29                     ;incstack = 0
  8971                           	opt	stack 6
  8972                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8973                           ;strcat@dest stored from wreg
  8974                           	movlb 0	; select bank0
  8975  0B29  0020               	movwf	(strcat@dest)
  8976  0B2A  00C2               	line	5
  8977                           	
  8978                           l4546:	
  8979  0B2B                     	movf	(strcat@src+1),w
  8980  0B2B  083F               	movwf	(strcpy@src+1)
  8981  0B2C  00B7               	movf	(strcat@src),w
  8982  0B2D  083E               	movwf	(strcpy@src)
  8983  0B2E  00B6               	movf	(strcat@dest),w
  8984  0B2F  0842               	movwf	(strlen@s)
  8985  0B30  00B0               	movlw	0x3
  8986  0B31  3003               
  8987                           	movwf	(strlen@s+1)
  8988  0B32  00B1               	fcall	_strlen
  8989  0B33  318B  2342  318B   	movlb 0	; select bank0
  8990  0B36  0020               	movf	(0+?_strlen),w
  8991  0B37  0830               	movwf	(??_strcat+0)+0
  8992  0B38  00C0               	movf	(1+?_strlen),w
  8993  0B39  0831               	movwf	((??_strcat+0)+0+1)
  8994  0B3A  00C1               	movf	(strcat@dest),w
  8995  0B3B  0842               	addwf	0+(??_strcat+0)+0,w
  8996  0B3C  0740               	fcall	_strcpy
  8997  0B3D  318B  2366  318B   	goto	l1214
  8998  0B40  2B41               	line	6
  8999                           	
  9000                           l4548:	
  9001  0B41                     	line	7
  9002                           ;	Return value of _strcat is never used
  9003                           	
  9004                           l1214:	
  9005  0B41                     	return
  9006  0B41  0008               	opt stack 0
  9007                           GLOBAL	__end_of_strcat
  9008                           	__end_of_strcat:
  9009  0B42                     	signat	_strcat,8313
  9010                           	global	_strlen
  9011                           
  9012 ;; *************** function _strlen *****************
  9013 ;; Defined at:
  9014 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  9015 ;; Parameters:    Size  Location     Type
  9016 ;;  s               2   16[BANK0 ] PTR const unsigned char 
  9017 ;;		 -> STR_10(9), STR_9(7), Esp8266SetNetworkParameters@wCommand(70), STR_1(17), 
  9018 ;; Auto vars:     Size  Location     Type
  9019 ;;  a               2   20[BANK0 ] PTR const unsigned char 
  9020 ;;		 -> STR_10(9), STR_9(7), Esp8266SetNetworkParameters@wCommand(70), STR_1(17), 
  9021 ;; Return value:  Size  Location     Type
  9022 ;;                  2   16[BANK0 ] unsigned int 
  9023 ;; Registers used:
  9024 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9025 ;; Tracked objects:
  9026 ;;		On entry : 0/0
  9027 ;;		On exit  : 0/0
  9028 ;;		Unchanged: 0/0
  9029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9030 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9031 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9032 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9033 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  9034 ;;Total ram usage:        6 bytes
  9035 ;; Hardware stack levels used:    1
  9036 ;; Hardware stack levels required when called:    6
  9037 ;; This function calls:
  9038 ;;		Nothing
  9039 ;; This function is called by:
  9040 ;;		_Esp8266SetNetworkParameters
  9041 ;;		_strcat
  9042 ;;		_PrintLog
  9043 ;;		_AddTrace
  9044 ;; This function uses a non-reentrant model
  9045 ;;
  9046                           psect	text27,local,class=CODE,delta=2,merge=1,group=2
  9047                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  9048                           	line	12
  9049                           global __ptext27
  9050                           __ptext27:	;psect for function _strlen
  9051  0B42                     psect	text27
  9052                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  9053                           	line	12
  9054                           	global	__size_of_strlen
  9055                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  9056  0024                     	
  9057                           _strlen:	
  9058  0B42                     ;incstack = 0
  9059                           	opt	stack 7
  9060                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  9061                           	line	14
  9062                           	
  9063                           l4388:	
  9064  0B42                     	movlb 0	; select bank0
  9065  0B42  0020               	movf	(strlen@s+1),w
  9066  0B43  0831               	movwf	(strlen@a+1)
  9067  0B44  00B5               	movf	(strlen@s),w
  9068  0B45  0830               	movwf	(strlen@a)
  9069  0B46  00B4               	line	16
  9070                           	goto	l4392
  9071  0B47  2B4D               	
  9072                           l1224:	
  9073  0B48                     	line	17
  9074                           	
  9075                           l4390:	
  9076  0B48                     	movlw	01h
  9077  0B48  3001               	addwf	(strlen@s),f
  9078  0B49  07B0               	movlw	0
  9079  0B4A  3000               	addwfc	(strlen@s+1),f
  9080  0B4B  3DB1               	goto	l4392
  9081  0B4C  2B4D               	line	18
  9082                           	
  9083                           l1223:	
  9084  0B4D                     	line	16
  9085                           	
  9086                           l4392:	
  9087  0B4D                     	movf	(strlen@s),w
  9088  0B4D  0830               	movwf	fsr0l
  9089  0B4E  0084               	movf	((strlen@s+1)),w
  9090  0B4F  0831               	movwf	fsr0h
  9091  0B50  0085               	moviw	fsr0++
  9092  0B51  0012               	btfss	status,2
  9093  0B52  1D03               	goto	u2891
  9094  0B53  2B55               	goto	u2890
  9095  0B54  2B56               u2891:
  9096  0B55                     	goto	l4390
  9097  0B55  2B48               u2890:
  9098  0B56                     	goto	l4394
  9099  0B56  2B57               	
  9100                           l1225:	
  9101  0B57                     	line	25
  9102                           	
  9103                           l4394:	
  9104  0B57                     	comf	(strlen@a),w
  9105  0B57  0934               	movwf	(??_strlen+0)+0
  9106  0B58  00B2               	comf	(strlen@a+1),w
  9107  0B59  0935               	movwf	((??_strlen+0)+0+1)
  9108  0B5A  00B3               	incf	(??_strlen+0)+0,f
  9109  0B5B  0AB2               	skipnz
  9110  0B5C  1903               	incf	((??_strlen+0)+0+1),f
  9111  0B5D  0AB3               	movf	(strlen@s),w
  9112  0B5E  0830               	addwf	0+(??_strlen+0)+0,w
  9113  0B5F  0732               	movwf	(?_strlen)
  9114  0B60  00B0               	movf	(strlen@s+1),w
  9115  0B61  0831               	addwfc	1+(??_strlen+0)+0,w
  9116  0B62  3D33               	movwf	1+(?_strlen)
  9117  0B63  00B1               	goto	l1226
  9118  0B64  2B65               	
  9119                           l4396:	
  9120  0B65                     	line	26
  9121                           	
  9122                           l1226:	
  9123  0B65                     	return
  9124  0B65  0008               	opt stack 0
  9125                           GLOBAL	__end_of_strlen
  9126                           	__end_of_strlen:
  9127  0B66                     	signat	_strlen,4218
  9128                           	global	_strcpy
  9129                           
  9130 ;; *************** function _strcpy *****************
  9131 ;; Defined at:
  9132 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;  dest            1    wreg     PTR unsigned char 
  9135 ;;		 -> Esp8266SetNetworkParameters@wCommand(70), 
  9136 ;;  src             2   22[BANK0 ] PTR const unsigned char 
  9137 ;;		 -> STR_10(9), STR_9(7), STR_6(5), STR_5(5), 
  9138 ;;		 -> Esp8266SetNetworkParameters@wNumber(3), STR_4(3), STR_3(4), STR_2(11), 
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;  dest            1   29[BANK0 ] PTR unsigned char 
  9141 ;;		 -> Esp8266SetNetworkParameters@wCommand(70), 
  9142 ;;  s               2   26[BANK0 ] PTR const unsigned char 
  9143 ;;		 -> STR_10(9), STR_9(7), STR_6(5), STR_5(5), 
  9144 ;;		 -> Esp8266SetNetworkParameters@wNumber(3), STR_4(3), STR_3(4), STR_2(11), 
  9145 ;;  d               1   28[BANK0 ] PTR unsigned char 
  9146 ;;		 -> Esp8266SetNetworkParameters@wCommand(70), 
  9147 ;; Return value:  Size  Location     Type
  9148 ;;                  1    wreg      PTR unsigned char 
  9149 ;; Registers used:
  9150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9151 ;; Tracked objects:
  9152 ;;		On entry : 0/0
  9153 ;;		On exit  : 0/0
  9154 ;;		Unchanged: 0/0
  9155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9156 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9157 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  9158 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9159 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
  9160 ;;Total ram usage:        8 bytes
  9161 ;; Hardware stack levels used:    1
  9162 ;; Hardware stack levels required when called:    6
  9163 ;; This function calls:
  9164 ;;		Nothing
  9165 ;; This function is called by:
  9166 ;;		_Esp8266SetNetworkParameters
  9167 ;;		_strcat
  9168 ;; This function uses a non-reentrant model
  9169 ;;
  9170                           psect	text28,local,class=CODE,delta=2,merge=1,group=2
  9171                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  9172                           	line	7
  9173                           global __ptext28
  9174                           __ptext28:	;psect for function _strcpy
  9175  0B66                     psect	text28
  9176                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  9177                           	line	7
  9178                           	global	__size_of_strcpy
  9179                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  9180  0025                     	
  9181                           _strcpy:	
  9182  0B66                     ;incstack = 0
  9183                           	opt	stack 7
  9184                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  9185                           ;strcpy@dest stored from wreg
  9186                           	movlb 0	; select bank0
  9187  0B66  0020               	movwf	(strcpy@dest)
  9188  0B67  00BD               	line	13
  9189                           	
  9190                           l4450:	
  9191  0B68                     	movf	(strcpy@src+1),w
  9192  0B68  0837               	movwf	(strcpy@s+1)
  9193  0B69  00BB               	movf	(strcpy@src),w
  9194  0B6A  0836               	movwf	(strcpy@s)
  9195  0B6B  00BA               	line	14
  9196                           	movf	(strcpy@dest),w
  9197  0B6C  083D               	movwf	(??_strcpy+0)+0
  9198  0B6D  00B8               	movf	(??_strcpy+0)+0,w
  9199  0B6E  0838               	movwf	(strcpy@d)
  9200  0B6F  00BC               	line	15
  9201                           	goto	l4452
  9202  0B70  2B72               	
  9203                           l1218:	
  9204  0B71                     	goto	l4452
  9205  0B71  2B72               	
  9206                           l1217:	
  9207  0B72                     	
  9208                           l4452:	
  9209  0B72                     	movf	(strcpy@d),w
  9210  0B72  083C               	movwf	fsr1l
  9211  0B73  0086               	movlw 3	; select bank6/7
  9212  0B74  3003               	movwf fsr1h	
  9213  0B75  0087               	
  9214                           	incf	(strcpy@d),f
  9215  0B76  0ABC               	movf	(strcpy@s+1),w
  9216  0B77  083B               	movwf	(??_strcpy+0)+0+1
  9217  0B78  00B9               	movf	(strcpy@s),w
  9218  0B79  083A               	movwf	(??_strcpy+0)+0
  9219  0B7A  00B8               	incf	(strcpy@s),f
  9220  0B7B  0ABA               	skipnz
  9221  0B7C  1903               	incf	(strcpy@s+1),f
  9222  0B7D  0ABB               	movf	0+(??_strcpy+0)+0,w
  9223  0B7E  0838               	movwf	fsr0l
  9224  0B7F  0084               	movf	(1+(??_strcpy+0)+0),w
  9225  0B80  0839               	movwf	fsr0h
  9226  0B81  0085               	movf	indf0,w ;code access
  9227  0B82  0800               	movwi	[0]fsr1
  9228  0B83  3FC0               	movf	wreg
  9229  0B84  0889               	btfss	status,2
  9230  0B85  1D03               	goto	u2931
  9231  0B86  2B88               	goto	u2930
  9232  0B87  2B89               u2931:
  9233  0B88                     	goto	l4452
  9234  0B88  2B72               u2930:
  9235  0B89                     	goto	l1220
  9236  0B89  2B8A               	
  9237                           l1219:	
  9238  0B8A                     	line	18
  9239                           ;	Return value of _strcpy is never used
  9240                           	
  9241                           l1220:	
  9242  0B8A                     	return
  9243  0B8A  0008               	opt stack 0
  9244                           GLOBAL	__end_of_strcpy
  9245                           	__end_of_strcpy:
  9246  0B8B                     	signat	_strcpy,8313
  9247                           	global	___awmod
  9248                           
  9249 ;; *************** function ___awmod *****************
  9250 ;; Defined at:
  9251 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;  divisor         2   16[BANK0 ] int 
  9254 ;;  dividend        2   18[BANK0 ] int 
  9255 ;; Auto vars:     Size  Location     Type
  9256 ;;  sign            1   22[BANK0 ] unsigned char 
  9257 ;;  counter         1   21[BANK0 ] unsigned char 
  9258 ;; Return value:  Size  Location     Type
  9259 ;;                  2   16[BANK0 ] int 
  9260 ;; Registers used:
  9261 ;;		wreg, status,2, status,0
  9262 ;; Tracked objects:
  9263 ;;		On entry : 0/0
  9264 ;;		On exit  : 0/0
  9265 ;;		Unchanged: 0/0
  9266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9267 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  9268 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9269 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9270 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
  9271 ;;Total ram usage:        7 bytes
  9272 ;; Hardware stack levels used:    1
  9273 ;; Hardware stack levels required when called:    6
  9274 ;; This function calls:
  9275 ;;		Nothing
  9276 ;; This function is called by:
  9277 ;;		_uint8_tToa
  9278 ;;		_Esp8266SetNetworkParameters
  9279 ;;		_printEM1812
  9280 ;; This function uses a non-reentrant model
  9281 ;;
  9282                           psect	text29,local,class=CODE,delta=2,merge=1,group=1
  9283                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  9284                           	line	5
  9285                           global __ptext29
  9286                           __ptext29:	;psect for function ___awmod
  9287  0E19                     psect	text29
  9288                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  9289                           	line	5
  9290                           	global	__size_of___awmod
  9291                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  9292  005E                     	
  9293                           ___awmod:	
  9294  0E19                     ;incstack = 0
  9295                           	opt	stack 7
  9296                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9297                           	line	12
  9298                           	
  9299                           l4606:	
  9300  0E19                     	movlb 0	; select bank0
  9301  0E19  0020               	clrf	(___awmod@sign)
  9302  0E1A  01B6               	line	13
  9303                           	
  9304                           l4608:	
  9305  0E1B                     	btfss	(___awmod@dividend+1),7
  9306  0E1B  1FB3               	goto	u3151
  9307  0E1C  2E1E               	goto	u3150
  9308  0E1D  2E1F               u3151:
  9309  0E1E                     	goto	l4614
  9310  0E1E  2E27               u3150:
  9311  0E1F                     	line	14
  9312                           	
  9313                           l4610:	
  9314  0E1F                     	comf	(___awmod@dividend),f
  9315  0E1F  09B2               	comf	(___awmod@dividend+1),f
  9316  0E20  09B3               	incf	(___awmod@dividend),f
  9317  0E21  0AB2               	skipnz
  9318  0E22  1903               	incf	(___awmod@dividend+1),f
  9319  0E23  0AB3               	line	15
  9320                           	
  9321                           l4612:	
  9322  0E24                     	clrf	(___awmod@sign)
  9323  0E24  01B6               	incf	(___awmod@sign),f
  9324  0E25  0AB6               	goto	l4614
  9325  0E26  2E27               	line	16
  9326                           	
  9327                           l904:	
  9328  0E27                     	line	17
  9329                           	
  9330                           l4614:	
  9331  0E27                     	btfss	(___awmod@divisor+1),7
  9332  0E27  1FB1               	goto	u3161
  9333  0E28  2E2A               	goto	u3160
  9334  0E29  2E2B               u3161:
  9335  0E2A                     	goto	l4618
  9336  0E2A  2E31               u3160:
  9337  0E2B                     	line	18
  9338                           	
  9339                           l4616:	
  9340  0E2B                     	comf	(___awmod@divisor),f
  9341  0E2B  09B0               	comf	(___awmod@divisor+1),f
  9342  0E2C  09B1               	incf	(___awmod@divisor),f
  9343  0E2D  0AB0               	skipnz
  9344  0E2E  1903               	incf	(___awmod@divisor+1),f
  9345  0E2F  0AB1               	goto	l4618
  9346  0E30  2E31               	
  9347                           l905:	
  9348  0E31                     	line	19
  9349                           	
  9350                           l4618:	
  9351  0E31                     	movf	((___awmod@divisor)),w
  9352  0E31  0830               iorwf	((___awmod@divisor+1)),w
  9353  0E32  0431               	btfsc	status,2
  9354  0E33  1903               	goto	u3171
  9355  0E34  2E36               	goto	u3170
  9356  0E35  2E37               u3171:
  9357  0E36                     	goto	l4636
  9358  0E36  2E66               u3170:
  9359  0E37                     	line	20
  9360                           	
  9361                           l4620:	
  9362  0E37                     	clrf	(___awmod@counter)
  9363  0E37  01B5               	incf	(___awmod@counter),f
  9364  0E38  0AB5               	line	21
  9365                           	goto	l4626
  9366  0E39  2E44               	
  9367                           l908:	
  9368  0E3A                     	line	22
  9369                           	
  9370                           l4622:	
  9371  0E3A                     	movlw	01h
  9372  0E3A  3001               	
  9373                           u3185:
  9374  0E3B                     	lslf	(___awmod@divisor),f
  9375  0E3B  35B0               	rlf	(___awmod@divisor+1),f
  9376  0E3C  0DB1               	decfsz	wreg,f
  9377  0E3D  0B89               	goto	u3185
  9378  0E3E  2E3B               	line	23
  9379                           	
  9380                           l4624:	
  9381  0E3F                     	movlw	low(01h)
  9382  0E3F  3001               	movwf	(??___awmod+0)+0
  9383  0E40  00B4               	movf	(??___awmod+0)+0,w
  9384  0E41  0834               	addwf	(___awmod@counter),f
  9385  0E42  07B5               	goto	l4626
  9386  0E43  2E44               	line	24
  9387                           	
  9388                           l907:	
  9389  0E44                     	line	21
  9390                           	
  9391                           l4626:	
  9392  0E44                     	btfss	(___awmod@divisor+1),(15)&7
  9393  0E44  1FB1               	goto	u3191
  9394  0E45  2E47               	goto	u3190
  9395  0E46  2E48               u3191:
  9396  0E47                     	goto	l4622
  9397  0E47  2E3A               u3190:
  9398  0E48                     	goto	l4628
  9399  0E48  2E4A               	
  9400                           l909:	
  9401  0E49                     	goto	l4628
  9402  0E49  2E4A               	line	25
  9403                           	
  9404                           l910:	
  9405  0E4A                     	line	26
  9406                           	
  9407                           l4628:	
  9408  0E4A                     	movf	(___awmod@divisor+1),w
  9409  0E4A  0831               	subwf	(___awmod@dividend+1),w
  9410  0E4B  0233               	skipz
  9411  0E4C  1D03               	goto	u3205
  9412  0E4D  2E50               	movf	(___awmod@divisor),w
  9413  0E4E  0830               	subwf	(___awmod@dividend),w
  9414  0E4F  0232               u3205:
  9415  0E50                     	skipc
  9416  0E50  1C03               	goto	u3201
  9417  0E51  2E53               	goto	u3200
  9418  0E52  2E54               u3201:
  9419  0E53                     	goto	l4632
  9420  0E53  2E59               u3200:
  9421  0E54                     	line	27
  9422                           	
  9423                           l4630:	
  9424  0E54                     	movf	(___awmod@divisor),w
  9425  0E54  0830               	subwf	(___awmod@dividend),f
  9426  0E55  02B2               	movf	(___awmod@divisor+1),w
  9427  0E56  0831               	subwfb	(___awmod@dividend+1),f
  9428  0E57  3BB3               	goto	l4632
  9429  0E58  2E59               	
  9430                           l911:	
  9431  0E59                     	line	28
  9432                           	
  9433                           l4632:	
  9434  0E59                     	movlw	01h
  9435  0E59  3001               	
  9436                           u3215:
  9437  0E5A                     	lsrf	(___awmod@divisor+1),f
  9438  0E5A  36B1               	rrf	(___awmod@divisor),f
  9439  0E5B  0CB0               	decfsz	wreg,f
  9440  0E5C  0B89               	goto	u3215
  9441  0E5D  2E5A               	line	29
  9442                           	
  9443                           l4634:	
  9444  0E5E                     	movlw	01h
  9445  0E5E  3001               	subwf	(___awmod@counter),f
  9446  0E5F  02B5               	btfss	status,2
  9447  0E60  1D03               	goto	u3221
  9448  0E61  2E63               	goto	u3220
  9449  0E62  2E64               u3221:
  9450  0E63                     	goto	l4628
  9451  0E63  2E4A               u3220:
  9452  0E64                     	goto	l4636
  9453  0E64  2E66               	
  9454                           l912:	
  9455  0E65                     	goto	l4636
  9456  0E65  2E66               	line	30
  9457                           	
  9458                           l906:	
  9459  0E66                     	line	31
  9460                           	
  9461                           l4636:	
  9462  0E66                     	movf	((___awmod@sign)),w
  9463  0E66  0836               	btfsc	status,2
  9464  0E67  1903               	goto	u3231
  9465  0E68  2E6A               	goto	u3230
  9466  0E69  2E6B               u3231:
  9467  0E6A                     	goto	l4640
  9468  0E6A  2E71               u3230:
  9469  0E6B                     	line	32
  9470                           	
  9471                           l4638:	
  9472  0E6B                     	comf	(___awmod@dividend),f
  9473  0E6B  09B2               	comf	(___awmod@dividend+1),f
  9474  0E6C  09B3               	incf	(___awmod@dividend),f
  9475  0E6D  0AB2               	skipnz
  9476  0E6E  1903               	incf	(___awmod@dividend+1),f
  9477  0E6F  0AB3               	goto	l4640
  9478  0E70  2E71               	
  9479                           l913:	
  9480  0E71                     	line	33
  9481                           	
  9482                           l4640:	
  9483  0E71                     	movf	(___awmod@dividend+1),w
  9484  0E71  0833               	movwf	(?___awmod+1)
  9485  0E72  00B1               	movf	(___awmod@dividend),w
  9486  0E73  0832               	movwf	(?___awmod)
  9487  0E74  00B0               	goto	l914
  9488  0E75  2E76               	
  9489                           l4642:	
  9490  0E76                     	line	34
  9491                           	
  9492                           l914:	
  9493  0E76                     	return
  9494  0E76  0008               	opt stack 0
  9495                           GLOBAL	__end_of___awmod
  9496                           	__end_of___awmod:
  9497  0E77                     	signat	___awmod,8314
  9498                           	global	___awdiv
  9499                           
  9500 ;; *************** function ___awdiv *****************
  9501 ;; Defined at:
  9502 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  9503 ;; Parameters:    Size  Location     Type
  9504 ;;  divisor         2   16[BANK0 ] int 
  9505 ;;  dividend        2   18[BANK0 ] int 
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;  quotient        2   23[BANK0 ] int 
  9508 ;;  sign            1   22[BANK0 ] unsigned char 
  9509 ;;  counter         1   21[BANK0 ] unsigned char 
  9510 ;; Return value:  Size  Location     Type
  9511 ;;                  2   16[BANK0 ] int 
  9512 ;; Registers used:
  9513 ;;		wreg, status,2, status,0
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9519 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  9520 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  9521 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9522 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0
  9523 ;;Total ram usage:        9 bytes
  9524 ;; Hardware stack levels used:    1
  9525 ;; Hardware stack levels required when called:    6
  9526 ;; This function calls:
  9527 ;;		Nothing
  9528 ;; This function is called by:
  9529 ;;		_uint8_tToa
  9530 ;;		_Esp8266SetNetworkParameters
  9531 ;;		_printEM1812
  9532 ;; This function uses a non-reentrant model
  9533 ;;
  9534                           psect	text30,local,class=CODE,delta=2,merge=1,group=1
  9535                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  9536                           	line	5
  9537                           global __ptext30
  9538                           __ptext30:	;psect for function ___awdiv
  9539  0768                     psect	text30
  9540                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  9541                           	line	5
  9542                           	global	__size_of___awdiv
  9543                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  9544  006A                     	
  9545                           ___awdiv:	
  9546  0768                     ;incstack = 0
  9547                           	opt	stack 7
  9548                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9549                           	line	13
  9550                           	
  9551                           l4562:	
  9552  0768                     	movlb 0	; select bank0
  9553  0768  0020               	clrf	(___awdiv@sign)
  9554  0769  01B6               	line	14
  9555                           	
  9556                           l4564:	
  9557  076A                     	btfss	(___awdiv@divisor+1),7
  9558  076A  1FB1               	goto	u3051
  9559  076B  2F6D               	goto	u3050
  9560  076C  2F6E               u3051:
  9561  076D                     	goto	l4570
  9562  076D  2F76               u3050:
  9563  076E                     	line	15
  9564                           	
  9565                           l4566:	
  9566  076E                     	comf	(___awdiv@divisor),f
  9567  076E  09B0               	comf	(___awdiv@divisor+1),f
  9568  076F  09B1               	incf	(___awdiv@divisor),f
  9569  0770  0AB0               	skipnz
  9570  0771  1903               	incf	(___awdiv@divisor+1),f
  9571  0772  0AB1               	line	16
  9572                           	
  9573                           l4568:	
  9574  0773                     	clrf	(___awdiv@sign)
  9575  0773  01B6               	incf	(___awdiv@sign),f
  9576  0774  0AB6               	goto	l4570
  9577  0775  2F76               	line	17
  9578                           	
  9579                           l891:	
  9580  0776                     	line	18
  9581                           	
  9582                           l4570:	
  9583  0776                     	btfss	(___awdiv@dividend+1),7
  9584  0776  1FB3               	goto	u3061
  9585  0777  2F79               	goto	u3060
  9586  0778  2F7A               u3061:
  9587  0779                     	goto	l4576
  9588  0779  2F84               u3060:
  9589  077A                     	line	19
  9590                           	
  9591                           l4572:	
  9592  077A                     	comf	(___awdiv@dividend),f
  9593  077A  09B2               	comf	(___awdiv@dividend+1),f
  9594  077B  09B3               	incf	(___awdiv@dividend),f
  9595  077C  0AB2               	skipnz
  9596  077D  1903               	incf	(___awdiv@dividend+1),f
  9597  077E  0AB3               	line	20
  9598                           	
  9599                           l4574:	
  9600  077F                     	movlw	low(01h)
  9601  077F  3001               	movwf	(??___awdiv+0)+0
  9602  0780  00B4               	movf	(??___awdiv+0)+0,w
  9603  0781  0834               	xorwf	(___awdiv@sign),f
  9604  0782  06B6               	goto	l4576
  9605  0783  2F84               	line	21
  9606                           	
  9607                           l892:	
  9608  0784                     	line	22
  9609                           	
  9610                           l4576:	
  9611  0784                     	clrf	(___awdiv@quotient)
  9612  0784  01B7               	clrf	(___awdiv@quotient+1)
  9613  0785  01B8               	line	23
  9614                           	
  9615                           l4578:	
  9616  0786                     	movf	((___awdiv@divisor)),w
  9617  0786  0830               iorwf	((___awdiv@divisor+1)),w
  9618  0787  0431               	btfsc	status,2
  9619  0788  1903               	goto	u3071
  9620  0789  2F8B               	goto	u3070
  9621  078A  2F8C               u3071:
  9622  078B                     	goto	l4598
  9623  078B  2FC1               u3070:
  9624  078C                     	line	24
  9625                           	
  9626                           l4580:	
  9627  078C                     	clrf	(___awdiv@counter)
  9628  078C  01B5               	incf	(___awdiv@counter),f
  9629  078D  0AB5               	line	25
  9630                           	goto	l4586
  9631  078E  2F99               	
  9632                           l895:	
  9633  078F                     	line	26
  9634                           	
  9635                           l4582:	
  9636  078F                     	movlw	01h
  9637  078F  3001               	
  9638                           u3085:
  9639  0790                     	lslf	(___awdiv@divisor),f
  9640  0790  35B0               	rlf	(___awdiv@divisor+1),f
  9641  0791  0DB1               	decfsz	wreg,f
  9642  0792  0B89               	goto	u3085
  9643  0793  2F90               	line	27
  9644                           	
  9645                           l4584:	
  9646  0794                     	movlw	low(01h)
  9647  0794  3001               	movwf	(??___awdiv+0)+0
  9648  0795  00B4               	movf	(??___awdiv+0)+0,w
  9649  0796  0834               	addwf	(___awdiv@counter),f
  9650  0797  07B5               	goto	l4586
  9651  0798  2F99               	line	28
  9652                           	
  9653                           l894:	
  9654  0799                     	line	25
  9655                           	
  9656                           l4586:	
  9657  0799                     	btfss	(___awdiv@divisor+1),(15)&7
  9658  0799  1FB1               	goto	u3091
  9659  079A  2F9C               	goto	u3090
  9660  079B  2F9D               u3091:
  9661  079C                     	goto	l4582
  9662  079C  2F8F               u3090:
  9663  079D                     	goto	l4588
  9664  079D  2F9F               	
  9665                           l896:	
  9666  079E                     	goto	l4588
  9667  079E  2F9F               	line	29
  9668                           	
  9669                           l897:	
  9670  079F                     	line	30
  9671                           	
  9672                           l4588:	
  9673  079F                     	movlw	01h
  9674  079F  3001               	
  9675                           u3105:
  9676  07A0                     	lslf	(___awdiv@quotient),f
  9677  07A0  35B7               	rlf	(___awdiv@quotient+1),f
  9678  07A1  0DB8               	decfsz	wreg,f
  9679  07A2  0B89               	goto	u3105
  9680  07A3  2FA0               	line	31
  9681                           	movf	(___awdiv@divisor+1),w
  9682  07A4  0831               	subwf	(___awdiv@dividend+1),w
  9683  07A5  0233               	skipz
  9684  07A6  1D03               	goto	u3115
  9685  07A7  2FAA               	movf	(___awdiv@divisor),w
  9686  07A8  0830               	subwf	(___awdiv@dividend),w
  9687  07A9  0232               u3115:
  9688  07AA                     	skipc
  9689  07AA  1C03               	goto	u3111
  9690  07AB  2FAD               	goto	u3110
  9691  07AC  2FAE               u3111:
  9692  07AD                     	goto	l4594
  9693  07AD  2FB4               u3110:
  9694  07AE                     	line	32
  9695                           	
  9696                           l4590:	
  9697  07AE                     	movf	(___awdiv@divisor),w
  9698  07AE  0830               	subwf	(___awdiv@dividend),f
  9699  07AF  02B2               	movf	(___awdiv@divisor+1),w
  9700  07B0  0831               	subwfb	(___awdiv@dividend+1),f
  9701  07B1  3BB3               	line	33
  9702                           	
  9703                           l4592:	
  9704  07B2                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  9705  07B2  1437               	goto	l4594
  9706  07B3  2FB4               	line	34
  9707                           	
  9708                           l898:	
  9709  07B4                     	line	35
  9710                           	
  9711                           l4594:	
  9712  07B4                     	movlw	01h
  9713  07B4  3001               	
  9714                           u3125:
  9715  07B5                     	lsrf	(___awdiv@divisor+1),f
  9716  07B5  36B1               	rrf	(___awdiv@divisor),f
  9717  07B6  0CB0               	decfsz	wreg,f
  9718  07B7  0B89               	goto	u3125
  9719  07B8  2FB5               	line	36
  9720                           	
  9721                           l4596:	
  9722  07B9                     	movlw	01h
  9723  07B9  3001               	subwf	(___awdiv@counter),f
  9724  07BA  02B5               	btfss	status,2
  9725  07BB  1D03               	goto	u3131
  9726  07BC  2FBE               	goto	u3130
  9727  07BD  2FBF               u3131:
  9728  07BE                     	goto	l4588
  9729  07BE  2F9F               u3130:
  9730  07BF                     	goto	l4598
  9731  07BF  2FC1               	
  9732                           l899:	
  9733  07C0                     	goto	l4598
  9734  07C0  2FC1               	line	37
  9735                           	
  9736                           l893:	
  9737  07C1                     	line	38
  9738                           	
  9739                           l4598:	
  9740  07C1                     	movf	((___awdiv@sign)),w
  9741  07C1  0836               	btfsc	status,2
  9742  07C2  1903               	goto	u3141
  9743  07C3  2FC5               	goto	u3140
  9744  07C4  2FC6               u3141:
  9745  07C5                     	goto	l4602
  9746  07C5  2FCC               u3140:
  9747  07C6                     	line	39
  9748                           	
  9749                           l4600:	
  9750  07C6                     	comf	(___awdiv@quotient),f
  9751  07C6  09B7               	comf	(___awdiv@quotient+1),f
  9752  07C7  09B8               	incf	(___awdiv@quotient),f
  9753  07C8  0AB7               	skipnz
  9754  07C9  1903               	incf	(___awdiv@quotient+1),f
  9755  07CA  0AB8               	goto	l4602
  9756  07CB  2FCC               	
  9757                           l900:	
  9758  07CC                     	line	40
  9759                           	
  9760                           l4602:	
  9761  07CC                     	movf	(___awdiv@quotient+1),w
  9762  07CC  0838               	movwf	(?___awdiv+1)
  9763  07CD  00B1               	movf	(___awdiv@quotient),w
  9764  07CE  0837               	movwf	(?___awdiv)
  9765  07CF  00B0               	goto	l901
  9766  07D0  2FD1               	
  9767                           l4604:	
  9768  07D1                     	line	41
  9769                           	
  9770                           l901:	
  9771  07D1                     	return
  9772  07D1  0008               	opt stack 0
  9773                           GLOBAL	__end_of___awdiv
  9774                           	__end_of___awdiv:
  9775  07D2                     	signat	___awdiv,8314
  9776                           	global	_Send_UART_Data
  9777                           
  9778 ;; *************** function _Send_UART_Data *****************
  9779 ;; Defined at:
  9780 ;;		line 27 in file "EUSART.c"
  9781 ;; Parameters:    Size  Location     Type
  9782 ;;  iData           2   28[BANK0 ] PTR unsigned char 
  9783 ;;		 -> STR_8(14), Esp8266SetNetworkParameters@wCommand(70), 
  9784 ;;  iData_Length    1   30[BANK0 ] unsigned char 
  9785 ;; Auto vars:     Size  Location     Type
  9786 ;;		None
  9787 ;; Return value:  Size  Location     Type
  9788 ;;                  1    wreg      void 
  9789 ;; Registers used:
  9790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9791 ;; Tracked objects:
  9792 ;;		On entry : 0/0
  9793 ;;		On exit  : 0/0
  9794 ;;		Unchanged: 0/0
  9795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9796 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  9797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9798 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9799 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  9800 ;;Total ram usage:        5 bytes
  9801 ;; Hardware stack levels used:    1
  9802 ;; Hardware stack levels required when called:    7
  9803 ;; This function calls:
  9804 ;;		_memcpy
  9805 ;; This function is called by:
  9806 ;;		_Esp8266SetNetworkParameters
  9807 ;;		_Esp8266Entrypoint
  9808 ;; This function uses a non-reentrant model
  9809 ;;
  9810                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
  9811                           	file	"EUSART.c"
  9812                           	line	27
  9813                           global __ptext31
  9814                           __ptext31:	;psect for function _Send_UART_Data
  9815  0B8B                     psect	text31
  9816                           	file	"EUSART.c"
  9817                           	line	27
  9818                           	global	__size_of_Send_UART_Data
  9819                           	__size_of_Send_UART_Data	equ	__end_of_Send_UART_Data-_Send_UART_Data
  9820  0027                     	
  9821                           _Send_UART_Data:	
  9822  0B8B                     ;incstack = 0
  9823                           	opt	stack 7
  9824                           ; Regs used in _Send_UART_Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9825                           	line	29
  9826                           	
  9827                           l4550:	
  9828  0B8B                     ;EUSART.c: 27: void Send_UART_Data( uint8_t* iData, uint8_t iData_Length);EUSART.c: 28: 
                                 {;EUSART.c: 29:     if(gTxTransmitSize != 0 )
  9829                           	movlb 0	; select bank0
  9830  0B8B  0020               	movf	((_gTxTransmitSize)),w
  9831  0B8C  084E               	btfsc	status,2
  9832  0B8D  1903               	goto	u3031
  9833  0B8E  2B90               	goto	u3030
  9834  0B8F  2B91               u3031:
  9835  0B90                     	goto	l4554
  9836  0B90  2B93               u3030:
  9837  0B91                     	goto	l722
  9838  0B91  2BB1               	line	31
  9839                           	
  9840                           l4552:	
  9841  0B92                     ;EUSART.c: 30:     {;EUSART.c: 31:         return;
  9842                           	goto	l722
  9843  0B92  2BB1               	line	32
  9844                           ;EUSART.c: 32:     }
  9845                           	
  9846                           l721:	
  9847  0B93                     	line	33
  9848                           	
  9849                           l4554:	
  9850  0B93                     ;EUSART.c: 33:     if(iData_Length < sizeof(gEusartTXBuffer))
  9851                           	movlw	low(032h)
  9852  0B93  3032               	subwf	(Send_UART_Data@iData_Length),w
  9853  0B94  023E               	skipnc
  9854  0B95  1803               	goto	u3041
  9855  0B96  2B98               	goto	u3040
  9856  0B97  2B99               u3041:
  9857  0B98                     	goto	l722
  9858  0B98  2BB1               u3040:
  9859  0B99                     	line	35
  9860                           	
  9861                           l4556:	
  9862  0B99                     ;EUSART.c: 34:     {;EUSART.c: 35:         gTxReadingPosition = 0;
  9863                           	clrf	(_gTxReadingPosition)
  9864  0B99  01CF               	line	36
  9865                           	
  9866                           l4558:	
  9867  0B9A                     ;EUSART.c: 36:         gTxTransmitSize = iData_Length;
  9868                           	movf	(Send_UART_Data@iData_Length),w
  9869  0B9A  083E               	movwf	(??_Send_UART_Data+0)+0
  9870  0B9B  00BF               	movf	(??_Send_UART_Data+0)+0,w
  9871  0B9C  083F               	movwf	(_gTxTransmitSize)
  9872  0B9D  00CE               	line	37
  9873                           	
  9874                           l4560:	
  9875  0B9E                     ;EUSART.c: 37:         memcpy(gEusartTXBuffer , iData,iData_Length);
  9876                           	movlw	low(_gEusartTXBuffer)
  9877  0B9E  30A0               	movwf	(memcpy@d1)
  9878  0B9F  00B0               	movlw	high(_gEusartTXBuffer)
  9879  0BA0  3002               	movwf	(memcpy@d1+1)
  9880  0BA1  00B1               	movf	(Send_UART_Data@iData+1),w
  9881  0BA2  083D               	movwf	(memcpy@s1+1)
  9882  0BA3  00B3               	movf	(Send_UART_Data@iData),w
  9883  0BA4  083C               	movwf	(memcpy@s1)
  9884  0BA5  00B2               	movf	(Send_UART_Data@iData_Length),w
  9885  0BA6  083E               	movwf	(??_Send_UART_Data+0)+0
  9886  0BA7  00BF               	clrf	(??_Send_UART_Data+0)+0+1
  9887  0BA8  01C0               	movf	0+(??_Send_UART_Data+0)+0,w
  9888  0BA9  083F               	movwf	(memcpy@n)
  9889  0BAA  00B4               	movf	1+(??_Send_UART_Data+0)+0,w
  9890  0BAB  0840               	movwf	(memcpy@n+1)
  9891  0BAC  00B5               	fcall	_memcpy
  9892  0BAD  318C  2409  318B   	goto	l722
  9893  0BB0  2BB1               	line	38
  9894                           ;EUSART.c: 38:     }
  9895                           	
  9896                           l723:	
  9897  0BB1                     	line	40
  9898                           	
  9899                           l722:	
  9900  0BB1                     	return
  9901  0BB1  0008               	opt stack 0
  9902                           GLOBAL	__end_of_Send_UART_Data
  9903                           	__end_of_Send_UART_Data:
  9904  0BB2                     	signat	_Send_UART_Data,8313
  9905                           	global	_memcpy
  9906                           
  9907 ;; *************** function _memcpy *****************
  9908 ;; Defined at:
  9909 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
  9910 ;; Parameters:    Size  Location     Type
  9911 ;;  d1              2   16[BANK0 ] PTR void 
  9912 ;;		 -> gEusartTXBuffer(50), Esp8266Entrypoint@wEspBuffer(50), wI2CTxBuffer(20), EM1812EntryPoint@ReceptionBuffer(8), 
  9913 ;;  s1              2   18[BANK0 ] PTR const void 
  9914 ;;		 -> gEusartRXBuffer(50), STR_8(14), Esp8266SetNetworkParameters@wCommand(70), wI2CRxBuffer(20), 
  9915 ;;		 -> EM1812EntryPoint@SetGetTempCommand(4), 
  9916 ;;  n               2   20[BANK0 ] unsigned int 
  9917 ;; Auto vars:     Size  Location     Type
  9918 ;;  s               2   26[BANK0 ] PTR const unsigned char 
  9919 ;;		 -> gEusartRXBuffer(50), STR_8(14), Esp8266SetNetworkParameters@wCommand(70), wI2CRxBuffer(20), 
  9920 ;;		 -> EM1812EntryPoint@SetGetTempCommand(4), 
  9921 ;;  d               2   24[BANK0 ] PTR unsigned char 
  9922 ;;		 -> gEusartTXBuffer(50), Esp8266Entrypoint@wEspBuffer(50), wI2CTxBuffer(20), EM1812EntryPoint@ReceptionBuffer(8), 
  9923 ;;  tmp             1   23[BANK0 ] unsigned char 
  9924 ;; Return value:  Size  Location     Type
  9925 ;;                  2   16[BANK0 ] PTR void 
  9926 ;; Registers used:
  9927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9928 ;; Tracked objects:
  9929 ;;		On entry : 0/0
  9930 ;;		On exit  : 0/0
  9931 ;;		Unchanged: 0/0
  9932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9933 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  9934 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  9935 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9936 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0
  9937 ;;Total ram usage:       12 bytes
  9938 ;; Hardware stack levels used:    1
  9939 ;; Hardware stack levels required when called:    6
  9940 ;; This function calls:
  9941 ;;		Nothing
  9942 ;; This function is called by:
  9943 ;;		_Send_UART_Data
  9944 ;;		_EusartGetRxBuffer
  9945 ;;		_I2C_SendData
  9946 ;;		_GetNewReceivedData
  9947 ;; This function uses a non-reentrant model
  9948 ;;
  9949                           psect	text32,local,class=CODE,delta=2,merge=1,group=2
  9950                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
  9951                           	line	4
  9952                           global __ptext32
  9953                           __ptext32:	;psect for function _memcpy
  9954  0C09                     psect	text32
  9955                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
  9956                           	line	4
  9957                           	global	__size_of_memcpy
  9958                           	__size_of_memcpy	equ	__end_of_memcpy-_memcpy
  9959  002F                     	
  9960                           _memcpy:	
  9961  0C09                     ;incstack = 0
  9962                           	opt	stack 7
  9963                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
  9964                           	line	11
  9965                           	
  9966                           l4438:	
  9967  0C09                     	movlb 0	; select bank0
  9968  0C09  0020               	movf	(memcpy@s1+1),w
  9969  0C0A  0833               	movwf	(memcpy@s+1)
  9970  0C0B  00BB               	movf	(memcpy@s1),w
  9971  0C0C  0832               	movwf	(memcpy@s)
  9972  0C0D  00BA               	line	12
  9973                           	movf	(memcpy@d1+1),w
  9974  0C0E  0831               	movwf	(memcpy@d+1)
  9975  0C0F  00B9               	movf	(memcpy@d1),w
  9976  0C10  0830               	movwf	(memcpy@d)
  9977  0C11  00B8               	line	13
  9978                           	goto	l4448
  9979  0C12  2C2A               	
  9980                           l1195:	
  9981  0C13                     	line	14
  9982                           	
  9983                           l4440:	
  9984  0C13                     	movf	(memcpy@s),w
  9985  0C13  083A               	movwf	fsr0l
  9986  0C14  0084               	movf	((memcpy@s+1)),w
  9987  0C15  083B               	movwf	fsr0h
  9988  0C16  0085               	movf	indf0,w ;code access
  9989  0C17  0800               	movwf	(??_memcpy+0)+0
  9990  0C18  00B6               	movf	(??_memcpy+0)+0,w
  9991  0C19  0836               	movwf	(memcpy@tmp)
  9992  0C1A  00B7               	
  9993                           l4442:	
  9994  0C1B                     	movlw	01h
  9995  0C1B  3001               	addwf	(memcpy@s),f
  9996  0C1C  07BA               	movlw	0
  9997  0C1D  3000               	addwfc	(memcpy@s+1),f
  9998  0C1E  3DBB               	line	15
  9999                           	
 10000                           l4444:	
 10001  0C1F                     	movf	(memcpy@d),w
 10002  0C1F  0838               	movwf	fsr1l
 10003  0C20  0086               	movf	(memcpy@d+1),w
 10004  0C21  0839               	movwf	fsr1h
 10005  0C22  0087               	movf	(memcpy@tmp),w
 10006  0C23  0837               	movwf	indf1
 10007  0C24  0081               	
 10008                           l4446:	
 10009  0C25                     	movlw	01h
 10010  0C25  3001               	addwf	(memcpy@d),f
 10011  0C26  07B8               	movlw	0
 10012  0C27  3000               	addwfc	(memcpy@d+1),f
 10013  0C28  3DB9               	goto	l4448
 10014  0C29  2C2A               	line	16
 10015                           	
 10016                           l1194:	
 10017  0C2A                     	line	13
 10018                           	
 10019                           l4448:	
 10020  0C2A                     	movlw	01h
 10021  0C2A  3001               	subwf	(memcpy@n),f
 10022  0C2B  02B4               	movlw	0
 10023  0C2C  3000               	subwfb	(memcpy@n+1),f
 10024  0C2D  3BB5               		incf	(((memcpy@n))),w
 10025  0C2E  0A34               	skipz
 10026  0C2F  1D03               	goto	u2921
 10027  0C30  2C35               	incf	(((memcpy@n+1))),w
 10028  0C31  0A35               	btfss	status,2
 10029  0C32  1D03               	goto	u2921
 10030  0C33  2C35               	goto	u2920
 10031  0C34  2C36               u2921:
 10032  0C35                     	goto	l4440
 10033  0C35  2C13               u2920:
 10034  0C36                     	goto	l1197
 10035  0C36  2C37               	
 10036                           l1196:	
 10037  0C37                     	line	18
 10038                           ;	Return value of _memcpy is never used
 10039                           	
 10040                           l1197:	
 10041  0C37                     	return
 10042  0C37  0008               	opt stack 0
 10043                           GLOBAL	__end_of_memcpy
 10044                           	__end_of_memcpy:
 10045  0C38                     	signat	_memcpy,12409
 10046                           	global	_EUSARTInit
 10047                           
 10048 ;; *************** function _EUSARTInit *****************
 10049 ;; Defined at:
 10050 ;;		line 5 in file "EUSART.c"
 10051 ;; Parameters:    Size  Location     Type
 10052 ;;		None
 10053 ;; Auto vars:     Size  Location     Type
 10054 ;;		None
 10055 ;; Return value:  Size  Location     Type
 10056 ;;                  1    wreg      void 
 10057 ;; Registers used:
 10058 ;;		wreg, status,2
 10059 ;; Tracked objects:
 10060 ;;		On entry : 0/0
 10061 ;;		On exit  : 0/0
 10062 ;;		Unchanged: 0/0
 10063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10068 ;;Total ram usage:        0 bytes
 10069 ;; Hardware stack levels used:    1
 10070 ;; Hardware stack levels required when called:    6
 10071 ;; This function calls:
 10072 ;;		Nothing
 10073 ;; This function is called by:
 10074 ;;		_main
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
 10078                           	file	"EUSART.c"
 10079                           	line	5
 10080                           global __ptext33
 10081                           __ptext33:	;psect for function _EUSARTInit
 10082  0AFC                     psect	text33
 10083                           	file	"EUSART.c"
 10084                           	line	5
 10085                           	global	__size_of_EUSARTInit
 10086                           	__size_of_EUSARTInit	equ	__end_of_EUSARTInit-_EUSARTInit
 10087  0015                     	
 10088                           _EUSARTInit:	
 10089  0AFC                     ;incstack = 0
 10090                           	opt	stack 9
 10091                           ; Regs used in _EUSARTInit: [wreg+status,2]
 10092                           	line	9
 10093                           	
 10094                           l4918:	
 10095  0AFC                     ;EUSART.c: 9:   ANSELCbits.ANSC6 = 0;
 10096                           	movlb 3	; select bank3
 10097  0AFC  0023               	bcf	(398)^0180h,6	;volatile
 10098  0AFD  130E               	line	10
 10099                           ;EUSART.c: 10:   ANSELCbits.ANSC7 = 0;
 10100                           	bcf	(398)^0180h,7	;volatile
 10101  0AFE  138E               	line	11
 10102                           ;EUSART.c: 11:   TRISCbits.TRISC6 = 0;
 10103                           	movlb 1	; select bank1
 10104  0AFF  0021               	bcf	(142)^080h,6	;volatile
 10105  0B00  130E               	line	12
 10106                           ;EUSART.c: 12:   TRISCbits.TRISC7 = 1;
 10107                           	bsf	(142)^080h,7	;volatile
 10108  0B01  178E               	line	13
 10109                           	
 10110                           l4920:	
 10111  0B02                     ;EUSART.c: 13:   gEusartRXBufferIndex = 0;
 10112                           	movlb 0	; select bank0
 10113  0B02  0020               	clrf	(_gEusartRXBufferIndex)
 10114  0B03  01D0               	line	15
 10115                           ;EUSART.c: 15:   SPBRGH = 0;
 10116                           	movlb 3	; select bank3
 10117  0B04  0023               	clrf	(412)^0180h	;volatile
 10118  0B05  019C               	line	16
 10119                           	
 10120                           l4922:	
 10121  0B06                     ;EUSART.c: 16:   SPBRGL = 1;
 10122                           	movlw	low(01h)
 10123  0B06  3001               	movwf	(411)^0180h	;volatile
 10124  0B07  009B               	line	17
 10125                           	
 10126                           l4924:	
 10127  0B08                     ;EUSART.c: 17:   ANSELCbits.ANSC6 = 0;
 10128                           	bcf	(398)^0180h,6	;volatile
 10129  0B08  130E               	line	18
 10130                           	
 10131                           l4926:	
 10132  0B09                     ;EUSART.c: 18:   TXSTAbits.TXEN = 1;
 10133                           	bsf	(414)^0180h,5	;volatile
 10134  0B09  169E               	line	19
 10135                           	
 10136                           l4928:	
 10137  0B0A                     ;EUSART.c: 19:   TXSTAbits.SYNC = 0;
 10138                           	bcf	(414)^0180h,4	;volatile
 10139  0B0A  121E               	line	20
 10140                           	
 10141                           l4930:	
 10142  0B0B                     ;EUSART.c: 20:   RCSTAbits.SPEN = 1;
 10143                           	bsf	(413)^0180h,7	;volatile
 10144  0B0B  179D               	line	21
 10145                           	
 10146                           l4932:	
 10147  0B0C                     ;EUSART.c: 21:   PIE1bits.TXIE = 1;
 10148                           	movlb 1	; select bank1
 10149  0B0C  0021               	bsf	(145)^080h,4	;volatile
 10150  0B0D  1611               	line	23
 10151                           	
 10152                           l4934:	
 10153  0B0E                     ;EUSART.c: 23:   PIE1bits.RCIE = 1;
 10154                           	bsf	(145)^080h,5	;volatile
 10155  0B0E  1691               	line	24
 10156                           	
 10157                           l4936:	
 10158  0B0F                     ;EUSART.c: 24:   INTCONbits.PEIE = 1;
 10159                           	bsf	(11),6	;volatile
 10160  0B0F  170B               	line	25
 10161                           	
 10162                           l718:	
 10163  0B10                     	return
 10164  0B10  0008               	opt stack 0
 10165                           GLOBAL	__end_of_EUSARTInit
 10166                           	__end_of_EUSARTInit:
 10167  0B11                     	signat	_EUSARTInit,89
 10168                           	global	_Debounce
 10169                           
 10170 ;; *************** function _Debounce *****************
 10171 ;; Defined at:
 10172 ;;		line 79 in file "161518_temp_main.c"
 10173 ;; Parameters:    Size  Location     Type
 10174 ;;  iSwitch         1    wreg     unsigned char 
 10175 ;;  ioTimer         1   16[BANK0 ] PTR unsigned short 
 10176 ;;		 -> main@wDebounceDown(2), main@wDebounceUp(2), main@wDebounceEnter(2), 
 10177 ;;  swPressed       1   17[BANK0 ] PTR unsigned char 
 10178 ;;		 -> main@wEnterBottonPressed(1), main@wDownBottonPressed(1), main@wUpBottonPressed(1), 
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;  iSwitch         1   20[BANK0 ] unsigned char 
 10181 ;; Return value:  Size  Location     Type
 10182 ;;                  1    wreg      void 
 10183 ;; Registers used:
 10184 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10190 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10191 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10192 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10193 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 10194 ;;Total ram usage:        5 bytes
 10195 ;; Hardware stack levels used:    1
 10196 ;; Hardware stack levels required when called:    6
 10197 ;; This function calls:
 10198 ;;		Nothing
 10199 ;; This function is called by:
 10200 ;;		_main
 10201 ;; This function uses a non-reentrant model
 10202 ;;
 10203                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
 10204                           	file	"161518_temp_main.c"
 10205                           	line	79
 10206                           global __ptext34
 10207                           __ptext34:	;psect for function _Debounce
 10208  0D21                     psect	text34
 10209                           	file	"161518_temp_main.c"
 10210                           	line	79
 10211                           	global	__size_of_Debounce
 10212                           	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 10213  004C                     	
 10214                           _Debounce:	
 10215  0D21                     ;incstack = 0
 10216                           	opt	stack 9
 10217                           ; Regs used in _Debounce: [wreg+fsr1l+fsr1h+status,2+status,0]
 10218                           ;Debounce@iSwitch stored from wreg
 10219                           	movlb 0	; select bank0
 10220  0D21  0020               	movwf	(Debounce@iSwitch)
 10221  0D22  00B4               	line	81
 10222                           	
 10223                           l4902:	
 10224  0D23                     	movf	((Debounce@iSwitch)),w
 10225  0D23  0834               	btfss	status,2
 10226  0D24  1D03               	goto	u3481
 10227  0D25  2D27               	goto	u3480
 10228  0D26  2D28               u3481:
 10229  0D27                     	goto	l4906
 10230  0D27  2D32               u3480:
 10231  0D28                     	line	83
 10232                           	
 10233                           l4904:	
 10234  0D28                     	movf	(Debounce@ioTimer),w
 10235  0D28  0830               	movwf	fsr1l
 10236  0D29  0086               	movlw 1	; select bank2/3
 10237  0D2A  3001               	movwf fsr1h	
 10238  0D2B  0087               	
 10239                           	movlw	01h
 10240  0D2C  3001               	addwf	indf1,f
 10241  0D2D  0781               	addfsr	fsr1,1
 10242  0D2E  3141               	skipnc
 10243  0D2F  1803               	incf	indf1,f
 10244  0D30  0A81               	line	84
 10245                           	goto	l4908
 10246  0D31  2D3A               	line	85
 10247                           	
 10248                           l132:	
 10249  0D32                     	line	87
 10250                           	
 10251                           l4906:	
 10252  0D32                     	movf	(Debounce@ioTimer),w
 10253  0D32  0830               	movwf	fsr1l
 10254  0D33  0086               	movlw 1	; select bank2/3
 10255  0D34  3001               	movwf fsr1h	
 10256  0D35  0087               	
 10257                           	movlw	0
 10258  0D36  3000               	movwi	[0]fsr1
 10259  0D37  3FC0               	movwi	[1]fsr1
 10260  0D38  3FC1               	goto	l4908
 10261  0D39  2D3A               	line	88
 10262                           	
 10263                           l133:	
 10264  0D3A                     	line	89
 10265                           	
 10266                           l4908:	
 10267  0D3A                     	movf	(Debounce@ioTimer),w
 10268  0D3A  0830               	movwf	fsr1l
 10269  0D3B  0086               	movlw 1	; select bank2/3
 10270  0D3C  3001               	movwf fsr1h	
 10271  0D3D  0087               	
 10272                           	moviw	fsr1++
 10273  0D3E  0016               xorlw	208
 10274  0D3F  3AD0               movwf	(??_Debounce+0)+0
 10275  0D40  00B2               moviw	fsr1++
 10276  0D41  0016               xorlw	7
 10277  0D42  3A07               iorwf	(??_Debounce+0)+0
 10278  0D43  04B2               	btfss	status,2
 10279  0D44  1D03               	goto	u3491
 10280  0D45  2D47               	goto	u3490
 10281  0D46  2D48               u3491:
 10282  0D47                     	goto	l4912
 10283  0D47  2D4F               u3490:
 10284  0D48                     	line	91
 10285                           	
 10286                           l4910:	
 10287  0D48                     	movf	(Debounce@swPressed),w
 10288  0D48  0831               	movwf	fsr1l
 10289  0D49  0086               	movlw 1	; select bank2/3
 10290  0D4A  3001               	movwf fsr1h	
 10291  0D4B  0087               	
 10292                           	clrf	indf1
 10293  0D4C  0181               	incf	indf1,f
 10294  0D4D  0A81               	goto	l4912
 10295  0D4E  2D4F               	line	92
 10296                           	
 10297                           l134:	
 10298  0D4F                     	line	93
 10299                           	
 10300                           l4912:	
 10301  0D4F                     	movf	(Debounce@ioTimer),w
 10302  0D4F  0830               	movwf	fsr1l
 10303  0D50  0086               	movlw 1	; select bank2/3
 10304  0D51  3001               	movwf fsr1h	
 10305  0D52  0087               	
 10306                           	moviw	fsr1++
 10307  0D53  0016               xorlw	64
 10308  0D54  3A40               movwf	(??_Debounce+0)+0
 10309  0D55  00B2               moviw	fsr1++
 10310  0D56  0016               xorlw	31
 10311  0D57  3A1F               iorwf	(??_Debounce+0)+0
 10312  0D58  04B2               	btfss	status,2
 10313  0D59  1D03               	goto	u3501
 10314  0D5A  2D5C               	goto	u3500
 10315  0D5B  2D5D               u3501:
 10316  0D5C                     	goto	l136
 10317  0D5C  2D6C               u3500:
 10318  0D5D                     	line	95
 10319                           	
 10320                           l4914:	
 10321  0D5D                     	movf	(Debounce@ioTimer),w
 10322  0D5D  0830               	movwf	fsr1l
 10323  0D5E  0086               	movlw 1	; select bank2/3
 10324  0D5F  3001               	movwf fsr1h	
 10325  0D60  0087               	
 10326                           	movlw	0D1h
 10327  0D61  30D1               	movwi	[0]fsr1
 10328  0D62  3FC0               	movlw	07h
 10329  0D63  3007               	movwi	[1]fsr1
 10330  0D64  3FC1               	line	96
 10331                           	
 10332                           l4916:	
 10333  0D65                     	movf	(Debounce@swPressed),w
 10334  0D65  0831               	movwf	fsr1l
 10335  0D66  0086               	movlw 1	; select bank2/3
 10336  0D67  3001               	movwf fsr1h	
 10337  0D68  0087               	
 10338                           	clrf	indf1
 10339  0D69  0181               	incf	indf1,f
 10340  0D6A  0A81               	goto	l136
 10341  0D6B  2D6C               	line	97
 10342                           	
 10343                           l135:	
 10344  0D6C                     	line	98
 10345                           	
 10346                           l136:	
 10347  0D6C                     	return
 10348  0D6C  0008               	opt stack 0
 10349                           GLOBAL	__end_of_Debounce
 10350                           	__end_of_Debounce:
 10351  0D6D                     	signat	_Debounce,12409
 10352                           	global	_myint
 10353                           
 10354 ;; *************** function _myint *****************
 10355 ;; Defined at:
 10356 ;;		line 361 in file "161518_temp_main.c"
 10357 ;; Parameters:    Size  Location     Type
 10358 ;;		None
 10359 ;; Auto vars:     Size  Location     Type
 10360 ;;  wText           3    6[BANK0 ] unsigned char [3]
 10361 ;;  wText           3   11[BANK0 ] unsigned char [3]
 10362 ;;  wEUSARTError    2   14[BANK0 ] int 
 10363 ;;  wI2CError       2    9[BANK0 ] int 
 10364 ;; Return value:  Size  Location     Type
 10365 ;;                  1    wreg      void 
 10366 ;; Registers used:
 10367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10368 ;; Tracked objects:
 10369 ;;		On entry : 0/0
 10370 ;;		On exit  : 0/0
 10371 ;;		Unchanged: 0/0
 10372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10374 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
 10375 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10376 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
       0       0
 10377 ;;Total ram usage:       11 bytes
 10378 ;; Hardware stack levels used:    1
 10379 ;; Hardware stack levels required when called:    5
 10380 ;; This function calls:
 10381 ;;		_EUSARTInterrupt
 10382 ;;		_TempUpdateRequest
 10383 ;;		i1_lcdWriteText
 10384 ;; This function is called by:
 10385 ;;		Interrupt level 1
 10386 ;; This function uses a non-reentrant model
 10387 ;;
 10388                           psect	intentry,class=CODE,delta=2
 10389                           global __pintentry
 10390                           __pintentry:
 10391  0004                     psect	intentry
 10392                           	file	"161518_temp_main.c"
 10393                           	line	361
 10394                           	global	__size_of_myint
 10395                           	__size_of_myint	equ	__end_of_myint-_myint
 10396  0069                     	
 10397                           _myint:	
 10398  0004                     ;incstack = 0
 10399                           	opt	stack 4
 10400                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
 10401  0004  147E               ; Regs used in _myint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10402                           psect	intentry
 10403                           	pagesel	$
 10404  0005  3180               	line	365
 10405                           	
 10406                           i1l5258:	
 10407  0006                     	movlb 0	; select bank0
 10408  0006  0020               	movf	((myint@wI2CError)),w
 10409  0007  0829               iorwf	((myint@wI2CError+1)),w
 10410  0008  042A               	btfsc	status,2
 10411  0009  1903               	goto	u365_21
 10412  000A  280C               	goto	u365_20
 10413  000B  280D               u365_21:
 10414  000C                     	goto	i1l5268
 10415  000C  281F               u365_20:
 10416  000D                     	line	368
 10417                           	
 10418                           i1l5260:	
 10419  000D                     	movlw	low(069h)
 10420  000D  3069               	movwf	(??_myint+0)+0
 10421  000E  00A5               	movf	(??_myint+0)+0,w
 10422  000F  0825               	movwf	0+(myint@wText)+01h
 10423  0010  00AC               	line	369
 10424                           	
 10425                           i1l5262:	
 10426  0011                     	movf	(myint@wI2CError),w
 10427  0011  0829               	addlw	030h
 10428  0012  3E30               	movwf	(??_myint+0)+0
 10429  0013  00A5               	movf	(??_myint+0)+0,w
 10430  0014  0825               	movwf	0+(myint@wText)+01h
 10431  0015  00AC               	line	370
 10432                           	
 10433                           i1l5264:	
 10434  0016                     	clrf	0+(myint@wText)+02h
 10435  0016  01AD               	line	371
 10436                           	
 10437                           i1l5266:	
 10438  0017                     	movlw	low(myint@wText)
 10439  0017  302B               	movwf	(i1lcdWriteText@iText)
 10440  0018  00A0               	movlw	high(myint@wText)
 10441  0019  3000               	movwf	(i1lcdWriteText@iText+1)
 10442  001A  00A1               	fcall	i1_lcdWriteText
 10443  001B  318B  23B2  3180   	goto	i1l5268
 10444  001E  281F               	line	372
 10445                           	
 10446                           i1l180:	
 10447  001F                     	line	374
 10448                           	
 10449                           i1l5268:	
 10450  001F                     	fcall	_EUSARTInterrupt
 10451  001F  318F  2739  3180   	movf	(1+(?_EUSARTInterrupt)),w
 10452  0022  0871               	movlb 0	; select bank0
 10453  0023  0020               	movwf	(myint@wEUSARTError+1)
 10454  0024  00AF               	movf	(0+(?_EUSARTInterrupt)),w
 10455  0025  0870               	movwf	(myint@wEUSARTError)
 10456  0026  00AE               	line	375
 10457                           	
 10458                           i1l5270:	
 10459  0027                     	movf	((myint@wEUSARTError)),w
 10460  0027  082E               iorwf	((myint@wEUSARTError+1)),w
 10461  0028  042F               	btfsc	status,2
 10462  0029  1903               	goto	u366_21
 10463  002A  282C               	goto	u366_20
 10464  002B  282D               u366_21:
 10465  002C                     	goto	i1l5280
 10466  002C  283F               u366_20:
 10467  002D                     	line	378
 10468                           	
 10469                           i1l5272:	
 10470  002D                     	movlw	low(075h)
 10471  002D  3075               	movwf	(??_myint+0)+0
 10472  002E  00A5               	movf	(??_myint+0)+0,w
 10473  002F  0825               	movwf	(myint@wText_460)
 10474  0030  00A6               	line	379
 10475                           	
 10476                           i1l5274:	
 10477  0031                     	movf	(myint@wEUSARTError),w
 10478  0031  082E               	addlw	030h
 10479  0032  3E30               	movwf	(??_myint+0)+0
 10480  0033  00A5               	movf	(??_myint+0)+0,w
 10481  0034  0825               	movwf	0+(myint@wText_460)+01h
 10482  0035  00A7               	line	380
 10483                           	
 10484                           i1l5276:	
 10485  0036                     	clrf	0+(myint@wText_460)+02h
 10486  0036  01A8               	line	381
 10487                           	
 10488                           i1l5278:	
 10489  0037                     	movlw	low(myint@wText_460)
 10490  0037  3026               	movwf	(i1lcdWriteText@iText)
 10491  0038  00A0               	movlw	high(myint@wText_460)
 10492  0039  3000               	movwf	(i1lcdWriteText@iText+1)
 10493  003A  00A1               	fcall	i1_lcdWriteText
 10494  003B  318B  23B2  3180   	goto	i1l5280
 10495  003E  283F               	line	382
 10496                           	
 10497                           i1l181:	
 10498  003F                     	line	383
 10499                           	
 10500                           i1l5280:	
 10501  003F                     	movlb 0	; select bank0
 10502  003F  0020               	btfss	(17),0	;volatile
 10503  0040  1C11               	goto	u367_21
 10504  0041  2843               	goto	u367_20
 10505  0042  2844               u367_21:
 10506  0043                     	goto	i1l5294
 10507  0043  2860               u367_20:
 10508  0044                     	line	385
 10509                           	
 10510                           i1l5282:	
 10511  0044                     	movlw	low(01h)
 10512  0044  3001               	movwf	(??_myint+0)+0
 10513  0045  00A5               	movf	(??_myint+0)+0,w
 10514  0046  0825               	addwf	(_wTimer1IntCounter),f
 10515  0047  07CC               	line	386
 10516                           	
 10517                           i1l5284:	
 10518  0048                     	bcf	(17),0	;volatile
 10519  0048  1011               	line	388
 10520                           		movlw	7
 10521  0049  3007               	xorwf	((_wTimer1IntCounter)),w
 10522  004A  064C               	btfss	status,2
 10523  004B  1D03               	goto	u368_21
 10524  004C  284E               	goto	u368_20
 10525  004D  284F               u368_21:
 10526  004E                     	goto	i1l5288
 10527  004E  2854               u368_20:
 10528  004F                     	line	390
 10529                           	
 10530                           i1l5286:	
 10531  004F                     	movlw	low(04Ch)
 10532  004F  304C               	movwf	(23)	;volatile
 10533  0050  0097               	line	391
 10534                           	movlw	low(083h)
 10535  0051  3083               	movwf	(22)	;volatile
 10536  0052  0096               	goto	i1l5288
 10537  0053  2854               	line	392
 10538                           	
 10539                           i1l183:	
 10540  0054                     	line	393
 10541                           	
 10542                           i1l5288:	
 10543  0054                     		movlw	8
 10544  0054  3008               	xorwf	((_wTimer1IntCounter)),w
 10545  0055  064C               	btfss	status,2
 10546  0056  1D03               	goto	u369_21
 10547  0057  2859               	goto	u369_20
 10548  0058  285A               u369_21:
 10549  0059                     	goto	i1l5294
 10550  0059  2860               u369_20:
 10551  005A                     	line	395
 10552                           	
 10553                           i1l5290:	
 10554  005A                     	clrf	(_wTimer1IntCounter)
 10555  005A  01CC               	line	396
 10556                           	
 10557                           i1l5292:	
 10558  005B                     	fcall	_TempUpdateRequest
 10559  005B  318A  22EF  3180   	goto	i1l5294
 10560  005E  2860               	line	397
 10561                           	
 10562                           i1l184:	
 10563  005F                     	goto	i1l5294
 10564  005F  2860               	line	398
 10565                           	
 10566                           i1l182:	
 10567  0060                     	line	399
 10568                           	
 10569                           i1l5294:	
 10570  0060                     	btfss	(11),2	;volatile
 10571  0060  1D0B               	goto	u370_21
 10572  0061  2863               	goto	u370_20
 10573  0062  2864               u370_21:
 10574  0063                     	goto	i1l186
 10575  0063  286B               u370_20:
 10576  0064                     	line	401
 10577                           	
 10578                           i1l5296:	
 10579  0064                     	bcf	(11),2	;volatile
 10580  0064  110B               	line	402
 10581                           	
 10582                           i1l5298:	
 10583  0065                     	movlw	low(01h)
 10584  0065  3001               	movlb 0	; select bank0
 10585  0066  0020               	movwf	(??_myint+0)+0
 10586  0067  00A5               	movf	(??_myint+0)+0,w
 10587  0068  0825               	addwf	(_wTimer0Counter),f
 10588  0069  07D8               	goto	i1l186
 10589  006A  286B               	line	403
 10590                           	
 10591                           i1l185:	
 10592  006B                     	line	404
 10593                           	
 10594                           i1l186:	
 10595  006B                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
 10596  006B  107E               	retfie
 10597  006C  0009               	opt stack 0
 10598                           GLOBAL	__end_of_myint
 10599                           	__end_of_myint:
 10600  006D                     	signat	_myint,89
 10601                           	global	i1_lcdWriteText
 10602                           
 10603 ;; *************** function i1_lcdWriteText *****************
 10604 ;; Defined at:
 10605 ;;		line 63 in file "LCD_hd44780u_qy_2004a.c"
 10606 ;; Parameters:    Size  Location     Type
 10607 ;;  iText           2    0[BANK0 ] PTR unsigned char 
 10608 ;;		 -> STR_13(9), Esp8266Entrypoint@wReturnNumber(4), STR_12(6), myint@wText_460(3), 
 10609 ;;		 -> myint@wText(3), 
 10610 ;; Auto vars:     Size  Location     Type
 10611 ;;  lcdWriteText    1   13[COMMON] unsigned char 
 10612 ;; Return value:  Size  Location     Type
 10613 ;;                  1    wreg      void 
 10614 ;; Registers used:
 10615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10616 ;; Tracked objects:
 10617 ;;		On entry : 0/0
 10618 ;;		On exit  : 0/0
 10619 ;;		Unchanged: 0/0
 10620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10621 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10623 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 10624 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 10625 ;;Total ram usage:        6 bytes
 10626 ;; Hardware stack levels used:    1
 10627 ;; Hardware stack levels required when called:    4
 10628 ;; This function calls:
 10629 ;;		i1_writeTxtChk
 10630 ;; This function is called by:
 10631 ;;		_myint
 10632 ;; This function uses a non-reentrant model
 10633 ;;
 10634                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
 10635                           	file	"LCD_hd44780u_qy_2004a.c"
 10636                           	line	63
 10637                           global __ptext36
 10638                           __ptext36:	;psect for function i1_lcdWriteText
 10639  0BB2                     psect	text36
 10640                           	file	"LCD_hd44780u_qy_2004a.c"
 10641                           	line	63
 10642                           	global	__size_ofi1_lcdWriteText
 10643                           	__size_ofi1_lcdWriteText	equ	__end_ofi1_lcdWriteText-i1_lcdWriteText
 10644  002B                     	
 10645                           i1_lcdWriteText:	
 10646  0BB2                     ;incstack = 0
 10647                           	opt	stack 4
 10648                           ; Regs used in i1_lcdWriteText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10649                           	line	65
 10650                           	
 10651                           i1l5048:	
 10652  0BB2                     ;LCD_hd44780u_qy_2004a.c: 63: void lcdWriteText(char *iText);LCD_hd44780u_qy_2004a.c: 64
                                 :  {;LCD_hd44780u_qy_2004a.c: 65:   unsigned char wCharReadingPos = 0;
 10653                           	clrf	(i1lcdWriteText@wCharReadingPos)
 10654  0BB2  01FD               	line	66
 10655                           ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
 10656                           	goto	i1l5054
 10657  0BB3  2BCA               	
 10658                           i1l231:	
 10659  0BB4                     	line	68
 10660                           	
 10661                           i1l5050:	
 10662  0BB4                     ;LCD_hd44780u_qy_2004a.c: 67:   {;LCD_hd44780u_qy_2004a.c: 68:     writeTxtChk(iText[wCh
                                 arReadingPos]);
 10663                           	movlb 0	; select bank0
 10664  0BB4  0020               	movf	(i1lcdWriteText@iText+1),w
 10665  0BB5  0821               	movwf	(??i1_lcdWriteText+0)+0+1
 10666  0BB6  00A3               	movf	(i1lcdWriteText@iText),w
 10667  0BB7  0820               	movwf	(??i1_lcdWriteText+0)+0
 10668  0BB8  00A2               	movf	(i1lcdWriteText@wCharReadingPos),w
 10669  0BB9  087D               	addwf	(??i1_lcdWriteText+0)+0,w
 10670  0BBA  0722               	movwf	fsr0l
 10671  0BBB  0084               	movf	(??i1_lcdWriteText+0)+1,w
 10672  0BBC  0823               	skipnc
 10673  0BBD  1803               	incf	(??i1_lcdWriteText+0)+1,w
 10674  0BBE  0A23               	movwf	fsr0h
 10675  0BBF  0085               
 10676                           	movf	indf0,w ;code access
 10677  0BC0  0800               	fcall	i1_writeTxtChk
 10678  0BC1  3186  26D0  318B   	line	69
 10679                           	
 10680                           i1l5052:	
 10681  0BC4                     ;LCD_hd44780u_qy_2004a.c: 69:     wCharReadingPos++;
 10682                           	movlw	low(01h)
 10683  0BC4  3001               	movlb 0	; select bank0
 10684  0BC5  0020               	movwf	(??i1_lcdWriteText+0)+0
 10685  0BC6  00A2               	movf	(??i1_lcdWriteText+0)+0,w
 10686  0BC7  0822               	addwf	(i1lcdWriteText@wCharReadingPos),f
 10687  0BC8  07FD               	goto	i1l5054
 10688  0BC9  2BCA               	line	70
 10689                           ;LCD_hd44780u_qy_2004a.c: 70:   }
 10690                           	
 10691                           i1l230:	
 10692  0BCA                     	line	66
 10693                           	
 10694                           i1l5054:	
 10695  0BCA                     ;LCD_hd44780u_qy_2004a.c: 66:   while( iText[wCharReadingPos] != 0)
 10696                           	movlb 0	; select bank0
 10697  0BCA  0020               	movf	(i1lcdWriteText@iText+1),w
 10698  0BCB  0821               	movwf	(??i1_lcdWriteText+0)+0+1
 10699  0BCC  00A3               	movf	(i1lcdWriteText@iText),w
 10700  0BCD  0820               	movwf	(??i1_lcdWriteText+0)+0
 10701  0BCE  00A2               	movf	(i1lcdWriteText@wCharReadingPos),w
 10702  0BCF  087D               	addwf	(??i1_lcdWriteText+0)+0,w
 10703  0BD0  0722               	movwf	fsr0l
 10704  0BD1  0084               	movf	(??i1_lcdWriteText+0)+1,w
 10705  0BD2  0823               	skipnc
 10706  0BD3  1803               	incf	(??i1_lcdWriteText+0)+1,w
 10707  0BD4  0A23               	movwf	fsr0h
 10708  0BD5  0085               
 10709                           	moviw	fsr0++
 10710  0BD6  0012               	btfss	status,2
 10711  0BD7  1D03               	goto	u357_21
 10712  0BD8  2BDA               	goto	u357_20
 10713  0BD9  2BDB               u357_21:
 10714  0BDA                     	goto	i1l5050
 10715  0BDA  2BB4               u357_20:
 10716  0BDB                     	goto	i1l233
 10717  0BDB  2BDC               	
 10718                           i1l232:	
 10719  0BDC                     	line	72
 10720                           	
 10721                           i1l233:	
 10722  0BDC                     	return
 10723  0BDC  0008               	opt stack 0
 10724                           GLOBAL	__end_ofi1_lcdWriteText
 10725                           	__end_ofi1_lcdWriteText:
 10726  0BDD                     	signat	i1_lcdWriteText,89
 10727                           	global	i1_writeTxtChk
 10728                           
 10729 ;; *************** function i1_writeTxtChk *****************
 10730 ;; Defined at:
 10731 ;;		line 125 in file "LCD_hd44780u_qy_2004a.c"
 10732 ;; Parameters:    Size  Location     Type
 10733 ;;  iOpCode         1    wreg     unsigned char 
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;  iOpCode         1   12[COMMON] unsigned char 
 10736 ;; Return value:  Size  Location     Type
 10737 ;;                  1    wreg      void 
 10738 ;; Registers used:
 10739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10740 ;; Tracked objects:
 10741 ;;		On entry : 0/0
 10742 ;;		On exit  : 0/0
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10748 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10749 ;;Total ram usage:        3 bytes
 10750 ;; Hardware stack levels used:    1
 10751 ;; Hardware stack levels required when called:    3
 10752 ;; This function calls:
 10753 ;;		i1_SetToSendDataToLCD
 10754 ;;		i1_setCursorPosition
 10755 ;;		i1_setData
 10756 ;;		i1_waitLCDBusy
 10757 ;; This function is called by:
 10758 ;;		i1_lcdWriteText
 10759 ;; This function uses a non-reentrant model
 10760 ;;
 10761                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
 10762                           	line	125
 10763                           global __ptext37
 10764                           __ptext37:	;psect for function i1_writeTxtChk
 10765  06D0                     psect	text37
 10766                           	file	"LCD_hd44780u_qy_2004a.c"
 10767                           	line	125
 10768                           	global	__size_ofi1_writeTxtChk
 10769                           	__size_ofi1_writeTxtChk	equ	__end_ofi1_writeTxtChk-i1_writeTxtChk
 10770  0098                     	
 10771                           i1_writeTxtChk:	
 10772  06D0                     ;incstack = 0
 10773                           	opt	stack 4
 10774                           ; Regs used in i1_writeTxtChk: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10775                           ;i1writeTxtChk@iOpCode stored from wreg
 10776                           	movwf	(i1writeTxtChk@iOpCode)
 10777  06D0  00FC               	line	127
 10778                           	
 10779                           i1l4798:	
 10780  06D1                     ;LCD_hd44780u_qy_2004a.c: 125: void writeTxtChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 26: {;LCD_hd44780u_qy_2004a.c: 127:     if(iOpCode == '\r')
 10781                           		movlw	13
 10782  06D1  300D               	xorwf	((i1writeTxtChk@iOpCode)),w
 10783  06D2  067C               	btfss	status,2
 10784  06D3  1D03               	goto	u337_21
 10785  06D4  2ED6               	goto	u337_20
 10786  06D5  2ED7               u337_21:
 10787  06D6                     	goto	i1l4802
 10788  06D6  2ED9               u337_20:
 10789  06D7                     	goto	i1l260
 10790  06D7  2F67               	line	129
 10791                           	
 10792                           i1l4800:	
 10793  06D8                     ;LCD_hd44780u_qy_2004a.c: 128:     {;LCD_hd44780u_qy_2004a.c: 129:       return;
 10794                           	goto	i1l260
 10795  06D8  2F67               	line	130
 10796                           ;LCD_hd44780u_qy_2004a.c: 130:     }
 10797                           	
 10798                           i1l259:	
 10799  06D9                     	line	131
 10800                           	
 10801                           i1l4802:	
 10802  06D9                     ;LCD_hd44780u_qy_2004a.c: 131:   SetToSendDataToLCD();
 10803                           	fcall	i1_SetToSendDataToLCD
 10804  06D9  318A  228B  3186   	line	132
 10805                           	
 10806                           i1l4804:	
 10807  06DC                     ;LCD_hd44780u_qy_2004a.c: 132:   PORTAbits.RA0 = 1;
 10808                           	movlb 0	; select bank0
 10809  06DC  0020               	bsf	(12),0	;volatile
 10810  06DD  140C               	line	133
 10811                           	
 10812                           i1l4806:	
 10813  06DE                     ;LCD_hd44780u_qy_2004a.c: 133:   PORTAbits.RA1 = 0;
 10814                           	bcf	(12),1	;volatile
 10815  06DE  108C               	line	134
 10816                           	
 10817                           i1l4808:	
 10818  06DF                     ;LCD_hd44780u_qy_2004a.c: 134:   if(iOpCode == '\n')
 10819                           		movlw	10
 10820  06DF  300A               	xorwf	((i1writeTxtChk@iOpCode)),w
 10821  06E0  067C               	btfss	status,2
 10822  06E1  1D03               	goto	u338_21
 10823  06E2  2EE4               	goto	u338_20
 10824  06E3  2EE5               u338_21:
 10825  06E4                     	goto	i1l4838
 10826  06E4  2F32               u338_20:
 10827  06E5                     	line	136
 10828                           	
 10829                           i1l4810:	
 10830  06E5                     ;LCD_hd44780u_qy_2004a.c: 135:   {;LCD_hd44780u_qy_2004a.c: 136:    if(mWritingPosition 
                                 < 20)
 10831                           	movlw	low(014h)
 10832  06E5  3014               	subwf	(_mWritingPosition),w
 10833  06E6  025A               	skipnc
 10834  06E7  1803               	goto	u339_21
 10835  06E8  2EEA               	goto	u339_20
 10836  06E9  2EEB               u339_21:
 10837  06EA                     	goto	i1l4814
 10838  06EA  2EF1               u339_20:
 10839  06EB                     	line	138
 10840                           	
 10841                           i1l4812:	
 10842  06EB                     ;LCD_hd44780u_qy_2004a.c: 137:    {;LCD_hd44780u_qy_2004a.c: 138:        setCursorPositi
                                 on(1,0);
 10843                           	clrf	(i1setCursorPosition@iPosition)
 10844  06EB  01F5               	movlw	low(01h)
 10845  06EC  3001               	fcall	i1_setCursorPosition
 10846  06ED  318E  26D7  3186   	line	139
 10847                           ;LCD_hd44780u_qy_2004a.c: 139:    }
 10848                           	goto	i1l260
 10849  06F0  2F67               	line	140
 10850                           ;LCD_hd44780u_qy_2004a.c: 140:    else if(mWritingPosition < 40)
 10851                           	
 10852                           i1l262:	
 10853  06F1                     	
 10854                           i1l4814:	
 10855  06F1                     	movlw	low(028h)
 10856  06F1  3028               	movlb 0	; select bank0
 10857  06F2  0020               	subwf	(_mWritingPosition),w
 10858  06F3  025A               	skipnc
 10859  06F4  1803               	goto	u340_21
 10860  06F5  2EF7               	goto	u340_20
 10861  06F6  2EF8               u340_21:
 10862  06F7                     	goto	i1l4818
 10863  06F7  2EFE               u340_20:
 10864  06F8                     	line	142
 10865                           	
 10866                           i1l4816:	
 10867  06F8                     ;LCD_hd44780u_qy_2004a.c: 141:    {;LCD_hd44780u_qy_2004a.c: 142:        setCursorPositi
                                 on(2,0);
 10868                           	clrf	(i1setCursorPosition@iPosition)
 10869  06F8  01F5               	movlw	low(02h)
 10870  06F9  3002               	fcall	i1_setCursorPosition
 10871  06FA  318E  26D7  3186   	line	143
 10872                           ;LCD_hd44780u_qy_2004a.c: 143:    }
 10873                           	goto	i1l260
 10874  06FD  2F67               	line	144
 10875                           ;LCD_hd44780u_qy_2004a.c: 144:    else if(mWritingPosition < 60)
 10876                           	
 10877                           i1l264:	
 10878  06FE                     	
 10879                           i1l4818:	
 10880  06FE                     	movlw	low(03Ch)
 10881  06FE  303C               	movlb 0	; select bank0
 10882  06FF  0020               	subwf	(_mWritingPosition),w
 10883  0700  025A               	skipnc
 10884  0701  1803               	goto	u341_21
 10885  0702  2F04               	goto	u341_20
 10886  0703  2F05               u341_21:
 10887  0704                     	goto	i1l4822
 10888  0704  2F0B               u341_20:
 10889  0705                     	line	146
 10890                           	
 10891                           i1l4820:	
 10892  0705                     ;LCD_hd44780u_qy_2004a.c: 145:    {;LCD_hd44780u_qy_2004a.c: 146:        setCursorPositi
                                 on(3,0);
 10893                           	clrf	(i1setCursorPosition@iPosition)
 10894  0705  01F5               	movlw	low(03h)
 10895  0706  3003               	fcall	i1_setCursorPosition
 10896  0707  318E  26D7  3186   	line	147
 10897                           ;LCD_hd44780u_qy_2004a.c: 147:    }
 10898                           	goto	i1l260
 10899  070A  2F67               	line	148
 10900                           ;LCD_hd44780u_qy_2004a.c: 148:    else
 10901                           	
 10902                           i1l266:	
 10903  070B                     	line	150
 10904                           	
 10905                           i1l4822:	
 10906  070B                     ;LCD_hd44780u_qy_2004a.c: 149:    {;LCD_hd44780u_qy_2004a.c: 150:        setCursorPositi
                                 on(0,0);
 10907                           	clrf	(i1setCursorPosition@iPosition)
 10908  070B  01F5               	movlw	low(0)
 10909  070C  3000               	fcall	i1_setCursorPosition
 10910  070D  318E  26D7  3186   	goto	i1l260
 10911  0710  2F67               	line	151
 10912                           ;LCD_hd44780u_qy_2004a.c: 151:    }
 10913                           	
 10914                           i1l267:	
 10915  0711                     	goto	i1l260
 10916  0711  2F67               	
 10917                           i1l265:	
 10918  0712                     	goto	i1l260
 10919  0712  2F67               	
 10920                           i1l263:	
 10921  0713                     	goto	i1l260
 10922  0713  2F67               	line	152
 10923                           	
 10924                           i1l4824:	
 10925  0714                     ;LCD_hd44780u_qy_2004a.c: 152:    return;
 10926                           	goto	i1l260
 10927  0714  2F67               	line	153
 10928                           ;LCD_hd44780u_qy_2004a.c: 153:   }
 10929                           	
 10930                           i1l261:	
 10931  0715                     	line	154
 10932                           ;LCD_hd44780u_qy_2004a.c: 154:   switch(mWritingPosition)
 10933                           	goto	i1l4838
 10934  0715  2F32               	line	156
 10935                           ;LCD_hd44780u_qy_2004a.c: 155:   {;LCD_hd44780u_qy_2004a.c: 156:     case 20:
 10936                           	
 10937                           i1l269:	
 10938  0716                     	line	157
 10939                           	
 10940                           i1l4826:	
 10941  0716                     ;LCD_hd44780u_qy_2004a.c: 157:       setCursorPosition(1,0);
 10942                           	clrf	(i1setCursorPosition@iPosition)
 10943  0716  01F5               	movlw	low(01h)
 10944  0717  3001               	fcall	i1_setCursorPosition
 10945  0718  318E  26D7  3186   	line	158
 10946                           ;LCD_hd44780u_qy_2004a.c: 158:       break;
 10947                           	goto	i1l4840
 10948  071B  2F49               	line	159
 10949                           ;LCD_hd44780u_qy_2004a.c: 159:     case 40:
 10950                           	
 10951                           i1l271:	
 10952  071C                     	line	160
 10953                           	
 10954                           i1l4828:	
 10955  071C                     ;LCD_hd44780u_qy_2004a.c: 160:       setCursorPosition(2,0);
 10956                           	clrf	(i1setCursorPosition@iPosition)
 10957  071C  01F5               	movlw	low(02h)
 10958  071D  3002               	fcall	i1_setCursorPosition
 10959  071E  318E  26D7  3186   	line	161
 10960                           ;LCD_hd44780u_qy_2004a.c: 161:       break;
 10961                           	goto	i1l4840
 10962  0721  2F49               	line	162
 10963                           ;LCD_hd44780u_qy_2004a.c: 162:     case 60:
 10964                           	
 10965                           i1l272:	
 10966  0722                     	line	163
 10967                           	
 10968                           i1l4830:	
 10969  0722                     ;LCD_hd44780u_qy_2004a.c: 163:       setCursorPosition(3,0);
 10970                           	clrf	(i1setCursorPosition@iPosition)
 10971  0722  01F5               	movlw	low(03h)
 10972  0723  3003               	fcall	i1_setCursorPosition
 10973  0724  318E  26D7  3186   	line	164
 10974                           ;LCD_hd44780u_qy_2004a.c: 164:       break;
 10975                           	goto	i1l4840
 10976  0727  2F49               	line	165
 10977                           ;LCD_hd44780u_qy_2004a.c: 165:     case 80:
 10978                           	
 10979                           i1l273:	
 10980  0728                     	line	166
 10981                           	
 10982                           i1l4832:	
 10983  0728                     ;LCD_hd44780u_qy_2004a.c: 166:       setCursorPosition(0,0);
 10984                           	clrf	(i1setCursorPosition@iPosition)
 10985  0728  01F5               	movlw	low(0)
 10986  0729  3000               	fcall	i1_setCursorPosition
 10987  072A  318E  26D7  3186   	line	167
 10988                           	
 10989                           i1l4834:	
 10990  072D                     ;LCD_hd44780u_qy_2004a.c: 167:       mWritingPosition = 0;
 10991                           	movlb 0	; select bank0
 10992  072D  0020               	clrf	(_mWritingPosition)
 10993  072E  01DA               	line	168
 10994                           ;LCD_hd44780u_qy_2004a.c: 168:       break;
 10995                           	goto	i1l4840
 10996  072F  2F49               	line	169
 10997                           ;LCD_hd44780u_qy_2004a.c: 169:     default:
 10998                           	
 10999                           i1l274:	
 11000  0730                     	line	170
 11001                           ;LCD_hd44780u_qy_2004a.c: 170:       break;
 11002                           	goto	i1l4840
 11003  0730  2F49               	line	171
 11004                           	
 11005                           i1l4836:	
 11006  0731                     ;LCD_hd44780u_qy_2004a.c: 171:   }
 11007                           	goto	i1l4840
 11008  0731  2F49               	
 11009                           i1l268:	
 11010  0732                     	
 11011                           i1l4838:	
 11012  0732                     	movlb 0	; select bank0
 11013  0732  0020               	movf	(_mWritingPosition),w
 11014  0733  085A               	movwf	(??i1_writeTxtChk+0)+0
 11015  0734  00FA               	clrf	(??i1_writeTxtChk+0)+0+1
 11016  0735  01FB               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 11017                           ; Switch size 1, requested type "space"
 11018                           ; Number of cases is 1, Range of values is 0 to 0
 11019                           ; switch strategies available:
 11020                           ; Name         Instructions Cycles
 11021                           ; simple_byte            4     3 (average)
 11022                           ; direct_byte            8     6 (fixed)
 11023                           ; jumptable            260     6 (fixed)
 11024                           ;	Chosen strategy is simple_byte
 11025                           
 11026                           	movf 1+(??i1_writeTxtChk+0)+0,w
 11027  0736  087B               	opt asmopt_push
 11028                           	opt asmopt_off
 11029                           	xorlw	0^0	; case 0
 11030  0737  3A00               	skipnz
 11031  0738  1903               	goto	i1l5744
 11032  0739  2F3B               	goto	i1l4840
 11033  073A  2F49               	opt asmopt_pop
 11034                           	
 11035                           i1l5744:	
 11036  073B                     ; Switch size 1, requested type "space"
 11037                           ; Number of cases is 4, Range of values is 20 to 80
 11038                           ; switch strategies available:
 11039                           ; Name         Instructions Cycles
 11040                           ; simple_byte           13     7 (average)
 11041                           ; direct_byte          131     9 (fixed)
 11042                           ; jumptable            263     9 (fixed)
 11043                           ;	Chosen strategy is simple_byte
 11044                           
 11045                           	movf 0+(??i1_writeTxtChk+0)+0,w
 11046  073B  087A               	opt asmopt_push
 11047                           	opt asmopt_off
 11048                           	xorlw	20^0	; case 20
 11049  073C  3A14               	skipnz
 11050  073D  1903               	goto	i1l4826
 11051  073E  2F16               	xorlw	40^20	; case 40
 11052  073F  3A3C               	skipnz
 11053  0740  1903               	goto	i1l4828
 11054  0741  2F1C               	xorlw	60^40	; case 60
 11055  0742  3A14               	skipnz
 11056  0743  1903               	goto	i1l4830
 11057  0744  2F22               	xorlw	80^60	; case 80
 11058  0745  3A6C               	skipnz
 11059  0746  1903               	goto	i1l4832
 11060  0747  2F28               	goto	i1l4840
 11061  0748  2F49               	opt asmopt_pop
 11062                           
 11063                           	
 11064                           i1l270:	
 11065  0749                     	line	172
 11066                           	
 11067                           i1l4840:	
 11068  0749                     ;LCD_hd44780u_qy_2004a.c: 172:   waitLCDBusy();
 11069                           	fcall	i1_waitLCDBusy
 11070  0749  318B  23DD  3186   	line	173
 11071                           	
 11072                           i1l4842:	
 11073  074C                     ;LCD_hd44780u_qy_2004a.c: 173:   SetToSendDataToLCD();
 11074                           	fcall	i1_SetToSendDataToLCD
 11075  074C  318A  228B  3186   	line	174
 11076                           	
 11077                           i1l4844:	
 11078  074F                     ;LCD_hd44780u_qy_2004a.c: 174:   PORTAbits.RA0 = 1;
 11079                           	movlb 0	; select bank0
 11080  074F  0020               	bsf	(12),0	;volatile
 11081  0750  140C               	line	175
 11082                           	
 11083                           i1l4846:	
 11084  0751                     ;LCD_hd44780u_qy_2004a.c: 175:   PORTAbits.RA1 = 0;
 11085                           	bcf	(12),1	;volatile
 11086  0751  108C               	line	176
 11087                           	
 11088                           i1l4848:	
 11089  0752                     ;LCD_hd44780u_qy_2004a.c: 176:   setData(iOpCode >> 4);
 11090                           	movf	(i1writeTxtChk@iOpCode),w
 11091  0752  087C               	movwf	(??i1_writeTxtChk+0)+0
 11092  0753  00FA               	movlw	04h
 11093  0754  3004               u342_25:
 11094  0755                     	lsrf	(??i1_writeTxtChk+0)+0,f
 11095  0755  36FA               	decfsz	wreg,f
 11096  0756  0B89               	goto	u342_25
 11097  0757  2F55               	movf	0+(??i1_writeTxtChk+0)+0,w
 11098  0758  087A               	fcall	i1_setData
 11099  0759  318C  2469  3186   	line	177
 11100                           	
 11101                           i1l4850:	
 11102  075C                     ;LCD_hd44780u_qy_2004a.c: 177:   setData(iOpCode);
 11103                           	movf	(i1writeTxtChk@iOpCode),w
 11104  075C  087C               	fcall	i1_setData
 11105  075D  318C  2469  3186   	line	178
 11106                           	
 11107                           i1l4852:	
 11108  0760                     ;LCD_hd44780u_qy_2004a.c: 178:   _delay((unsigned long)((1)*(16000000/4000000.0)));
 11109                           		opt asmopt_push
 11110                           	opt asmopt_off
 11111                           	nop2	;2 cycle nop
 11112  0760  3200               	nop2	;2 cycle nop
 11113  0761  3200               	opt asmopt_pop
 11114                           
 11115                           	line	179
 11116                           	
 11117                           i1l4854:	
 11118  0762                     ;LCD_hd44780u_qy_2004a.c: 179:   mWritingPosition++;
 11119                           	movlw	low(01h)
 11120  0762  3001               	movwf	(??i1_writeTxtChk+0)+0
 11121  0763  00FA               	movf	(??i1_writeTxtChk+0)+0,w
 11122  0764  087A               	movlb 0	; select bank0
 11123  0765  0020               	addwf	(_mWritingPosition),f
 11124  0766  07DA               	line	180
 11125                           	
 11126                           i1l260:	
 11127  0767                     	return
 11128  0767  0008               	opt stack 0
 11129                           GLOBAL	__end_ofi1_writeTxtChk
 11130                           	__end_ofi1_writeTxtChk:
 11131  0768                     	signat	i1_writeTxtChk,89
 11132                           	global	i1_setCursorPosition
 11133                           
 11134 ;; *************** function i1_setCursorPosition *****************
 11135 ;; Defined at:
 11136 ;;		line 304 in file "LCD_hd44780u_qy_2004a.c"
 11137 ;; Parameters:    Size  Location     Type
 11138 ;;  iLine           1    wreg     unsigned char 
 11139 ;;  iPosition       1    5[COMMON] unsigned char 
 11140 ;; Auto vars:     Size  Location     Type
 11141 ;;  iLine           1    8[COMMON] unsigned char 
 11142 ;;  setCursorPos    1    9[COMMON] unsigned char 
 11143 ;; Return value:  Size  Location     Type
 11144 ;;                  1    wreg      void 
 11145 ;; Registers used:
 11146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11147 ;; Tracked objects:
 11148 ;;		On entry : 0/0
 11149 ;;		On exit  : 0/0
 11150 ;;		Unchanged: 0/0
 11151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11152 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11153 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11154 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11155 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11156 ;;Total ram usage:        5 bytes
 11157 ;; Hardware stack levels used:    1
 11158 ;; Hardware stack levels required when called:    2
 11159 ;; This function calls:
 11160 ;;		i1_SetToSendDataToLCD
 11161 ;;		i1_setData
 11162 ;;		i1_waitLCDBusy
 11163 ;; This function is called by:
 11164 ;;		i1_writeTxtChk
 11165 ;; This function uses a non-reentrant model
 11166 ;;
 11167                           psect	text38,local,class=CODE,delta=2,merge=1,group=0
 11168                           	line	304
 11169                           global __ptext38
 11170                           __ptext38:	;psect for function i1_setCursorPosition
 11171  0ED7                     psect	text38
 11172                           	file	"LCD_hd44780u_qy_2004a.c"
 11173                           	line	304
 11174                           	global	__size_ofi1_setCursorPosition
 11175                           	__size_ofi1_setCursorPosition	equ	__end_ofi1_setCursorPosition-i1_setCursorPosition
 11176  0062                     	
 11177                           i1_setCursorPosition:	
 11178  0ED7                     ;incstack = 0
 11179                           	opt	stack 4
 11180                           ; Regs used in i1_setCursorPosition: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11181                           ;i1setCursorPosition@iLine stored from wreg
 11182                           	movwf	(i1setCursorPosition@iLine)
 11183  0ED7  00F8               	line	306
 11184                           	
 11185                           i1l4644:	
 11186  0ED8                     ;LCD_hd44780u_qy_2004a.c: 304: void setCursorPosition(char iLine, char iPosition);LCD_hd
                                 44780u_qy_2004a.c: 305: {;LCD_hd44780u_qy_2004a.c: 306:   char wLCDIndex=0;
 11187                           	clrf	(i1setCursorPosition@wLCDIndex)
 11188  0ED8  01F9               	line	308
 11189                           ;LCD_hd44780u_qy_2004a.c: 308:   switch(iLine)
 11190                           	goto	i1l4656
 11191  0ED9  2F0A               	line	310
 11192                           ;LCD_hd44780u_qy_2004a.c: 309:   {;LCD_hd44780u_qy_2004a.c: 310:       case 0:
 11193                           	
 11194                           i1l338:	
 11195  0EDA                     	line	311
 11196                           	
 11197                           i1l4646:	
 11198  0EDA                     ;LCD_hd44780u_qy_2004a.c: 311:           wLCDIndex = 0x00 + iPosition;
 11199                           	movf	(i1setCursorPosition@iPosition),w
 11200  0EDA  0875               	movwf	(??i1_setCursorPosition+0)+0
 11201  0EDB  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 11202  0EDC  0876               	movwf	(i1setCursorPosition@wLCDIndex)
 11203  0EDD  00F9               	line	312
 11204                           ;LCD_hd44780u_qy_2004a.c: 312:           mWritingPosition = iPosition;
 11205                           	movf	(i1setCursorPosition@iPosition),w
 11206  0EDE  0875               	movwf	(??i1_setCursorPosition+0)+0
 11207  0EDF  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 11208  0EE0  0876               	movlb 0	; select bank0
 11209  0EE1  0020               	movwf	(_mWritingPosition)
 11210  0EE2  00DA               	line	313
 11211                           ;LCD_hd44780u_qy_2004a.c: 313:           break;
 11212                           	goto	i1l4658
 11213  0EE3  2F20               	line	314
 11214                           ;LCD_hd44780u_qy_2004a.c: 314:       case 1:
 11215                           	
 11216                           i1l340:	
 11217  0EE4                     	line	315
 11218                           	
 11219                           i1l4648:	
 11220  0EE4                     ;LCD_hd44780u_qy_2004a.c: 315:           wLCDIndex = 0x40 + iPosition;
 11221                           	movf	(i1setCursorPosition@iPosition),w
 11222  0EE4  0875               	addlw	040h
 11223  0EE5  3E40               	movwf	(??i1_setCursorPosition+0)+0
 11224  0EE6  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 11225  0EE7  0876               	movwf	(i1setCursorPosition@wLCDIndex)
 11226  0EE8  00F9               	line	316
 11227                           ;LCD_hd44780u_qy_2004a.c: 316:           mWritingPosition = 20 + iPosition;
 11228                           	movf	(i1setCursorPosition@iPosition),w
 11229  0EE9  0875               	addlw	014h
 11230  0EEA  3E14               	movwf	(??i1_setCursorPosition+0)+0
 11231  0EEB  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 11232  0EEC  0876               	movlb 0	; select bank0
 11233  0EED  0020               	movwf	(_mWritingPosition)
 11234  0EEE  00DA               	line	317
 11235                           ;LCD_hd44780u_qy_2004a.c: 317:           break;
 11236                           	goto	i1l4658
 11237  0EEF  2F20               	line	318
 11238                           ;LCD_hd44780u_qy_2004a.c: 318:       case 2:
 11239                           	
 11240                           i1l341:	
 11241  0EF0                     	line	319
 11242                           	
 11243                           i1l4650:	
 11244  0EF0                     ;LCD_hd44780u_qy_2004a.c: 319:           wLCDIndex = 0x14 + iPosition;
 11245                           	movf	(i1setCursorPosition@iPosition),w
 11246  0EF0  0875               	addlw	014h
 11247  0EF1  3E14               	movwf	(??i1_setCursorPosition+0)+0
 11248  0EF2  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 11249  0EF3  0876               	movwf	(i1setCursorPosition@wLCDIndex)
 11250  0EF4  00F9               	line	320
 11251                           ;LCD_hd44780u_qy_2004a.c: 320:           mWritingPosition = 40 + iPosition;
 11252                           	movf	(i1setCursorPosition@iPosition),w
 11253  0EF5  0875               	addlw	028h
 11254  0EF6  3E28               	movwf	(??i1_setCursorPosition+0)+0
 11255  0EF7  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 11256  0EF8  0876               	movlb 0	; select bank0
 11257  0EF9  0020               	movwf	(_mWritingPosition)
 11258  0EFA  00DA               	line	321
 11259                           ;LCD_hd44780u_qy_2004a.c: 321:           break;
 11260                           	goto	i1l4658
 11261  0EFB  2F20               	line	322
 11262                           ;LCD_hd44780u_qy_2004a.c: 322:       case 3:
 11263                           	
 11264                           i1l342:	
 11265  0EFC                     	line	323
 11266                           	
 11267                           i1l4652:	
 11268  0EFC                     ;LCD_hd44780u_qy_2004a.c: 323:           wLCDIndex = 0x54 + iPosition;
 11269                           	movf	(i1setCursorPosition@iPosition),w
 11270  0EFC  0875               	addlw	054h
 11271  0EFD  3E54               	movwf	(??i1_setCursorPosition+0)+0
 11272  0EFE  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 11273  0EFF  0876               	movwf	(i1setCursorPosition@wLCDIndex)
 11274  0F00  00F9               	line	324
 11275                           ;LCD_hd44780u_qy_2004a.c: 324:           mWritingPosition = 60 + iPosition;
 11276                           	movf	(i1setCursorPosition@iPosition),w
 11277  0F01  0875               	addlw	03Ch
 11278  0F02  3E3C               	movwf	(??i1_setCursorPosition+0)+0
 11279  0F03  00F6               	movf	(??i1_setCursorPosition+0)+0,w
 11280  0F04  0876               	movlb 0	; select bank0
 11281  0F05  0020               	movwf	(_mWritingPosition)
 11282  0F06  00DA               	line	325
 11283                           ;LCD_hd44780u_qy_2004a.c: 325:           break;
 11284                           	goto	i1l4658
 11285  0F07  2F20               	line	326
 11286                           ;LCD_hd44780u_qy_2004a.c: 326:       default:
 11287                           	
 11288                           i1l343:	
 11289  0F08                     	line	327
 11290                           ;LCD_hd44780u_qy_2004a.c: 327:       break;
 11291                           	goto	i1l4658
 11292  0F08  2F20               	line	328
 11293                           	
 11294                           i1l4654:	
 11295  0F09                     ;LCD_hd44780u_qy_2004a.c: 328:   }
 11296                           	goto	i1l4658
 11297  0F09  2F20               	
 11298                           i1l337:	
 11299  0F0A                     	
 11300                           i1l4656:	
 11301  0F0A                     	movf	(i1setCursorPosition@iLine),w
 11302  0F0A  0878               	movwf	(??i1_setCursorPosition+0)+0
 11303  0F0B  00F6               	clrf	(??i1_setCursorPosition+0)+0+1
 11304  0F0C  01F7               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 11305                           ; Switch size 1, requested type "space"
 11306                           ; Number of cases is 1, Range of values is 0 to 0
 11307                           ; switch strategies available:
 11308                           ; Name         Instructions Cycles
 11309                           ; simple_byte            4     3 (average)
 11310                           ; direct_byte            8     6 (fixed)
 11311                           ; jumptable            260     6 (fixed)
 11312                           ;	Chosen strategy is simple_byte
 11313                           
 11314                           	movf 1+(??i1_setCursorPosition+0)+0,w
 11315  0F0D  0877               	opt asmopt_push
 11316                           	opt asmopt_off
 11317                           	xorlw	0^0	; case 0
 11318  0F0E  3A00               	skipnz
 11319  0F0F  1903               	goto	i1l5746
 11320  0F10  2F12               	goto	i1l4658
 11321  0F11  2F20               	opt asmopt_pop
 11322                           	
 11323                           i1l5746:	
 11324  0F12                     ; Switch size 1, requested type "space"
 11325                           ; Number of cases is 4, Range of values is 0 to 3
 11326                           ; switch strategies available:
 11327                           ; Name         Instructions Cycles
 11328                           ; simple_byte           13     7 (average)
 11329                           ; direct_byte           14     6 (fixed)
 11330                           ; jumptable            260     6 (fixed)
 11331                           ;	Chosen strategy is simple_byte
 11332                           
 11333                           	movf 0+(??i1_setCursorPosition+0)+0,w
 11334  0F12  0876               	opt asmopt_push
 11335                           	opt asmopt_off
 11336                           	xorlw	0^0	; case 0
 11337  0F13  3A00               	skipnz
 11338  0F14  1903               	goto	i1l4646
 11339  0F15  2EDA               	xorlw	1^0	; case 1
 11340  0F16  3A01               	skipnz
 11341  0F17  1903               	goto	i1l4648
 11342  0F18  2EE4               	xorlw	2^1	; case 2
 11343  0F19  3A03               	skipnz
 11344  0F1A  1903               	goto	i1l4650
 11345  0F1B  2EF0               	xorlw	3^2	; case 3
 11346  0F1C  3A01               	skipnz
 11347  0F1D  1903               	goto	i1l4652
 11348  0F1E  2EFC               	goto	i1l4658
 11349  0F1F  2F20               	opt asmopt_pop
 11350                           
 11351                           	
 11352                           i1l339:	
 11353  0F20                     	line	330
 11354                           	
 11355                           i1l4658:	
 11356  0F20                     ;LCD_hd44780u_qy_2004a.c: 330:   waitLCDBusy();
 11357                           	fcall	i1_waitLCDBusy
 11358  0F20  318B  23DD  318E   	line	332
 11359                           	
 11360                           i1l4660:	
 11361  0F23                     ;LCD_hd44780u_qy_2004a.c: 332:   SetToSendDataToLCD();
 11362                           	fcall	i1_SetToSendDataToLCD
 11363  0F23  318A  228B  318E   	line	333
 11364                           	
 11365                           i1l4662:	
 11366  0F26                     ;LCD_hd44780u_qy_2004a.c: 333:   PORTAbits.RA0 = 0;
 11367                           	movlb 0	; select bank0
 11368  0F26  0020               	bcf	(12),0	;volatile
 11369  0F27  100C               	line	334
 11370                           	
 11371                           i1l4664:	
 11372  0F28                     ;LCD_hd44780u_qy_2004a.c: 334:   PORTAbits.RA1 = 0;
 11373                           	bcf	(12),1	;volatile
 11374  0F28  108C               	line	335
 11375                           	
 11376                           i1l4666:	
 11377  0F29                     ;LCD_hd44780u_qy_2004a.c: 335:   setData((wLCDIndex >> 4) | 0x8 );
 11378                           	movf	(i1setCursorPosition@wLCDIndex),w
 11379  0F29  0879               	movwf	(??i1_setCursorPosition+0)+0
 11380  0F2A  00F6               	movlw	04h
 11381  0F2B  3004               u324_25:
 11382  0F2C                     	lsrf	(??i1_setCursorPosition+0)+0,f
 11383  0F2C  36F6               	decfsz	wreg,f
 11384  0F2D  0B89               	goto	u324_25
 11385  0F2E  2F2C               	movf	0+(??i1_setCursorPosition+0)+0,w
 11386  0F2F  0876               	iorlw	08h
 11387  0F30  3808               	fcall	i1_setData
 11388  0F31  318C  2469  318E   	line	336
 11389                           	
 11390                           i1l4668:	
 11391  0F34                     ;LCD_hd44780u_qy_2004a.c: 336:   setData(wLCDIndex);
 11392                           	movf	(i1setCursorPosition@wLCDIndex),w
 11393  0F34  0879               	fcall	i1_setData
 11394  0F35  318C  2469  318E   	line	338
 11395                           	
 11396                           i1l344:	
 11397  0F38                     	return
 11398  0F38  0008               	opt stack 0
 11399                           GLOBAL	__end_ofi1_setCursorPosition
 11400                           	__end_ofi1_setCursorPosition:
 11401  0F39                     	signat	i1_setCursorPosition,89
 11402                           	global	i1_waitLCDBusy
 11403                           
 11404 ;; *************** function i1_waitLCDBusy *****************
 11405 ;; Defined at:
 11406 ;;		line 212 in file "LCD_hd44780u_qy_2004a.c"
 11407 ;; Parameters:    Size  Location     Type
 11408 ;;		None
 11409 ;; Auto vars:     Size  Location     Type
 11410 ;;  waitLCDBusy     2    3[COMMON] int 
 11411 ;; Return value:  Size  Location     Type
 11412 ;;                  1    wreg      void 
 11413 ;; Registers used:
 11414 ;;		wreg, status,2, status,0, pclath, cstack
 11415 ;; Tracked objects:
 11416 ;;		On entry : 0/0
 11417 ;;		On exit  : 0/0
 11418 ;;		Unchanged: 0/0
 11419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11421 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11422 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11423 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11424 ;;Total ram usage:        5 bytes
 11425 ;; Hardware stack levels used:    1
 11426 ;; Hardware stack levels required when called:    1
 11427 ;; This function calls:
 11428 ;;		i1_SetToReadDataFromLCD
 11429 ;; This function is called by:
 11430 ;;		i1_writeTxtChk
 11431 ;;		i1_setCursorPosition
 11432 ;; This function uses a non-reentrant model
 11433 ;;
 11434                           psect	text39,local,class=CODE,delta=2,merge=1,group=0
 11435                           	line	212
 11436                           global __ptext39
 11437                           __ptext39:	;psect for function i1_waitLCDBusy
 11438  0BDD                     psect	text39
 11439                           	file	"LCD_hd44780u_qy_2004a.c"
 11440                           	line	212
 11441                           	global	__size_ofi1_waitLCDBusy
 11442                           	__size_ofi1_waitLCDBusy	equ	__end_ofi1_waitLCDBusy-i1_waitLCDBusy
 11443  002C                     	
 11444                           i1_waitLCDBusy:	
 11445  0BDD                     ;incstack = 0
 11446                           	opt	stack 5
 11447                           ; Regs used in i1_waitLCDBusy: [wreg+status,2+status,0+pclath+cstack]
 11448                           	line	214
 11449                           	
 11450                           i1l4466:	
 11451  0BDD                     ;LCD_hd44780u_qy_2004a.c: 214:   PORTAbits.RA0 = 0;
 11452                           	movlb 0	; select bank0
 11453  0BDD  0020               	bcf	(12),0	;volatile
 11454  0BDE  100C               	line	215
 11455                           ;LCD_hd44780u_qy_2004a.c: 215:   PORTAbits.RA1 = 1;
 11456                           	bsf	(12),1	;volatile
 11457  0BDF  148C               	line	217
 11458                           	
 11459                           i1l4468:	
 11460  0BE0                     ;LCD_hd44780u_qy_2004a.c: 217:   SetToReadDataFromLCD();
 11461                           	fcall	i1_SetToReadDataFromLCD
 11462  0BE0  318A  2291  318B   	line	219
 11463                           	
 11464                           i1l4470:	
 11465  0BE3                     ;LCD_hd44780u_qy_2004a.c: 219:   int busyFlag = 1;
 11466                           	movlw	01h
 11467  0BE3  3001               	movwf	(i1waitLCDBusy@busyFlag)
 11468  0BE4  00F3               	movlw	0
 11469  0BE5  3000               	movwf	((i1waitLCDBusy@busyFlag))+1
 11470  0BE6  00F4               	line	220
 11471                           ;LCD_hd44780u_qy_2004a.c: 220:   while(busyFlag == 1)
 11472                           	goto	i1l289
 11473  0BE7  2C01               	
 11474                           i1l290:	
 11475  0BE8                     	line	223
 11476                           ;LCD_hd44780u_qy_2004a.c: 221:   {;LCD_hd44780u_qy_2004a.c: 223:     PORTAbits.RA2 = 1;

 11477                           	movlb 0	; select bank0
 11478  0BE8  0020               	bsf	(12),2	;volatile
 11479  0BE9  150C               	line	224
 11480                           ;LCD_hd44780u_qy_2004a.c: 224:     _delay((unsigned long)((1)*(16000000/4000000.0)));
 11481                           		opt asmopt_push
 11482                           	opt asmopt_off
 11483                           	nop2	;2 cycle nop
 11484  0BEA  3200               	nop2	;2 cycle nop
 11485  0BEB  3200               	opt asmopt_pop
 11486                           
 11487                           	line	225
 11488                           	
 11489                           i1l4472:	
 11490  0BEC                     ;LCD_hd44780u_qy_2004a.c: 225:     busyFlag = PORTAbits.RA3;
 11491                           	movlb 0	; select bank0
 11492  0BEC  0020               	rrf	(12),w	;volatile
 11493  0BED  0C0C               	movwf	(??i1_waitLCDBusy+0)+0
 11494  0BEE  00F0               	rrf	(??i1_waitLCDBusy+0)+0,f
 11495  0BEF  0CF0               	rrf	(??i1_waitLCDBusy+0)+0,w
 11496  0BF0  0C70               	andlw	(1<<1)-1
 11497  0BF1  3901               	movwf	(??i1_waitLCDBusy+1)+0
 11498  0BF2  00F1               	clrf	(??i1_waitLCDBusy+1)+0+1
 11499  0BF3  01F2               	movf	0+(??i1_waitLCDBusy+1)+0,w
 11500  0BF4  0871               	movwf	(i1waitLCDBusy@busyFlag)
 11501  0BF5  00F3               	movf	1+(??i1_waitLCDBusy+1)+0,w
 11502  0BF6  0872               	movwf	(i1waitLCDBusy@busyFlag+1)
 11503  0BF7  00F4               	line	226
 11504                           	
 11505                           i1l4474:	
 11506  0BF8                     ;LCD_hd44780u_qy_2004a.c: 226:     PORTAbits.RA2 = 0;
 11507                           	bcf	(12),2	;volatile
 11508  0BF8  110C               	line	227
 11509                           	
 11510                           i1l4476:	
 11511  0BF9                     ;LCD_hd44780u_qy_2004a.c: 227:     _delay((unsigned long)((2)*(16000000/4000000.0)));
 11512                           		opt asmopt_push
 11513                           	opt asmopt_off
 11514                           	nop2	;2 cycle nop
 11515  0BF9  3200               	nop2	;2 cycle nop
 11516  0BFA  3200               	nop2	;2 cycle nop
 11517  0BFB  3200               	nop2	;2 cycle nop
 11518  0BFC  3200               	opt asmopt_pop
 11519                           
 11520                           	line	229
 11521                           	
 11522                           i1l4478:	
 11523  0BFD                     ;LCD_hd44780u_qy_2004a.c: 229:     PORTAbits.RA2 = 1;
 11524                           	movlb 0	; select bank0
 11525  0BFD  0020               	bsf	(12),2	;volatile
 11526  0BFE  150C               	line	230
 11527                           	
 11528                           i1l4480:	
 11529  0BFF                     ;LCD_hd44780u_qy_2004a.c: 230:     _delay((unsigned long)((1)*(16000000/4000000.0)));
 11530                           		opt asmopt_push
 11531                           	opt asmopt_off
 11532                           	nop2	;2 cycle nop
 11533  0BFF  3200               	nop2	;2 cycle nop
 11534  0C00  3200               	opt asmopt_pop
 11535                           
 11536                           	line	231
 11537                           ;LCD_hd44780u_qy_2004a.c: 231:   }
 11538                           	
 11539                           i1l289:	
 11540  0C01                     	line	220
 11541                           ;LCD_hd44780u_qy_2004a.c: 220:   while(busyFlag == 1)
 11542                           		decf	((i1waitLCDBusy@busyFlag)),w
 11543  0C01  0373               iorwf	((i1waitLCDBusy@busyFlag+1)),w
 11544  0C02  0474               	btfsc	status,2
 11545  0C03  1903               	goto	u296_21
 11546  0C04  2C06               	goto	u296_20
 11547  0C05  2C07               u296_21:
 11548  0C06                     	goto	i1l290
 11549  0C06  2BE8               u296_20:
 11550  0C07                     	goto	i1l292
 11551  0C07  2C08               	
 11552                           i1l291:	
 11553  0C08                     	line	232
 11554                           	
 11555                           i1l292:	
 11556  0C08                     	return
 11557  0C08  0008               	opt stack 0
 11558                           GLOBAL	__end_ofi1_waitLCDBusy
 11559                           	__end_ofi1_waitLCDBusy:
 11560  0C09                     	signat	i1_waitLCDBusy,89
 11561                           	global	i1_SetToReadDataFromLCD
 11562                           
 11563 ;; *************** function i1_SetToReadDataFromLCD *****************
 11564 ;; Defined at:
 11565 ;;		line 197 in file "LCD_hd44780u_qy_2004a.c"
 11566 ;; Parameters:    Size  Location     Type
 11567 ;;		None
 11568 ;; Auto vars:     Size  Location     Type
 11569 ;;		None
 11570 ;; Return value:  Size  Location     Type
 11571 ;;                  1    wreg      void 
 11572 ;; Registers used:
 11573 ;;		None
 11574 ;; Tracked objects:
 11575 ;;		On entry : 0/0
 11576 ;;		On exit  : 0/0
 11577 ;;		Unchanged: 0/0
 11578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11583 ;;Total ram usage:        0 bytes
 11584 ;; Hardware stack levels used:    1
 11585 ;; This function calls:
 11586 ;;		Nothing
 11587 ;; This function is called by:
 11588 ;;		i1_waitLCDBusy
 11589 ;; This function uses a non-reentrant model
 11590 ;;
 11591                           psect	text40,local,class=CODE,delta=2,merge=1,group=0
 11592                           	line	197
 11593                           global __ptext40
 11594                           __ptext40:	;psect for function i1_SetToReadDataFromLCD
 11595  0A91                     psect	text40
 11596                           	file	"LCD_hd44780u_qy_2004a.c"
 11597                           	line	197
 11598                           	global	__size_ofi1_SetToReadDataFromLCD
 11599                           	__size_ofi1_SetToReadDataFromLCD	equ	__end_ofi1_SetToReadDataFromLCD-i1_SetToReadDataFr
                                 omLCD
 11600  0006                     	
 11601                           i1_SetToReadDataFromLCD:	
 11602  0A91                     ;incstack = 0
 11603                           	opt	stack 5
 11604                           ; Regs used in i1_SetToReadDataFromLCD: []
 11605                           	line	199
 11606                           	
 11607                           i1l4386:	
 11608  0A91                     ;LCD_hd44780u_qy_2004a.c: 199:   TRISAbits.TRISA3 = 1;
 11609                           	movlb 1	; select bank1
 11610  0A91  0021               	bsf	(140)^080h,3	;volatile
 11611  0A92  158C               	line	200
 11612                           ;LCD_hd44780u_qy_2004a.c: 200:   TRISCbits.TRISC2 = 1;
 11613                           	bsf	(142)^080h,2	;volatile
 11614  0A93  150E               	line	201
 11615                           ;LCD_hd44780u_qy_2004a.c: 201:   TRISCbits.TRISC1 = 1;
 11616                           	bsf	(142)^080h,1	;volatile
 11617  0A94  148E               	line	202
 11618                           ;LCD_hd44780u_qy_2004a.c: 202:   TRISCbits.TRISC0 = 1;
 11619                           	bsf	(142)^080h,0	;volatile
 11620  0A95  140E               	line	203
 11621                           	
 11622                           i1l283:	
 11623  0A96                     	return
 11624  0A96  0008               	opt stack 0
 11625                           GLOBAL	__end_ofi1_SetToReadDataFromLCD
 11626                           	__end_ofi1_SetToReadDataFromLCD:
 11627  0A97                     	signat	i1_SetToReadDataFromLCD,89
 11628                           	global	i1_setData
 11629                           
 11630 ;; *************** function i1_setData *****************
 11631 ;; Defined at:
 11632 ;;		line 113 in file "LCD_hd44780u_qy_2004a.c"
 11633 ;; Parameters:    Size  Location     Type
 11634 ;;  iValue          1    wreg     unsigned char 
 11635 ;; Auto vars:     Size  Location     Type
 11636 ;;  iValue          1    2[COMMON] unsigned char 
 11637 ;; Return value:  Size  Location     Type
 11638 ;;                  1    wreg      void 
 11639 ;; Registers used:
 11640 ;;		wreg, status,2, status,0
 11641 ;; Tracked objects:
 11642 ;;		On entry : 0/0
 11643 ;;		On exit  : 0/0
 11644 ;;		Unchanged: 0/0
 11645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11647 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11648 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11649 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11650 ;;Total ram usage:        3 bytes
 11651 ;; Hardware stack levels used:    1
 11652 ;; This function calls:
 11653 ;;		Nothing
 11654 ;; This function is called by:
 11655 ;;		i1_writeTxtChk
 11656 ;;		i1_setCursorPosition
 11657 ;; This function uses a non-reentrant model
 11658 ;;
 11659                           psect	text41,local,class=CODE,delta=2,merge=1,group=0
 11660                           	line	113
 11661                           global __ptext41
 11662                           __ptext41:	;psect for function i1_setData
 11663  0C69                     psect	text41
 11664                           	file	"LCD_hd44780u_qy_2004a.c"
 11665                           	line	113
 11666                           	global	__size_ofi1_setData
 11667                           	__size_ofi1_setData	equ	__end_ofi1_setData-i1_setData
 11668  003C                     	
 11669                           i1_setData:	
 11670  0C69                     ;incstack = 0
 11671                           	opt	stack 6
 11672                           ; Regs used in i1_setData: [wreg+status,2+status,0]
 11673                           ;i1setData@iValue stored from wreg
 11674                           	movwf	(i1setData@iValue)
 11675  0C69  00F2               	line	115
 11676                           	
 11677                           i1l4454:	
 11678  0C6A                     ;LCD_hd44780u_qy_2004a.c: 113: void setData(char iValue);LCD_hd44780u_qy_2004a.c: 114: {
                                 ;LCD_hd44780u_qy_2004a.c: 115:   PORTAbits.RA2 = 1;
 11679                           	movlb 0	; select bank0
 11680  0C6A  0020               	bsf	(12),2	;volatile
 11681  0C6B  150C               	line	116
 11682                           	
 11683                           i1l4456:	
 11684  0C6C                     ;LCD_hd44780u_qy_2004a.c: 116:   PORTAbits.RA3 = (iValue & 0x8) >> 3;
 11685                           	movf	(i1setData@iValue),w
 11686  0C6C  0872               	movwf	(??i1_setData+0)+0
 11687  0C6D  00F0               	movlw	03h
 11688  0C6E  3003               u294_25:
 11689  0C6F                     	lsrf	(??i1_setData+0)+0,f
 11690  0C6F  36F0               	decfsz	wreg,f
 11691  0C70  0B89               	goto	u294_25
 11692  0C71  2C6F               	movf	0+(??i1_setData+0)+0,w
 11693  0C72  0870               	andlw	01h
 11694  0C73  3901               	movwf	(??i1_setData+1)+0
 11695  0C74  00F1               	rlf	(??i1_setData+1)+0,f
 11696  0C75  0DF1               	rlf	(??i1_setData+1)+0,f
 11697  0C76  0DF1               	rlf	(??i1_setData+1)+0,f
 11698  0C77  0DF1               	movf	(12),w	;volatile
 11699  0C78  080C               	xorwf	(??i1_setData+1)+0,w
 11700  0C79  0671               	andlw	not (((1<<1)-1)<<3)
 11701  0C7A  39F7               	xorwf	(??i1_setData+1)+0,w
 11702  0C7B  0671               	movwf	(12)	;volatile
 11703  0C7C  008C               	line	117
 11704                           ;LCD_hd44780u_qy_2004a.c: 117:   PORTCbits.RC2 = (iValue & 0x4) >> 2;
 11705                           	movf	(i1setData@iValue),w
 11706  0C7D  0872               	movwf	(??i1_setData+0)+0
 11707  0C7E  00F0               	movlw	02h
 11708  0C7F  3002               u295_25:
 11709  0C80                     	lsrf	(??i1_setData+0)+0,f
 11710  0C80  36F0               	decfsz	wreg,f
 11711  0C81  0B89               	goto	u295_25
 11712  0C82  2C80               	movf	0+(??i1_setData+0)+0,w
 11713  0C83  0870               	andlw	01h
 11714  0C84  3901               	movwf	(??i1_setData+1)+0
 11715  0C85  00F1               	rlf	(??i1_setData+1)+0,f
 11716  0C86  0DF1               	rlf	(??i1_setData+1)+0,f
 11717  0C87  0DF1               	movf	(14),w	;volatile
 11718  0C88  080E               	xorwf	(??i1_setData+1)+0,w
 11719  0C89  0671               	andlw	not (((1<<1)-1)<<2)
 11720  0C8A  39FB               	xorwf	(??i1_setData+1)+0,w
 11721  0C8B  0671               	movwf	(14)	;volatile
 11722  0C8C  008E               	line	118
 11723                           ;LCD_hd44780u_qy_2004a.c: 118:   PORTCbits.RC1 = (iValue & 0x2) >> 1;
 11724                           	lsrf	(i1setData@iValue),w
 11725  0C8D  3672               	andlw	01h
 11726  0C8E  3901               	movwf	(??i1_setData+0)+0
 11727  0C8F  00F0               	rlf	(??i1_setData+0)+0,f
 11728  0C90  0DF0               	movf	(14),w	;volatile
 11729  0C91  080E               	xorwf	(??i1_setData+0)+0,w
 11730  0C92  0670               	andlw	not (((1<<1)-1)<<1)
 11731  0C93  39FD               	xorwf	(??i1_setData+0)+0,w
 11732  0C94  0670               	movwf	(14)	;volatile
 11733  0C95  008E               	line	119
 11734                           ;LCD_hd44780u_qy_2004a.c: 119:   PORTCbits.RC0 = (iValue & 0x1) ;
 11735                           	movlw	low(01h)
 11736  0C96  3001               	andwf	(i1setData@iValue),w
 11737  0C97  0572               	movwf	(??i1_setData+0)+0
 11738  0C98  00F0               	movf	(14),w	;volatile
 11739  0C99  080E               	xorwf	0+(??i1_setData+0)+0,w
 11740  0C9A  0670               	andlw	not ((1<<1)-1)
 11741  0C9B  39FE               	xorwf	0+(??i1_setData+0)+0,w
 11742  0C9C  0670               	movwf	(14)	;volatile
 11743  0C9D  008E               	line	120
 11744                           	
 11745                           i1l4458:	
 11746  0C9E                     ;LCD_hd44780u_qy_2004a.c: 120:   _delay((unsigned long)((1)*(16000000/4000000.0)));
 11747                           		opt asmopt_push
 11748                           	opt asmopt_off
 11749                           	nop2	;2 cycle nop
 11750  0C9E  3200               	nop2	;2 cycle nop
 11751  0C9F  3200               	opt asmopt_pop
 11752                           
 11753                           	line	121
 11754                           	
 11755                           i1l4460:	
 11756  0CA0                     ;LCD_hd44780u_qy_2004a.c: 121:   PORTAbits.RA2 = 0;
 11757                           	movlb 0	; select bank0
 11758  0CA0  0020               	bcf	(12),2	;volatile
 11759  0CA1  110C               	line	122
 11760                           	
 11761                           i1l4462:	
 11762  0CA2                     ;LCD_hd44780u_qy_2004a.c: 122:   _delay((unsigned long)((1)*(16000000/4000000.0)));
 11763                           		opt asmopt_push
 11764                           	opt asmopt_off
 11765                           	nop2	;2 cycle nop
 11766  0CA2  3200               	nop2	;2 cycle nop
 11767  0CA3  3200               	opt asmopt_pop
 11768                           
 11769                           	line	123
 11770                           	
 11771                           i1l256:	
 11772  0CA4                     	return
 11773  0CA4  0008               	opt stack 0
 11774                           GLOBAL	__end_ofi1_setData
 11775                           	__end_ofi1_setData:
 11776  0CA5                     	signat	i1_setData,89
 11777                           	global	i1_SetToSendDataToLCD
 11778                           
 11779 ;; *************** function i1_SetToSendDataToLCD *****************
 11780 ;; Defined at:
 11781 ;;		line 204 in file "LCD_hd44780u_qy_2004a.c"
 11782 ;; Parameters:    Size  Location     Type
 11783 ;;		None
 11784 ;; Auto vars:     Size  Location     Type
 11785 ;;		None
 11786 ;; Return value:  Size  Location     Type
 11787 ;;                  1    wreg      void 
 11788 ;; Registers used:
 11789 ;;		None
 11790 ;; Tracked objects:
 11791 ;;		On entry : 0/0
 11792 ;;		On exit  : 0/0
 11793 ;;		Unchanged: 0/0
 11794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11799 ;;Total ram usage:        0 bytes
 11800 ;; Hardware stack levels used:    1
 11801 ;; This function calls:
 11802 ;;		Nothing
 11803 ;; This function is called by:
 11804 ;;		i1_writeTxtChk
 11805 ;;		i1_setCursorPosition
 11806 ;; This function uses a non-reentrant model
 11807 ;;
 11808                           psect	text42,local,class=CODE,delta=2,merge=1,group=0
 11809                           	line	204
 11810                           global __ptext42
 11811                           __ptext42:	;psect for function i1_SetToSendDataToLCD
 11812  0A8B                     psect	text42
 11813                           	file	"LCD_hd44780u_qy_2004a.c"
 11814                           	line	204
 11815                           	global	__size_ofi1_SetToSendDataToLCD
 11816                           	__size_ofi1_SetToSendDataToLCD	equ	__end_ofi1_SetToSendDataToLCD-i1_SetToSendDataToLCD

 11817  0006                     	
 11818                           i1_SetToSendDataToLCD:	
 11819  0A8B                     ;incstack = 0
 11820                           	opt	stack 5
 11821                           ; Regs used in i1_SetToSendDataToLCD: []
 11822                           	line	206
 11823                           	
 11824                           i1l4464:	
 11825  0A8B                     ;LCD_hd44780u_qy_2004a.c: 206:   TRISAbits.TRISA3 = 0;;
 11826                           	movlb 1	; select bank1
 11827  0A8B  0021               	bcf	(140)^080h,3	;volatile
 11828  0A8C  118C               	line	207
 11829                           ;LCD_hd44780u_qy_2004a.c: 207:   TRISCbits.TRISC2 = 0;;
 11830                           	bcf	(142)^080h,2	;volatile
 11831  0A8D  110E               	line	208
 11832                           ;LCD_hd44780u_qy_2004a.c: 208:   TRISCbits.TRISC1 = 0;;
 11833                           	bcf	(142)^080h,1	;volatile
 11834  0A8E  108E               	line	209
 11835                           ;LCD_hd44780u_qy_2004a.c: 209:   TRISCbits.TRISC0 = 0;;
 11836                           	bcf	(142)^080h,0	;volatile
 11837  0A8F  100E               	line	210
 11838                           	
 11839                           i1l286:	
 11840  0A90                     	return
 11841  0A90  0008               	opt stack 0
 11842                           GLOBAL	__end_ofi1_SetToSendDataToLCD
 11843                           	__end_ofi1_SetToSendDataToLCD:
 11844  0A91                     	signat	i1_SetToSendDataToLCD,89
 11845                           	global	_TempUpdateRequest
 11846                           
 11847 ;; *************** function _TempUpdateRequest *****************
 11848 ;; Defined at:
 11849 ;;		line 80 in file "EM1812.c"
 11850 ;; Parameters:    Size  Location     Type
 11851 ;;		None
 11852 ;; Auto vars:     Size  Location     Type
 11853 ;;		None
 11854 ;; Return value:  Size  Location     Type
 11855 ;;                  2   62[None  ] int 
 11856 ;; Registers used:
 11857 ;;		wreg, status,2, status,0
 11858 ;; Tracked objects:
 11859 ;;		On entry : 0/0
 11860 ;;		On exit  : 0/0
 11861 ;;		Unchanged: 0/0
 11862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11867 ;;Total ram usage:        0 bytes
 11868 ;; Hardware stack levels used:    1
 11869 ;; This function calls:
 11870 ;;		Nothing
 11871 ;; This function is called by:
 11872 ;;		_myint
 11873 ;; This function uses a non-reentrant model
 11874 ;;
 11875                           psect	text43,local,class=CODE,delta=2,merge=1,group=0
 11876                           	file	"EM1812.c"
 11877                           	line	80
 11878                           global __ptext43
 11879                           __ptext43:	;psect for function _TempUpdateRequest
 11880  0AEF                     psect	text43
 11881                           	file	"EM1812.c"
 11882                           	line	80
 11883                           	global	__size_of_TempUpdateRequest
 11884                           	__size_of_TempUpdateRequest	equ	__end_of_TempUpdateRequest-_TempUpdateRequest
 11885  000D                     	
 11886                           _TempUpdateRequest:	
 11887  0AEF                     ;incstack = 0
 11888                           	opt	stack 8
 11889                           ; Regs used in _TempUpdateRequest: [wreg+status,2+status,0]
 11890                           	line	82
 11891                           	
 11892                           i1l3534:	
 11893  0AEF                     ;EM1812.c: 82:     if(wTempState == eIdle)
 11894                           		movlw	5
 11895  0AEF  3005               	movlb 0	; select bank0
 11896  0AF0  0020               	xorwf	((_wTempState)),w
 11897  0AF1  0659               	btfss	status,2
 11898  0AF2  1D03               	goto	u222_21
 11899  0AF3  2AF5               	goto	u222_20
 11900  0AF4  2AF6               u222_21:
 11901  0AF5                     	goto	i1l415
 11902  0AF5  2AFB               u222_20:
 11903  0AF6                     	line	84
 11904                           	
 11905                           i1l3536:	
 11906  0AF6                     ;EM1812.c: 83:     {;EM1812.c: 84:         wTempState = eSetGetTemp;
 11907                           	clrf	(_wTempState)
 11908  0AF6  01D9               	goto	i1l415
 11909  0AF7  2AFB               	line	85
 11910                           	
 11911                           i1l3538:	
 11912  0AF8                     ;EM1812.c: 85:         return 1;;	Return value of _TempUpdateRequest is never used
 11913                           	goto	i1l415
 11914  0AF8  2AFB               	line	86
 11915                           	
 11916                           i1l3540:	
 11917  0AF9                     ;EM1812.c: 86:     }
 11918                           	goto	i1l415
 11919  0AF9  2AFB               	line	87
 11920                           ;EM1812.c: 87:     else
 11921                           	
 11922                           i1l414:	
 11923  0AFA                     	line	89
 11924                           ;EM1812.c: 88:     {;EM1812.c: 89:         return 0;;	Return value of _TempUpdateRequest
                                  is never used
 11925                           	goto	i1l415
 11926  0AFA  2AFB               	line	90
 11927                           ;EM1812.c: 90:     }
 11928                           	
 11929                           i1l416:	
 11930  0AFB                     	line	92
 11931                           	
 11932                           i1l415:	
 11933  0AFB                     	return
 11934  0AFB  0008               	opt stack 0
 11935                           GLOBAL	__end_of_TempUpdateRequest
 11936                           	__end_of_TempUpdateRequest:
 11937  0AFC                     	signat	_TempUpdateRequest,90
 11938                           	global	_EUSARTInterrupt
 11939                           
 11940 ;; *************** function _EUSARTInterrupt *****************
 11941 ;; Defined at:
 11942 ;;		line 42 in file "EUSART.c"
 11943 ;; Parameters:    Size  Location     Type
 11944 ;;		None
 11945 ;; Auto vars:     Size  Location     Type
 11946 ;;  gErrorCode      1    4[COMMON] unsigned char 
 11947 ;; Return value:  Size  Location     Type
 11948 ;;                  2    0[COMMON] int 
 11949 ;; Registers used:
 11950 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11951 ;; Tracked objects:
 11952 ;;		On entry : 0/0
 11953 ;;		On exit  : 0/0
 11954 ;;		Unchanged: 0/0
 11955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11956 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11957 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11958 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11959 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11960 ;;Total ram usage:        5 bytes
 11961 ;; Hardware stack levels used:    1
 11962 ;; This function calls:
 11963 ;;		Nothing
 11964 ;; This function is called by:
 11965 ;;		_myint
 11966 ;; This function uses a non-reentrant model
 11967 ;;
 11968                           psect	text44,local,class=CODE,delta=2,merge=1,group=0
 11969                           	file	"EUSART.c"
 11970                           	line	42
 11971                           global __ptext44
 11972                           __ptext44:	;psect for function _EUSARTInterrupt
 11973  0F39                     psect	text44
 11974                           	file	"EUSART.c"
 11975                           	line	42
 11976                           	global	__size_of_EUSARTInterrupt
 11977                           	__size_of_EUSARTInterrupt	equ	__end_of_EUSARTInterrupt-_EUSARTInterrupt
 11978  0063                     	
 11979                           _EUSARTInterrupt:	
 11980  0F39                     ;incstack = 0
 11981                           	opt	stack 8
 11982                           ; Regs used in _EUSARTInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 11983                           	line	45
 11984                           	
 11985                           i1l3504:	
 11986  0F39                     ;EUSART.c: 44:     uint8_t gErrorCode;;EUSART.c: 45:     if( PIR1bits.TXIF == 1 )
 11987                           	movlb 0	; select bank0
 11988  0F39  0020               	btfss	(17),4	;volatile
 11989  0F3A  1E11               	goto	u215_21
 11990  0F3B  2F3D               	goto	u215_20
 11991  0F3C  2F3E               u215_21:
 11992  0F3D                     	goto	i1l3516
 11993  0F3D  2F58               u215_20:
 11994  0F3E                     	line	47
 11995                           	
 11996                           i1l3506:	
 11997  0F3E                     ;EUSART.c: 46:     {;EUSART.c: 47:       if(gTxReadingPosition < gTxTransmitSize)
 11998                           	movf	(_gTxTransmitSize),w
 11999  0F3E  084E               	subwf	(_gTxReadingPosition),w
 12000  0F3F  024F               	skipnc
 12001  0F40  1803               	goto	u216_21
 12002  0F41  2F43               	goto	u216_20
 12003  0F42  2F44               u216_21:
 12004  0F43                     	goto	i1l3512
 12005  0F43  2F52               u216_20:
 12006  0F44                     	line	49
 12007                           	
 12008                           i1l3508:	
 12009  0F44                     ;EUSART.c: 48:       {;EUSART.c: 49:           TXREG = gEusartTXBuffer[gTxReadingPositio
                                 n];
 12010                           	movf	(_gTxReadingPosition),w
 12011  0F44  084F               	addlw	low(_gEusartTXBuffer|((0x2)<<8))&0ffh
 12012  0F45  3EA0               	movwf	fsr1l
 12013  0F46  0086               	movlw 2	; select bank5/6
 12014  0F47  3002               	movwf fsr1h	
 12015  0F48  0087               	
 12016                           	movf	indf1,w
 12017  0F49  0801               	movlb 3	; select bank3
 12018  0F4A  0023               	movwf	(410)^0180h	;volatile
 12019  0F4B  009A               	line	50
 12020                           	
 12021                           i1l3510:	
 12022  0F4C                     ;EUSART.c: 50:           gTxReadingPosition++;
 12023                           	movlw	low(01h)
 12024  0F4C  3001               	movwf	(??_EUSARTInterrupt+0)+0
 12025  0F4D  00F2               	movf	(??_EUSARTInterrupt+0)+0,w
 12026  0F4E  0872               	movlb 0	; select bank0
 12027  0F4F  0020               	addwf	(_gTxReadingPosition),f
 12028  0F50  07CF               	line	51
 12029                           ;EUSART.c: 51:       }
 12030                           	goto	i1l3516
 12031  0F51  2F58               	line	52
 12032                           ;EUSART.c: 52:       else
 12033                           	
 12034                           i1l727:	
 12035  0F52                     	line	54
 12036                           	
 12037                           i1l3512:	
 12038  0F52                     ;EUSART.c: 53:       {;EUSART.c: 54:            gTxReadingPosition = 0;
 12039                           	clrf	(_gTxReadingPosition)
 12040  0F52  01CF               	line	55
 12041                           ;EUSART.c: 55:            gTxTransmitSize = 0;
 12042                           	clrf	(_gTxTransmitSize)
 12043  0F53  01CE               	line	56
 12044                           	
 12045                           i1l3514:	
 12046  0F54                     ;EUSART.c: 56:            PIE1bits.TXIE =0;
 12047                           	movlb 1	; select bank1
 12048  0F54  0021               	bcf	(145)^080h,4	;volatile
 12049  0F55  1211               	goto	i1l3516
 12050  0F56  2F58               	line	57
 12051                           ;EUSART.c: 57:       }
 12052                           	
 12053                           i1l728:	
 12054  0F57                     	goto	i1l3516
 12055  0F57  2F58               	line	58
 12056                           ;EUSART.c: 58:     }
 12057                           	
 12058                           i1l726:	
 12059  0F58                     	line	59
 12060                           	
 12061                           i1l3516:	
 12062  0F58                     ;EUSART.c: 59:     if( PIR1bits.RCIF == 1)
 12063                           	movlb 0	; select bank0
 12064  0F58  0020               	btfss	(17),5	;volatile
 12065  0F59  1E91               	goto	u217_21
 12066  0F5A  2F5C               	goto	u217_20
 12067  0F5B  2F5D               u217_21:
 12068  0F5C                     	goto	i1l729
 12069  0F5C  2F93               u217_20:
 12070  0F5D                     	line	61
 12071                           	
 12072                           i1l3518:	
 12073  0F5D                     ;EUSART.c: 60:     {;EUSART.c: 61:         if(RCSTAbits.FERR == 1 || RCSTAbits.OERR == 1
                                  )
 12074                           	movlb 3	; select bank3
 12075  0F5D  0023               	btfsc	(413)^0180h,2	;volatile
 12076  0F5E  191D               	goto	u218_21
 12077  0F5F  2F61               	goto	u218_20
 12078  0F60  2F62               u218_21:
 12079  0F61                     	goto	i1l3522
 12080  0F61  2F67               u218_20:
 12081  0F62                     	
 12082                           i1l3520:	
 12083  0F62                     	btfss	(413)^0180h,1	;volatile
 12084  0F62  1C9D               	goto	u219_21
 12085  0F63  2F65               	goto	u219_20
 12086  0F64  2F66               u219_21:
 12087  0F65                     	goto	i1l3524
 12088  0F65  2F76               u219_20:
 12089  0F66                     	goto	i1l3522
 12090  0F66  2F67               	
 12091                           i1l732:	
 12092  0F67                     	line	63
 12093                           	
 12094                           i1l3522:	
 12095  0F67                     ;EUSART.c: 62:         {;EUSART.c: 63:             gErrorCode = RCSTAbits.FERR + (RCSTAb
                                 its.OERR<<1);
 12096                           	rrf	(413)^0180h,w	;volatile
 12097  0F67  0C1D               	andlw	(1<<1)-1
 12098  0F68  3901               	movwf	(??_EUSARTInterrupt+0)+0
 12099  0F69  00F2               	movlw	01h
 12100  0F6A  3001               u220_25:
 12101  0F6B                     	lslf	(??_EUSARTInterrupt+0)+0,f
 12102  0F6B  35F2               	decfsz	wreg,f
 12103  0F6C  0B89               	goto	u220_25
 12104  0F6D  2F6B               	rrf	(413)^0180h,w	;volatile
 12105  0F6E  0C1D               	rrf	wreg,f
 12106  0F6F  0C89               	andlw	(1<<1)-1
 12107  0F70  3901               	addwf	0+(??_EUSARTInterrupt+0)+0,w
 12108  0F71  0772               	movwf	(??_EUSARTInterrupt+1)+0
 12109  0F72  00F3               	movf	(??_EUSARTInterrupt+1)+0,w
 12110  0F73  0873               	movwf	(EUSARTInterrupt@gErrorCode)
 12111  0F74  00F4               	line	64
 12112                           ;EUSART.c: 64:         }
 12113                           	goto	i1l729
 12114  0F75  2F93               	line	65
 12115                           ;EUSART.c: 65:         else
 12116                           	
 12117                           i1l730:	
 12118  0F76                     	line	67
 12119                           	
 12120                           i1l3524:	
 12121  0F76                     ;EUSART.c: 66:         {;EUSART.c: 67:             if(gEusartRXBufferIndex < sizeof(gEus
                                 artRXBuffer) )
 12122                           	movlw	low(032h)
 12123  0F76  3032               	movlb 0	; select bank0
 12124  0F77  0020               	subwf	(_gEusartRXBufferIndex),w
 12125  0F78  0250               	skipnc
 12126  0F79  1803               	goto	u221_21
 12127  0F7A  2F7C               	goto	u221_20
 12128  0F7B  2F7D               u221_21:
 12129  0F7C                     	goto	i1l3530
 12130  0F7C  2F8D               u221_20:
 12131  0F7D                     	line	69
 12132                           	
 12133                           i1l3526:	
 12134  0F7D                     ;EUSART.c: 68:             {;EUSART.c: 69:               gEusartRXBuffer[gEusartRXBuffer
                                 Index] = RCREG;
 12135                           	movlb 3	; select bank3
 12136  0F7D  0023               	movf	(409)^0180h,w	;volatile
 12137  0F7E  0819               	movwf	(??_EUSARTInterrupt+0)+0
 12138  0F7F  00F2               	movlb 0	; select bank0
 12139  0F80  0020               	movf	(_gEusartRXBufferIndex),w
 12140  0F81  0850               	addlw	low(_gEusartRXBuffer|((0x2)<<8))&0ffh
 12141  0F82  3E34               	movwf	fsr1l
 12142  0F83  0086               	movlw 2	; select bank4/5
 12143  0F84  3002               	movwf fsr1h	
 12144  0F85  0087               	
 12145                           	movf	(??_EUSARTInterrupt+0)+0,w
 12146  0F86  0872               	movwf	indf1
 12147  0F87  0081               	line	70
 12148                           	
 12149                           i1l3528:	
 12150  0F88                     ;EUSART.c: 70:               gEusartRXBufferIndex++;
 12151                           	movlw	low(01h)
 12152  0F88  3001               	movwf	(??_EUSARTInterrupt+0)+0
 12153  0F89  00F2               	movf	(??_EUSARTInterrupt+0)+0,w
 12154  0F8A  0872               	addwf	(_gEusartRXBufferIndex),f
 12155  0F8B  07D0               	line	71
 12156                           ;EUSART.c: 71:             }
 12157                           	goto	i1l729
 12158  0F8C  2F93               	line	72
 12159                           ;EUSART.c: 72:             else
 12160                           	
 12161                           i1l734:	
 12162  0F8D                     	line	74
 12163                           	
 12164                           i1l3530:	
 12165  0F8D                     ;EUSART.c: 73:             {;EUSART.c: 74:               gErrorCode = 3;
 12166                           	movlw	low(03h)
 12167  0F8D  3003               	movwf	(??_EUSARTInterrupt+0)+0
 12168  0F8E  00F2               	movf	(??_EUSARTInterrupt+0)+0,w
 12169  0F8F  0872               	movwf	(EUSARTInterrupt@gErrorCode)
 12170  0F90  00F4               	goto	i1l729
 12171  0F91  2F93               	line	75
 12172                           ;EUSART.c: 75:             }
 12173                           	
 12174                           i1l735:	
 12175  0F92                     	goto	i1l729
 12176  0F92  2F93               	line	76
 12177                           ;EUSART.c: 76:         }
 12178                           	
 12179                           i1l733:	
 12180  0F93                     	line	78
 12181                           ;EUSART.c: 78:     }
 12182                           	
 12183                           i1l729:	
 12184  0F93                     	line	79
 12185                           ;EUSART.c: 79:     return gErrorCode;
 12186                           	movf	(EUSARTInterrupt@gErrorCode),w
 12187  0F93  0874               	movwf	(??_EUSARTInterrupt+0)+0
 12188  0F94  00F2               	clrf	(??_EUSARTInterrupt+0)+0+1
 12189  0F95  01F3               	movf	0+(??_EUSARTInterrupt+0)+0,w
 12190  0F96  0872               	movwf	(?_EUSARTInterrupt)
 12191  0F97  00F0               	movf	1+(??_EUSARTInterrupt+0)+0,w
 12192  0F98  0873               	movwf	(?_EUSARTInterrupt+1)
 12193  0F99  00F1               	goto	i1l736
 12194  0F9A  2F9B               	
 12195                           i1l3532:	
 12196  0F9B                     	line	80
 12197                           	
 12198                           i1l736:	
 12199  0F9B                     	return
 12200  0F9B  0008               	opt stack 0
 12201                           GLOBAL	__end_of_EUSARTInterrupt
 12202                           	__end_of_EUSARTInterrupt:
 12203  0F9C                     	signat	_EUSARTInterrupt,90
 12204                           global	___latbits
 12205                           ___latbits	equ	3
 12206  0003                     	global	btemp
 12207                           	btemp set 07Eh
 12208  007E                     
 12209                           	DABS	1,126,2	;btemp
 12210                           	global	int$flags
 12211                           	int$flags	set btemp
 12212  007E                     	global	wtemp0
 12213                           	wtemp0 set btemp+0
 12214  007E                     	end


Data Sizes:
    Strings     97
    Constant    0
    Data        15
    BSS         272
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      64
    BANK1            80     73      75
    BANK2            80     26      43
    BANK3            80      0      47
    BANK4            80      0      70
    BANK5            80      0      50
    BANK6            80      0      75
    BANK7            80     75      75
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_10(CODE[9]), STR_9(CODE[7]), Esp8266SetNetworkParameters@wCommand(BANK7[70]), STR_1(CODE[17]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_10(CODE[9]), STR_9(CODE[7]), Esp8266SetNetworkParameters@wCommand(BANK7[70]), STR_1(CODE[17]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 70
		 -> Esp8266SetNetworkParameters@wCommand(BANK7[70]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 70
		 -> Esp8266SetNetworkParameters@wCommand(BANK7[70]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[7]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> Esp8266SetNetworkParameters@wNumber(BANK7[3]), STR_4(CODE[3]), STR_3(CODE[4]), STR_2(CODE[11]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[7]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> Esp8266SetNetworkParameters@wNumber(BANK7[3]), STR_4(CODE[3]), STR_3(CODE[4]), STR_2(CODE[11]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[9]), STR_9(CODE[7]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> Esp8266SetNetworkParameters@wNumber(BANK7[3]), STR_4(CODE[3]), STR_3(CODE[4]), 

    strcat@dest	PTR unsigned char  size(1) Largest target is 70
		 -> Esp8266SetNetworkParameters@wCommand(BANK7[70]), 

    memset@dest	PTR void  size(2) Largest target is 75
		 -> wI2CRxBuffer(BANK3[20]), wI2CTxBuffer(BANK3[20]), wInterruptText(BANK6[75]), 

    memset@s	PTR unsigned char  size(2) Largest target is 75
		 -> wI2CRxBuffer(BANK3[20]), wI2CTxBuffer(BANK3[20]), wInterruptText(BANK6[75]), 

    memcpy@d1	PTR void  size(2) Largest target is 50
		 -> gEusartTXBuffer(BANK5[50]), Esp8266Entrypoint@wEspBuffer(BANK1[50]), wI2CTxBuffer(BANK3[20]), EM1812EntryPoint@ReceptionBuffer(COMMON[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 50
		 -> gEusartTXBuffer(BANK5[50]), Esp8266Entrypoint@wEspBuffer(BANK1[50]), wI2CTxBuffer(BANK3[20]), EM1812EntryPoint@ReceptionBuffer(COMMON[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 70
		 -> gEusartRXBuffer(BANK4[50]), STR_8(CODE[14]), Esp8266SetNetworkParameters@wCommand(BANK7[70]), wI2CRxBuffer(BANK3[20]), 
		 -> EM1812EntryPoint@SetGetTempCommand(COMMON[4]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 70
		 -> gEusartRXBuffer(BANK4[50]), STR_8(CODE[14]), Esp8266SetNetworkParameters@wCommand(BANK7[70]), wI2CRxBuffer(BANK3[20]), 
		 -> EM1812EntryPoint@SetGetTempCommand(COMMON[4]), 

    memcmp@vr	PTR const void  size(2) Largest target is 7
		 -> STR_11(CODE[7]), 

    memcmp@r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[7]), 

    memcmp@vl	PTR const void  size(1) Largest target is 50
		 -> Esp8266Entrypoint@wEspBuffer(BANK1[50]), 

    memcmp@l	PTR const unsigned char  size(1) Largest target is 50
		 -> Esp8266Entrypoint@wEspBuffer(BANK1[50]), 

    EusartGetRxBuffer@oData	PTR unsigned char  size(1) Largest target is 50
		 -> Esp8266Entrypoint@wEspBuffer(BANK1[50]), 

    EusartGetRxBuffer@oNbOfByteReceived	PTR unsigned char  size(1) Largest target is 1
		 -> Esp8266Entrypoint@wEusartNbByteReceived(BANK1[1]), 

    Send_UART_Data@iData	PTR unsigned char  size(2) Largest target is 70
		 -> STR_8(CODE[14]), Esp8266SetNetworkParameters@wCommand(BANK7[70]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 70
		 -> Esp8266SetNetworkParameters@wCommand(BANK7[70]), 

    Esp8266SetNetworkParameters@iWifiPassword	PTR unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[9]), 

    Esp8266SetNetworkParameters@iWifiNetworkName	PTR unsigned char  size(2) Largest target is 7
		 -> STR_9(CODE[7]), 

    sp__uint8_tToa	PTR unsigned char  size(1) Largest target is 4
		 -> Esp8266Entrypoint@wReturnNumber(BANK1[4]), 

    uint8_tToa@wText	PTR unsigned char  size(1) Largest target is 4
		 -> Esp8266Entrypoint@wReturnNumber(BANK1[4]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 70
		 -> Esp8266SetNetworkParameters@wCommand(BANK7[70]), 

    sp__memcpy	PTR void  size(2) Largest target is 50
		 -> gEusartTXBuffer(BANK5[50]), Esp8266Entrypoint@wEspBuffer(BANK1[50]), wI2CTxBuffer(BANK3[20]), EM1812EntryPoint@ReceptionBuffer(COMMON[8]), 

    lcdWriteAllText@iText	PTR unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[14]), 

    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 9
		 -> STR_13(CODE[9]), Esp8266Entrypoint@wReturnNumber(BANK1[4]), STR_12(CODE[6]), myint@wText_460(BANK0[3]), 
		 -> myint@wText(BANK0[3]), 

    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
		 -> main@wEnterBottonPressed(BANK2[1]), main@wDownBottonPressed(BANK2[1]), main@wUpBottonPressed(BANK2[1]), 

    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
		 -> main@wDebounceDown(BANK2[2]), main@wDebounceUp(BANK2[2]), main@wDebounceEnter(BANK2[2]), 

    sp__memset	PTR void  size(2) Largest target is 75
		 -> wI2CRxBuffer(BANK3[20]), wI2CTxBuffer(BANK3[20]), wInterruptText(BANK6[75]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myint in COMMON

    _myint->i1_lcdWriteText
    i1_lcdWriteText->i1_writeTxtChk
    i1_writeTxtChk->i1_setCursorPosition
    i1_setCursorPosition->i1_waitLCDBusy

Critical Paths under _main in BANK0

    _setNotBlinkingCursor->_writeInsChk
    _setCursorOff->_writeInsChk
    _powerOnLcd->_writeInsChk
    _moveCursorToHome->_writeInsChk
    _initLCD->_writeInsChk
    _clearDisplay->_writeInsChk
    _writeInsChk->_waitLCDBusy
    _writeInsChk->_writeInsNoChk
    _writeInsNoChk->_setData
    _Esp8266Entrypoint->_lcdWriteText
    _uint8_tToa->___awdiv
    _lcdWriteText->_uint8_tToa
    _lcdWriteAllText->_writeTxtChk
    _writeTxtChk->_setCursorPosition
    _setCursorPosition->_waitLCDBusy
    _EusartGetRxBuffer->_memcpy
    _Esp8266SetNetworkParameters->_strcat
    _strcat->_strcpy
    _strcpy->_strlen
    _Send_UART_Data->_memcpy

Critical Paths under _myint in BANK0

    _myint->i1_lcdWriteText

Critical Paths under _main in BANK1

    _main->_Esp8266Entrypoint
    _Esp8266Entrypoint->_Esp8266SetNetworkParameters

Critical Paths under _myint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myint in BANK6

    None.

Critical Paths under _main in BANK7

    _Esp8266Entrypoint->_Esp8266SetNetworkParameters

Critical Paths under _myint in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myint in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myint in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myint in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myint in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myint in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0   26440
                                             71 BANK1      2     2      0
                                              0 BANK2     26    26      0
                           _Debounce
                         _EUSARTInit
                  _Esp8266Entrypoint
          _Esp8266SetAccessPointMode
                   _Esp8266SetupWifi
                       _clearDisplay
                            _initLCD
                             _memset
                   _moveCursorToHome
                         _powerOnLcd
                       _setCursorOff
               _setNotBlinkingCursor
 ---------------------------------------------------------------------------------
 (1) _setNotBlinkingCursor                                 1     1      0     254
                                             22 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _setCursorOff                                         1     1      0     254
                                             22 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _powerOnLcd                                           1     1      0     254
                                             22 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _moveCursorToHome                                     0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _memset                                              14     8      6    1897
                                             16 BANK0     14     8      6
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     632
                                             22 BANK0      1     1      0
                       _clearDisplay
                            _setData
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _clearDisplay                                         0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _writeInsChk                                          1     1      0     254
                                             21 BANK0      1     1      0
                        _waitLCDBusy
                      _writeInsNoChk
 ---------------------------------------------------------------------------------
 (3) _writeInsNoChk                                        2     2      0     186
                                             19 BANK0      2     2      0
                 _SetToSendDataToLCD
                            _setData
 ---------------------------------------------------------------------------------
 (1) _Esp8266SetupWifi                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Esp8266SetAccessPointMode                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Esp8266Entrypoint                                   57    57      0   21187
                                             14 BANK1     57    57      0
        _Esp8266SetNetworkParameters
            _EusartGetNbByteReceived
                  _EusartGetRxBuffer
                     _Send_UART_Data
                    _lcdWriteAllText
                       _lcdWriteText
                             _memcmp
                         _uint8_tToa
 ---------------------------------------------------------------------------------
 (2) _uint8_tToa                                           8     7      1    3532
                                             25 BANK0      8     7      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _memcmp                                              10     6      4     479
                                             16 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) _lcdWriteText                                         6     4      2    2122
                                             33 BANK0      5     3      2
                                              0 BANK1      1     1      0
                         _uint8_tToa (ARG)
                        _writeTxtChk
 ---------------------------------------------------------------------------------
 (2) _lcdWriteAllText                                      7     5      2    1804
                                             29 BANK0      7     5      2
                        _writeTxtChk
 ---------------------------------------------------------------------------------
 (3) _writeTxtChk                                          3     3      0    1522
                                             26 BANK0      3     3      0
                 _SetToSendDataToLCD
                  _setCursorPosition
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (4) _setCursorPosition                                    5     4      1    1237
                                             21 BANK0      5     4      1
                 _SetToSendDataToLCD
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (3) _waitLCDBusy                                          5     5      0      37
                                             16 BANK0      5     5      0
               _SetToReadDataFromLCD
 ---------------------------------------------------------------------------------
 (4) _SetToReadDataFromLCD                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setData                                              3     3      0     124
                                             16 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _SetToSendDataToLCD                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EusartGetRxBuffer                                    5     3      2    1766
                                             28 BANK0      5     3      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _EusartGetNbByteReceived                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Esp8266SetNetworkParameters                         89    83      6    9323
                                              0 BANK1     14     8      6
                                              0 BANK7     75    75      0
                     _Send_UART_Data
                            ___awdiv
                            ___awmod
                             _strcat
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcat                                               5     3      2    2347
                                             30 BANK0      5     3      2
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     850
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     6      2     389
                                             22 BANK0      8     6      2
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1333
                                             16 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1345
                                             16 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _Send_UART_Data                                       5     2      3    1817
                                             28 BANK0      5     2      3
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              12     6      6    1333
                                             16 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (1) _EUSARTInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Debounce                                             5     3      2     788
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _myint                                               11    11      0    1707
                                              5 BANK0     11    11      0
                    _EUSARTInterrupt
                  _TempUpdateRequest
                     i1_lcdWriteText
 ---------------------------------------------------------------------------------
 (8) i1_lcdWriteText                                       6     4      2    1282
                                             13 COMMON     1     1      0
                                              0 BANK0      5     3      2
                      i1_writeTxtChk
 ---------------------------------------------------------------------------------
 (9) i1_writeTxtChk                                        3     3      0    1082
                                             10 COMMON     3     3      0
               i1_SetToSendDataToLCD
                i1_setCursorPosition
                          i1_setData
                      i1_waitLCDBusy
 ---------------------------------------------------------------------------------
 (10) i1_setCursorPosition                                 5     4      1     797
                                              5 COMMON     5     4      1
               i1_SetToSendDataToLCD
                          i1_setData
                      i1_waitLCDBusy
 ---------------------------------------------------------------------------------
 (10) i1_waitLCDBusy                                       5     5      0      37
                                              0 COMMON     5     5      0
             i1_SetToReadDataFromLCD
 ---------------------------------------------------------------------------------
 (11) i1_SetToReadDataFromLCD                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_setData                                           3     3      0     124
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (11) i1_SetToSendDataToLCD                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TempUpdateRequest                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSARTInterrupt                                      5     3      2      24
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Debounce
   _EUSARTInit
   _Esp8266Entrypoint
     _Esp8266SetNetworkParameters
       _Send_UART_Data
         _memcpy
       ___awdiv
       ___awmod
       _strcat
         _strcpy
           _strlen (ARG)
         _strlen
       _strcpy
         _strlen (ARG)
       _strlen
     _EusartGetNbByteReceived
     _EusartGetRxBuffer
       _memcpy
     _Send_UART_Data
       _memcpy
     _lcdWriteAllText
       _writeTxtChk
         _SetToSendDataToLCD
         _setCursorPosition
           _SetToSendDataToLCD
           _setData
           _waitLCDBusy
             _SetToReadDataFromLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
     _lcdWriteText
       _uint8_tToa (ARG)
         ___awdiv
         ___awmod
       _writeTxtChk (ARG)
         _SetToSendDataToLCD
         _setCursorPosition
           _SetToSendDataToLCD
           _setData
           _waitLCDBusy
             _SetToReadDataFromLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
     _memcmp
     _uint8_tToa
       ___awdiv
       ___awmod
   _Esp8266SetAccessPointMode
   _Esp8266SetupWifi
   _clearDisplay
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _initLCD
     _clearDisplay
       _writeInsChk
         _waitLCDBusy
           _SetToReadDataFromLCD
         _writeInsNoChk
           _SetToSendDataToLCD
           _setData
     _setData
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _memset
   _moveCursorToHome
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _powerOnLcd
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _setCursorOff
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _setNotBlinkingCursor
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData

 _myint (ROOT)
   _EUSARTInterrupt
   _TempUpdateRequest
   i1_lcdWriteText
     i1_writeTxtChk
       i1_SetToSendDataToLCD
       i1_setCursorPosition
         i1_SetToSendDataToLCD
         i1_setData
         i1_waitLCDBusy
           i1_SetToReadDataFromLCD
       i1_setData
       i1_waitLCDBusy
         i1_SetToReadDataFromLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     49      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     1A      2B       9       53.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      2F      11       58.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      46      13       87.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      32      15       62.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      4B      17       93.8%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50     4B      4B      19       93.8%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     201      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     201      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Feb 26 22:26:32 2019

                                   __CFG_FOSC$ 0002                                    __CFG_CP$OFF 0000  
                                  _SSPSTATbits 0214                                   ___awdiv@sign 0036  
                           _SetToSendDataToLCD 0A97           __size_of_Esp8266SetNetworkParameters 0120  
                                  ?_EUSARTInit 0070                                            l132 0D32  
                                          l133 0D3A                                            l134 0D4F  
                                          l230 0C54                                            l135 0D6C  
                                          l231 0C3B                                            l151 019C  
                                          l136 0D6C                                            l240 0E01  
                                          l232 0C68                                            l304 0AEE  
                                          l160 0228                                            l152 0209  
                                          l241 0DCA                                            l233 0C68  
                                          l161 0219                                            l153 01F4  
                                          l242 0DD3                                            l170 0279  
                                          l162 023D                                            l154 01E2  
                                          l243 0E18                                            l331 0A8A  
                                          l227 0FFF                                            l307 0AE3  
                                          l171 027A                                            l163 021A  
                                          l155 0208                                            l340 0E84  
                                          l260 06CF                                            l244 0E18  
                                          l236 0E07                                            l172 027B  
                                          l164 0222                                            l156 01E3  
                                          l341 0E8F                                            l261 0678  
                                          l237 0DC0                                            l173 027B  
                                          l165 0223                                            l157 01EB  
                                          l342 0E9A                                            l270 06B0  
                                          l262 0653                                            l238 0DE5  
                                          l334 0AC2                                            l166 0260  
                                          l158 01EC                                            l343 0EA5  
                                          l271 0680                                            l263 0676  
                                          l239 0DC1                                            l167 0259  
                                          l159 023E                                            l256 0CE0  
                                          l344 0ED6                                            l272 0687  
                                          l264 0660                                            l280 0B28  
                                          l168 025F                                            l337 0EA7  
                                          l273 068E                                            l265 0675  
                                          l169 026F                                            l290 07DE  
                                          l338 0E7B                                            l274 0697  
                                          l266 066D                                            l283 0AA2  
                                          l291 07FE                                            l339 0EBD  
                                          l267 0674                                            l259 063B  
                                          l292 07FE                                            l268 0699  
                                          l269 0679                                            l277 0ACD  
                                          l286 0A9C                                            l721 0B93  
                                          l641 03F2                                            l289 07F6  
                                          l722 0BB1                                            l298 0AD8  
                                          l723 0BB1                                            l643 03ED  
                                          l635 0A80                                            l900 07CC  
                                          l644 04BD                                            l660 02BC  
                                          l901 07D1                                            l645 04BD  
                                          l661 027F                                            l718 0B10  
                                          l910 0E4A                                            l646 0468  
                                          l742 0D03                                            l670 02E5  
                                          l662 02D4                                            l638 0A85  
                                          l911 0E59                                            l647 0471  
                                          l743 0D1E                                            l583 0605  
                                          l671 02EE                                            l663 029D  
                                          l912 0E65                                            l904 0E27  
                                          l648 048A                                            l744 0D20  
                                          l584 062E                                            l680 0380  
                                          l672 0310                                            l664 02B6  
                                          l913 0E71                                            l905 0E31  
                                          l649 0494                                            l585 0620  
                                          l673 030F                                            l681 039D  
                                          l665 02B7                                            l914 0E76  
                                          l906 0E66                                            l586 062D  
                                          l658 0382                                            l674 031A  
                                          l666 02B7                                            l907 0E44  
                                          l739 0A7C                                            l587 0630  
                                          l675 031B                                            l667 02E1  
                                          l659 027E                                            l908 0E3A  
                                          l676 037E                                            l668 02E4  
                                          l909 0E49                                            l669 039D  
                                          l677 0372                                            l678 037D  
                                          l679 037F                                            l891 0776  
                                          l892 0784             Esp8266SetNetworkParameters@iHidden 00A5  
                                          l893 07C1                                            l894 0799  
                                          l895 078F                                            l896 079E  
                                          l897 079F                                            l898 07B4  
                                          l899 07C0                          _wReceptionCounterPrev 0055  
                                 ___awmod@sign 0036                                   __CFG_BORV$LO 0000  
                   __size_of_EusartGetRxBuffer 0040                                            wreg 0009  
                          ?_SetToSendDataToLCD 0070                                   __CFG_LVP$OFF 0000  
                               ??_lcdWriteText 0043            Esp8266SetNetworkParameters@iChannel 00A4  
                               myint@wI2CError 0029                                           l1200 04CB  
                                         l1201 058E                                           l1202 04EE  
                                         l1203 0535                                           l1220 0B8A  
                                         l1204 055E                                           l1205 0587  
                                         l1214 0B41                                           l1206 0578  
                                         l1223 0B4D                                           l1207 058E  
                                         l1224 0B48                                           l1217 0B72  
                                         l1225 0B57                                           l1218 0B71  
                                         l1226 0B65                                           l1219 0B8A  
                                         l1190 0DBB                                           l1182 0D84  
                                         l1191 0DBC                                           l1183 0D78  
                                         l1185 0D9A                                           l1194 0C2A  
                                         l1186 0D9B                                           l1195 0C13  
                                         l1196 0C37                                           l1188 0DA4  
                                         l1197 0C37                                           l5000 02F7  
                                         l5010 031B                                           l5002 02FC  
                                         l5020 0357                                           l5012 0323  
                                         l5004 0308                                           l5100 00FB  
                                         l5030 0381                                           l5022 0368  
                                         l5014 0333                                           l5006 0310  
                                         l5110 0105                                           l5102 00FD  
                                         l4400 0E7B                                           l5024 036B  
                                         l5016 0339                                           l5008 0318  
                                         l5032 0382                                           l5200 020F  
                                         l5120 010C                                           l5112 0106  
                                         l5104 00FE                                           l4402 0E84  
                                         l4410 0EA7                                           l5018 0350  
                                         l5026 0372                                           l5042 0A7D  
                                         l5210 0223                                           l5202 0211  
                                         l5130 0118                                           l5122 010F  
                                         l5114 0107                                           l5106 00FF  
                                         l4420 0EC6                                           l4404 0E8F  
                                         l4412 0EBD                                           l4500 0653  
                                         l5028 037A                                           l5044 0A81  
                                         l5220 0246                                           l5212 0227  
                                         l5204 0212                                           l5140 0139  
                                         l5132 011B                                           l5124 0112  
                                         l5116 0108                                           l5108 0101  
                                         l4422 0ED1                                           l4414 0EC0  
                                         l4406 0E9A                                           l4510 0677  
                                         l4502 065A                                           l5046 0A83  
                                         l4430 0B16                                           l5230 0259  
                                         l5222 0247                                           l5214 0228  
                                         l5206 0215                                           l5150 015A  
                                         l5142 013C                                           l5134 011E  
                                         l5126 0114                                           l5118 010A  
                                         l5070 00E3                                           l4440 0C13  
                                         l4600 07C6                                           l4360 0CA8  
                                         l4416 0EC3                                           l4408 0EA6  
                                         l4520 0694                                           l4512 0679  
                                         l4504 0660                                           l4432 0B18  
                                         l5240 026F                                           l5232 025C  
                                         l5224 024C                                           l5208 021A  
                                         l5216 023E                                           l5160 017E  
                                         l5152 0166                                           l5144 0148  
                                         l5136 012A                                           l5128 0117  
                                         l5080 00EA                                           l5072 00E5  
                                         l5064 00CA                                           l4442 0C1B  
                                         l4602 07CC                                           l4610 0E1F  
                                         l4450 0B68                                           l4362 0CDA  
                                         l4370 07D2                                           l4418 0EC5  
                                         l4530 06B6                                           l4522 0698  
                                         l4514 0680                                           l4506 0667  
                                         l4434 0B19                                           l5242 0275  
                                         l5226 024E                                           l5218 0244  
                                         l5234 0260                                           l5170 018D  
                                         l5162 0181                                           l5154 0169  
                                         l5146 014B                                           l5138 012D  
                                         l5090 00F2                                           l5082 00EB  
                                         l5074 00E6                                           l5066 00D1  
                                         l4444 0C1F                                           l4604 07D1  
                                         l4620 0E37                                           l4612 0E24  
                                         l4452 0B72                                           l4364 0CDC  
                                         l4356 0A9D                                           l4380 07EE  
                                         l4372 07D5                                           l4540 06CA  
                                         l4532 06B8                                           l4516 0687  
                                         l4508 066D                                           l4524 0699  
                                         l4436 0B23                                           l4428 0B13  
                                         l5244 0277                                           l5236 0266  
                                         l5228 0255                                           l5180 01B5  
                                         l5172 018E                                           l5164 0189  
                                         l5156 0179                                           l5148 0157  
                                         l5092 00F4                                           l5084 00EC  
                                         l5076 00E8                                           l5068 00E0  
                                         l4446 0C25                                           l4438 0C09  
                                         l4550 0B8B                                           l4630 0E54  
                                         l4622 0E3A                                           l4614 0E27  
                                         l4606 0E19                                           l4390 0B48  
                                         l4366 0CDE                                           l4358 0CA7  
                                         l4382 07F2                                           l4374 07D8  
                                         l4534 06B9                                           l4518 068E  
                                         l4526 06B0                                           l4710 05E6  
                                         l5238 0268                                           l5190 01E3  
                                         l5182 01C6                                           l5174 019C  
                                         l5166 018B                                           l5158 017B  
                                         l5094 00F6                                           l5086 00EE  
                                         l5078 00E9                                           l4448 0C2A  
                                         l4560 0B9E                                           l4552 0B92  
                                         l4640 0E71                                           l4632 0E59  
                                         l4624 0E3F                                           l4616 0E2B  
                                         l4608 0E1B                                           l4392 0B4D  
                                         l4368 0A97                                           l4384 07F4  
                                         l4376 07E1                                           l4536 06C3  
                                         l4528 06B3                                           l4720 062E  
                                         l4712 0605                                           l4704 0591  
                                         l5192 01EC                                           l5184 01D8  
                                         l5176 019F                                           l5168 018C  
                                         l5096 00F8                                           l5088 00F0  
                                         l4554 0B93                                           l4570 0776  
                                         l4562 0768                                           l4642 0E76  
                                         l4634 0E5E                                           l4626 0E44  
                                         l4618 0E31                                           l4394 0B57  
                                         l4546 0B2B                                           l4730 03F0  
                                         l4378 07ED                                           l4538 06C8  
                                         l4490 063E                                           l4722 0630  
                                         l4714 060A                                           l4706 05DD  
                                         l4482 0AC5                                           l5194 01F3  
                                         l5186 01DE                                           l5178 01A4  
                                         l5098 00FA                                           l4556 0B99  
                                         l4580 078C                                           l4572 077A  
                                         l4564 076A                                           l4628 0E4A  
                                         l4636 0E66                                           l4396 0B65  
                                         l4388 0B42                                           l4548 0B41  
                                         l4740 0460                                           l4732 03F1  
                                         l4724 039E                                           l4492 0640  
                                         l4484 0633                                           l4716 0620  
                                         l4708 05E1                                           l4900 0587  
                                         l5196 01F4                                           l5188 01E0  
                                         l4910 0D48                                           l4902 0D23  
                                         l4558 0B9A                                           l4590 07AE  
                                         l4582 078F                                           l4574 077F  
                                         l4566 076E                                           l4638 0E6B  
                                         l4750 047A                                           l4742 0466  
                                         l4734 03F2                                           l4726 03A5  
                                         l4398 0E79                                           l4494 0641  
                                         l4486 063A                                           l4718 0628  
                                         l5198 0209                                           l4912 0D4F  
                                         l4904 0D28                                           l4920 0B02  
                                         l4592 07B2                                           l4584 0794  
                                         l4576 0784                                           l4568 0773  
                                         l4760 04B3                                           l4752 0480  
                                         l4744 0468                                           l4736 0425  
                                         l4728 03ED                                           l4496 0647  
                                         l4488 063B                                           l4680 0C54  
                                         l4914 0D5D                                           l4906 0D32  
                                         l4930 0B0B                                           l4922 0B06  
                                         l4594 07B4                                           l4586 0799  
                                         l4578 0786                                           l4762 04BC  
                                         l4754 048A                                           l4746 046F  
                                         l4738 042C                                           l4770 0CE9  
                                         l4498 064D                                           l4690 0DD3  
                                         l4674 0C38                                           l4682 0A86  
                                         l5730 01FD                                           l4916 0D65  
                                         l4908 0D3A                                           l4932 0B0C  
                                         l4924 0B08                                           l4596 07B9  
                                         l4588 079F                                           l4756 0494  
                                         l4748 0471                                           l4764 0A79  
                                         l4772 0CF0                                           l5740 06A2  
                                         l4692 0DE4                                           l4684 0DBD  
                                         l4676 0C3B                                           l4780 0D6F  
                                         l4940 0FB8                                           l4860 04BE  
                                         l5732 0232                                           l4934 0B0E  
                                         l4926 0B09                                           l4918 0AFC  
                                         l4598 07C1                                           l4758 04A4  
                                         l4766 0A7C                                           l4774 0D03  
                                         l5742 0EAF                                           l4686 0DC1  
                                         l4694 0DE5                                           l4678 0C4D  
                                         l4790 0D9B                                           l4782 0D78  
                                         l5734 02C6                                           l4950 0FDC  
                                         l4942 0FC0                                           l4870 04E3  
                                         l4862 04C3                                           l4936 0B0F  
                                         l4928 0B0A                                           l4776 0D0B  
                                         l4768 0CE3                                           l4688 0DCA  
                                         l4696 0E01                                           l4792 0DA1  
                                         l4784 0D7C                                           l5736 038C  
                                         l4952 0FE0                                           l4944 0FC4  
                                         l4880 0535                                           l4872 04ED  
                                         l4864 04CA                                           l4960 0ACE  
                                         l4778 0D1E                                           l5738 0DF9  
                                         l4698 0E07                                           l4794 0DA4  
                                         l4786 0D80                                           l4954 0FE8  
                                         l4946 0FD1                                           l4938 0F9C  
                                         l4890 056F                                           l4882 0553  
                                         l4874 04EE                                           l4866 04CB  
                                         l4970 0ABF                                           l4962 0AD4  
                                         l4796 0DBC                                           l4788 0D8A  
                                         l4980 0285                                           l4956 0FED  
                                         l4948 0FD4                                           l4892 0573  
                                         l4884 055D                                           l4876 052A  
                                         l4868 04D1                                           l4964 0AD9  
                                         l4972 0AE4                                           l4990 02D4  
                                         l4982 028D                                           l4958 0FFC  
                                         l4894 0578                                           l4886 055E  
                                         l4878 0534                                           l4966 0ADF  
                                         l4974 0AEA                                           l4992 02DA  
                                         l4984 029D                                           l4976 027D  
                                         l4896 057E                                           l4888 056B  
                                         l4968 0ABB                                           l4994 02E5  
                                         l4986 02BB                                           l4978 027F  
                                         l4898 0582                                           l4996 02E7  
                                         l4988 02BC                                           l4998 02EE  
                                         STR_1 1000                                           STR_2 101F  
                                         STR_3 105A                                           STR_4 105E  
                                         STR_5 1055                                           STR_6 1050  
                                         STR_7 1011                                           STR_8 1011  
                                         STR_9 1043             Esp8266SetNetworkParameters@wNumber 03E6  
                                         u3000 065A                                           u3001 0659  
                                         u3010 0667                                           u3011 0666  
                                         u3030 0B91                                           u3110 07AE  
                                         u3031 0B90                                           u3111 07AD  
                                         u3040 0B99                                           u3200 0E54  
                                         u3041 0B98                                           u3105 07A0  
                                         u3201 0E53                                           u3025 06BC  
                                         u3130 07BF                                           u3050 076E  
                                         u3131 07BE                                           u3115 07AA  
                                         u3051 076D                                           u3140 07C6  
                                         u3060 077A                                           u3220 0E64  
                                         u3300 03EC                                           u3141 07C5  
                                         u3125 07B5                                           u3061 0779  
                                         u3221 0E63                                           u3205 0E50  
                                         u3301 03EB                                           u3070 078C  
                                         u3230 0E6B                                           u3150 0E1F  
                                         u3310 042C                                           u3071 078B  
                                         u3231 0E6A                                           u3215 0E5A  
                                         u3151 0E1E                                           u3311 042B  
                                         u4007 0194                                           u3160 0E2B  
                                         u3320 0480                                           u3161 0E2A  
                                         u3321 047F                                           u4017 0FBC  
                                         u3090 079D                                           u3170 0E37  
                                         u3330 0CE9                                           u3250 0C67  
                                         u3091 079C                                           u3171 0E36  
                                         u3331 0CE8                                           u3251 0C66  
                                         u4027 0FC8                                           u3500 0D5D  
                                         u3260 0E17                                           u3340 0D8A  
                                         u3501 0D5C                                           u3085 0790  
                                         u3261 0E16                                           u3341 0D89  
                                         u4037 0FD2                                           u3190 0E48  
                                         u3350 0D99                                           u3270 05E6  
                                         u3510 02DA                                           u3430 04C9  
                                         u3191 0E47                                           u3351 0D98  
                                         u3271 05E5                                           u3511 02D9  
                                         u4047 0FD9                                           u3431 04C8  
                                         u3360 0DA1                                           u3280 060A  
                                         u3520 02F7                                           u3440 04EC  
                                         u3600 020F                                           u3185 0E3B  
                                         u3361 0DA0                                           u3281 0609  
                                         u3521 02F6                                           u4057 0FE1  
                                         u3441 04EB                                           u3601 020E  
                                         u3290 03A5                                           u3530 02FC  
                                         u3450 0533                                           u3610 0244  
                                         u3291 03A4                                           u3531 02FB  
                                         u3451 0532                                           u3611 0243  
                                         u3540 0308                                           u3460 055C  
                                         u3620 024C                                           u3541 0307  
                                         u3461 055B                                           u3621 024B  
                                         u3550 0323                                           u3470 058D  
                                         u3630 0266                                           u3551 0322  
                                         u3471 058C                                           u3631 0265  
                                         u3480 0D28                                           u2920 0C36  
                                         u3560 0350                                           u3640 0275  
                                         u3481 0D27                                           u2921 0C35  
                                         u2905 0EC9                                           u3561 034F  
                                         u3641 0274                                           u3490 0D48  
                                         u2930 0B89  Esp8266SetNetworkParameters@wCommandSizeReturn 03E9  
                                         u3491 0D47                                           u2931 0B88  
                                         u2915 0B1C                                           u3590 01DE  
                                         u3591 01DD                                           u2880 07FD  
                                         u2865 0CAB                                           u2881 07FC  
                                         u2890 0B56                                           u2970 0639  
                                         u2891 0B55                                           u2875 0CBC  
                                         u2971 0638                                           u2980 0647  
                                         u2981 0646                                           u2990 064D  
                                         u2991 064C                                           u3947 0124  
                                         u3957 0133                                           u3967 0142  
                                         u3977 0151                                           u3987 0160  
                                         u3997 0185                                           _TMR0 0015  
                                         _WPUB 020D                                   __CFG_WRT$OFF 0000  
                                         _main 00CA                                           _test 0048  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                  __CFG_BOREN$ON 0000  
                                         start 006D                                  __CFG_IESO$OFF 0000  
                         ??_SetToSendDataToLCD 0030                           __end_of_clearDisplay 0A8B  
                    __size_of_Esp8266SetupWifi 0005            Esp8266SetNetworkParameters@wCommand 03A0  
                             ??_Send_UART_Data 003F                                   main@wCounter 0128  
                                        ?_main 0070                                    _writeInsChk 0AC3  
                              __end_of___awdiv 07D2                                          STR_10 102A  
                                        STR_11 103C                                          STR_12 104A  
                                        STR_13 1033                                  __CFG_WDTE$OFF 0000  
                              __end_of___awmod 0E77                                ___awdiv@divisor 0030  
                                        i1l230 0BCA                                          i1l231 0BB4  
                                        i1l232 0BDC                                          i1l233 0BDC  
                                        i1l340 0EE4                                          i1l260 0767  
                                        i1l180 001F                                          i1l341 0EF0  
                                        i1l261 0715                                          i1l181 003F  
                                        i1l414 0AFA                                          i1l342 0EFC  
                                        i1l270 0749                                          i1l262 06F1  
                                        i1l182 0060                                          i1l415 0AFB  
                                        i1l343 0F08                                          i1l271 071C  
                                        i1l263 0713                                          i1l183 0054  
                                        i1l416 0AFB                                          i1l256 0CA4  
                                        i1l344 0F38                                          i1l272 0722  
                                        i1l264 06FE                                          i1l184 005F  
                                        i1l337 0F0A                                          i1l273 0728  
                                        i1l265 0712                                          i1l185 006B  
                                        i1l290 0BE8                                          i1l338 0EDA  
                                        i1l274 0730                                          i1l266 070B  
                                        i1l186 006B                                          i1l283 0A96  
                                        i1l291 0C08                                          i1l339 0F20  
                                        i1l267 0711                                          i1l259 06D9  
                                        i1l292 0C08                                          i1l268 0732  
                                        i1l269 0716                                          i1l286 0A90  
                                        i1l289 0C01                                          i1l730 0F76  
                                        i1l732 0F67                                          i1l733 0F93  
                                        i1l734 0F8D                                          i1l726 0F58  
                                        i1l735 0F92                                          i1l727 0F52  
                                        i1l736 0F9B                                          i1l728 0F57  
                                        i1l729 0F93                                ___awdiv@counter 0035  
                                        _RCREG 0199                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _PORTA 000C  
                                        _PORTB 000D                                          _TRISB 008D  
                                        _TXREG 019A                                    _writeTxtChk 0631  
                                __CFG_PWRTE$ON 0000                                 __CFG_FCMEN$OFF 0000  
                      ?i1_SetToReadDataFromLCD 0070                                __end_of_initLCD 1000  
                       ??_SetToReadDataFromLCD 0030                                          _myint 0004  
                              __end_of_setData 0CE1                              ??_EUSARTInterrupt 0072  
                     _wI2CRxNbOfByteToReceived 0053                  Esp8266Entrypoint@wCommandsize 0142  
                                        status 0003                                          wtemp0 007E  
                          __size_of_EUSARTInit 0015                               __end_of_Debounce 0D6D  
                       ??_setNotBlinkingCursor 0036                                 __CFG_MCLRE$OFF 0000  
                  Esp8266Entrypoint@wEspBuffer 00B0                                __initialization 006F  
                i1lcdWriteText@wCharReadingPos 007D                                   __end_of_main 027D  
                         _gEusartRXBufferIndex 0050                       __size_of_lcdWriteAllText 005C  
                          i1lcdWriteText@iText 0020                             __size_ofi1_setData 003C  
                               __CFG_LPBOR$OFF 0000                                 myint@wText_460 0026  
                                       ??_main 00E7                 __end_ofi1_SetToReadDataFromLCD 0A97  
                        __end_ofi1_writeTxtChk 0768                                   ?_waitLCDBusy 0070  
                         EM1812EntryPoint@wTry 004A                               ___awdiv@dividend 0032  
                                       ?_myint 0070                                         _ANSELB 018D  
                                       i1l3510 0F4C                                         i1l3520 0F62  
                                       i1l3512 0F52                                         i1l3504 0F39  
                                       i1l3530 0F8D                                         i1l3522 0F67  
                                       i1l3514 0F54                                         i1l3506 0F3E  
                                       i1l5050 0BB4                                         i1l3532 0F9B  
                                       i1l3524 0F76                                         i1l3508 0F44  
                                       i1l3516 0F58                                         i1l3540 0AF9  
                                       i1l5052 0BC4                                         i1l3526 0F7D  
                                       i1l3518 0F5D                                         i1l3534 0AEF  
                                       i1l5054 0BCA                                         i1l3528 0F88  
                                       i1l3536 0AF6                                         i1l5048 0BB2  
                                       i1l3538 0AF8                                         i1l4460 0CA0  
                                       i1l5260 000D                                         i1l4462 0CA2  
                                       i1l4454 0C6A                                         i1l4470 0BE3  
                                       i1l5270 0027                                         i1l5262 0011  
                                       i1l4464 0A8B                                         i1l4456 0C6C  
                                       i1l4480 0BFF                                         i1l4472 0BEC  
                                       i1l4800 06D8                                         i1l5272 002D  
                                       i1l5280 003F                                         i1l5264 0016  
                                       i1l4458 0C9E                                         i1l4386 0A91  
                                       i1l4474 0BF8                                         i1l4466 0BDD  
                                       i1l4650 0EF0                                         i1l4810 06E5  
                                       i1l4802 06D9                                         i1l5290 005A  
                                       i1l5282 0044                                         i1l5274 0031  
                                       i1l5266 0017                                         i1l5258 0006  
                                       i1l4476 0BF9                                         i1l4468 0BE0  
                                       i1l4660 0F23                                         i1l4652 0EFC  
                                       i1l4644 0ED8                                         i1l4820 0705  
                                       i1l4812 06EB                                         i1l4804 06DC  
                                       i1l5292 005B                                         i1l5284 0048  
                                       i1l5276 0036                                         i1l5268 001F  
                                       u220_25 0F6B                                         i1l4478 0BFD  
                                       i1l4662 0F26                                         i1l4654 0F09  
                                       i1l4646 0EDA                                         i1l4830 0722  
                                       i1l4822 070B                                         i1l4814 06F1  
                                       i1l4806 06DE                                         i1l5286 004F  
                                       i1l5294 0060                                         i1l5278 0037  
                                       u221_20 0F7D                                         i1l4664 0F28  
                                       i1l4648 0EE4                                         i1l4656 0F0A  
                                       i1l4832 0728                                         i1l4840 0749  
                                       i1l4824 0714                                         i1l4816 06F8  
                                       i1l4808 06DF                                         i1l5296 0064  
                                       i1l5288 0054                                         u221_21 0F7C  
                                       i1l4666 0F29                                         i1l4658 0F20  
                                       i1l4850 075C                                         i1l4842 074C  
                                       i1l4834 072D                                         i1l4826 0716  
                                       i1l4818 06FE                                         i1l5298 0065  
                                       i1l4668 0F34                                         i1l4852 0760  
                                       i1l4844 074F                                         i1l4836 0731  
                                       i1l4828 071C                                         i1l4854 0762  
                                       i1l4846 0751                                         i1l4838 0732  
                                       u222_20 0AF6                                         i1l4848 0752  
                                       i1l5744 073B                                         u222_21 0AF5  
                                       i1l5746 0F12                                         i1l4798 06D1  
                                       u215_20 0F3E                                         u215_21 0F3D  
                                setData@iValue 0032                                         u216_20 0F44  
                                       u216_21 0F43                                         u217_20 0F5D  
                                       u217_21 0F5C                                         u218_20 0F62  
                                       u218_21 0F61                                         u219_20 0F66  
                                       u219_21 0F65                                         u340_20 06F8  
                                       u340_21 06F7                                         u324_25 0F2C  
                                       u341_20 0705                                         u341_21 0704  
                                       u342_25 0755                                         u337_20 06D7  
                                       u337_21 06D6                              _setCursorPosition 0E77  
                                       u338_20 06E5                                         u370_20 0064  
                                       u338_21 06E4                                         u370_21 0063  
                                       u339_20 06EB                                         u339_21 06EA  
                                       u357_20 0BDB                                         u365_20 000D  
                                       u357_21 0BDA                                         u365_21 000C  
                                       u366_20 002D                                         u366_21 002C  
                                       u294_25 0C6F                                         u367_20 0044  
                                       u367_21 0043                                         u295_25 0C80  
                                       u296_20 0C07                                         u368_20 004F  
                                       u296_21 0C06                                         u368_21 004E  
                                       u369_20 005A                                         u369_21 0059  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _SSPADD 0212                                         _SSPBUF 0211  
                           ?_setCursorPosition 0035                              _TempUpdateRequest 0AEF  
                          ??_setCursorPosition 0036                                      ??___awdiv 0034  
                                    ??___awmod 0034                           __end_of_lcdWriteText 0C69  
                      main@wEnterBottonPressed 0138                                         _memcmp 0D6D  
                                       _memcpy 0C09                                         _memset 04BE  
                           ?_TempUpdateRequest 0070                                         _wTrial 004D  
                             ___awdiv@quotient 0037                                ___awmod@divisor 0030  
                              ___awmod@counter 0035                                         _strcat 0B29  
                                       _strcpy 0B66                                         _strlen 0B42  
                                    ??_initLCD 0036                                      ??_setData 0030  
                          ??_TempUpdateRequest 0070                       __end_of_moveCursorToHome 0AC3  
                    __end_of_setCursorPosition 0ED7                             _gTxReadingPosition 004F  
                                   _gErrorCode 01A0                              __end_ofi1_setData 0CA5  
                       __size_of_writeInsNoChk 0018                                    _gESPCommand 0149  
                     ?_EusartGetNbByteReceived 0070                        __end_of__initialization 00C6  
                             main@wEditingMode 012F                          __size_of_clearDisplay 0005  
                 ?_Esp8266SetNetworkParameters 00A0                     setCursorPosition@wLCDIndex 0039  
                    __end_of_TempUpdateRequest 0AFC                                 __pcstackCOMMON 0070  
                             _Esp8266SetupWifi 0A81                                   __pidataBANK0 0A76  
                                 __pidataBANK2 0AB5                                   __pidataBANK3 0AAF  
                                __end_of_myint 006D                  __size_ofi1_SetToSendDataToLCD 0006  
                                 ??_EUSARTInit 0030                           writeInsNoChk@iOpCode 0034  
                            ??_lcdWriteAllText 003F                     setCursorPosition@iPosition 0035  
                               _wInterruptText 0320                                 _OPTION_REGbits 0095  
                                    ?_Debounce 0030                                   _clearDisplay 0A86  
                                      ??_myint 0025                                     __pbssBANK0 0046  
                                   __pbssBANK1 00E9                                     __pbssBANK2 013A  
                                   __pbssBANK3 01A0                                     __pbssBANK4 0220  
                                   __pbssBANK5 02A0                                     __pbssBANK6 0320  
                            _wReceptionCounter 0056                   __size_ofi1_setCursorPosition 0062  
                                ?_setCursorOff 0070                          EM1812EntryPoint@F1955 0145  
                        EM1812EntryPoint@F1957 013A                                __CFG_VCAPEN$OFF 0000  
                      __size_ofi1_lcdWriteText 002B                              uint8_tToa@iNumber 0039  
                           __end_of_EUSARTInit 0B11                                i1setData@iValue 0072  
                                   __pmaintext 00CA                  ??_Esp8266SetNetworkParameters 00A6  
                       __size_ofi1_waitLCDBusy 002C                                     __pintentry 0004  
                                      ?_memcmp 0030                                        ?_memcpy 0030  
                                _writeInsNoChk 0B11                                        ?_memset 0030  
                                 ?_writeInsChk 0070                                        ?_strcat 003E  
                                      ?_strcpy 0036                                        ?_strlen 0030  
                              _EUSARTInterrupt 0F39                                   ?_writeTxtChk 0070  
                                   ??_Debounce 0032                __end_of_EusartGetNbByteReceived 0A7D  
                   __size_of_setCursorPosition 0060                           __size_of_waitLCDBusy 002D  
                               ??_setCursorOff 0036                                _gTxTransmitSize 004E  
                        __size_of_lcdWriteText 0031                           main@wTemperaturePrev 0126  
                   __size_of_TempUpdateRequest 000D                    __size_of_SetToSendDataToLCD 0006  
                   ?_Esp8266SetAccessPointMode 0070                                        ___awdiv 0768  
                                      ___awmod 0E19                                 ?_writeInsNoChk 0070  
                                   _wTempState 0059                                __CFG_STVREN$OFF 0000  
                              Debounce@iSwitch 0034                                __size_of_memcmp 0050  
                             _wI2CCommandState 005F                                __size_of_memcpy 002F  
                              __size_of_memset 00D1                            Send_UART_Data@iData 003C  
                                      __ptext1 0AE4                                        __ptext2 0AD9  
                                      __ptext3 0ACE                                        __ptext4 0ABB  
                                      __ptext5 04BE                                        __ptext6 0F9C  
                                      __ptext7 0A86                                        __ptext8 0AC3  
                                      __ptext9 0B11                                Debounce@ioTimer 0030  
                              __size_of_strcat 0019                                __size_of_strcpy 0025  
                              __size_of_strlen 0024                                        _initLCD 0F9C  
                                    _T1CONbits 0018                               ___awmod@dividend 0032  
                                      _setData 0CA5                              main@wDebounceDown 0134  
                                i1_waitLCDBusy 0BDD                                        clrloop0 0AA4  
                         end_of_initialization 00C6                                   _lcdWriteText 0C38  
                __size_of_SetToReadDataFromLCD 0006                                        memcmp@l 0039  
                                      memcmp@n 0032                                        memcmp@r 0037  
                                      memcpy@d 0038                                        memcpy@n 0034  
                                      memcpy@s 003A                                        init_ram 0AA9  
                                      memset@c 0032                                        memset@k 003A  
                                      memset@n 0034                                        memset@s 003C  
                                      initloop 0AAA                   i1setCursorPosition@wLCDIndex 0079  
                             __CFG_CLKOUTEN$ON 0000                  __size_of_setNotBlinkingCursor 000B  
                         _wI2CTxNbOfByteToSend 0054                              _Esp8266Entrypoint 027D  
                                    _RCSTAbits 019D              __end_of_Esp8266SetAccessPointMode 0A81  
                      __end_of_EUSARTInterrupt 0F9C                             ?_Esp8266Entrypoint 0070  
                                      strcpy@d 003C                                     _uint8_tToa 058F  
                                      strlen@a 0034                                        strcpy@s 003A  
                                      strlen@s 0030                                      _PORTAbits 000C  
                                    _PORTBbits 000D                                      _PORTCbits 000E  
                 i1setCursorPosition@iPosition 0075                                     _powerOnLcd 0ACE  
                          ??_Esp8266Entrypoint 00AE                           main@wUpBottonPressed 0136  
                                    _TRISAbits 008C                                 ?i1_waitLCDBusy 0070  
                                    _TRISCbits 008E                              ?_moveCursorToHome 0070  
                     __end_of_Esp8266SetupWifi 0A86                              _wTimer1IntCounter 004C  
                      __size_of_Send_UART_Data 0027                     Send_UART_Data@iData_Length 003E  
                           ??_moveCursorToHome 0036                                 i1_lcdWriteText 0BB2  
                                    _TXSTAbits 019E                                      i1_setData 0C69  
                    __end_of_Esp8266Entrypoint 039E                            waitLCDBusy@busyFlag 0033  
                       __size_ofi1_writeTxtChk 0098                                ??_writeInsNoChk 0033  
                              _lcdWriteAllText 0DBD               __size_of_EusartGetNbByteReceived 0004  
                          i1_setCursorPosition 0ED7                                  _gEsp8266State 014A  
                             _mWritingPosition 005A                           __end_of_setCursorOff 0AE4  
                               __end_of_memcmp 0DBD                                 __end_of_memcpy 0C38  
                               __end_of_memset 058F                              myint@wEUSARTError 002E  
                               __end_of_strcat 0B42                                 _wTimer0Counter 0058  
                               __end_of_strcpy 0B8B                                 __end_of_strlen 0B66  
                         __size_of_writeInsChk 000B                            start_initialization 006F  
                         __size_of_writeTxtChk 009F                              __size_of_Debounce 004C  
                       __end_ofi1_lcdWriteText 0BDD                   __end_ofi1_SetToSendDataToLCD 0A91  
                         ?i1_setCursorPosition 0075                                     ?i1_setData 0070  
                   EusartGetRxBuffer@iDataSize 003C                           i1writeTxtChk@iOpCode 007C  
                              main@wDebounceUp 0132                               ?_EUSARTInterrupt 0070  
                     ??i1_SetToReadDataFromLCD 0070                                    __pdataBANK0 005D  
                                  __pdataBANK2 0145                                    __pdataBANK3 01C9  
                                _wI2CTxSendPos 0051                                       ??_memcmp 0034  
                                     ??_memcpy 0036                                    ?_uint8_tToa 0039  
                                     ??_memset 0036                                     memset@dest 0030  
                                     ??_strcat 0040                                       ??_strcpy 0038  
                                     ??_strlen 0032                       i1setCursorPosition@iLine 0078  
                                  ?_powerOnLcd 0070                                ??i1_waitLCDBusy 0070  
                                    ___latbits 0003                                  i1_writeTxtChk 06D0  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0120                                  __pcstackBANK7 03A0  
                    Esp8266Entrypoint@wCounter 0143                          ??i1_setCursorPosition 0076  
                              ?i1_lcdWriteText 0020                        __end_of_lcdWriteAllText 0E19  
                                 _wTemperature 00E9                     __size_of_Esp8266Entrypoint 0121  
                           writeInsChk@iOpCode 0035                    ??_Esp8266SetAccessPointMode 0030  
                                     ?___awdiv 0030                                       ?___awmod 0030  
                           uint8_tToa@wHundred 003D                 lcdWriteAllText@wCharReadingPos 0043  
                                    _wCounter2 004B                                       ?_initLCD 0070  
               Esp8266Entrypoint@wReturnNumber 00E2                                 ?i1_writeTxtChk 0070  
                                     ?_setData 0070                                  ??_waitLCDBusy 0030  
                                    _wHumidity 0046                                 _Send_UART_Data 0B8B  
                               __size_of_myint 0069                               _mDisplayOnOffReg 005C  
                          __size_of_uint8_tToa 00A2            __end_of_Esp8266SetNetworkParameters 04BE  
                  _Esp8266SetNetworkParameters 039E                     __end_of_SetToSendDataToLCD 0A9D  
                                    clear_ram0 0AA3                                    ??i1_setData 0070  
                                     _PIE1bits 0091                                       _PIE2bits 0092  
  Esp8266SetNetworkParameters@iWifiNetworkName 00A0                            __size_of_powerOnLcd 000B  
                                     _PIR1bits 0011                                       _PIR2bits 0012  
                        __size_of_setCursorOff 000B                                      main@F2342 01C9  
                      _EusartGetNbByteReceived 0A79                       _wReceptionBufferPosition 0057  
                            Debounce@swPressed 0031                   __end_of_SetToReadDataFromLCD 0AA3  
              __size_ofi1_SetToReadDataFromLCD 0006                    lcdWriteText@wCharReadingPos 00A0  
                         i1_SetToSendDataToLCD 0A8B                               _wI2CRxBufferSize 005D  
                                   myint@wText 002B                                      main@wConv 0120  
                                    main@wMenu 0139                   __end_of_setNotBlinkingCursor 0AEF  
                                    main@wTemp 012A                                       _Debounce 0D21  
                       __end_of_Send_UART_Data 0BB2                      _Esp8266SetAccessPointMode 0A7D  
                            ?_Esp8266SetupWifi 0070                              lcdWriteText@iText 0041  
       Esp8266Entrypoint@wEusartNbByteReceived 00E6                            __end_of_waitLCDBusy 07FF  
                           ??_Esp8266SetupWifi 0030                                main@wUpdateMenu 012E  
                                 _setCursorOff 0AD9                               ?_lcdWriteAllText 003D  
                                 _wI2CRxBuffer 01A1                      __size_of_moveCursorToHome 0008  
                                    memcpy@tmp 0037                                   _wI2CTxBuffer 01B5  
           EusartGetRxBuffer@oNbOfByteReceived 003D                               __size_of___awdiv 006A  
                             __size_of___awmod 005E                          ?i1_SetToSendDataToLCD 0070  
                             _wI2CTxBufferSize 005E                                ??i1_writeTxtChk 007A  
                                   _ANSELAbits 018C                                     _ANSELCbits 018E  
                    EUSARTInterrupt@gErrorCode 0074                               __size_of_initLCD 0064  
                                   strcat@dest 0042                                ?_Send_UART_Data 003C  
                             __size_of_setData 003C                                uint8_tToa@wText 0040  
                              uint8_tToa@wUnit 003F                                  ?_clearDisplay 0070  
                                     __ptext10 0A81                                       __ptext11 0A7D  
                                     __ptext20 0A9D                                       __ptext12 027D  
                                     __ptext21 0CA5                                       __ptext13 058F  
                                     __ptext30 0768                                       __ptext22 0A97  
                                     __ptext14 0D6D                                       __ptext31 0B8B  
                                     __ptext23 0CE1                                       __ptext15 0C38  
                                     __ptext40 0A91                                       __ptext32 0C09  
                                     __ptext24 0A79                                       __ptext16 0DBD  
                                     __ptext41 0C69                                       __ptext33 0AFC  
                                     __ptext25 039E                                       __ptext17 0631  
                                     __ptext42 0A8B                                       __ptext34 0D21  
                                     __ptext26 0B29                                       __ptext18 0E77  
                                     __ptext43 0AEF                                       __ptext27 0B42  
                                     __ptext19 07D2                                       __ptext44 0F39  
                                     __ptext36 0BB2                                       __ptext28 0B66  
                                     __ptext37 06D0                                       __ptext29 0E19  
                                     __ptext38 0ED7                                       __ptext39 0BDD  
                            _EusartGetRxBuffer 0CE1                                       _wHexTemp 0220  
                        main@wIterationCounter 012C                         i1_SetToReadDataFromLCD 0A91  
                           ?_EusartGetRxBuffer 003C                                     strcpy@dest 003D  
                                     _wTempSet 01CD                                  __size_of_main 01B3  
                          ??_EusartGetRxBuffer 003E                             main@wDebounceEnter 0130  
                    ??_EusartGetNbByteReceived 0030                             writeTxtChk@iOpCode 003C  
     Esp8266SetNetworkParameters@iWifiPassword 00A2                                       int$flags 007E  
                        __end_of_writeInsNoChk 0B29                                   ??_uint8_tToa 003A  
                            main@wHumidityPrev 0124                                  ??_writeInsChk 0035  
                                   _EUSARTInit 0AFC                                   ??_powerOnLcd 0036  
                                ??_writeTxtChk 003A                           lcdWriteAllText@iText 003D  
                                   _INTCONbits 000B                      __end_of_EusartGetRxBuffer 0D21  
                             ??i1_lcdWriteText 0022                                       memcmp@vl 0036  
                                     memcmp@vr 0030                                       memcpy@d1 0030  
                                     memcpy@s1 0032                                    _waitLCDBusy 07D2  
                               ??_clearDisplay 0036                                 __pstringtext10 1055  
                               __pstringtext11 105A                                 __pstringtext12 105E  
                               __pstringtext13 0000                         EusartGetRxBuffer@oData 0040  
                             _wNewI2CReception 0052                         setCursorPosition@iLine 0038  
                                     intlevel1 0000                         main@wDownBottonPressed 0137  
                         _SetToReadDataFromLCD 0A9D                                      strcat@src 003E  
                               uint8_tToa@wTen 003E                             __end_of_uint8_tToa 0631  
                                    strcpy@src 0036                                     _OSCCONbits 0099  
                         _setNotBlinkingCursor 0AE4                             __end_of_powerOnLcd 0AD9  
                       ??i1_SetToSendDataToLCD 0070                                  __pstringtext1 1000  
                                __pstringtext2 1011                                  __pstringtext3 101F  
                                __pstringtext4 102A                                  __pstringtext5 1033  
                                __pstringtext6 103C                                  __pstringtext7 1043  
                                __pstringtext8 104A                                  __pstringtext9 1050  
                     __size_of_EUSARTInterrupt 0063                    __end_ofi1_setCursorPosition 0F39  
                        __end_ofi1_waitLCDBusy 0C09      Esp8266Entrypoint@prevEusartNbByteReceived 0144  
                          __end_of_writeInsChk 0ACE                                    _SSPCON1bits 0215  
                                  _SSPCON2bits 0216                                    _SSPCON3bits 0217  
                              _gEusartRXBuffer 0234                                  ?_lcdWriteText 0041  
                          __end_of_writeTxtChk 06D0                                _gEusartTXBuffer 02A0  
                        ?_SetToReadDataFromLCD 0070             __size_of_Esp8266SetAccessPointMode 0004  
                        i1waitLCDBusy@busyFlag 0073                          ?_setNotBlinkingCursor 0070  
                             _moveCursorToHome 0ABB                         _mCursorDisplayShiftReg 005B  
