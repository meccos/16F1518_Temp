

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jan 23 00:02:25 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F1518 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   120                           PORTB equ 0Dh ;# 
   121  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   122                           PORTC equ 0Eh ;# 
   123  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   124                           PORTE equ 010h ;# 
   125  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   126                           PIR1 equ 011h ;# 
   127  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   128                           PIR2 equ 012h ;# 
   129  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   130                           TMR0 equ 015h ;# 
   131  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   132                           TMR1 equ 016h ;# 
   133  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   134                           TMR1L equ 016h ;# 
   135  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   136                           TMR1H equ 017h ;# 
   137  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   138                           T1CON equ 018h ;# 
   139  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   140                           T1GCON equ 019h ;# 
   141  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   142                           TMR2 equ 01Ah ;# 
   143  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   144                           PR2 equ 01Bh ;# 
   145  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   146                           T2CON equ 01Ch ;# 
   147  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   148                           TRISA equ 08Ch ;# 
   149  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   150                           TRISB equ 08Dh ;# 
   151  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   152                           TRISC equ 08Eh ;# 
   153  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   154                           TRISE equ 090h ;# 
   155  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   156                           PIE1 equ 091h ;# 
   157  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   158                           PIE2 equ 092h ;# 
   159  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   160                           OPTION_REG equ 095h ;# 
   161  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   162                           PCON equ 096h ;# 
   163  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   164                           WDTCON equ 097h ;# 
   165  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   166                           OSCCON equ 099h ;# 
   167  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   168                           OSCSTAT equ 09Ah ;# 
   169  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   170                           ADRES equ 09Bh ;# 
   171  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   172                           ADRESL equ 09Bh ;# 
   173  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   174                           ADRESH equ 09Ch ;# 
   175  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   176                           ADCON0 equ 09Dh ;# 
   177  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   178                           ADCON1 equ 09Eh ;# 
   179  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   180                           LATA equ 010Ch ;# 
   181  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   182                           LATB equ 010Dh ;# 
   183  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   184                           LATC equ 010Eh ;# 
   185  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   186                           BORCON equ 0116h ;# 
   187  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   188                           FVRCON equ 0117h ;# 
   189  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   190                           APFCON equ 011Dh ;# 
   191  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   192                           ANSELA equ 018Ch ;# 
   193  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   194                           ANSELB equ 018Dh ;# 
   195  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   196                           ANSELC equ 018Eh ;# 
   197  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   198                           PMADR equ 0191h ;# 
   199  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   200                           PMADRL equ 0191h ;# 
   201  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   202                           PMADRH equ 0192h ;# 
   203  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   204                           PMDAT equ 0193h ;# 
   205  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   206                           PMDATL equ 0193h ;# 
   207  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   208                           PMDATH equ 0194h ;# 
   209  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   210                           PMCON1 equ 0195h ;# 
   211  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   212                           PMCON2 equ 0196h ;# 
   213  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   214                           VREGCON equ 0197h ;# 
   215  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   216                           RCREG equ 0199h ;# 
   217  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   218                           TXREG equ 019Ah ;# 
   219  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   220                           SP1BRG equ 019Bh ;# 
   221  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   222                           SP1BRGL equ 019Bh ;# 
   223  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   224                           SPBRG equ 019Bh ;# 
   225  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   226                           SPBRGL equ 019Bh ;# 
   227  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   228                           SP1BRGH equ 019Ch ;# 
   229  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   230                           SPBRGH equ 019Ch ;# 
   231  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   232                           RCSTA equ 019Dh ;# 
   233  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   234                           TXSTA equ 019Eh ;# 
   235  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   236                           BAUDCON equ 019Fh ;# 
   237  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   238                           WPUB equ 020Dh ;# 
   239  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   240                           WPUE equ 0210h ;# 
   241  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   242                           SSPBUF equ 0211h ;# 
   243  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   244                           SSP1BUF equ 0211h ;# 
   245  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   246                           SSPADD equ 0212h ;# 
   247  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   248                           SSP1ADD equ 0212h ;# 
   249  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   250                           SSPMSK equ 0213h ;# 
   251  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   252                           SSP1MSK equ 0213h ;# 
   253  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   254                           SSPSTAT equ 0214h ;# 
   255  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   256                           SSP1STAT equ 0214h ;# 
   257  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   258                           SSPCON1 equ 0215h ;# 
   259  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   260                           SSPCON equ 0215h ;# 
   261  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   262                           SSP1CON1 equ 0215h ;# 
   263  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   264                           SSPCON2 equ 0216h ;# 
   265  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   266                           SSP1CON2 equ 0216h ;# 
   267  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   268                           SSPCON3 equ 0217h ;# 
   269  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   270                           SSP1CON3 equ 0217h ;# 
   271  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   272                           CCPR1 equ 0291h ;# 
   273  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   274                           CCPR1L equ 0291h ;# 
   275  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   276                           CCPR1H equ 0292h ;# 
   277  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   278                           CCP1CON equ 0293h ;# 
   279  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   280                           CCPR2 equ 0298h ;# 
   281  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   282                           CCPR2L equ 0298h ;# 
   283  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   284                           CCPR2H equ 0299h ;# 
   285  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   286                           CCP2CON equ 029Ah ;# 
   287  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   288                           IOCBP equ 0394h ;# 
   289  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   290                           IOCBN equ 0395h ;# 
   291  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   292                           IOCBF equ 0396h ;# 
   293  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   294                           STATUS_SHAD equ 0FE4h ;# 
   295  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   296                           WREG_SHAD equ 0FE5h ;# 
   297  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   298                           BSR_SHAD equ 0FE6h ;# 
   299  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   300                           PCLATH_SHAD equ 0FE7h ;# 
   301  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   302                           FSR0L_SHAD equ 0FE8h ;# 
   303  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   304                           FSR0H_SHAD equ 0FE9h ;# 
   305  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   306                           FSR1L_SHAD equ 0FEAh ;# 
   307  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   308                           FSR1H_SHAD equ 0FEBh ;# 
   309  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   310                           STKPTR equ 0FEDh ;# 
   311  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   312                           TOSL equ 0FEEh ;# 
   313  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   314                           TOSH equ 0FEFh ;# 
   315  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   316                           INDF0 equ 00h ;# 
   317  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   318                           INDF1 equ 01h ;# 
   319  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   320                           PCL equ 02h ;# 
   321  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   322                           STATUS equ 03h ;# 
   323  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   324                           FSR0L equ 04h ;# 
   325  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   326                           FSR0H equ 05h ;# 
   327  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   328                           FSR1L equ 06h ;# 
   329  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   330                           FSR1H equ 07h ;# 
   331  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   332                           BSR equ 08h ;# 
   333  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   334                           WREG equ 09h ;# 
   335  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   336                           PCLATH equ 0Ah ;# 
   337  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   338                           INTCON equ 0Bh ;# 
   339  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   340                           PORTA equ 0Ch ;# 
   341  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   342                           PORTB equ 0Dh ;# 
   343  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   344                           PORTC equ 0Eh ;# 
   345  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   346                           PORTE equ 010h ;# 
   347  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   348                           PIR1 equ 011h ;# 
   349  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   350                           PIR2 equ 012h ;# 
   351  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   352                           TMR0 equ 015h ;# 
   353  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   354                           TMR1 equ 016h ;# 
   355  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   356                           TMR1L equ 016h ;# 
   357  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   358                           TMR1H equ 017h ;# 
   359  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   360                           T1CON equ 018h ;# 
   361  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   362                           T1GCON equ 019h ;# 
   363  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   364                           TMR2 equ 01Ah ;# 
   365  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   366                           PR2 equ 01Bh ;# 
   367  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   368                           T2CON equ 01Ch ;# 
   369  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   370                           TRISA equ 08Ch ;# 
   371  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   372                           TRISB equ 08Dh ;# 
   373  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   374                           TRISC equ 08Eh ;# 
   375  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   376                           TRISE equ 090h ;# 
   377  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   378                           PIE1 equ 091h ;# 
   379  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   380                           PIE2 equ 092h ;# 
   381  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   382                           OPTION_REG equ 095h ;# 
   383  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   384                           PCON equ 096h ;# 
   385  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   386                           WDTCON equ 097h ;# 
   387  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   388                           OSCCON equ 099h ;# 
   389  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   390                           OSCSTAT equ 09Ah ;# 
   391  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   392                           ADRES equ 09Bh ;# 
   393  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   394                           ADRESL equ 09Bh ;# 
   395  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   396                           ADRESH equ 09Ch ;# 
   397  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   398                           ADCON0 equ 09Dh ;# 
   399  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   400                           ADCON1 equ 09Eh ;# 
   401  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   402                           LATA equ 010Ch ;# 
   403  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   404                           LATB equ 010Dh ;# 
   405  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   406                           LATC equ 010Eh ;# 
   407  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   408                           BORCON equ 0116h ;# 
   409  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   410                           FVRCON equ 0117h ;# 
   411  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   412                           APFCON equ 011Dh ;# 
   413  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   414                           ANSELA equ 018Ch ;# 
   415  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   416                           ANSELB equ 018Dh ;# 
   417  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   418                           ANSELC equ 018Eh ;# 
   419  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   420                           PMADR equ 0191h ;# 
   421  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   422                           PMADRL equ 0191h ;# 
   423  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   424                           PMADRH equ 0192h ;# 
   425  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   426                           PMDAT equ 0193h ;# 
   427  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   428                           PMDATL equ 0193h ;# 
   429  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   430                           PMDATH equ 0194h ;# 
   431  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   432                           PMCON1 equ 0195h ;# 
   433  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   434                           PMCON2 equ 0196h ;# 
   435  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   436                           VREGCON equ 0197h ;# 
   437  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   438                           RCREG equ 0199h ;# 
   439  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   440                           TXREG equ 019Ah ;# 
   441  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   442                           SP1BRG equ 019Bh ;# 
   443  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   444                           SP1BRGL equ 019Bh ;# 
   445  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   446                           SPBRG equ 019Bh ;# 
   447  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   448                           SPBRGL equ 019Bh ;# 
   449  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   450                           SP1BRGH equ 019Ch ;# 
   451  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   452                           SPBRGH equ 019Ch ;# 
   453  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   454                           RCSTA equ 019Dh ;# 
   455  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   456                           TXSTA equ 019Eh ;# 
   457  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   458                           BAUDCON equ 019Fh ;# 
   459  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   460                           WPUB equ 020Dh ;# 
   461  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   462                           WPUE equ 0210h ;# 
   463  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   464                           SSPBUF equ 0211h ;# 
   465  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   466                           SSP1BUF equ 0211h ;# 
   467  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   468                           SSPADD equ 0212h ;# 
   469  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   470                           SSP1ADD equ 0212h ;# 
   471  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   472                           SSPMSK equ 0213h ;# 
   473  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   474                           SSP1MSK equ 0213h ;# 
   475  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   476                           SSPSTAT equ 0214h ;# 
   477  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   478                           SSP1STAT equ 0214h ;# 
   479  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   480                           SSPCON1 equ 0215h ;# 
   481  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   482                           SSPCON equ 0215h ;# 
   483  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   484                           SSP1CON1 equ 0215h ;# 
   485  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   486                           SSPCON2 equ 0216h ;# 
   487  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   488                           SSP1CON2 equ 0216h ;# 
   489  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   490                           SSPCON3 equ 0217h ;# 
   491  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   492                           SSP1CON3 equ 0217h ;# 
   493  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   494                           CCPR1 equ 0291h ;# 
   495  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   496                           CCPR1L equ 0291h ;# 
   497  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   498                           CCPR1H equ 0292h ;# 
   499  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   500                           CCP1CON equ 0293h ;# 
   501  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   502                           CCPR2 equ 0298h ;# 
   503  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   504                           CCPR2L equ 0298h ;# 
   505  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   506                           CCPR2H equ 0299h ;# 
   507  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   508                           CCP2CON equ 029Ah ;# 
   509  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   510                           IOCBP equ 0394h ;# 
   511  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   512                           IOCBN equ 0395h ;# 
   513  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   514                           IOCBF equ 0396h ;# 
   515  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   516                           STATUS_SHAD equ 0FE4h ;# 
   517  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   518                           WREG_SHAD equ 0FE5h ;# 
   519  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   520                           BSR_SHAD equ 0FE6h ;# 
   521  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   522                           PCLATH_SHAD equ 0FE7h ;# 
   523  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   524                           FSR0L_SHAD equ 0FE8h ;# 
   525  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   526                           FSR0H_SHAD equ 0FE9h ;# 
   527  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   528                           FSR1L_SHAD equ 0FEAh ;# 
   529  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   530                           FSR1H_SHAD equ 0FEBh ;# 
   531  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   532                           STKPTR equ 0FEDh ;# 
   533  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   534                           TOSL equ 0FEEh ;# 
   535  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   536                           TOSH equ 0FEFh ;# 
   537  0FEF                     	FNCALL	_main,_Add_Trace
   538                           	FNCALL	_main,_Debounce
   539                           	FNCALL	_main,_GetTemp
   540                           	FNCALL	_main,_PrintLog
   541                           	FNCALL	_main,_SetToGetTemp
   542                           	FNCALL	_main,_ToggleBitRB5
   543                           	FNCALL	_main,_WakeTemp
   544                           	FNCALL	_main,_clearDisplay
   545                           	FNCALL	_main,_initLCD
   546                           	FNCALL	_main,_lcdWriteText
   547                           	FNCALL	_main,_memset
   548                           	FNCALL	_main,_moveCursorToHome
   549                           	FNCALL	_main,_powerOnLcd
   550                           	FNCALL	_main,_printEM1812
   551                           	FNCALL	_main,_setCursorOff
   552                           	FNCALL	_main,_setCursorPosition
   553                           	FNCALL	_main,_setNotBlinkingCursor
   554                           	FNCALL	_setNotBlinkingCursor,_writeInsChk
   555                           	FNCALL	_setCursorOff,_writeInsChk
   556                           	FNCALL	_printEM1812,___awdiv
   557                           	FNCALL	_printEM1812,___awmod
   558                           	FNCALL	_powerOnLcd,_writeInsChk
   559                           	FNCALL	_moveCursorToHome,_writeInsChk
   560                           	FNCALL	_initLCD,_clearDisplay
   561                           	FNCALL	_initLCD,_setData
   562                           	FNCALL	_initLCD,_writeInsChk
   563                           	FNCALL	_clearDisplay,_writeInsChk
   564                           	FNCALL	_writeInsChk,_waitLCDBusy
   565                           	FNCALL	_writeInsChk,_writeInsNoChk
   566                           	FNCALL	_writeInsNoChk,_SetToSendDataToLCD
   567                           	FNCALL	_writeInsNoChk,_setData
   568                           	FNCALL	_PrintLog,_lcdWriteText
   569                           	FNCALL	_PrintLog,_memset
   570                           	FNCALL	_PrintLog,_strlen
   571                           	FNCALL	_lcdWriteText,_writeTxtChk
   572                           	FNCALL	_writeTxtChk,_SetToSendDataToLCD
   573                           	FNCALL	_writeTxtChk,_setCursorPosition
   574                           	FNCALL	_writeTxtChk,_setData
   575                           	FNCALL	_writeTxtChk,_waitLCDBusy
   576                           	FNCALL	_setCursorPosition,_SetToSendDataToLCD
   577                           	FNCALL	_setCursorPosition,_setData
   578                           	FNCALL	_setCursorPosition,_waitLCDBusy
   579                           	FNCALL	_waitLCDBusy,_SetToReadDataFromLCD
   580                           	FNCALL	_GetTemp,_memset
   581                           	FNCALL	_Add_Trace,_strcat
   582                           	FNCALL	_Add_Trace,_strlen
   583                           	FNCALL	_strcat,_strcpy
   584                           	FNCALL	_strcat,_strlen
   585                           	FNROOT	_main
   586                           	FNCALL	_myint,i1_Add_Trace
   587                           	FNCALL	_myint,i1_lcdWriteText
   588                           	FNCALL	i1_lcdWriteText,i1_writeTxtChk
   589                           	FNCALL	i1_writeTxtChk,i1_SetToSendDataToLCD
   590                           	FNCALL	i1_writeTxtChk,i1_setCursorPosition
   591                           	FNCALL	i1_writeTxtChk,i1_setData
   592                           	FNCALL	i1_writeTxtChk,i1_waitLCDBusy
   593                           	FNCALL	i1_setCursorPosition,i1_SetToSendDataToLCD
   594                           	FNCALL	i1_setCursorPosition,i1_setData
   595                           	FNCALL	i1_setCursorPosition,i1_waitLCDBusy
   596                           	FNCALL	i1_waitLCDBusy,i1_SetToReadDataFromLCD
   597                           	FNCALL	i1_Add_Trace,i1_strcat
   598                           	FNCALL	i1_Add_Trace,i1_strlen
   599                           	FNCALL	i1_strcat,i1_strcpy
   600                           	FNCALL	i1_strcat,i1_strlen
   601                           	FNCALL	intlevel1,_myint
   602                           	global	intlevel1
   603                           	FNROOT	intlevel1
   604                           	global	main@F2250
   605                           psect	idataBANK1,class=CODE,space=0,delta=2,noexec
   606                           global __pidataBANK1
   607                           __pidataBANK1:
   608  0B00                     	file	"161518_temp_main.c"
   609                           	line	322
   610                           
   611                           ;initializer for main@F2250
   612                           	retlw	02Bh
   613  0B00  342B               	retlw	low(0)
   614  0B01  3400               	retlw	078h
   615  0B02  3478               	retlw	low(0)
   616  0B03  3400               	global	_wTimer1IntCounter
   617                           	global	_wTempUpdate
   618                           	global	_wTrial
   619                           	global	_wI2CTxSendPos
   620                           	global	_wI2CRxBufferSize
   621                           	global	_wI2CTxBufferSize
   622                           	global	_wReceptionCounter
   623                           	global	_wReceptionBufferPosition
   624                           	global	_mWritingPosition
   625                           	global	_mCursorDisplayShiftReg
   626                           	global	_mDisplayOnOffReg
   627                           	global	_wTemperature
   628                           	global	_wHumidity
   629                           	global	_wTempState
   630                           	global	_wTimer0Counter
   631                           	global	_wI2CCommandState
   632                           	global	_wI2CTxBuffer
   633                           	global	_wReceptionBuffer
   634                           	global	_wInterruptText
   635                           	global	_PORTAbits
   636                           _PORTAbits	set	0xC
   637  000C                     	global	_TMR1L
   638                           _TMR1L	set	0x16
   639  0016                     	global	_TMR1H
   640                           _TMR1H	set	0x17
   641  0017                     	global	_PIR2bits
   642                           _PIR2bits	set	0x12
   643  0012                     	global	_PIR1bits
   644                           _PIR1bits	set	0x11
   645  0011                     	global	_TMR0
   646                           _TMR0	set	0x15
   647  0015                     	global	_PORTB
   648                           _PORTB	set	0xD
   649  000D                     	global	_T1CONbits
   650                           _T1CONbits	set	0x18
   651  0018                     	global	_PORTA
   652                           _PORTA	set	0xC
   653  000C                     	global	_INTCONbits
   654                           _INTCONbits	set	0xB
   655  000B                     	global	_PORTBbits
   656                           _PORTBbits	set	0xD
   657  000D                     	global	_TRISAbits
   658                           _TRISAbits	set	0x8C
   659  008C                     	global	_PIE2bits
   660                           _PIE2bits	set	0x92
   661  0092                     	global	_TRISC
   662                           _TRISC	set	0x8E
   663  008E                     	global	_TRISA
   664                           _TRISA	set	0x8C
   665  008C                     	global	_TRISB
   666                           _TRISB	set	0x8D
   667  008D                     	global	_OPTION_REGbits
   668                           _OPTION_REGbits	set	0x95
   669  0095                     	global	_OSCCONbits
   670                           _OSCCONbits	set	0x99
   671  0099                     	global	_PIE1bits
   672                           _PIE1bits	set	0x91
   673  0091                     	global	_ANSELCbits
   674                           _ANSELCbits	set	0x18E
   675  018E                     	global	_ANSELA
   676                           _ANSELA	set	0x18C
   677  018C                     	global	_ANSELB
   678                           _ANSELB	set	0x18D
   679  018D                     	global	_SSPBUF
   680                           _SSPBUF	set	0x211
   681  0211                     	global	_SSPSTATbits
   682                           _SSPSTATbits	set	0x214
   683  0214                     	global	_SSPADD
   684                           _SSPADD	set	0x212
   685  0212                     	global	_SSPCON1bits
   686                           _SSPCON1bits	set	0x215
   687  0215                     	global	_WPUB
   688                           _WPUB	set	0x20D
   689  020D                     	global	_SSPCON2bits
   690                           _SSPCON2bits	set	0x216
   691  0216                     	global	_SSPCON3bits
   692                           _SSPCON3bits	set	0x217
   693  0217                     psect	stringtext1,class=STRCODE,delta=2,noexec
   694                           global __pstringtext1
   695                           __pstringtext1:
   696  1000                     	
   697                           STR_6:	
   698  1000                     	retlw	87	;'W'
   699  1000  3457               	retlw	84	;'T'
   700  1001  3454               	retlw	70	;'F'
   701  1002  3446               	retlw	32	;' '
   702  1003  3420               	retlw	32	;' '
   703  1004  3420               	retlw	32	;' '
   704  1005  3420               	retlw	32	;' '
   705  1006  3420               	retlw	32	;' '
   706  1007  3420               	retlw	32	;' '
   707  1008  3420               	retlw	32	;' '
   708  1009  3420               	retlw	32	;' '
   709  100A  3420               	retlw	32	;' '
   710  100B  3420               	retlw	32	;' '
   711  100C  3420               	retlw	32	;' '
   712  100D  3420               	retlw	32	;' '
   713  100E  3420               	retlw	0
   714  100F  3400               psect	stringtext2,class=STRCODE,delta=2,noexec
   715                           global __pstringtext2
   716                           __pstringtext2:
   717  1010                     	
   718                           STR_3:	
   719  1010                     	retlw	72	;'H'
   720  1010  3448               	retlw	111	;'o'
   721  1011  346F               	retlw	109	;'m'
   722  1012  346D               	retlw	101	;'e'
   723  1013  3465               	retlw	32	;' '
   724  1014  3420               	retlw	32	;' '
   725  1015  3420               	retlw	32	;' '
   726  1016  3420               	retlw	32	;' '
   727  1017  3420               	retlw	32	;' '
   728  1018  3420               	retlw	32	;' '
   729  1019  3420               	retlw	32	;' '
   730  101A  3420               	retlw	32	;' '
   731  101B  3420               	retlw	32	;' '
   732  101C  3420               	retlw	32	;' '
   733  101D  3420               	retlw	32	;' '
   734  101E  3420               	retlw	0
   735  101F  3400               psect	stringtext3,class=STRCODE,delta=2,noexec
   736                           global __pstringtext3
   737                           __pstringtext3:
   738  1020                     	
   739                           STR_5:	
   740  1020                     	retlw	83	;'S'
   741  1020  3453               	retlw	101	;'e'
   742  1021  3465               	retlw	116	;'t'
   743  1022  3474               	retlw	32	;' '
   744  1023  3420               	retlw	77	;'M'
   745  1024  344D               	retlw	111	;'o'
   746  1025  346F               	retlw	100	;'d'
   747  1026  3464               	retlw	101	;'e'
   748  1027  3465               	retlw	58	;':'
   749  1028  343A               	retlw	32	;' '
   750  1029  3420               	retlw	32	;' '
   751  102A  3420               	retlw	32	;' '
   752  102B  3420               	retlw	32	;' '
   753  102C  3420               	retlw	32	;' '
   754  102D  3420               	retlw	32	;' '
   755  102E  3420               	retlw	0
   756  102F  3400               psect	stringtext4,class=STRCODE,delta=2,noexec
   757                           global __pstringtext4
   758                           __pstringtext4:
   759  1030                     	
   760                           STR_4:	
   761  1030                     	retlw	83	;'S'
   762  1030  3453               	retlw	101	;'e'
   763  1031  3465               	retlw	116	;'t'
   764  1032  3474               	retlw	32	;' '
   765  1033  3420               	retlw	84	;'T'
   766  1034  3454               	retlw	101	;'e'
   767  1035  3465               	retlw	109	;'m'
   768  1036  346D               	retlw	112	;'p'
   769  1037  3470               	retlw	58	;':'
   770  1038  343A               	retlw	32	;' '
   771  1039  3420               	retlw	32	;' '
   772  103A  3420               	retlw	32	;' '
   773  103B  3420               	retlw	32	;' '
   774  103C  3420               	retlw	32	;' '
   775  103D  3420               	retlw	32	;' '
   776  103E  3420               	retlw	0
   777  103F  3400               psect	stringtext5,class=STRCODE,delta=2,noexec
   778                           global __pstringtext5
   779                           __pstringtext5:
   780  1040                     	
   781                           STR_1:	
   782  1040                     	retlw	72	;'H'
   783  1040  3448               	retlw	117	;'u'
   784  1041  3475               	retlw	109	;'m'
   785  1042  346D               	retlw	105	;'i'
   786  1043  3469               	retlw	100	;'d'
   787  1044  3464               	retlw	105	;'i'
   788  1045  3469               	retlw	116	;'t'
   789  1046  3474               	retlw	121	;'y'
   790  1047  3479               	retlw	32	;' '
   791  1048  3420               	retlw	58	;':'
   792  1049  343A               	retlw	32	;' '
   793  104A  3420               	retlw	0
   794  104B  3400               psect	stringtext6,class=STRCODE,delta=2,noexec
   795                           global __pstringtext6
   796                           __pstringtext6:
   797  104C                     	
   798                           STR_2:	
   799  104C                     	retlw	10
   800  104C  340A               	retlw	84	;'T'
   801  104D  3454               	retlw	101	;'e'
   802  104E  3465               	retlw	109	;'m'
   803  104F  346D               	retlw	112	;'p'
   804  1050  3470               	retlw	32	;' '
   805  1051  3420               	retlw	58	;':'
   806  1052  343A               	retlw	32	;' '
   807  1053  3420               	retlw	0
   808  1054  3400               psect	stringtext7,class=STRCODE,delta=2,noexec
   809                           global __pstringtext7
   810                           __pstringtext7:
   811  1055                     	
   812                           STR_12:	
   813  1055                     	retlw	44	;','
   814  1055  342C               	retlw	66	;'B'
   815  1056  3442               	retlw	67	;'C'
   816  1057  3443               	retlw	76	;'L'
   817  1058  344C               	retlw	73	;'I'
   818  1059  3449               	retlw	70	;'F'
   819  105A  3446               	retlw	0
   820  105B  3400               psect	stringtext8,class=STRCODE,delta=2,noexec
   821                           global __pstringtext8
   822                           __pstringtext8:
   823  105C                     	
   824                           STR_7:	
   825  105C                     	retlw	44	;','
   826  105C  342C               	retlw	78	;'N'
   827  105D  344E               	retlw	56	;'8'
   828  105E  3438               	retlw	0
   829  105F  3400               psect	stringtext9,class=STRCODE,delta=2,noexec
   830                           global __pstringtext9
   831                           __pstringtext9:
   832  1060                     	
   833                           STR_10:	
   834  1060                     	retlw	65	;'A'
   835  1060  3441               	retlw	0
   836  1061  3400               psect	stringtext10,class=STRCODE,delta=2,noexec
   837                           global __pstringtext10
   838                           __pstringtext10:
   839  1062                     	
   840                           STR_8:	
   841  1062                     	retlw	80	;'P'
   842  1062  3450               	retlw	0
   843  1063  3400               psect	stringtext11,class=STRCODE,delta=2,noexec
   844                           global __pstringtext11
   845                           __pstringtext11:
   846  1064                     	
   847                           STR_11:	
   848  1064                     	retlw	82	;'R'
   849  1064  3452               	retlw	0
   850  1065  3400               psect	stringtext12,class=STRCODE,delta=2,noexec
   851                           global __pstringtext12
   852                           __pstringtext12:
   853  1066                     	
   854                           STR_9:	
   855  1066                     	retlw	83	;'S'
   856  1066  3453               	retlw	0
   857  1067  3400               psect	stringtext13,class=STRCODE,delta=2,noexec
   858                           global __pstringtext13
   859                           __pstringtext13:
   860  0000                     ; #config settings
   861                           global __CFG_FOSC$INTOSC
   862                           __CFG_FOSC$INTOSC equ 0x0
   863  0000                     global __CFG_WDTE$OFF
   864                           __CFG_WDTE$OFF equ 0x0
   865  0000                     global __CFG_PWRTE$ON
   866                           __CFG_PWRTE$ON equ 0x0
   867  0000                     global __CFG_MCLRE$OFF
   868                           __CFG_MCLRE$OFF equ 0x0
   869  0000                     global __CFG_CP$OFF
   870                           __CFG_CP$OFF equ 0x0
   871  0000                     global __CFG_BOREN$ON
   872                           __CFG_BOREN$ON equ 0x0
   873  0000                     global __CFG_CLKOUTEN$ON
   874                           __CFG_CLKOUTEN$ON equ 0x0
   875  0000                     global __CFG_IESO$OFF
   876                           __CFG_IESO$OFF equ 0x0
   877  0000                     global __CFG_FCMEN$OFF
   878                           __CFG_FCMEN$OFF equ 0x0
   879  0000                     global __CFG_WRT$OFF
   880                           __CFG_WRT$OFF equ 0x0
   881  0000                     global __CFG_VCAPEN$OFF
   882                           __CFG_VCAPEN$OFF equ 0x0
   883  0000                     global __CFG_STVREN$OFF
   884                           __CFG_STVREN$OFF equ 0x0
   885  0000                     global __CFG_BORV$LO
   886                           __CFG_BORV$LO equ 0x0
   887  0000                     global __CFG_LPBOR$OFF
   888                           __CFG_LPBOR$OFF equ 0x0
   889  0000                     global __CFG_LVP$OFF
   890                           __CFG_LVP$OFF equ 0x0
   891  0000                     	file	"C:\Users\dell\AppData\Local\Temp\s9ck."
   892                           	line	#
   893                           psect cinit,class=CODE,delta=2
   894                           global start_initialization
   895                           start_initialization:
   896  019E                     
   897                           global __initialization
   898                           __initialization:
   899  019E                     psect	bssBANK0,class=BANK0,space=1,noexec
   900                           global __pbssBANK0
   901                           __pbssBANK0:
   902  004D                     _test:
   903  004D                            ds      2
   904  004D                     
   905                           _wCounter2:
   906  004F                            ds      1
   907  004F                     
   908                           _wTimer1IntCounter:
   909  0050                            ds      1
   910  0050                     
   911                           _wTempUpdate:
   912  0051                            ds      1
   913  0051                     
   914                           _wTrial:
   915  0052                            ds      1
   916  0052                     
   917                           _wI2CTxSendPos:
   918  0053                            ds      1
   919  0053                     
   920                           _wI2CRxBufferSize:
   921  0054                            ds      1
   922  0054                     
   923                           _wI2CTxBufferSize:
   924  0055                            ds      1
   925  0055                     
   926                           _wReceptionCounterPrev:
   927  0056                            ds      1
   928  0056                     
   929                           _wReceptionCounter:
   930  0057                            ds      1
   931  0057                     
   932                           _wReceptionBufferPosition:
   933  0058                            ds      1
   934  0058                     
   935                           _mWritingPosition:
   936  0059                            ds      1
   937  0059                     
   938                           _mCursorDisplayShiftReg:
   939  005A                            ds      1
   940  005A                     
   941                           _mDisplayOnOffReg:
   942  005B                            ds      1
   943  005B                     
   944                           psect	bssBANK1,class=BANK1,space=1,noexec
   945                           global __pbssBANK1
   946                           __pbssBANK1:
   947  00A0                     _wTemperature:
   948  00A0                            ds      2
   949  00A0                     
   950                           _wHumidity:
   951  00A2                            ds      2
   952  00A2                     
   953                           _wTempState:
   954  00A4                            ds      1
   955  00A4                     
   956                           _wTimer0Counter:
   957  00A5                            ds      1
   958  00A5                     
   959                           _wI2CCommandState:
   960  00A6                            ds      1
   961  00A6                     
   962                           _wI2CTxBuffer:
   963  00A7                            ds      20
   964  00A7                     
   965                           psect	dataBANK1,class=BANK1,space=1,noexec
   966                           global __pdataBANK1
   967                           __pdataBANK1:
   968  00C1                     	file	"161518_temp_main.c"
   969                           	line	322
   970                           main@F2250:
   971  00C1                            ds      4
   972  00C1                     
   973                           psect	bssBANK2,class=BANK2,space=1,noexec
   974                           global __pbssBANK2
   975                           __pbssBANK2:
   976  0120                     _wHexTemp:
   977  0120                            ds      20
   978  0120                     
   979                           _wReceptionBuffer:
   980  0134                            ds      30
   981  0134                     
   982                           psect	bssBANK3,class=BANK3,space=1,noexec
   983                           global __pbssBANK3
   984                           __pbssBANK3:
   985  01A0                     _wInterruptText:
   986  01A0                            ds      75
   987  01A0                     
   988                           	file	"C:\Users\dell\AppData\Local\Temp\s9ck."
   989                           	line	#
   990                           ; Initialize objects allocated to BANK1
   991                           	global __pidataBANK1,__pdataBANK1
   992                           psect cinit,class=CODE,delta=2,merge=1
   993                           	movlb 1	; select bank1
   994  019E  0021               	fcall	__pidataBANK1+0		;fetch initializer
   995  019F  318B  2300  3181   	movwf	__pdataBANK1+0&07fh		
   996  01A2  00C1               	fcall	__pidataBANK1+1		;fetch initializer
   997  01A3  318B  2301  3181   	movwf	__pdataBANK1+1&07fh		
   998  01A6  00C2               	fcall	__pidataBANK1+2		;fetch initializer
   999  01A7  318B  2302  3181   	movwf	__pdataBANK1+2&07fh		
  1000  01AA  00C3               	fcall	__pidataBANK1+3		;fetch initializer
  1001  01AB  318B  2303  3181   	movwf	__pdataBANK1+3&07fh		
  1002  01AE  00C4               	line	#
  1003                           psect clrtext,class=CODE,delta=2
  1004                           global clear_ram0
  1005                           ;	Called with FSR0 containing the base address, and
  1006                           ;	WREG with the size to clear
  1007                           clear_ram0:
  1008  07FA                     	clrwdt			;clear the watchdog before getting into this loop
  1009  07FA  0064               clrloop0:
  1010  07FB                     	clrf	indf0		;clear RAM location pointed to by FSR
  1011  07FB  0180               	addfsr	0,1
  1012  07FC  3101               	decfsz wreg		;Have we reached the end of clearing yet?
  1013  07FD  0B89               	goto clrloop0	;have we reached the end yet?
  1014  07FE  2FFB               	retlw	0		;all done for this memory range, return
  1015  07FF  3400               ; Clear objects allocated to BANK0
  1016                           psect cinit,class=CODE,delta=2,merge=1
  1017                           	global __pbssBANK0
  1018                           	movlw	low(__pbssBANK0)
  1019  01AF  304D               	movwf	fsr0l
  1020  01B0  0084               	movlw	high(__pbssBANK0)
  1021  01B1  3000               	movwf	fsr0h
  1022  01B2  0085               	movlw	0Fh
  1023  01B3  300F               	fcall	clear_ram0
  1024  01B4  3187  27FA  3181   ; Clear objects allocated to BANK1
  1025                           psect cinit,class=CODE,delta=2,merge=1
  1026                           	global __pbssBANK1
  1027                           	movlw	low(__pbssBANK1)
  1028  01B7  30A0               	movwf	fsr0l
  1029  01B8  0084               	movlw	high(__pbssBANK1)
  1030  01B9  3000               	movwf	fsr0h
  1031  01BA  0085               	movlw	01Bh
  1032  01BB  301B               	fcall	clear_ram0
  1033  01BC  3187  27FA  3181   ; Clear objects allocated to BANK2
  1034                           psect cinit,class=CODE,delta=2,merge=1
  1035                           	global __pbssBANK2
  1036                           	movlw	low(__pbssBANK2)
  1037  01BF  3020               	movwf	fsr0l
  1038  01C0  0084               	movlw	high(__pbssBANK2)
  1039  01C1  3001               	movwf	fsr0h
  1040  01C2  0085               	movlw	032h
  1041  01C3  3032               	fcall	clear_ram0
  1042  01C4  3187  27FA  3181   ; Clear objects allocated to BANK3
  1043                           psect cinit,class=CODE,delta=2,merge=1
  1044                           	global __pbssBANK3
  1045                           	movlw	low(__pbssBANK3)
  1046  01C7  30A0               	movwf	fsr0l
  1047  01C8  0084               	movlw	high(__pbssBANK3)
  1048  01C9  3001               	movwf	fsr0h
  1049  01CA  0085               	movlw	04Bh
  1050  01CB  304B               	fcall	clear_ram0
  1051  01CC  3187  27FA  3181   psect cinit,class=CODE,delta=2,merge=1
  1052                           global end_of_initialization,__end_of__initialization
  1053                           
  1054                           ;End of C runtime variable initialization code
  1055                           
  1056                           end_of_initialization:
  1057  01CF                     __end_of__initialization:
  1058  01CF                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  1059  01CF  107E               movlb 0
  1060  01D0  0020               ljmp _main	;jump to C main() function
  1061  01D1  3181  29D3         psect	cstackBANK4,class=BANK4,space=1,noexec
  1062                           global __pcstackBANK4
  1063                           __pcstackBANK4:
  1064  0220                     	global	main@wTemp
  1065                           main@wTemp:	; 2 bytes @ 0x0
  1066  0220                     	ds	2
  1067  0220                     	global	main@wReadout
  1068                           main@wReadout:	; 20 bytes @ 0x2
  1069  0222                     	ds	20
  1070  0222                     	global	main@wConv
  1071                           main@wConv:	; 4 bytes @ 0x16
  1072  0236                     	ds	4
  1073  0236                     	global	main@wIterationCounter
  1074                           main@wIterationCounter:	; 2 bytes @ 0x1A
  1075  023A                     	ds	2
  1076  023A                     	global	main@wMenuPrev
  1077                           main@wMenuPrev:	; 1 bytes @ 0x1C
  1078  023C                     	ds	1
  1079  023C                     	global	main@wHumidityPrev
  1080                           main@wHumidityPrev:	; 2 bytes @ 0x1D
  1081  023D                     	ds	2
  1082  023D                     	global	main@wTemperaturePrev
  1083                           main@wTemperaturePrev:	; 2 bytes @ 0x1F
  1084  023F                     	ds	2
  1085  023F                     	global	main@wEnterBottonPressed
  1086                           main@wEnterBottonPressed:	; 1 bytes @ 0x21
  1087  0241                     	ds	1
  1088  0241                     	global	main@wDebounceEnter
  1089                           main@wDebounceEnter:	; 2 bytes @ 0x22
  1090  0242                     	ds	2
  1091  0242                     	global	main@wDebounceUp
  1092                           main@wDebounceUp:	; 2 bytes @ 0x24
  1093  0244                     	ds	2
  1094  0244                     	global	main@wDebounceDown
  1095                           main@wDebounceDown:	; 2 bytes @ 0x26
  1096  0246                     	ds	2
  1097  0246                     	global	main@wCounter
  1098                           main@wCounter:	; 2 bytes @ 0x28
  1099  0248                     	ds	2
  1100  0248                     	global	main@wUpBottonPressed
  1101                           main@wUpBottonPressed:	; 1 bytes @ 0x2A
  1102  024A                     	ds	1
  1103  024A                     	global	main@wDownBottonPressed
  1104                           main@wDownBottonPressed:	; 1 bytes @ 0x2B
  1105  024B                     	ds	1
  1106  024B                     	global	main@wMenu
  1107                           main@wMenu:	; 1 bytes @ 0x2C
  1108  024C                     	ds	1
  1109  024C                     psect	cstackBANK1,class=BANK1,space=1,noexec
  1110                           global __pcstackBANK1
  1111                           __pcstackBANK1:
  1112  00BB                     ??_Add_Trace:	; 1 bytes @ 0x0
  1113  00BB                     	ds	6
  1114  00BB                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  1115                           global __pcstackCOMMON
  1116                           __pcstackCOMMON:
  1117  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1118  0070                     ?_clearDisplay:	; 1 bytes @ 0x0
  1119  0070                     ?_powerOnLcd:	; 1 bytes @ 0x0
  1120  0070                     ?_setCursorOff:	; 1 bytes @ 0x0
  1121  0070                     ?_moveCursorToHome:	; 1 bytes @ 0x0
  1122  0070                     ?_setNotBlinkingCursor:	; 1 bytes @ 0x0
  1123  0070                     ?_setData:	; 1 bytes @ 0x0
  1124  0070                     ?_writeInsChk:	; 1 bytes @ 0x0
  1125  0070                     ?_writeTxtChk:	; 1 bytes @ 0x0
  1126  0070                     ?_SetToSendDataToLCD:	; 1 bytes @ 0x0
  1127  0070                     ?_waitLCDBusy:	; 1 bytes @ 0x0
  1128  0070                     ?_writeInsNoChk:	; 1 bytes @ 0x0
  1129  0070                     ?_ToggleBitRB5:	; 1 bytes @ 0x0
  1130  0070                     ?_SetToGetTemp:	; 1 bytes @ 0x0
  1131  0070                     ?_GetTemp:	; 1 bytes @ 0x0
  1132  0070                     ?_WakeTemp:	; 1 bytes @ 0x0
  1133  0070                     ?_PrintLog:	; 1 bytes @ 0x0
  1134  0070                     ?_main:	; 1 bytes @ 0x0
  1135  0070                     ?_myint:	; 1 bytes @ 0x0
  1136  0070                     ?_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  1137  0070                     ?i1_setData:	; 1 bytes @ 0x0
  1138  0070                     ??i1_setData:	; 1 bytes @ 0x0
  1139  0070                     ?i1_writeTxtChk:	; 1 bytes @ 0x0
  1140  0070                     ?i1_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  1141  0070                     ??i1_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  1142  0070                     ?i1_SetToSendDataToLCD:	; 1 bytes @ 0x0
  1143  0070                     ??i1_SetToSendDataToLCD:	; 1 bytes @ 0x0
  1144  0070                     ?i1_waitLCDBusy:	; 1 bytes @ 0x0
  1145  0070                     ??i1_waitLCDBusy:	; 1 bytes @ 0x0
  1146  0070                     	global	?i1_strlen
  1147                           ?i1_strlen:	; 2 bytes @ 0x0
  1148  0070                     	global	i1strlen@s
  1149                           i1strlen@s:	; 2 bytes @ 0x0
  1150  0070                     	ds	2
  1151  0070                     ??i1_strlen:	; 1 bytes @ 0x2
  1152  0072                     	global	i1setData@iValue
  1153                           i1setData@iValue:	; 1 bytes @ 0x2
  1154  0072                     	ds	1
  1155  0072                     	global	i1waitLCDBusy@busyFlag
  1156                           i1waitLCDBusy@busyFlag:	; 2 bytes @ 0x3
  1157  0073                     	ds	1
  1158  0073                     	global	i1strlen@a
  1159                           i1strlen@a:	; 2 bytes @ 0x4
  1160  0074                     	ds	1
  1161  0074                     ?i1_setCursorPosition:	; 1 bytes @ 0x5
  1162  0075                     	global	i1setCursorPosition@iPosition
  1163                           i1setCursorPosition@iPosition:	; 1 bytes @ 0x5
  1164  0075                     	ds	1
  1165  0075                     ??i1_setCursorPosition:	; 1 bytes @ 0x6
  1166  0076                     ?i1_strcpy:	; 1 bytes @ 0x6
  1167  0076                     	global	i1strcpy@src
  1168                           i1strcpy@src:	; 2 bytes @ 0x6
  1169  0076                     	ds	2
  1170  0076                     ??i1_strcpy:	; 1 bytes @ 0x8
  1171  0078                     	global	i1setCursorPosition@iLine
  1172                           i1setCursorPosition@iLine:	; 1 bytes @ 0x8
  1173  0078                     	ds	1
  1174  0078                     	global	i1setCursorPosition@wLCDIndex
  1175                           i1setCursorPosition@wLCDIndex:	; 1 bytes @ 0x9
  1176  0079                     	ds	1
  1177  0079                     ??i1_writeTxtChk:	; 1 bytes @ 0xA
  1178  007A                     	global	i1strcpy@s
  1179                           i1strcpy@s:	; 2 bytes @ 0xA
  1180  007A                     	ds	2
  1181  007A                     	global	i1writeTxtChk@iOpCode
  1182                           i1writeTxtChk@iOpCode:	; 1 bytes @ 0xC
  1183  007C                     	global	i1strcpy@dest
  1184                           i1strcpy@dest:	; 1 bytes @ 0xC
  1185  007C                     	ds	1
  1186  007C                     	global	i1lcdWriteText@wCharReadingPos
  1187                           i1lcdWriteText@wCharReadingPos:	; 1 bytes @ 0xD
  1188  007D                     	global	i1strcpy@d
  1189                           i1strcpy@d:	; 1 bytes @ 0xD
  1190  007D                     	ds	1
  1191  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1192                           global __pcstackBANK0
  1193                           __pcstackBANK0:
  1194  0020                     ?i1_lcdWriteText:	; 1 bytes @ 0x0
  1195  0020                     ?i1_strcat:	; 1 bytes @ 0x0
  1196  0020                     	global	i1lcdWriteText@iText
  1197                           i1lcdWriteText@iText:	; 2 bytes @ 0x0
  1198  0020                     	global	i1strcat@src
  1199                           i1strcat@src:	; 2 bytes @ 0x0
  1200  0020                     	ds	2
  1201  0020                     ??i1_lcdWriteText:	; 1 bytes @ 0x2
  1202  0022                     ??i1_strcat:	; 1 bytes @ 0x2
  1203  0022                     	ds	2
  1204  0022                     	global	i1strcat@dest
  1205                           i1strcat@dest:	; 1 bytes @ 0x4
  1206  0024                     	ds	1
  1207  0024                     ?i1_Add_Trace:	; 1 bytes @ 0x5
  1208  0025                     	global	i1Add_Trace@iSizeOfoText
  1209                           i1Add_Trace@iSizeOfoText:	; 1 bytes @ 0x5
  1210  0025                     	ds	1
  1211  0025                     	global	i1Add_Trace@iText
  1212                           i1Add_Trace@iText:	; 2 bytes @ 0x6
  1213  0026                     	ds	2
  1214  0026                     ??i1_Add_Trace:	; 1 bytes @ 0x8
  1215  0028                     	ds	6
  1216  0028                     	global	i1Add_Trace@oText
  1217                           i1Add_Trace@oText:	; 1 bytes @ 0xE
  1218  002E                     	ds	1
  1219  002E                     ??_myint:	; 1 bytes @ 0xF
  1220  002F                     	ds	5
  1221  002F                     ??_setData:	; 1 bytes @ 0x14
  1222  0034                     ??_SetToSendDataToLCD:	; 1 bytes @ 0x14
  1223  0034                     ??_waitLCDBusy:	; 1 bytes @ 0x14
  1224  0034                     ??_ToggleBitRB5:	; 1 bytes @ 0x14
  1225  0034                     ??_SetToGetTemp:	; 1 bytes @ 0x14
  1226  0034                     ??_WakeTemp:	; 1 bytes @ 0x14
  1227  0034                     ?_Debounce:	; 1 bytes @ 0x14
  1228  0034                     ??_SetToReadDataFromLCD:	; 1 bytes @ 0x14
  1229  0034                     	global	?_strlen
  1230                           ?_strlen:	; 2 bytes @ 0x14
  1231  0034                     ?_memset:	; 2 bytes @ 0x14
  1232  0034                     	global	?___awdiv
  1233                           ?___awdiv:	; 2 bytes @ 0x14
  1234  0034                     	global	?___awmod
  1235                           ?___awmod:	; 2 bytes @ 0x14
  1236  0034                     	global	Debounce@ioTimer
  1237                           Debounce@ioTimer:	; 1 bytes @ 0x14
  1238  0034                     	global	___awdiv@divisor
  1239                           ___awdiv@divisor:	; 2 bytes @ 0x14
  1240  0034                     	global	___awmod@divisor
  1241                           ___awmod@divisor:	; 2 bytes @ 0x14
  1242  0034                     	global	memset@dest
  1243                           memset@dest:	; 2 bytes @ 0x14
  1244  0034                     	global	strlen@s
  1245                           strlen@s:	; 2 bytes @ 0x14
  1246  0034                     	ds	1
  1247  0034                     	global	Debounce@swPressed
  1248                           Debounce@swPressed:	; 1 bytes @ 0x15
  1249  0035                     	ds	1
  1250  0035                     ??_strlen:	; 1 bytes @ 0x16
  1251  0036                     ??_Debounce:	; 1 bytes @ 0x16
  1252  0036                     	global	setData@iValue
  1253                           setData@iValue:	; 1 bytes @ 0x16
  1254  0036                     	global	___awdiv@dividend
  1255                           ___awdiv@dividend:	; 2 bytes @ 0x16
  1256  0036                     	global	___awmod@dividend
  1257                           ___awmod@dividend:	; 2 bytes @ 0x16
  1258  0036                     	global	memset@c
  1259                           memset@c:	; 2 bytes @ 0x16
  1260  0036                     	ds	1
  1261  0036                     ??_writeInsNoChk:	; 1 bytes @ 0x17
  1262  0037                     	global	waitLCDBusy@busyFlag
  1263                           waitLCDBusy@busyFlag:	; 2 bytes @ 0x17
  1264  0037                     	ds	1
  1265  0037                     ??___awdiv:	; 1 bytes @ 0x18
  1266  0038                     ??___awmod:	; 1 bytes @ 0x18
  1267  0038                     	global	Debounce@iSwitch
  1268                           Debounce@iSwitch:	; 1 bytes @ 0x18
  1269  0038                     	global	writeInsNoChk@iOpCode
  1270                           writeInsNoChk@iOpCode:	; 1 bytes @ 0x18
  1271  0038                     	global	memset@n
  1272                           memset@n:	; 2 bytes @ 0x18
  1273  0038                     	global	strlen@a
  1274                           strlen@a:	; 2 bytes @ 0x18
  1275  0038                     	ds	1
  1276  0038                     ?_setCursorPosition:	; 1 bytes @ 0x19
  1277  0039                     ??_writeInsChk:	; 1 bytes @ 0x19
  1278  0039                     	global	writeInsChk@iOpCode
  1279                           writeInsChk@iOpCode:	; 1 bytes @ 0x19
  1280  0039                     	global	setCursorPosition@iPosition
  1281                           setCursorPosition@iPosition:	; 1 bytes @ 0x19
  1282  0039                     	global	___awdiv@counter
  1283                           ___awdiv@counter:	; 1 bytes @ 0x19
  1284  0039                     	global	___awmod@counter
  1285                           ___awmod@counter:	; 1 bytes @ 0x19
  1286  0039                     	ds	1
  1287  0039                     ??_memset:	; 1 bytes @ 0x1A
  1288  003A                     ??_initLCD:	; 1 bytes @ 0x1A
  1289  003A                     ??_clearDisplay:	; 1 bytes @ 0x1A
  1290  003A                     ??_powerOnLcd:	; 1 bytes @ 0x1A
  1291  003A                     ??_setCursorOff:	; 1 bytes @ 0x1A
  1292  003A                     ??_moveCursorToHome:	; 1 bytes @ 0x1A
  1293  003A                     ??_setNotBlinkingCursor:	; 1 bytes @ 0x1A
  1294  003A                     ??_setCursorPosition:	; 1 bytes @ 0x1A
  1295  003A                     ?_strcpy:	; 1 bytes @ 0x1A
  1296  003A                     	global	___awdiv@sign
  1297                           ___awdiv@sign:	; 1 bytes @ 0x1A
  1298  003A                     	global	___awmod@sign
  1299                           ___awmod@sign:	; 1 bytes @ 0x1A
  1300  003A                     	global	strcpy@src
  1301                           strcpy@src:	; 2 bytes @ 0x1A
  1302  003A                     	ds	1
  1303  003A                     	global	___awdiv@quotient
  1304                           ___awdiv@quotient:	; 2 bytes @ 0x1B
  1305  003B                     	ds	1
  1306  003B                     ??_strcpy:	; 1 bytes @ 0x1C
  1307  003C                     	global	setCursorPosition@iLine
  1308                           setCursorPosition@iLine:	; 1 bytes @ 0x1C
  1309  003C                     	ds	1
  1310  003C                     ?_printEM1812:	; 1 bytes @ 0x1D
  1311  003D                     	global	setCursorPosition@wLCDIndex
  1312                           setCursorPosition@wLCDIndex:	; 1 bytes @ 0x1D
  1313  003D                     	global	printEM1812@wVariable
  1314                           printEM1812@wVariable:	; 2 bytes @ 0x1D
  1315  003D                     	ds	1
  1316  003D                     ??_writeTxtChk:	; 1 bytes @ 0x1E
  1317  003E                     	global	memset@k
  1318                           memset@k:	; 2 bytes @ 0x1E
  1319  003E                     	global	strcpy@s
  1320                           strcpy@s:	; 2 bytes @ 0x1E
  1321  003E                     	ds	1
  1322  003E                     	global	printEM1812@oTextOut
  1323                           printEM1812@oTextOut:	; 1 bytes @ 0x1F
  1324  003F                     	ds	1
  1325  003F                     ??_printEM1812:	; 1 bytes @ 0x20
  1326  0040                     	global	writeTxtChk@iOpCode
  1327                           writeTxtChk@iOpCode:	; 1 bytes @ 0x20
  1328  0040                     	global	strcpy@d
  1329                           strcpy@d:	; 1 bytes @ 0x20
  1330  0040                     	global	memset@s
  1331                           memset@s:	; 2 bytes @ 0x20
  1332  0040                     	ds	1
  1333  0040                     ?_lcdWriteText:	; 1 bytes @ 0x21
  1334  0041                     	global	printEM1812@wIsNegative
  1335                           printEM1812@wIsNegative:	; 1 bytes @ 0x21
  1336  0041                     	global	strcpy@dest
  1337                           strcpy@dest:	; 1 bytes @ 0x21
  1338  0041                     	global	lcdWriteText@iText
  1339                           lcdWriteText@iText:	; 2 bytes @ 0x21
  1340  0041                     	ds	1
  1341  0041                     ?_strcat:	; 1 bytes @ 0x22
  1342  0042                     ??_GetTemp:	; 1 bytes @ 0x22
  1343  0042                     	global	printEM1812@wTen
  1344                           printEM1812@wTen:	; 1 bytes @ 0x22
  1345  0042                     	global	strcat@src
  1346                           strcat@src:	; 2 bytes @ 0x22
  1347  0042                     	ds	1
  1348  0042                     ??_lcdWriteText:	; 1 bytes @ 0x23
  1349  0043                     	global	printEM1812@wUnity
  1350                           printEM1812@wUnity:	; 1 bytes @ 0x23
  1351  0043                     	ds	1
  1352  0043                     ??_strcat:	; 1 bytes @ 0x24
  1353  0044                     	global	printEM1812@wDecimal
  1354                           printEM1812@wDecimal:	; 1 bytes @ 0x24
  1355  0044                     	ds	2
  1356  0044                     	global	lcdWriteText@wCharReadingPos
  1357                           lcdWriteText@wCharReadingPos:	; 1 bytes @ 0x26
  1358  0046                     	global	strcat@dest
  1359                           strcat@dest:	; 1 bytes @ 0x26
  1360  0046                     	ds	1
  1361  0046                     ?_Add_Trace:	; 1 bytes @ 0x27
  1362  0047                     ??_PrintLog:	; 1 bytes @ 0x27
  1363  0047                     	global	Add_Trace@iSizeOfoText
  1364                           Add_Trace@iSizeOfoText:	; 1 bytes @ 0x27
  1365  0047                     	ds	1
  1366  0047                     	global	Add_Trace@iText
  1367                           Add_Trace@iText:	; 2 bytes @ 0x28
  1368  0048                     	ds	1
  1369  0048                     	global	PrintLog@wInterruptTextLen
  1370                           PrintLog@wInterruptTextLen:	; 1 bytes @ 0x29
  1371  0049                     	ds	1
  1372  0049                     	global	Add_Trace@oText
  1373                           Add_Trace@oText:	; 1 bytes @ 0x2A
  1374  004A                     	global	PrintLog@iText
  1375                           PrintLog@iText:	; 1 bytes @ 0x2A
  1376  004A                     	ds	1
  1377  004A                     ??_main:	; 1 bytes @ 0x2B
  1378  004B                     	ds	2
  1379  004B                     ;!
  1380                           ;!Data Sizes:
  1381                           ;!    Strings     104
  1382                           ;!    Constant    0
  1383                           ;!    Data        4
  1384                           ;!    BSS         167
  1385                           ;!    Persistent  0
  1386                           ;!    Stack       0
  1387                           ;!
  1388                           ;!Auto Spaces:
  1389                           ;!    Space          Size  Autos    Used
  1390                           ;!    COMMON           14     14      14
  1391                           ;!    BANK0            80     45      60
  1392                           ;!    BANK1            80      6      37
  1393                           ;!    BANK2            80      0      50
  1394                           ;!    BANK3            80      0      75
  1395                           ;!    BANK4            80     45      45
  1396                           ;!    BANK5            80      0       0
  1397                           ;!    BANK6            80      0       0
  1398                           ;!    BANK7            80      0       0
  1399                           ;!    BANK8            80      0       0
  1400                           ;!    BANK9            80      0       0
  1401                           ;!    BANK10           80      0       0
  1402                           ;!    BANK11           80      0       0
  1403                           ;!    BANK12           48      0       0
  1404                           
  1405                           ;!
  1406                           ;!Pointer List with Targets:
  1407                           ;!
  1408                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 75
  1409                           ;!		 -> STR_12(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1410                           ;!		 -> main@wReadout(BANK4[20]), wInterruptText(BANK3[75]), 
  1411                           ;!
  1412                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 75
  1413                           ;!		 -> STR_12(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1414                           ;!		 -> main@wReadout(BANK4[20]), wInterruptText(BANK3[75]), 
  1415                           ;!
  1416                           ;!    strcpy@dest	PTR unsigned char  size(1) Largest target is 75
  1417                           ;!		 -> wInterruptText(BANK3[75]), 
  1418                           ;!
  1419                           ;!    strcpy@d	PTR unsigned char  size(1) Largest target is 75
  1420                           ;!		 -> wInterruptText(BANK3[75]), 
  1421                           ;!
  1422                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
  1423                           ;!		 -> STR_12(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1424                           ;!		 -> main@wReadout(BANK4[20]), 
  1425                           ;!
  1426                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
  1427                           ;!		 -> STR_12(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1428                           ;!		 -> main@wReadout(BANK4[20]), 
  1429                           ;!
  1430                           ;!    sp__strcpy	PTR unsigned char  size(1) Largest target is 75
  1431                           ;!		 -> wInterruptText(BANK3[75]), 
  1432                           ;!
  1433                           ;!    strcat@src	PTR const unsigned char  size(2) Largest target is 20
  1434                           ;!		 -> STR_12(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1435                           ;!		 -> main@wReadout(BANK4[20]), 
  1436                           ;!
  1437                           ;!    strcat@dest	PTR unsigned char  size(1) Largest target is 75
  1438                           ;!		 -> wInterruptText(BANK3[75]), 
  1439                           ;!
  1440                           ;!    memset@dest	PTR void  size(2) Largest target is 75
  1441                           ;!		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]),
                                  
  1442                           ;!
  1443                           ;!    memset@s	PTR unsigned char  size(2) Largest target is 75
  1444                           ;!		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]),
                                  
  1445                           ;!
  1446                           ;!    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
  1447                           ;!		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
  1448                           ;!		 -> STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[16]), STR_3(CODE[16]), 
  1449                           ;!		 -> main@wConv(BANK4[4]), wInterruptText(BANK3[75]), 
  1450                           ;!
  1451                           ;!    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
  1452                           ;!		 -> main@wEnterBottonPressed(BANK4[1]), main@wDownBottonPressed(BANK4[1]), main@wUpB
                                 ottonPressed(BANK4[1]), 
  1453                           ;!
  1454                           ;!    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
  1455                           ;!		 -> main@wDebounceDown(BANK4[2]), main@wDebounceUp(BANK4[2]), main@wDebounceEnter(BA
                                 NK4[2]), 
  1456                           ;!
  1457                           ;!    printEM1812@oTextOut	PTR unsigned char  size(1) Largest target is 20
  1458                           ;!		 -> main@wReadout(BANK4[20]), 
  1459                           ;!
  1460                           ;!    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
  1461                           ;!		 -> wInterruptText(BANK3[75]), 
  1462                           ;!
  1463                           ;!    sp__memset	PTR void  size(2) Largest target is 75
  1464                           ;!		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]),
                                  
  1465                           ;!
  1466                           ;!    sp__strcat	PTR unsigned char  size(1) Largest target is 75
  1467                           ;!		 -> wInterruptText(BANK3[75]), 
  1468                           ;!
  1469                           ;!    Add_Trace@iText	PTR unsigned char  size(2) Largest target is 20
  1470                           ;!		 -> STR_12(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1471                           ;!		 -> main@wReadout(BANK4[20]), 
  1472                           ;!
  1473                           ;!    Add_Trace@oText	PTR unsigned char  size(1) Largest target is 75
  1474                           ;!		 -> wInterruptText(BANK3[75]), 
  1475                           ;!
  1476                           
  1477                           
  1478                           ;!
  1479                           ;!Critical Paths under _main in COMMON
  1480                           ;!
  1481                           ;!    None.
  1482                           ;!
  1483                           ;!Critical Paths under _myint in COMMON
  1484                           ;!
  1485                           ;!    _myint->i1_lcdWriteText
  1486                           ;!    i1_lcdWriteText->i1_writeTxtChk
  1487                           ;!    i1_writeTxtChk->i1_setCursorPosition
  1488                           ;!    i1_setCursorPosition->i1_waitLCDBusy
  1489                           ;!    i1_strcat->i1_strcpy
  1490                           ;!    i1_strcpy->i1_strlen
  1491                           ;!
  1492                           ;!Critical Paths under _main in BANK0
  1493                           ;!
  1494                           ;!    _main->_Add_Trace
  1495                           ;!    _main->_PrintLog
  1496                           ;!    _setNotBlinkingCursor->_writeInsChk
  1497                           ;!    _setCursorOff->_writeInsChk
  1498                           ;!    _printEM1812->___awdiv
  1499                           ;!    _powerOnLcd->_writeInsChk
  1500                           ;!    _moveCursorToHome->_writeInsChk
  1501                           ;!    _initLCD->_writeInsChk
  1502                           ;!    _clearDisplay->_writeInsChk
  1503                           ;!    _writeInsChk->_waitLCDBusy
  1504                           ;!    _writeInsChk->_writeInsNoChk
  1505                           ;!    _writeInsNoChk->_setData
  1506                           ;!    _PrintLog->_lcdWriteText
  1507                           ;!    _lcdWriteText->_writeTxtChk
  1508                           ;!    _writeTxtChk->_setCursorPosition
  1509                           ;!    _setCursorPosition->_waitLCDBusy
  1510                           ;!    _GetTemp->_memset
  1511                           ;!    _Add_Trace->_strcat
  1512                           ;!    _strcat->_strcpy
  1513                           ;!    _strcpy->_strlen
  1514                           ;!
  1515                           ;!Critical Paths under _myint in BANK0
  1516                           ;!
  1517                           ;!    _myint->i1_Add_Trace
  1518                           ;!    i1_Add_Trace->i1_strcat
  1519                           ;!
  1520                           ;!Critical Paths under _main in BANK1
  1521                           ;!
  1522                           ;!    _main->_Add_Trace
  1523                           ;!
  1524                           ;!Critical Paths under _myint in BANK1
  1525                           ;!
  1526                           ;!    None.
  1527                           ;!
  1528                           ;!Critical Paths under _main in BANK2
  1529                           ;!
  1530                           ;!    None.
  1531                           ;!
  1532                           ;!Critical Paths under _myint in BANK2
  1533                           ;!
  1534                           ;!    None.
  1535                           ;!
  1536                           ;!Critical Paths under _main in BANK3
  1537                           ;!
  1538                           ;!    None.
  1539                           ;!
  1540                           ;!Critical Paths under _myint in BANK3
  1541                           ;!
  1542                           ;!    None.
  1543                           ;!
  1544                           ;!Critical Paths under _main in BANK4
  1545                           ;!
  1546                           ;!    None.
  1547                           ;!
  1548                           ;!Critical Paths under _myint in BANK4
  1549                           ;!
  1550                           ;!    None.
  1551                           ;!
  1552                           ;!Critical Paths under _main in BANK5
  1553                           ;!
  1554                           ;!    None.
  1555                           ;!
  1556                           ;!Critical Paths under _myint in BANK5
  1557                           ;!
  1558                           ;!    None.
  1559                           ;!
  1560                           ;!Critical Paths under _main in BANK6
  1561                           ;!
  1562                           ;!    None.
  1563                           ;!
  1564                           ;!Critical Paths under _myint in BANK6
  1565                           ;!
  1566                           ;!    None.
  1567                           ;!
  1568                           ;!Critical Paths under _main in BANK7
  1569                           ;!
  1570                           ;!    None.
  1571                           ;!
  1572                           ;!Critical Paths under _myint in BANK7
  1573                           ;!
  1574                           ;!    None.
  1575                           ;!
  1576                           ;!Critical Paths under _main in BANK8
  1577                           ;!
  1578                           ;!    None.
  1579                           ;!
  1580                           ;!Critical Paths under _myint in BANK8
  1581                           ;!
  1582                           ;!    None.
  1583                           ;!
  1584                           ;!Critical Paths under _main in BANK9
  1585                           ;!
  1586                           ;!    None.
  1587                           ;!
  1588                           ;!Critical Paths under _myint in BANK9
  1589                           ;!
  1590                           ;!    None.
  1591                           ;!
  1592                           ;!Critical Paths under _main in BANK10
  1593                           ;!
  1594                           ;!    None.
  1595                           ;!
  1596                           ;!Critical Paths under _myint in BANK10
  1597                           ;!
  1598                           ;!    None.
  1599                           ;!
  1600                           ;!Critical Paths under _main in BANK11
  1601                           ;!
  1602                           ;!    None.
  1603                           ;!
  1604                           ;!Critical Paths under _myint in BANK11
  1605                           ;!
  1606                           ;!    None.
  1607                           ;!
  1608                           ;!Critical Paths under _main in BANK12
  1609                           ;!
  1610                           ;!    None.
  1611                           ;!
  1612                           ;!Critical Paths under _myint in BANK12
  1613                           ;!
  1614                           ;!    None.
  1615                           
  1616 ;;
  1617 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1618 ;;
  1619                           
  1620                           ;!
  1621                           ;!Call Graph Tables:
  1622                           ;!
  1623                           ;! ---------------------------------------------------------------------------------
  1624                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1625                           ;! ---------------------------------------------------------------------------------
  1626                           ;! (0) _main                                                47    47      0   23303
  1627                           ;!                                             43 BANK0      2     2      0
  1628                           ;!                                              0 BANK4     45    45      0
  1629                           ;!                          _Add_Trace
  1630                           ;!                           _Debounce
  1631                           ;!                            _GetTemp
  1632                           ;!                           _PrintLog
  1633                           ;!                       _SetToGetTemp
  1634                           ;!                       _ToggleBitRB5
  1635                           ;!                           _WakeTemp
  1636                           ;!                       _clearDisplay
  1637                           ;!                            _initLCD
  1638                           ;!                       _lcdWriteText
  1639                           ;!                             _memset
  1640                           ;!                   _moveCursorToHome
  1641                           ;!                         _powerOnLcd
  1642                           ;!                        _printEM1812
  1643                           ;!                       _setCursorOff
  1644                           ;!                  _setCursorPosition
  1645                           ;!               _setNotBlinkingCursor
  1646                           ;! ---------------------------------------------------------------------------------
  1647                           ;! (1) _setNotBlinkingCursor                                 1     1      0     254
  1648                           ;!                                             26 BANK0      1     1      0
  1649                           ;!                        _writeInsChk
  1650                           ;! ---------------------------------------------------------------------------------
  1651                           ;! (1) _setCursorOff                                         1     1      0     254
  1652                           ;!                                             26 BANK0      1     1      0
  1653                           ;!                        _writeInsChk
  1654                           ;! ---------------------------------------------------------------------------------
  1655                           ;! (1) _printEM1812                                          8     5      3    2757
  1656                           ;!                                             29 BANK0      8     5      3
  1657                           ;!                            ___awdiv
  1658                           ;!                            ___awmod
  1659                           ;! ---------------------------------------------------------------------------------
  1660                           ;! (2) ___awmod                                              7     3      4     793
  1661                           ;!                                             20 BANK0      7     3      4
  1662                           ;! ---------------------------------------------------------------------------------
  1663                           ;! (2) ___awdiv                                              9     5      4     805
  1664                           ;!                                             20 BANK0      9     5      4
  1665                           ;! ---------------------------------------------------------------------------------
  1666                           ;! (1) _powerOnLcd                                           1     1      0     254
  1667                           ;!                                             26 BANK0      1     1      0
  1668                           ;!                        _writeInsChk
  1669                           ;! ---------------------------------------------------------------------------------
  1670                           ;! (1) _moveCursorToHome                                     0     0      0     254
  1671                           ;!                        _writeInsChk
  1672                           ;! ---------------------------------------------------------------------------------
  1673                           ;! (1) _initLCD                                              1     1      0     632
  1674                           ;!                                             26 BANK0      1     1      0
  1675                           ;!                       _clearDisplay
  1676                           ;!                            _setData
  1677                           ;!                        _writeInsChk
  1678                           ;! ---------------------------------------------------------------------------------
  1679                           ;! (2) _clearDisplay                                         0     0      0     254
  1680                           ;!                        _writeInsChk
  1681                           ;! ---------------------------------------------------------------------------------
  1682                           ;! (2) _writeInsChk                                          1     1      0     254
  1683                           ;!                                             25 BANK0      1     1      0
  1684                           ;!                        _waitLCDBusy
  1685                           ;!                      _writeInsNoChk
  1686                           ;! ---------------------------------------------------------------------------------
  1687                           ;! (3) _writeInsNoChk                                        2     2      0     186
  1688                           ;!                                             23 BANK0      2     2      0
  1689                           ;!                 _SetToSendDataToLCD
  1690                           ;!                            _setData
  1691                           ;! ---------------------------------------------------------------------------------
  1692                           ;! (1) _WakeTemp                                             1     1      0       0
  1693                           ;!                                             20 BANK0      1     1      0
  1694                           ;! ---------------------------------------------------------------------------------
  1695                           ;! (1) _ToggleBitRB5                                         0     0      0       0
  1696                           ;! ---------------------------------------------------------------------------------
  1697                           ;! (1) _SetToGetTemp                                         1     1      0       0
  1698                           ;!                                             20 BANK0      1     1      0
  1699                           ;! ---------------------------------------------------------------------------------
  1700                           ;! (1) _PrintLog                                             4     4      0    5502
  1701                           ;!                                             39 BANK0      4     4      0
  1702                           ;!                       _lcdWriteText
  1703                           ;!                             _memset
  1704                           ;!                             _strlen
  1705                           ;! ---------------------------------------------------------------------------------
  1706                           ;! (1) _lcdWriteText                                         6     4      2    2921
  1707                           ;!                                             33 BANK0      6     4      2
  1708                           ;!                        _writeTxtChk
  1709                           ;! ---------------------------------------------------------------------------------
  1710                           ;! (2) _writeTxtChk                                          3     3      0    2031
  1711                           ;!                                             30 BANK0      3     3      0
  1712                           ;!                 _SetToSendDataToLCD
  1713                           ;!                  _setCursorPosition
  1714                           ;!                            _setData
  1715                           ;!                        _waitLCDBusy
  1716                           ;! ---------------------------------------------------------------------------------
  1717                           ;! (1) _setCursorPosition                                    5     4      1    1777
  1718                           ;!                                             25 BANK0      5     4      1
  1719                           ;!                 _SetToSendDataToLCD
  1720                           ;!                            _setData
  1721                           ;!                        _waitLCDBusy
  1722                           ;! ---------------------------------------------------------------------------------
  1723                           ;! (3) _waitLCDBusy                                          5     5      0      37
  1724                           ;!                                             20 BANK0      5     5      0
  1725                           ;!               _SetToReadDataFromLCD
  1726                           ;! ---------------------------------------------------------------------------------
  1727                           ;! (4) _SetToReadDataFromLCD                                 0     0      0       0
  1728                           ;! ---------------------------------------------------------------------------------
  1729                           ;! (4) _setData                                              3     3      0     124
  1730                           ;!                                             20 BANK0      3     3      0
  1731                           ;! ---------------------------------------------------------------------------------
  1732                           ;! (4) _SetToSendDataToLCD                                   0     0      0       0
  1733                           ;! ---------------------------------------------------------------------------------
  1734                           ;! (1) _GetTemp                                              1     1      0    1897
  1735                           ;!                                             34 BANK0      1     1      0
  1736                           ;!                             _memset
  1737                           ;! ---------------------------------------------------------------------------------
  1738                           ;! (1) _memset                                              14     8      6    1897
  1739                           ;!                                             20 BANK0     14     8      6
  1740                           ;! ---------------------------------------------------------------------------------
  1741                           ;! (1) _Debounce                                             5     3      2     788
  1742                           ;!                                             20 BANK0      5     3      2
  1743                           ;! ---------------------------------------------------------------------------------
  1744                           ;! (1) _Add_Trace                                           10     7      3    2780
  1745                           ;!                                             39 BANK0      4     1      3
  1746                           ;!                                              0 BANK1      6     6      0
  1747                           ;!                             _strcat
  1748                           ;!                             _strlen
  1749                           ;! ---------------------------------------------------------------------------------
  1750                           ;! (2) _strcat                                               5     3      2     979
  1751                           ;!                                             34 BANK0      5     3      2
  1752                           ;!                             _strcpy
  1753                           ;!                             _strlen
  1754                           ;! ---------------------------------------------------------------------------------
  1755                           ;! (2) _strlen                                               6     4      2     490
  1756                           ;!                                             20 BANK0      6     4      2
  1757                           ;! ---------------------------------------------------------------------------------
  1758                           ;! (3) _strcpy                                               8     6      2     263
  1759                           ;!                                             26 BANK0      8     6      2
  1760                           ;!                             _strlen (ARG)
  1761                           ;! ---------------------------------------------------------------------------------
  1762                           ;! Estimated maximum stack depth 4
  1763                           ;! ---------------------------------------------------------------------------------
  1764                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1765                           ;! ---------------------------------------------------------------------------------
  1766                           ;! (7) _myint                                                5     5      0    2393
  1767                           ;!                                             15 BANK0      5     5      0
  1768                           ;!                        i1_Add_Trace
  1769                           ;!                     i1_lcdWriteText
  1770                           ;! ---------------------------------------------------------------------------------
  1771                           ;! (8) i1_lcdWriteText                                       6     4      2    1321
  1772                           ;!                                             13 COMMON     1     1      0
  1773                           ;!                                              0 BANK0      5     3      2
  1774                           ;!                      i1_writeTxtChk
  1775                           ;! ---------------------------------------------------------------------------------
  1776                           ;! (9) i1_writeTxtChk                                        3     3      0    1051
  1777                           ;!                                             10 COMMON     3     3      0
  1778                           ;!               i1_SetToSendDataToLCD
  1779                           ;!                i1_setCursorPosition
  1780                           ;!                          i1_setData
  1781                           ;!                      i1_waitLCDBusy
  1782                           ;! ---------------------------------------------------------------------------------
  1783                           ;! (10) i1_setCursorPosition                                 5     4      1     797
  1784                           ;!                                              5 COMMON     5     4      1
  1785                           ;!               i1_SetToSendDataToLCD
  1786                           ;!                          i1_setData
  1787                           ;!                      i1_waitLCDBusy
  1788                           ;! ---------------------------------------------------------------------------------
  1789                           ;! (10) i1_waitLCDBusy                                       5     5      0      37
  1790                           ;!                                              0 COMMON     5     5      0
  1791                           ;!             i1_SetToReadDataFromLCD
  1792                           ;! ---------------------------------------------------------------------------------
  1793                           ;! (11) i1_SetToReadDataFromLCD                              0     0      0       0
  1794                           ;! ---------------------------------------------------------------------------------
  1795                           ;! (10) i1_setData                                           3     3      0     124
  1796                           ;!                                              0 COMMON     3     3      0
  1797                           ;! ---------------------------------------------------------------------------------
  1798                           ;! (11) i1_SetToSendDataToLCD                                0     0      0       0
  1799                           ;! ---------------------------------------------------------------------------------
  1800                           ;! (8) i1_Add_Trace                                         10     7      3    1072
  1801                           ;!                                              5 BANK0     10     7      3
  1802                           ;!                           i1_strcat
  1803                           ;!                           i1_strlen
  1804                           ;! ---------------------------------------------------------------------------------
  1805                           ;! (9) i1_strcat                                             5     3      2     542
  1806                           ;!                                              0 BANK0      5     3      2
  1807                           ;!                           i1_strcpy
  1808                           ;!                           i1_strlen
  1809                           ;! ---------------------------------------------------------------------------------
  1810                           ;! (9) i1_strlen                                             6     4      2     235
  1811                           ;!                                              0 COMMON     6     4      2
  1812                           ;! ---------------------------------------------------------------------------------
  1813                           ;! (10) i1_strcpy                                            8     6      2     172
  1814                           ;!                                              6 COMMON     8     6      2
  1815                           ;!                           i1_strlen (ARG)
  1816                           ;! ---------------------------------------------------------------------------------
  1817                           ;! Estimated maximum stack depth 11
  1818                           ;! ---------------------------------------------------------------------------------
  1819                           ;!
  1820                           ;! Call Graph Graphs:
  1821                           ;!
  1822                           ;! _main (ROOT)
  1823                           ;!   _Add_Trace
  1824                           ;!     _strcat
  1825                           ;!       _strcpy
  1826                           ;!         _strlen (ARG)
  1827                           ;!       _strlen
  1828                           ;!     _strlen
  1829                           ;!   _Debounce
  1830                           ;!   _GetTemp
  1831                           ;!     _memset
  1832                           ;!   _PrintLog
  1833                           ;!     _lcdWriteText
  1834                           ;!       _writeTxtChk
  1835                           ;!         _SetToSendDataToLCD
  1836                           ;!         _setCursorPosition
  1837                           ;!           _SetToSendDataToLCD
  1838                           ;!           _setData
  1839                           ;!           _waitLCDBusy
  1840                           ;!             _SetToReadDataFromLCD
  1841                           ;!         _setData
  1842                           ;!         _waitLCDBusy
  1843                           ;!           _SetToReadDataFromLCD
  1844                           ;!     _memset
  1845                           ;!     _strlen
  1846                           ;!   _SetToGetTemp
  1847                           ;!   _ToggleBitRB5
  1848                           ;!   _WakeTemp
  1849                           ;!   _clearDisplay
  1850                           ;!     _writeInsChk
  1851                           ;!       _waitLCDBusy
  1852                           ;!         _SetToReadDataFromLCD
  1853                           ;!       _writeInsNoChk
  1854                           ;!         _SetToSendDataToLCD
  1855                           ;!         _setData
  1856                           ;!   _initLCD
  1857                           ;!     _clearDisplay
  1858                           ;!       _writeInsChk
  1859                           ;!         _waitLCDBusy
  1860                           ;!           _SetToReadDataFromLCD
  1861                           ;!         _writeInsNoChk
  1862                           ;!           _SetToSendDataToLCD
  1863                           ;!           _setData
  1864                           ;!     _setData
  1865                           ;!     _writeInsChk
  1866                           ;!       _waitLCDBusy
  1867                           ;!         _SetToReadDataFromLCD
  1868                           ;!       _writeInsNoChk
  1869                           ;!         _SetToSendDataToLCD
  1870                           ;!         _setData
  1871                           ;!   _lcdWriteText
  1872                           ;!     _writeTxtChk
  1873                           ;!       _SetToSendDataToLCD
  1874                           ;!       _setCursorPosition
  1875                           ;!         _SetToSendDataToLCD
  1876                           ;!         _setData
  1877                           ;!         _waitLCDBusy
  1878                           ;!           _SetToReadDataFromLCD
  1879                           ;!       _setData
  1880                           ;!       _waitLCDBusy
  1881                           ;!         _SetToReadDataFromLCD
  1882                           ;!   _memset
  1883                           ;!   _moveCursorToHome
  1884                           ;!     _writeInsChk
  1885                           ;!       _waitLCDBusy
  1886                           ;!         _SetToReadDataFromLCD
  1887                           ;!       _writeInsNoChk
  1888                           ;!         _SetToSendDataToLCD
  1889                           ;!         _setData
  1890                           ;!   _powerOnLcd
  1891                           ;!     _writeInsChk
  1892                           ;!       _waitLCDBusy
  1893                           ;!         _SetToReadDataFromLCD
  1894                           ;!       _writeInsNoChk
  1895                           ;!         _SetToSendDataToLCD
  1896                           ;!         _setData
  1897                           ;!   _printEM1812
  1898                           ;!     ___awdiv
  1899                           ;!     ___awmod
  1900                           ;!   _setCursorOff
  1901                           ;!     _writeInsChk
  1902                           ;!       _waitLCDBusy
  1903                           ;!         _SetToReadDataFromLCD
  1904                           ;!       _writeInsNoChk
  1905                           ;!         _SetToSendDataToLCD
  1906                           ;!         _setData
  1907                           ;!   _setCursorPosition
  1908                           ;!     _SetToSendDataToLCD
  1909                           ;!     _setData
  1910                           ;!     _waitLCDBusy
  1911                           ;!       _SetToReadDataFromLCD
  1912                           ;!   _setNotBlinkingCursor
  1913                           ;!     _writeInsChk
  1914                           ;!       _waitLCDBusy
  1915                           ;!         _SetToReadDataFromLCD
  1916                           ;!       _writeInsNoChk
  1917                           ;!         _SetToSendDataToLCD
  1918                           ;!         _setData
  1919                           ;!
  1920                           ;! _myint (ROOT)
  1921                           ;!   i1_Add_Trace
  1922                           ;!     i1_strcat
  1923                           ;!       i1_strcpy
  1924                           ;!         i1_strlen (ARG)
  1925                           ;!       i1_strlen
  1926                           ;!     i1_strlen
  1927                           ;!   i1_lcdWriteText
  1928                           ;!     i1_writeTxtChk
  1929                           ;!       i1_SetToSendDataToLCD
  1930                           ;!       i1_setCursorPosition
  1931                           ;!         i1_SetToSendDataToLCD
  1932                           ;!         i1_setData
  1933                           ;!         i1_waitLCDBusy
  1934                           ;!           i1_SetToReadDataFromLCD
  1935                           ;!       i1_setData
  1936                           ;!       i1_waitLCDBusy
  1937                           ;!         i1_SetToReadDataFromLCD
  1938                           ;!
  1939                           
  1940                           ;! Address spaces:
  1941                           
  1942                           ;!Name               Size   Autos  Total    Cost      Usage
  1943                           ;!BIGRAM             3F0      0       0       0        0.0%
  1944                           ;!NULL                 0      0       0       0        0.0%
  1945                           ;!CODE                 0      0       0       0        0.0%
  1946                           ;!BITCOMMON            E      0       0       1        0.0%
  1947                           ;!BITSFR0              0      0       0       1        0.0%
  1948                           ;!SFR0                 0      0       0       1        0.0%
  1949                           ;!COMMON               E      E       E       2      100.0%
  1950                           ;!BITSFR1              0      0       0       2        0.0%
  1951                           ;!SFR1                 0      0       0       2        0.0%
  1952                           ;!BITSFR2              0      0       0       3        0.0%
  1953                           ;!SFR2                 0      0       0       3        0.0%
  1954                           ;!STACK                0      0       0       3        0.0%
  1955                           ;!BITBANK0            50      0       0       4        0.0%
  1956                           ;!BITSFR3              0      0       0       4        0.0%
  1957                           ;!SFR3                 0      0       0       4        0.0%
  1958                           ;!BANK0               50     2D      3C       5       75.0%
  1959                           ;!BITSFR4              0      0       0       5        0.0%
  1960                           ;!SFR4                 0      0       0       5        0.0%
  1961                           ;!BITBANK1            50      0       0       6        0.0%
  1962                           ;!BITSFR5              0      0       0       6        0.0%
  1963                           ;!SFR5                 0      0       0       6        0.0%
  1964                           ;!BANK1               50      6      25       7       46.3%
  1965                           ;!BITSFR6              0      0       0       7        0.0%
  1966                           ;!SFR6                 0      0       0       7        0.0%
  1967                           ;!BITBANK2            50      0       0       8        0.0%
  1968                           ;!BITSFR7              0      0       0       8        0.0%
  1969                           ;!SFR7                 0      0       0       8        0.0%
  1970                           ;!BANK2               50      0      32       9       62.5%
  1971                           ;!BITSFR8              0      0       0       9        0.0%
  1972                           ;!SFR8                 0      0       0       9        0.0%
  1973                           ;!BITBANK3            50      0       0      10        0.0%
  1974                           ;!BITSFR9              0      0       0      10        0.0%
  1975                           ;!SFR9                 0      0       0      10        0.0%
  1976                           ;!BANK3               50      0      4B      11       93.8%
  1977                           ;!BITSFR10             0      0       0      11        0.0%
  1978                           ;!SFR10                0      0       0      11        0.0%
  1979                           ;!BITBANK4            50      0       0      12        0.0%
  1980                           ;!BITSFR11             0      0       0      12        0.0%
  1981                           ;!SFR11                0      0       0      12        0.0%
  1982                           ;!BANK4               50     2D      2D      13       56.3%
  1983                           ;!BITSFR12             0      0       0      13        0.0%
  1984                           ;!SFR12                0      0       0      13        0.0%
  1985                           ;!BITBANK5            50      0       0      14        0.0%
  1986                           ;!BITSFR13             0      0       0      14        0.0%
  1987                           ;!SFR13                0      0       0      14        0.0%
  1988                           ;!BANK5               50      0       0      15        0.0%
  1989                           ;!BITSFR14             0      0       0      15        0.0%
  1990                           ;!SFR14                0      0       0      15        0.0%
  1991                           ;!BITBANK6            50      0       0      16        0.0%
  1992                           ;!BITSFR15             0      0       0      16        0.0%
  1993                           ;!SFR15                0      0       0      16        0.0%
  1994                           ;!BANK6               50      0       0      17        0.0%
  1995                           ;!BITSFR16             0      0       0      17        0.0%
  1996                           ;!SFR16                0      0       0      17        0.0%
  1997                           ;!BITBANK7            50      0       0      18        0.0%
  1998                           ;!BITSFR17             0      0       0      18        0.0%
  1999                           ;!SFR17                0      0       0      18        0.0%
  2000                           ;!BANK7               50      0       0      19        0.0%
  2001                           ;!BITSFR18             0      0       0      19        0.0%
  2002                           ;!SFR18                0      0       0      19        0.0%
  2003                           ;!BITSFR19             0      0       0      20        0.0%
  2004                           ;!SFR19                0      0       0      20        0.0%
  2005                           ;!ABS                  0      0     119      20        0.0%
  2006                           ;!BITBANK8            50      0       0      21        0.0%
  2007                           ;!BITSFR20             0      0       0      21        0.0%
  2008                           ;!SFR20                0      0       0      21        0.0%
  2009                           ;!BANK8               50      0       0      22        0.0%
  2010                           ;!BITSFR21             0      0       0      22        0.0%
  2011                           ;!SFR21                0      0       0      22        0.0%
  2012                           ;!BITBANK9            50      0       0      23        0.0%
  2013                           ;!BITSFR22             0      0       0      23        0.0%
  2014                           ;!SFR22                0      0       0      23        0.0%
  2015                           ;!BANK9               50      0       0      24        0.0%
  2016                           ;!BITSFR23             0      0       0      24        0.0%
  2017                           ;!SFR23                0      0       0      24        0.0%
  2018                           ;!BITBANK10           50      0       0      25        0.0%
  2019                           ;!BITSFR24             0      0       0      25        0.0%
  2020                           ;!SFR24                0      0       0      25        0.0%
  2021                           ;!BANK10              50      0       0      26        0.0%
  2022                           ;!BITSFR25             0      0       0      26        0.0%
  2023                           ;!SFR25                0      0       0      26        0.0%
  2024                           ;!BITBANK11           50      0       0      27        0.0%
  2025                           ;!BITSFR26             0      0       0      27        0.0%
  2026                           ;!SFR26                0      0       0      27        0.0%
  2027                           ;!BANK11              50      0       0      28        0.0%
  2028                           ;!BITSFR27             0      0       0      28        0.0%
  2029                           ;!SFR27                0      0       0      28        0.0%
  2030                           ;!BITBANK12           30      0       0      29        0.0%
  2031                           ;!BITSFR28             0      0       0      29        0.0%
  2032                           ;!SFR28                0      0       0      29        0.0%
  2033                           ;!BANK12              30      0       0      30        0.0%
  2034                           ;!BITSFR29             0      0       0      30        0.0%
  2035                           ;!SFR29                0      0       0      30        0.0%
  2036                           ;!BITSFR30             0      0       0      31        0.0%
  2037                           ;!SFR30                0      0       0      31        0.0%
  2038                           ;!DATA                 0      0     119      31        0.0%
  2039                           ;!BITSFR31             0      0       0      32        0.0%
  2040                           ;!SFR31                0      0       0      32        0.0%
  2041                           
  2042                           	global	_main
  2043                           
  2044 ;; *************** function _main *****************
  2045 ;; Defined at:
  2046 ;;		line 202 in file "161518_temp_main.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  wReadout       20    2[BANK4 ] unsigned char [20]
  2051 ;;  wConv           4   22[BANK4 ] unsigned char [4]
  2052 ;;  wCounter        2   40[BANK4 ] int 
  2053 ;;  wDebounceDow    2   38[BANK4 ] unsigned short 
  2054 ;;  wDebounceUp     2   36[BANK4 ] unsigned short 
  2055 ;;  wDebounceEnt    2   34[BANK4 ] unsigned short 
  2056 ;;  wTemperature    2   31[BANK4 ] short 
  2057 ;;  wHumidityPre    2   29[BANK4 ] short 
  2058 ;;  wIterationCo    2   26[BANK4 ] unsigned short 
  2059 ;;  wTemp           2    0[BANK4 ] int 
  2060 ;;  wMenu           1   44[BANK4 ] unsigned char 
  2061 ;;  wDownBottonP    1   43[BANK4 ] unsigned char 
  2062 ;;  wUpBottonPre    1   42[BANK4 ] unsigned char 
  2063 ;;  wEnterBotton    1   33[BANK4 ] unsigned char 
  2064 ;;  wMenuPrev       1   28[BANK4 ] unsigned char 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2069 ;; Tracked objects:
  2070 ;;		On entry : B1F/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  2074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  2075 ;;      Locals:         0       0       0       0       0      45       0       0       0       0       0       0       
       0       0
  2076 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  2077 ;;      Totals:         0       2       0       0       0      45       0       0       0       0       0       0       
       0       0
  2078 ;;Total ram usage:       47 bytes
  2079 ;; Hardware stack levels required when called:   12
  2080 ;; This function calls:
  2081 ;;		_Add_Trace
  2082 ;;		_Debounce
  2083 ;;		_GetTemp
  2084 ;;		_PrintLog
  2085 ;;		_SetToGetTemp
  2086 ;;		_ToggleBitRB5
  2087 ;;		_WakeTemp
  2088 ;;		_clearDisplay
  2089 ;;		_initLCD
  2090 ;;		_lcdWriteText
  2091 ;;		_memset
  2092 ;;		_moveCursorToHome
  2093 ;;		_powerOnLcd
  2094 ;;		_printEM1812
  2095 ;;		_setCursorOff
  2096 ;;		_setCursorPosition
  2097 ;;		_setNotBlinkingCursor
  2098 ;; This function is called by:
  2099 ;;		Startup code after reset
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  2103                           	file	"161518_temp_main.c"
  2104                           	line	202
  2105                           global __pmaintext
  2106                           __pmaintext:	;psect for function _main
  2107  01D3                     psect	maintext
  2108                           	file	"161518_temp_main.c"
  2109                           	line	202
  2110                           	global	__size_of_main
  2111                           	__size_of_main	equ	__end_of_main-_main
  2112  02DE                     	
  2113                           _main:	
  2114  01D3                     ;incstack = 0
  2115                           	opt	stack 4
  2116                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2117                           	line	205
  2118                           	
  2119                           l3850:	
  2120  01D3                     	movlb 4	; select bank4
  2121  01D3  0024               	clrf	(main@wHumidityPrev)^0200h
  2122  01D4  01BD               	clrf	(main@wHumidityPrev+1)^0200h
  2123  01D5  01BE               	line	206
  2124                           	clrf	(main@wTemperaturePrev)^0200h
  2125  01D6  01BF               	clrf	(main@wTemperaturePrev+1)^0200h
  2126  01D7  01C0               	line	207
  2127                           	
  2128                           l3852:	
  2129  01D8                     	movlw	low(_wInterruptText)
  2130  01D8  30A0               	movlb 0	; select bank0
  2131  01D9  0020               	movwf	(memset@dest)
  2132  01DA  00B4               	movlw	high(_wInterruptText)
  2133  01DB  3001               	movwf	(memset@dest+1)
  2134  01DC  00B5               	movlw	0
  2135  01DD  3000               	movwf	(memset@c)
  2136  01DE  00B6               	movwf	(memset@c+1)
  2137  01DF  00B7               	movlw	04Bh
  2138  01E0  304B               	movwf	(memset@n)
  2139  01E1  00B8               	movlw	0
  2140  01E2  3000               	movwf	((memset@n))+1
  2141  01E3  00B9               	fcall	_memset
  2142  01E4  3184  24B1  3181   	line	209
  2143                           	
  2144                           l3854:	
  2145  01E7                     	movlw	(0Fh & ((1<<4)-1))<<3
  2146  01E7  3078               	movlb 1	; select bank1
  2147  01E8  0021               	iorwf	(153)^080h,f	;volatile
  2148  01E9  0499               	line	210
  2149                           	
  2150                           l3856:	
  2151  01EA                     	movlw	(03h & ((1<<2)-1))<<0
  2152  01EA  3003               	iorwf	(153)^080h,f	;volatile
  2153  01EB  0499               	line	211
  2154                           	
  2155                           l3858:	
  2156  01EC                     	bcf	(11),7	;volatile
  2157  01EC  138B               	line	213
  2158                           	
  2159                           l3860:	
  2160  01ED                     	movlb 4	; select bank4
  2161  01ED  0024               	clrf	(main@wUpBottonPressed)^0200h
  2162  01EE  01CA               	line	214
  2163                           	
  2164                           l3862:	
  2165  01EF                     	clrf	(main@wDownBottonPressed)^0200h
  2166  01EF  01CB               	line	215
  2167                           	
  2168                           l3864:	
  2169  01F0                     	clrf	(main@wEnterBottonPressed)^0200h
  2170  01F0  01C1               	line	217
  2171                           	
  2172                           l3866:	
  2173  01F1                     	clrf	(main@wMenu)^0200h
  2174  01F1  01CC               	line	218
  2175                           	
  2176                           l3868:	
  2177  01F2                     	clrf	(main@wMenuPrev)^0200h
  2178  01F2  01BC               	incf	(main@wMenuPrev)^0200h,f
  2179  01F3  0ABC               	line	220
  2180                           	
  2181                           l3870:	
  2182  01F4                     	clrf	(main@wIterationCounter)^0200h
  2183  01F4  01BA               	clrf	(main@wIterationCounter+1)^0200h
  2184  01F5  01BB               	line	221
  2185                           	
  2186                           l3872:	
  2187  01F6                     	clrf	(main@wDebounceEnter)^0200h
  2188  01F6  01C2               	clrf	(main@wDebounceEnter+1)^0200h
  2189  01F7  01C3               	line	222
  2190                           	
  2191                           l3874:	
  2192  01F8                     	clrf	(main@wDebounceUp)^0200h
  2193  01F8  01C4               	clrf	(main@wDebounceUp+1)^0200h
  2194  01F9  01C5               	line	223
  2195                           	
  2196                           l3876:	
  2197  01FA                     	clrf	(main@wDebounceDown)^0200h
  2198  01FA  01C6               	clrf	(main@wDebounceDown+1)^0200h
  2199  01FB  01C7               	line	225
  2200                           	
  2201                           l3878:	
  2202  01FC                     	movlb 0	; select bank0
  2203  01FC  0020               	clrf	(12)	;volatile
  2204  01FD  018C               	line	229
  2205                           	
  2206                           l3880:	
  2207  01FE                     	movlw	((0 & ((1<<2)-1))<<6)|not (((1<<2)-1)<<6)
  2208  01FE  303F               	andwf	(24),f	;volatile
  2209  01FF  0598               	line	230
  2210                           	
  2211                           l3882:	
  2212  0200                     	bcf	(24),3	;volatile
  2213  0200  1198               	line	231
  2214                           	
  2215                           l3884:	
  2216  0201                     	movlw	(03h & ((1<<2)-1))<<4
  2217  0201  3030               	iorwf	(24),f	;volatile
  2218  0202  0498               	line	232
  2219                           	
  2220                           l3886:	
  2221  0203                     	bcf	(24),2	;volatile
  2222  0203  1118               	line	233
  2223                           	
  2224                           l3888:	
  2225  0204                     	bsf	(24),0	;volatile
  2226  0204  1418               	line	234
  2227                           	
  2228                           l3890:	
  2229  0205                     	movlb 1	; select bank1
  2230  0205  0021               	bsf	(145)^080h,0	;volatile
  2231  0206  1411               	line	238
  2232                           	
  2233                           l3892:	
  2234  0207                     	movf	(149)^080h,w	;volatile
  2235  0207  0815               	andlw	not (((1<<3)-1)<<0)
  2236  0208  39F8               	iorlw	(02h & ((1<<3)-1))<<0
  2237  0209  3802               	movwf	(149)^080h	;volatile
  2238  020A  0095               	line	239
  2239                           	
  2240                           l3894:	
  2241  020B                     	bcf	(149)^080h,5	;volatile
  2242  020B  1295               	line	240
  2243                           	
  2244                           l3896:	
  2245  020C                     	bcf	(149)^080h,3	;volatile
  2246  020C  1195               	line	241
  2247                           	
  2248                           l3898:	
  2249  020D                     	bcf	(11),5	;volatile
  2250  020D  128B               	line	245
  2251                           	
  2252                           l3900:	
  2253  020E                     	movlb 0	; select bank0
  2254  020E  0020               	clrf	(13)	;volatile
  2255  020F  018D               	line	246
  2256                           	
  2257                           l3902:	
  2258  0210                     	movlb 3	; select bank3
  2259  0210  0023               	clrf	(397)^0180h	;volatile
  2260  0211  018D               	line	247
  2261                           	
  2262                           l3904:	
  2263  0212                     	movlw	low(0Fh)
  2264  0212  300F               	movlb 1	; select bank1
  2265  0213  0021               	movwf	(141)^080h	;volatile
  2266  0214  008D               	line	248
  2267                           	
  2268                           l3906:	
  2269  0215                     	movlw	low(0Fh)
  2270  0215  300F               	movlb 4	; select bank4
  2271  0216  0024               	movwf	(525)^0200h	;volatile
  2272  0217  008D               	line	249
  2273                           	
  2274                           l3908:	
  2275  0218                     	movlb 1	; select bank1
  2276  0218  0021               	bcf	(149)^080h,7	;volatile
  2277  0219  1395               	line	252
  2278                           	
  2279                           l3910:	
  2280  021A                     	movlw	low(_wI2CTxBuffer)
  2281  021A  30A7               	movlb 0	; select bank0
  2282  021B  0020               	movwf	(memset@dest)
  2283  021C  00B4               	movlw	high(_wI2CTxBuffer)
  2284  021D  3000               	movwf	(memset@dest+1)
  2285  021E  00B5               	movlw	0
  2286  021F  3000               	movwf	(memset@c)
  2287  0220  00B6               	movwf	(memset@c+1)
  2288  0221  00B7               	movlw	014h
  2289  0222  3014               	movwf	(memset@n)
  2290  0223  00B8               	movlw	0
  2291  0224  3000               	movwf	((memset@n))+1
  2292  0225  00B9               	fcall	_memset
  2293  0226  3184  24B1  3181   	line	253
  2294                           	
  2295                           l3912:	
  2296  0229                     	movlb 0	; select bank0
  2297  0229  0020               	clrf	(_wI2CTxBufferSize)
  2298  022A  01D5               	line	254
  2299                           	
  2300                           l3914:	
  2301  022B                     	clrf	(_wI2CTxSendPos)
  2302  022B  01D3               	line	256
  2303                           	
  2304                           l3916:	
  2305  022C                     	movlb 3	; select bank3
  2306  022C  0023               	clrf	(396)^0180h	;volatile
  2307  022D  018C               	line	257
  2308                           	
  2309                           l3918:	
  2310  022E                     	movlb 1	; select bank1
  2311  022E  0021               	clrf	(140)^080h	;volatile
  2312  022F  018C               	line	259
  2313                           	
  2314                           l3920:	
  2315  0230                     	clrf	(142)^080h	;volatile
  2316  0230  018E               	line	260
  2317                           	
  2318                           l3922:	
  2319  0231                     	movlw	low(0FFh)
  2320  0231  30FF               	movwf	(142)^080h	;volatile
  2321  0232  008E               	line	261
  2322                           	
  2323                           l3924:	
  2324  0233                     	movlb 3	; select bank3
  2325  0233  0023               	bcf	(398)^0180h,3	;volatile
  2326  0234  118E               	line	262
  2327                           	
  2328                           l3926:	
  2329  0235                     	bcf	(398)^0180h,4	;volatile
  2330  0235  120E               	line	267
  2331                           	
  2332                           l3928:	
  2333  0236                     	movlb 4	; select bank4
  2334  0236  0024               	movf	(533)^0200h,w	;volatile
  2335  0237  0815               	andlw	not (((1<<4)-1)<<0)
  2336  0238  39F0               	iorlw	(08h & ((1<<4)-1))<<0
  2337  0239  3808               	movwf	(533)^0200h	;volatile
  2338  023A  0095               	line	268
  2339                           	
  2340                           l3930:	
  2341  023B                     	movlw	low(01Fh)
  2342  023B  301F               	movwf	(530)^0200h	;volatile
  2343  023C  0092               	line	269
  2344                           	
  2345                           l3932:	
  2346  023D                     	bsf	(533)^0200h,5	;volatile
  2347  023D  1695               	line	270
  2348                           	
  2349                           l3934:	
  2350  023E                     	bcf	(534)^0200h,7	;volatile
  2351  023E  1396               	line	271
  2352                           	
  2353                           l3936:	
  2354  023F                     	bsf	(534)^0200h,4	;volatile
  2355  023F  1616               	line	272
  2356                           	
  2357                           l3938:	
  2358  0240                     	bsf	(535)^0200h,6	;volatile
  2359  0240  1717               	line	273
  2360                           	
  2361                           l3940:	
  2362  0241                     	bsf	(535)^0200h,5	;volatile
  2363  0241  1697               	line	274
  2364                           	
  2365                           l3942:	
  2366  0242                     	bsf	(535)^0200h,3	;volatile
  2367  0242  1597               	line	275
  2368                           	
  2369                           l3944:	
  2370  0243                     	bcf	(535)^0200h,1	;volatile
  2371  0243  1097               	line	276
  2372                           	
  2373                           l3946:	
  2374  0244                     	bcf	(535)^0200h,0	;volatile
  2375  0244  1017               	line	277
  2376                           	
  2377                           l3948:	
  2378  0245                     	bcf	(532)^0200h,6	;volatile
  2379  0245  1314               	line	279
  2380                           	
  2381                           l3950:	
  2382  0246                     	bsf	(11),6	;volatile
  2383  0246  170B               	line	280
  2384                           	
  2385                           l3952:	
  2386  0247                     	movlb 1	; select bank1
  2387  0247  0021               	bsf	(145)^080h,3	;volatile
  2388  0248  1591               	line	281
  2389                           	
  2390                           l3954:	
  2391  0249                     	bsf	(146)^080h,3	;volatile
  2392  0249  1592               	line	283
  2393                           	
  2394                           l3956:	
  2395  024A                     	bsf	(11),7	;volatile
  2396  024A  178B               	line	286
  2397                           	
  2398                           l3958:	
  2399  024B                     	fcall	_initLCD
  2400  024B  318E  2690  3181   	line	287
  2401                           	
  2402                           l3960:	
  2403  024E                     	fcall	_clearDisplay
  2404  024E  318B  2304  3181   	line	288
  2405                           	
  2406                           l3962:	
  2407  0251                     	opt asmopt_push
  2408                           opt asmopt_off
  2409                           movlw  3
  2410  0251  3003               	movlb 0	; select bank0
  2411  0252  0020               movwf	((??_main+0)+0+1),f
  2412  0253  00CC               movlw	8
  2413  0254  3008               movwf	((??_main+0)+0),f
  2414  0255  00CB               	movlw	119
  2415  0256  3077               u3107:
  2416  0257                     decfsz	wreg
  2417  0257  0B89               	goto	u3107
  2418  0258  2A57               	decfsz	((??_main+0)+0),f
  2419  0259  0BCB               	goto	u3107
  2420  025A  2A57               	decfsz	((??_main+0)+0+1),f
  2421  025B  0BCC               	goto	u3107
  2422  025C  2A57               opt asmopt_pop
  2423                           
  2424                           	line	289
  2425                           	
  2426                           l3964:	
  2427  025D                     	fcall	_powerOnLcd
  2428  025D  318B  233E  3181   	line	290
  2429                           	
  2430                           l3966:	
  2431  0260                     	opt asmopt_push
  2432                           opt asmopt_off
  2433                           movlw  3
  2434  0260  3003               	movlb 0	; select bank0
  2435  0261  0020               movwf	((??_main+0)+0+1),f
  2436  0262  00CC               movlw	8
  2437  0263  3008               movwf	((??_main+0)+0),f
  2438  0264  00CB               	movlw	119
  2439  0265  3077               u3117:
  2440  0266                     decfsz	wreg
  2441  0266  0B89               	goto	u3117
  2442  0267  2A66               	decfsz	((??_main+0)+0),f
  2443  0268  0BCB               	goto	u3117
  2444  0269  2A66               	decfsz	((??_main+0)+0+1),f
  2445  026A  0BCC               	goto	u3117
  2446  026B  2A66               opt asmopt_pop
  2447                           
  2448                           	line	291
  2449                           	
  2450                           l3968:	
  2451  026C                     	fcall	_setCursorOff
  2452  026C  318B  2349  3181   	line	292
  2453                           	
  2454                           l3970:	
  2455  026F                     	opt asmopt_push
  2456                           opt asmopt_off
  2457                           movlw  3
  2458  026F  3003               	movlb 0	; select bank0
  2459  0270  0020               movwf	((??_main+0)+0+1),f
  2460  0271  00CC               movlw	8
  2461  0272  3008               movwf	((??_main+0)+0),f
  2462  0273  00CB               	movlw	119
  2463  0274  3077               u3127:
  2464  0275                     decfsz	wreg
  2465  0275  0B89               	goto	u3127
  2466  0276  2A75               	decfsz	((??_main+0)+0),f
  2467  0277  0BCB               	goto	u3127
  2468  0278  2A75               	decfsz	((??_main+0)+0+1),f
  2469  0279  0BCC               	goto	u3127
  2470  027A  2A75               opt asmopt_pop
  2471                           
  2472                           	line	293
  2473                           	
  2474                           l3972:	
  2475  027B                     	fcall	_moveCursorToHome
  2476  027B  318B  2321  3181   	line	294
  2477                           	
  2478                           l3974:	
  2479  027E                     	opt asmopt_push
  2480                           opt asmopt_off
  2481                           movlw  3
  2482  027E  3003               	movlb 0	; select bank0
  2483  027F  0020               movwf	((??_main+0)+0+1),f
  2484  0280  00CC               movlw	8
  2485  0281  3008               movwf	((??_main+0)+0),f
  2486  0282  00CB               	movlw	119
  2487  0283  3077               u3137:
  2488  0284                     decfsz	wreg
  2489  0284  0B89               	goto	u3137
  2490  0285  2A84               	decfsz	((??_main+0)+0),f
  2491  0286  0BCB               	goto	u3137
  2492  0287  2A84               	decfsz	((??_main+0)+0+1),f
  2493  0288  0BCC               	goto	u3137
  2494  0289  2A84               opt asmopt_pop
  2495                           
  2496                           	line	295
  2497                           	
  2498                           l3976:	
  2499  028A                     	fcall	_setNotBlinkingCursor
  2500  028A  318B  2354  3181   	line	296
  2501                           	
  2502                           l3978:	
  2503  028D                     	opt asmopt_push
  2504                           opt asmopt_off
  2505                           movlw  3
  2506  028D  3003               	movlb 0	; select bank0
  2507  028E  0020               movwf	((??_main+0)+0+1),f
  2508  028F  00CC               movlw	8
  2509  0290  3008               movwf	((??_main+0)+0),f
  2510  0291  00CB               	movlw	119
  2511  0292  3077               u3147:
  2512  0293                     decfsz	wreg
  2513  0293  0B89               	goto	u3147
  2514  0294  2A93               	decfsz	((??_main+0)+0),f
  2515  0295  0BCB               	goto	u3147
  2516  0296  2A93               	decfsz	((??_main+0)+0+1),f
  2517  0297  0BCC               	goto	u3147
  2518  0298  2A93               opt asmopt_pop
  2519                           
  2520                           	line	322
  2521                           	
  2522                           l3980:	
  2523  0299                     	movlb 4	; select bank4
  2524  0299  0024               	clrf	(main@wCounter)^0200h
  2525  029A  01C8               	clrf	(main@wCounter+1)^0200h
  2526  029B  01C9               	line	323
  2527                           	movlb 1	; select bank1
  2528  029C  0021               	movf	(main@F2250+3)^080h,w
  2529  029D  0844               	movlb 4	; select bank4
  2530  029E  0024               	movwf	(main@wConv+3)^0200h
  2531  029F  00B9               	movlb 1	; select bank1
  2532  02A0  0021               	movf	(main@F2250+2)^080h,w
  2533  02A1  0843               	movlb 4	; select bank4
  2534  02A2  0024               	movwf	(main@wConv+2)^0200h
  2535  02A3  00B8               	movlb 1	; select bank1
  2536  02A4  0021               	movf	(main@F2250+1)^080h,w
  2537  02A5  0842               	movlb 4	; select bank4
  2538  02A6  0024               	movwf	(main@wConv+1)^0200h
  2539  02A7  00B7               	movlb 1	; select bank1
  2540  02A8  0021               	movf	(main@F2250)^080h,w
  2541  02A9  0841               	movlb 4	; select bank4
  2542  02AA  0024               	movwf	(main@wConv)^0200h
  2543  02AB  00B6               
  2544                           	line	324
  2545                           	
  2546                           l3982:	
  2547  02AC                     	clrf	(main@wTemp)^0200h
  2548  02AC  01A0               	clrf	(main@wTemp+1)^0200h
  2549  02AD  01A1               	line	327
  2550                           	
  2551                           l3984:	
  2552  02AE                     	fcall	_clearDisplay
  2553  02AE  318B  2304  3181   	line	328
  2554                           	
  2555                           l3986:	
  2556  02B1                     	fcall	_moveCursorToHome
  2557  02B1  318B  2321  3181   	line	329
  2558                           	
  2559                           l3988:	
  2560  02B4                     	opt asmopt_push
  2561                           opt asmopt_off
  2562                           movlw	156
  2563  02B4  309C               	movlb 0	; select bank0
  2564  02B5  0020               movwf	((??_main+0)+0),f
  2565  02B6  00CB               	movlw	215
  2566  02B7  30D7               u3157:
  2567  02B8                     decfsz	wreg
  2568  02B8  0B89               	goto	u3157
  2569  02B9  2AB8               	decfsz	((??_main+0)+0),f
  2570  02BA  0BCB               	goto	u3157
  2571  02BB  2AB8               opt asmopt_pop
  2572                           
  2573                           	goto	l3990
  2574  02BC  2ABD               	line	330
  2575                           	
  2576                           l167:	
  2577  02BD                     	line	333
  2578                           	
  2579                           l3990:	
  2580  02BD                     	movlb 1	; select bank1
  2581  02BD  0021               	movf	(_wHumidity+1)^080h,w
  2582  02BE  0823               	movlb 4	; select bank4
  2583  02BF  0024               	xorwf	(main@wHumidityPrev+1)^0200h,w
  2584  02C0  063E               	skipz
  2585  02C1  1D03               	goto	u2685
  2586  02C2  2AC7               	movlb 1	; select bank1
  2587  02C3  0021               	movf	(_wHumidity)^080h,w
  2588  02C4  0822               	movlb 4	; select bank4
  2589  02C5  0024               	xorwf	(main@wHumidityPrev)^0200h,w
  2590  02C6  063D               u2685:
  2591  02C7                     
  2592                           	skipz
  2593  02C7  1D03               	goto	u2681
  2594  02C8  2ACA               	goto	u2680
  2595  02C9  2ACB               u2681:
  2596  02CA                     	goto	l3994
  2597  02CA  2ADA               u2680:
  2598  02CB                     	
  2599                           l3992:	
  2600  02CB                     	movlb 1	; select bank1
  2601  02CB  0021               	movf	(_wTemperature+1)^080h,w
  2602  02CC  0821               	movlb 4	; select bank4
  2603  02CD  0024               	xorwf	(main@wTemperaturePrev+1)^0200h,w
  2604  02CE  0640               	skipz
  2605  02CF  1D03               	goto	u2695
  2606  02D0  2AD5               	movlb 1	; select bank1
  2607  02D1  0021               	movf	(_wTemperature)^080h,w
  2608  02D2  0820               	movlb 4	; select bank4
  2609  02D3  0024               	xorwf	(main@wTemperaturePrev)^0200h,w
  2610  02D4  063F               u2695:
  2611  02D5                     
  2612                           	skipnz
  2613  02D5  1903               	goto	u2691
  2614  02D6  2AD8               	goto	u2690
  2615  02D7  2AD9               u2691:
  2616  02D8                     	goto	l4012
  2617  02D8  2B47               u2690:
  2618  02D9                     	goto	l3994
  2619  02D9  2ADA               	
  2620                           l170:	
  2621  02DA                     	line	335
  2622                           	
  2623                           l3994:	
  2624  02DA                     	movlb 1	; select bank1
  2625  02DA  0021               	movf	(_wHumidity+1)^080h,w
  2626  02DB  0823               	movlb 4	; select bank4
  2627  02DC  0024               	movwf	(main@wHumidityPrev+1)^0200h
  2628  02DD  00BE               	movlb 1	; select bank1
  2629  02DE  0021               	movf	(_wHumidity)^080h,w
  2630  02DF  0822               	movlb 4	; select bank4
  2631  02E0  0024               	movwf	(main@wHumidityPrev)^0200h
  2632  02E1  00BD               	line	336
  2633                           	movlb 1	; select bank1
  2634  02E2  0021               	movf	(_wTemperature+1)^080h,w
  2635  02E3  0821               	movlb 4	; select bank4
  2636  02E4  0024               	movwf	(main@wTemperaturePrev+1)^0200h
  2637  02E5  00C0               	movlb 1	; select bank1
  2638  02E6  0021               	movf	(_wTemperature)^080h,w
  2639  02E7  0820               	movlb 4	; select bank4
  2640  02E8  0024               	movwf	(main@wTemperaturePrev)^0200h
  2641  02E9  00BF               	line	337
  2642                           	
  2643                           l3996:	
  2644  02EA                     	movlb 0	; select bank0
  2645  02EA  0020               	clrf	(setCursorPosition@iPosition)
  2646  02EB  01B9               	movlw	low(02h)
  2647  02EC  3002               	fcall	_setCursorPosition
  2648  02ED  318F  273E  3181   	line	338
  2649                           	
  2650                           l3998:	
  2651  02F0                     	movlb 4	; select bank4
  2652  02F0  0024               	movf	(main@wHumidityPrev+1)^0200h,w
  2653  02F1  083E               	movlb 0	; select bank0
  2654  02F2  0020               	movwf	(printEM1812@wVariable+1)
  2655  02F3  00BE               	movlb 4	; select bank4
  2656  02F4  0024               	movf	(main@wHumidityPrev)^0200h,w
  2657  02F5  083D               	movlb 0	; select bank0
  2658  02F6  0020               	movwf	(printEM1812@wVariable)
  2659  02F7  00BD               	movlw	(low(main@wReadout|((0x2)<<8)))&0ffh
  2660  02F8  3022               	movwf	(??_main+0)+0
  2661  02F9  00CB               	movf	(??_main+0)+0,w
  2662  02FA  084B               	movwf	(printEM1812@oTextOut)
  2663  02FB  00BF               	fcall	_printEM1812
  2664  02FC  3185  2582  3181   	line	339
  2665                           	
  2666                           l4000:	
  2667  02FF                     	movlw	low(04Bh)
  2668  02FF  304B               	movlb 0	; select bank0
  2669  0300  0020               	movwf	(??_main+0)+0
  2670  0301  00CB               	movf	(??_main+0)+0,w
  2671  0302  084B               	movwf	(Add_Trace@iSizeOfoText)
  2672  0303  00C7               	movlw	low(((STR_1)|8000h))
  2673  0304  3040               	movwf	(Add_Trace@iText)
  2674  0305  00C8               	movlw	high(((STR_1)|8000h))
  2675  0306  3090               	movwf	((Add_Trace@iText))+1
  2676  0307  00C9               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2677  0308  30A0               	fcall	_Add_Trace
  2678  0309  318E  2601  3181   	line	340
  2679                           	
  2680                           l4002:	
  2681  030C                     	movlw	low(04Bh)
  2682  030C  304B               	movlb 0	; select bank0
  2683  030D  0020               	movwf	(??_main+0)+0
  2684  030E  00CB               	movf	(??_main+0)+0,w
  2685  030F  084B               	movwf	(Add_Trace@iSizeOfoText)
  2686  0310  00C7               	movlw	low(main@wReadout)
  2687  0311  3022               	movwf	(Add_Trace@iText)
  2688  0312  00C8               	movlw	high(main@wReadout)
  2689  0313  3002               	movwf	(Add_Trace@iText+1)
  2690  0314  00C9               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2691  0315  30A0               	fcall	_Add_Trace
  2692  0316  318E  2601  3181   	line	341
  2693                           	
  2694                           l4004:	
  2695  0319                     	movlb 4	; select bank4
  2696  0319  0024               	movf	(main@wTemperaturePrev+1)^0200h,w
  2697  031A  0840               	movlb 0	; select bank0
  2698  031B  0020               	movwf	(printEM1812@wVariable+1)
  2699  031C  00BE               	movlb 4	; select bank4
  2700  031D  0024               	movf	(main@wTemperaturePrev)^0200h,w
  2701  031E  083F               	movlb 0	; select bank0
  2702  031F  0020               	movwf	(printEM1812@wVariable)
  2703  0320  00BD               	movlw	(low(main@wReadout|((0x2)<<8)))&0ffh
  2704  0321  3022               	movwf	(??_main+0)+0
  2705  0322  00CB               	movf	(??_main+0)+0,w
  2706  0323  084B               	movwf	(printEM1812@oTextOut)
  2707  0324  00BF               	fcall	_printEM1812
  2708  0325  3185  2582  3181   	line	342
  2709                           	
  2710                           l4006:	
  2711  0328                     	movlw	low(04Bh)
  2712  0328  304B               	movlb 0	; select bank0
  2713  0329  0020               	movwf	(??_main+0)+0
  2714  032A  00CB               	movf	(??_main+0)+0,w
  2715  032B  084B               	movwf	(Add_Trace@iSizeOfoText)
  2716  032C  00C7               	movlw	low(((STR_2)|8000h))
  2717  032D  304C               	movwf	(Add_Trace@iText)
  2718  032E  00C8               	movlw	high(((STR_2)|8000h))
  2719  032F  3090               	movwf	((Add_Trace@iText))+1
  2720  0330  00C9               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2721  0331  30A0               	fcall	_Add_Trace
  2722  0332  318E  2601  3181   	line	343
  2723                           	
  2724                           l4008:	
  2725  0335                     	movlw	low(04Bh)
  2726  0335  304B               	movlb 0	; select bank0
  2727  0336  0020               	movwf	(??_main+0)+0
  2728  0337  00CB               	movf	(??_main+0)+0,w
  2729  0338  084B               	movwf	(Add_Trace@iSizeOfoText)
  2730  0339  00C7               	movlw	low(main@wReadout)
  2731  033A  3022               	movwf	(Add_Trace@iText)
  2732  033B  00C8               	movlw	high(main@wReadout)
  2733  033C  3002               	movwf	(Add_Trace@iText+1)
  2734  033D  00C9               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2735  033E  30A0               	fcall	_Add_Trace
  2736  033F  318E  2601  3181   	line	344
  2737                           	
  2738                           l4010:	
  2739  0342                     	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2740  0342  30A0               	fcall	_PrintLog
  2741  0343  3187  27CC  3181   	goto	l4012
  2742  0346  2B47               	line	345
  2743                           	
  2744                           l168:	
  2745  0347                     	line	347
  2746                           	
  2747                           l4012:	
  2748  0347                     	movlb 4	; select bank4
  2749  0347  0024               	movf	(main@wMenu)^0200h,w
  2750  0348  084C               	xorwf	(main@wMenuPrev)^0200h,w
  2751  0349  063C               	skipnz
  2752  034A  1903               	goto	u2701
  2753  034B  2B4D               	goto	u2700
  2754  034C  2B4E               u2701:
  2755  034D                     	goto	l4094
  2756  034D  2C3E               u2700:
  2757  034E                     	line	349
  2758                           	
  2759                           l4014:	
  2760  034E                     	movf	(main@wMenu)^0200h,w
  2761  034E  084C               	movlb 0	; select bank0
  2762  034F  0020               	movwf	(??_main+0)+0
  2763  0350  00CB               	movf	(??_main+0)+0,w
  2764  0351  084B               	movlb 4	; select bank4
  2765  0352  0024               	movwf	(main@wMenuPrev)^0200h
  2766  0353  00BC               	line	350
  2767                           	goto	l4026
  2768  0354  2B92               	line	352
  2769                           	
  2770                           l173:	
  2771  0355                     	line	353
  2772                           	
  2773                           l4016:	
  2774  0355                     	movlb 0	; select bank0
  2775  0355  0020               	clrf	(setCursorPosition@iPosition)
  2776  0356  01B9               	movlw	low(0)
  2777  0357  3000               	fcall	_setCursorPosition
  2778  0358  318F  273E  3181   	line	354
  2779                           	movlw	low(((STR_3)|8000h))
  2780  035B  3010               	movlb 0	; select bank0
  2781  035C  0020               	movwf	(lcdWriteText@iText)
  2782  035D  00C1               	movlw	high(((STR_3)|8000h))
  2783  035E  3090               	movwf	((lcdWriteText@iText))+1
  2784  035F  00C2               	fcall	_lcdWriteText
  2785  0360  318C  24A1  3181   	line	355
  2786                           	goto	l4094
  2787  0363  2C3E               	line	356
  2788                           	
  2789                           l175:	
  2790  0364                     	line	357
  2791                           	
  2792                           l4018:	
  2793  0364                     	movlb 0	; select bank0
  2794  0364  0020               	clrf	(setCursorPosition@iPosition)
  2795  0365  01B9               	movlw	low(0)
  2796  0366  3000               	fcall	_setCursorPosition
  2797  0367  318F  273E  3181   	line	358
  2798                           	movlw	low(((STR_4)|8000h))
  2799  036A  3030               	movlb 0	; select bank0
  2800  036B  0020               	movwf	(lcdWriteText@iText)
  2801  036C  00C1               	movlw	high(((STR_4)|8000h))
  2802  036D  3090               	movwf	((lcdWriteText@iText))+1
  2803  036E  00C2               	fcall	_lcdWriteText
  2804  036F  318C  24A1  3181   	line	359
  2805                           	goto	l4094
  2806  0372  2C3E               	line	360
  2807                           	
  2808                           l176:	
  2809  0373                     	line	361
  2810                           	
  2811                           l4020:	
  2812  0373                     	movlb 0	; select bank0
  2813  0373  0020               	clrf	(setCursorPosition@iPosition)
  2814  0374  01B9               	movlw	low(0)
  2815  0375  3000               	fcall	_setCursorPosition
  2816  0376  318F  273E  3181   	line	362
  2817                           	movlw	low(((STR_5)|8000h))
  2818  0379  3020               	movlb 0	; select bank0
  2819  037A  0020               	movwf	(lcdWriteText@iText)
  2820  037B  00C1               	movlw	high(((STR_5)|8000h))
  2821  037C  3090               	movwf	((lcdWriteText@iText))+1
  2822  037D  00C2               	fcall	_lcdWriteText
  2823  037E  318C  24A1  3181   	line	363
  2824                           	goto	l4094
  2825  0381  2C3E               	line	364
  2826                           	
  2827                           l177:	
  2828  0382                     	line	365
  2829                           	
  2830                           l4022:	
  2831  0382                     	movlb 0	; select bank0
  2832  0382  0020               	clrf	(setCursorPosition@iPosition)
  2833  0383  01B9               	movlw	low(0)
  2834  0384  3000               	fcall	_setCursorPosition
  2835  0385  318F  273E  3181   	line	366
  2836                           	movlw	low(((STR_6)|8000h))
  2837  0388  3000               	movlb 0	; select bank0
  2838  0389  0020               	movwf	(lcdWriteText@iText)
  2839  038A  00C1               	movlw	high(((STR_6)|8000h))
  2840  038B  3090               	movwf	((lcdWriteText@iText))+1
  2841  038C  00C2               	fcall	_lcdWriteText
  2842  038D  318C  24A1  3181   	line	367
  2843                           	goto	l4094
  2844  0390  2C3E               	line	368
  2845                           	
  2846                           l4024:	
  2847  0391                     	goto	l4094
  2848  0391  2C3E               	
  2849                           l172:	
  2850  0392                     	
  2851                           l4026:	
  2852  0392                     	movlb 4	; select bank4
  2853  0392  0024               	movf	(main@wMenu)^0200h,w
  2854  0393  084C               	movlb 0	; select bank0
  2855  0394  0020               	movwf	(??_main+0)+0
  2856  0395  00CB               	clrf	(??_main+0)+0+1
  2857  0396  01CC               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2858                           ; Switch size 1, requested type "space"
  2859                           ; Number of cases is 1, Range of values is 0 to 0
  2860                           ; switch strategies available:
  2861                           ; Name         Instructions Cycles
  2862                           ; simple_byte            4     3 (average)
  2863                           ; direct_byte            8     6 (fixed)
  2864                           ; jumptable            260     6 (fixed)
  2865                           ;	Chosen strategy is simple_byte
  2866                           
  2867                           	movf 1+(??_main+0)+0,w
  2868  0397  084C               	opt asmopt_push
  2869                           	opt asmopt_off
  2870                           	xorlw	0^0	; case 0
  2871  0398  3A00               	skipnz
  2872  0399  1903               	goto	l4476
  2873  039A  2B9C               	goto	l4022
  2874  039B  2B82               	opt asmopt_pop
  2875                           	
  2876                           l4476:	
  2877  039C                     ; Switch size 1, requested type "space"
  2878                           ; Number of cases is 3, Range of values is 0 to 2
  2879                           ; switch strategies available:
  2880                           ; Name         Instructions Cycles
  2881                           ; simple_byte           10     6 (average)
  2882                           ; direct_byte           12     6 (fixed)
  2883                           ; jumptable            260     6 (fixed)
  2884                           ;	Chosen strategy is simple_byte
  2885                           
  2886                           	movf 0+(??_main+0)+0,w
  2887  039C  084B               	opt asmopt_push
  2888                           	opt asmopt_off
  2889                           	xorlw	0^0	; case 0
  2890  039D  3A00               	skipnz
  2891  039E  1903               	goto	l4016
  2892  039F  2B55               	xorlw	1^0	; case 1
  2893  03A0  3A01               	skipnz
  2894  03A1  1903               	goto	l4018
  2895  03A2  2B64               	xorlw	2^1	; case 2
  2896  03A3  3A03               	skipnz
  2897  03A4  1903               	goto	l4020
  2898  03A5  2B73               	goto	l4022
  2899  03A6  2B82               	opt asmopt_pop
  2900                           
  2901                           	
  2902                           l174:	
  2903  03A7                     	goto	l4094
  2904  03A7  2C3E               	line	369
  2905                           	
  2906                           l171:	
  2907  03A8                     	line	371
  2908                           	goto	l4094
  2909  03A8  2C3E               	line	373
  2910                           	
  2911                           l179:	
  2912  03A9                     	line	374
  2913                           	
  2914                           l4028:	
  2915  03A9                     	fcall	_WakeTemp
  2916  03A9  318B  235F  3181   	line	375
  2917                           	
  2918                           l4030:	
  2919  03AC                     	fcall	_ToggleBitRB5
  2920  03AC  318B  2329  3181   	line	376
  2921                           	
  2922                           l4032:	
  2923  03AF                     	movlw	low(01h)
  2924  03AF  3001               	movlb 0	; select bank0
  2925  03B0  0020               	movwf	(??_main+0)+0
  2926  03B1  00CB               	movf	(??_main+0)+0,w
  2927  03B2  084B               	movlb 1	; select bank1
  2928  03B3  0021               	addwf	(_wTempState)^080h,f
  2929  03B4  07A4               	line	377
  2930                           	
  2931                           l4034:	
  2932  03B5                     	bcf	(11),5	;volatile
  2933  03B5  128B               	line	378
  2934                           	
  2935                           l4036:	
  2936  03B6                     	movlb 0	; select bank0
  2937  03B6  0020               	clrf	(21)	;volatile
  2938  03B7  0195               	line	379
  2939                           	
  2940                           l4038:	
  2941  03B8                     	movlb 1	; select bank1
  2942  03B8  0021               	clrf	(_wTimer0Counter)^080h
  2943  03B9  01A5               	line	380
  2944                           	
  2945                           l4040:	
  2946  03BA                     	bsf	(11),5	;volatile
  2947  03BA  168B               	line	381
  2948                           	goto	l4096
  2949  03BB  2C52               	line	382
  2950                           	
  2951                           l181:	
  2952  03BC                     	line	383
  2953                           	
  2954                           l4042:	
  2955  03BC                     		movlw	2
  2956  03BC  3002               	movlb 1	; select bank1
  2957  03BD  0021               	xorwf	((_wTimer0Counter)^080h),w
  2958  03BE  0625               	btfss	status,2
  2959  03BF  1D03               	goto	u2711
  2960  03C0  2BC2               	goto	u2710
  2961  03C1  2BC3               u2711:
  2962  03C2                     	goto	l4096
  2963  03C2  2C52               u2710:
  2964  03C3                     	line	385
  2965                           	
  2966                           l4044:	
  2967  03C3                     	movlw	low(01h)
  2968  03C3  3001               	movlb 0	; select bank0
  2969  03C4  0020               	movwf	(??_main+0)+0
  2970  03C5  00CB               	movf	(??_main+0)+0,w
  2971  03C6  084B               	movlb 1	; select bank1
  2972  03C7  0021               	addwf	(_wTempState)^080h,f
  2973  03C8  07A4               	line	386
  2974                           	
  2975                           l4046:	
  2976  03C9                     	bcf	(11),5	;volatile
  2977  03C9  128B               	goto	l4096
  2978  03CA  2C52               	line	387
  2979                           	
  2980                           l182:	
  2981  03CB                     	line	388
  2982                           	goto	l4096
  2983  03CB  2C52               	line	389
  2984                           	
  2985                           l183:	
  2986  03CC                     	line	390
  2987                           	
  2988                           l4048:	
  2989  03CC                     		movlw	3
  2990  03CC  3003               	movlb 1	; select bank1
  2991  03CD  0021               	xorwf	((_wI2CCommandState)^080h),w
  2992  03CE  0626               	btfss	status,2
  2993  03CF  1D03               	goto	u2721
  2994  03D0  2BD2               	goto	u2720
  2995  03D1  2BD3               u2721:
  2996  03D2                     	goto	l4052
  2997  03D2  2BD5               u2720:
  2998  03D3                     	line	392
  2999                           	
  3000                           l4050:	
  3001  03D3                     	clrf	(_wTempState)^080h
  3002  03D3  01A4               	line	393
  3003                           	goto	l4096
  3004  03D4  2C52               	line	394
  3005                           	
  3006                           l184:	
  3007  03D5                     	
  3008                           l4052:	
  3009  03D5                     		movlw	2
  3010  03D5  3002               	xorwf	((_wI2CCommandState)^080h),w
  3011  03D6  0626               	btfss	status,2
  3012  03D7  1D03               	goto	u2731
  3013  03D8  2BDA               	goto	u2730
  3014  03D9  2BDB               u2731:
  3015  03DA                     	goto	l4096
  3016  03DA  2C52               u2730:
  3017  03DB                     	line	396
  3018                           	
  3019                           l4054:	
  3020  03DB                     	fcall	_ToggleBitRB5
  3021  03DB  318B  2329  3181   	line	397
  3022                           	
  3023                           l4056:	
  3024  03DE                     	fcall	_SetToGetTemp
  3025  03DE  318C  244E  3181   	line	398
  3026                           	
  3027                           l4058:	
  3028  03E1                     	fcall	_ToggleBitRB5
  3029  03E1  318B  2329  3181   	line	399
  3030                           	
  3031                           l4060:	
  3032  03E4                     	movlw	low(01h)
  3033  03E4  3001               	movlb 0	; select bank0
  3034  03E5  0020               	movwf	(??_main+0)+0
  3035  03E6  00CB               	movf	(??_main+0)+0,w
  3036  03E7  084B               	movlb 1	; select bank1
  3037  03E8  0021               	addwf	(_wTempState)^080h,f
  3038  03E9  07A4               	line	400
  3039                           	
  3040                           l4062:	
  3041  03EA                     	bcf	(11),5	;volatile
  3042  03EA  128B               	line	401
  3043                           	
  3044                           l4064:	
  3045  03EB                     	movlb 0	; select bank0
  3046  03EB  0020               	clrf	(21)	;volatile
  3047  03EC  0195               	line	402
  3048                           	
  3049                           l4066:	
  3050  03ED                     	movlb 1	; select bank1
  3051  03ED  0021               	clrf	(_wTimer0Counter)^080h
  3052  03EE  01A5               	line	403
  3053                           	
  3054                           l4068:	
  3055  03EF                     	bsf	(11),5	;volatile
  3056  03EF  168B               	goto	l4096
  3057  03F0  2C52               	line	404
  3058                           	
  3059                           l186:	
  3060  03F1                     	goto	l4096
  3061  03F1  2C52               	
  3062                           l185:	
  3063  03F2                     	line	405
  3064                           	goto	l4096
  3065  03F2  2C52               	line	406
  3066                           	
  3067                           l187:	
  3068  03F3                     	line	407
  3069                           	
  3070                           l4070:	
  3071  03F3                     		movlw	3
  3072  03F3  3003               	movlb 1	; select bank1
  3073  03F4  0021               	xorwf	((_wTimer0Counter)^080h),w
  3074  03F5  0625               	btfss	status,2
  3075  03F6  1D03               	goto	u2741
  3076  03F7  2BF9               	goto	u2740
  3077  03F8  2BFA               u2741:
  3078  03F9                     	goto	l4096
  3079  03F9  2C52               u2740:
  3080  03FA                     	line	409
  3081                           	
  3082                           l4072:	
  3083  03FA                     	movlw	low(01h)
  3084  03FA  3001               	movlb 0	; select bank0
  3085  03FB  0020               	movwf	(??_main+0)+0
  3086  03FC  00CB               	movf	(??_main+0)+0,w
  3087  03FD  084B               	movlb 1	; select bank1
  3088  03FE  0021               	addwf	(_wTempState)^080h,f
  3089  03FF  07A4               	line	410
  3090                           	
  3091                           l4074:	
  3092  0400                     	bcf	(11),5	;volatile
  3093  0400  128B               	goto	l4096
  3094  0401  2C52               	line	411
  3095                           	
  3096                           l188:	
  3097  0402                     	line	412
  3098                           	goto	l4096
  3099  0402  2C52               	line	413
  3100                           	
  3101                           l189:	
  3102  0403                     	line	414
  3103                           	
  3104                           l4076:	
  3105  0403                     	fcall	_ToggleBitRB5
  3106  0403  318B  2329  3181   	line	415
  3107                           	
  3108                           l4078:	
  3109  0406                     	fcall	_GetTemp
  3110  0406  318C  2477  3181   	line	416
  3111                           	
  3112                           l4080:	
  3113  0409                     	movlw	low(01h)
  3114  0409  3001               	movlb 0	; select bank0
  3115  040A  0020               	movwf	(??_main+0)+0
  3116  040B  00CB               	movf	(??_main+0)+0,w
  3117  040C  084B               	movlb 1	; select bank1
  3118  040D  0021               	addwf	(_wTempState)^080h,f
  3119  040E  07A4               	line	417
  3120                           	goto	l4096
  3121  040F  2C52               	line	418
  3122                           	
  3123                           l190:	
  3124  0410                     	line	419
  3125                           	
  3126                           l4082:	
  3127  0410                     	movlb 4	; select bank4
  3128  0410  0024               	movf	(main@wCounter)^0200h,w
  3129  0411  0848               	addlw	02h
  3130  0412  3E02               	movwf	(main@wCounter)^0200h
  3131  0413  00C8               	movlw	0
  3132  0414  3000               	addwfc	(main@wCounter+1)^0200h,w
  3133  0415  3D49               	movwf	1+(main@wCounter)^0200h
  3134  0416  00C9               	line	420
  3135                           		movlw	4
  3136  0417  3004               	xorwf	((main@wCounter)^0200h),w
  3137  0418  0648               iorwf	((main@wCounter+1)^0200h),w
  3138  0419  0449               	btfss	status,2
  3139  041A  1D03               	goto	u2751
  3140  041B  2C1D               	goto	u2750
  3141  041C  2C1E               u2751:
  3142  041D                     	goto	l4086
  3143  041D  2C21               u2750:
  3144  041E                     	line	422
  3145                           	
  3146                           l4084:	
  3147  041E                     	clrf	(main@wCounter)^0200h
  3148  041E  01C8               	clrf	(main@wCounter+1)^0200h
  3149  041F  01C9               	goto	l4086
  3150  0420  2C21               	line	423
  3151                           	
  3152                           l191:	
  3153  0421                     	line	424
  3154                           	
  3155                           l4086:	
  3156  0421                     	movlw	low(013h)
  3157  0421  3013               	movlb 0	; select bank0
  3158  0422  0020               	movwf	(??_main+0)+0
  3159  0423  00CB               	movf	(??_main+0)+0,w
  3160  0424  084B               	movwf	(setCursorPosition@iPosition)
  3161  0425  00B9               	movlw	low(03h)
  3162  0426  3003               	fcall	_setCursorPosition
  3163  0427  318F  273E  3181   	line	425
  3164                           	
  3165                           l4088:	
  3166  042A                     	movlb 4	; select bank4
  3167  042A  0024               	movf	(main@wCounter)^0200h,w
  3168  042B  0848               	addlw	low(main@wConv|((0x2)<<8))&0ffh
  3169  042C  3E36               	movlb 0	; select bank0
  3170  042D  0020               	movwf	(lcdWriteText@iText)
  3171  042E  00C1               	movlw	0x2
  3172  042F  3002               
  3173                           	movwf	(lcdWriteText@iText+1)
  3174  0430  00C2               	fcall	_lcdWriteText
  3175  0431  318C  24A1  3181   	line	426
  3176                           	
  3177                           l4090:	
  3178  0434                     	movlw	low(01h)
  3179  0434  3001               	movlb 0	; select bank0
  3180  0435  0020               	movwf	(??_main+0)+0
  3181  0436  00CB               	movf	(??_main+0)+0,w
  3182  0437  084B               	movlb 1	; select bank1
  3183  0438  0021               	addwf	(_wTempState)^080h,f
  3184  0439  07A4               	line	427
  3185                           	goto	l4096
  3186  043A  2C52               	line	428
  3187                           	
  3188                           l192:	
  3189  043B                     	line	429
  3190                           	goto	l4096
  3191  043B  2C52               	line	430
  3192                           	
  3193                           l193:	
  3194  043C                     	line	431
  3195                           	goto	l4096
  3196  043C  2C52               	line	432
  3197                           	
  3198                           l4092:	
  3199  043D                     	goto	l4096
  3200  043D  2C52               	
  3201                           l178:	
  3202  043E                     	
  3203                           l4094:	
  3204  043E                     	movlb 1	; select bank1
  3205  043E  0021               	movf	(_wTempState)^080h,w
  3206  043F  0824               	movlb 0	; select bank0
  3207  0440  0020               	movwf	(??_main+0)+0
  3208  0441  00CB               	clrf	(??_main+0)+0+1
  3209  0442  01CC               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3210                           ; Switch size 1, requested type "space"
  3211                           ; Number of cases is 1, Range of values is 0 to 0
  3212                           ; switch strategies available:
  3213                           ; Name         Instructions Cycles
  3214                           ; simple_byte            4     3 (average)
  3215                           ; direct_byte            8     6 (fixed)
  3216                           ; jumptable            260     6 (fixed)
  3217                           ;	Chosen strategy is simple_byte
  3218                           
  3219                           	movf 1+(??_main+0)+0,w
  3220  0443  084C               	opt asmopt_push
  3221                           	opt asmopt_off
  3222                           	xorlw	0^0	; case 0
  3223  0444  3A00               	skipnz
  3224  0445  1903               	goto	l4478
  3225  0446  2C48               	goto	l4096
  3226  0447  2C52               	opt asmopt_pop
  3227                           	
  3228                           l4478:	
  3229  0448                     ; Switch size 1, requested type "space"
  3230                           ; Number of cases is 7, Range of values is 0 to 6
  3231                           ; switch strategies available:
  3232                           ; Name         Instructions Cycles
  3233                           ; direct_byte           20     6 (fixed)
  3234                           ; simple_byte           22    12 (average)
  3235                           ; jumptable            260     6 (fixed)
  3236                           ;	Chosen strategy is direct_byte
  3237                           
  3238                           	movf 0+(??_main+0)+0,w
  3239  0448  084B               	movwf fsr0l
  3240  0449  0084               	movlw	7
  3241  044A  3007               	subwf	fsr0l,w
  3242  044B  0204               skipnc
  3243  044C  1803               goto l4096
  3244  044D  2C52               movlp high(S4480)
  3245  044E  3188               	lslf fsr0l,w
  3246  044F  3504               	addlw low(S4480)
  3247  0450  3E00               	movwf pc
  3248  0451  0082               psect	swtext1,local,class=CONST,delta=2
  3249                           global __pswtext1
  3250                           __pswtext1:
  3251  0800                     S4480:
  3252  0800                     	ljmp	l4028
  3253  0800  3183  2BA9         	ljmp	l4042
  3254  0802  3183  2BBC         	ljmp	l4048
  3255  0804  3183  2BCC         	ljmp	l4070
  3256  0806  3183  2BF3         	ljmp	l4076
  3257  0808  3184  2C03         	ljmp	l4082
  3258  080A  3184  2C10         	ljmp	l4096
  3259  080C  3184  2C52         psect	maintext
  3260                           
  3261                           	
  3262                           l180:	
  3263  0452                     	line	454
  3264                           	
  3265                           l4096:	
  3266  0452                     	movlw	01h
  3267  0452  3001               	movlb 4	; select bank4
  3268  0453  0024               	addwf	(main@wIterationCounter)^0200h,f
  3269  0454  07BA               	movlw	0
  3270  0455  3000               	addwfc	(main@wIterationCounter+1)^0200h,f
  3271  0456  3DBB               	line	457
  3272                           	
  3273                           l4098:	
  3274  0457                     	movlw	(low(main@wDebounceEnter|((0x2)<<8)))&0ffh
  3275  0457  3042               	movlb 0	; select bank0
  3276  0458  0020               	movwf	(??_main+0)+0
  3277  0459  00CB               	movf	(??_main+0)+0,w
  3278  045A  084B               	movwf	(Debounce@ioTimer)
  3279  045B  00B4               	movlw	(low(main@wEnterBottonPressed|((0x2)<<8)))&0ffh
  3280  045C  3041               	movwf	(??_main+1)+0
  3281  045D  00CC               	movf	(??_main+1)+0,w
  3282  045E  084C               	movwf	(Debounce@swPressed)
  3283  045F  00B5               	movf	(13),w	;volatile
  3284  0460  080D               	andlw	(1<<1)-1
  3285  0461  3901               	fcall	_Debounce
  3286  0462  318E  2644  3181   	line	458
  3287                           	
  3288                           l4100:	
  3289  0465                     	movlw	(low(main@wDebounceUp|((0x2)<<8)))&0ffh
  3290  0465  3044               	movlb 0	; select bank0
  3291  0466  0020               	movwf	(??_main+0)+0
  3292  0467  00CB               	movf	(??_main+0)+0,w
  3293  0468  084B               	movwf	(Debounce@ioTimer)
  3294  0469  00B4               	movlw	(low(main@wUpBottonPressed|((0x2)<<8)))&0ffh
  3295  046A  304A               	movwf	(??_main+1)+0
  3296  046B  00CC               	movf	(??_main+1)+0,w
  3297  046C  084C               	movwf	(Debounce@swPressed)
  3298  046D  00B5               	rrf	(13),w	;volatile
  3299  046E  0C0D               	andlw	(1<<1)-1
  3300  046F  3901               	fcall	_Debounce
  3301  0470  318E  2644  3181   	line	459
  3302                           	
  3303                           l4102:	
  3304  0473                     	movlw	(low(main@wDebounceDown|((0x2)<<8)))&0ffh
  3305  0473  3046               	movlb 0	; select bank0
  3306  0474  0020               	movwf	(??_main+0)+0
  3307  0475  00CB               	movf	(??_main+0)+0,w
  3308  0476  084B               	movwf	(Debounce@ioTimer)
  3309  0477  00B4               	movlw	(low(main@wDownBottonPressed|((0x2)<<8)))&0ffh
  3310  0478  304B               	movwf	(??_main+1)+0
  3311  0479  00CC               	movf	(??_main+1)+0,w
  3312  047A  084C               	movwf	(Debounce@swPressed)
  3313  047B  00B5               	rrf	(13),w	;volatile
  3314  047C  0C0D               	rrf	wreg,f
  3315  047D  0C89               	andlw	(1<<1)-1
  3316  047E  3901               	fcall	_Debounce
  3317  047F  318E  2644  3181   	line	462
  3318                           	
  3319                           l4104:	
  3320  0482                     	movlb 4	; select bank4
  3321  0482  0024               		decf	((main@wUpBottonPressed)^0200h),w
  3322  0483  034A               	btfss	status,2
  3323  0484  1D03               	goto	u2761
  3324  0485  2C87               	goto	u2760
  3325  0486  2C88               u2761:
  3326  0487                     	goto	l4110
  3327  0487  2C90               u2760:
  3328  0488                     	line	464
  3329                           	
  3330                           l4106:	
  3331  0488                     	clrf	(main@wUpBottonPressed)^0200h
  3332  0488  01CA               	line	465
  3333                           	
  3334                           l4108:	
  3335  0489                     	movlw	low(01h)
  3336  0489  3001               	movlb 0	; select bank0
  3337  048A  0020               	movwf	(??_main+0)+0
  3338  048B  00CB               	movf	(??_main+0)+0,w
  3339  048C  084B               	movlb 4	; select bank4
  3340  048D  0024               	addwf	(main@wMenu)^0200h,f
  3341  048E  07CC               	goto	l4110
  3342  048F  2C90               	line	466
  3343                           	
  3344                           l194:	
  3345  0490                     	line	467
  3346                           	
  3347                           l4110:	
  3348  0490                     		decf	((main@wDownBottonPressed)^0200h),w
  3349  0490  034B               	btfss	status,2
  3350  0491  1D03               	goto	u2771
  3351  0492  2C94               	goto	u2770
  3352  0493  2C95               u2771:
  3353  0494                     	goto	l4116
  3354  0494  2C99               u2770:
  3355  0495                     	line	469
  3356                           	
  3357                           l4112:	
  3358  0495                     	clrf	(main@wDownBottonPressed)^0200h
  3359  0495  01CB               	line	470
  3360                           	
  3361                           l4114:	
  3362  0496                     	movlw	01h
  3363  0496  3001               	subwf	(main@wMenu)^0200h,f
  3364  0497  02CC               	goto	l4116
  3365  0498  2C99               	line	471
  3366                           	
  3367                           l195:	
  3368  0499                     	line	473
  3369                           	
  3370                           l4116:	
  3371  0499                     		incf	((main@wMenu)^0200h),w
  3372  0499  0A4C               	btfss	status,2
  3373  049A  1D03               	goto	u2781
  3374  049B  2C9D               	goto	u2780
  3375  049C  2C9E               u2781:
  3376  049D                     	goto	l4120
  3377  049D  2CA5               u2780:
  3378  049E                     	line	475
  3379                           	
  3380                           l4118:	
  3381  049E                     	movlw	low(02h)
  3382  049E  3002               	movlb 0	; select bank0
  3383  049F  0020               	movwf	(??_main+0)+0
  3384  04A0  00CB               	movf	(??_main+0)+0,w
  3385  04A1  084B               	movlb 4	; select bank4
  3386  04A2  0024               	movwf	(main@wMenu)^0200h
  3387  04A3  00CC               	goto	l4120
  3388  04A4  2CA5               	line	476
  3389                           	
  3390                           l196:	
  3391  04A5                     	line	477
  3392                           	
  3393                           l4120:	
  3394  04A5                     		movlw	3
  3395  04A5  3003               	xorwf	((main@wMenu)^0200h),w
  3396  04A6  064C               	btfss	status,2
  3397  04A7  1D03               	goto	u2791
  3398  04A8  2CAA               	goto	u2790
  3399  04A9  2CAB               u2791:
  3400  04AA                     	goto	l3990
  3401  04AA  2ABD               u2790:
  3402  04AB                     	line	479
  3403                           	
  3404                           l4122:	
  3405  04AB                     	clrf	(main@wMenu)^0200h
  3406  04AB  01CC               	goto	l3990
  3407  04AC  2ABD               	line	480
  3408                           	
  3409                           l197:	
  3410  04AD                     	goto	l3990
  3411  04AD  2ABD               	line	483
  3412                           	
  3413                           l198:	
  3414  04AE                     	goto	l3990
  3415  04AE  2ABD               	
  3416                           l199:	
  3417  04AF                     	line	485
  3418                           	
  3419                           l200:	
  3420  04AF                     	global	start
  3421                           	ljmp	start
  3422  04AF  3181  299C         	opt stack 0
  3423                           GLOBAL	__end_of_main
  3424                           	__end_of_main:
  3425  04B1                     	signat	_main,89
  3426                           	global	_setNotBlinkingCursor
  3427                           
  3428 ;; *************** function _setNotBlinkingCursor *****************
  3429 ;; Defined at:
  3430 ;;		line 198 in file "LCD_hd44780u_qy_2004a.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0, pclath, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3446 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3447 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3448 ;;Total ram usage:        1 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    9
  3451 ;; This function calls:
  3452 ;;		_writeInsChk
  3453 ;; This function is called by:
  3454 ;;		_main
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  3458                           	file	"LCD_hd44780u_qy_2004a.c"
  3459                           	line	198
  3460                           global __ptext1
  3461                           __ptext1:	;psect for function _setNotBlinkingCursor
  3462  0B54                     psect	text1
  3463                           	file	"LCD_hd44780u_qy_2004a.c"
  3464                           	line	198
  3465                           	global	__size_of_setNotBlinkingCursor
  3466                           	__size_of_setNotBlinkingCursor	equ	__end_of_setNotBlinkingCursor-_setNotBlinkingCursor

  3467  000B                     	
  3468                           _setNotBlinkingCursor:	
  3469  0B54                     ;incstack = 0
  3470                           	opt	stack 6
  3471                           ; Regs used in _setNotBlinkingCursor: [wreg+status,2+status,0+pclath+cstack]
  3472                           	line	200
  3473                           	
  3474                           l3834:	
  3475  0B54                     ;LCD_hd44780u_qy_2004a.c: 200:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFE;
  3476                           	movlb 0	; select bank0
  3477  0B54  0020               	movf	(_mDisplayOnOffReg),w
  3478  0B55  085B               	andlw	0FEh
  3479  0B56  39FE               	movwf	(??_setNotBlinkingCursor+0)+0
  3480  0B57  00BA               	movf	(??_setNotBlinkingCursor+0)+0,w
  3481  0B58  083A               	movwf	(_mDisplayOnOffReg)
  3482  0B59  00DB               	line	201
  3483                           	
  3484                           l3836:	
  3485  0B5A                     ;LCD_hd44780u_qy_2004a.c: 201:   writeInsChk(mDisplayOnOffReg);
  3486                           	movf	(_mDisplayOnOffReg),w
  3487  0B5A  085B               	fcall	_writeInsChk
  3488  0B5B  318B  2333  318B   	line	202
  3489                           	
  3490                           l342:	
  3491  0B5E                     	return
  3492  0B5E  0008               	opt stack 0
  3493                           GLOBAL	__end_of_setNotBlinkingCursor
  3494                           	__end_of_setNotBlinkingCursor:
  3495  0B5F                     	signat	_setNotBlinkingCursor,89
  3496                           	global	_setCursorOff
  3497                           
  3498 ;; *************** function _setCursorOff *****************
  3499 ;; Defined at:
  3500 ;;		line 203 in file "LCD_hd44780u_qy_2004a.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;		None
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;		None
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  1    wreg      void 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0, pclath, cstack
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3516 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3517 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3518 ;;Total ram usage:        1 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:    9
  3521 ;; This function calls:
  3522 ;;		_writeInsChk
  3523 ;; This function is called by:
  3524 ;;		_main
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  3528                           	line	203
  3529                           global __ptext2
  3530                           __ptext2:	;psect for function _setCursorOff
  3531  0B49                     psect	text2
  3532                           	file	"LCD_hd44780u_qy_2004a.c"
  3533                           	line	203
  3534                           	global	__size_of_setCursorOff
  3535                           	__size_of_setCursorOff	equ	__end_of_setCursorOff-_setCursorOff
  3536  000B                     	
  3537                           _setCursorOff:	
  3538  0B49                     ;incstack = 0
  3539                           	opt	stack 6
  3540                           ; Regs used in _setCursorOff: [wreg+status,2+status,0+pclath+cstack]
  3541                           	line	205
  3542                           	
  3543                           l3826:	
  3544  0B49                     ;LCD_hd44780u_qy_2004a.c: 205:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFD;
  3545                           	movlb 0	; select bank0
  3546  0B49  0020               	movf	(_mDisplayOnOffReg),w
  3547  0B4A  085B               	andlw	0FDh
  3548  0B4B  39FD               	movwf	(??_setCursorOff+0)+0
  3549  0B4C  00BA               	movf	(??_setCursorOff+0)+0,w
  3550  0B4D  083A               	movwf	(_mDisplayOnOffReg)
  3551  0B4E  00DB               	line	206
  3552                           	
  3553                           l3828:	
  3554  0B4F                     ;LCD_hd44780u_qy_2004a.c: 206:   writeInsChk(mDisplayOnOffReg);
  3555                           	movf	(_mDisplayOnOffReg),w
  3556  0B4F  085B               	fcall	_writeInsChk
  3557  0B50  318B  2333  318B   	line	207
  3558                           	
  3559                           l345:	
  3560  0B53                     	return
  3561  0B53  0008               	opt stack 0
  3562                           GLOBAL	__end_of_setCursorOff
  3563                           	__end_of_setCursorOff:
  3564  0B54                     	signat	_setCursorOff,89
  3565                           	global	_printEM1812
  3566                           
  3567 ;; *************** function _printEM1812 *****************
  3568 ;; Defined at:
  3569 ;;		line 129 in file "161518_temp_main.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  wVariable       2   29[BANK0 ] short 
  3572 ;;  oTextOut        1   31[BANK0 ] PTR unsigned char 
  3573 ;;		 -> main@wReadout(20), 
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;  wDecimal        1   36[BANK0 ] unsigned char 
  3576 ;;  wUnity          1   35[BANK0 ] unsigned char 
  3577 ;;  wTen            1   34[BANK0 ] unsigned char 
  3578 ;;  wIsNegative     1   33[BANK0 ] unsigned char 
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3588 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  3589 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  3590 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3591 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
  3592 ;;Total ram usage:        8 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:    7
  3595 ;; This function calls:
  3596 ;;		___awdiv
  3597 ;;		___awmod
  3598 ;; This function is called by:
  3599 ;;		_main
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3603                           	file	"161518_temp_main.c"
  3604                           	line	129
  3605                           global __ptext3
  3606                           __ptext3:	;psect for function _printEM1812
  3607  0582                     psect	text3
  3608                           	file	"161518_temp_main.c"
  3609                           	line	129
  3610                           	global	__size_of_printEM1812
  3611                           	__size_of_printEM1812	equ	__end_of_printEM1812-_printEM1812
  3612  00B9                     	
  3613                           _printEM1812:	
  3614  0582                     ;incstack = 0
  3615                           	opt	stack 8
  3616                           ; Regs used in _printEM1812: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3617                           	line	134
  3618                           	
  3619                           l3752:	
  3620  0582                     	movlb 0	; select bank0
  3621  0582  0020               	clrf	(printEM1812@wIsNegative)
  3622  0583  01C1               	line	136
  3623                           	
  3624                           l3754:	
  3625  0584                     	btfss	(printEM1812@wVariable+1),7
  3626  0584  1FBE               	goto	u2611
  3627  0585  2D87               	goto	u2610
  3628  0586  2D88               u2611:
  3629  0587                     	goto	l3760
  3630  0587  2D90               u2610:
  3631  0588                     	line	138
  3632                           	
  3633                           l3756:	
  3634  0588                     	clrf	(printEM1812@wIsNegative)
  3635  0588  01C1               	incf	(printEM1812@wIsNegative),f
  3636  0589  0AC1               	line	139
  3637                           	
  3638                           l3758:	
  3639  058A                     	comf	(printEM1812@wVariable),f
  3640  058A  09BD               	comf	(printEM1812@wVariable+1),f
  3641  058B  09BE               	incf	(printEM1812@wVariable),f
  3642  058C  0ABD               	skipnz
  3643  058D  1903               	incf	(printEM1812@wVariable+1),f
  3644  058E  0ABE               	goto	l3760
  3645  058F  2D90               	line	140
  3646                           	
  3647                           l138:	
  3648  0590                     	line	142
  3649                           	
  3650                           l3760:	
  3651  0590                     	movlw	064h
  3652  0590  3064               	movwf	(___awdiv@divisor)
  3653  0591  00B4               	movlw	0
  3654  0592  3000               	movwf	((___awdiv@divisor))+1
  3655  0593  00B5               	movf	(printEM1812@wVariable+1),w
  3656  0594  083E               	movwf	(___awdiv@dividend+1)
  3657  0595  00B7               	movf	(printEM1812@wVariable),w
  3658  0596  083D               	movwf	(___awdiv@dividend)
  3659  0597  00B6               	fcall	___awdiv
  3660  0598  3187  2762  3185   	movlb 0	; select bank0
  3661  059B  0020               	movf	(0+(?___awdiv)),w
  3662  059C  0834               	movwf	(??_printEM1812+0)+0
  3663  059D  00C0               	movf	(??_printEM1812+0)+0,w
  3664  059E  0840               	movwf	(printEM1812@wTen)
  3665  059F  00C2               	line	143
  3666                           	
  3667                           l3762:	
  3668  05A0                     	movlw	064h
  3669  05A0  3064               	movwf	(___awmod@divisor)
  3670  05A1  00B4               	movlw	0
  3671  05A2  3000               	movwf	((___awmod@divisor))+1
  3672  05A3  00B5               	movf	(printEM1812@wVariable+1),w
  3673  05A4  083E               	movwf	(___awmod@dividend+1)
  3674  05A5  00B7               	movf	(printEM1812@wVariable),w
  3675  05A6  083D               	movwf	(___awmod@dividend)
  3676  05A7  00B6               	fcall	___awmod
  3677  05A8  318E  26E0  3185   	movlb 0	; select bank0
  3678  05AB  0020               	movf	(1+(?___awmod)),w
  3679  05AC  0835               	movwf	(printEM1812@wVariable+1)
  3680  05AD  00BE               	movf	(0+(?___awmod)),w
  3681  05AE  0834               	movwf	(printEM1812@wVariable)
  3682  05AF  00BD               	line	144
  3683                           	
  3684                           l3764:	
  3685  05B0                     	movlw	0Ah
  3686  05B0  300A               	movwf	(___awdiv@divisor)
  3687  05B1  00B4               	movlw	0
  3688  05B2  3000               	movwf	((___awdiv@divisor))+1
  3689  05B3  00B5               	movf	(printEM1812@wVariable+1),w
  3690  05B4  083E               	movwf	(___awdiv@dividend+1)
  3691  05B5  00B7               	movf	(printEM1812@wVariable),w
  3692  05B6  083D               	movwf	(___awdiv@dividend)
  3693  05B7  00B6               	fcall	___awdiv
  3694  05B8  3187  2762  3185   	movlb 0	; select bank0
  3695  05BB  0020               	movf	(0+(?___awdiv)),w
  3696  05BC  0834               	movwf	(??_printEM1812+0)+0
  3697  05BD  00C0               	movf	(??_printEM1812+0)+0,w
  3698  05BE  0840               	movwf	(printEM1812@wUnity)
  3699  05BF  00C3               	line	145
  3700                           	
  3701                           l3766:	
  3702  05C0                     	movlw	0Ah
  3703  05C0  300A               	movwf	(___awmod@divisor)
  3704  05C1  00B4               	movlw	0
  3705  05C2  3000               	movwf	((___awmod@divisor))+1
  3706  05C3  00B5               	movf	(printEM1812@wVariable+1),w
  3707  05C4  083E               	movwf	(___awmod@dividend+1)
  3708  05C5  00B7               	movf	(printEM1812@wVariable),w
  3709  05C6  083D               	movwf	(___awmod@dividend)
  3710  05C7  00B6               	fcall	___awmod
  3711  05C8  318E  26E0  3185   	movlb 0	; select bank0
  3712  05CB  0020               	movf	(1+(?___awmod)),w
  3713  05CC  0835               	movwf	(printEM1812@wVariable+1)
  3714  05CD  00BE               	movf	(0+(?___awmod)),w
  3715  05CE  0834               	movwf	(printEM1812@wVariable)
  3716  05CF  00BD               	line	146
  3717                           	
  3718                           l3768:	
  3719  05D0                     	movf	(printEM1812@wVariable),w
  3720  05D0  083D               	movwf	(??_printEM1812+0)+0
  3721  05D1  00C0               	movf	(??_printEM1812+0)+0,w
  3722  05D2  0840               	movwf	(printEM1812@wDecimal)
  3723  05D3  00C4               	line	147
  3724                           	movf	((printEM1812@wIsNegative)),w
  3725  05D4  0841               	btfsc	status,2
  3726  05D5  1903               	goto	u2621
  3727  05D6  2DD8               	goto	u2620
  3728  05D7  2DD9               u2621:
  3729  05D8                     	goto	l3782
  3730  05D8  2E0E               u2620:
  3731  05D9                     	line	149
  3732                           	
  3733                           l3770:	
  3734  05D9                     	movlw	low(02Dh)
  3735  05D9  302D               	movwf	(??_printEM1812+0)+0
  3736  05DA  00C0               	movf	(printEM1812@oTextOut),w
  3737  05DB  083F               	movwf	fsr1l
  3738  05DC  0086               	movlw 2	; select bank4/5
  3739  05DD  3002               	movwf fsr1h	
  3740  05DE  0087               	
  3741                           	movf	(??_printEM1812+0)+0,w
  3742  05DF  0840               	movwf	indf1
  3743  05E0  0081               	line	150
  3744                           	
  3745                           l3772:	
  3746  05E1                     	movf	(printEM1812@wTen),w
  3747  05E1  0842               	addlw	030h
  3748  05E2  3E30               	movwf	(??_printEM1812+0)+0
  3749  05E3  00C0               	incf	(printEM1812@oTextOut),w
  3750  05E4  0A3F               	movwf	fsr1l
  3751  05E5  0086               	movlw 2	; select bank4/5
  3752  05E6  3002               	movwf fsr1h	
  3753  05E7  0087               	
  3754                           	movf	(??_printEM1812+0)+0,w
  3755  05E8  0840               	movwf	indf1
  3756  05E9  0081               	line	151
  3757                           	
  3758                           l3774:	
  3759  05EA                     	movf	(printEM1812@wUnity),w
  3760  05EA  0843               	addlw	030h
  3761  05EB  3E30               	movwf	(??_printEM1812+0)+0
  3762  05EC  00C0               	movf	(printEM1812@oTextOut),w
  3763  05ED  083F               	addlw	02h
  3764  05EE  3E02               	movwf	fsr1l
  3765  05EF  0086               	movlw 2	; select bank4/5
  3766  05F0  3002               	movwf fsr1h	
  3767  05F1  0087               	
  3768                           	movf	(??_printEM1812+0)+0,w
  3769  05F2  0840               	movwf	indf1
  3770  05F3  0081               	line	152
  3771                           	
  3772                           l3776:	
  3773  05F4                     	movlw	low(02Ch)
  3774  05F4  302C               	movwf	(??_printEM1812+0)+0
  3775  05F5  00C0               	movf	(printEM1812@oTextOut),w
  3776  05F6  083F               	addlw	03h
  3777  05F7  3E03               	movwf	fsr1l
  3778  05F8  0086               	movlw 2	; select bank4/5
  3779  05F9  3002               	movwf fsr1h	
  3780  05FA  0087               	
  3781                           	movf	(??_printEM1812+0)+0,w
  3782  05FB  0840               	movwf	indf1
  3783  05FC  0081               	line	153
  3784                           	
  3785                           l3778:	
  3786  05FD                     	movf	(printEM1812@wDecimal),w
  3787  05FD  0844               	addlw	030h
  3788  05FE  3E30               	movwf	(??_printEM1812+0)+0
  3789  05FF  00C0               	movf	(printEM1812@oTextOut),w
  3790  0600  083F               	addlw	04h
  3791  0601  3E04               	movwf	fsr1l
  3792  0602  0086               	movlw 2	; select bank4/5
  3793  0603  3002               	movwf fsr1h	
  3794  0604  0087               	
  3795                           	movf	(??_printEM1812+0)+0,w
  3796  0605  0840               	movwf	indf1
  3797  0606  0081               	line	154
  3798                           	
  3799                           l3780:	
  3800  0607                     	movf	(printEM1812@oTextOut),w
  3801  0607  083F               	addlw	05h
  3802  0608  3E05               	movwf	fsr1l
  3803  0609  0086               	movlw 2	; select bank4/5
  3804  060A  3002               	movwf fsr1h	
  3805  060B  0087               	
  3806                           	clrf	indf1
  3807  060C  0181               	line	155
  3808                           	goto	l141
  3809  060D  2E3A               	line	156
  3810                           	
  3811                           l139:	
  3812  060E                     	line	158
  3813                           	
  3814                           l3782:	
  3815  060E                     	movf	(printEM1812@wTen),w
  3816  060E  0842               	addlw	030h
  3817  060F  3E30               	movwf	(??_printEM1812+0)+0
  3818  0610  00C0               	movf	(printEM1812@oTextOut),w
  3819  0611  083F               	movwf	fsr1l
  3820  0612  0086               	movlw 2	; select bank4/5
  3821  0613  3002               	movwf fsr1h	
  3822  0614  0087               	
  3823                           	movf	(??_printEM1812+0)+0,w
  3824  0615  0840               	movwf	indf1
  3825  0616  0081               	line	159
  3826                           	movf	(printEM1812@wUnity),w
  3827  0617  0843               	addlw	030h
  3828  0618  3E30               	movwf	(??_printEM1812+0)+0
  3829  0619  00C0               	incf	(printEM1812@oTextOut),w
  3830  061A  0A3F               	movwf	fsr1l
  3831  061B  0086               	movlw 2	; select bank4/5
  3832  061C  3002               	movwf fsr1h	
  3833  061D  0087               	
  3834                           	movf	(??_printEM1812+0)+0,w
  3835  061E  0840               	movwf	indf1
  3836  061F  0081               	line	160
  3837                           	movlw	low(02Ch)
  3838  0620  302C               	movwf	(??_printEM1812+0)+0
  3839  0621  00C0               	movf	(printEM1812@oTextOut),w
  3840  0622  083F               	addlw	02h
  3841  0623  3E02               	movwf	fsr1l
  3842  0624  0086               	movlw 2	; select bank4/5
  3843  0625  3002               	movwf fsr1h	
  3844  0626  0087               	
  3845                           	movf	(??_printEM1812+0)+0,w
  3846  0627  0840               	movwf	indf1
  3847  0628  0081               	line	161
  3848                           	movf	(printEM1812@wDecimal),w
  3849  0629  0844               	addlw	030h
  3850  062A  3E30               	movwf	(??_printEM1812+0)+0
  3851  062B  00C0               	movf	(printEM1812@oTextOut),w
  3852  062C  083F               	addlw	03h
  3853  062D  3E03               	movwf	fsr1l
  3854  062E  0086               	movlw 2	; select bank4/5
  3855  062F  3002               	movwf fsr1h	
  3856  0630  0087               	
  3857                           	movf	(??_printEM1812+0)+0,w
  3858  0631  0840               	movwf	indf1
  3859  0632  0081               	line	162
  3860                           	movf	(printEM1812@oTextOut),w
  3861  0633  083F               	addlw	04h
  3862  0634  3E04               	movwf	fsr1l
  3863  0635  0086               	movlw 2	; select bank4/5
  3864  0636  3002               	movwf fsr1h	
  3865  0637  0087               	
  3866                           	clrf	indf1
  3867  0638  0181               	goto	l141
  3868  0639  2E3A               	line	163
  3869                           	
  3870                           l140:	
  3871  063A                     	line	165
  3872                           	
  3873                           l141:	
  3874  063A                     	return
  3875  063A  0008               	opt stack 0
  3876                           GLOBAL	__end_of_printEM1812
  3877                           	__end_of_printEM1812:
  3878  063B                     	signat	_printEM1812,8313
  3879                           	global	___awmod
  3880                           
  3881 ;; *************** function ___awmod *****************
  3882 ;; Defined at:
  3883 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  divisor         2   20[BANK0 ] int 
  3886 ;;  dividend        2   22[BANK0 ] int 
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;  sign            1   26[BANK0 ] unsigned char 
  3889 ;;  counter         1   25[BANK0 ] unsigned char 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  2   20[BANK0 ] int 
  3892 ;; Registers used:
  3893 ;;		wreg, status,2, status,0
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3899 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  3900 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  3901 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3902 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
  3903 ;;Total ram usage:        7 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:    6
  3906 ;; This function calls:
  3907 ;;		Nothing
  3908 ;; This function is called by:
  3909 ;;		_printEM1812
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  3913                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  3914                           	line	5
  3915                           global __ptext4
  3916                           __ptext4:	;psect for function ___awmod
  3917  0EE0                     psect	text4
  3918                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  3919                           	line	5
  3920                           	global	__size_of___awmod
  3921                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  3922  005E                     	
  3923                           ___awmod:	
  3924  0EE0                     ;incstack = 0
  3925                           	opt	stack 8
  3926                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3927                           	line	12
  3928                           	
  3929                           l3588:	
  3930  0EE0                     	movlb 0	; select bank0
  3931  0EE0  0020               	clrf	(___awmod@sign)
  3932  0EE1  01BA               	line	13
  3933                           	
  3934                           l3590:	
  3935  0EE2                     	btfss	(___awmod@dividend+1),7
  3936  0EE2  1FB7               	goto	u2411
  3937  0EE3  2EE5               	goto	u2410
  3938  0EE4  2EE6               u2411:
  3939  0EE5                     	goto	l3596
  3940  0EE5  2EEE               u2410:
  3941  0EE6                     	line	14
  3942                           	
  3943                           l3592:	
  3944  0EE6                     	comf	(___awmod@dividend),f
  3945  0EE6  09B6               	comf	(___awmod@dividend+1),f
  3946  0EE7  09B7               	incf	(___awmod@dividend),f
  3947  0EE8  0AB6               	skipnz
  3948  0EE9  1903               	incf	(___awmod@dividend+1),f
  3949  0EEA  0AB7               	line	15
  3950                           	
  3951                           l3594:	
  3952  0EEB                     	clrf	(___awmod@sign)
  3953  0EEB  01BA               	incf	(___awmod@sign),f
  3954  0EEC  0ABA               	goto	l3596
  3955  0EED  2EEE               	line	16
  3956                           	
  3957                           l542:	
  3958  0EEE                     	line	17
  3959                           	
  3960                           l3596:	
  3961  0EEE                     	btfss	(___awmod@divisor+1),7
  3962  0EEE  1FB5               	goto	u2421
  3963  0EEF  2EF1               	goto	u2420
  3964  0EF0  2EF2               u2421:
  3965  0EF1                     	goto	l3600
  3966  0EF1  2EF8               u2420:
  3967  0EF2                     	line	18
  3968                           	
  3969                           l3598:	
  3970  0EF2                     	comf	(___awmod@divisor),f
  3971  0EF2  09B4               	comf	(___awmod@divisor+1),f
  3972  0EF3  09B5               	incf	(___awmod@divisor),f
  3973  0EF4  0AB4               	skipnz
  3974  0EF5  1903               	incf	(___awmod@divisor+1),f
  3975  0EF6  0AB5               	goto	l3600
  3976  0EF7  2EF8               	
  3977                           l543:	
  3978  0EF8                     	line	19
  3979                           	
  3980                           l3600:	
  3981  0EF8                     	movf	((___awmod@divisor)),w
  3982  0EF8  0834               iorwf	((___awmod@divisor+1)),w
  3983  0EF9  0435               	btfsc	status,2
  3984  0EFA  1903               	goto	u2431
  3985  0EFB  2EFD               	goto	u2430
  3986  0EFC  2EFE               u2431:
  3987  0EFD                     	goto	l3618
  3988  0EFD  2F2D               u2430:
  3989  0EFE                     	line	20
  3990                           	
  3991                           l3602:	
  3992  0EFE                     	clrf	(___awmod@counter)
  3993  0EFE  01B9               	incf	(___awmod@counter),f
  3994  0EFF  0AB9               	line	21
  3995                           	goto	l3608
  3996  0F00  2F0B               	
  3997                           l546:	
  3998  0F01                     	line	22
  3999                           	
  4000                           l3604:	
  4001  0F01                     	movlw	01h
  4002  0F01  3001               	
  4003                           u2445:
  4004  0F02                     	lslf	(___awmod@divisor),f
  4005  0F02  35B4               	rlf	(___awmod@divisor+1),f
  4006  0F03  0DB5               	decfsz	wreg,f
  4007  0F04  0B89               	goto	u2445
  4008  0F05  2F02               	line	23
  4009                           	
  4010                           l3606:	
  4011  0F06                     	movlw	low(01h)
  4012  0F06  3001               	movwf	(??___awmod+0)+0
  4013  0F07  00B8               	movf	(??___awmod+0)+0,w
  4014  0F08  0838               	addwf	(___awmod@counter),f
  4015  0F09  07B9               	goto	l3608
  4016  0F0A  2F0B               	line	24
  4017                           	
  4018                           l545:	
  4019  0F0B                     	line	21
  4020                           	
  4021                           l3608:	
  4022  0F0B                     	btfss	(___awmod@divisor+1),(15)&7
  4023  0F0B  1FB5               	goto	u2451
  4024  0F0C  2F0E               	goto	u2450
  4025  0F0D  2F0F               u2451:
  4026  0F0E                     	goto	l3604
  4027  0F0E  2F01               u2450:
  4028  0F0F                     	goto	l3610
  4029  0F0F  2F11               	
  4030                           l547:	
  4031  0F10                     	goto	l3610
  4032  0F10  2F11               	line	25
  4033                           	
  4034                           l548:	
  4035  0F11                     	line	26
  4036                           	
  4037                           l3610:	
  4038  0F11                     	movf	(___awmod@divisor+1),w
  4039  0F11  0835               	subwf	(___awmod@dividend+1),w
  4040  0F12  0237               	skipz
  4041  0F13  1D03               	goto	u2465
  4042  0F14  2F17               	movf	(___awmod@divisor),w
  4043  0F15  0834               	subwf	(___awmod@dividend),w
  4044  0F16  0236               u2465:
  4045  0F17                     	skipc
  4046  0F17  1C03               	goto	u2461
  4047  0F18  2F1A               	goto	u2460
  4048  0F19  2F1B               u2461:
  4049  0F1A                     	goto	l3614
  4050  0F1A  2F20               u2460:
  4051  0F1B                     	line	27
  4052                           	
  4053                           l3612:	
  4054  0F1B                     	movf	(___awmod@divisor),w
  4055  0F1B  0834               	subwf	(___awmod@dividend),f
  4056  0F1C  02B6               	movf	(___awmod@divisor+1),w
  4057  0F1D  0835               	subwfb	(___awmod@dividend+1),f
  4058  0F1E  3BB7               	goto	l3614
  4059  0F1F  2F20               	
  4060                           l549:	
  4061  0F20                     	line	28
  4062                           	
  4063                           l3614:	
  4064  0F20                     	movlw	01h
  4065  0F20  3001               	
  4066                           u2475:
  4067  0F21                     	lsrf	(___awmod@divisor+1),f
  4068  0F21  36B5               	rrf	(___awmod@divisor),f
  4069  0F22  0CB4               	decfsz	wreg,f
  4070  0F23  0B89               	goto	u2475
  4071  0F24  2F21               	line	29
  4072                           	
  4073                           l3616:	
  4074  0F25                     	movlw	01h
  4075  0F25  3001               	subwf	(___awmod@counter),f
  4076  0F26  02B9               	btfss	status,2
  4077  0F27  1D03               	goto	u2481
  4078  0F28  2F2A               	goto	u2480
  4079  0F29  2F2B               u2481:
  4080  0F2A                     	goto	l3610
  4081  0F2A  2F11               u2480:
  4082  0F2B                     	goto	l3618
  4083  0F2B  2F2D               	
  4084                           l550:	
  4085  0F2C                     	goto	l3618
  4086  0F2C  2F2D               	line	30
  4087                           	
  4088                           l544:	
  4089  0F2D                     	line	31
  4090                           	
  4091                           l3618:	
  4092  0F2D                     	movf	((___awmod@sign)),w
  4093  0F2D  083A               	btfsc	status,2
  4094  0F2E  1903               	goto	u2491
  4095  0F2F  2F31               	goto	u2490
  4096  0F30  2F32               u2491:
  4097  0F31                     	goto	l3622
  4098  0F31  2F38               u2490:
  4099  0F32                     	line	32
  4100                           	
  4101                           l3620:	
  4102  0F32                     	comf	(___awmod@dividend),f
  4103  0F32  09B6               	comf	(___awmod@dividend+1),f
  4104  0F33  09B7               	incf	(___awmod@dividend),f
  4105  0F34  0AB6               	skipnz
  4106  0F35  1903               	incf	(___awmod@dividend+1),f
  4107  0F36  0AB7               	goto	l3622
  4108  0F37  2F38               	
  4109                           l551:	
  4110  0F38                     	line	33
  4111                           	
  4112                           l3622:	
  4113  0F38                     	movf	(___awmod@dividend+1),w
  4114  0F38  0837               	movwf	(?___awmod+1)
  4115  0F39  00B5               	movf	(___awmod@dividend),w
  4116  0F3A  0836               	movwf	(?___awmod)
  4117  0F3B  00B4               	goto	l552
  4118  0F3C  2F3D               	
  4119                           l3624:	
  4120  0F3D                     	line	34
  4121                           	
  4122                           l552:	
  4123  0F3D                     	return
  4124  0F3D  0008               	opt stack 0
  4125                           GLOBAL	__end_of___awmod
  4126                           	__end_of___awmod:
  4127  0F3E                     	signat	___awmod,8314
  4128                           	global	___awdiv
  4129                           
  4130 ;; *************** function ___awdiv *****************
  4131 ;; Defined at:
  4132 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;  divisor         2   20[BANK0 ] int 
  4135 ;;  dividend        2   22[BANK0 ] int 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;  quotient        2   27[BANK0 ] int 
  4138 ;;  sign            1   26[BANK0 ] unsigned char 
  4139 ;;  counter         1   25[BANK0 ] unsigned char 
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  2   20[BANK0 ] int 
  4142 ;; Registers used:
  4143 ;;		wreg, status,2, status,0
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4149 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4150 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  4151 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4152 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0
  4153 ;;Total ram usage:        9 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    6
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_printEM1812
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  4163                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  4164                           	line	5
  4165                           global __ptext5
  4166                           __ptext5:	;psect for function ___awdiv
  4167  0762                     psect	text5
  4168                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  4169                           	line	5
  4170                           	global	__size_of___awdiv
  4171                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  4172  006A                     	
  4173                           ___awdiv:	
  4174  0762                     ;incstack = 0
  4175                           	opt	stack 8
  4176                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4177                           	line	13
  4178                           	
  4179                           l3544:	
  4180  0762                     	movlb 0	; select bank0
  4181  0762  0020               	clrf	(___awdiv@sign)
  4182  0763  01BA               	line	14
  4183                           	
  4184                           l3546:	
  4185  0764                     	btfss	(___awdiv@divisor+1),7
  4186  0764  1FB5               	goto	u2311
  4187  0765  2F67               	goto	u2310
  4188  0766  2F68               u2311:
  4189  0767                     	goto	l3552
  4190  0767  2F70               u2310:
  4191  0768                     	line	15
  4192                           	
  4193                           l3548:	
  4194  0768                     	comf	(___awdiv@divisor),f
  4195  0768  09B4               	comf	(___awdiv@divisor+1),f
  4196  0769  09B5               	incf	(___awdiv@divisor),f
  4197  076A  0AB4               	skipnz
  4198  076B  1903               	incf	(___awdiv@divisor+1),f
  4199  076C  0AB5               	line	16
  4200                           	
  4201                           l3550:	
  4202  076D                     	clrf	(___awdiv@sign)
  4203  076D  01BA               	incf	(___awdiv@sign),f
  4204  076E  0ABA               	goto	l3552
  4205  076F  2F70               	line	17
  4206                           	
  4207                           l529:	
  4208  0770                     	line	18
  4209                           	
  4210                           l3552:	
  4211  0770                     	btfss	(___awdiv@dividend+1),7
  4212  0770  1FB7               	goto	u2321
  4213  0771  2F73               	goto	u2320
  4214  0772  2F74               u2321:
  4215  0773                     	goto	l3558
  4216  0773  2F7E               u2320:
  4217  0774                     	line	19
  4218                           	
  4219                           l3554:	
  4220  0774                     	comf	(___awdiv@dividend),f
  4221  0774  09B6               	comf	(___awdiv@dividend+1),f
  4222  0775  09B7               	incf	(___awdiv@dividend),f
  4223  0776  0AB6               	skipnz
  4224  0777  1903               	incf	(___awdiv@dividend+1),f
  4225  0778  0AB7               	line	20
  4226                           	
  4227                           l3556:	
  4228  0779                     	movlw	low(01h)
  4229  0779  3001               	movwf	(??___awdiv+0)+0
  4230  077A  00B8               	movf	(??___awdiv+0)+0,w
  4231  077B  0838               	xorwf	(___awdiv@sign),f
  4232  077C  06BA               	goto	l3558
  4233  077D  2F7E               	line	21
  4234                           	
  4235                           l530:	
  4236  077E                     	line	22
  4237                           	
  4238                           l3558:	
  4239  077E                     	clrf	(___awdiv@quotient)
  4240  077E  01BB               	clrf	(___awdiv@quotient+1)
  4241  077F  01BC               	line	23
  4242                           	
  4243                           l3560:	
  4244  0780                     	movf	((___awdiv@divisor)),w
  4245  0780  0834               iorwf	((___awdiv@divisor+1)),w
  4246  0781  0435               	btfsc	status,2
  4247  0782  1903               	goto	u2331
  4248  0783  2F85               	goto	u2330
  4249  0784  2F86               u2331:
  4250  0785                     	goto	l3580
  4251  0785  2FBB               u2330:
  4252  0786                     	line	24
  4253                           	
  4254                           l3562:	
  4255  0786                     	clrf	(___awdiv@counter)
  4256  0786  01B9               	incf	(___awdiv@counter),f
  4257  0787  0AB9               	line	25
  4258                           	goto	l3568
  4259  0788  2F93               	
  4260                           l533:	
  4261  0789                     	line	26
  4262                           	
  4263                           l3564:	
  4264  0789                     	movlw	01h
  4265  0789  3001               	
  4266                           u2345:
  4267  078A                     	lslf	(___awdiv@divisor),f
  4268  078A  35B4               	rlf	(___awdiv@divisor+1),f
  4269  078B  0DB5               	decfsz	wreg,f
  4270  078C  0B89               	goto	u2345
  4271  078D  2F8A               	line	27
  4272                           	
  4273                           l3566:	
  4274  078E                     	movlw	low(01h)
  4275  078E  3001               	movwf	(??___awdiv+0)+0
  4276  078F  00B8               	movf	(??___awdiv+0)+0,w
  4277  0790  0838               	addwf	(___awdiv@counter),f
  4278  0791  07B9               	goto	l3568
  4279  0792  2F93               	line	28
  4280                           	
  4281                           l532:	
  4282  0793                     	line	25
  4283                           	
  4284                           l3568:	
  4285  0793                     	btfss	(___awdiv@divisor+1),(15)&7
  4286  0793  1FB5               	goto	u2351
  4287  0794  2F96               	goto	u2350
  4288  0795  2F97               u2351:
  4289  0796                     	goto	l3564
  4290  0796  2F89               u2350:
  4291  0797                     	goto	l3570
  4292  0797  2F99               	
  4293                           l534:	
  4294  0798                     	goto	l3570
  4295  0798  2F99               	line	29
  4296                           	
  4297                           l535:	
  4298  0799                     	line	30
  4299                           	
  4300                           l3570:	
  4301  0799                     	movlw	01h
  4302  0799  3001               	
  4303                           u2365:
  4304  079A                     	lslf	(___awdiv@quotient),f
  4305  079A  35BB               	rlf	(___awdiv@quotient+1),f
  4306  079B  0DBC               	decfsz	wreg,f
  4307  079C  0B89               	goto	u2365
  4308  079D  2F9A               	line	31
  4309                           	movf	(___awdiv@divisor+1),w
  4310  079E  0835               	subwf	(___awdiv@dividend+1),w
  4311  079F  0237               	skipz
  4312  07A0  1D03               	goto	u2375
  4313  07A1  2FA4               	movf	(___awdiv@divisor),w
  4314  07A2  0834               	subwf	(___awdiv@dividend),w
  4315  07A3  0236               u2375:
  4316  07A4                     	skipc
  4317  07A4  1C03               	goto	u2371
  4318  07A5  2FA7               	goto	u2370
  4319  07A6  2FA8               u2371:
  4320  07A7                     	goto	l3576
  4321  07A7  2FAE               u2370:
  4322  07A8                     	line	32
  4323                           	
  4324                           l3572:	
  4325  07A8                     	movf	(___awdiv@divisor),w
  4326  07A8  0834               	subwf	(___awdiv@dividend),f
  4327  07A9  02B6               	movf	(___awdiv@divisor+1),w
  4328  07AA  0835               	subwfb	(___awdiv@dividend+1),f
  4329  07AB  3BB7               	line	33
  4330                           	
  4331                           l3574:	
  4332  07AC                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  4333  07AC  143B               	goto	l3576
  4334  07AD  2FAE               	line	34
  4335                           	
  4336                           l536:	
  4337  07AE                     	line	35
  4338                           	
  4339                           l3576:	
  4340  07AE                     	movlw	01h
  4341  07AE  3001               	
  4342                           u2385:
  4343  07AF                     	lsrf	(___awdiv@divisor+1),f
  4344  07AF  36B5               	rrf	(___awdiv@divisor),f
  4345  07B0  0CB4               	decfsz	wreg,f
  4346  07B1  0B89               	goto	u2385
  4347  07B2  2FAF               	line	36
  4348                           	
  4349                           l3578:	
  4350  07B3                     	movlw	01h
  4351  07B3  3001               	subwf	(___awdiv@counter),f
  4352  07B4  02B9               	btfss	status,2
  4353  07B5  1D03               	goto	u2391
  4354  07B6  2FB8               	goto	u2390
  4355  07B7  2FB9               u2391:
  4356  07B8                     	goto	l3570
  4357  07B8  2F99               u2390:
  4358  07B9                     	goto	l3580
  4359  07B9  2FBB               	
  4360                           l537:	
  4361  07BA                     	goto	l3580
  4362  07BA  2FBB               	line	37
  4363                           	
  4364                           l531:	
  4365  07BB                     	line	38
  4366                           	
  4367                           l3580:	
  4368  07BB                     	movf	((___awdiv@sign)),w
  4369  07BB  083A               	btfsc	status,2
  4370  07BC  1903               	goto	u2401
  4371  07BD  2FBF               	goto	u2400
  4372  07BE  2FC0               u2401:
  4373  07BF                     	goto	l3584
  4374  07BF  2FC6               u2400:
  4375  07C0                     	line	39
  4376                           	
  4377                           l3582:	
  4378  07C0                     	comf	(___awdiv@quotient),f
  4379  07C0  09BB               	comf	(___awdiv@quotient+1),f
  4380  07C1  09BC               	incf	(___awdiv@quotient),f
  4381  07C2  0ABB               	skipnz
  4382  07C3  1903               	incf	(___awdiv@quotient+1),f
  4383  07C4  0ABC               	goto	l3584
  4384  07C5  2FC6               	
  4385                           l538:	
  4386  07C6                     	line	40
  4387                           	
  4388                           l3584:	
  4389  07C6                     	movf	(___awdiv@quotient+1),w
  4390  07C6  083C               	movwf	(?___awdiv+1)
  4391  07C7  00B5               	movf	(___awdiv@quotient),w
  4392  07C8  083B               	movwf	(?___awdiv)
  4393  07C9  00B4               	goto	l539
  4394  07CA  2FCB               	
  4395                           l3586:	
  4396  07CB                     	line	41
  4397                           	
  4398                           l539:	
  4399  07CB                     	return
  4400  07CB  0008               	opt stack 0
  4401                           GLOBAL	__end_of___awdiv
  4402                           	__end_of___awdiv:
  4403  07CC                     	signat	___awdiv,8314
  4404                           	global	_powerOnLcd
  4405                           
  4406 ;; *************** function _powerOnLcd *****************
  4407 ;; Defined at:
  4408 ;;		line 188 in file "LCD_hd44780u_qy_2004a.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;		None
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;		None
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      void 
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, status,0, pclath, cstack
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4424 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4425 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4426 ;;Total ram usage:        1 bytes
  4427 ;; Hardware stack levels used:    1
  4428 ;; Hardware stack levels required when called:    9
  4429 ;; This function calls:
  4430 ;;		_writeInsChk
  4431 ;; This function is called by:
  4432 ;;		_main
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  4436                           	file	"LCD_hd44780u_qy_2004a.c"
  4437                           	line	188
  4438                           global __ptext6
  4439                           __ptext6:	;psect for function _powerOnLcd
  4440  0B3E                     psect	text6
  4441                           	file	"LCD_hd44780u_qy_2004a.c"
  4442                           	line	188
  4443                           	global	__size_of_powerOnLcd
  4444                           	__size_of_powerOnLcd	equ	__end_of_powerOnLcd-_powerOnLcd
  4445  000B                     	
  4446                           _powerOnLcd:	
  4447  0B3E                     ;incstack = 0
  4448                           	opt	stack 6
  4449                           ; Regs used in _powerOnLcd: [wreg+status,2+status,0+pclath+cstack]
  4450                           	line	190
  4451                           	
  4452                           l3822:	
  4453  0B3E                     ;LCD_hd44780u_qy_2004a.c: 190:   mDisplayOnOffReg = mDisplayOnOffReg | 0x04;
  4454                           	movlb 0	; select bank0
  4455  0B3E  0020               	movf	(_mDisplayOnOffReg),w
  4456  0B3F  085B               	iorlw	04h
  4457  0B40  3804               	movwf	(??_powerOnLcd+0)+0
  4458  0B41  00BA               	movf	(??_powerOnLcd+0)+0,w
  4459  0B42  083A               	movwf	(_mDisplayOnOffReg)
  4460  0B43  00DB               	line	191
  4461                           	
  4462                           l3824:	
  4463  0B44                     ;LCD_hd44780u_qy_2004a.c: 191:   writeInsChk(mDisplayOnOffReg);
  4464                           	movf	(_mDisplayOnOffReg),w
  4465  0B44  085B               	fcall	_writeInsChk
  4466  0B45  318B  2333  318B   	line	192
  4467                           	
  4468                           l336:	
  4469  0B48                     	return
  4470  0B48  0008               	opt stack 0
  4471                           GLOBAL	__end_of_powerOnLcd
  4472                           	__end_of_powerOnLcd:
  4473  0B49                     	signat	_powerOnLcd,89
  4474                           	global	_moveCursorToHome
  4475                           
  4476 ;; *************** function _moveCursorToHome *****************
  4477 ;; Defined at:
  4478 ;;		line 249 in file "LCD_hd44780u_qy_2004a.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;		None
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      void 
  4485 ;; Registers used:
  4486 ;;		wreg, status,2, status,0, pclath, cstack
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4496 ;;Total ram usage:        0 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    9
  4499 ;; This function calls:
  4500 ;;		_writeInsChk
  4501 ;; This function is called by:
  4502 ;;		_main
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  4506                           	line	249
  4507                           global __ptext7
  4508                           __ptext7:	;psect for function _moveCursorToHome
  4509  0B21                     psect	text7
  4510                           	file	"LCD_hd44780u_qy_2004a.c"
  4511                           	line	249
  4512                           	global	__size_of_moveCursorToHome
  4513                           	__size_of_moveCursorToHome	equ	__end_of_moveCursorToHome-_moveCursorToHome
  4514  0008                     	
  4515                           _moveCursorToHome:	
  4516  0B21                     ;incstack = 0
  4517                           	opt	stack 6
  4518                           ; Regs used in _moveCursorToHome: [wreg+status,2+status,0+pclath+cstack]
  4519                           	line	251
  4520                           	
  4521                           l3830:	
  4522  0B21                     ;LCD_hd44780u_qy_2004a.c: 251:   writeInsChk(0x02);
  4523                           	movlw	low(02h)
  4524  0B21  3002               	fcall	_writeInsChk
  4525  0B22  318B  2333  318B   	line	252
  4526                           	
  4527                           l3832:	
  4528  0B25                     ;LCD_hd44780u_qy_2004a.c: 252:   mWritingPosition=1;
  4529                           	movlb 0	; select bank0
  4530  0B25  0020               	clrf	(_mWritingPosition)
  4531  0B26  01D9               	incf	(_mWritingPosition),f
  4532  0B27  0AD9               	line	253
  4533                           	
  4534                           l372:	
  4535  0B28                     	return
  4536  0B28  0008               	opt stack 0
  4537                           GLOBAL	__end_of_moveCursorToHome
  4538                           	__end_of_moveCursorToHome:
  4539  0B29                     	signat	_moveCursorToHome,89
  4540                           	global	_initLCD
  4541                           
  4542 ;; *************** function _initLCD *****************
  4543 ;; Defined at:
  4544 ;;		line 10 in file "LCD_hd44780u_qy_2004a.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;		None
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0, pclath, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4560 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4561 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4562 ;;Total ram usage:        1 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:   10
  4565 ;; This function calls:
  4566 ;;		_clearDisplay
  4567 ;;		_setData
  4568 ;;		_writeInsChk
  4569 ;; This function is called by:
  4570 ;;		_main
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  4574                           	line	10
  4575                           global __ptext8
  4576                           __ptext8:	;psect for function _initLCD
  4577  0E90                     psect	text8
  4578                           	file	"LCD_hd44780u_qy_2004a.c"
  4579                           	line	10
  4580                           	global	__size_of_initLCD
  4581                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  4582  0050                     	
  4583                           _initLCD:	
  4584  0E90                     ;incstack = 0
  4585                           	opt	stack 5
  4586                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  4587                           	line	13
  4588                           	
  4589                           l3800:	
  4590  0E90                     ;LCD_hd44780u_qy_2004a.c: 13:   TRISAbits.TRISA4 = 0;
  4591                           	movlb 1	; select bank1
  4592  0E90  0021               	bcf	(140)^080h,4	;volatile
  4593  0E91  120C               	line	14
  4594                           ;LCD_hd44780u_qy_2004a.c: 14:   TRISAbits.TRISA7 = 0;
  4595                           	bcf	(140)^080h,7	;volatile
  4596  0E92  138C               	line	15
  4597                           ;LCD_hd44780u_qy_2004a.c: 15:   TRISAbits.TRISA5 = 0;
  4598                           	bcf	(140)^080h,5	;volatile
  4599  0E93  128C               	line	16
  4600                           ;LCD_hd44780u_qy_2004a.c: 16:   PORTAbits.RA4 = 0;
  4601                           	movlb 0	; select bank0
  4602  0E94  0020               	bcf	(12),4	;volatile
  4603  0E95  120C               	line	17
  4604                           ;LCD_hd44780u_qy_2004a.c: 17:   PORTAbits.RA7 = 0;
  4605                           	bcf	(12),7	;volatile
  4606  0E96  138C               	line	18
  4607                           ;LCD_hd44780u_qy_2004a.c: 18:   PORTAbits.RA5 = 0;
  4608                           	bcf	(12),5	;volatile
  4609  0E97  128C               	line	21
  4610                           	
  4611                           l3802:	
  4612  0E98                     ;LCD_hd44780u_qy_2004a.c: 21:   _delay((unsigned long)((15)*(16000000/4000.0)));
  4613                           	opt asmopt_push
  4614                           opt asmopt_off
  4615                           movlw	78
  4616  0E98  304E               	movlb 0	; select bank0
  4617  0E99  0020               movwf	((??_initLCD+0)+0),f
  4618  0E9A  00BA               	movlw	235
  4619  0E9B  30EB               u3167:
  4620  0E9C                     decfsz	wreg
  4621  0E9C  0B89               	goto	u3167
  4622  0E9D  2E9C               	decfsz	((??_initLCD+0)+0),f
  4623  0E9E  0BBA               	goto	u3167
  4624  0E9F  2E9C               opt asmopt_pop
  4625                           
  4626                           	line	22
  4627                           	
  4628                           l3804:	
  4629  0EA0                     ;LCD_hd44780u_qy_2004a.c: 22:   setData(0x3);
  4630                           	movlw	low(03h)
  4631  0EA0  3003               	fcall	_setData
  4632  0EA1  318D  25C5  318E   	line	23
  4633                           	
  4634                           l3806:	
  4635  0EA4                     ;LCD_hd44780u_qy_2004a.c: 23:   _delay((unsigned long)((5)*(16000000/4000.0)));
  4636                           	opt asmopt_push
  4637                           opt asmopt_off
  4638                           movlw	26
  4639  0EA4  301A               	movlb 0	; select bank0
  4640  0EA5  0020               movwf	((??_initLCD+0)+0),f
  4641  0EA6  00BA               	movlw	248
  4642  0EA7  30F8               u3177:
  4643  0EA8                     decfsz	wreg
  4644  0EA8  0B89               	goto	u3177
  4645  0EA9  2EA8               	decfsz	((??_initLCD+0)+0),f
  4646  0EAA  0BBA               	goto	u3177
  4647  0EAB  2EA8               	nop
  4648  0EAC  0000               opt asmopt_pop
  4649                           
  4650                           	line	24
  4651                           ;LCD_hd44780u_qy_2004a.c: 24:   setData(0x3);
  4652                           	movlw	low(03h)
  4653  0EAD  3003               	fcall	_setData
  4654  0EAE  318D  25C5  318E   	line	25
  4655                           	
  4656                           l3808:	
  4657  0EB1                     ;LCD_hd44780u_qy_2004a.c: 25:   _delay((unsigned long)((150)*(16000000/4000000.0)));
  4658                           	opt asmopt_push
  4659                           opt asmopt_off
  4660                           	movlw	200
  4661  0EB1  30C8               u3187:
  4662  0EB2                     decfsz	wreg
  4663  0EB2  0B89               	goto	u3187
  4664  0EB3  2EB2               opt asmopt_pop
  4665                           
  4666                           	line	26
  4667                           	
  4668                           l3810:	
  4669  0EB4                     ;LCD_hd44780u_qy_2004a.c: 26:   setData(0x3);
  4670                           	movlw	low(03h)
  4671  0EB4  3003               	fcall	_setData
  4672  0EB5  318D  25C5  318E   	line	27
  4673                           ;LCD_hd44780u_qy_2004a.c: 27:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  4674                           	opt asmopt_push
  4675                           opt asmopt_off
  4676                           	movlw	13
  4677  0EB8  300D               u3197:
  4678  0EB9                     decfsz	wreg
  4679  0EB9  0B89               	goto	u3197
  4680  0EBA  2EB9               	nop
  4681  0EBB  0000               opt asmopt_pop
  4682                           
  4683                           	line	28
  4684                           	
  4685                           l3812:	
  4686  0EBC                     ;LCD_hd44780u_qy_2004a.c: 28:   setData(0x2);
  4687                           	movlw	low(02h)
  4688  0EBC  3002               	fcall	_setData
  4689  0EBD  318D  25C5  318E   	line	29
  4690                           	
  4691                           l3814:	
  4692  0EC0                     ;LCD_hd44780u_qy_2004a.c: 29:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  4693                           	opt asmopt_push
  4694                           opt asmopt_off
  4695                           	movlw	13
  4696  0EC0  300D               u3207:
  4697  0EC1                     decfsz	wreg
  4698  0EC1  0B89               	goto	u3207
  4699  0EC2  2EC1               	nop
  4700  0EC3  0000               opt asmopt_pop
  4701                           
  4702                           	line	30
  4703                           ;LCD_hd44780u_qy_2004a.c: 30:   writeInsChk(0x28);
  4704                           	movlw	low(028h)
  4705  0EC4  3028               	fcall	_writeInsChk
  4706  0EC5  318B  2333  318E   	line	31
  4707                           	
  4708                           l3816:	
  4709  0EC8                     ;LCD_hd44780u_qy_2004a.c: 31:   mDisplayOnOffReg = 0x0F;
  4710                           	movlw	low(0Fh)
  4711  0EC8  300F               	movlb 0	; select bank0
  4712  0EC9  0020               	movwf	(??_initLCD+0)+0
  4713  0ECA  00BA               	movf	(??_initLCD+0)+0,w
  4714  0ECB  083A               	movwf	(_mDisplayOnOffReg)
  4715  0ECC  00DB               	line	32
  4716                           	
  4717                           l3818:	
  4718  0ECD                     ;LCD_hd44780u_qy_2004a.c: 32:   mCursorDisplayShiftReg= 0x06;
  4719                           	movlw	low(06h)
  4720  0ECD  3006               	movwf	(??_initLCD+0)+0
  4721  0ECE  00BA               	movf	(??_initLCD+0)+0,w
  4722  0ECF  083A               	movwf	(_mCursorDisplayShiftReg)
  4723  0ED0  00DA               	line	33
  4724                           ;LCD_hd44780u_qy_2004a.c: 33:   writeInsChk(mDisplayOnOffReg);
  4725                           	movf	(_mDisplayOnOffReg),w
  4726  0ED1  085B               	fcall	_writeInsChk
  4727  0ED2  318B  2333  318E   	line	35
  4728                           ;LCD_hd44780u_qy_2004a.c: 35:   clearDisplay();
  4729                           	fcall	_clearDisplay
  4730  0ED5  318B  2304  318E   	line	36
  4731                           ;LCD_hd44780u_qy_2004a.c: 36:   writeInsChk(0x06);
  4732                           	movlw	low(06h)
  4733  0ED8  3006               	fcall	_writeInsChk
  4734  0ED9  318B  2333  318E   	line	37
  4735                           	
  4736                           l3820:	
  4737  0EDC                     ;LCD_hd44780u_qy_2004a.c: 37:   mWritingPosition=1;
  4738                           	movlb 0	; select bank0
  4739  0EDC  0020               	clrf	(_mWritingPosition)
  4740  0EDD  01D9               	incf	(_mWritingPosition),f
  4741  0EDE  0AD9               	line	39
  4742                           	
  4743                           l277:	
  4744  0EDF                     	return
  4745  0EDF  0008               	opt stack 0
  4746                           GLOBAL	__end_of_initLCD
  4747                           	__end_of_initLCD:
  4748  0EE0                     	signat	_initLCD,89
  4749                           	global	_clearDisplay
  4750                           
  4751 ;; *************** function _clearDisplay *****************
  4752 ;; Defined at:
  4753 ;;		line 245 in file "LCD_hd44780u_qy_2004a.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;		None
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;		None
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  1    wreg      void 
  4760 ;; Registers used:
  4761 ;;		wreg, status,2, status,0, pclath, cstack
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4771 ;;Total ram usage:        0 bytes
  4772 ;; Hardware stack levels used:    1
  4773 ;; Hardware stack levels required when called:    9
  4774 ;; This function calls:
  4775 ;;		_writeInsChk
  4776 ;; This function is called by:
  4777 ;;		_main
  4778 ;;		_initLCD
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4782                           	line	245
  4783                           global __ptext9
  4784                           __ptext9:	;psect for function _clearDisplay
  4785  0B04                     psect	text9
  4786                           	file	"LCD_hd44780u_qy_2004a.c"
  4787                           	line	245
  4788                           	global	__size_of_clearDisplay
  4789                           	__size_of_clearDisplay	equ	__end_of_clearDisplay-_clearDisplay
  4790  0005                     	
  4791                           _clearDisplay:	
  4792  0B04                     ;incstack = 0
  4793                           	opt	stack 5
  4794                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  4795                           	line	247
  4796                           	
  4797                           l3542:	
  4798  0B04                     ;LCD_hd44780u_qy_2004a.c: 247:   writeInsChk(0x01);
  4799                           	movlw	low(01h)
  4800  0B04  3001               	fcall	_writeInsChk
  4801  0B05  318B  2333  318B   	line	248
  4802                           	
  4803                           l369:	
  4804  0B08                     	return
  4805  0B08  0008               	opt stack 0
  4806                           GLOBAL	__end_of_clearDisplay
  4807                           	__end_of_clearDisplay:
  4808  0B09                     	signat	_clearDisplay,89
  4809                           	global	_writeInsChk
  4810                           
  4811 ;; *************** function _writeInsChk *****************
  4812 ;; Defined at:
  4813 ;;		line 132 in file "LCD_hd44780u_qy_2004a.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  iOpCode         1    wreg     unsigned char 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  iOpCode         1   25[BANK0 ] unsigned char 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		wreg, status,2, status,0, pclath, cstack
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4828 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4830 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4831 ;;Total ram usage:        1 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; Hardware stack levels required when called:    8
  4834 ;; This function calls:
  4835 ;;		_waitLCDBusy
  4836 ;;		_writeInsNoChk
  4837 ;; This function is called by:
  4838 ;;		_initLCD
  4839 ;;		_powerOnLcd
  4840 ;;		_setNotBlinkingCursor
  4841 ;;		_setCursorOff
  4842 ;;		_clearDisplay
  4843 ;;		_moveCursorToHome
  4844 ;;		_powerOffLcd
  4845 ;;		_setBlinkingCursor
  4846 ;;		_setCursorOn
  4847 ;;		_setCursorMovingLeft
  4848 ;;		_setCursorMovingRight
  4849 ;;		_setDisplayMovingRight
  4850 ;;		_setDisplayMovingLeft
  4851 ;;		_moveCursorRight
  4852 ;;		_moveCursorLeft
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  4856                           	line	132
  4857                           global __ptext10
  4858                           __ptext10:	;psect for function _writeInsChk
  4859  0B33                     psect	text10
  4860                           	file	"LCD_hd44780u_qy_2004a.c"
  4861                           	line	132
  4862                           	global	__size_of_writeInsChk
  4863                           	__size_of_writeInsChk	equ	__end_of_writeInsChk-_writeInsChk
  4864  000B                     	
  4865                           _writeInsChk:	
  4866  0B33                     ;incstack = 0
  4867                           	opt	stack 6
  4868                           ; Regs used in _writeInsChk: [wreg+status,2+status,0+pclath+cstack]
  4869                           ;writeInsChk@iOpCode stored from wreg
  4870                           	movlb 0	; select bank0
  4871  0B33  0020               	movwf	(writeInsChk@iOpCode)
  4872  0B34  00B9               	line	134
  4873                           	
  4874                           l3380:	
  4875  0B35                     ;LCD_hd44780u_qy_2004a.c: 132: void writeInsChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 33: {;LCD_hd44780u_qy_2004a.c: 134:   waitLCDBusy();
  4876                           	fcall	_waitLCDBusy
  4877  0B35  318D  2522  318B   	line	135
  4878                           ;LCD_hd44780u_qy_2004a.c: 135:   writeInsNoChk(iOpCode);
  4879                           	movlb 0	; select bank0
  4880  0B38  0020               	movf	(writeInsChk@iOpCode),w
  4881  0B39  0839               	fcall	_writeInsNoChk
  4882  0B3A  318B  2374  318B   	line	136
  4883                           	
  4884                           l315:	
  4885  0B3D                     	return
  4886  0B3D  0008               	opt stack 0
  4887                           GLOBAL	__end_of_writeInsChk
  4888                           	__end_of_writeInsChk:
  4889  0B3E                     	signat	_writeInsChk,4217
  4890                           	global	_writeInsNoChk
  4891                           
  4892 ;; *************** function _writeInsNoChk *****************
  4893 ;; Defined at:
  4894 ;;		line 138 in file "LCD_hd44780u_qy_2004a.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  iOpCode         1    wreg     unsigned char 
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;  iOpCode         1   24[BANK0 ] unsigned char 
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		wreg, status,2, status,0, pclath, cstack
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4909 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4910 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4911 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  4912 ;;Total ram usage:        2 bytes
  4913 ;; Hardware stack levels used:    1
  4914 ;; Hardware stack levels required when called:    7
  4915 ;; This function calls:
  4916 ;;		_SetToSendDataToLCD
  4917 ;;		_setData
  4918 ;; This function is called by:
  4919 ;;		_writeInsChk
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4923                           	line	138
  4924                           global __ptext11
  4925                           __ptext11:	;psect for function _writeInsNoChk
  4926  0B74                     psect	text11
  4927                           	file	"LCD_hd44780u_qy_2004a.c"
  4928                           	line	138
  4929                           	global	__size_of_writeInsNoChk
  4930                           	__size_of_writeInsNoChk	equ	__end_of_writeInsNoChk-_writeInsNoChk
  4931  0018                     	
  4932                           _writeInsNoChk:	
  4933  0B74                     ;incstack = 0
  4934                           	opt	stack 6
  4935                           ; Regs used in _writeInsNoChk: [wreg+status,2+status,0+pclath+cstack]
  4936                           ;writeInsNoChk@iOpCode stored from wreg
  4937                           	movlb 0	; select bank0
  4938  0B74  0020               	movwf	(writeInsNoChk@iOpCode)
  4939  0B75  00B8               	line	140
  4940                           	
  4941                           l3332:	
  4942  0B76                     ;LCD_hd44780u_qy_2004a.c: 138: void writeInsNoChk(char iOpCode);LCD_hd44780u_qy_2004a.c:
                                  139: {;LCD_hd44780u_qy_2004a.c: 140:   SetToSendDataToLCD();
  4943                           	fcall	_SetToSendDataToLCD
  4944  0B76  318B  2315  318B   	line	141
  4945                           	
  4946                           l3334:	
  4947  0B79                     ;LCD_hd44780u_qy_2004a.c: 141:   PORTAbits.RA4 = 0;
  4948                           	movlb 0	; select bank0
  4949  0B79  0020               	bcf	(12),4	;volatile
  4950  0B7A  120C               	line	142
  4951                           	
  4952                           l3336:	
  4953  0B7B                     ;LCD_hd44780u_qy_2004a.c: 142:   PORTAbits.RA7 = 0;
  4954                           	bcf	(12),7	;volatile
  4955  0B7B  138C               	line	143
  4956                           	
  4957                           l3338:	
  4958  0B7C                     ;LCD_hd44780u_qy_2004a.c: 143:   setData(iOpCode >> 4);
  4959                           	movf	(writeInsNoChk@iOpCode),w
  4960  0B7C  0838               	movwf	(??_writeInsNoChk+0)+0
  4961  0B7D  00B7               	movlw	04h
  4962  0B7E  3004               u2115:
  4963  0B7F                     	lsrf	(??_writeInsNoChk+0)+0,f
  4964  0B7F  36B7               	decfsz	wreg,f
  4965  0B80  0B89               	goto	u2115
  4966  0B81  2B7F               	movf	0+(??_writeInsNoChk+0)+0,w
  4967  0B82  0837               	fcall	_setData
  4968  0B83  318D  25C5  318B   	line	144
  4969                           	
  4970                           l3340:	
  4971  0B86                     ;LCD_hd44780u_qy_2004a.c: 144:   setData(iOpCode);
  4972                           	movlb 0	; select bank0
  4973  0B86  0020               	movf	(writeInsNoChk@iOpCode),w
  4974  0B87  0838               	fcall	_setData
  4975  0B88  318D  25C5  318B   	line	145
  4976                           	
  4977                           l318:	
  4978  0B8B                     	return
  4979  0B8B  0008               	opt stack 0
  4980                           GLOBAL	__end_of_writeInsNoChk
  4981                           	__end_of_writeInsNoChk:
  4982  0B8C                     	signat	_writeInsNoChk,4217
  4983                           	global	_WakeTemp
  4984                           
  4985 ;; *************** function _WakeTemp *****************
  4986 ;; Defined at:
  4987 ;;		line 108 in file "161518_temp_main.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;		None
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;		None
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  1    wreg      void 
  4994 ;; Registers used:
  4995 ;;		wreg, status,2, status,0
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5003 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5004 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5005 ;;Total ram usage:        1 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:    6
  5008 ;; This function calls:
  5009 ;;		Nothing
  5010 ;; This function is called by:
  5011 ;;		_main
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5015                           	file	"161518_temp_main.c"
  5016                           	line	108
  5017                           global __ptext12
  5018                           __ptext12:	;psect for function _WakeTemp
  5019  0B5F                     psect	text12
  5020                           	file	"161518_temp_main.c"
  5021                           	line	108
  5022                           	global	__size_of_WakeTemp
  5023                           	__size_of_WakeTemp	equ	__end_of_WakeTemp-_WakeTemp
  5024  0015                     	
  5025                           _WakeTemp:	
  5026  0B5F                     ;incstack = 0
  5027                           	opt	stack 9
  5028                           ; Regs used in _WakeTemp: [wreg+status,2+status,0]
  5029                           	line	110
  5030                           	
  5031                           l3732:	
  5032  0B5F                     	movlb 1	; select bank1
  5033  0B5F  0021               	bsf	(145)^080h,3	;volatile
  5034  0B60  1591               	line	111
  5035                           	
  5036                           l3734:	
  5037  0B61                     	movlb 0	; select bank0
  5038  0B61  0020               	clrf	(_wTrial)
  5039  0B62  01D2               	line	112
  5040                           	
  5041                           l3736:	
  5042  0B63                     	movf	((_wI2CTxBufferSize)),w
  5043  0B63  0855               	btfss	status,2
  5044  0B64  1D03               	goto	u2591
  5045  0B65  2B67               	goto	u2590
  5046  0B66  2B68               u2591:
  5047  0B67                     	goto	l131
  5048  0B67  2B73               u2590:
  5049  0B68                     	line	114
  5050                           	
  5051                           l3738:	
  5052  0B68                     	movlw	low(0B8h)
  5053  0B68  30B8               	movwf	(??_WakeTemp+0)+0
  5054  0B69  00B4               	movf	(??_WakeTemp+0)+0,w
  5055  0B6A  0834               	movlb 1	; select bank1
  5056  0B6B  0021               	movwf	(_wI2CTxBuffer)^080h
  5057  0B6C  00A7               	line	115
  5058                           	
  5059                           l3740:	
  5060  0B6D                     	movlb 0	; select bank0
  5061  0B6D  0020               	clrf	(_wI2CTxBufferSize)
  5062  0B6E  01D5               	incf	(_wI2CTxBufferSize),f
  5063  0B6F  0AD5               	line	116
  5064                           	
  5065                           l3742:	
  5066  0B70                     	movlb 4	; select bank4
  5067  0B70  0024               	bsf	(534)^0200h,0	;volatile
  5068  0B71  1416               	goto	l131
  5069  0B72  2B73               	line	117
  5070                           	
  5071                           l130:	
  5072  0B73                     	line	118
  5073                           	
  5074                           l131:	
  5075  0B73                     	return
  5076  0B73  0008               	opt stack 0
  5077                           GLOBAL	__end_of_WakeTemp
  5078                           	__end_of_WakeTemp:
  5079  0B74                     	signat	_WakeTemp,89
  5080                           	global	_ToggleBitRB5
  5081                           
  5082 ;; *************** function _ToggleBitRB5 *****************
  5083 ;; Defined at:
  5084 ;;		line 55 in file "161518_temp_main.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;		None
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;		None
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      void 
  5091 ;; Registers used:
  5092 ;;		None
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5102 ;;Total ram usage:        0 bytes
  5103 ;; Hardware stack levels used:    1
  5104 ;; Hardware stack levels required when called:    6
  5105 ;; This function calls:
  5106 ;;		Nothing
  5107 ;; This function is called by:
  5108 ;;		_main
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5112                           	line	55
  5113                           global __ptext13
  5114                           __ptext13:	;psect for function _ToggleBitRB5
  5115  0B29                     psect	text13
  5116                           	file	"161518_temp_main.c"
  5117                           	line	55
  5118                           	global	__size_of_ToggleBitRB5
  5119                           	__size_of_ToggleBitRB5	equ	__end_of_ToggleBitRB5-_ToggleBitRB5
  5120  000A                     	
  5121                           _ToggleBitRB5:	
  5122  0B29                     ;incstack = 0
  5123                           	opt	stack 9
  5124                           ; Regs used in _ToggleBitRB5: []
  5125                           	line	57
  5126                           	
  5127                           l3688:	
  5128  0B29                     	movlb 0	; select bank0
  5129  0B29  0020               	btfss	(13),5	;volatile
  5130  0B2A  1E8D               	goto	u2551
  5131  0B2B  2B2D               	goto	u2550
  5132  0B2C  2B2E               u2551:
  5133  0B2D                     	goto	l111
  5134  0B2D  2B30               u2550:
  5135  0B2E                     	line	59
  5136                           	
  5137                           l3690:	
  5138  0B2E                     	bcf	(13),5	;volatile
  5139  0B2E  128D               	line	60
  5140                           	goto	l113
  5141  0B2F  2B32               	line	61
  5142                           	
  5143                           l111:	
  5144  0B30                     	line	63
  5145                           	bsf	(13),5	;volatile
  5146  0B30  168D               	goto	l113
  5147  0B31  2B32               	line	64
  5148                           	
  5149                           l112:	
  5150  0B32                     	line	65
  5151                           	
  5152                           l113:	
  5153  0B32                     	return
  5154  0B32  0008               	opt stack 0
  5155                           GLOBAL	__end_of_ToggleBitRB5
  5156                           	__end_of_ToggleBitRB5:
  5157  0B33                     	signat	_ToggleBitRB5,89
  5158                           	global	_SetToGetTemp
  5159                           
  5160 ;; *************** function _SetToGetTemp *****************
  5161 ;; Defined at:
  5162 ;;		line 68 in file "161518_temp_main.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;		None
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;		None
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  1    wreg      void 
  5169 ;; Registers used:
  5170 ;;		wreg, status,2, status,0
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5178 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5179 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5180 ;;Total ram usage:        1 bytes
  5181 ;; Hardware stack levels used:    1
  5182 ;; Hardware stack levels required when called:    6
  5183 ;; This function calls:
  5184 ;;		Nothing
  5185 ;; This function is called by:
  5186 ;;		_main
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5190                           	line	68
  5191                           global __ptext14
  5192                           __ptext14:	;psect for function _SetToGetTemp
  5193  0C4E                     psect	text14
  5194                           	file	"161518_temp_main.c"
  5195                           	line	68
  5196                           	global	__size_of_SetToGetTemp
  5197                           	__size_of_SetToGetTemp	equ	__end_of_SetToGetTemp-_SetToGetTemp
  5198  0029                     	
  5199                           _SetToGetTemp:	
  5200  0C4E                     ;incstack = 0
  5201                           	opt	stack 9
  5202                           ; Regs used in _SetToGetTemp: [wreg+status,2+status,0]
  5203                           	line	70
  5204                           	
  5205                           l3692:	
  5206  0C4E                     	movlb 0	; select bank0
  5207  0C4E  0020               	clrf	(_wTrial)
  5208  0C4F  01D2               	line	71
  5209                           	
  5210                           l3694:	
  5211  0C50                     	movf	((_wI2CTxBufferSize)),w
  5212  0C50  0855               	btfss	status,2
  5213  0C51  1D03               	goto	u2561
  5214  0C52  2C54               	goto	u2560
  5215  0C53  2C55               u2561:
  5216  0C54                     	goto	l119
  5217  0C54  2C76               u2560:
  5218  0C55                     	line	73
  5219                           	
  5220                           l3696:	
  5221  0C55                     	movlb 1	; select bank1
  5222  0C55  0021               	bsf	(145)^080h,3	;volatile
  5223  0C56  1591               	line	74
  5224                           	movlb 4	; select bank4
  5225  0C57  0024               	bsf	(535)^0200h,7	;volatile
  5226  0C58  1797               	line	75
  5227                           	
  5228                           l3698:	
  5229  0C59                     	movlw	low(0B8h)
  5230  0C59  30B8               	movlb 0	; select bank0
  5231  0C5A  0020               	movwf	(??_SetToGetTemp+0)+0
  5232  0C5B  00B4               	movf	(??_SetToGetTemp+0)+0,w
  5233  0C5C  0834               	movlb 1	; select bank1
  5234  0C5D  0021               	movwf	(_wI2CTxBuffer)^080h
  5235  0C5E  00A7               	line	76
  5236                           	movlw	low(03h)
  5237  0C5F  3003               	movlb 0	; select bank0
  5238  0C60  0020               	movwf	(??_SetToGetTemp+0)+0
  5239  0C61  00B4               	movf	(??_SetToGetTemp+0)+0,w
  5240  0C62  0834               	movlb 1	; select bank1
  5241  0C63  0021               	movwf	0+(_wI2CTxBuffer)^080h+01h
  5242  0C64  00A8               	line	77
  5243                           	
  5244                           l3700:	
  5245  0C65                     	clrf	0+(_wI2CTxBuffer)^080h+02h
  5246  0C65  01A9               	line	78
  5247                           	
  5248                           l3702:	
  5249  0C66                     	movlw	low(04h)
  5250  0C66  3004               	movlb 0	; select bank0
  5251  0C67  0020               	movwf	(??_SetToGetTemp+0)+0
  5252  0C68  00B4               	movf	(??_SetToGetTemp+0)+0,w
  5253  0C69  0834               	movlb 1	; select bank1
  5254  0C6A  0021               	movwf	0+(_wI2CTxBuffer)^080h+03h
  5255  0C6B  00AA               	line	79
  5256                           	
  5257                           l3704:	
  5258  0C6C                     	movlw	low(04h)
  5259  0C6C  3004               	movlb 0	; select bank0
  5260  0C6D  0020               	movwf	(??_SetToGetTemp+0)+0
  5261  0C6E  00B4               	movf	(??_SetToGetTemp+0)+0,w
  5262  0C6F  0834               	movwf	(_wI2CTxBufferSize)
  5263  0C70  00D5               	line	80
  5264                           	
  5265                           l3706:	
  5266  0C71                     	movlb 1	; select bank1
  5267  0C71  0021               	clrf	(_wI2CCommandState)^080h
  5268  0C72  01A6               	line	81
  5269                           	
  5270                           l3708:	
  5271  0C73                     	movlb 4	; select bank4
  5272  0C73  0024               	bsf	(534)^0200h,0	;volatile
  5273  0C74  1416               	goto	l119
  5274  0C75  2C76               	line	83
  5275                           	
  5276                           l118:	
  5277  0C76                     	line	84
  5278                           	
  5279                           l119:	
  5280  0C76                     	return
  5281  0C76  0008               	opt stack 0
  5282                           GLOBAL	__end_of_SetToGetTemp
  5283                           	__end_of_SetToGetTemp:
  5284  0C77                     	signat	_SetToGetTemp,89
  5285                           	global	_PrintLog
  5286                           
  5287 ;; *************** function _PrintLog *****************
  5288 ;; Defined at:
  5289 ;;		line 119 in file "161518_temp_main.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;  iText           1    wreg     PTR unsigned char 
  5292 ;;		 -> wInterruptText(75), 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  iText           1   42[BANK0 ] PTR unsigned char 
  5295 ;;		 -> wInterruptText(75), 
  5296 ;;  wInterruptTe    1   41[BANK0 ] unsigned char 
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  1    wreg      void 
  5299 ;; Registers used:
  5300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5307 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5308 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5309 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  5310 ;;Total ram usage:        4 bytes
  5311 ;; Hardware stack levels used:    1
  5312 ;; Hardware stack levels required when called:   11
  5313 ;; This function calls:
  5314 ;;		_lcdWriteText
  5315 ;;		_memset
  5316 ;;		_strlen
  5317 ;; This function is called by:
  5318 ;;		_main
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5322                           	line	119
  5323                           global __ptext15
  5324                           __ptext15:	;psect for function _PrintLog
  5325  07CC                     psect	text15
  5326                           	file	"161518_temp_main.c"
  5327                           	line	119
  5328                           	global	__size_of_PrintLog
  5329                           	__size_of_PrintLog	equ	__end_of_PrintLog-_PrintLog
  5330  002E                     	
  5331                           _PrintLog:	
  5332  07CC                     ;incstack = 0
  5333                           	opt	stack 4
  5334                           ; Regs used in _PrintLog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5335                           ;PrintLog@iText stored from wreg
  5336                           	movlb 0	; select bank0
  5337  07CC  0020               	movwf	(PrintLog@iText)
  5338  07CD  00CA               	line	121
  5339                           	
  5340                           l3744:	
  5341  07CE                     	movf	(PrintLog@iText),w
  5342  07CE  084A               	movwf	(strlen@s)
  5343  07CF  00B4               	movlw	0x1
  5344  07D0  3001               
  5345                           	movwf	(strlen@s+1)
  5346  07D1  00B5               	fcall	_strlen
  5347  07D2  318C  2405  3187   	movlb 0	; select bank0
  5348  07D5  0020               	movf	(0+(?_strlen)),w
  5349  07D6  0834               	movwf	(??_PrintLog+0)+0
  5350  07D7  00C7               	movf	(??_PrintLog+0)+0,w
  5351  07D8  0847               	movwf	(PrintLog@wInterruptTextLen)
  5352  07D9  00C9               	line	123
  5353                           	
  5354                           l3746:	
  5355  07DA                     	movf	((PrintLog@wInterruptTextLen)),w
  5356  07DA  0849               	btfsc	status,2
  5357  07DB  1903               	goto	u2601
  5358  07DC  2FDE               	goto	u2600
  5359  07DD  2FDF               u2601:
  5360  07DE                     	goto	l135
  5361  07DE  2FF9               u2600:
  5362  07DF                     	line	125
  5363                           	
  5364                           l3748:	
  5365  07DF                     	movf	(PrintLog@iText),w
  5366  07DF  084A               	movwf	(lcdWriteText@iText)
  5367  07E0  00C1               	movlw	0x1
  5368  07E1  3001               
  5369                           	movwf	(lcdWriteText@iText+1)
  5370  07E2  00C2               	fcall	_lcdWriteText
  5371  07E3  318C  24A1  3187   	line	126
  5372                           	
  5373                           l3750:	
  5374  07E6                     	movlb 0	; select bank0
  5375  07E6  0020               	movf	(PrintLog@iText),w
  5376  07E7  084A               	movwf	(memset@dest)
  5377  07E8  00B4               	movlw	0x1
  5378  07E9  3001               
  5379                           	movwf	(memset@dest+1)
  5380  07EA  00B5               	movlw	0
  5381  07EB  3000               	movwf	(memset@c)
  5382  07EC  00B6               	movwf	(memset@c+1)
  5383  07ED  00B7               	movf	(PrintLog@wInterruptTextLen),w
  5384  07EE  0849               	movwf	(??_PrintLog+0)+0
  5385  07EF  00C7               	clrf	(??_PrintLog+0)+0+1
  5386  07F0  01C8               	movf	0+(??_PrintLog+0)+0,w
  5387  07F1  0847               	movwf	(memset@n)
  5388  07F2  00B8               	movf	1+(??_PrintLog+0)+0,w
  5389  07F3  0848               	movwf	(memset@n+1)
  5390  07F4  00B9               	fcall	_memset
  5391  07F5  3184  24B1  3187   	goto	l135
  5392  07F8  2FF9               	line	127
  5393                           	
  5394                           l134:	
  5395  07F9                     	line	128
  5396                           	
  5397                           l135:	
  5398  07F9                     	return
  5399  07F9  0008               	opt stack 0
  5400                           GLOBAL	__end_of_PrintLog
  5401                           	__end_of_PrintLog:
  5402  07FA                     	signat	_PrintLog,4217
  5403                           	global	_lcdWriteText
  5404                           
  5405 ;; *************** function _lcdWriteText *****************
  5406 ;; Defined at:
  5407 ;;		line 41 in file "LCD_hd44780u_qy_2004a.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;  iText           2   33[BANK0 ] PTR unsigned char 
  5410 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  5411 ;;		 -> STR_6(16), STR_5(16), STR_4(16), STR_3(16), 
  5412 ;;		 -> main@wConv(4), wInterruptText(75), 
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;  wCharReading    1   38[BANK0 ] unsigned char 
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  1    wreg      void 
  5417 ;; Registers used:
  5418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5424 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5425 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5426 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  5427 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  5428 ;;Total ram usage:        6 bytes
  5429 ;; Hardware stack levels used:    1
  5430 ;; Hardware stack levels required when called:   10
  5431 ;; This function calls:
  5432 ;;		_writeTxtChk
  5433 ;; This function is called by:
  5434 ;;		_PrintLog
  5435 ;;		_main
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5439                           	file	"LCD_hd44780u_qy_2004a.c"
  5440                           	line	41
  5441                           global __ptext16
  5442                           __ptext16:	;psect for function _lcdWriteText
  5443  0CA1                     psect	text16
  5444                           	file	"LCD_hd44780u_qy_2004a.c"
  5445                           	line	41
  5446                           	global	__size_of_lcdWriteText
  5447                           	__size_of_lcdWriteText	equ	__end_of_lcdWriteText-_lcdWriteText
  5448  002A                     	
  5449                           _lcdWriteText:	
  5450  0CA1                     ;incstack = 0
  5451                           	opt	stack 5
  5452                           ; Regs used in _lcdWriteText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5453                           	line	43
  5454                           	
  5455                           l3534:	
  5456  0CA1                     ;LCD_hd44780u_qy_2004a.c: 41: void lcdWriteText(char *iText);LCD_hd44780u_qy_2004a.c: 42
                                 :  {;LCD_hd44780u_qy_2004a.c: 43:   unsigned char wCharReadingPos = 0;
  5457                           	movlb 0	; select bank0
  5458  0CA1  0020               	clrf	(lcdWriteText@wCharReadingPos)
  5459  0CA2  01C6               	line	44
  5460                           ;LCD_hd44780u_qy_2004a.c: 44:   while( iText[wCharReadingPos] != 0)
  5461                           	goto	l3540
  5462  0CA3  2CB9               	
  5463                           l281:	
  5464  0CA4                     	line	46
  5465                           	
  5466                           l3536:	
  5467  0CA4                     ;LCD_hd44780u_qy_2004a.c: 45:   {;LCD_hd44780u_qy_2004a.c: 46:     writeTxtChk(iText[wCh
                                 arReadingPos]);
  5468                           	movf	(lcdWriteText@iText+1),w
  5469  0CA4  0842               	movwf	(??_lcdWriteText+0)+0+1
  5470  0CA5  00C4               	movf	(lcdWriteText@iText),w
  5471  0CA6  0841               	movwf	(??_lcdWriteText+0)+0
  5472  0CA7  00C3               	movf	(lcdWriteText@wCharReadingPos),w
  5473  0CA8  0846               	addwf	(??_lcdWriteText+0)+0,w
  5474  0CA9  0743               	movwf	fsr0l
  5475  0CAA  0084               	movf	(??_lcdWriteText+0)+1,w
  5476  0CAB  0844               	skipnc
  5477  0CAC  1803               	incf	(??_lcdWriteText+0)+1,w
  5478  0CAD  0A44               	movwf	fsr0h
  5479  0CAE  0085               
  5480                           	movf	indf0,w ;code access
  5481  0CAF  0800               	fcall	_writeTxtChk
  5482  0CB0  3186  263B  318C   	line	47
  5483                           	
  5484                           l3538:	
  5485  0CB3                     ;LCD_hd44780u_qy_2004a.c: 47:     wCharReadingPos++;
  5486                           	movlw	low(01h)
  5487  0CB3  3001               	movlb 0	; select bank0
  5488  0CB4  0020               	movwf	(??_lcdWriteText+0)+0
  5489  0CB5  00C3               	movf	(??_lcdWriteText+0)+0,w
  5490  0CB6  0843               	addwf	(lcdWriteText@wCharReadingPos),f
  5491  0CB7  07C6               	goto	l3540
  5492  0CB8  2CB9               	line	48
  5493                           ;LCD_hd44780u_qy_2004a.c: 48:   }
  5494                           	
  5495                           l280:	
  5496  0CB9                     	line	44
  5497                           	
  5498                           l3540:	
  5499  0CB9                     ;LCD_hd44780u_qy_2004a.c: 44:   while( iText[wCharReadingPos] != 0)
  5500                           	movf	(lcdWriteText@iText+1),w
  5501  0CB9  0842               	movwf	(??_lcdWriteText+0)+0+1
  5502  0CBA  00C4               	movf	(lcdWriteText@iText),w
  5503  0CBB  0841               	movwf	(??_lcdWriteText+0)+0
  5504  0CBC  00C3               	movf	(lcdWriteText@wCharReadingPos),w
  5505  0CBD  0846               	addwf	(??_lcdWriteText+0)+0,w
  5506  0CBE  0743               	movwf	fsr0l
  5507  0CBF  0084               	movf	(??_lcdWriteText+0)+1,w
  5508  0CC0  0844               	skipnc
  5509  0CC1  1803               	incf	(??_lcdWriteText+0)+1,w
  5510  0CC2  0A44               	movwf	fsr0h
  5511  0CC3  0085               
  5512                           	moviw	fsr0++
  5513  0CC4  0012               	btfss	status,2
  5514  0CC5  1D03               	goto	u2301
  5515  0CC6  2CC8               	goto	u2300
  5516  0CC7  2CC9               u2301:
  5517  0CC8                     	goto	l3536
  5518  0CC8  2CA4               u2300:
  5519  0CC9                     	goto	l283
  5520  0CC9  2CCA               	
  5521                           l282:	
  5522  0CCA                     	line	50
  5523                           	
  5524                           l283:	
  5525  0CCA                     	return
  5526  0CCA  0008               	opt stack 0
  5527                           GLOBAL	__end_of_lcdWriteText
  5528                           	__end_of_lcdWriteText:
  5529  0CCB                     	signat	_lcdWriteText,4217
  5530                           	global	_writeTxtChk
  5531                           
  5532 ;; *************** function _writeTxtChk *****************
  5533 ;; Defined at:
  5534 ;;		line 79 in file "LCD_hd44780u_qy_2004a.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;  iOpCode         1    wreg     unsigned char 
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;  iOpCode         1   32[BANK0 ] unsigned char 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  1    wreg      void 
  5541 ;; Registers used:
  5542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5549 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5550 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5551 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  5552 ;;Total ram usage:        3 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:    9
  5555 ;; This function calls:
  5556 ;;		_SetToSendDataToLCD
  5557 ;;		_setCursorPosition
  5558 ;;		_setData
  5559 ;;		_waitLCDBusy
  5560 ;; This function is called by:
  5561 ;;		_lcdWriteText
  5562 ;;		_lcdWriteRotText
  5563 ;; This function uses a non-reentrant model
  5564 ;;
  5565                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5566                           	line	79
  5567                           global __ptext17
  5568                           __ptext17:	;psect for function _writeTxtChk
  5569  063B                     psect	text17
  5570                           	file	"LCD_hd44780u_qy_2004a.c"
  5571                           	line	79
  5572                           	global	__size_of_writeTxtChk
  5573                           	__size_of_writeTxtChk	equ	__end_of_writeTxtChk-_writeTxtChk
  5574  0097                     	
  5575                           _writeTxtChk:	
  5576  063B                     ;incstack = 0
  5577                           	opt	stack 5
  5578                           ; Regs used in _writeTxtChk: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5579                           ;writeTxtChk@iOpCode stored from wreg
  5580                           	movlb 0	; select bank0
  5581  063B  0020               	movwf	(writeTxtChk@iOpCode)
  5582  063C  00C0               	line	81
  5583                           	
  5584                           l3382:	
  5585  063D                     ;LCD_hd44780u_qy_2004a.c: 79: void writeTxtChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 80
                                 : {;LCD_hd44780u_qy_2004a.c: 81:   SetToSendDataToLCD();
  5586                           	fcall	_SetToSendDataToLCD
  5587  063D  318B  2315  3186   	line	82
  5588                           	
  5589                           l3384:	
  5590  0640                     ;LCD_hd44780u_qy_2004a.c: 82:   PORTAbits.RA4 = 1;
  5591                           	movlb 0	; select bank0
  5592  0640  0020               	bsf	(12),4	;volatile
  5593  0641  160C               	line	83
  5594                           	
  5595                           l3386:	
  5596  0642                     ;LCD_hd44780u_qy_2004a.c: 83:   PORTAbits.RA7 = 0;
  5597                           	bcf	(12),7	;volatile
  5598  0642  138C               	line	84
  5599                           	
  5600                           l3388:	
  5601  0643                     ;LCD_hd44780u_qy_2004a.c: 84:   if(iOpCode == '\n')
  5602                           		movlw	10
  5603  0643  300A               	xorwf	((writeTxtChk@iOpCode)),w
  5604  0644  0640               	btfss	status,2
  5605  0645  1D03               	goto	u2161
  5606  0646  2E48               	goto	u2160
  5607  0647  2E49               u2161:
  5608  0648                     	goto	l3418
  5609  0648  2E9B               u2160:
  5610  0649                     	line	86
  5611                           	
  5612                           l3390:	
  5613  0649                     ;LCD_hd44780u_qy_2004a.c: 85:   {;LCD_hd44780u_qy_2004a.c: 86:    if(mWritingPosition < 
                                 20)
  5614                           	movlw	low(014h)
  5615  0649  3014               	subwf	(_mWritingPosition),w
  5616  064A  0259               	skipnc
  5617  064B  1803               	goto	u2171
  5618  064C  2E4E               	goto	u2170
  5619  064D  2E4F               u2171:
  5620  064E                     	goto	l3394
  5621  064E  2E55               u2170:
  5622  064F                     	line	88
  5623                           	
  5624                           l3392:	
  5625  064F                     ;LCD_hd44780u_qy_2004a.c: 87:    {;LCD_hd44780u_qy_2004a.c: 88:        setCursorPosition
                                 (1,0);
  5626                           	clrf	(setCursorPosition@iPosition)
  5627  064F  01B9               	movlw	low(01h)
  5628  0650  3001               	fcall	_setCursorPosition
  5629  0651  318F  273E  3186   	line	89
  5630                           ;LCD_hd44780u_qy_2004a.c: 89:    }
  5631                           	goto	l305
  5632  0654  2ED1               	line	90
  5633                           ;LCD_hd44780u_qy_2004a.c: 90:    else if(mWritingPosition < 40)
  5634                           	
  5635                           l299:	
  5636  0655                     	
  5637                           l3394:	
  5638  0655                     	movlw	low(028h)
  5639  0655  3028               	movlb 0	; select bank0
  5640  0656  0020               	subwf	(_mWritingPosition),w
  5641  0657  0259               	skipnc
  5642  0658  1803               	goto	u2181
  5643  0659  2E5B               	goto	u2180
  5644  065A  2E5C               u2181:
  5645  065B                     	goto	l3398
  5646  065B  2E62               u2180:
  5647  065C                     	line	92
  5648                           	
  5649                           l3396:	
  5650  065C                     ;LCD_hd44780u_qy_2004a.c: 91:    {;LCD_hd44780u_qy_2004a.c: 92:        setCursorPosition
                                 (2,0);
  5651                           	clrf	(setCursorPosition@iPosition)
  5652  065C  01B9               	movlw	low(02h)
  5653  065D  3002               	fcall	_setCursorPosition
  5654  065E  318F  273E  3186   	line	93
  5655                           ;LCD_hd44780u_qy_2004a.c: 93:    }
  5656                           	goto	l305
  5657  0661  2ED1               	line	94
  5658                           ;LCD_hd44780u_qy_2004a.c: 94:    else if(mWritingPosition < 60)
  5659                           	
  5660                           l301:	
  5661  0662                     	
  5662                           l3398:	
  5663  0662                     	movlw	low(03Ch)
  5664  0662  303C               	movlb 0	; select bank0
  5665  0663  0020               	subwf	(_mWritingPosition),w
  5666  0664  0259               	skipnc
  5667  0665  1803               	goto	u2191
  5668  0666  2E68               	goto	u2190
  5669  0667  2E69               u2191:
  5670  0668                     	goto	l3402
  5671  0668  2E6F               u2190:
  5672  0669                     	line	96
  5673                           	
  5674                           l3400:	
  5675  0669                     ;LCD_hd44780u_qy_2004a.c: 95:    {;LCD_hd44780u_qy_2004a.c: 96:        setCursorPosition
                                 (3,0);
  5676                           	clrf	(setCursorPosition@iPosition)
  5677  0669  01B9               	movlw	low(03h)
  5678  066A  3003               	fcall	_setCursorPosition
  5679  066B  318F  273E  3186   	line	97
  5680                           ;LCD_hd44780u_qy_2004a.c: 97:    }
  5681                           	goto	l305
  5682  066E  2ED1               	line	98
  5683                           ;LCD_hd44780u_qy_2004a.c: 98:    else
  5684                           	
  5685                           l303:	
  5686  066F                     	line	100
  5687                           	
  5688                           l3402:	
  5689  066F                     ;LCD_hd44780u_qy_2004a.c: 99:    {;LCD_hd44780u_qy_2004a.c: 100:        setCursorPositio
                                 n(0,0);
  5690                           	movlb 0	; select bank0
  5691  066F  0020               	clrf	(setCursorPosition@iPosition)
  5692  0670  01B9               	movlw	low(0)
  5693  0671  3000               	fcall	_setCursorPosition
  5694  0672  318F  273E  3186   	goto	l305
  5695  0675  2ED1               	line	101
  5696                           ;LCD_hd44780u_qy_2004a.c: 101:    }
  5697                           	
  5698                           l304:	
  5699  0676                     	goto	l305
  5700  0676  2ED1               	
  5701                           l302:	
  5702  0677                     	goto	l305
  5703  0677  2ED1               	
  5704                           l300:	
  5705  0678                     	goto	l305
  5706  0678  2ED1               	line	102
  5707                           	
  5708                           l3404:	
  5709  0679                     ;LCD_hd44780u_qy_2004a.c: 102:    return;
  5710                           	goto	l305
  5711  0679  2ED1               	line	103
  5712                           ;LCD_hd44780u_qy_2004a.c: 103:   }
  5713                           	
  5714                           l298:	
  5715  067A                     	line	104
  5716                           ;LCD_hd44780u_qy_2004a.c: 104:   switch(mWritingPosition)
  5717                           	goto	l3418
  5718  067A  2E9B               	line	106
  5719                           ;LCD_hd44780u_qy_2004a.c: 105:   {;LCD_hd44780u_qy_2004a.c: 106:     case 20:
  5720                           	
  5721                           l307:	
  5722  067B                     	line	107
  5723                           	
  5724                           l3406:	
  5725  067B                     ;LCD_hd44780u_qy_2004a.c: 107:       setCursorPosition(1,0);
  5726                           	movlb 0	; select bank0
  5727  067B  0020               	clrf	(setCursorPosition@iPosition)
  5728  067C  01B9               	movlw	low(01h)
  5729  067D  3001               	fcall	_setCursorPosition
  5730  067E  318F  273E  3186   	line	108
  5731                           ;LCD_hd44780u_qy_2004a.c: 108:       break;
  5732                           	goto	l3420
  5733  0681  2EB2               	line	109
  5734                           ;LCD_hd44780u_qy_2004a.c: 109:     case 40:
  5735                           	
  5736                           l309:	
  5737  0682                     	line	110
  5738                           	
  5739                           l3408:	
  5740  0682                     ;LCD_hd44780u_qy_2004a.c: 110:       setCursorPosition(2,0);
  5741                           	movlb 0	; select bank0
  5742  0682  0020               	clrf	(setCursorPosition@iPosition)
  5743  0683  01B9               	movlw	low(02h)
  5744  0684  3002               	fcall	_setCursorPosition
  5745  0685  318F  273E  3186   	line	111
  5746                           ;LCD_hd44780u_qy_2004a.c: 111:       break;
  5747                           	goto	l3420
  5748  0688  2EB2               	line	112
  5749                           ;LCD_hd44780u_qy_2004a.c: 112:     case 60:
  5750                           	
  5751                           l310:	
  5752  0689                     	line	113
  5753                           	
  5754                           l3410:	
  5755  0689                     ;LCD_hd44780u_qy_2004a.c: 113:       setCursorPosition(3,0);
  5756                           	movlb 0	; select bank0
  5757  0689  0020               	clrf	(setCursorPosition@iPosition)
  5758  068A  01B9               	movlw	low(03h)
  5759  068B  3003               	fcall	_setCursorPosition
  5760  068C  318F  273E  3186   	line	114
  5761                           ;LCD_hd44780u_qy_2004a.c: 114:       break;
  5762                           	goto	l3420
  5763  068F  2EB2               	line	115
  5764                           ;LCD_hd44780u_qy_2004a.c: 115:     case 80:
  5765                           	
  5766                           l311:	
  5767  0690                     	line	116
  5768                           	
  5769                           l3412:	
  5770  0690                     ;LCD_hd44780u_qy_2004a.c: 116:       setCursorPosition(0,0);
  5771                           	movlb 0	; select bank0
  5772  0690  0020               	clrf	(setCursorPosition@iPosition)
  5773  0691  01B9               	movlw	low(0)
  5774  0692  3000               	fcall	_setCursorPosition
  5775  0693  318F  273E  3186   	line	117
  5776                           	
  5777                           l3414:	
  5778  0696                     ;LCD_hd44780u_qy_2004a.c: 117:       mWritingPosition = 0;
  5779                           	movlb 0	; select bank0
  5780  0696  0020               	clrf	(_mWritingPosition)
  5781  0697  01D9               	line	118
  5782                           ;LCD_hd44780u_qy_2004a.c: 118:       break;
  5783                           	goto	l3420
  5784  0698  2EB2               	line	119
  5785                           ;LCD_hd44780u_qy_2004a.c: 119:     default:
  5786                           	
  5787                           l312:	
  5788  0699                     	line	120
  5789                           ;LCD_hd44780u_qy_2004a.c: 120:       break;
  5790                           	goto	l3420
  5791  0699  2EB2               	line	121
  5792                           	
  5793                           l3416:	
  5794  069A                     ;LCD_hd44780u_qy_2004a.c: 121:   }
  5795                           	goto	l3420
  5796  069A  2EB2               	
  5797                           l306:	
  5798  069B                     	
  5799                           l3418:	
  5800  069B                     	movlb 0	; select bank0
  5801  069B  0020               	movf	(_mWritingPosition),w
  5802  069C  0859               	movwf	(??_writeTxtChk+0)+0
  5803  069D  00BE               	clrf	(??_writeTxtChk+0)+0+1
  5804  069E  01BF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5805                           ; Switch size 1, requested type "space"
  5806                           ; Number of cases is 1, Range of values is 0 to 0
  5807                           ; switch strategies available:
  5808                           ; Name         Instructions Cycles
  5809                           ; simple_byte            4     3 (average)
  5810                           ; direct_byte            8     6 (fixed)
  5811                           ; jumptable            260     6 (fixed)
  5812                           ;	Chosen strategy is simple_byte
  5813                           
  5814                           	movf 1+(??_writeTxtChk+0)+0,w
  5815  069F  083F               	opt asmopt_push
  5816                           	opt asmopt_off
  5817                           	xorlw	0^0	; case 0
  5818  06A0  3A00               	skipnz
  5819  06A1  1903               	goto	l4482
  5820  06A2  2EA4               	goto	l3420
  5821  06A3  2EB2               	opt asmopt_pop
  5822                           	
  5823                           l4482:	
  5824  06A4                     ; Switch size 1, requested type "space"
  5825                           ; Number of cases is 4, Range of values is 20 to 80
  5826                           ; switch strategies available:
  5827                           ; Name         Instructions Cycles
  5828                           ; simple_byte           13     7 (average)
  5829                           ; direct_byte          131     9 (fixed)
  5830                           ; jumptable            263     9 (fixed)
  5831                           ;	Chosen strategy is simple_byte
  5832                           
  5833                           	movf 0+(??_writeTxtChk+0)+0,w
  5834  06A4  083E               	opt asmopt_push
  5835                           	opt asmopt_off
  5836                           	xorlw	20^0	; case 20
  5837  06A5  3A14               	skipnz
  5838  06A6  1903               	goto	l3406
  5839  06A7  2E7B               	xorlw	40^20	; case 40
  5840  06A8  3A3C               	skipnz
  5841  06A9  1903               	goto	l3408
  5842  06AA  2E82               	xorlw	60^40	; case 60
  5843  06AB  3A14               	skipnz
  5844  06AC  1903               	goto	l3410
  5845  06AD  2E89               	xorlw	80^60	; case 80
  5846  06AE  3A6C               	skipnz
  5847  06AF  1903               	goto	l3412
  5848  06B0  2E90               	goto	l3420
  5849  06B1  2EB2               	opt asmopt_pop
  5850                           
  5851                           	
  5852                           l308:	
  5853  06B2                     	line	122
  5854                           	
  5855                           l3420:	
  5856  06B2                     ;LCD_hd44780u_qy_2004a.c: 122:   waitLCDBusy();
  5857                           	fcall	_waitLCDBusy
  5858  06B2  318D  2522  3186   	line	123
  5859                           	
  5860                           l3422:	
  5861  06B5                     ;LCD_hd44780u_qy_2004a.c: 123:   SetToSendDataToLCD();
  5862                           	fcall	_SetToSendDataToLCD
  5863  06B5  318B  2315  3186   	line	124
  5864                           	
  5865                           l3424:	
  5866  06B8                     ;LCD_hd44780u_qy_2004a.c: 124:   PORTAbits.RA4 = 1;
  5867                           	movlb 0	; select bank0
  5868  06B8  0020               	bsf	(12),4	;volatile
  5869  06B9  160C               	line	125
  5870                           	
  5871                           l3426:	
  5872  06BA                     ;LCD_hd44780u_qy_2004a.c: 125:   PORTAbits.RA7 = 0;
  5873                           	bcf	(12),7	;volatile
  5874  06BA  138C               	line	126
  5875                           	
  5876                           l3428:	
  5877  06BB                     ;LCD_hd44780u_qy_2004a.c: 126:   setData(iOpCode >> 4);
  5878                           	movf	(writeTxtChk@iOpCode),w
  5879  06BB  0840               	movwf	(??_writeTxtChk+0)+0
  5880  06BC  00BE               	movlw	04h
  5881  06BD  3004               u2205:
  5882  06BE                     	lsrf	(??_writeTxtChk+0)+0,f
  5883  06BE  36BE               	decfsz	wreg,f
  5884  06BF  0B89               	goto	u2205
  5885  06C0  2EBE               	movf	0+(??_writeTxtChk+0)+0,w
  5886  06C1  083E               	fcall	_setData
  5887  06C2  318D  25C5  3186   	line	127
  5888                           	
  5889                           l3430:	
  5890  06C5                     ;LCD_hd44780u_qy_2004a.c: 127:   setData(iOpCode);
  5891                           	movlb 0	; select bank0
  5892  06C5  0020               	movf	(writeTxtChk@iOpCode),w
  5893  06C6  0840               	fcall	_setData
  5894  06C7  318D  25C5  3186   	line	128
  5895                           	
  5896                           l3432:	
  5897  06CA                     ;LCD_hd44780u_qy_2004a.c: 128:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  5898                           		opt asmopt_push
  5899                           	opt asmopt_off
  5900                           	nop2	;2 cycle nop
  5901  06CA  3200               	nop2	;2 cycle nop
  5902  06CB  3200               	opt asmopt_pop
  5903                           
  5904                           	line	129
  5905                           	
  5906                           l3434:	
  5907  06CC                     ;LCD_hd44780u_qy_2004a.c: 129:   mWritingPosition++;
  5908                           	movlw	low(01h)
  5909  06CC  3001               	movlb 0	; select bank0
  5910  06CD  0020               	movwf	(??_writeTxtChk+0)+0
  5911  06CE  00BE               	movf	(??_writeTxtChk+0)+0,w
  5912  06CF  083E               	addwf	(_mWritingPosition),f
  5913  06D0  07D9               	line	130
  5914                           	
  5915                           l305:	
  5916  06D1                     	return
  5917  06D1  0008               	opt stack 0
  5918                           GLOBAL	__end_of_writeTxtChk
  5919                           	__end_of_writeTxtChk:
  5920  06D2                     	signat	_writeTxtChk,4217
  5921                           	global	_setCursorPosition
  5922                           
  5923 ;; *************** function _setCursorPosition *****************
  5924 ;; Defined at:
  5925 ;;		line 254 in file "LCD_hd44780u_qy_2004a.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;  iLine           1    wreg     unsigned char 
  5928 ;;  iPosition       1   25[BANK0 ] unsigned char 
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;  iLine           1   28[BANK0 ] unsigned char 
  5931 ;;  wLCDIndex       1   29[BANK0 ] unsigned char 
  5932 ;; Return value:  Size  Location     Type
  5933 ;;                  1    wreg      void 
  5934 ;; Registers used:
  5935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5936 ;; Tracked objects:
  5937 ;;		On entry : 0/0
  5938 ;;		On exit  : 0/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5941 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5942 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5943 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5944 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  5945 ;;Total ram usage:        5 bytes
  5946 ;; Hardware stack levels used:    1
  5947 ;; Hardware stack levels required when called:    8
  5948 ;; This function calls:
  5949 ;;		_SetToSendDataToLCD
  5950 ;;		_setData
  5951 ;;		_waitLCDBusy
  5952 ;; This function is called by:
  5953 ;;		_main
  5954 ;;		_writeTxtChk
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5958                           	line	254
  5959                           global __ptext18
  5960                           __ptext18:	;psect for function _setCursorPosition
  5961  0F3E                     psect	text18
  5962                           	file	"LCD_hd44780u_qy_2004a.c"
  5963                           	line	254
  5964                           	global	__size_of_setCursorPosition
  5965                           	__size_of_setCursorPosition	equ	__end_of_setCursorPosition-_setCursorPosition
  5966  0060                     	
  5967                           _setCursorPosition:	
  5968  0F3E                     ;incstack = 0
  5969                           	opt	stack 7
  5970                           ; Regs used in _setCursorPosition: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5971                           ;setCursorPosition@iLine stored from wreg
  5972                           	movlb 0	; select bank0
  5973  0F3E  0020               	movwf	(setCursorPosition@iLine)
  5974  0F3F  00BC               	line	256
  5975                           	
  5976                           l3302:	
  5977  0F40                     ;LCD_hd44780u_qy_2004a.c: 254: void setCursorPosition(char iLine, char iPosition);LCD_hd
                                 44780u_qy_2004a.c: 255: {;LCD_hd44780u_qy_2004a.c: 256:   char wLCDIndex=0;
  5978                           	clrf	(setCursorPosition@wLCDIndex)
  5979  0F40  01BD               	line	258
  5980                           ;LCD_hd44780u_qy_2004a.c: 258:   switch(iLine)
  5981                           	goto	l3314
  5982  0F41  2F6E               	line	260
  5983                           ;LCD_hd44780u_qy_2004a.c: 259:   {;LCD_hd44780u_qy_2004a.c: 260:       case 0:
  5984                           	
  5985                           l376:	
  5986  0F42                     	line	261
  5987                           	
  5988                           l3304:	
  5989  0F42                     ;LCD_hd44780u_qy_2004a.c: 261:           wLCDIndex = 0x00 + iPosition;
  5990                           	movf	(setCursorPosition@iPosition),w
  5991  0F42  0839               	movwf	(??_setCursorPosition+0)+0
  5992  0F43  00BA               	movf	(??_setCursorPosition+0)+0,w
  5993  0F44  083A               	movwf	(setCursorPosition@wLCDIndex)
  5994  0F45  00BD               	line	262
  5995                           ;LCD_hd44780u_qy_2004a.c: 262:           mWritingPosition = iPosition;
  5996                           	movf	(setCursorPosition@iPosition),w
  5997  0F46  0839               	movwf	(??_setCursorPosition+0)+0
  5998  0F47  00BA               	movf	(??_setCursorPosition+0)+0,w
  5999  0F48  083A               	movwf	(_mWritingPosition)
  6000  0F49  00D9               	line	263
  6001                           ;LCD_hd44780u_qy_2004a.c: 263:           break;
  6002                           	goto	l3316
  6003  0F4A  2F84               	line	264
  6004                           ;LCD_hd44780u_qy_2004a.c: 264:       case 1:
  6005                           	
  6006                           l378:	
  6007  0F4B                     	line	265
  6008                           	
  6009                           l3306:	
  6010  0F4B                     ;LCD_hd44780u_qy_2004a.c: 265:           wLCDIndex = 0x40 + iPosition;
  6011                           	movf	(setCursorPosition@iPosition),w
  6012  0F4B  0839               	addlw	040h
  6013  0F4C  3E40               	movwf	(??_setCursorPosition+0)+0
  6014  0F4D  00BA               	movf	(??_setCursorPosition+0)+0,w
  6015  0F4E  083A               	movwf	(setCursorPosition@wLCDIndex)
  6016  0F4F  00BD               	line	266
  6017                           ;LCD_hd44780u_qy_2004a.c: 266:           mWritingPosition = 20 + iPosition;
  6018                           	movf	(setCursorPosition@iPosition),w
  6019  0F50  0839               	addlw	014h
  6020  0F51  3E14               	movwf	(??_setCursorPosition+0)+0
  6021  0F52  00BA               	movf	(??_setCursorPosition+0)+0,w
  6022  0F53  083A               	movwf	(_mWritingPosition)
  6023  0F54  00D9               	line	267
  6024                           ;LCD_hd44780u_qy_2004a.c: 267:           break;
  6025                           	goto	l3316
  6026  0F55  2F84               	line	268
  6027                           ;LCD_hd44780u_qy_2004a.c: 268:       case 2:
  6028                           	
  6029                           l379:	
  6030  0F56                     	line	269
  6031                           	
  6032                           l3308:	
  6033  0F56                     ;LCD_hd44780u_qy_2004a.c: 269:           wLCDIndex = 0x14 + iPosition;
  6034                           	movf	(setCursorPosition@iPosition),w
  6035  0F56  0839               	addlw	014h
  6036  0F57  3E14               	movwf	(??_setCursorPosition+0)+0
  6037  0F58  00BA               	movf	(??_setCursorPosition+0)+0,w
  6038  0F59  083A               	movwf	(setCursorPosition@wLCDIndex)
  6039  0F5A  00BD               	line	270
  6040                           ;LCD_hd44780u_qy_2004a.c: 270:           mWritingPosition = 40 + iPosition;
  6041                           	movf	(setCursorPosition@iPosition),w
  6042  0F5B  0839               	addlw	028h
  6043  0F5C  3E28               	movwf	(??_setCursorPosition+0)+0
  6044  0F5D  00BA               	movf	(??_setCursorPosition+0)+0,w
  6045  0F5E  083A               	movwf	(_mWritingPosition)
  6046  0F5F  00D9               	line	271
  6047                           ;LCD_hd44780u_qy_2004a.c: 271:           break;
  6048                           	goto	l3316
  6049  0F60  2F84               	line	272
  6050                           ;LCD_hd44780u_qy_2004a.c: 272:       case 3:
  6051                           	
  6052                           l380:	
  6053  0F61                     	line	273
  6054                           	
  6055                           l3310:	
  6056  0F61                     ;LCD_hd44780u_qy_2004a.c: 273:           wLCDIndex = 0x54 + iPosition;
  6057                           	movf	(setCursorPosition@iPosition),w
  6058  0F61  0839               	addlw	054h
  6059  0F62  3E54               	movwf	(??_setCursorPosition+0)+0
  6060  0F63  00BA               	movf	(??_setCursorPosition+0)+0,w
  6061  0F64  083A               	movwf	(setCursorPosition@wLCDIndex)
  6062  0F65  00BD               	line	274
  6063                           ;LCD_hd44780u_qy_2004a.c: 274:           mWritingPosition = 60 + iPosition;
  6064                           	movf	(setCursorPosition@iPosition),w
  6065  0F66  0839               	addlw	03Ch
  6066  0F67  3E3C               	movwf	(??_setCursorPosition+0)+0
  6067  0F68  00BA               	movf	(??_setCursorPosition+0)+0,w
  6068  0F69  083A               	movwf	(_mWritingPosition)
  6069  0F6A  00D9               	line	275
  6070                           ;LCD_hd44780u_qy_2004a.c: 275:           break;
  6071                           	goto	l3316
  6072  0F6B  2F84               	line	276
  6073                           ;LCD_hd44780u_qy_2004a.c: 276:       default:
  6074                           	
  6075                           l381:	
  6076  0F6C                     	line	277
  6077                           ;LCD_hd44780u_qy_2004a.c: 277:       break;
  6078                           	goto	l3316
  6079  0F6C  2F84               	line	278
  6080                           	
  6081                           l3312:	
  6082  0F6D                     ;LCD_hd44780u_qy_2004a.c: 278:   }
  6083                           	goto	l3316
  6084  0F6D  2F84               	
  6085                           l375:	
  6086  0F6E                     	
  6087                           l3314:	
  6088  0F6E                     	movf	(setCursorPosition@iLine),w
  6089  0F6E  083C               	movwf	(??_setCursorPosition+0)+0
  6090  0F6F  00BA               	clrf	(??_setCursorPosition+0)+0+1
  6091  0F70  01BB               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6092                           ; Switch size 1, requested type "space"
  6093                           ; Number of cases is 1, Range of values is 0 to 0
  6094                           ; switch strategies available:
  6095                           ; Name         Instructions Cycles
  6096                           ; simple_byte            4     3 (average)
  6097                           ; direct_byte            8     6 (fixed)
  6098                           ; jumptable            260     6 (fixed)
  6099                           ;	Chosen strategy is simple_byte
  6100                           
  6101                           	movf 1+(??_setCursorPosition+0)+0,w
  6102  0F71  083B               	opt asmopt_push
  6103                           	opt asmopt_off
  6104                           	xorlw	0^0	; case 0
  6105  0F72  3A00               	skipnz
  6106  0F73  1903               	goto	l4484
  6107  0F74  2F76               	goto	l3316
  6108  0F75  2F84               	opt asmopt_pop
  6109                           	
  6110                           l4484:	
  6111  0F76                     ; Switch size 1, requested type "space"
  6112                           ; Number of cases is 4, Range of values is 0 to 3
  6113                           ; switch strategies available:
  6114                           ; Name         Instructions Cycles
  6115                           ; simple_byte           13     7 (average)
  6116                           ; direct_byte           14     6 (fixed)
  6117                           ; jumptable            260     6 (fixed)
  6118                           ;	Chosen strategy is simple_byte
  6119                           
  6120                           	movf 0+(??_setCursorPosition+0)+0,w
  6121  0F76  083A               	opt asmopt_push
  6122                           	opt asmopt_off
  6123                           	xorlw	0^0	; case 0
  6124  0F77  3A00               	skipnz
  6125  0F78  1903               	goto	l3304
  6126  0F79  2F42               	xorlw	1^0	; case 1
  6127  0F7A  3A01               	skipnz
  6128  0F7B  1903               	goto	l3306
  6129  0F7C  2F4B               	xorlw	2^1	; case 2
  6130  0F7D  3A03               	skipnz
  6131  0F7E  1903               	goto	l3308
  6132  0F7F  2F56               	xorlw	3^2	; case 3
  6133  0F80  3A01               	skipnz
  6134  0F81  1903               	goto	l3310
  6135  0F82  2F61               	goto	l3316
  6136  0F83  2F84               	opt asmopt_pop
  6137                           
  6138                           	
  6139                           l377:	
  6140  0F84                     	line	280
  6141                           	
  6142                           l3316:	
  6143  0F84                     ;LCD_hd44780u_qy_2004a.c: 280:   waitLCDBusy();
  6144                           	fcall	_waitLCDBusy
  6145  0F84  318D  2522  318F   	line	282
  6146                           	
  6147                           l3318:	
  6148  0F87                     ;LCD_hd44780u_qy_2004a.c: 282:   SetToSendDataToLCD();
  6149                           	fcall	_SetToSendDataToLCD
  6150  0F87  318B  2315  318F   	line	283
  6151                           	
  6152                           l3320:	
  6153  0F8A                     ;LCD_hd44780u_qy_2004a.c: 283:   PORTAbits.RA4 = 0;
  6154                           	movlb 0	; select bank0
  6155  0F8A  0020               	bcf	(12),4	;volatile
  6156  0F8B  120C               	line	284
  6157                           	
  6158                           l3322:	
  6159  0F8C                     ;LCD_hd44780u_qy_2004a.c: 284:   PORTAbits.RA7 = 0;
  6160                           	bcf	(12),7	;volatile
  6161  0F8C  138C               	line	285
  6162                           	
  6163                           l3324:	
  6164  0F8D                     ;LCD_hd44780u_qy_2004a.c: 285:   setData((wLCDIndex >> 4) | 0x8 );
  6165                           	movf	(setCursorPosition@wLCDIndex),w
  6166  0F8D  083D               	movwf	(??_setCursorPosition+0)+0
  6167  0F8E  00BA               	movlw	04h
  6168  0F8F  3004               u2105:
  6169  0F90                     	lsrf	(??_setCursorPosition+0)+0,f
  6170  0F90  36BA               	decfsz	wreg,f
  6171  0F91  0B89               	goto	u2105
  6172  0F92  2F90               	movf	0+(??_setCursorPosition+0)+0,w
  6173  0F93  083A               	iorlw	08h
  6174  0F94  3808               	fcall	_setData
  6175  0F95  318D  25C5  318F   	line	286
  6176                           	
  6177                           l3326:	
  6178  0F98                     ;LCD_hd44780u_qy_2004a.c: 286:   setData(wLCDIndex);
  6179                           	movlb 0	; select bank0
  6180  0F98  0020               	movf	(setCursorPosition@wLCDIndex),w
  6181  0F99  083D               	fcall	_setData
  6182  0F9A  318D  25C5  318F   	line	288
  6183                           	
  6184                           l382:	
  6185  0F9D                     	return
  6186  0F9D  0008               	opt stack 0
  6187                           GLOBAL	__end_of_setCursorPosition
  6188                           	__end_of_setCursorPosition:
  6189  0F9E                     	signat	_setCursorPosition,8313
  6190                           	global	_waitLCDBusy
  6191                           
  6192 ;; *************** function _waitLCDBusy *****************
  6193 ;; Defined at:
  6194 ;;		line 162 in file "LCD_hd44780u_qy_2004a.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;		None
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  busyFlag        2   23[BANK0 ] int 
  6199 ;; Return value:  Size  Location     Type
  6200 ;;                  1    wreg      void 
  6201 ;; Registers used:
  6202 ;;		wreg, status,2, status,0, pclath, cstack
  6203 ;; Tracked objects:
  6204 ;;		On entry : 0/0
  6205 ;;		On exit  : 0/0
  6206 ;;		Unchanged: 0/0
  6207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6209 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6210 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  6211 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  6212 ;;Total ram usage:        5 bytes
  6213 ;; Hardware stack levels used:    1
  6214 ;; Hardware stack levels required when called:    7
  6215 ;; This function calls:
  6216 ;;		_SetToReadDataFromLCD
  6217 ;; This function is called by:
  6218 ;;		_writeTxtChk
  6219 ;;		_writeInsChk
  6220 ;;		_setCursorPosition
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  6224                           	line	162
  6225                           global __ptext19
  6226                           __ptext19:	;psect for function _waitLCDBusy
  6227  0D22                     psect	text19
  6228                           	file	"LCD_hd44780u_qy_2004a.c"
  6229                           	line	162
  6230                           	global	__size_of_waitLCDBusy
  6231                           	__size_of_waitLCDBusy	equ	__end_of_waitLCDBusy-_waitLCDBusy
  6232  002D                     	
  6233                           _waitLCDBusy:	
  6234  0D22                     ;incstack = 0
  6235                           	opt	stack 6
  6236                           ; Regs used in _waitLCDBusy: [wreg+status,2+status,0+pclath+cstack]
  6237                           	line	164
  6238                           	
  6239                           l3284:	
  6240  0D22                     ;LCD_hd44780u_qy_2004a.c: 164:   PORTAbits.RA4 = 0;
  6241                           	movlb 0	; select bank0
  6242  0D22  0020               	bcf	(12),4	;volatile
  6243  0D23  120C               	line	165
  6244                           ;LCD_hd44780u_qy_2004a.c: 165:   PORTAbits.RA7 = 1;
  6245                           	bsf	(12),7	;volatile
  6246  0D24  178C               	line	167
  6247                           	
  6248                           l3286:	
  6249  0D25                     ;LCD_hd44780u_qy_2004a.c: 167:   SetToReadDataFromLCD();
  6250                           	fcall	_SetToReadDataFromLCD
  6251  0D25  318B  231B  318D   	line	169
  6252                           	
  6253                           l3288:	
  6254  0D28                     ;LCD_hd44780u_qy_2004a.c: 169:   int busyFlag = 1;
  6255                           	movlw	01h
  6256  0D28  3001               	movlb 0	; select bank0
  6257  0D29  0020               	movwf	(waitLCDBusy@busyFlag)
  6258  0D2A  00B7               	movlw	0
  6259  0D2B  3000               	movwf	((waitLCDBusy@busyFlag))+1
  6260  0D2C  00B8               	line	170
  6261                           ;LCD_hd44780u_qy_2004a.c: 170:   while(busyFlag == 1)
  6262                           	goto	l327
  6263  0D2D  2D46               	
  6264                           l328:	
  6265  0D2E                     	line	173
  6266                           ;LCD_hd44780u_qy_2004a.c: 171:   {;LCD_hd44780u_qy_2004a.c: 173:     PORTAbits.RA5 = 1;

  6267                           	bsf	(12),5	;volatile
  6268  0D2E  168C               	line	174
  6269                           ;LCD_hd44780u_qy_2004a.c: 174:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  6270                           		opt asmopt_push
  6271                           	opt asmopt_off
  6272                           	nop2	;2 cycle nop
  6273  0D2F  3200               	nop2	;2 cycle nop
  6274  0D30  3200               	opt asmopt_pop
  6275                           
  6276                           	line	175
  6277                           	
  6278                           l3290:	
  6279  0D31                     ;LCD_hd44780u_qy_2004a.c: 175:     busyFlag = PORTAbits.RA3;
  6280                           	movlb 0	; select bank0
  6281  0D31  0020               	rrf	(12),w	;volatile
  6282  0D32  0C0C               	movwf	(??_waitLCDBusy+0)+0
  6283  0D33  00B4               	rrf	(??_waitLCDBusy+0)+0,f
  6284  0D34  0CB4               	rrf	(??_waitLCDBusy+0)+0,w
  6285  0D35  0C34               	andlw	(1<<1)-1
  6286  0D36  3901               	movwf	(??_waitLCDBusy+1)+0
  6287  0D37  00B5               	clrf	(??_waitLCDBusy+1)+0+1
  6288  0D38  01B6               	movf	0+(??_waitLCDBusy+1)+0,w
  6289  0D39  0835               	movwf	(waitLCDBusy@busyFlag)
  6290  0D3A  00B7               	movf	1+(??_waitLCDBusy+1)+0,w
  6291  0D3B  0836               	movwf	(waitLCDBusy@busyFlag+1)
  6292  0D3C  00B8               	line	176
  6293                           	
  6294                           l3292:	
  6295  0D3D                     ;LCD_hd44780u_qy_2004a.c: 176:     PORTAbits.RA5 = 0;
  6296                           	bcf	(12),5	;volatile
  6297  0D3D  128C               	line	177
  6298                           	
  6299                           l3294:	
  6300  0D3E                     ;LCD_hd44780u_qy_2004a.c: 177:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  6301                           		opt asmopt_push
  6302                           	opt asmopt_off
  6303                           	nop2	;2 cycle nop
  6304  0D3E  3200               	nop2	;2 cycle nop
  6305  0D3F  3200               	nop2	;2 cycle nop
  6306  0D40  3200               	nop2	;2 cycle nop
  6307  0D41  3200               	opt asmopt_pop
  6308                           
  6309                           	line	179
  6310                           	
  6311                           l3296:	
  6312  0D42                     ;LCD_hd44780u_qy_2004a.c: 179:     PORTAbits.RA5 = 1;
  6313                           	movlb 0	; select bank0
  6314  0D42  0020               	bsf	(12),5	;volatile
  6315  0D43  168C               	line	180
  6316                           	
  6317                           l3298:	
  6318  0D44                     ;LCD_hd44780u_qy_2004a.c: 180:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  6319                           		opt asmopt_push
  6320                           	opt asmopt_off
  6321                           	nop2	;2 cycle nop
  6322  0D44  3200               	nop2	;2 cycle nop
  6323  0D45  3200               	opt asmopt_pop
  6324                           
  6325                           	line	181
  6326                           ;LCD_hd44780u_qy_2004a.c: 181:   }
  6327                           	
  6328                           l327:	
  6329  0D46                     	line	170
  6330                           ;LCD_hd44780u_qy_2004a.c: 170:   while(busyFlag == 1)
  6331                           	movlb 0	; select bank0
  6332  0D46  0020               		decf	((waitLCDBusy@busyFlag)),w
  6333  0D47  0337               iorwf	((waitLCDBusy@busyFlag+1)),w
  6334  0D48  0438               	btfsc	status,2
  6335  0D49  1903               	goto	u2091
  6336  0D4A  2D4C               	goto	u2090
  6337  0D4B  2D4D               u2091:
  6338  0D4C                     	goto	l328
  6339  0D4C  2D2E               u2090:
  6340  0D4D                     	goto	l330
  6341  0D4D  2D4E               	
  6342                           l329:	
  6343  0D4E                     	line	182
  6344                           	
  6345                           l330:	
  6346  0D4E                     	return
  6347  0D4E  0008               	opt stack 0
  6348                           GLOBAL	__end_of_waitLCDBusy
  6349                           	__end_of_waitLCDBusy:
  6350  0D4F                     	signat	_waitLCDBusy,89
  6351                           	global	_SetToReadDataFromLCD
  6352                           
  6353 ;; *************** function _SetToReadDataFromLCD *****************
  6354 ;; Defined at:
  6355 ;;		line 147 in file "LCD_hd44780u_qy_2004a.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;		None
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;		None
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  1    wreg      void 
  6362 ;; Registers used:
  6363 ;;		None
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6373 ;;Total ram usage:        0 bytes
  6374 ;; Hardware stack levels used:    1
  6375 ;; Hardware stack levels required when called:    6
  6376 ;; This function calls:
  6377 ;;		Nothing
  6378 ;; This function is called by:
  6379 ;;		_waitLCDBusy
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6383                           	line	147
  6384                           global __ptext20
  6385                           __ptext20:	;psect for function _SetToReadDataFromLCD
  6386  0B1B                     psect	text20
  6387                           	file	"LCD_hd44780u_qy_2004a.c"
  6388                           	line	147
  6389                           	global	__size_of_SetToReadDataFromLCD
  6390                           	__size_of_SetToReadDataFromLCD	equ	__end_of_SetToReadDataFromLCD-_SetToReadDataFromLCD

  6391  0006                     	
  6392                           _SetToReadDataFromLCD:	
  6393  0B1B                     ;incstack = 0
  6394                           	opt	stack 6
  6395                           ; Regs used in _SetToReadDataFromLCD: []
  6396                           	line	149
  6397                           	
  6398                           l3270:	
  6399  0B1B                     ;LCD_hd44780u_qy_2004a.c: 149:   TRISAbits.TRISA3 = 1;
  6400                           	movlb 1	; select bank1
  6401  0B1B  0021               	bsf	(140)^080h,3	;volatile
  6402  0B1C  158C               	line	150
  6403                           ;LCD_hd44780u_qy_2004a.c: 150:   TRISAbits.TRISA2 = 1;
  6404                           	bsf	(140)^080h,2	;volatile
  6405  0B1D  150C               	line	151
  6406                           ;LCD_hd44780u_qy_2004a.c: 151:   TRISAbits.TRISA1 = 1;
  6407                           	bsf	(140)^080h,1	;volatile
  6408  0B1E  148C               	line	152
  6409                           ;LCD_hd44780u_qy_2004a.c: 152:   TRISAbits.TRISA0 = 1;
  6410                           	bsf	(140)^080h,0	;volatile
  6411  0B1F  140C               	line	153
  6412                           	
  6413                           l321:	
  6414  0B20                     	return
  6415  0B20  0008               	opt stack 0
  6416                           GLOBAL	__end_of_SetToReadDataFromLCD
  6417                           	__end_of_SetToReadDataFromLCD:
  6418  0B21                     	signat	_SetToReadDataFromLCD,89
  6419                           	global	_setData
  6420                           
  6421 ;; *************** function _setData *****************
  6422 ;; Defined at:
  6423 ;;		line 67 in file "LCD_hd44780u_qy_2004a.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;  iValue          1    wreg     unsigned char 
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;  iValue          1   22[BANK0 ] unsigned char 
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1    wreg      void 
  6430 ;; Registers used:
  6431 ;;		wreg, status,2, status,0
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6438 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6439 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6440 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  6441 ;;Total ram usage:        3 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    6
  6444 ;; This function calls:
  6445 ;;		Nothing
  6446 ;; This function is called by:
  6447 ;;		_initLCD
  6448 ;;		_writeTxtChk
  6449 ;;		_writeInsNoChk
  6450 ;;		_setCursorPosition
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6454                           	line	67
  6455                           global __ptext21
  6456                           __ptext21:	;psect for function _setData
  6457  0DC5                     psect	text21
  6458                           	file	"LCD_hd44780u_qy_2004a.c"
  6459                           	line	67
  6460                           	global	__size_of_setData
  6461                           	__size_of_setData	equ	__end_of_setData-_setData
  6462  003C                     	
  6463                           _setData:	
  6464  0DC5                     ;incstack = 0
  6465                           	opt	stack 6
  6466                           ; Regs used in _setData: [wreg+status,2+status,0]
  6467                           ;setData@iValue stored from wreg
  6468                           	movlb 0	; select bank0
  6469  0DC5  0020               	movwf	(setData@iValue)
  6470  0DC6  00B6               	line	69
  6471                           	
  6472                           l3272:	
  6473  0DC7                     ;LCD_hd44780u_qy_2004a.c: 67: void setData(char iValue);LCD_hd44780u_qy_2004a.c: 68: {;L
                                 CD_hd44780u_qy_2004a.c: 69:   PORTAbits.RA5 = 1;
  6474                           	bsf	(12),5	;volatile
  6475  0DC7  168C               	line	70
  6476                           	
  6477                           l3274:	
  6478  0DC8                     ;LCD_hd44780u_qy_2004a.c: 70:   PORTAbits.RA3 = (iValue & 0x8) >> 3;
  6479                           	movf	(setData@iValue),w
  6480  0DC8  0836               	movwf	(??_setData+0)+0
  6481  0DC9  00B4               	movlw	03h
  6482  0DCA  3003               u2075:
  6483  0DCB                     	lsrf	(??_setData+0)+0,f
  6484  0DCB  36B4               	decfsz	wreg,f
  6485  0DCC  0B89               	goto	u2075
  6486  0DCD  2DCB               	movf	0+(??_setData+0)+0,w
  6487  0DCE  0834               	andlw	01h
  6488  0DCF  3901               	movwf	(??_setData+1)+0
  6489  0DD0  00B5               	rlf	(??_setData+1)+0,f
  6490  0DD1  0DB5               	rlf	(??_setData+1)+0,f
  6491  0DD2  0DB5               	rlf	(??_setData+1)+0,f
  6492  0DD3  0DB5               	movf	(12),w	;volatile
  6493  0DD4  080C               	xorwf	(??_setData+1)+0,w
  6494  0DD5  0635               	andlw	not (((1<<1)-1)<<3)
  6495  0DD6  39F7               	xorwf	(??_setData+1)+0,w
  6496  0DD7  0635               	movwf	(12)	;volatile
  6497  0DD8  008C               	line	71
  6498                           ;LCD_hd44780u_qy_2004a.c: 71:   PORTAbits.RA2 = (iValue & 0x4) >> 2;
  6499                           	movf	(setData@iValue),w
  6500  0DD9  0836               	movwf	(??_setData+0)+0
  6501  0DDA  00B4               	movlw	02h
  6502  0DDB  3002               u2085:
  6503  0DDC                     	lsrf	(??_setData+0)+0,f
  6504  0DDC  36B4               	decfsz	wreg,f
  6505  0DDD  0B89               	goto	u2085
  6506  0DDE  2DDC               	movf	0+(??_setData+0)+0,w
  6507  0DDF  0834               	andlw	01h
  6508  0DE0  3901               	movwf	(??_setData+1)+0
  6509  0DE1  00B5               	rlf	(??_setData+1)+0,f
  6510  0DE2  0DB5               	rlf	(??_setData+1)+0,f
  6511  0DE3  0DB5               	movf	(12),w	;volatile
  6512  0DE4  080C               	xorwf	(??_setData+1)+0,w
  6513  0DE5  0635               	andlw	not (((1<<1)-1)<<2)
  6514  0DE6  39FB               	xorwf	(??_setData+1)+0,w
  6515  0DE7  0635               	movwf	(12)	;volatile
  6516  0DE8  008C               	line	72
  6517                           ;LCD_hd44780u_qy_2004a.c: 72:   PORTAbits.RA1 = (iValue & 0x2) >> 1;
  6518                           	lsrf	(setData@iValue),w
  6519  0DE9  3636               	andlw	01h
  6520  0DEA  3901               	movwf	(??_setData+0)+0
  6521  0DEB  00B4               	rlf	(??_setData+0)+0,f
  6522  0DEC  0DB4               	movf	(12),w	;volatile
  6523  0DED  080C               	xorwf	(??_setData+0)+0,w
  6524  0DEE  0634               	andlw	not (((1<<1)-1)<<1)
  6525  0DEF  39FD               	xorwf	(??_setData+0)+0,w
  6526  0DF0  0634               	movwf	(12)	;volatile
  6527  0DF1  008C               	line	73
  6528                           ;LCD_hd44780u_qy_2004a.c: 73:   PORTAbits.RA0 = (iValue & 0x1) ;
  6529                           	movlw	low(01h)
  6530  0DF2  3001               	andwf	(setData@iValue),w
  6531  0DF3  0536               	movwf	(??_setData+0)+0
  6532  0DF4  00B4               	movf	(12),w	;volatile
  6533  0DF5  080C               	xorwf	0+(??_setData+0)+0,w
  6534  0DF6  0634               	andlw	not ((1<<1)-1)
  6535  0DF7  39FE               	xorwf	0+(??_setData+0)+0,w
  6536  0DF8  0634               	movwf	(12)	;volatile
  6537  0DF9  008C               	line	74
  6538                           	
  6539                           l3276:	
  6540  0DFA                     ;LCD_hd44780u_qy_2004a.c: 74:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  6541                           		opt asmopt_push
  6542                           	opt asmopt_off
  6543                           	nop2	;2 cycle nop
  6544  0DFA  3200               	nop2	;2 cycle nop
  6545  0DFB  3200               	opt asmopt_pop
  6546                           
  6547                           	line	75
  6548                           	
  6549                           l3278:	
  6550  0DFC                     ;LCD_hd44780u_qy_2004a.c: 75:   PORTAbits.RA5 = 0;
  6551                           	movlb 0	; select bank0
  6552  0DFC  0020               	bcf	(12),5	;volatile
  6553  0DFD  128C               	line	76
  6554                           	
  6555                           l3280:	
  6556  0DFE                     ;LCD_hd44780u_qy_2004a.c: 76:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  6557                           		opt asmopt_push
  6558                           	opt asmopt_off
  6559                           	nop2	;2 cycle nop
  6560  0DFE  3200               	nop2	;2 cycle nop
  6561  0DFF  3200               	opt asmopt_pop
  6562                           
  6563                           	line	77
  6564                           	
  6565                           l295:	
  6566  0E00                     	return
  6567  0E00  0008               	opt stack 0
  6568                           GLOBAL	__end_of_setData
  6569                           	__end_of_setData:
  6570  0E01                     	signat	_setData,4217
  6571                           	global	_SetToSendDataToLCD
  6572                           
  6573 ;; *************** function _SetToSendDataToLCD *****************
  6574 ;; Defined at:
  6575 ;;		line 154 in file "LCD_hd44780u_qy_2004a.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;		None
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;		None
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  1    wreg      void 
  6582 ;; Registers used:
  6583 ;;		None
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6593 ;;Total ram usage:        0 bytes
  6594 ;; Hardware stack levels used:    1
  6595 ;; Hardware stack levels required when called:    6
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		_writeTxtChk
  6600 ;;		_writeInsNoChk
  6601 ;;		_setCursorPosition
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6605                           	line	154
  6606                           global __ptext22
  6607                           __ptext22:	;psect for function _SetToSendDataToLCD
  6608  0B15                     psect	text22
  6609                           	file	"LCD_hd44780u_qy_2004a.c"
  6610                           	line	154
  6611                           	global	__size_of_SetToSendDataToLCD
  6612                           	__size_of_SetToSendDataToLCD	equ	__end_of_SetToSendDataToLCD-_SetToSendDataToLCD
  6613  0006                     	
  6614                           _SetToSendDataToLCD:	
  6615  0B15                     ;incstack = 0
  6616                           	opt	stack 6
  6617                           ; Regs used in _SetToSendDataToLCD: []
  6618                           	line	156
  6619                           	
  6620                           l3282:	
  6621  0B15                     ;LCD_hd44780u_qy_2004a.c: 156:   TRISAbits.TRISA3 = 0;;
  6622                           	movlb 1	; select bank1
  6623  0B15  0021               	bcf	(140)^080h,3	;volatile
  6624  0B16  118C               	line	157
  6625                           ;LCD_hd44780u_qy_2004a.c: 157:   TRISAbits.TRISA2 = 0;;
  6626                           	bcf	(140)^080h,2	;volatile
  6627  0B17  110C               	line	158
  6628                           ;LCD_hd44780u_qy_2004a.c: 158:   TRISAbits.TRISA1 = 0;;
  6629                           	bcf	(140)^080h,1	;volatile
  6630  0B18  108C               	line	159
  6631                           ;LCD_hd44780u_qy_2004a.c: 159:   TRISAbits.TRISA0 = 0;;
  6632                           	bcf	(140)^080h,0	;volatile
  6633  0B19  100C               	line	160
  6634                           	
  6635                           l324:	
  6636  0B1A                     	return
  6637  0B1A  0008               	opt stack 0
  6638                           GLOBAL	__end_of_SetToSendDataToLCD
  6639                           	__end_of_SetToSendDataToLCD:
  6640  0B1B                     	signat	_SetToSendDataToLCD,89
  6641                           	global	_GetTemp
  6642                           
  6643 ;; *************** function _GetTemp *****************
  6644 ;; Defined at:
  6645 ;;		line 94 in file "161518_temp_main.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;		None
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;		None
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  1    wreg      void 
  6652 ;; Registers used:
  6653 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6662 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6663 ;;Total ram usage:        1 bytes
  6664 ;; Hardware stack levels used:    1
  6665 ;; Hardware stack levels required when called:    7
  6666 ;; This function calls:
  6667 ;;		_memset
  6668 ;; This function is called by:
  6669 ;;		_main
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  6673                           	file	"161518_temp_main.c"
  6674                           	line	94
  6675                           global __ptext23
  6676                           __ptext23:	;psect for function _GetTemp
  6677  0C77                     psect	text23
  6678                           	file	"161518_temp_main.c"
  6679                           	line	94
  6680                           	global	__size_of_GetTemp
  6681                           	__size_of_GetTemp	equ	__end_of_GetTemp-_GetTemp
  6682  002A                     	
  6683                           _GetTemp:	
  6684  0C77                     ;incstack = 0
  6685                           	opt	stack 8
  6686                           ; Regs used in _GetTemp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6687                           	line	96
  6688                           	
  6689                           l3714:	
  6690  0C77                     	movlb 0	; select bank0
  6691  0C77  0020               	clrf	(_wTrial)
  6692  0C78  01D2               	line	97
  6693                           	
  6694                           l3716:	
  6695  0C79                     	movf	((_wI2CTxBufferSize)),w
  6696  0C79  0855               	btfss	status,2
  6697  0C7A  1D03               	goto	u2581
  6698  0C7B  2C7D               	goto	u2580
  6699  0C7C  2C7E               u2581:
  6700  0C7D                     	goto	l127
  6701  0C7D  2CA0               u2580:
  6702  0C7E                     	line	99
  6703                           	
  6704                           l3718:	
  6705  0C7E                     	movlb 1	; select bank1
  6706  0C7E  0021               	bsf	(145)^080h,3	;volatile
  6707  0C7F  1591               	line	100
  6708                           	
  6709                           l3720:	
  6710  0C80                     	movlw	low(_wReceptionBuffer)
  6711  0C80  3034               	movlb 0	; select bank0
  6712  0C81  0020               	movwf	(memset@dest)
  6713  0C82  00B4               	movlw	high(_wReceptionBuffer)
  6714  0C83  3001               	movwf	(memset@dest+1)
  6715  0C84  00B5               	movlw	0
  6716  0C85  3000               	movwf	(memset@c)
  6717  0C86  00B6               	movwf	(memset@c+1)
  6718  0C87  00B7               	movlw	01Eh
  6719  0C88  301E               	movwf	(memset@n)
  6720  0C89  00B8               	movlw	0
  6721  0C8A  3000               	movwf	((memset@n))+1
  6722  0C8B  00B9               	fcall	_memset
  6723  0C8C  3184  24B1  318C   	line	101
  6724                           	
  6725                           l3722:	
  6726  0C8F                     	movlb 0	; select bank0
  6727  0C8F  0020               	clrf	(_wReceptionBufferPosition)
  6728  0C90  01D8               	line	102
  6729                           	
  6730                           l3724:	
  6731  0C91                     	movlw	low(0B9h)
  6732  0C91  30B9               	movwf	(??_GetTemp+0)+0
  6733  0C92  00C2               	movf	(??_GetTemp+0)+0,w
  6734  0C93  0842               	movlb 1	; select bank1
  6735  0C94  0021               	movwf	(_wI2CTxBuffer)^080h
  6736  0C95  00A7               	line	103
  6737                           	
  6738                           l3726:	
  6739  0C96                     	movlw	low(08h)
  6740  0C96  3008               	movlb 0	; select bank0
  6741  0C97  0020               	movwf	(??_GetTemp+0)+0
  6742  0C98  00C2               	movf	(??_GetTemp+0)+0,w
  6743  0C99  0842               	movwf	(_wI2CRxBufferSize)
  6744  0C9A  00D4               	line	104
  6745                           	
  6746                           l3728:	
  6747  0C9B                     	clrf	(_wI2CTxBufferSize)
  6748  0C9B  01D5               	incf	(_wI2CTxBufferSize),f
  6749  0C9C  0AD5               	line	105
  6750                           	
  6751                           l3730:	
  6752  0C9D                     	movlb 4	; select bank4
  6753  0C9D  0024               	bsf	(534)^0200h,0	;volatile
  6754  0C9E  1416               	goto	l127
  6755  0C9F  2CA0               	line	106
  6756                           	
  6757                           l126:	
  6758  0CA0                     	line	107
  6759                           	
  6760                           l127:	
  6761  0CA0                     	return
  6762  0CA0  0008               	opt stack 0
  6763                           GLOBAL	__end_of_GetTemp
  6764                           	__end_of_GetTemp:
  6765  0CA1                     	signat	_GetTemp,89
  6766                           	global	_memset
  6767                           
  6768 ;; *************** function _memset *****************
  6769 ;; Defined at:
  6770 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;  dest            2   20[BANK0 ] PTR void 
  6773 ;;		 -> wInterruptText(75), wReceptionBuffer(30), wI2CTxBuffer(20), 
  6774 ;;  c               2   22[BANK0 ] int 
  6775 ;;  n               2   24[BANK0 ] unsigned int 
  6776 ;; Auto vars:     Size  Location     Type
  6777 ;;  s               2   32[BANK0 ] PTR unsigned char 
  6778 ;;		 -> wInterruptText(75), wReceptionBuffer(30), wI2CTxBuffer(20), 
  6779 ;;  k               2   30[BANK0 ] unsigned int 
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  2   20[BANK0 ] PTR void 
  6782 ;; Registers used:
  6783 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6789 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  6790 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6791 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6792 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
  6793 ;;Total ram usage:       14 bytes
  6794 ;; Hardware stack levels used:    1
  6795 ;; Hardware stack levels required when called:    6
  6796 ;; This function calls:
  6797 ;;		Nothing
  6798 ;; This function is called by:
  6799 ;;		_GetTemp
  6800 ;;		_PrintLog
  6801 ;;		_main
  6802 ;; This function uses a non-reentrant model
  6803 ;;
  6804                           psect	text24,local,class=CODE,delta=2,merge=1,group=2
  6805                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  6806                           	line	4
  6807                           global __ptext24
  6808                           __ptext24:	;psect for function _memset
  6809  04B1                     psect	text24
  6810                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  6811                           	line	4
  6812                           	global	__size_of_memset
  6813                           	__size_of_memset	equ	__end_of_memset-_memset
  6814  00D1                     	
  6815                           _memset:	
  6816  04B1                     ;incstack = 0
  6817                           	opt	stack 9
  6818                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6819                           	line	6
  6820                           	
  6821                           l3492:	
  6822  04B1                     	movlb 0	; select bank0
  6823  04B1  0020               	movf	(memset@dest+1),w
  6824  04B2  0835               	movwf	(memset@s+1)
  6825  04B3  00C1               	movf	(memset@dest),w
  6826  04B4  0834               	movwf	(memset@s)
  6827  04B5  00C0               	line	13
  6828                           	
  6829                           l3494:	
  6830  04B6                     	movf	((memset@n)),w
  6831  04B6  0838               iorwf	((memset@n+1)),w
  6832  04B7  0439               	btfss	status,2
  6833  04B8  1D03               	goto	u2251
  6834  04B9  2CBB               	goto	u2250
  6835  04BA  2CBC               u2251:
  6836  04BB                     	goto	l3498
  6837  04BB  2CBE               u2250:
  6838  04BC                     	goto	l821
  6839  04BC  2D81               	
  6840                           l3496:	
  6841  04BD                     ;	Return value of _memset is never used
  6842                           	goto	l821
  6843  04BD  2D81               	
  6844                           l820:	
  6845  04BE                     	line	14
  6846                           	
  6847                           l3498:	
  6848  04BE                     	movf	(memset@s),w
  6849  04BE  0840               	movwf	fsr1l
  6850  04BF  0086               	movf	(memset@s+1),w
  6851  04C0  0841               	movwf	fsr1h
  6852  04C1  0087               	movf	(memset@c),w
  6853  04C2  0836               	movwf	indf1
  6854  04C3  0081               	line	15
  6855                           	
  6856                           l3500:	
  6857  04C4                     	movf	(memset@n),w
  6858  04C4  0838               	addlw	0FFh
  6859  04C5  3EFF               	movwf	(??_memset+0)+0
  6860  04C6  00BA               	movlw	0FFh
  6861  04C7  30FF               	addwfc	(memset@n+1),w
  6862  04C8  3D39               	movwf	1+(??_memset+0)+0
  6863  04C9  00BB               	movf	0+(??_memset+0)+0,w
  6864  04CA  083A               	addwf	(memset@s),w
  6865  04CB  0740               	movwf	(??_memset+2)+0
  6866  04CC  00BC               	movf	1+(??_memset+0)+0,w
  6867  04CD  083B               	addwfc	(memset@s+1),w
  6868  04CE  3D41               	movwf	1+(??_memset+2)+0
  6869  04CF  00BD               	movf	0+(??_memset+2)+0,w
  6870  04D0  083C               	movwf	fsr1l
  6871  04D1  0086               	movf	1+(??_memset+2)+0,w
  6872  04D2  083D               	movwf	fsr1h
  6873  04D3  0087               	movf	(memset@c),w
  6874  04D4  0836               	movwf	indf1
  6875  04D5  0081               	line	16
  6876                           	
  6877                           l3502:	
  6878  04D6                     	movlw	0
  6879  04D6  3000               	subwf	(memset@n+1),w
  6880  04D7  0239               	movlw	03h
  6881  04D8  3003               	skipnz
  6882  04D9  1903               	subwf	(memset@n),w
  6883  04DA  0238               	skipnc
  6884  04DB  1803               	goto	u2261
  6885  04DC  2CDE               	goto	u2260
  6886  04DD  2CDF               u2261:
  6887  04DE                     	goto	l3506
  6888  04DE  2CE1               u2260:
  6889  04DF                     	goto	l821
  6890  04DF  2D81               	
  6891                           l3504:	
  6892  04E0                     ;	Return value of _memset is never used
  6893                           	goto	l821
  6894  04E0  2D81               	
  6895                           l822:	
  6896  04E1                     	line	17
  6897                           	
  6898                           l3506:	
  6899  04E1                     	movf	(memset@s),w
  6900  04E1  0840               	addlw	01h
  6901  04E2  3E01               	movwf	(??_memset+0)+0
  6902  04E3  00BA               	movlw	0
  6903  04E4  3000               	addwfc	(memset@s+1),w
  6904  04E5  3D41               	movwf	1+(??_memset+0)+0
  6905  04E6  00BB               	movf	0+(??_memset+0)+0,w
  6906  04E7  083A               	movwf	fsr1l
  6907  04E8  0086               	movf	1+(??_memset+0)+0,w
  6908  04E9  083B               	movwf	fsr1h
  6909  04EA  0087               	movf	(memset@c),w
  6910  04EB  0836               	movwf	indf1
  6911  04EC  0081               	line	18
  6912                           	movf	(memset@s),w
  6913  04ED  0840               	addlw	02h
  6914  04EE  3E02               	movwf	(??_memset+0)+0
  6915  04EF  00BA               	movlw	0
  6916  04F0  3000               	addwfc	(memset@s+1),w
  6917  04F1  3D41               	movwf	1+(??_memset+0)+0
  6918  04F2  00BB               	movf	0+(??_memset+0)+0,w
  6919  04F3  083A               	movwf	fsr1l
  6920  04F4  0086               	movf	1+(??_memset+0)+0,w
  6921  04F5  083B               	movwf	fsr1h
  6922  04F6  0087               	movf	(memset@c),w
  6923  04F7  0836               	movwf	indf1
  6924  04F8  0081               	line	19
  6925                           	movf	(memset@n),w
  6926  04F9  0838               	addlw	0FEh
  6927  04FA  3EFE               	movwf	(??_memset+0)+0
  6928  04FB  00BA               	movlw	0FFh
  6929  04FC  30FF               	addwfc	(memset@n+1),w
  6930  04FD  3D39               	movwf	1+(??_memset+0)+0
  6931  04FE  00BB               	movf	0+(??_memset+0)+0,w
  6932  04FF  083A               	addwf	(memset@s),w
  6933  0500  0740               	movwf	(??_memset+2)+0
  6934  0501  00BC               	movf	1+(??_memset+0)+0,w
  6935  0502  083B               	addwfc	(memset@s+1),w
  6936  0503  3D41               	movwf	1+(??_memset+2)+0
  6937  0504  00BD               	movf	0+(??_memset+2)+0,w
  6938  0505  083C               	movwf	fsr1l
  6939  0506  0086               	movf	1+(??_memset+2)+0,w
  6940  0507  083D               	movwf	fsr1h
  6941  0508  0087               	movf	(memset@c),w
  6942  0509  0836               	movwf	indf1
  6943  050A  0081               	line	20
  6944                           	movf	(memset@n),w
  6945  050B  0838               	addlw	0FDh
  6946  050C  3EFD               	movwf	(??_memset+0)+0
  6947  050D  00BA               	movlw	0FFh
  6948  050E  30FF               	addwfc	(memset@n+1),w
  6949  050F  3D39               	movwf	1+(??_memset+0)+0
  6950  0510  00BB               	movf	0+(??_memset+0)+0,w
  6951  0511  083A               	addwf	(memset@s),w
  6952  0512  0740               	movwf	(??_memset+2)+0
  6953  0513  00BC               	movf	1+(??_memset+0)+0,w
  6954  0514  083B               	addwfc	(memset@s+1),w
  6955  0515  3D41               	movwf	1+(??_memset+2)+0
  6956  0516  00BD               	movf	0+(??_memset+2)+0,w
  6957  0517  083C               	movwf	fsr1l
  6958  0518  0086               	movf	1+(??_memset+2)+0,w
  6959  0519  083D               	movwf	fsr1h
  6960  051A  0087               	movf	(memset@c),w
  6961  051B  0836               	movwf	indf1
  6962  051C  0081               	line	21
  6963                           	
  6964                           l3508:	
  6965  051D                     	movlw	0
  6966  051D  3000               	subwf	(memset@n+1),w
  6967  051E  0239               	movlw	07h
  6968  051F  3007               	skipnz
  6969  0520  1903               	subwf	(memset@n),w
  6970  0521  0238               	skipnc
  6971  0522  1803               	goto	u2271
  6972  0523  2D25               	goto	u2270
  6973  0524  2D26               u2271:
  6974  0525                     	goto	l3512
  6975  0525  2D28               u2270:
  6976  0526                     	goto	l821
  6977  0526  2D81               	
  6978                           l3510:	
  6979  0527                     ;	Return value of _memset is never used
  6980                           	goto	l821
  6981  0527  2D81               	
  6982                           l823:	
  6983  0528                     	line	22
  6984                           	
  6985                           l3512:	
  6986  0528                     	movf	(memset@s),w
  6987  0528  0840               	addlw	03h
  6988  0529  3E03               	movwf	(??_memset+0)+0
  6989  052A  00BA               	movlw	0
  6990  052B  3000               	addwfc	(memset@s+1),w
  6991  052C  3D41               	movwf	1+(??_memset+0)+0
  6992  052D  00BB               	movf	0+(??_memset+0)+0,w
  6993  052E  083A               	movwf	fsr1l
  6994  052F  0086               	movf	1+(??_memset+0)+0,w
  6995  0530  083B               	movwf	fsr1h
  6996  0531  0087               	movf	(memset@c),w
  6997  0532  0836               	movwf	indf1
  6998  0533  0081               	line	23
  6999                           	movf	(memset@n),w
  7000  0534  0838               	addlw	0FCh
  7001  0535  3EFC               	movwf	(??_memset+0)+0
  7002  0536  00BA               	movlw	0FFh
  7003  0537  30FF               	addwfc	(memset@n+1),w
  7004  0538  3D39               	movwf	1+(??_memset+0)+0
  7005  0539  00BB               	movf	0+(??_memset+0)+0,w
  7006  053A  083A               	addwf	(memset@s),w
  7007  053B  0740               	movwf	(??_memset+2)+0
  7008  053C  00BC               	movf	1+(??_memset+0)+0,w
  7009  053D  083B               	addwfc	(memset@s+1),w
  7010  053E  3D41               	movwf	1+(??_memset+2)+0
  7011  053F  00BD               	movf	0+(??_memset+2)+0,w
  7012  0540  083C               	movwf	fsr1l
  7013  0541  0086               	movf	1+(??_memset+2)+0,w
  7014  0542  083D               	movwf	fsr1h
  7015  0543  0087               	movf	(memset@c),w
  7016  0544  0836               	movwf	indf1
  7017  0545  0081               	line	24
  7018                           	
  7019                           l3514:	
  7020  0546                     	movlw	0
  7021  0546  3000               	subwf	(memset@n+1),w
  7022  0547  0239               	movlw	09h
  7023  0548  3009               	skipnz
  7024  0549  1903               	subwf	(memset@n),w
  7025  054A  0238               	skipnc
  7026  054B  1803               	goto	u2281
  7027  054C  2D4E               	goto	u2280
  7028  054D  2D4F               u2281:
  7029  054E                     	goto	l3518
  7030  054E  2D51               u2280:
  7031  054F                     	goto	l821
  7032  054F  2D81               	
  7033                           l3516:	
  7034  0550                     ;	Return value of _memset is never used
  7035                           	goto	l821
  7036  0550  2D81               	
  7037                           l824:	
  7038  0551                     	line	31
  7039                           	
  7040                           l3518:	
  7041  0551                     	comf	(memset@s),w
  7042  0551  0940               	movwf	(??_memset+0)+0
  7043  0552  00BA               	comf	(memset@s+1),w
  7044  0553  0941               	movwf	((??_memset+0)+0+1)
  7045  0554  00BB               	incf	(??_memset+0)+0,f
  7046  0555  0ABA               	skipnz
  7047  0556  1903               	incf	((??_memset+0)+0+1),f
  7048  0557  0ABB               	movlw	03h
  7049  0558  3003               	andwf	0+(??_memset+0)+0,w
  7050  0559  053A               	movwf	(memset@k)
  7051  055A  00BE               	movlw	0
  7052  055B  3000               	andwf	1+(??_memset+0)+0,w
  7053  055C  053B               	movwf	1+(memset@k)
  7054  055D  00BF               	line	32
  7055                           	
  7056                           l3520:	
  7057  055E                     	movf	(memset@k),w
  7058  055E  083E               	addwf	(memset@s),f
  7059  055F  07C0               	movf	(memset@k+1),w
  7060  0560  083F               	addwfc	(memset@s+1),f
  7061  0561  3DC1               	line	33
  7062                           	
  7063                           l3522:	
  7064  0562                     	movf	(memset@k),w
  7065  0562  083E               	subwf	(memset@n),f
  7066  0563  02B8               	movf	(memset@k+1),w
  7067  0564  083F               	subwfb	(memset@n+1),f
  7068  0565  3BB9               	line	34
  7069                           	
  7070                           l3524:	
  7071  0566                     	movlw	0FCh
  7072  0566  30FC               	andwf	(memset@n),f
  7073  0567  05B8               	movlw	0FFh
  7074  0568  30FF               	andwf	(memset@n+1),f
  7075  0569  05B9               	line	86
  7076                           	goto	l3532
  7077  056A  2D7A               	
  7078                           l826:	
  7079  056B                     	
  7080                           l3526:	
  7081  056B                     	movf	(memset@s),w
  7082  056B  0840               	movwf	fsr1l
  7083  056C  0086               	movf	(memset@s+1),w
  7084  056D  0841               	movwf	fsr1h
  7085  056E  0087               	movf	(memset@c),w
  7086  056F  0836               	movwf	indf1
  7087  0570  0081               	
  7088                           l3528:	
  7089  0571                     	movlw	01h
  7090  0571  3001               	subwf	(memset@n),f
  7091  0572  02B8               	movlw	0
  7092  0573  3000               	subwfb	(memset@n+1),f
  7093  0574  3BB9               	
  7094                           l3530:	
  7095  0575                     	movlw	01h
  7096  0575  3001               	addwf	(memset@s),f
  7097  0576  07C0               	movlw	0
  7098  0577  3000               	addwfc	(memset@s+1),f
  7099  0578  3DC1               	goto	l3532
  7100  0579  2D7A               	
  7101                           l825:	
  7102  057A                     	
  7103                           l3532:	
  7104  057A                     	movf	((memset@n)),w
  7105  057A  0838               iorwf	((memset@n+1)),w
  7106  057B  0439               	btfss	status,2
  7107  057C  1D03               	goto	u2291
  7108  057D  2D7F               	goto	u2290
  7109  057E  2D80               u2291:
  7110  057F                     	goto	l3526
  7111  057F  2D6B               u2290:
  7112  0580                     	goto	l821
  7113  0580  2D81               	
  7114                           l827:	
  7115  0581                     	line	90
  7116                           ;	Return value of _memset is never used
  7117                           	
  7118                           l821:	
  7119  0581                     	return
  7120  0581  0008               	opt stack 0
  7121                           GLOBAL	__end_of_memset
  7122                           	__end_of_memset:
  7123  0582                     	signat	_memset,12409
  7124                           	global	_Debounce
  7125                           
  7126 ;; *************** function _Debounce *****************
  7127 ;; Defined at:
  7128 ;;		line 167 in file "161518_temp_main.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;  iSwitch         1    wreg     unsigned char 
  7131 ;;  ioTimer         1   20[BANK0 ] PTR unsigned short 
  7132 ;;		 -> main@wDebounceDown(2), main@wDebounceUp(2), main@wDebounceEnter(2), 
  7133 ;;  swPressed       1   21[BANK0 ] PTR unsigned char 
  7134 ;;		 -> main@wEnterBottonPressed(1), main@wDownBottonPressed(1), main@wUpBottonPressed(1), 
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;  iSwitch         1   24[BANK0 ] unsigned char 
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  1    wreg      void 
  7139 ;; Registers used:
  7140 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7146 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7147 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7148 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7149 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7150 ;;Total ram usage:        5 bytes
  7151 ;; Hardware stack levels used:    1
  7152 ;; Hardware stack levels required when called:    6
  7153 ;; This function calls:
  7154 ;;		Nothing
  7155 ;; This function is called by:
  7156 ;;		_main
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  7160                           	file	"161518_temp_main.c"
  7161                           	line	167
  7162                           global __ptext25
  7163                           __ptext25:	;psect for function _Debounce
  7164  0E44                     psect	text25
  7165                           	file	"161518_temp_main.c"
  7166                           	line	167
  7167                           	global	__size_of_Debounce
  7168                           	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
  7169  004C                     	
  7170                           _Debounce:	
  7171  0E44                     ;incstack = 0
  7172                           	opt	stack 9
  7173                           ; Regs used in _Debounce: [wreg+fsr1l+fsr1h+status,2+status,0]
  7174                           ;Debounce@iSwitch stored from wreg
  7175                           	movlb 0	; select bank0
  7176  0E44  0020               	movwf	(Debounce@iSwitch)
  7177  0E45  00B8               	line	169
  7178                           	
  7179                           l3784:	
  7180  0E46                     	movf	((Debounce@iSwitch)),w
  7181  0E46  0838               	btfss	status,2
  7182  0E47  1D03               	goto	u2631
  7183  0E48  2E4A               	goto	u2630
  7184  0E49  2E4B               u2631:
  7185  0E4A                     	goto	l3788
  7186  0E4A  2E55               u2630:
  7187  0E4B                     	line	171
  7188                           	
  7189                           l3786:	
  7190  0E4B                     	movf	(Debounce@ioTimer),w
  7191  0E4B  0834               	movwf	fsr1l
  7192  0E4C  0086               	movlw 2	; select bank4/5
  7193  0E4D  3002               	movwf fsr1h	
  7194  0E4E  0087               	
  7195                           	movlw	01h
  7196  0E4F  3001               	addwf	indf1,f
  7197  0E50  0781               	addfsr	fsr1,1
  7198  0E51  3141               	skipnc
  7199  0E52  1803               	incf	indf1,f
  7200  0E53  0A81               	line	172
  7201                           	goto	l3790
  7202  0E54  2E5D               	line	173
  7203                           	
  7204                           l144:	
  7205  0E55                     	line	175
  7206                           	
  7207                           l3788:	
  7208  0E55                     	movf	(Debounce@ioTimer),w
  7209  0E55  0834               	movwf	fsr1l
  7210  0E56  0086               	movlw 2	; select bank4/5
  7211  0E57  3002               	movwf fsr1h	
  7212  0E58  0087               	
  7213                           	movlw	0
  7214  0E59  3000               	movwi	[0]fsr1
  7215  0E5A  3FC0               	movwi	[1]fsr1
  7216  0E5B  3FC1               	goto	l3790
  7217  0E5C  2E5D               	line	176
  7218                           	
  7219                           l145:	
  7220  0E5D                     	line	177
  7221                           	
  7222                           l3790:	
  7223  0E5D                     	movf	(Debounce@ioTimer),w
  7224  0E5D  0834               	movwf	fsr1l
  7225  0E5E  0086               	movlw 2	; select bank4/5
  7226  0E5F  3002               	movwf fsr1h	
  7227  0E60  0087               	
  7228                           	moviw	fsr1++
  7229  0E61  0016               xorlw	208
  7230  0E62  3AD0               movwf	(??_Debounce+0)+0
  7231  0E63  00B6               moviw	fsr1++
  7232  0E64  0016               xorlw	7
  7233  0E65  3A07               iorwf	(??_Debounce+0)+0
  7234  0E66  04B6               	btfss	status,2
  7235  0E67  1D03               	goto	u2641
  7236  0E68  2E6A               	goto	u2640
  7237  0E69  2E6B               u2641:
  7238  0E6A                     	goto	l3794
  7239  0E6A  2E72               u2640:
  7240  0E6B                     	line	179
  7241                           	
  7242                           l3792:	
  7243  0E6B                     	movf	(Debounce@swPressed),w
  7244  0E6B  0835               	movwf	fsr1l
  7245  0E6C  0086               	movlw 2	; select bank4/5
  7246  0E6D  3002               	movwf fsr1h	
  7247  0E6E  0087               	
  7248                           	clrf	indf1
  7249  0E6F  0181               	incf	indf1,f
  7250  0E70  0A81               	goto	l3794
  7251  0E71  2E72               	line	180
  7252                           	
  7253                           l146:	
  7254  0E72                     	line	181
  7255                           	
  7256                           l3794:	
  7257  0E72                     	movf	(Debounce@ioTimer),w
  7258  0E72  0834               	movwf	fsr1l
  7259  0E73  0086               	movlw 2	; select bank4/5
  7260  0E74  3002               	movwf fsr1h	
  7261  0E75  0087               	
  7262                           	moviw	fsr1++
  7263  0E76  0016               xorlw	64
  7264  0E77  3A40               movwf	(??_Debounce+0)+0
  7265  0E78  00B6               moviw	fsr1++
  7266  0E79  0016               xorlw	31
  7267  0E7A  3A1F               iorwf	(??_Debounce+0)+0
  7268  0E7B  04B6               	btfss	status,2
  7269  0E7C  1D03               	goto	u2651
  7270  0E7D  2E7F               	goto	u2650
  7271  0E7E  2E80               u2651:
  7272  0E7F                     	goto	l148
  7273  0E7F  2E8F               u2650:
  7274  0E80                     	line	183
  7275                           	
  7276                           l3796:	
  7277  0E80                     	movf	(Debounce@ioTimer),w
  7278  0E80  0834               	movwf	fsr1l
  7279  0E81  0086               	movlw 2	; select bank4/5
  7280  0E82  3002               	movwf fsr1h	
  7281  0E83  0087               	
  7282                           	movlw	0D1h
  7283  0E84  30D1               	movwi	[0]fsr1
  7284  0E85  3FC0               	movlw	07h
  7285  0E86  3007               	movwi	[1]fsr1
  7286  0E87  3FC1               	line	184
  7287                           	
  7288                           l3798:	
  7289  0E88                     	movf	(Debounce@swPressed),w
  7290  0E88  0835               	movwf	fsr1l
  7291  0E89  0086               	movlw 2	; select bank4/5
  7292  0E8A  3002               	movwf fsr1h	
  7293  0E8B  0087               	
  7294                           	clrf	indf1
  7295  0E8C  0181               	incf	indf1,f
  7296  0E8D  0A81               	goto	l148
  7297  0E8E  2E8F               	line	185
  7298                           	
  7299                           l147:	
  7300  0E8F                     	line	186
  7301                           	
  7302                           l148:	
  7303  0E8F                     	return
  7304  0E8F  0008               	opt stack 0
  7305                           GLOBAL	__end_of_Debounce
  7306                           	__end_of_Debounce:
  7307  0E90                     	signat	_Debounce,12409
  7308                           	global	_Add_Trace
  7309                           
  7310 ;; *************** function _Add_Trace *****************
  7311 ;; Defined at:
  7312 ;;		line 86 in file "161518_temp_main.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;  oText           1    wreg     PTR unsigned char 
  7315 ;;		 -> wInterruptText(75), 
  7316 ;;  iSizeOfoText    1   39[BANK0 ] unsigned char 
  7317 ;;  iText           2   40[BANK0 ] PTR unsigned char 
  7318 ;;		 -> STR_12(7), STR_7(4), STR_2(9), STR_1(12), 
  7319 ;;		 -> main@wReadout(20), 
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;  oText           1   42[BANK0 ] PTR unsigned char 
  7322 ;;		 -> wInterruptText(75), 
  7323 ;; Return value:  Size  Location     Type
  7324 ;;                  1    wreg      void 
  7325 ;; Registers used:
  7326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7332 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  7333 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7334 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
       0       0
  7335 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
       0       0
  7336 ;;Total ram usage:       10 bytes
  7337 ;; Hardware stack levels used:    1
  7338 ;; Hardware stack levels required when called:    8
  7339 ;; This function calls:
  7340 ;;		_strcat
  7341 ;;		_strlen
  7342 ;; This function is called by:
  7343 ;;		_main
  7344 ;; This function uses a non-reentrant model
  7345 ;;
  7346                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  7347                           	line	86
  7348                           global __ptext26
  7349                           __ptext26:	;psect for function _Add_Trace
  7350  0E01                     psect	text26
  7351                           	file	"161518_temp_main.c"
  7352                           	line	86
  7353                           	global	__size_of_Add_Trace
  7354                           	__size_of_Add_Trace	equ	__end_of_Add_Trace-_Add_Trace
  7355  0043                     	
  7356                           _Add_Trace:	
  7357  0E01                     ;incstack = 0
  7358                           	opt	stack 7
  7359                           ; Regs used in _Add_Trace: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7360                           ;Add_Trace@oText stored from wreg
  7361                           	movlb 0	; select bank0
  7362  0E01  0020               	movwf	(Add_Trace@oText)
  7363  0E02  00CA               	line	88
  7364                           	
  7365                           l3710:	
  7366  0E03                     	movf	(Add_Trace@oText),w
  7367  0E03  084A               	movwf	(strlen@s)
  7368  0E04  00B4               	movlw	0x1
  7369  0E05  3001               
  7370                           	movwf	(strlen@s+1)
  7371  0E06  00B5               	fcall	_strlen
  7372  0E07  318C  2405  318E   	movlb 0	; select bank0
  7373  0E0A  0020               	comf	(0+(?_strlen)),w
  7374  0E0B  0934               	movlb 1	; select bank1
  7375  0E0C  0021               	movwf	(??_Add_Trace+0)^080h+0
  7376  0E0D  00BB               	movlb 0	; select bank0
  7377  0E0E  0020               	comf	(1+(?_strlen)),w
  7378  0E0F  0935               	movlb 1	; select bank1
  7379  0E10  0021               	movwf	((??_Add_Trace+0)^080h+0+1)
  7380  0E11  00BC               	incf	(??_Add_Trace+0)^080h+0,f
  7381  0E12  0ABB               	skipnz
  7382  0E13  1903               	incf	((??_Add_Trace+0)^080h+0+1),f
  7383  0E14  0ABC               	movlb 0	; select bank0
  7384  0E15  0020               	movf	(Add_Trace@iSizeOfoText),w
  7385  0E16  0847               	movlb 1	; select bank1
  7386  0E17  0021               	addwf	0+(??_Add_Trace+0)^080h+0,w
  7387  0E18  073B               	movwf	(??_Add_Trace+2)^080h+0
  7388  0E19  00BD               	movf	1+(??_Add_Trace+0)^080h+0,w
  7389  0E1A  083C               	skipnc
  7390  0E1B  1803               	incf	1+(??_Add_Trace+0)^080h+0,w
  7391  0E1C  0A3C               	movwf	((??_Add_Trace+2)^080h+0)+1
  7392  0E1D  00BE               	movf	0+(??_Add_Trace+2)^080h+0,w
  7393  0E1E  083D               	addlw	0FFh
  7394  0E1F  3EFF               	movwf	(??_Add_Trace+4)^080h+0
  7395  0E20  00BF               	movlw	0FFh
  7396  0E21  30FF               	addwfc	1+(??_Add_Trace+2)^080h+0,w
  7397  0E22  3D3E               	movwf	1+(??_Add_Trace+4)^080h+0
  7398  0E23  00C0               	movlb 0	; select bank0
  7399  0E24  0020               	movf	(Add_Trace@iText+1),w
  7400  0E25  0849               	movwf	(strlen@s+1)
  7401  0E26  00B5               	movf	(Add_Trace@iText),w
  7402  0E27  0848               	movwf	(strlen@s)
  7403  0E28  00B4               	fcall	_strlen
  7404  0E29  318C  2405  318E   	movlb 1	; select bank1
  7405  0E2C  0021               	movf	1+(??_Add_Trace+4)^080h+0,w
  7406  0E2D  0840               	movlb 0	; select bank0
  7407  0E2E  0020               	subwf	(1+(?_strlen)),w
  7408  0E2F  0235               	skipz
  7409  0E30  1D03               	goto	u2575
  7410  0E31  2E36               	movlb 1	; select bank1
  7411  0E32  0021               	movf	0+(??_Add_Trace+4)^080h+0,w
  7412  0E33  083F               	movlb 0	; select bank0
  7413  0E34  0020               	subwf	(0+(?_strlen)),w
  7414  0E35  0234               u2575:
  7415  0E36                     	skipnc
  7416  0E36  1803               	goto	u2571
  7417  0E37  2E39               	goto	u2570
  7418  0E38  2E3A               u2571:
  7419  0E39                     	goto	l123
  7420  0E39  2E43               u2570:
  7421  0E3A                     	line	90
  7422                           	
  7423                           l3712:	
  7424  0E3A                     	movf	(Add_Trace@iText+1),w
  7425  0E3A  0849               	movwf	(strcat@src+1)
  7426  0E3B  00C3               	movf	(Add_Trace@iText),w
  7427  0E3C  0848               	movwf	(strcat@src)
  7428  0E3D  00C2               	movf	(Add_Trace@oText),w
  7429  0E3E  084A               	fcall	_strcat
  7430  0E3F  318B  23A5  318E   	goto	l123
  7431  0E42  2E43               	line	91
  7432                           	
  7433                           l122:	
  7434  0E43                     	line	92
  7435                           	
  7436                           l123:	
  7437  0E43                     	return
  7438  0E43  0008               	opt stack 0
  7439                           GLOBAL	__end_of_Add_Trace
  7440                           	__end_of_Add_Trace:
  7441  0E44                     	signat	_Add_Trace,12409
  7442                           	global	_strcat
  7443                           
  7444 ;; *************** function _strcat *****************
  7445 ;; Defined at:
  7446 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  7447 ;; Parameters:    Size  Location     Type
  7448 ;;  dest            1    wreg     PTR unsigned char 
  7449 ;;		 -> wInterruptText(75), 
  7450 ;;  src             2   34[BANK0 ] PTR const unsigned char 
  7451 ;;		 -> STR_12(7), STR_7(4), STR_2(9), STR_1(12), 
  7452 ;;		 -> main@wReadout(20), 
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;  dest            1   38[BANK0 ] PTR unsigned char 
  7455 ;;		 -> wInterruptText(75), 
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  1    wreg      PTR unsigned char 
  7458 ;; Registers used:
  7459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7465 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7466 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7467 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7468 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7469 ;;Total ram usage:        5 bytes
  7470 ;; Hardware stack levels used:    1
  7471 ;; Hardware stack levels required when called:    7
  7472 ;; This function calls:
  7473 ;;		_strcpy
  7474 ;;		_strlen
  7475 ;; This function is called by:
  7476 ;;		_Add_Trace
  7477 ;; This function uses a non-reentrant model
  7478 ;;
  7479                           psect	text27,local,class=CODE,delta=2,merge=1,group=2
  7480                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  7481                           	line	3
  7482                           global __ptext27
  7483                           __ptext27:	;psect for function _strcat
  7484  0BA5                     psect	text27
  7485                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  7486                           	line	3
  7487                           	global	__size_of_strcat
  7488                           	__size_of_strcat	equ	__end_of_strcat-_strcat
  7489  0019                     	
  7490                           _strcat:	
  7491  0BA5                     ;incstack = 0
  7492                           	opt	stack 7
  7493                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7494                           ;strcat@dest stored from wreg
  7495                           	movlb 0	; select bank0
  7496  0BA5  0020               	movwf	(strcat@dest)
  7497  0BA6  00C6               	line	5
  7498                           	
  7499                           l3488:	
  7500  0BA7                     	movf	(strcat@src+1),w
  7501  0BA7  0843               	movwf	(strcpy@src+1)
  7502  0BA8  00BB               	movf	(strcat@src),w
  7503  0BA9  0842               	movwf	(strcpy@src)
  7504  0BAA  00BA               	movf	(strcat@dest),w
  7505  0BAB  0846               	movwf	(strlen@s)
  7506  0BAC  00B4               	movlw	0x1
  7507  0BAD  3001               
  7508                           	movwf	(strlen@s+1)
  7509  0BAE  00B5               	fcall	_strlen
  7510  0BAF  318C  2405  318B   	movlb 0	; select bank0
  7511  0BB2  0020               	movf	(0+?_strlen),w
  7512  0BB3  0834               	movwf	(??_strcat+0)+0
  7513  0BB4  00C4               	movf	(1+?_strlen),w
  7514  0BB5  0835               	movwf	((??_strcat+0)+0+1)
  7515  0BB6  00C5               	movf	(strcat@dest),w
  7516  0BB7  0846               	addwf	0+(??_strcat+0)+0,w
  7517  0BB8  0744               	fcall	_strcpy
  7518  0BB9  318C  2429  318B   	goto	l834
  7519  0BBC  2BBD               	line	6
  7520                           	
  7521                           l3490:	
  7522  0BBD                     	line	7
  7523                           ;	Return value of _strcat is never used
  7524                           	
  7525                           l834:	
  7526  0BBD                     	return
  7527  0BBD  0008               	opt stack 0
  7528                           GLOBAL	__end_of_strcat
  7529                           	__end_of_strcat:
  7530  0BBE                     	signat	_strcat,8313
  7531                           	global	_strlen
  7532                           
  7533 ;; *************** function _strlen *****************
  7534 ;; Defined at:
  7535 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;  s               2   20[BANK0 ] PTR const unsigned char 
  7538 ;;		 -> STR_12(7), STR_7(4), STR_2(9), STR_1(12), 
  7539 ;;		 -> main@wReadout(20), wInterruptText(75), 
  7540 ;; Auto vars:     Size  Location     Type
  7541 ;;  a               2   24[BANK0 ] PTR const unsigned char 
  7542 ;;		 -> STR_12(7), STR_7(4), STR_2(9), STR_1(12), 
  7543 ;;		 -> main@wReadout(20), wInterruptText(75), 
  7544 ;; Return value:  Size  Location     Type
  7545 ;;                  2   20[BANK0 ] unsigned int 
  7546 ;; Registers used:
  7547 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7548 ;; Tracked objects:
  7549 ;;		On entry : 0/0
  7550 ;;		On exit  : 0/0
  7551 ;;		Unchanged: 0/0
  7552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7553 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7554 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7555 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7556 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  7557 ;;Total ram usage:        6 bytes
  7558 ;; Hardware stack levels used:    1
  7559 ;; Hardware stack levels required when called:    6
  7560 ;; This function calls:
  7561 ;;		Nothing
  7562 ;; This function is called by:
  7563 ;;		_Add_Trace
  7564 ;;		_PrintLog
  7565 ;;		_strcat
  7566 ;; This function uses a non-reentrant model
  7567 ;;
  7568                           psect	text28,local,class=CODE,delta=2,merge=1,group=2
  7569                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  7570                           	line	12
  7571                           global __ptext28
  7572                           __ptext28:	;psect for function _strlen
  7573  0C05                     psect	text28
  7574                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  7575                           	line	12
  7576                           	global	__size_of_strlen
  7577                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  7578  0024                     	
  7579                           _strlen:	
  7580  0C05                     ;incstack = 0
  7581                           	opt	stack 8
  7582                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  7583                           	line	14
  7584                           	
  7585                           l3370:	
  7586  0C05                     	movlb 0	; select bank0
  7587  0C05  0020               	movf	(strlen@s+1),w
  7588  0C06  0835               	movwf	(strlen@a+1)
  7589  0C07  00B9               	movf	(strlen@s),w
  7590  0C08  0834               	movwf	(strlen@a)
  7591  0C09  00B8               	line	16
  7592                           	goto	l3374
  7593  0C0A  2C10               	
  7594                           l844:	
  7595  0C0B                     	line	17
  7596                           	
  7597                           l3372:	
  7598  0C0B                     	movlw	01h
  7599  0C0B  3001               	addwf	(strlen@s),f
  7600  0C0C  07B4               	movlw	0
  7601  0C0D  3000               	addwfc	(strlen@s+1),f
  7602  0C0E  3DB5               	goto	l3374
  7603  0C0F  2C10               	line	18
  7604                           	
  7605                           l843:	
  7606  0C10                     	line	16
  7607                           	
  7608                           l3374:	
  7609  0C10                     	movf	(strlen@s),w
  7610  0C10  0834               	movwf	fsr0l
  7611  0C11  0084               	movf	((strlen@s+1)),w
  7612  0C12  0835               	movwf	fsr0h
  7613  0C13  0085               	moviw	fsr0++
  7614  0C14  0012               	btfss	status,2
  7615  0C15  1D03               	goto	u2151
  7616  0C16  2C18               	goto	u2150
  7617  0C17  2C19               u2151:
  7618  0C18                     	goto	l3372
  7619  0C18  2C0B               u2150:
  7620  0C19                     	goto	l3376
  7621  0C19  2C1A               	
  7622                           l845:	
  7623  0C1A                     	line	25
  7624                           	
  7625                           l3376:	
  7626  0C1A                     	comf	(strlen@a),w
  7627  0C1A  0938               	movwf	(??_strlen+0)+0
  7628  0C1B  00B6               	comf	(strlen@a+1),w
  7629  0C1C  0939               	movwf	((??_strlen+0)+0+1)
  7630  0C1D  00B7               	incf	(??_strlen+0)+0,f
  7631  0C1E  0AB6               	skipnz
  7632  0C1F  1903               	incf	((??_strlen+0)+0+1),f
  7633  0C20  0AB7               	movf	(strlen@s),w
  7634  0C21  0834               	addwf	0+(??_strlen+0)+0,w
  7635  0C22  0736               	movwf	(?_strlen)
  7636  0C23  00B4               	movf	(strlen@s+1),w
  7637  0C24  0835               	addwfc	1+(??_strlen+0)+0,w
  7638  0C25  3D37               	movwf	1+(?_strlen)
  7639  0C26  00B5               	goto	l846
  7640  0C27  2C28               	
  7641                           l3378:	
  7642  0C28                     	line	26
  7643                           	
  7644                           l846:	
  7645  0C28                     	return
  7646  0C28  0008               	opt stack 0
  7647                           GLOBAL	__end_of_strlen
  7648                           	__end_of_strlen:
  7649  0C29                     	signat	_strlen,4218
  7650                           	global	_strcpy
  7651                           
  7652 ;; *************** function _strcpy *****************
  7653 ;; Defined at:
  7654 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  7655 ;; Parameters:    Size  Location     Type
  7656 ;;  dest            1    wreg     PTR unsigned char 
  7657 ;;		 -> wInterruptText(75), 
  7658 ;;  src             2   26[BANK0 ] PTR const unsigned char 
  7659 ;;		 -> STR_12(7), STR_7(4), STR_2(9), STR_1(12), 
  7660 ;;		 -> main@wReadout(20), 
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;  dest            1   33[BANK0 ] PTR unsigned char 
  7663 ;;		 -> wInterruptText(75), 
  7664 ;;  s               2   30[BANK0 ] PTR const unsigned char 
  7665 ;;		 -> STR_12(7), STR_7(4), STR_2(9), STR_1(12), 
  7666 ;;		 -> main@wReadout(20), 
  7667 ;;  d               1   32[BANK0 ] PTR unsigned char 
  7668 ;;		 -> wInterruptText(75), 
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  1    wreg      PTR unsigned char 
  7671 ;; Registers used:
  7672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7678 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7679 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  7680 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7681 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
  7682 ;;Total ram usage:        8 bytes
  7683 ;; Hardware stack levels used:    1
  7684 ;; Hardware stack levels required when called:    6
  7685 ;; This function calls:
  7686 ;;		Nothing
  7687 ;; This function is called by:
  7688 ;;		_strcat
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           psect	text29,local,class=CODE,delta=2,merge=1,group=2
  7692                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  7693                           	line	7
  7694                           global __ptext29
  7695                           __ptext29:	;psect for function _strcpy
  7696  0C29                     psect	text29
  7697                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  7698                           	line	7
  7699                           	global	__size_of_strcpy
  7700                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  7701  0025                     	
  7702                           _strcpy:	
  7703  0C29                     ;incstack = 0
  7704                           	opt	stack 7
  7705                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  7706                           ;strcpy@dest stored from wreg
  7707                           	movlb 0	; select bank0
  7708  0C29  0020               	movwf	(strcpy@dest)
  7709  0C2A  00C1               	line	13
  7710                           	
  7711                           l3440:	
  7712  0C2B                     	movf	(strcpy@src+1),w
  7713  0C2B  083B               	movwf	(strcpy@s+1)
  7714  0C2C  00BF               	movf	(strcpy@src),w
  7715  0C2D  083A               	movwf	(strcpy@s)
  7716  0C2E  00BE               	line	14
  7717                           	movf	(strcpy@dest),w
  7718  0C2F  0841               	movwf	(??_strcpy+0)+0
  7719  0C30  00BC               	movf	(??_strcpy+0)+0,w
  7720  0C31  083C               	movwf	(strcpy@d)
  7721  0C32  00C0               	line	15
  7722                           	goto	l3442
  7723  0C33  2C35               	
  7724                           l838:	
  7725  0C34                     	goto	l3442
  7726  0C34  2C35               	
  7727                           l837:	
  7728  0C35                     	
  7729                           l3442:	
  7730  0C35                     	movf	(strcpy@d),w
  7731  0C35  0840               	movwf	fsr1l
  7732  0C36  0086               	movlw 1	; select bank2/3
  7733  0C37  3001               	movwf fsr1h	
  7734  0C38  0087               	
  7735                           	incf	(strcpy@d),f
  7736  0C39  0AC0               	movf	(strcpy@s+1),w
  7737  0C3A  083F               	movwf	(??_strcpy+0)+0+1
  7738  0C3B  00BD               	movf	(strcpy@s),w
  7739  0C3C  083E               	movwf	(??_strcpy+0)+0
  7740  0C3D  00BC               	incf	(strcpy@s),f
  7741  0C3E  0ABE               	skipnz
  7742  0C3F  1903               	incf	(strcpy@s+1),f
  7743  0C40  0ABF               	movf	0+(??_strcpy+0)+0,w
  7744  0C41  083C               	movwf	fsr0l
  7745  0C42  0084               	movf	(1+(??_strcpy+0)+0),w
  7746  0C43  083D               	movwf	fsr0h
  7747  0C44  0085               	movf	indf0,w ;code access
  7748  0C45  0800               	movwi	[0]fsr1
  7749  0C46  3FC0               	movf	wreg
  7750  0C47  0889               	btfss	status,2
  7751  0C48  1D03               	goto	u2211
  7752  0C49  2C4B               	goto	u2210
  7753  0C4A  2C4C               u2211:
  7754  0C4B                     	goto	l3442
  7755  0C4B  2C35               u2210:
  7756  0C4C                     	goto	l840
  7757  0C4C  2C4D               	
  7758                           l839:	
  7759  0C4D                     	line	18
  7760                           ;	Return value of _strcpy is never used
  7761                           	
  7762                           l840:	
  7763  0C4D                     	return
  7764  0C4D  0008               	opt stack 0
  7765                           GLOBAL	__end_of_strcpy
  7766                           	__end_of_strcpy:
  7767  0C4E                     	signat	_strcpy,8313
  7768                           	global	_myint
  7769                           
  7770 ;; *************** function _myint *****************
  7771 ;; Defined at:
  7772 ;;		line 488 in file "161518_temp_main.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;		None
  7775 ;; Auto vars:     Size  Location     Type
  7776 ;;		None
  7777 ;; Return value:  Size  Location     Type
  7778 ;;                  1    wreg      void 
  7779 ;; Registers used:
  7780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7781 ;; Tracked objects:
  7782 ;;		On entry : 0/0
  7783 ;;		On exit  : 0/0
  7784 ;;		Unchanged: 0/0
  7785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7788 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7789 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7790 ;;Total ram usage:        5 bytes
  7791 ;; Hardware stack levels used:    1
  7792 ;; Hardware stack levels required when called:    5
  7793 ;; This function calls:
  7794 ;;		i1_Add_Trace
  7795 ;;		i1_lcdWriteText
  7796 ;; This function is called by:
  7797 ;;		Interrupt level 1
  7798 ;; This function uses a non-reentrant model
  7799 ;;
  7800                           psect	intentry,class=CODE,delta=2
  7801                           global __pintentry
  7802                           __pintentry:
  7803  0004                     psect	intentry
  7804                           	file	"161518_temp_main.c"
  7805                           	line	488
  7806                           	global	__size_of_myint
  7807                           	__size_of_myint	equ	__end_of_myint-_myint
  7808  0198                     	
  7809                           _myint:	
  7810  0004                     ;incstack = 0
  7811                           	opt	stack 4
  7812                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
  7813  0004  147E               ; Regs used in _myint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7814                           psect	intentry
  7815                           	pagesel	$
  7816  0005  3180               	line	491
  7817                           	
  7818                           i1l4142:	
  7819  0006                     	movlb 0	; select bank0
  7820  0006  0020               	btfss	(17),3	;volatile
  7821  0007  1D91               	goto	u280_21
  7822  0008  280A               	goto	u280_20
  7823  0009  280B               u280_21:
  7824  000A                     	goto	i1l207
  7825  000A  2952               u280_20:
  7826  000B                     	line	493
  7827                           	
  7828                           i1l4144:	
  7829  000B                     	bcf	(17),3	;volatile
  7830  000B  1191               	line	494
  7831                           	
  7832                           i1l4146:	
  7833  000C                     	movf	((_wI2CTxBufferSize)),w
  7834  000C  0855               	btfsc	status,2
  7835  000D  1903               	goto	u281_21
  7836  000E  2810               	goto	u281_20
  7837  000F  2811               u281_21:
  7838  0010                     	goto	i1l207
  7839  0010  2952               u281_20:
  7840  0011                     	line	496
  7841                           	
  7842                           i1l4148:	
  7843  0011                     	movlb 1	; select bank1
  7844  0011  0021               	btfss	(_wI2CTxBuffer)^080h,(0)&7
  7845  0012  1C27               	goto	u282_21
  7846  0013  2815               	goto	u282_20
  7847  0014  2816               u282_21:
  7848  0015                     	goto	i1l209
  7849  0015  28D2               u282_20:
  7850  0016                     	line	498
  7851                           	
  7852                           i1l4150:	
  7853  0016                     	movlb 4	; select bank4
  7854  0016  0024               	btfss	(532)^0200h,4	;volatile
  7855  0017  1E14               	goto	u283_21
  7856  0018  281A               	goto	u283_20
  7857  0019  281B               u283_21:
  7858  001A                     	goto	i1l210
  7859  001A  2821               u283_20:
  7860  001B                     	line	500
  7861                           	
  7862                           i1l4152:	
  7863  001B                     	movlb 1	; select bank1
  7864  001B  0021               	bcf	(145)^080h,3	;volatile
  7865  001C  1191               	line	501
  7866                           	
  7867                           i1l4154:	
  7868  001D                     	movlb 0	; select bank0
  7869  001D  0020               	clrf	(_wI2CTxBufferSize)
  7870  001E  01D5               	line	502
  7871                           	clrf	(_wI2CTxSendPos)
  7872  001F  01D3               	line	503
  7873                           	goto	i1l207
  7874  0020  2952               	line	504
  7875                           	
  7876                           i1l210:	
  7877  0021                     	btfss	(532)^0200h,3	;volatile
  7878  0021  1D94               	goto	u284_21
  7879  0022  2824               	goto	u284_20
  7880  0023  2825               u284_21:
  7881  0024                     	goto	i1l212
  7882  0024  283B               u284_20:
  7883  0025                     	
  7884                           i1l4156:	
  7885  0025                     	movlb 0	; select bank0
  7886  0025  0020               	movf	((_wI2CTxSendPos)),w
  7887  0026  0853               	btfss	status,2
  7888  0027  1D03               	goto	u285_21
  7889  0028  282A               	goto	u285_20
  7890  0029  282B               u285_21:
  7891  002A                     	goto	i1l212
  7892  002A  283B               u285_20:
  7893  002B                     	line	506
  7894                           	
  7895                           i1l4158:	
  7896  002B                     	movf	(_wI2CTxSendPos),w
  7897  002B  0853               	addlw	low(_wI2CTxBuffer|((0x0)<<8))&0ffh
  7898  002C  3EA7               	movwf	fsr1l
  7899  002D  0086               	clrf fsr1h	
  7900  002E  0187               	
  7901                           	movf	indf1,w
  7902  002F  0801               	movlb 4	; select bank4
  7903  0030  0024               	movwf	(529)^0200h	;volatile
  7904  0031  0091               	line	507
  7905                           	
  7906                           i1l4160:	
  7907  0032                     	movlb 1	; select bank1
  7908  0032  0021               	clrf	(_wI2CCommandState)^080h
  7909  0033  01A6               	incf	(_wI2CCommandState)^080h,f
  7910  0034  0AA6               	line	508
  7911                           	
  7912                           i1l4162:	
  7913  0035                     	movlw	low(01h)
  7914  0035  3001               	movlb 0	; select bank0
  7915  0036  0020               	movwf	(??_myint+0)+0
  7916  0037  00AF               	movf	(??_myint+0)+0,w
  7917  0038  082F               	addwf	(_wI2CTxSendPos),f
  7918  0039  07D3               	line	509
  7919                           	goto	i1l207
  7920  003A  2952               	line	510
  7921                           	
  7922                           i1l212:	
  7923  003B                     	movlb 4	; select bank4
  7924  003B  0024               	btfss	(532)^0200h,0	;volatile
  7925  003C  1C14               	goto	u286_21
  7926  003D  283F               	goto	u286_20
  7927  003E  2840               u286_21:
  7928  003F                     	goto	i1l214
  7929  003F  2891               u286_20:
  7930  0040                     	line	512
  7931                           	
  7932                           i1l4164:	
  7933  0040                     	movf	(529)^0200h,w	;volatile
  7934  0040  0811               	movlb 0	; select bank0
  7935  0041  0020               	movwf	(??_myint+0)+0
  7936  0042  00AF               	movf	(_wReceptionBufferPosition),w
  7937  0043  0858               	addlw	low(_wReceptionBuffer|((0x1)<<8))&0ffh
  7938  0044  3E34               	movwf	fsr1l
  7939  0045  0086               	movlw 1	; select bank2/3
  7940  0046  3001               	movwf fsr1h	
  7941  0047  0087               	
  7942                           	movf	(??_myint+0)+0,w
  7943  0048  082F               	movwf	indf1
  7944  0049  0081               	line	513
  7945                           	
  7946                           i1l4166:	
  7947  004A                     	movlw	low(01h)
  7948  004A  3001               	movwf	(??_myint+0)+0
  7949  004B  00AF               	movf	(??_myint+0)+0,w
  7950  004C  082F               	addwf	(_wReceptionBufferPosition),f
  7951  004D  07D8               	line	515
  7952                           	
  7953                           i1l4168:	
  7954  004E                     	movlb 4	; select bank4
  7955  004E  0024               	bcf	(532)^0200h,0	;volatile
  7956  004F  1014               	line	516
  7957                           	
  7958                           i1l4170:	
  7959  0050                     	movlb 0	; select bank0
  7960  0050  0020               	movf	(_wI2CRxBufferSize),w
  7961  0051  0854               	subwf	(_wReceptionBufferPosition),w
  7962  0052  0258               	skipnc
  7963  0053  1803               	goto	u287_21
  7964  0054  2856               	goto	u287_20
  7965  0055  2857               u287_21:
  7966  0056                     	goto	i1l215
  7967  0056  285A               u287_20:
  7968  0057                     	line	518
  7969                           	
  7970                           i1l4172:	
  7971  0057                     	movlb 4	; select bank4
  7972  0057  0024               	bcf	(534)^0200h,5	;volatile
  7973  0058  1296               	line	519
  7974                           	goto	i1l4176
  7975  0059  288E               	line	520
  7976                           	
  7977                           i1l215:	
  7978  005A                     	line	522
  7979                           	movlb 4	; select bank4
  7980  005A  0024               	bsf	(534)^0200h,5	;volatile
  7981  005B  1696               	line	523
  7982                           	
  7983                           i1l4174:	
  7984  005C                     	movlb 2	; select bank2
  7985  005C  0022               	movf	0+(_wReceptionBuffer)^0100h+03h,w
  7986  005D  0837               	movlb 0	; select bank0
  7987  005E  0020               	movwf	(??_myint+0)+0
  7988  005F  00AF               	clrf	(??_myint+0)+0+1
  7989  0060  01B0               	movlb 2	; select bank2
  7990  0061  0022               	movf	0+(_wReceptionBuffer)^0100h+02h,w
  7991  0062  0836               	movlb 0	; select bank0
  7992  0063  0020               	movwf	(??_myint+2)+0
  7993  0064  00B1               	clrf	(??_myint+2)+0+1
  7994  0065  01B2               	movf	(??_myint+2)+0,w
  7995  0066  0831               	movwf	(??_myint+2)+1
  7996  0067  00B2               	clrf	(??_myint+2)+0
  7997  0068  01B1               	movf	0+(??_myint+0)+0,w
  7998  0069  082F               	addwf	0+(??_myint+2)+0,w
  7999  006A  0731               	movlb 1	; select bank1
  8000  006B  0021               	movwf	(_wHumidity)^080h
  8001  006C  00A2               	movlb 0	; select bank0
  8002  006D  0020               	movf	1+(??_myint+0)+0,w
  8003  006E  0830               	addwfc	1+(??_myint+2)+0,w
  8004  006F  3D32               	movlb 1	; select bank1
  8005  0070  0021               	movwf	1+(_wHumidity)^080h
  8006  0071  00A3               	line	524
  8007                           	movlb 2	; select bank2
  8008  0072  0022               	movf	0+(_wReceptionBuffer)^0100h+05h,w
  8009  0073  0839               	movlb 0	; select bank0
  8010  0074  0020               	movwf	(??_myint+0)+0
  8011  0075  00AF               	clrf	(??_myint+0)+0+1
  8012  0076  01B0               	movlb 2	; select bank2
  8013  0077  0022               	movf	0+(_wReceptionBuffer)^0100h+04h,w
  8014  0078  0838               	movlb 0	; select bank0
  8015  0079  0020               	movwf	(??_myint+2)+0
  8016  007A  00B1               	clrf	(??_myint+2)+0+1
  8017  007B  01B2               	movf	(??_myint+2)+0,w
  8018  007C  0831               	movwf	(??_myint+2)+1
  8019  007D  00B2               	clrf	(??_myint+2)+0
  8020  007E  01B1               	movf	0+(??_myint+0)+0,w
  8021  007F  082F               	addwf	0+(??_myint+2)+0,w
  8022  0080  0731               	movlb 1	; select bank1
  8023  0081  0021               	movwf	(_wTemperature)^080h
  8024  0082  00A0               	movlb 0	; select bank0
  8025  0083  0020               	movf	1+(??_myint+0)+0,w
  8026  0084  0830               	addwfc	1+(??_myint+2)+0,w
  8027  0085  3D32               	movlb 1	; select bank1
  8028  0086  0021               	movwf	1+(_wTemperature)^080h
  8029  0087  00A1               	line	525
  8030                           	movlw	low(01h)
  8031  0088  3001               	movlb 0	; select bank0
  8032  0089  0020               	movwf	(??_myint+0)+0
  8033  008A  00AF               	movf	(??_myint+0)+0,w
  8034  008B  082F               	addwf	(_wReceptionCounter),f
  8035  008C  07D7               	goto	i1l4176
  8036  008D  288E               	line	527
  8037                           	
  8038                           i1l216:	
  8039  008E                     	line	528
  8040                           	
  8041                           i1l4176:	
  8042  008E                     	movlb 4	; select bank4
  8043  008E  0024               	bsf	(534)^0200h,4	;volatile
  8044  008F  1616               	line	529
  8045                           	goto	i1l207
  8046  0090  2952               	line	530
  8047                           	
  8048                           i1l214:	
  8049  0091                     	line	532
  8050                           	btfsc	(534)^0200h,6	;volatile
  8051  0091  1B16               	goto	u288_21
  8052  0092  2894               	goto	u288_20
  8053  0093  2895               u288_21:
  8054  0094                     	goto	i1l218
  8055  0094  28AC               u288_20:
  8056  0095                     	
  8057                           i1l4178:	
  8058  0095                     	movlb 0	; select bank0
  8059  0095  0020               	movf	((_wI2CTxSendPos)),w
  8060  0096  0853               	btfsc	status,2
  8061  0097  1903               	goto	u289_21
  8062  0098  289A               	goto	u289_20
  8063  0099  289B               u289_21:
  8064  009A                     	goto	i1l218
  8065  009A  28AC               u289_20:
  8066  009B                     	line	534
  8067                           	
  8068                           i1l4180:	
  8069  009B                     	movf	(_wI2CRxBufferSize),w
  8070  009B  0854               	subwf	(_wReceptionBufferPosition),w
  8071  009C  0258               	skipnc
  8072  009D  1803               	goto	u290_21
  8073  009E  28A0               	goto	u290_20
  8074  009F  28A1               u290_21:
  8075  00A0                     	goto	i1l219
  8076  00A0  28A8               u290_20:
  8077  00A1                     	line	536
  8078                           	
  8079                           i1l4182:	
  8080  00A1                     	opt asmopt_push
  8081                           opt asmopt_off
  8082                           	movlw	66
  8083  00A1  3042               u321_27:
  8084  00A2                     decfsz	wreg
  8085  00A2  0B89               	goto	u321_27
  8086  00A3  28A2               	nop2
  8087  00A4  3200               opt asmopt_pop
  8088                           
  8089                           	line	537
  8090                           	
  8091                           i1l4184:	
  8092  00A5                     	movlb 4	; select bank4
  8093  00A5  0024               	bsf	(534)^0200h,3	;volatile
  8094  00A6  1596               	line	538
  8095                           	goto	i1l207
  8096  00A7  2952               	line	539
  8097                           	
  8098                           i1l219:	
  8099  00A8                     	line	541
  8100                           	movlb 4	; select bank4
  8101  00A8  0024               	bsf	(534)^0200h,2	;volatile
  8102  00A9  1516               	goto	i1l207
  8103  00AA  2952               	line	542
  8104                           	
  8105                           i1l220:	
  8106  00AB                     	line	543
  8107                           	goto	i1l207
  8108  00AB  2952               	line	544
  8109                           	
  8110                           i1l218:	
  8111  00AC                     	movlb 4	; select bank4
  8112  00AC  0024               	btfss	(534)^0200h,6	;volatile
  8113  00AD  1F16               	goto	u291_21
  8114  00AE  28B0               	goto	u291_20
  8115  00AF  28B1               u291_21:
  8116  00B0                     	goto	i1l4192
  8117  00B0  28BF               u291_20:
  8118  00B1                     	line	546
  8119                           	
  8120                           i1l4186:	
  8121  00B1                     	bcf	(534)^0200h,6	;volatile
  8122  00B1  1316               	line	547
  8123                           	
  8124                           i1l4188:	
  8125  00B2                     	movlb 0	; select bank0
  8126  00B2  0020               	movf	((_wI2CTxSendPos)),w
  8127  00B3  0853               	btfsc	status,2
  8128  00B4  1903               	goto	u292_21
  8129  00B5  28B7               	goto	u292_20
  8130  00B6  28B8               u292_21:
  8131  00B7                     	goto	i1l223
  8132  00B7  28BB               u292_20:
  8133  00B8                     	line	549
  8134                           	
  8135                           i1l4190:	
  8136  00B8                     	movlb 4	; select bank4
  8137  00B8  0024               	bsf	(534)^0200h,2	;volatile
  8138  00B9  1516               	line	550
  8139                           	goto	i1l207
  8140  00BA  2952               	line	551
  8141                           	
  8142                           i1l223:	
  8143  00BB                     	line	553
  8144                           	movlb 4	; select bank4
  8145  00BB  0024               	bsf	(534)^0200h,2	;volatile
  8146  00BC  1516               	goto	i1l207
  8147  00BD  2952               	line	554
  8148                           	
  8149                           i1l224:	
  8150  00BE                     	line	555
  8151                           	goto	i1l207
  8152  00BE  2952               	line	556
  8153                           	
  8154                           i1l222:	
  8155  00BF                     	line	558
  8156                           	
  8157                           i1l4192:	
  8158  00BF                     	movlw	low(04Bh)
  8159  00BF  304B               	movlb 0	; select bank0
  8160  00C0  0020               	movwf	(??_myint+0)+0
  8161  00C1  00AF               	movf	(??_myint+0)+0,w
  8162  00C2  082F               	movwf	(i1Add_Trace@iSizeOfoText)
  8163  00C3  00A5               	movlw	low(((STR_7)|8000h))
  8164  00C4  305C               	movwf	(i1Add_Trace@iText)
  8165  00C5  00A6               	movlw	high(((STR_7)|8000h))
  8166  00C6  3090               	movwf	((i1Add_Trace@iText))+1
  8167  00C7  00A7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  8168  00C8  30A0               	fcall	i1_Add_Trace
  8169  00C9  318D  254F  3180   	goto	i1l207
  8170  00CC  2952               	line	559
  8171                           	
  8172                           i1l225:	
  8173  00CD                     	goto	i1l207
  8174  00CD  2952               	
  8175                           i1l221:	
  8176  00CE                     	goto	i1l207
  8177  00CE  2952               	line	560
  8178                           	
  8179                           i1l217:	
  8180  00CF                     	goto	i1l207
  8181  00CF  2952               	
  8182                           i1l213:	
  8183  00D0                     	goto	i1l207
  8184  00D0  2952               	
  8185                           i1l211:	
  8186  00D1                     	line	562
  8187                           	goto	i1l207
  8188  00D1  2952               	line	563
  8189                           	
  8190                           i1l209:	
  8191  00D2                     	line	565
  8192                           	movlb 4	; select bank4
  8193  00D2  0024               	btfss	(532)^0200h,4	;volatile
  8194  00D3  1E14               	goto	u293_21
  8195  00D4  28D6               	goto	u293_20
  8196  00D5  28D7               u293_21:
  8197  00D6                     	goto	i1l227
  8198  00D6  28E4               u293_20:
  8199  00D7                     	line	567
  8200                           	
  8201                           i1l4194:	
  8202  00D7                     	movlb 1	; select bank1
  8203  00D7  0021               	bcf	(145)^080h,3	;volatile
  8204  00D8  1191               	line	568
  8205                           	
  8206                           i1l4196:	
  8207  00D9                     	movlb 0	; select bank0
  8208  00D9  0020               	clrf	(_wI2CTxBufferSize)
  8209  00DA  01D5               	line	569
  8210                           	clrf	(_wI2CTxSendPos)
  8211  00DB  01D3               	line	570
  8212                           	
  8213                           i1l4198:	
  8214  00DC                     	movlw	low(((STR_8)|8000h))
  8215  00DC  3062               	movwf	(i1lcdWriteText@iText)
  8216  00DD  00A0               	movlw	high(((STR_8)|8000h))
  8217  00DE  3090               	movwf	((i1lcdWriteText@iText))+1
  8218  00DF  00A1               	fcall	i1_lcdWriteText
  8219  00E0  318C  24CB  3180   	line	571
  8220                           	goto	i1l207
  8221  00E3  2952               	line	572
  8222                           	
  8223                           i1l227:	
  8224  00E4                     	btfss	(532)^0200h,3	;volatile
  8225  00E4  1D94               	goto	u294_21
  8226  00E5  28E7               	goto	u294_20
  8227  00E6  28E8               u294_21:
  8228  00E7                     	goto	i1l229
  8229  00E7  2906               u294_20:
  8230  00E8                     	
  8231                           i1l4200:	
  8232  00E8                     	movlb 0	; select bank0
  8233  00E8  0020               	movf	((_wI2CTxSendPos)),w
  8234  00E9  0853               	btfss	status,2
  8235  00EA  1D03               	goto	u295_21
  8236  00EB  28ED               	goto	u295_20
  8237  00EC  28EE               u295_21:
  8238  00ED                     	goto	i1l229
  8239  00ED  2906               u295_20:
  8240  00EE                     	line	574
  8241                           	
  8242                           i1l4202:	
  8243  00EE                     	movlw	low(((STR_9)|8000h))
  8244  00EE  3066               	movwf	(i1lcdWriteText@iText)
  8245  00EF  00A0               	movlw	high(((STR_9)|8000h))
  8246  00F0  3090               	movwf	((i1lcdWriteText@iText))+1
  8247  00F1  00A1               	fcall	i1_lcdWriteText
  8248  00F2  318C  24CB  3180   	line	575
  8249                           	
  8250                           i1l4204:	
  8251  00F5                     	movlb 1	; select bank1
  8252  00F5  0021               	clrf	(_wI2CCommandState)^080h
  8253  00F6  01A6               	incf	(_wI2CCommandState)^080h,f
  8254  00F7  0AA6               	line	576
  8255                           	
  8256                           i1l4206:	
  8257  00F8                     	movlb 0	; select bank0
  8258  00F8  0020               	movf	(_wI2CTxSendPos),w
  8259  00F9  0853               	addlw	low(_wI2CTxBuffer|((0x0)<<8))&0ffh
  8260  00FA  3EA7               	movwf	fsr1l
  8261  00FB  0086               	clrf fsr1h	
  8262  00FC  0187               	
  8263                           	movf	indf1,w
  8264  00FD  0801               	movlb 4	; select bank4
  8265  00FE  0024               	movwf	(529)^0200h	;volatile
  8266  00FF  0091               	line	577
  8267                           	
  8268                           i1l4208:	
  8269  0100                     	movlw	low(01h)
  8270  0100  3001               	movlb 0	; select bank0
  8271  0101  0020               	movwf	(??_myint+0)+0
  8272  0102  00AF               	movf	(??_myint+0)+0,w
  8273  0103  082F               	addwf	(_wI2CTxSendPos),f
  8274  0104  07D3               	line	578
  8275                           	goto	i1l207
  8276  0105  2952               	line	579
  8277                           	
  8278                           i1l229:	
  8279  0106                     	line	581
  8280                           	movlb 4	; select bank4
  8281  0106  0024               	btfsc	(534)^0200h,6	;volatile
  8282  0107  1B16               	goto	u296_21
  8283  0108  290A               	goto	u296_20
  8284  0109  290B               u296_21:
  8285  010A                     	goto	i1l231
  8286  010A  2936               u296_20:
  8287  010B                     	
  8288                           i1l4210:	
  8289  010B                     	movlb 0	; select bank0
  8290  010B  0020               	movf	((_wI2CTxSendPos)),w
  8291  010C  0853               	btfsc	status,2
  8292  010D  1903               	goto	u297_21
  8293  010E  2910               	goto	u297_20
  8294  010F  2911               u297_21:
  8295  0110                     	goto	i1l231
  8296  0110  2936               u297_20:
  8297  0111                     	line	583
  8298                           	
  8299                           i1l4212:	
  8300  0111                     	movlw	low(((STR_10)|8000h))
  8301  0111  3060               	movwf	(i1lcdWriteText@iText)
  8302  0112  00A0               	movlw	high(((STR_10)|8000h))
  8303  0113  3090               	movwf	((i1lcdWriteText@iText))+1
  8304  0114  00A1               	fcall	i1_lcdWriteText
  8305  0115  318C  24CB  3180   	line	584
  8306                           	
  8307                           i1l4214:	
  8308  0118                     	movlb 0	; select bank0
  8309  0118  0020               	movf	(_wI2CTxBufferSize),w
  8310  0119  0855               	subwf	(_wI2CTxSendPos),w
  8311  011A  0253               	skipnc
  8312  011B  1803               	goto	u298_21
  8313  011C  291E               	goto	u298_20
  8314  011D  291F               u298_21:
  8315  011E                     	goto	i1l232
  8316  011E  292C               u298_20:
  8317  011F                     	line	586
  8318                           	
  8319                           i1l4216:	
  8320  011F                     	movf	(_wI2CTxSendPos),w
  8321  011F  0853               	addlw	low(_wI2CTxBuffer|((0x0)<<8))&0ffh
  8322  0120  3EA7               	movwf	fsr1l
  8323  0121  0086               	clrf fsr1h	
  8324  0122  0187               	
  8325                           	movf	indf1,w
  8326  0123  0801               	movlb 4	; select bank4
  8327  0124  0024               	movwf	(529)^0200h	;volatile
  8328  0125  0091               	line	587
  8329                           	
  8330                           i1l4218:	
  8331  0126                     	movlw	low(01h)
  8332  0126  3001               	movlb 0	; select bank0
  8333  0127  0020               	movwf	(??_myint+0)+0
  8334  0128  00AF               	movf	(??_myint+0)+0,w
  8335  0129  082F               	addwf	(_wI2CTxSendPos),f
  8336  012A  07D3               	line	588
  8337                           	goto	i1l207
  8338  012B  2952               	line	589
  8339                           	
  8340                           i1l232:	
  8341  012C                     	line	591
  8342                           	movlb 4	; select bank4
  8343  012C  0024               	bsf	(534)^0200h,2	;volatile
  8344  012D  1516               	line	592
  8345                           	
  8346                           i1l4220:	
  8347  012E                     	movlw	low(02h)
  8348  012E  3002               	movlb 0	; select bank0
  8349  012F  0020               	movwf	(??_myint+0)+0
  8350  0130  00AF               	movf	(??_myint+0)+0,w
  8351  0131  082F               	movlb 1	; select bank1
  8352  0132  0021               	movwf	(_wI2CCommandState)^080h
  8353  0133  00A6               	goto	i1l207
  8354  0134  2952               	line	593
  8355                           	
  8356                           i1l233:	
  8357  0135                     	line	594
  8358                           	goto	i1l207
  8359  0135  2952               	line	595
  8360                           	
  8361                           i1l231:	
  8362  0136                     	movlb 4	; select bank4
  8363  0136  0024               	btfss	(534)^0200h,6	;volatile
  8364  0137  1F16               	goto	u299_21
  8365  0138  293A               	goto	u299_20
  8366  0139  293B               u299_21:
  8367  013A                     	goto	i1l207
  8368  013A  2952               u299_20:
  8369  013B                     	line	597
  8370                           	
  8371                           i1l4222:	
  8372  013B                     	bcf	(534)^0200h,6	;volatile
  8373  013B  1316               	line	598
  8374                           	bsf	(534)^0200h,2	;volatile
  8375  013C  1516               	line	599
  8376                           	
  8377                           i1l4224:	
  8378  013D                     	movlw	low(03h)
  8379  013D  3003               	movlb 0	; select bank0
  8380  013E  0020               	movwf	(??_myint+0)+0
  8381  013F  00AF               	movf	(??_myint+0)+0,w
  8382  0140  082F               	movlb 1	; select bank1
  8383  0141  0021               	movwf	(_wI2CCommandState)^080h
  8384  0142  00A6               	line	600
  8385                           	
  8386                           i1l4226:	
  8387  0143                     	movlw	low(((STR_11)|8000h))
  8388  0143  3064               	movlb 0	; select bank0
  8389  0144  0020               	movwf	(i1lcdWriteText@iText)
  8390  0145  00A0               	movlw	high(((STR_11)|8000h))
  8391  0146  3090               	movwf	((i1lcdWriteText@iText))+1
  8392  0147  00A1               	fcall	i1_lcdWriteText
  8393  0148  318C  24CB  3180   	line	601
  8394                           	goto	i1l207
  8395  014B  2952               	line	602
  8396                           	
  8397                           i1l235:	
  8398  014C                     	goto	i1l207
  8399  014C  2952               	line	605
  8400                           	
  8401                           i1l236:	
  8402  014D                     	goto	i1l207
  8403  014D  2952               	
  8404                           i1l234:	
  8405  014E                     	goto	i1l207
  8406  014E  2952               	line	606
  8407                           	
  8408                           i1l230:	
  8409  014F                     	goto	i1l207
  8410  014F  2952               	
  8411                           i1l228:	
  8412  0150                     	goto	i1l207
  8413  0150  2952               	line	607
  8414                           	
  8415                           i1l226:	
  8416  0151                     	goto	i1l207
  8417  0151  2952               	line	612
  8418                           	
  8419                           i1l208:	
  8420  0152                     	line	613
  8421                           	
  8422                           i1l207:	
  8423  0152                     	line	614
  8424                           	movlb 0	; select bank0
  8425  0152  0020               	btfss	(18),3	;volatile
  8426  0153  1D92               	goto	u300_21
  8427  0154  2956               	goto	u300_20
  8428  0155  2957               u300_21:
  8429  0156                     	goto	i1l4232
  8430  0156  2965               u300_20:
  8431  0157                     	line	616
  8432                           	
  8433                           i1l4228:	
  8434  0157                     	bcf	(18),3	;volatile
  8435  0157  1192               	line	617
  8436                           	
  8437                           i1l4230:	
  8438  0158                     	movlw	low(04Bh)
  8439  0158  304B               	movwf	(??_myint+0)+0
  8440  0159  00AF               	movf	(??_myint+0)+0,w
  8441  015A  082F               	movwf	(i1Add_Trace@iSizeOfoText)
  8442  015B  00A5               	movlw	low(((STR_12)|8000h))
  8443  015C  3055               	movwf	(i1Add_Trace@iText)
  8444  015D  00A6               	movlw	high(((STR_12)|8000h))
  8445  015E  3090               	movwf	((i1Add_Trace@iText))+1
  8446  015F  00A7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  8447  0160  30A0               	fcall	i1_Add_Trace
  8448  0161  318D  254F  3180   	goto	i1l4232
  8449  0164  2965               	line	618
  8450                           	
  8451                           i1l237:	
  8452  0165                     	line	619
  8453                           	
  8454                           i1l4232:	
  8455  0165                     	movlb 0	; select bank0
  8456  0165  0020               	btfss	(17),0	;volatile
  8457  0166  1C11               	goto	u301_21
  8458  0167  2969               	goto	u301_20
  8459  0168  296A               u301_21:
  8460  0169                     	goto	i1l238
  8461  0169  298E               u301_20:
  8462  016A                     	line	621
  8463                           	
  8464                           i1l4234:	
  8465  016A                     	movlw	low(01h)
  8466  016A  3001               	movwf	(??_myint+0)+0
  8467  016B  00AF               	movf	(??_myint+0)+0,w
  8468  016C  082F               	addwf	(_wTimer1IntCounter),f
  8469  016D  07D0               	line	622
  8470                           	
  8471                           i1l4236:	
  8472  016E                     	bcf	(17),0	;volatile
  8473  016E  1011               	line	624
  8474                           		movlw	7
  8475  016F  3007               	xorwf	((_wTimer1IntCounter)),w
  8476  0170  0650               	btfss	status,2
  8477  0171  1D03               	goto	u302_21
  8478  0172  2974               	goto	u302_20
  8479  0173  2975               u302_21:
  8480  0174                     	goto	i1l4240
  8481  0174  297A               u302_20:
  8482  0175                     	line	626
  8483                           	
  8484                           i1l4238:	
  8485  0175                     	movlw	low(04Ch)
  8486  0175  304C               	movwf	(23)	;volatile
  8487  0176  0097               	line	627
  8488                           	movlw	low(083h)
  8489  0177  3083               	movwf	(22)	;volatile
  8490  0178  0096               	goto	i1l4240
  8491  0179  297A               	line	628
  8492                           	
  8493                           i1l239:	
  8494  017A                     	line	629
  8495                           	
  8496                           i1l4240:	
  8497  017A                     		movlw	8
  8498  017A  3008               	xorwf	((_wTimer1IntCounter)),w
  8499  017B  0650               	btfss	status,2
  8500  017C  1D03               	goto	u303_21
  8501  017D  297F               	goto	u303_20
  8502  017E  2980               u303_21:
  8503  017F                     	goto	i1l238
  8504  017F  298E               u303_20:
  8505  0180                     	line	631
  8506                           	
  8507                           i1l4242:	
  8508  0180                     	clrf	(_wTimer1IntCounter)
  8509  0180  01D0               	line	633
  8510                           	
  8511                           i1l4244:	
  8512  0181                     	clrf	(_wTempUpdate)
  8513  0181  01D1               	incf	(_wTempUpdate),f
  8514  0182  0AD1               	line	634
  8515                           	
  8516                           i1l4246:	
  8517  0183                     		movlw	6
  8518  0183  3006               	movlb 1	; select bank1
  8519  0184  0021               	xorwf	((_wTempState)^080h),w
  8520  0185  0624               	btfss	status,2
  8521  0186  1D03               	goto	u304_21
  8522  0187  2989               	goto	u304_20
  8523  0188  298A               u304_21:
  8524  0189                     	goto	i1l238
  8525  0189  298E               u304_20:
  8526  018A                     	line	636
  8527                           	
  8528                           i1l4248:	
  8529  018A                     	clrf	(_wTempState)^080h
  8530  018A  01A4               	line	637
  8531                           	goto	i1l238
  8532  018B  298E               	line	638
  8533                           	
  8534                           i1l241:	
  8535  018C                     	goto	i1l238
  8536  018C  298E               	line	641
  8537                           	
  8538                           i1l242:	
  8539  018D                     	goto	i1l238
  8540  018D  298E               	line	642
  8541                           	
  8542                           i1l240:	
  8543  018E                     	line	643
  8544                           	
  8545                           i1l238:	
  8546  018E                     	line	644
  8547                           	btfss	(11),2	;volatile
  8548  018E  1D0B               	goto	u305_21
  8549  018F  2991               	goto	u305_20
  8550  0190  2992               u305_21:
  8551  0191                     	goto	i1l244
  8552  0191  299A               u305_20:
  8553  0192                     	line	646
  8554                           	
  8555                           i1l4250:	
  8556  0192                     	bcf	(11),2	;volatile
  8557  0192  110B               	line	647
  8558                           	
  8559                           i1l4252:	
  8560  0193                     	movlw	low(01h)
  8561  0193  3001               	movlb 0	; select bank0
  8562  0194  0020               	movwf	(??_myint+0)+0
  8563  0195  00AF               	movf	(??_myint+0)+0,w
  8564  0196  082F               	movlb 1	; select bank1
  8565  0197  0021               	addwf	(_wTimer0Counter)^080h,f
  8566  0198  07A5               	goto	i1l244
  8567  0199  299A               	line	648
  8568                           	
  8569                           i1l243:	
  8570  019A                     	line	649
  8571                           	
  8572                           i1l244:	
  8573  019A                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  8574  019A  107E               	retfie
  8575  019B  0009               	opt stack 0
  8576                           GLOBAL	__end_of_myint
  8577                           	__end_of_myint:
  8578  019C                     	signat	_myint,89
  8579                           	global	i1_lcdWriteText
  8580                           
  8581 ;; *************** function i1_lcdWriteText *****************
  8582 ;; Defined at:
  8583 ;;		line 41 in file "LCD_hd44780u_qy_2004a.c"
  8584 ;; Parameters:    Size  Location     Type
  8585 ;;  iText           2    0[BANK0 ] PTR unsigned char 
  8586 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  8587 ;;		 -> STR_6(16), STR_5(16), STR_4(16), STR_3(16), 
  8588 ;;		 -> main@wConv(4), wInterruptText(75), 
  8589 ;; Auto vars:     Size  Location     Type
  8590 ;;  lcdWriteText    1   13[COMMON] unsigned char 
  8591 ;; Return value:  Size  Location     Type
  8592 ;;                  1    wreg      void 
  8593 ;; Registers used:
  8594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8595 ;; Tracked objects:
  8596 ;;		On entry : 0/0
  8597 ;;		On exit  : 0/0
  8598 ;;		Unchanged: 0/0
  8599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8600 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8602 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  8603 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  8604 ;;Total ram usage:        6 bytes
  8605 ;; Hardware stack levels used:    1
  8606 ;; Hardware stack levels required when called:    4
  8607 ;; This function calls:
  8608 ;;		i1_writeTxtChk
  8609 ;; This function is called by:
  8610 ;;		_myint
  8611 ;; This function uses a non-reentrant model
  8612 ;;
  8613                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
  8614                           	file	"LCD_hd44780u_qy_2004a.c"
  8615                           	line	41
  8616                           global __ptext31
  8617                           __ptext31:	;psect for function i1_lcdWriteText
  8618  0CCB                     psect	text31
  8619                           	file	"LCD_hd44780u_qy_2004a.c"
  8620                           	line	41
  8621                           	global	__size_ofi1_lcdWriteText
  8622                           	__size_ofi1_lcdWriteText	equ	__end_ofi1_lcdWriteText-i1_lcdWriteText
  8623  002B                     	
  8624                           i1_lcdWriteText:	
  8625  0CCB                     ;incstack = 0
  8626                           	opt	stack 4
  8627                           ; Regs used in i1_lcdWriteText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8628                           	line	43
  8629                           	
  8630                           i1l3842:	
  8631  0CCB                     ;LCD_hd44780u_qy_2004a.c: 41: void lcdWriteText(char *iText);LCD_hd44780u_qy_2004a.c: 42
                                 :  {;LCD_hd44780u_qy_2004a.c: 43:   unsigned char wCharReadingPos = 0;
  8632                           	clrf	(i1lcdWriteText@wCharReadingPos)
  8633  0CCB  01FD               	line	44
  8634                           ;LCD_hd44780u_qy_2004a.c: 44:   while( iText[wCharReadingPos] != 0)
  8635                           	goto	i1l3848
  8636  0CCC  2CE3               	
  8637                           i1l281:	
  8638  0CCD                     	line	46
  8639                           	
  8640                           i1l3844:	
  8641  0CCD                     ;LCD_hd44780u_qy_2004a.c: 45:   {;LCD_hd44780u_qy_2004a.c: 46:     writeTxtChk(iText[wCh
                                 arReadingPos]);
  8642                           	movlb 0	; select bank0
  8643  0CCD  0020               	movf	(i1lcdWriteText@iText+1),w
  8644  0CCE  0821               	movwf	(??i1_lcdWriteText+0)+0+1
  8645  0CCF  00A3               	movf	(i1lcdWriteText@iText),w
  8646  0CD0  0820               	movwf	(??i1_lcdWriteText+0)+0
  8647  0CD1  00A2               	movf	(i1lcdWriteText@wCharReadingPos),w
  8648  0CD2  087D               	addwf	(??i1_lcdWriteText+0)+0,w
  8649  0CD3  0722               	movwf	fsr0l
  8650  0CD4  0084               	movf	(??i1_lcdWriteText+0)+1,w
  8651  0CD5  0823               	skipnc
  8652  0CD6  1803               	incf	(??i1_lcdWriteText+0)+1,w
  8653  0CD7  0A23               	movwf	fsr0h
  8654  0CD8  0085               
  8655                           	movf	indf0,w ;code access
  8656  0CD9  0800               	fcall	i1_writeTxtChk
  8657  0CDA  3186  26D2  318C   	line	47
  8658                           	
  8659                           i1l3846:	
  8660  0CDD                     ;LCD_hd44780u_qy_2004a.c: 47:     wCharReadingPos++;
  8661                           	movlw	low(01h)
  8662  0CDD  3001               	movlb 0	; select bank0
  8663  0CDE  0020               	movwf	(??i1_lcdWriteText+0)+0
  8664  0CDF  00A2               	movf	(??i1_lcdWriteText+0)+0,w
  8665  0CE0  0822               	addwf	(i1lcdWriteText@wCharReadingPos),f
  8666  0CE1  07FD               	goto	i1l3848
  8667  0CE2  2CE3               	line	48
  8668                           ;LCD_hd44780u_qy_2004a.c: 48:   }
  8669                           	
  8670                           i1l280:	
  8671  0CE3                     	line	44
  8672                           	
  8673                           i1l3848:	
  8674  0CE3                     ;LCD_hd44780u_qy_2004a.c: 44:   while( iText[wCharReadingPos] != 0)
  8675                           	movlb 0	; select bank0
  8676  0CE3  0020               	movf	(i1lcdWriteText@iText+1),w
  8677  0CE4  0821               	movwf	(??i1_lcdWriteText+0)+0+1
  8678  0CE5  00A3               	movf	(i1lcdWriteText@iText),w
  8679  0CE6  0820               	movwf	(??i1_lcdWriteText+0)+0
  8680  0CE7  00A2               	movf	(i1lcdWriteText@wCharReadingPos),w
  8681  0CE8  087D               	addwf	(??i1_lcdWriteText+0)+0,w
  8682  0CE9  0722               	movwf	fsr0l
  8683  0CEA  0084               	movf	(??i1_lcdWriteText+0)+1,w
  8684  0CEB  0823               	skipnc
  8685  0CEC  1803               	incf	(??i1_lcdWriteText+0)+1,w
  8686  0CED  0A23               	movwf	fsr0h
  8687  0CEE  0085               
  8688                           	moviw	fsr0++
  8689  0CEF  0012               	btfss	status,2
  8690  0CF0  1D03               	goto	u267_21
  8691  0CF1  2CF3               	goto	u267_20
  8692  0CF2  2CF4               u267_21:
  8693  0CF3                     	goto	i1l3844
  8694  0CF3  2CCD               u267_20:
  8695  0CF4                     	goto	i1l283
  8696  0CF4  2CF5               	
  8697                           i1l282:	
  8698  0CF5                     	line	50
  8699                           	
  8700                           i1l283:	
  8701  0CF5                     	return
  8702  0CF5  0008               	opt stack 0
  8703                           GLOBAL	__end_ofi1_lcdWriteText
  8704                           	__end_ofi1_lcdWriteText:
  8705  0CF6                     	signat	i1_lcdWriteText,89
  8706                           	global	i1_writeTxtChk
  8707                           
  8708 ;; *************** function i1_writeTxtChk *****************
  8709 ;; Defined at:
  8710 ;;		line 79 in file "LCD_hd44780u_qy_2004a.c"
  8711 ;; Parameters:    Size  Location     Type
  8712 ;;  iOpCode         1    wreg     unsigned char 
  8713 ;; Auto vars:     Size  Location     Type
  8714 ;;  iOpCode         1   12[COMMON] unsigned char 
  8715 ;; Return value:  Size  Location     Type
  8716 ;;                  1    wreg      void 
  8717 ;; Registers used:
  8718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8719 ;; Tracked objects:
  8720 ;;		On entry : 0/0
  8721 ;;		On exit  : 0/0
  8722 ;;		Unchanged: 0/0
  8723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8726 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8727 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8728 ;;Total ram usage:        3 bytes
  8729 ;; Hardware stack levels used:    1
  8730 ;; Hardware stack levels required when called:    3
  8731 ;; This function calls:
  8732 ;;		i1_SetToSendDataToLCD
  8733 ;;		i1_setCursorPosition
  8734 ;;		i1_setData
  8735 ;;		i1_waitLCDBusy
  8736 ;; This function is called by:
  8737 ;;		i1_lcdWriteText
  8738 ;; This function uses a non-reentrant model
  8739 ;;
  8740                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
  8741                           	line	79
  8742                           global __ptext32
  8743                           __ptext32:	;psect for function i1_writeTxtChk
  8744  06D2                     psect	text32
  8745                           	file	"LCD_hd44780u_qy_2004a.c"
  8746                           	line	79
  8747                           	global	__size_ofi1_writeTxtChk
  8748                           	__size_ofi1_writeTxtChk	equ	__end_ofi1_writeTxtChk-i1_writeTxtChk
  8749  0090                     	
  8750                           i1_writeTxtChk:	
  8751  06D2                     ;incstack = 0
  8752                           	opt	stack 4
  8753                           ; Regs used in i1_writeTxtChk: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8754                           ;i1writeTxtChk@iOpCode stored from wreg
  8755                           	movwf	(i1writeTxtChk@iOpCode)
  8756  06D2  00FC               	line	81
  8757                           	
  8758                           i1l3626:	
  8759  06D3                     ;LCD_hd44780u_qy_2004a.c: 79: void writeTxtChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 80
                                 : {;LCD_hd44780u_qy_2004a.c: 81:   SetToSendDataToLCD();
  8760                           	fcall	i1_SetToSendDataToLCD
  8761  06D3  318B  2309  3186   	line	82
  8762                           	
  8763                           i1l3628:	
  8764  06D6                     ;LCD_hd44780u_qy_2004a.c: 82:   PORTAbits.RA4 = 1;
  8765                           	movlb 0	; select bank0
  8766  06D6  0020               	bsf	(12),4	;volatile
  8767  06D7  160C               	line	83
  8768                           	
  8769                           i1l3630:	
  8770  06D8                     ;LCD_hd44780u_qy_2004a.c: 83:   PORTAbits.RA7 = 0;
  8771                           	bcf	(12),7	;volatile
  8772  06D8  138C               	line	84
  8773                           	
  8774                           i1l3632:	
  8775  06D9                     ;LCD_hd44780u_qy_2004a.c: 84:   if(iOpCode == '\n')
  8776                           		movlw	10
  8777  06D9  300A               	xorwf	((i1writeTxtChk@iOpCode)),w
  8778  06DA  067C               	btfss	status,2
  8779  06DB  1D03               	goto	u250_21
  8780  06DC  2EDE               	goto	u250_20
  8781  06DD  2EDF               u250_21:
  8782  06DE                     	goto	i1l3662
  8783  06DE  2F2C               u250_20:
  8784  06DF                     	line	86
  8785                           	
  8786                           i1l3634:	
  8787  06DF                     ;LCD_hd44780u_qy_2004a.c: 85:   {;LCD_hd44780u_qy_2004a.c: 86:    if(mWritingPosition < 
                                 20)
  8788                           	movlw	low(014h)
  8789  06DF  3014               	subwf	(_mWritingPosition),w
  8790  06E0  0259               	skipnc
  8791  06E1  1803               	goto	u251_21
  8792  06E2  2EE4               	goto	u251_20
  8793  06E3  2EE5               u251_21:
  8794  06E4                     	goto	i1l3638
  8795  06E4  2EEB               u251_20:
  8796  06E5                     	line	88
  8797                           	
  8798                           i1l3636:	
  8799  06E5                     ;LCD_hd44780u_qy_2004a.c: 87:    {;LCD_hd44780u_qy_2004a.c: 88:        setCursorPosition
                                 (1,0);
  8800                           	clrf	(i1setCursorPosition@iPosition)
  8801  06E5  01F5               	movlw	low(01h)
  8802  06E6  3001               	fcall	i1_setCursorPosition
  8803  06E7  318F  279E  3186   	line	89
  8804                           ;LCD_hd44780u_qy_2004a.c: 89:    }
  8805                           	goto	i1l305
  8806  06EA  2F61               	line	90
  8807                           ;LCD_hd44780u_qy_2004a.c: 90:    else if(mWritingPosition < 40)
  8808                           	
  8809                           i1l299:	
  8810  06EB                     	
  8811                           i1l3638:	
  8812  06EB                     	movlw	low(028h)
  8813  06EB  3028               	movlb 0	; select bank0
  8814  06EC  0020               	subwf	(_mWritingPosition),w
  8815  06ED  0259               	skipnc
  8816  06EE  1803               	goto	u252_21
  8817  06EF  2EF1               	goto	u252_20
  8818  06F0  2EF2               u252_21:
  8819  06F1                     	goto	i1l3642
  8820  06F1  2EF8               u252_20:
  8821  06F2                     	line	92
  8822                           	
  8823                           i1l3640:	
  8824  06F2                     ;LCD_hd44780u_qy_2004a.c: 91:    {;LCD_hd44780u_qy_2004a.c: 92:        setCursorPosition
                                 (2,0);
  8825                           	clrf	(i1setCursorPosition@iPosition)
  8826  06F2  01F5               	movlw	low(02h)
  8827  06F3  3002               	fcall	i1_setCursorPosition
  8828  06F4  318F  279E  3186   	line	93
  8829                           ;LCD_hd44780u_qy_2004a.c: 93:    }
  8830                           	goto	i1l305
  8831  06F7  2F61               	line	94
  8832                           ;LCD_hd44780u_qy_2004a.c: 94:    else if(mWritingPosition < 60)
  8833                           	
  8834                           i1l301:	
  8835  06F8                     	
  8836                           i1l3642:	
  8837  06F8                     	movlw	low(03Ch)
  8838  06F8  303C               	movlb 0	; select bank0
  8839  06F9  0020               	subwf	(_mWritingPosition),w
  8840  06FA  0259               	skipnc
  8841  06FB  1803               	goto	u253_21
  8842  06FC  2EFE               	goto	u253_20
  8843  06FD  2EFF               u253_21:
  8844  06FE                     	goto	i1l3646
  8845  06FE  2F05               u253_20:
  8846  06FF                     	line	96
  8847                           	
  8848                           i1l3644:	
  8849  06FF                     ;LCD_hd44780u_qy_2004a.c: 95:    {;LCD_hd44780u_qy_2004a.c: 96:        setCursorPosition
                                 (3,0);
  8850                           	clrf	(i1setCursorPosition@iPosition)
  8851  06FF  01F5               	movlw	low(03h)
  8852  0700  3003               	fcall	i1_setCursorPosition
  8853  0701  318F  279E  3186   	line	97
  8854                           ;LCD_hd44780u_qy_2004a.c: 97:    }
  8855                           	goto	i1l305
  8856  0704  2F61               	line	98
  8857                           ;LCD_hd44780u_qy_2004a.c: 98:    else
  8858                           	
  8859                           i1l303:	
  8860  0705                     	line	100
  8861                           	
  8862                           i1l3646:	
  8863  0705                     ;LCD_hd44780u_qy_2004a.c: 99:    {;LCD_hd44780u_qy_2004a.c: 100:        setCursorPositio
                                 n(0,0);
  8864                           	clrf	(i1setCursorPosition@iPosition)
  8865  0705  01F5               	movlw	low(0)
  8866  0706  3000               	fcall	i1_setCursorPosition
  8867  0707  318F  279E  3186   	goto	i1l305
  8868  070A  2F61               	line	101
  8869                           ;LCD_hd44780u_qy_2004a.c: 101:    }
  8870                           	
  8871                           i1l304:	
  8872  070B                     	goto	i1l305
  8873  070B  2F61               	
  8874                           i1l302:	
  8875  070C                     	goto	i1l305
  8876  070C  2F61               	
  8877                           i1l300:	
  8878  070D                     	goto	i1l305
  8879  070D  2F61               	line	102
  8880                           	
  8881                           i1l3648:	
  8882  070E                     ;LCD_hd44780u_qy_2004a.c: 102:    return;
  8883                           	goto	i1l305
  8884  070E  2F61               	line	103
  8885                           ;LCD_hd44780u_qy_2004a.c: 103:   }
  8886                           	
  8887                           i1l298:	
  8888  070F                     	line	104
  8889                           ;LCD_hd44780u_qy_2004a.c: 104:   switch(mWritingPosition)
  8890                           	goto	i1l3662
  8891  070F  2F2C               	line	106
  8892                           ;LCD_hd44780u_qy_2004a.c: 105:   {;LCD_hd44780u_qy_2004a.c: 106:     case 20:
  8893                           	
  8894                           i1l307:	
  8895  0710                     	line	107
  8896                           	
  8897                           i1l3650:	
  8898  0710                     ;LCD_hd44780u_qy_2004a.c: 107:       setCursorPosition(1,0);
  8899                           	clrf	(i1setCursorPosition@iPosition)
  8900  0710  01F5               	movlw	low(01h)
  8901  0711  3001               	fcall	i1_setCursorPosition
  8902  0712  318F  279E  3186   	line	108
  8903                           ;LCD_hd44780u_qy_2004a.c: 108:       break;
  8904                           	goto	i1l3664
  8905  0715  2F43               	line	109
  8906                           ;LCD_hd44780u_qy_2004a.c: 109:     case 40:
  8907                           	
  8908                           i1l309:	
  8909  0716                     	line	110
  8910                           	
  8911                           i1l3652:	
  8912  0716                     ;LCD_hd44780u_qy_2004a.c: 110:       setCursorPosition(2,0);
  8913                           	clrf	(i1setCursorPosition@iPosition)
  8914  0716  01F5               	movlw	low(02h)
  8915  0717  3002               	fcall	i1_setCursorPosition
  8916  0718  318F  279E  3186   	line	111
  8917                           ;LCD_hd44780u_qy_2004a.c: 111:       break;
  8918                           	goto	i1l3664
  8919  071B  2F43               	line	112
  8920                           ;LCD_hd44780u_qy_2004a.c: 112:     case 60:
  8921                           	
  8922                           i1l310:	
  8923  071C                     	line	113
  8924                           	
  8925                           i1l3654:	
  8926  071C                     ;LCD_hd44780u_qy_2004a.c: 113:       setCursorPosition(3,0);
  8927                           	clrf	(i1setCursorPosition@iPosition)
  8928  071C  01F5               	movlw	low(03h)
  8929  071D  3003               	fcall	i1_setCursorPosition
  8930  071E  318F  279E  3186   	line	114
  8931                           ;LCD_hd44780u_qy_2004a.c: 114:       break;
  8932                           	goto	i1l3664
  8933  0721  2F43               	line	115
  8934                           ;LCD_hd44780u_qy_2004a.c: 115:     case 80:
  8935                           	
  8936                           i1l311:	
  8937  0722                     	line	116
  8938                           	
  8939                           i1l3656:	
  8940  0722                     ;LCD_hd44780u_qy_2004a.c: 116:       setCursorPosition(0,0);
  8941                           	clrf	(i1setCursorPosition@iPosition)
  8942  0722  01F5               	movlw	low(0)
  8943  0723  3000               	fcall	i1_setCursorPosition
  8944  0724  318F  279E  3186   	line	117
  8945                           	
  8946                           i1l3658:	
  8947  0727                     ;LCD_hd44780u_qy_2004a.c: 117:       mWritingPosition = 0;
  8948                           	movlb 0	; select bank0
  8949  0727  0020               	clrf	(_mWritingPosition)
  8950  0728  01D9               	line	118
  8951                           ;LCD_hd44780u_qy_2004a.c: 118:       break;
  8952                           	goto	i1l3664
  8953  0729  2F43               	line	119
  8954                           ;LCD_hd44780u_qy_2004a.c: 119:     default:
  8955                           	
  8956                           i1l312:	
  8957  072A                     	line	120
  8958                           ;LCD_hd44780u_qy_2004a.c: 120:       break;
  8959                           	goto	i1l3664
  8960  072A  2F43               	line	121
  8961                           	
  8962                           i1l3660:	
  8963  072B                     ;LCD_hd44780u_qy_2004a.c: 121:   }
  8964                           	goto	i1l3664
  8965  072B  2F43               	
  8966                           i1l306:	
  8967  072C                     	
  8968                           i1l3662:	
  8969  072C                     	movlb 0	; select bank0
  8970  072C  0020               	movf	(_mWritingPosition),w
  8971  072D  0859               	movwf	(??i1_writeTxtChk+0)+0
  8972  072E  00FA               	clrf	(??i1_writeTxtChk+0)+0+1
  8973  072F  01FB               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  8974                           ; Switch size 1, requested type "space"
  8975                           ; Number of cases is 1, Range of values is 0 to 0
  8976                           ; switch strategies available:
  8977                           ; Name         Instructions Cycles
  8978                           ; simple_byte            4     3 (average)
  8979                           ; direct_byte            8     6 (fixed)
  8980                           ; jumptable            260     6 (fixed)
  8981                           ;	Chosen strategy is simple_byte
  8982                           
  8983                           	movf 1+(??i1_writeTxtChk+0)+0,w
  8984  0730  087B               	opt asmopt_push
  8985                           	opt asmopt_off
  8986                           	xorlw	0^0	; case 0
  8987  0731  3A00               	skipnz
  8988  0732  1903               	goto	i1l4486
  8989  0733  2F35               	goto	i1l3664
  8990  0734  2F43               	opt asmopt_pop
  8991                           	
  8992                           i1l4486:	
  8993  0735                     ; Switch size 1, requested type "space"
  8994                           ; Number of cases is 4, Range of values is 20 to 80
  8995                           ; switch strategies available:
  8996                           ; Name         Instructions Cycles
  8997                           ; simple_byte           13     7 (average)
  8998                           ; direct_byte          131     9 (fixed)
  8999                           ; jumptable            263     9 (fixed)
  9000                           ;	Chosen strategy is simple_byte
  9001                           
  9002                           	movf 0+(??i1_writeTxtChk+0)+0,w
  9003  0735  087A               	opt asmopt_push
  9004                           	opt asmopt_off
  9005                           	xorlw	20^0	; case 20
  9006  0736  3A14               	skipnz
  9007  0737  1903               	goto	i1l3650
  9008  0738  2F10               	xorlw	40^20	; case 40
  9009  0739  3A3C               	skipnz
  9010  073A  1903               	goto	i1l3652
  9011  073B  2F16               	xorlw	60^40	; case 60
  9012  073C  3A14               	skipnz
  9013  073D  1903               	goto	i1l3654
  9014  073E  2F1C               	xorlw	80^60	; case 80
  9015  073F  3A6C               	skipnz
  9016  0740  1903               	goto	i1l3656
  9017  0741  2F22               	goto	i1l3664
  9018  0742  2F43               	opt asmopt_pop
  9019                           
  9020                           	
  9021                           i1l308:	
  9022  0743                     	line	122
  9023                           	
  9024                           i1l3664:	
  9025  0743                     ;LCD_hd44780u_qy_2004a.c: 122:   waitLCDBusy();
  9026                           	fcall	i1_waitLCDBusy
  9027  0743  318C  24F6  3186   	line	123
  9028                           	
  9029                           i1l3666:	
  9030  0746                     ;LCD_hd44780u_qy_2004a.c: 123:   SetToSendDataToLCD();
  9031                           	fcall	i1_SetToSendDataToLCD
  9032  0746  318B  2309  3186   	line	124
  9033                           	
  9034                           i1l3668:	
  9035  0749                     ;LCD_hd44780u_qy_2004a.c: 124:   PORTAbits.RA4 = 1;
  9036                           	movlb 0	; select bank0
  9037  0749  0020               	bsf	(12),4	;volatile
  9038  074A  160C               	line	125
  9039                           	
  9040                           i1l3670:	
  9041  074B                     ;LCD_hd44780u_qy_2004a.c: 125:   PORTAbits.RA7 = 0;
  9042                           	bcf	(12),7	;volatile
  9043  074B  138C               	line	126
  9044                           	
  9045                           i1l3672:	
  9046  074C                     ;LCD_hd44780u_qy_2004a.c: 126:   setData(iOpCode >> 4);
  9047                           	movf	(i1writeTxtChk@iOpCode),w
  9048  074C  087C               	movwf	(??i1_writeTxtChk+0)+0
  9049  074D  00FA               	movlw	04h
  9050  074E  3004               u254_25:
  9051  074F                     	lsrf	(??i1_writeTxtChk+0)+0,f
  9052  074F  36FA               	decfsz	wreg,f
  9053  0750  0B89               	goto	u254_25
  9054  0751  2F4F               	movf	0+(??i1_writeTxtChk+0)+0,w
  9055  0752  087A               	fcall	i1_setData
  9056  0753  318D  2589  3186   	line	127
  9057                           	
  9058                           i1l3674:	
  9059  0756                     ;LCD_hd44780u_qy_2004a.c: 127:   setData(iOpCode);
  9060                           	movf	(i1writeTxtChk@iOpCode),w
  9061  0756  087C               	fcall	i1_setData
  9062  0757  318D  2589  3186   	line	128
  9063                           	
  9064                           i1l3676:	
  9065  075A                     ;LCD_hd44780u_qy_2004a.c: 128:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  9066                           		opt asmopt_push
  9067                           	opt asmopt_off
  9068                           	nop2	;2 cycle nop
  9069  075A  3200               	nop2	;2 cycle nop
  9070  075B  3200               	opt asmopt_pop
  9071                           
  9072                           	line	129
  9073                           	
  9074                           i1l3678:	
  9075  075C                     ;LCD_hd44780u_qy_2004a.c: 129:   mWritingPosition++;
  9076                           	movlw	low(01h)
  9077  075C  3001               	movwf	(??i1_writeTxtChk+0)+0
  9078  075D  00FA               	movf	(??i1_writeTxtChk+0)+0,w
  9079  075E  087A               	movlb 0	; select bank0
  9080  075F  0020               	addwf	(_mWritingPosition),f
  9081  0760  07D9               	line	130
  9082                           	
  9083                           i1l305:	
  9084  0761                     	return
  9085  0761  0008               	opt stack 0
  9086                           GLOBAL	__end_ofi1_writeTxtChk
  9087                           	__end_ofi1_writeTxtChk:
  9088  0762                     	signat	i1_writeTxtChk,89
  9089                           	global	i1_setCursorPosition
  9090                           
  9091 ;; *************** function i1_setCursorPosition *****************
  9092 ;; Defined at:
  9093 ;;		line 254 in file "LCD_hd44780u_qy_2004a.c"
  9094 ;; Parameters:    Size  Location     Type
  9095 ;;  iLine           1    wreg     unsigned char 
  9096 ;;  iPosition       1    5[COMMON] unsigned char 
  9097 ;; Auto vars:     Size  Location     Type
  9098 ;;  iLine           1    8[COMMON] unsigned char 
  9099 ;;  setCursorPos    1    9[COMMON] unsigned char 
  9100 ;; Return value:  Size  Location     Type
  9101 ;;                  1    wreg      void 
  9102 ;; Registers used:
  9103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9104 ;; Tracked objects:
  9105 ;;		On entry : 0/0
  9106 ;;		On exit  : 0/0
  9107 ;;		Unchanged: 0/0
  9108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9109 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9110 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9111 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9112 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9113 ;;Total ram usage:        5 bytes
  9114 ;; Hardware stack levels used:    1
  9115 ;; Hardware stack levels required when called:    2
  9116 ;; This function calls:
  9117 ;;		i1_SetToSendDataToLCD
  9118 ;;		i1_setData
  9119 ;;		i1_waitLCDBusy
  9120 ;; This function is called by:
  9121 ;;		i1_writeTxtChk
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
  9125                           	line	254
  9126                           global __ptext33
  9127                           __ptext33:	;psect for function i1_setCursorPosition
  9128  0F9E                     psect	text33
  9129                           	file	"LCD_hd44780u_qy_2004a.c"
  9130                           	line	254
  9131                           	global	__size_ofi1_setCursorPosition
  9132                           	__size_ofi1_setCursorPosition	equ	__end_ofi1_setCursorPosition-i1_setCursorPosition
  9133  0062                     	
  9134                           i1_setCursorPosition:	
  9135  0F9E                     ;incstack = 0
  9136                           	opt	stack 4
  9137                           ; Regs used in i1_setCursorPosition: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9138                           ;i1setCursorPosition@iLine stored from wreg
  9139                           	movwf	(i1setCursorPosition@iLine)
  9140  0F9E  00F8               	line	256
  9141                           	
  9142                           i1l3444:	
  9143  0F9F                     ;LCD_hd44780u_qy_2004a.c: 254: void setCursorPosition(char iLine, char iPosition);LCD_hd
                                 44780u_qy_2004a.c: 255: {;LCD_hd44780u_qy_2004a.c: 256:   char wLCDIndex=0;
  9144                           	clrf	(i1setCursorPosition@wLCDIndex)
  9145  0F9F  01F9               	line	258
  9146                           ;LCD_hd44780u_qy_2004a.c: 258:   switch(iLine)
  9147                           	goto	i1l3456
  9148  0FA0  2FD1               	line	260
  9149                           ;LCD_hd44780u_qy_2004a.c: 259:   {;LCD_hd44780u_qy_2004a.c: 260:       case 0:
  9150                           	
  9151                           i1l376:	
  9152  0FA1                     	line	261
  9153                           	
  9154                           i1l3446:	
  9155  0FA1                     ;LCD_hd44780u_qy_2004a.c: 261:           wLCDIndex = 0x00 + iPosition;
  9156                           	movf	(i1setCursorPosition@iPosition),w
  9157  0FA1  0875               	movwf	(??i1_setCursorPosition+0)+0
  9158  0FA2  00F6               	movf	(??i1_setCursorPosition+0)+0,w
  9159  0FA3  0876               	movwf	(i1setCursorPosition@wLCDIndex)
  9160  0FA4  00F9               	line	262
  9161                           ;LCD_hd44780u_qy_2004a.c: 262:           mWritingPosition = iPosition;
  9162                           	movf	(i1setCursorPosition@iPosition),w
  9163  0FA5  0875               	movwf	(??i1_setCursorPosition+0)+0
  9164  0FA6  00F6               	movf	(??i1_setCursorPosition+0)+0,w
  9165  0FA7  0876               	movlb 0	; select bank0
  9166  0FA8  0020               	movwf	(_mWritingPosition)
  9167  0FA9  00D9               	line	263
  9168                           ;LCD_hd44780u_qy_2004a.c: 263:           break;
  9169                           	goto	i1l3458
  9170  0FAA  2FE7               	line	264
  9171                           ;LCD_hd44780u_qy_2004a.c: 264:       case 1:
  9172                           	
  9173                           i1l378:	
  9174  0FAB                     	line	265
  9175                           	
  9176                           i1l3448:	
  9177  0FAB                     ;LCD_hd44780u_qy_2004a.c: 265:           wLCDIndex = 0x40 + iPosition;
  9178                           	movf	(i1setCursorPosition@iPosition),w
  9179  0FAB  0875               	addlw	040h
  9180  0FAC  3E40               	movwf	(??i1_setCursorPosition+0)+0
  9181  0FAD  00F6               	movf	(??i1_setCursorPosition+0)+0,w
  9182  0FAE  0876               	movwf	(i1setCursorPosition@wLCDIndex)
  9183  0FAF  00F9               	line	266
  9184                           ;LCD_hd44780u_qy_2004a.c: 266:           mWritingPosition = 20 + iPosition;
  9185                           	movf	(i1setCursorPosition@iPosition),w
  9186  0FB0  0875               	addlw	014h
  9187  0FB1  3E14               	movwf	(??i1_setCursorPosition+0)+0
  9188  0FB2  00F6               	movf	(??i1_setCursorPosition+0)+0,w
  9189  0FB3  0876               	movlb 0	; select bank0
  9190  0FB4  0020               	movwf	(_mWritingPosition)
  9191  0FB5  00D9               	line	267
  9192                           ;LCD_hd44780u_qy_2004a.c: 267:           break;
  9193                           	goto	i1l3458
  9194  0FB6  2FE7               	line	268
  9195                           ;LCD_hd44780u_qy_2004a.c: 268:       case 2:
  9196                           	
  9197                           i1l379:	
  9198  0FB7                     	line	269
  9199                           	
  9200                           i1l3450:	
  9201  0FB7                     ;LCD_hd44780u_qy_2004a.c: 269:           wLCDIndex = 0x14 + iPosition;
  9202                           	movf	(i1setCursorPosition@iPosition),w
  9203  0FB7  0875               	addlw	014h
  9204  0FB8  3E14               	movwf	(??i1_setCursorPosition+0)+0
  9205  0FB9  00F6               	movf	(??i1_setCursorPosition+0)+0,w
  9206  0FBA  0876               	movwf	(i1setCursorPosition@wLCDIndex)
  9207  0FBB  00F9               	line	270
  9208                           ;LCD_hd44780u_qy_2004a.c: 270:           mWritingPosition = 40 + iPosition;
  9209                           	movf	(i1setCursorPosition@iPosition),w
  9210  0FBC  0875               	addlw	028h
  9211  0FBD  3E28               	movwf	(??i1_setCursorPosition+0)+0
  9212  0FBE  00F6               	movf	(??i1_setCursorPosition+0)+0,w
  9213  0FBF  0876               	movlb 0	; select bank0
  9214  0FC0  0020               	movwf	(_mWritingPosition)
  9215  0FC1  00D9               	line	271
  9216                           ;LCD_hd44780u_qy_2004a.c: 271:           break;
  9217                           	goto	i1l3458
  9218  0FC2  2FE7               	line	272
  9219                           ;LCD_hd44780u_qy_2004a.c: 272:       case 3:
  9220                           	
  9221                           i1l380:	
  9222  0FC3                     	line	273
  9223                           	
  9224                           i1l3452:	
  9225  0FC3                     ;LCD_hd44780u_qy_2004a.c: 273:           wLCDIndex = 0x54 + iPosition;
  9226                           	movf	(i1setCursorPosition@iPosition),w
  9227  0FC3  0875               	addlw	054h
  9228  0FC4  3E54               	movwf	(??i1_setCursorPosition+0)+0
  9229  0FC5  00F6               	movf	(??i1_setCursorPosition+0)+0,w
  9230  0FC6  0876               	movwf	(i1setCursorPosition@wLCDIndex)
  9231  0FC7  00F9               	line	274
  9232                           ;LCD_hd44780u_qy_2004a.c: 274:           mWritingPosition = 60 + iPosition;
  9233                           	movf	(i1setCursorPosition@iPosition),w
  9234  0FC8  0875               	addlw	03Ch
  9235  0FC9  3E3C               	movwf	(??i1_setCursorPosition+0)+0
  9236  0FCA  00F6               	movf	(??i1_setCursorPosition+0)+0,w
  9237  0FCB  0876               	movlb 0	; select bank0
  9238  0FCC  0020               	movwf	(_mWritingPosition)
  9239  0FCD  00D9               	line	275
  9240                           ;LCD_hd44780u_qy_2004a.c: 275:           break;
  9241                           	goto	i1l3458
  9242  0FCE  2FE7               	line	276
  9243                           ;LCD_hd44780u_qy_2004a.c: 276:       default:
  9244                           	
  9245                           i1l381:	
  9246  0FCF                     	line	277
  9247                           ;LCD_hd44780u_qy_2004a.c: 277:       break;
  9248                           	goto	i1l3458
  9249  0FCF  2FE7               	line	278
  9250                           	
  9251                           i1l3454:	
  9252  0FD0                     ;LCD_hd44780u_qy_2004a.c: 278:   }
  9253                           	goto	i1l3458
  9254  0FD0  2FE7               	
  9255                           i1l375:	
  9256  0FD1                     	
  9257                           i1l3456:	
  9258  0FD1                     	movf	(i1setCursorPosition@iLine),w
  9259  0FD1  0878               	movwf	(??i1_setCursorPosition+0)+0
  9260  0FD2  00F6               	clrf	(??i1_setCursorPosition+0)+0+1
  9261  0FD3  01F7               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9262                           ; Switch size 1, requested type "space"
  9263                           ; Number of cases is 1, Range of values is 0 to 0
  9264                           ; switch strategies available:
  9265                           ; Name         Instructions Cycles
  9266                           ; simple_byte            4     3 (average)
  9267                           ; direct_byte            8     6 (fixed)
  9268                           ; jumptable            260     6 (fixed)
  9269                           ;	Chosen strategy is simple_byte
  9270                           
  9271                           	movf 1+(??i1_setCursorPosition+0)+0,w
  9272  0FD4  0877               	opt asmopt_push
  9273                           	opt asmopt_off
  9274                           	xorlw	0^0	; case 0
  9275  0FD5  3A00               	skipnz
  9276  0FD6  1903               	goto	i1l4488
  9277  0FD7  2FD9               	goto	i1l3458
  9278  0FD8  2FE7               	opt asmopt_pop
  9279                           	
  9280                           i1l4488:	
  9281  0FD9                     ; Switch size 1, requested type "space"
  9282                           ; Number of cases is 4, Range of values is 0 to 3
  9283                           ; switch strategies available:
  9284                           ; Name         Instructions Cycles
  9285                           ; simple_byte           13     7 (average)
  9286                           ; direct_byte           14     6 (fixed)
  9287                           ; jumptable            260     6 (fixed)
  9288                           ;	Chosen strategy is simple_byte
  9289                           
  9290                           	movf 0+(??i1_setCursorPosition+0)+0,w
  9291  0FD9  0876               	opt asmopt_push
  9292                           	opt asmopt_off
  9293                           	xorlw	0^0	; case 0
  9294  0FDA  3A00               	skipnz
  9295  0FDB  1903               	goto	i1l3446
  9296  0FDC  2FA1               	xorlw	1^0	; case 1
  9297  0FDD  3A01               	skipnz
  9298  0FDE  1903               	goto	i1l3448
  9299  0FDF  2FAB               	xorlw	2^1	; case 2
  9300  0FE0  3A03               	skipnz
  9301  0FE1  1903               	goto	i1l3450
  9302  0FE2  2FB7               	xorlw	3^2	; case 3
  9303  0FE3  3A01               	skipnz
  9304  0FE4  1903               	goto	i1l3452
  9305  0FE5  2FC3               	goto	i1l3458
  9306  0FE6  2FE7               	opt asmopt_pop
  9307                           
  9308                           	
  9309                           i1l377:	
  9310  0FE7                     	line	280
  9311                           	
  9312                           i1l3458:	
  9313  0FE7                     ;LCD_hd44780u_qy_2004a.c: 280:   waitLCDBusy();
  9314                           	fcall	i1_waitLCDBusy
  9315  0FE7  318C  24F6  318F   	line	282
  9316                           	
  9317                           i1l3460:	
  9318  0FEA                     ;LCD_hd44780u_qy_2004a.c: 282:   SetToSendDataToLCD();
  9319                           	fcall	i1_SetToSendDataToLCD
  9320  0FEA  318B  2309  318F   	line	283
  9321                           	
  9322                           i1l3462:	
  9323  0FED                     ;LCD_hd44780u_qy_2004a.c: 283:   PORTAbits.RA4 = 0;
  9324                           	movlb 0	; select bank0
  9325  0FED  0020               	bcf	(12),4	;volatile
  9326  0FEE  120C               	line	284
  9327                           	
  9328                           i1l3464:	
  9329  0FEF                     ;LCD_hd44780u_qy_2004a.c: 284:   PORTAbits.RA7 = 0;
  9330                           	bcf	(12),7	;volatile
  9331  0FEF  138C               	line	285
  9332                           	
  9333                           i1l3466:	
  9334  0FF0                     ;LCD_hd44780u_qy_2004a.c: 285:   setData((wLCDIndex >> 4) | 0x8 );
  9335                           	movf	(i1setCursorPosition@wLCDIndex),w
  9336  0FF0  0879               	movwf	(??i1_setCursorPosition+0)+0
  9337  0FF1  00F6               	movlw	04h
  9338  0FF2  3004               u222_25:
  9339  0FF3                     	lsrf	(??i1_setCursorPosition+0)+0,f
  9340  0FF3  36F6               	decfsz	wreg,f
  9341  0FF4  0B89               	goto	u222_25
  9342  0FF5  2FF3               	movf	0+(??i1_setCursorPosition+0)+0,w
  9343  0FF6  0876               	iorlw	08h
  9344  0FF7  3808               	fcall	i1_setData
  9345  0FF8  318D  2589  318F   	line	286
  9346                           	
  9347                           i1l3468:	
  9348  0FFB                     ;LCD_hd44780u_qy_2004a.c: 286:   setData(wLCDIndex);
  9349                           	movf	(i1setCursorPosition@wLCDIndex),w
  9350  0FFB  0879               	fcall	i1_setData
  9351  0FFC  318D  2589  318F   	line	288
  9352                           	
  9353                           i1l382:	
  9354  0FFF                     	return
  9355  0FFF  0008               	opt stack 0
  9356                           GLOBAL	__end_ofi1_setCursorPosition
  9357                           	__end_ofi1_setCursorPosition:
  9358  1000                     	signat	i1_setCursorPosition,89
  9359                           	global	i1_waitLCDBusy
  9360                           
  9361 ;; *************** function i1_waitLCDBusy *****************
  9362 ;; Defined at:
  9363 ;;		line 162 in file "LCD_hd44780u_qy_2004a.c"
  9364 ;; Parameters:    Size  Location     Type
  9365 ;;		None
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;  waitLCDBusy     2    3[COMMON] int 
  9368 ;; Return value:  Size  Location     Type
  9369 ;;                  1    wreg      void 
  9370 ;; Registers used:
  9371 ;;		wreg, status,2, status,0, pclath, cstack
  9372 ;; Tracked objects:
  9373 ;;		On entry : 0/0
  9374 ;;		On exit  : 0/0
  9375 ;;		Unchanged: 0/0
  9376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9378 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9379 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9380 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9381 ;;Total ram usage:        5 bytes
  9382 ;; Hardware stack levels used:    1
  9383 ;; Hardware stack levels required when called:    1
  9384 ;; This function calls:
  9385 ;;		i1_SetToReadDataFromLCD
  9386 ;; This function is called by:
  9387 ;;		i1_writeTxtChk
  9388 ;;		i1_setCursorPosition
  9389 ;; This function uses a non-reentrant model
  9390 ;;
  9391                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
  9392                           	line	162
  9393                           global __ptext34
  9394                           __ptext34:	;psect for function i1_waitLCDBusy
  9395  0CF6                     psect	text34
  9396                           	file	"LCD_hd44780u_qy_2004a.c"
  9397                           	line	162
  9398                           	global	__size_ofi1_waitLCDBusy
  9399                           	__size_ofi1_waitLCDBusy	equ	__end_ofi1_waitLCDBusy-i1_waitLCDBusy
  9400  002C                     	
  9401                           i1_waitLCDBusy:	
  9402  0CF6                     ;incstack = 0
  9403                           	opt	stack 5
  9404                           ; Regs used in i1_waitLCDBusy: [wreg+status,2+status,0+pclath+cstack]
  9405                           	line	164
  9406                           	
  9407                           i1l3354:	
  9408  0CF6                     ;LCD_hd44780u_qy_2004a.c: 164:   PORTAbits.RA4 = 0;
  9409                           	movlb 0	; select bank0
  9410  0CF6  0020               	bcf	(12),4	;volatile
  9411  0CF7  120C               	line	165
  9412                           ;LCD_hd44780u_qy_2004a.c: 165:   PORTAbits.RA7 = 1;
  9413                           	bsf	(12),7	;volatile
  9414  0CF8  178C               	line	167
  9415                           	
  9416                           i1l3356:	
  9417  0CF9                     ;LCD_hd44780u_qy_2004a.c: 167:   SetToReadDataFromLCD();
  9418                           	fcall	i1_SetToReadDataFromLCD
  9419  0CF9  318B  230F  318C   	line	169
  9420                           	
  9421                           i1l3358:	
  9422  0CFC                     ;LCD_hd44780u_qy_2004a.c: 169:   int busyFlag = 1;
  9423                           	movlw	01h
  9424  0CFC  3001               	movwf	(i1waitLCDBusy@busyFlag)
  9425  0CFD  00F3               	movlw	0
  9426  0CFE  3000               	movwf	((i1waitLCDBusy@busyFlag))+1
  9427  0CFF  00F4               	line	170
  9428                           ;LCD_hd44780u_qy_2004a.c: 170:   while(busyFlag == 1)
  9429                           	goto	i1l327
  9430  0D00  2D1A               	
  9431                           i1l328:	
  9432  0D01                     	line	173
  9433                           ;LCD_hd44780u_qy_2004a.c: 171:   {;LCD_hd44780u_qy_2004a.c: 173:     PORTAbits.RA5 = 1;

  9434                           	movlb 0	; select bank0
  9435  0D01  0020               	bsf	(12),5	;volatile
  9436  0D02  168C               	line	174
  9437                           ;LCD_hd44780u_qy_2004a.c: 174:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  9438                           		opt asmopt_push
  9439                           	opt asmopt_off
  9440                           	nop2	;2 cycle nop
  9441  0D03  3200               	nop2	;2 cycle nop
  9442  0D04  3200               	opt asmopt_pop
  9443                           
  9444                           	line	175
  9445                           	
  9446                           i1l3360:	
  9447  0D05                     ;LCD_hd44780u_qy_2004a.c: 175:     busyFlag = PORTAbits.RA3;
  9448                           	movlb 0	; select bank0
  9449  0D05  0020               	rrf	(12),w	;volatile
  9450  0D06  0C0C               	movwf	(??i1_waitLCDBusy+0)+0
  9451  0D07  00F0               	rrf	(??i1_waitLCDBusy+0)+0,f
  9452  0D08  0CF0               	rrf	(??i1_waitLCDBusy+0)+0,w
  9453  0D09  0C70               	andlw	(1<<1)-1
  9454  0D0A  3901               	movwf	(??i1_waitLCDBusy+1)+0
  9455  0D0B  00F1               	clrf	(??i1_waitLCDBusy+1)+0+1
  9456  0D0C  01F2               	movf	0+(??i1_waitLCDBusy+1)+0,w
  9457  0D0D  0871               	movwf	(i1waitLCDBusy@busyFlag)
  9458  0D0E  00F3               	movf	1+(??i1_waitLCDBusy+1)+0,w
  9459  0D0F  0872               	movwf	(i1waitLCDBusy@busyFlag+1)
  9460  0D10  00F4               	line	176
  9461                           	
  9462                           i1l3362:	
  9463  0D11                     ;LCD_hd44780u_qy_2004a.c: 176:     PORTAbits.RA5 = 0;
  9464                           	bcf	(12),5	;volatile
  9465  0D11  128C               	line	177
  9466                           	
  9467                           i1l3364:	
  9468  0D12                     ;LCD_hd44780u_qy_2004a.c: 177:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  9469                           		opt asmopt_push
  9470                           	opt asmopt_off
  9471                           	nop2	;2 cycle nop
  9472  0D12  3200               	nop2	;2 cycle nop
  9473  0D13  3200               	nop2	;2 cycle nop
  9474  0D14  3200               	nop2	;2 cycle nop
  9475  0D15  3200               	opt asmopt_pop
  9476                           
  9477                           	line	179
  9478                           	
  9479                           i1l3366:	
  9480  0D16                     ;LCD_hd44780u_qy_2004a.c: 179:     PORTAbits.RA5 = 1;
  9481                           	movlb 0	; select bank0
  9482  0D16  0020               	bsf	(12),5	;volatile
  9483  0D17  168C               	line	180
  9484                           	
  9485                           i1l3368:	
  9486  0D18                     ;LCD_hd44780u_qy_2004a.c: 180:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  9487                           		opt asmopt_push
  9488                           	opt asmopt_off
  9489                           	nop2	;2 cycle nop
  9490  0D18  3200               	nop2	;2 cycle nop
  9491  0D19  3200               	opt asmopt_pop
  9492                           
  9493                           	line	181
  9494                           ;LCD_hd44780u_qy_2004a.c: 181:   }
  9495                           	
  9496                           i1l327:	
  9497  0D1A                     	line	170
  9498                           ;LCD_hd44780u_qy_2004a.c: 170:   while(busyFlag == 1)
  9499                           		decf	((i1waitLCDBusy@busyFlag)),w
  9500  0D1A  0373               iorwf	((i1waitLCDBusy@busyFlag+1)),w
  9501  0D1B  0474               	btfsc	status,2
  9502  0D1C  1903               	goto	u214_21
  9503  0D1D  2D1F               	goto	u214_20
  9504  0D1E  2D20               u214_21:
  9505  0D1F                     	goto	i1l328
  9506  0D1F  2D01               u214_20:
  9507  0D20                     	goto	i1l330
  9508  0D20  2D21               	
  9509                           i1l329:	
  9510  0D21                     	line	182
  9511                           	
  9512                           i1l330:	
  9513  0D21                     	return
  9514  0D21  0008               	opt stack 0
  9515                           GLOBAL	__end_ofi1_waitLCDBusy
  9516                           	__end_ofi1_waitLCDBusy:
  9517  0D22                     	signat	i1_waitLCDBusy,89
  9518                           	global	i1_SetToReadDataFromLCD
  9519                           
  9520 ;; *************** function i1_SetToReadDataFromLCD *****************
  9521 ;; Defined at:
  9522 ;;		line 147 in file "LCD_hd44780u_qy_2004a.c"
  9523 ;; Parameters:    Size  Location     Type
  9524 ;;		None
  9525 ;; Auto vars:     Size  Location     Type
  9526 ;;		None
  9527 ;; Return value:  Size  Location     Type
  9528 ;;                  1    wreg      void 
  9529 ;; Registers used:
  9530 ;;		None
  9531 ;; Tracked objects:
  9532 ;;		On entry : 0/0
  9533 ;;		On exit  : 0/0
  9534 ;;		Unchanged: 0/0
  9535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9540 ;;Total ram usage:        0 bytes
  9541 ;; Hardware stack levels used:    1
  9542 ;; This function calls:
  9543 ;;		Nothing
  9544 ;; This function is called by:
  9545 ;;		i1_waitLCDBusy
  9546 ;; This function uses a non-reentrant model
  9547 ;;
  9548                           psect	text35,local,class=CODE,delta=2,merge=1,group=0
  9549                           	line	147
  9550                           global __ptext35
  9551                           __ptext35:	;psect for function i1_SetToReadDataFromLCD
  9552  0B0F                     psect	text35
  9553                           	file	"LCD_hd44780u_qy_2004a.c"
  9554                           	line	147
  9555                           	global	__size_ofi1_SetToReadDataFromLCD
  9556                           	__size_ofi1_SetToReadDataFromLCD	equ	__end_ofi1_SetToReadDataFromLCD-i1_SetToReadDataFr
                                 omLCD
  9557  0006                     	
  9558                           i1_SetToReadDataFromLCD:	
  9559  0B0F                     ;incstack = 0
  9560                           	opt	stack 5
  9561                           ; Regs used in i1_SetToReadDataFromLCD: []
  9562                           	line	149
  9563                           	
  9564                           i1l3300:	
  9565  0B0F                     ;LCD_hd44780u_qy_2004a.c: 149:   TRISAbits.TRISA3 = 1;
  9566                           	movlb 1	; select bank1
  9567  0B0F  0021               	bsf	(140)^080h,3	;volatile
  9568  0B10  158C               	line	150
  9569                           ;LCD_hd44780u_qy_2004a.c: 150:   TRISAbits.TRISA2 = 1;
  9570                           	bsf	(140)^080h,2	;volatile
  9571  0B11  150C               	line	151
  9572                           ;LCD_hd44780u_qy_2004a.c: 151:   TRISAbits.TRISA1 = 1;
  9573                           	bsf	(140)^080h,1	;volatile
  9574  0B12  148C               	line	152
  9575                           ;LCD_hd44780u_qy_2004a.c: 152:   TRISAbits.TRISA0 = 1;
  9576                           	bsf	(140)^080h,0	;volatile
  9577  0B13  140C               	line	153
  9578                           	
  9579                           i1l321:	
  9580  0B14                     	return
  9581  0B14  0008               	opt stack 0
  9582                           GLOBAL	__end_ofi1_SetToReadDataFromLCD
  9583                           	__end_ofi1_SetToReadDataFromLCD:
  9584  0B15                     	signat	i1_SetToReadDataFromLCD,89
  9585                           	global	i1_setData
  9586                           
  9587 ;; *************** function i1_setData *****************
  9588 ;; Defined at:
  9589 ;;		line 67 in file "LCD_hd44780u_qy_2004a.c"
  9590 ;; Parameters:    Size  Location     Type
  9591 ;;  iValue          1    wreg     unsigned char 
  9592 ;; Auto vars:     Size  Location     Type
  9593 ;;  iValue          1    2[COMMON] unsigned char 
  9594 ;; Return value:  Size  Location     Type
  9595 ;;                  1    wreg      void 
  9596 ;; Registers used:
  9597 ;;		wreg, status,2, status,0
  9598 ;; Tracked objects:
  9599 ;;		On entry : 0/0
  9600 ;;		On exit  : 0/0
  9601 ;;		Unchanged: 0/0
  9602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9605 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9606 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9607 ;;Total ram usage:        3 bytes
  9608 ;; Hardware stack levels used:    1
  9609 ;; This function calls:
  9610 ;;		Nothing
  9611 ;; This function is called by:
  9612 ;;		i1_writeTxtChk
  9613 ;;		i1_setCursorPosition
  9614 ;; This function uses a non-reentrant model
  9615 ;;
  9616                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
  9617                           	line	67
  9618                           global __ptext36
  9619                           __ptext36:	;psect for function i1_setData
  9620  0D89                     psect	text36
  9621                           	file	"LCD_hd44780u_qy_2004a.c"
  9622                           	line	67
  9623                           	global	__size_ofi1_setData
  9624                           	__size_ofi1_setData	equ	__end_ofi1_setData-i1_setData
  9625  003C                     	
  9626                           i1_setData:	
  9627  0D89                     ;incstack = 0
  9628                           	opt	stack 6
  9629                           ; Regs used in i1_setData: [wreg+status,2+status,0]
  9630                           ;i1setData@iValue stored from wreg
  9631                           	movwf	(i1setData@iValue)
  9632  0D89  00F2               	line	69
  9633                           	
  9634                           i1l3342:	
  9635  0D8A                     ;LCD_hd44780u_qy_2004a.c: 67: void setData(char iValue);LCD_hd44780u_qy_2004a.c: 68: {;L
                                 CD_hd44780u_qy_2004a.c: 69:   PORTAbits.RA5 = 1;
  9636                           	movlb 0	; select bank0
  9637  0D8A  0020               	bsf	(12),5	;volatile
  9638  0D8B  168C               	line	70
  9639                           	
  9640                           i1l3344:	
  9641  0D8C                     ;LCD_hd44780u_qy_2004a.c: 70:   PORTAbits.RA3 = (iValue & 0x8) >> 3;
  9642                           	movf	(i1setData@iValue),w
  9643  0D8C  0872               	movwf	(??i1_setData+0)+0
  9644  0D8D  00F0               	movlw	03h
  9645  0D8E  3003               u212_25:
  9646  0D8F                     	lsrf	(??i1_setData+0)+0,f
  9647  0D8F  36F0               	decfsz	wreg,f
  9648  0D90  0B89               	goto	u212_25
  9649  0D91  2D8F               	movf	0+(??i1_setData+0)+0,w
  9650  0D92  0870               	andlw	01h
  9651  0D93  3901               	movwf	(??i1_setData+1)+0
  9652  0D94  00F1               	rlf	(??i1_setData+1)+0,f
  9653  0D95  0DF1               	rlf	(??i1_setData+1)+0,f
  9654  0D96  0DF1               	rlf	(??i1_setData+1)+0,f
  9655  0D97  0DF1               	movf	(12),w	;volatile
  9656  0D98  080C               	xorwf	(??i1_setData+1)+0,w
  9657  0D99  0671               	andlw	not (((1<<1)-1)<<3)
  9658  0D9A  39F7               	xorwf	(??i1_setData+1)+0,w
  9659  0D9B  0671               	movwf	(12)	;volatile
  9660  0D9C  008C               	line	71
  9661                           ;LCD_hd44780u_qy_2004a.c: 71:   PORTAbits.RA2 = (iValue & 0x4) >> 2;
  9662                           	movf	(i1setData@iValue),w
  9663  0D9D  0872               	movwf	(??i1_setData+0)+0
  9664  0D9E  00F0               	movlw	02h
  9665  0D9F  3002               u213_25:
  9666  0DA0                     	lsrf	(??i1_setData+0)+0,f
  9667  0DA0  36F0               	decfsz	wreg,f
  9668  0DA1  0B89               	goto	u213_25
  9669  0DA2  2DA0               	movf	0+(??i1_setData+0)+0,w
  9670  0DA3  0870               	andlw	01h
  9671  0DA4  3901               	movwf	(??i1_setData+1)+0
  9672  0DA5  00F1               	rlf	(??i1_setData+1)+0,f
  9673  0DA6  0DF1               	rlf	(??i1_setData+1)+0,f
  9674  0DA7  0DF1               	movf	(12),w	;volatile
  9675  0DA8  080C               	xorwf	(??i1_setData+1)+0,w
  9676  0DA9  0671               	andlw	not (((1<<1)-1)<<2)
  9677  0DAA  39FB               	xorwf	(??i1_setData+1)+0,w
  9678  0DAB  0671               	movwf	(12)	;volatile
  9679  0DAC  008C               	line	72
  9680                           ;LCD_hd44780u_qy_2004a.c: 72:   PORTAbits.RA1 = (iValue & 0x2) >> 1;
  9681                           	lsrf	(i1setData@iValue),w
  9682  0DAD  3672               	andlw	01h
  9683  0DAE  3901               	movwf	(??i1_setData+0)+0
  9684  0DAF  00F0               	rlf	(??i1_setData+0)+0,f
  9685  0DB0  0DF0               	movf	(12),w	;volatile
  9686  0DB1  080C               	xorwf	(??i1_setData+0)+0,w
  9687  0DB2  0670               	andlw	not (((1<<1)-1)<<1)
  9688  0DB3  39FD               	xorwf	(??i1_setData+0)+0,w
  9689  0DB4  0670               	movwf	(12)	;volatile
  9690  0DB5  008C               	line	73
  9691                           ;LCD_hd44780u_qy_2004a.c: 73:   PORTAbits.RA0 = (iValue & 0x1) ;
  9692                           	movlw	low(01h)
  9693  0DB6  3001               	andwf	(i1setData@iValue),w
  9694  0DB7  0572               	movwf	(??i1_setData+0)+0
  9695  0DB8  00F0               	movf	(12),w	;volatile
  9696  0DB9  080C               	xorwf	0+(??i1_setData+0)+0,w
  9697  0DBA  0670               	andlw	not ((1<<1)-1)
  9698  0DBB  39FE               	xorwf	0+(??i1_setData+0)+0,w
  9699  0DBC  0670               	movwf	(12)	;volatile
  9700  0DBD  008C               	line	74
  9701                           	
  9702                           i1l3346:	
  9703  0DBE                     ;LCD_hd44780u_qy_2004a.c: 74:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  9704                           		opt asmopt_push
  9705                           	opt asmopt_off
  9706                           	nop2	;2 cycle nop
  9707  0DBE  3200               	nop2	;2 cycle nop
  9708  0DBF  3200               	opt asmopt_pop
  9709                           
  9710                           	line	75
  9711                           	
  9712                           i1l3348:	
  9713  0DC0                     ;LCD_hd44780u_qy_2004a.c: 75:   PORTAbits.RA5 = 0;
  9714                           	movlb 0	; select bank0
  9715  0DC0  0020               	bcf	(12),5	;volatile
  9716  0DC1  128C               	line	76
  9717                           	
  9718                           i1l3350:	
  9719  0DC2                     ;LCD_hd44780u_qy_2004a.c: 76:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  9720                           		opt asmopt_push
  9721                           	opt asmopt_off
  9722                           	nop2	;2 cycle nop
  9723  0DC2  3200               	nop2	;2 cycle nop
  9724  0DC3  3200               	opt asmopt_pop
  9725                           
  9726                           	line	77
  9727                           	
  9728                           i1l295:	
  9729  0DC4                     	return
  9730  0DC4  0008               	opt stack 0
  9731                           GLOBAL	__end_ofi1_setData
  9732                           	__end_ofi1_setData:
  9733  0DC5                     	signat	i1_setData,89
  9734                           	global	i1_SetToSendDataToLCD
  9735                           
  9736 ;; *************** function i1_SetToSendDataToLCD *****************
  9737 ;; Defined at:
  9738 ;;		line 154 in file "LCD_hd44780u_qy_2004a.c"
  9739 ;; Parameters:    Size  Location     Type
  9740 ;;		None
  9741 ;; Auto vars:     Size  Location     Type
  9742 ;;		None
  9743 ;; Return value:  Size  Location     Type
  9744 ;;                  1    wreg      void 
  9745 ;; Registers used:
  9746 ;;		None
  9747 ;; Tracked objects:
  9748 ;;		On entry : 0/0
  9749 ;;		On exit  : 0/0
  9750 ;;		Unchanged: 0/0
  9751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9756 ;;Total ram usage:        0 bytes
  9757 ;; Hardware stack levels used:    1
  9758 ;; This function calls:
  9759 ;;		Nothing
  9760 ;; This function is called by:
  9761 ;;		i1_writeTxtChk
  9762 ;;		i1_setCursorPosition
  9763 ;; This function uses a non-reentrant model
  9764 ;;
  9765                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
  9766                           	line	154
  9767                           global __ptext37
  9768                           __ptext37:	;psect for function i1_SetToSendDataToLCD
  9769  0B09                     psect	text37
  9770                           	file	"LCD_hd44780u_qy_2004a.c"
  9771                           	line	154
  9772                           	global	__size_ofi1_SetToSendDataToLCD
  9773                           	__size_ofi1_SetToSendDataToLCD	equ	__end_ofi1_SetToSendDataToLCD-i1_SetToSendDataToLCD

  9774  0006                     	
  9775                           i1_SetToSendDataToLCD:	
  9776  0B09                     ;incstack = 0
  9777                           	opt	stack 5
  9778                           ; Regs used in i1_SetToSendDataToLCD: []
  9779                           	line	156
  9780                           	
  9781                           i1l3352:	
  9782  0B09                     ;LCD_hd44780u_qy_2004a.c: 156:   TRISAbits.TRISA3 = 0;;
  9783                           	movlb 1	; select bank1
  9784  0B09  0021               	bcf	(140)^080h,3	;volatile
  9785  0B0A  118C               	line	157
  9786                           ;LCD_hd44780u_qy_2004a.c: 157:   TRISAbits.TRISA2 = 0;;
  9787                           	bcf	(140)^080h,2	;volatile
  9788  0B0B  110C               	line	158
  9789                           ;LCD_hd44780u_qy_2004a.c: 158:   TRISAbits.TRISA1 = 0;;
  9790                           	bcf	(140)^080h,1	;volatile
  9791  0B0C  108C               	line	159
  9792                           ;LCD_hd44780u_qy_2004a.c: 159:   TRISAbits.TRISA0 = 0;;
  9793                           	bcf	(140)^080h,0	;volatile
  9794  0B0D  100C               	line	160
  9795                           	
  9796                           i1l324:	
  9797  0B0E                     	return
  9798  0B0E  0008               	opt stack 0
  9799                           GLOBAL	__end_ofi1_SetToSendDataToLCD
  9800                           	__end_ofi1_SetToSendDataToLCD:
  9801  0B0F                     	signat	i1_SetToSendDataToLCD,89
  9802                           	global	i1_Add_Trace
  9803                           
  9804 ;; *************** function i1_Add_Trace *****************
  9805 ;; Defined at:
  9806 ;;		line 86 in file "161518_temp_main.c"
  9807 ;; Parameters:    Size  Location     Type
  9808 ;;  oText           1    wreg     PTR unsigned char 
  9809 ;;		 -> wInterruptText(75), 
  9810 ;;  iSizeOfoText    1    5[BANK0 ] unsigned char 
  9811 ;;  iText           2    6[BANK0 ] PTR unsigned char 
  9812 ;;		 -> STR_12(7), STR_7(4), STR_2(9), STR_1(12), 
  9813 ;;		 -> main@wReadout(20), 
  9814 ;; Auto vars:     Size  Location     Type
  9815 ;;  oText           1   14[BANK0 ] PTR unsigned char 
  9816 ;;		 -> wInterruptText(75), 
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  1    wreg      void 
  9819 ;; Registers used:
  9820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/0
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9826 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  9827 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9828 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  9829 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  9830 ;;Total ram usage:       10 bytes
  9831 ;; Hardware stack levels used:    1
  9832 ;; Hardware stack levels required when called:    2
  9833 ;; This function calls:
  9834 ;;		i1_strcat
  9835 ;;		i1_strlen
  9836 ;; This function is called by:
  9837 ;;		_myint
  9838 ;; This function uses a non-reentrant model
  9839 ;;
  9840                           psect	text38,local,class=CODE,delta=2,merge=1,group=0
  9841                           	file	"161518_temp_main.c"
  9842                           	line	86
  9843                           global __ptext38
  9844                           __ptext38:	;psect for function i1_Add_Trace
  9845  0D4F                     psect	text38
  9846                           	file	"161518_temp_main.c"
  9847                           	line	86
  9848                           	global	__size_ofi1_Add_Trace
  9849                           	__size_ofi1_Add_Trace	equ	__end_ofi1_Add_Trace-i1_Add_Trace
  9850  003A                     	
  9851                           i1_Add_Trace:	
  9852  0D4F                     ;incstack = 0
  9853                           	opt	stack 6
  9854                           ; Regs used in i1_Add_Trace: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9855                           ;i1Add_Trace@oText stored from wreg
  9856                           	movlb 0	; select bank0
  9857  0D4F  0020               	movwf	(i1Add_Trace@oText)
  9858  0D50  00AE               	line	88
  9859                           	
  9860                           i1l3838:	
  9861  0D51                     	movf	(i1Add_Trace@oText),w
  9862  0D51  082E               	movwf	(i1strlen@s)
  9863  0D52  00F0               	movlw	0x1
  9864  0D53  3001               
  9865                           	movwf	(i1strlen@s+1)
  9866  0D54  00F1               	fcall	i1_strlen
  9867  0D55  318B  23BE  318D   	comf	(0+(?i1_strlen)),w
  9868  0D58  0970               	movlb 0	; select bank0
  9869  0D59  0020               	movwf	(??i1_Add_Trace+0)+0
  9870  0D5A  00A8               	comf	(1+(?i1_strlen)),w
  9871  0D5B  0971               	movwf	((??i1_Add_Trace+0)+0+1)
  9872  0D5C  00A9               	incf	(??i1_Add_Trace+0)+0,f
  9873  0D5D  0AA8               	skipnz
  9874  0D5E  1903               	incf	((??i1_Add_Trace+0)+0+1),f
  9875  0D5F  0AA9               	movf	(i1Add_Trace@iSizeOfoText),w
  9876  0D60  0825               	addwf	0+(??i1_Add_Trace+0)+0,w
  9877  0D61  0728               	movwf	(??i1_Add_Trace+2)+0
  9878  0D62  00AA               	movf	1+(??i1_Add_Trace+0)+0,w
  9879  0D63  0829               	skipnc
  9880  0D64  1803               	incf	1+(??i1_Add_Trace+0)+0,w
  9881  0D65  0A29               	movwf	((??i1_Add_Trace+2)+0)+1
  9882  0D66  00AB               	movf	0+(??i1_Add_Trace+2)+0,w
  9883  0D67  082A               	addlw	0FFh
  9884  0D68  3EFF               	movwf	(??i1_Add_Trace+4)+0
  9885  0D69  00AC               	movlw	0FFh
  9886  0D6A  30FF               	addwfc	1+(??i1_Add_Trace+2)+0,w
  9887  0D6B  3D2B               	movwf	1+(??i1_Add_Trace+4)+0
  9888  0D6C  00AD               	movf	(i1Add_Trace@iText+1),w
  9889  0D6D  0827               	movwf	(i1strlen@s+1)
  9890  0D6E  00F1               	movf	(i1Add_Trace@iText),w
  9891  0D6F  0826               	movwf	(i1strlen@s)
  9892  0D70  00F0               	fcall	i1_strlen
  9893  0D71  318B  23BE  318D   	movlb 0	; select bank0
  9894  0D74  0020               	movf	1+(??i1_Add_Trace+4)+0,w
  9895  0D75  082D               	subwf	(1+(?i1_strlen)),w
  9896  0D76  0271               	skipz
  9897  0D77  1D03               	goto	u266_25
  9898  0D78  2D7B               	movf	0+(??i1_Add_Trace+4)+0,w
  9899  0D79  082C               	subwf	(0+(?i1_strlen)),w
  9900  0D7A  0270               u266_25:
  9901  0D7B                     	skipnc
  9902  0D7B  1803               	goto	u266_21
  9903  0D7C  2D7E               	goto	u266_20
  9904  0D7D  2D7F               u266_21:
  9905  0D7E                     	goto	i1l123
  9906  0D7E  2D88               u266_20:
  9907  0D7F                     	line	90
  9908                           	
  9909                           i1l3840:	
  9910  0D7F                     	movf	(i1Add_Trace@iText+1),w
  9911  0D7F  0827               	movwf	(i1strcat@src+1)
  9912  0D80  00A1               	movf	(i1Add_Trace@iText),w
  9913  0D81  0826               	movwf	(i1strcat@src)
  9914  0D82  00A0               	movf	(i1Add_Trace@oText),w
  9915  0D83  082E               	fcall	i1_strcat
  9916  0D84  318B  238C  318D   	goto	i1l123
  9917  0D87  2D88               	line	91
  9918                           	
  9919                           i1l122:	
  9920  0D88                     	line	92
  9921                           	
  9922                           i1l123:	
  9923  0D88                     	return
  9924  0D88  0008               	opt stack 0
  9925                           GLOBAL	__end_ofi1_Add_Trace
  9926                           	__end_ofi1_Add_Trace:
  9927  0D89                     	signat	i1_Add_Trace,89
  9928                           	global	i1_strcat
  9929                           
  9930 ;; *************** function i1_strcat *****************
  9931 ;; Defined at:
  9932 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  9933 ;; Parameters:    Size  Location     Type
  9934 ;;  dest            1    wreg     PTR unsigned char 
  9935 ;;		 -> wInterruptText(75), 
  9936 ;;  src             2    0[BANK0 ] PTR const unsigned char 
  9937 ;;		 -> STR_12(7), STR_7(4), STR_2(9), STR_1(12), 
  9938 ;;		 -> main@wReadout(20), 
  9939 ;; Auto vars:     Size  Location     Type
  9940 ;;  dest            1    4[BANK0 ] PTR unsigned char 
  9941 ;;		 -> wInterruptText(75), 
  9942 ;; Return value:  Size  Location     Type
  9943 ;;                  1    wreg      PTR unsigned char 
  9944 ;; Registers used:
  9945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9946 ;; Tracked objects:
  9947 ;;		On entry : 0/0
  9948 ;;		On exit  : 0/0
  9949 ;;		Unchanged: 0/0
  9950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9951 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9952 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9953 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9954 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  9955 ;;Total ram usage:        5 bytes
  9956 ;; Hardware stack levels used:    1
  9957 ;; Hardware stack levels required when called:    1
  9958 ;; This function calls:
  9959 ;;		i1_strcpy
  9960 ;;		i1_strlen
  9961 ;; This function is called by:
  9962 ;;		i1_Add_Trace
  9963 ;; This function uses a non-reentrant model
  9964 ;;
  9965                           psect	text39,local,class=CODE,delta=2,merge=1,group=0
  9966                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  9967                           	line	3
  9968                           global __ptext39
  9969                           __ptext39:	;psect for function i1_strcat
  9970  0B8C                     psect	text39
  9971                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  9972                           	line	3
  9973                           	global	__size_ofi1_strcat
  9974                           	__size_ofi1_strcat	equ	__end_ofi1_strcat-i1_strcat
  9975  0019                     	
  9976                           i1_strcat:	
  9977  0B8C                     ;incstack = 0
  9978                           	opt	stack 6
  9979                           ; Regs used in i1_strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9980                           ;i1strcat@dest stored from wreg
  9981                           	movlb 0	; select bank0
  9982  0B8C  0020               	movwf	(i1strcat@dest)
  9983  0B8D  00A4               	line	5
  9984                           	
  9985                           i1l3684:	
  9986  0B8E                     	movf	(i1strcat@src+1),w
  9987  0B8E  0821               	movwf	(i1strcpy@src+1)
  9988  0B8F  00F7               	movf	(i1strcat@src),w
  9989  0B90  0820               	movwf	(i1strcpy@src)
  9990  0B91  00F6               	movf	(i1strcat@dest),w
  9991  0B92  0824               	movwf	(i1strlen@s)
  9992  0B93  00F0               	movlw	0x1
  9993  0B94  3001               
  9994                           	movwf	(i1strlen@s+1)
  9995  0B95  00F1               	fcall	i1_strlen
  9996  0B96  318B  23BE  318B   	movf	(0+?i1_strlen),w
  9997  0B99  0870               	movlb 0	; select bank0
  9998  0B9A  0020               	movwf	(??i1_strcat+0)+0
  9999  0B9B  00A2               	movf	(1+?i1_strlen),w
 10000  0B9C  0871               	movwf	((??i1_strcat+0)+0+1)
 10001  0B9D  00A3               	movf	(i1strcat@dest),w
 10002  0B9E  0824               	addwf	0+(??i1_strcat+0)+0,w
 10003  0B9F  0722               	fcall	i1_strcpy
 10004  0BA0  318B  23E1  318B   	goto	i1l834
 10005  0BA3  2BA4               	line	6
 10006                           	
 10007                           i1l3686:	
 10008  0BA4                     	line	7
 10009                           ;	Return value of i1_strcat is never used
 10010                           	
 10011                           i1l834:	
 10012  0BA4                     	return
 10013  0BA4  0008               	opt stack 0
 10014                           GLOBAL	__end_ofi1_strcat
 10015                           	__end_ofi1_strcat:
 10016  0BA5                     	signat	i1_strcat,89
 10017                           	global	i1_strlen
 10018                           
 10019 ;; *************** function i1_strlen *****************
 10020 ;; Defined at:
 10021 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 10022 ;; Parameters:    Size  Location     Type
 10023 ;;  s               2    0[COMMON] PTR const unsigned char 
 10024 ;;		 -> STR_12(7), STR_7(4), STR_2(9), STR_1(12), 
 10025 ;;		 -> main@wReadout(20), wInterruptText(75), 
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;  strlen          2    4[COMMON] PTR const unsigned char 
 10028 ;;		 -> STR_12(7), STR_7(4), STR_2(9), STR_1(12), 
 10029 ;;		 -> main@wReadout(20), wInterruptText(75), 
 10030 ;; Return value:  Size  Location     Type
 10031 ;;                  2    0[COMMON] unsigned int 
 10032 ;; Registers used:
 10033 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10034 ;; Tracked objects:
 10035 ;;		On entry : 0/0
 10036 ;;		On exit  : 0/0
 10037 ;;		Unchanged: 0/0
 10038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10039 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10040 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10041 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10042 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10043 ;;Total ram usage:        6 bytes
 10044 ;; Hardware stack levels used:    1
 10045 ;; This function calls:
 10046 ;;		Nothing
 10047 ;; This function is called by:
 10048 ;;		i1_Add_Trace
 10049 ;;		i1_strcat
 10050 ;; This function uses a non-reentrant model
 10051 ;;
 10052                           psect	text40,local,class=CODE,delta=2,merge=1,group=0
 10053                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 10054                           	line	12
 10055                           global __ptext40
 10056                           __ptext40:	;psect for function i1_strlen
 10057  0BBE                     psect	text40
 10058                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 10059                           	line	12
 10060                           	global	__size_ofi1_strlen
 10061                           	__size_ofi1_strlen	equ	__end_ofi1_strlen-i1_strlen
 10062  0023                     	
 10063                           i1_strlen:	
 10064  0BBE                     ;incstack = 0
 10065                           	opt	stack 7
 10066                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
 10067                           	line	14
 10068                           	
 10069                           i1l3478:	
 10070  0BBE                     	movf	(i1strlen@s+1),w
 10071  0BBE  0871               	movwf	(i1strlen@a+1)
 10072  0BBF  00F5               	movf	(i1strlen@s),w
 10073  0BC0  0870               	movwf	(i1strlen@a)
 10074  0BC1  00F4               	line	16
 10075                           	goto	i1l3482
 10076  0BC2  2BC8               	
 10077                           i1l844:	
 10078  0BC3                     	line	17
 10079                           	
 10080                           i1l3480:	
 10081  0BC3                     	movlw	01h
 10082  0BC3  3001               	addwf	(i1strlen@s),f
 10083  0BC4  07F0               	movlw	0
 10084  0BC5  3000               	addwfc	(i1strlen@s+1),f
 10085  0BC6  3DF1               	goto	i1l3482
 10086  0BC7  2BC8               	line	18
 10087                           	
 10088                           i1l843:	
 10089  0BC8                     	line	16
 10090                           	
 10091                           i1l3482:	
 10092  0BC8                     	movf	(i1strlen@s),w
 10093  0BC8  0870               	movwf	fsr0l
 10094  0BC9  0084               	movf	((i1strlen@s+1)),w
 10095  0BCA  0871               	movwf	fsr0h
 10096  0BCB  0085               	moviw	fsr0++
 10097  0BCC  0012               	btfss	status,2
 10098  0BCD  1D03               	goto	u224_21
 10099  0BCE  2BD0               	goto	u224_20
 10100  0BCF  2BD1               u224_21:
 10101  0BD0                     	goto	i1l3480
 10102  0BD0  2BC3               u224_20:
 10103  0BD1                     	goto	i1l3484
 10104  0BD1  2BD2               	
 10105                           i1l845:	
 10106  0BD2                     	line	25
 10107                           	
 10108                           i1l3484:	
 10109  0BD2                     	comf	(i1strlen@a),w
 10110  0BD2  0974               	movwf	(??i1_strlen+0)+0
 10111  0BD3  00F2               	comf	(i1strlen@a+1),w
 10112  0BD4  0975               	movwf	((??i1_strlen+0)+0+1)
 10113  0BD5  00F3               	incf	(??i1_strlen+0)+0,f
 10114  0BD6  0AF2               	skipnz
 10115  0BD7  1903               	incf	((??i1_strlen+0)+0+1),f
 10116  0BD8  0AF3               	movf	(i1strlen@s),w
 10117  0BD9  0870               	addwf	0+(??i1_strlen+0)+0,w
 10118  0BDA  0772               	movwf	(?i1_strlen)
 10119  0BDB  00F0               	movf	(i1strlen@s+1),w
 10120  0BDC  0871               	addwfc	1+(??i1_strlen+0)+0,w
 10121  0BDD  3D73               	movwf	1+(?i1_strlen)
 10122  0BDE  00F1               	goto	i1l846
 10123  0BDF  2BE0               	
 10124                           i1l3486:	
 10125  0BE0                     	line	26
 10126                           	
 10127                           i1l846:	
 10128  0BE0                     	return
 10129  0BE0  0008               	opt stack 0
 10130                           GLOBAL	__end_ofi1_strlen
 10131                           	__end_ofi1_strlen:
 10132  0BE1                     	signat	i1_strlen,90
 10133                           	global	i1_strcpy
 10134                           
 10135 ;; *************** function i1_strcpy *****************
 10136 ;; Defined at:
 10137 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 10138 ;; Parameters:    Size  Location     Type
 10139 ;;  dest            1    wreg     PTR unsigned char 
 10140 ;;		 -> wInterruptText(75), 
 10141 ;;  src             2    6[COMMON] PTR const unsigned char 
 10142 ;;		 -> STR_12(7), STR_7(4), STR_2(9), STR_1(12), 
 10143 ;;		 -> main@wReadout(20), 
 10144 ;; Auto vars:     Size  Location     Type
 10145 ;;  dest            1   12[COMMON] PTR unsigned char 
 10146 ;;		 -> wInterruptText(75), 
 10147 ;;  strcpy          2   10[COMMON] PTR const unsigned char 
 10148 ;;		 -> STR_12(7), STR_7(4), STR_2(9), STR_1(12), 
 10149 ;;		 -> main@wReadout(20), 
 10150 ;;  strcpy          1   13[COMMON] PTR unsigned char 
 10151 ;;		 -> wInterruptText(75), 
 10152 ;; Return value:  Size  Location     Type
 10153 ;;                  1    wreg      PTR unsigned char 
 10154 ;; Registers used:
 10155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10156 ;; Tracked objects:
 10157 ;;		On entry : 0/0
 10158 ;;		On exit  : 0/0
 10159 ;;		Unchanged: 0/0
 10160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10162 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10163 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10164 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10165 ;;Total ram usage:        8 bytes
 10166 ;; Hardware stack levels used:    1
 10167 ;; This function calls:
 10168 ;;		Nothing
 10169 ;; This function is called by:
 10170 ;;		i1_strcat
 10171 ;; This function uses a non-reentrant model
 10172 ;;
 10173                           psect	text41,local,class=CODE,delta=2,merge=1,group=0
 10174                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 10175                           	line	7
 10176                           global __ptext41
 10177                           __ptext41:	;psect for function i1_strcpy
 10178  0BE1                     psect	text41
 10179                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 10180                           	line	7
 10181                           	global	__size_ofi1_strcpy
 10182                           	__size_ofi1_strcpy	equ	__end_ofi1_strcpy-i1_strcpy
 10183  0024                     	
 10184                           i1_strcpy:	
 10185  0BE1                     ;incstack = 0
 10186                           	opt	stack 6
 10187                           ; Regs used in i1_strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 10188                           ;i1strcpy@dest stored from wreg
 10189                           	movwf	(i1strcpy@dest)
 10190  0BE1  00FC               	line	13
 10191                           	
 10192                           i1l3474:	
 10193  0BE2                     	movf	(i1strcpy@src+1),w
 10194  0BE2  0877               	movwf	(i1strcpy@s+1)
 10195  0BE3  00FB               	movf	(i1strcpy@src),w
 10196  0BE4  0876               	movwf	(i1strcpy@s)
 10197  0BE5  00FA               	line	14
 10198                           	movf	(i1strcpy@dest),w
 10199  0BE6  087C               	movwf	(??i1_strcpy+0)+0
 10200  0BE7  00F8               	movf	(??i1_strcpy+0)+0,w
 10201  0BE8  0878               	movwf	(i1strcpy@d)
 10202  0BE9  00FD               	line	15
 10203                           	goto	i1l3476
 10204  0BEA  2BEC               	
 10205                           i1l838:	
 10206  0BEB                     	goto	i1l3476
 10207  0BEB  2BEC               	
 10208                           i1l837:	
 10209  0BEC                     	
 10210                           i1l3476:	
 10211  0BEC                     	movf	(i1strcpy@d),w
 10212  0BEC  087D               	movwf	fsr1l
 10213  0BED  0086               	movlw 1	; select bank2/3
 10214  0BEE  3001               	movwf fsr1h	
 10215  0BEF  0087               	
 10216                           	incf	(i1strcpy@d),f
 10217  0BF0  0AFD               	movf	(i1strcpy@s+1),w
 10218  0BF1  087B               	movwf	(??i1_strcpy+0)+0+1
 10219  0BF2  00F9               	movf	(i1strcpy@s),w
 10220  0BF3  087A               	movwf	(??i1_strcpy+0)+0
 10221  0BF4  00F8               	incf	(i1strcpy@s),f
 10222  0BF5  0AFA               	skipnz
 10223  0BF6  1903               	incf	(i1strcpy@s+1),f
 10224  0BF7  0AFB               	movf	0+(??i1_strcpy+0)+0,w
 10225  0BF8  0878               	movwf	fsr0l
 10226  0BF9  0084               	movf	(1+(??i1_strcpy+0)+0),w
 10227  0BFA  0879               	movwf	fsr0h
 10228  0BFB  0085               	movf	indf0,w ;code access
 10229  0BFC  0800               	movwi	[0]fsr1
 10230  0BFD  3FC0               	movf	wreg
 10231  0BFE  0889               	btfss	status,2
 10232  0BFF  1D03               	goto	u223_21
 10233  0C00  2C02               	goto	u223_20
 10234  0C01  2C03               u223_21:
 10235  0C02                     	goto	i1l3476
 10236  0C02  2BEC               u223_20:
 10237  0C03                     	goto	i1l840
 10238  0C03  2C04               	
 10239                           i1l839:	
 10240  0C04                     	line	18
 10241                           ;	Return value of i1_strcpy is never used
 10242                           	
 10243                           i1l840:	
 10244  0C04                     	return
 10245  0C04  0008               	opt stack 0
 10246                           GLOBAL	__end_ofi1_strcpy
 10247                           	__end_ofi1_strcpy:
 10248  0C05                     	signat	i1_strcpy,89
 10249                           global	___latbits
 10250                           ___latbits	equ	3
 10251  0003                     	global	btemp
 10252                           	btemp set 07Eh
 10253  007E                     
 10254                           	DABS	1,126,2	;btemp
 10255                           	global	int$flags
 10256                           	int$flags	set btemp
 10257  007E                     	global	wtemp0
 10258                           	wtemp0 set btemp+0
 10259  007E                     	end


Data Sizes:
    Strings     104
    Constant    0
    Data        4
    BSS         167
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      60
    BANK1            80      6      37
    BANK2            80      0      50
    BANK3            80      0      75
    BANK4            80     45      45
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_12(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK4[20]), wInterruptText(BANK3[75]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_12(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK4[20]), wInterruptText(BANK3[75]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_12(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK4[20]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_12(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK4[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_12(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK4[20]), 

    strcat@dest	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    memset@dest	PTR void  size(2) Largest target is 75
		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]), 

    memset@s	PTR unsigned char  size(2) Largest target is 75
		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]), 

    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[16]), STR_3(CODE[16]), 
		 -> main@wConv(BANK4[4]), wInterruptText(BANK3[75]), 

    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
		 -> main@wEnterBottonPressed(BANK4[1]), main@wDownBottonPressed(BANK4[1]), main@wUpBottonPressed(BANK4[1]), 

    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
		 -> main@wDebounceDown(BANK4[2]), main@wDebounceUp(BANK4[2]), main@wDebounceEnter(BANK4[2]), 

    printEM1812@oTextOut	PTR unsigned char  size(1) Largest target is 20
		 -> main@wReadout(BANK4[20]), 

    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    sp__memset	PTR void  size(2) Largest target is 75
		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    Add_Trace@iText	PTR unsigned char  size(2) Largest target is 20
		 -> STR_12(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK4[20]), 

    Add_Trace@oText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myint in COMMON

    _myint->i1_lcdWriteText
    i1_lcdWriteText->i1_writeTxtChk
    i1_writeTxtChk->i1_setCursorPosition
    i1_setCursorPosition->i1_waitLCDBusy
    i1_strcat->i1_strcpy
    i1_strcpy->i1_strlen

Critical Paths under _main in BANK0

    _main->_Add_Trace
    _main->_PrintLog
    _setNotBlinkingCursor->_writeInsChk
    _setCursorOff->_writeInsChk
    _printEM1812->___awdiv
    _powerOnLcd->_writeInsChk
    _moveCursorToHome->_writeInsChk
    _initLCD->_writeInsChk
    _clearDisplay->_writeInsChk
    _writeInsChk->_waitLCDBusy
    _writeInsChk->_writeInsNoChk
    _writeInsNoChk->_setData
    _PrintLog->_lcdWriteText
    _lcdWriteText->_writeTxtChk
    _writeTxtChk->_setCursorPosition
    _setCursorPosition->_waitLCDBusy
    _GetTemp->_memset
    _Add_Trace->_strcat
    _strcat->_strcpy
    _strcpy->_strlen

Critical Paths under _myint in BANK0

    _myint->i1_Add_Trace
    i1_Add_Trace->i1_strcat

Critical Paths under _main in BANK1

    _main->_Add_Trace

Critical Paths under _myint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myint in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myint in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myint in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myint in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myint in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myint in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                47    47      0   23303
                                             43 BANK0      2     2      0
                                              0 BANK4     45    45      0
                          _Add_Trace
                           _Debounce
                            _GetTemp
                           _PrintLog
                       _SetToGetTemp
                       _ToggleBitRB5
                           _WakeTemp
                       _clearDisplay
                            _initLCD
                       _lcdWriteText
                             _memset
                   _moveCursorToHome
                         _powerOnLcd
                        _printEM1812
                       _setCursorOff
                  _setCursorPosition
               _setNotBlinkingCursor
 ---------------------------------------------------------------------------------
 (1) _setNotBlinkingCursor                                 1     1      0     254
                                             26 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _setCursorOff                                         1     1      0     254
                                             26 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _printEM1812                                          8     5      3    2757
                                             29 BANK0      8     5      3
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                             20 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                             20 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _powerOnLcd                                           1     1      0     254
                                             26 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _moveCursorToHome                                     0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     632
                                             26 BANK0      1     1      0
                       _clearDisplay
                            _setData
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _clearDisplay                                         0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _writeInsChk                                          1     1      0     254
                                             25 BANK0      1     1      0
                        _waitLCDBusy
                      _writeInsNoChk
 ---------------------------------------------------------------------------------
 (3) _writeInsNoChk                                        2     2      0     186
                                             23 BANK0      2     2      0
                 _SetToSendDataToLCD
                            _setData
 ---------------------------------------------------------------------------------
 (1) _WakeTemp                                             1     1      0       0
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToggleBitRB5                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetToGetTemp                                         1     1      0       0
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PrintLog                                             4     4      0    5502
                                             39 BANK0      4     4      0
                       _lcdWriteText
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _lcdWriteText                                         6     4      2    2921
                                             33 BANK0      6     4      2
                        _writeTxtChk
 ---------------------------------------------------------------------------------
 (2) _writeTxtChk                                          3     3      0    2031
                                             30 BANK0      3     3      0
                 _SetToSendDataToLCD
                  _setCursorPosition
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (1) _setCursorPosition                                    5     4      1    1777
                                             25 BANK0      5     4      1
                 _SetToSendDataToLCD
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (3) _waitLCDBusy                                          5     5      0      37
                                             20 BANK0      5     5      0
               _SetToReadDataFromLCD
 ---------------------------------------------------------------------------------
 (4) _SetToReadDataFromLCD                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setData                                              3     3      0     124
                                             20 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _SetToSendDataToLCD                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetTemp                                              1     1      0    1897
                                             34 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                              14     8      6    1897
                                             20 BANK0     14     8      6
 ---------------------------------------------------------------------------------
 (1) _Debounce                                             5     3      2     788
                                             20 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _Add_Trace                                           10     7      3    2780
                                             39 BANK0      4     1      3
                                              0 BANK1      6     6      0
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcat                                               5     3      2     979
                                             34 BANK0      5     3      2
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             20 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     6      2     263
                                             26 BANK0      8     6      2
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _myint                                                5     5      0    2393
                                             15 BANK0      5     5      0
                        i1_Add_Trace
                     i1_lcdWriteText
 ---------------------------------------------------------------------------------
 (8) i1_lcdWriteText                                       6     4      2    1321
                                             13 COMMON     1     1      0
                                              0 BANK0      5     3      2
                      i1_writeTxtChk
 ---------------------------------------------------------------------------------
 (9) i1_writeTxtChk                                        3     3      0    1051
                                             10 COMMON     3     3      0
               i1_SetToSendDataToLCD
                i1_setCursorPosition
                          i1_setData
                      i1_waitLCDBusy
 ---------------------------------------------------------------------------------
 (10) i1_setCursorPosition                                 5     4      1     797
                                              5 COMMON     5     4      1
               i1_SetToSendDataToLCD
                          i1_setData
                      i1_waitLCDBusy
 ---------------------------------------------------------------------------------
 (10) i1_waitLCDBusy                                       5     5      0      37
                                              0 COMMON     5     5      0
             i1_SetToReadDataFromLCD
 ---------------------------------------------------------------------------------
 (11) i1_SetToReadDataFromLCD                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_setData                                           3     3      0     124
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (11) i1_SetToSendDataToLCD                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_Add_Trace                                         10     7      3    1072
                                              5 BANK0     10     7      3
                           i1_strcat
                           i1_strlen
 ---------------------------------------------------------------------------------
 (9) i1_strcat                                             5     3      2     542
                                              0 BANK0      5     3      2
                           i1_strcpy
                           i1_strlen
 ---------------------------------------------------------------------------------
 (9) i1_strlen                                             6     4      2     235
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (10) i1_strcpy                                            8     6      2     172
                                              6 COMMON     8     6      2
                           i1_strlen (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Add_Trace
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _Debounce
   _GetTemp
     _memset
   _PrintLog
     _lcdWriteText
       _writeTxtChk
         _SetToSendDataToLCD
         _setCursorPosition
           _SetToSendDataToLCD
           _setData
           _waitLCDBusy
             _SetToReadDataFromLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
     _memset
     _strlen
   _SetToGetTemp
   _ToggleBitRB5
   _WakeTemp
   _clearDisplay
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _initLCD
     _clearDisplay
       _writeInsChk
         _waitLCDBusy
           _SetToReadDataFromLCD
         _writeInsNoChk
           _SetToSendDataToLCD
           _setData
     _setData
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _lcdWriteText
     _writeTxtChk
       _SetToSendDataToLCD
       _setCursorPosition
         _SetToSendDataToLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
       _setData
       _waitLCDBusy
         _SetToReadDataFromLCD
   _memset
   _moveCursorToHome
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _powerOnLcd
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _printEM1812
     ___awdiv
     ___awmod
   _setCursorOff
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _setCursorPosition
     _SetToSendDataToLCD
     _setData
     _waitLCDBusy
       _SetToReadDataFromLCD
   _setNotBlinkingCursor
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData

 _myint (ROOT)
   i1_Add_Trace
     i1_strcat
       i1_strcpy
         i1_strlen (ARG)
       i1_strlen
     i1_strlen
   i1_lcdWriteText
     i1_writeTxtChk
       i1_SetToSendDataToLCD
       i1_setCursorPosition
         i1_SetToSendDataToLCD
         i1_setData
         i1_waitLCDBusy
           i1_SetToReadDataFromLCD
       i1_setData
       i1_waitLCDBusy
         i1_SetToReadDataFromLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      3C       5       75.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      6      25       7       46.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      32       9       62.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4B      11       93.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50     2D      2D      13       56.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     119      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     119      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jan 23 00:02:25 2019

                              pc 0002                      __CFG_CP$OFF 0000                      _SSPSTATbits 0214  
                   ___awdiv@sign 003A               _SetToSendDataToLCD 0B15                              l111 0B30  
                            l112 0B32                              l200 04AF                              l113 0B32  
                            l122 0E43                              l130 0B73                              l123 0E43  
                            l131 0B73                              l300 0678                              l140 063A  
                            l301 0662                              l141 063A                              l126 0CA0  
                            l310 0689                              l302 0677                              l134 07F9  
                            l118 0C76                              l127 0CA0                              l311 0690  
                            l303 066F                              l135 07F9                              l119 0C76  
                            l144 0E55                              l312 0699                              l304 0676  
                            l145 0E5D                              l321 0B20                              l305 06D1  
                            l146 0E72                              l330 0D4E                              l306 069B  
                            l138 0590                              l170 02DA                              l147 0E8F  
                            l307 067B                              l315 0B3D                              l139 060E  
                            l171 03A8                              l148 0E8F                              l324 0B1A  
                            l308 06B2                              l180 0452                              l172 0392  
                            l309 0682                              l181 03BC                              l173 0355  
                            l318 0B8B                              l342 0B5E                              l190 0410  
                            l182 03CB                              l174 03A7                              l327 0D46  
                            l191 0421                              l183 03CC                              l175 0364  
                            l167 02BD                              l328 0D2E                              l280 0CB9  
                            l336 0B48                              l192 043B                              l184 03D5  
                            l176 0373                              l168 0347                              l329 0D4E  
                            l281 0CA4                              l345 0B53                              l193 043C  
                            l185 03F2                              l177 0382                              l282 0CCA  
                            l530 077E                              l194 0490                              l178 043E  
                            l186 03F1                              l283 0CCA                              l531 07BB  
                            l195 0499                              l187 03F3                              l179 03A9  
                            l380 0F61                              l372 0B28                              l532 0793  
                            l196 04A5                              l188 0402                              l381 0F6C  
                            l277 0EDF                              l533 0789                              l197 04AD  
                            l189 0403                              l382 0F9D                              l534 0798  
                            l550 0F2C                              l542 0EEE                              l198 04AE  
                            l295 0E00                              l375 0F6E                              l535 0799  
                            l551 0F38                              l543 0EF8                              l199 04AF  
                            l376 0F42                              l536 07AE                              l552 0F3D  
                            l544 0F2D                              l377 0F84                              l369 0B08  
                            l537 07BA                              l529 0770                              l545 0F0B  
                            l378 0F4B                              l298 067A                              l538 07C6  
                            l546 0F01                              l379 0F56                              l299 0655  
                            l539 07CB                              l547 0F10                              l820 04BE  
                            l548 0F11                              l821 0581                              l549 0F20  
                            l822 04E1                              l823 0528                              l840 0C4D  
                            l824 0551                              l825 057A                              l834 0BBD  
                            l826 056B                              l843 0C10                              l827 0581  
                            l844 0C0B                              l837 0C35                              l845 0C1A  
                            l838 0C34                              l846 0C28                              l839 0C4D  
          _wReceptionCounterPrev 0056                     ___awmod@sign 003A                     __CFG_BORV$LO 0000  
                            wreg 0009              ?_SetToSendDataToLCD 0070                             S4480 0800  
                   __CFG_LVP$OFF 0000                   ??_lcdWriteText 0043                             l4000 02FF  
                           l4010 0342                             l4002 030C                             l4100 0465  
                           l4020 0373                             l4004 0319                             l4012 0347  
                           l3310 0F61                             l3302 0F40                             l4110 0490  
                           l4102 0473                             l4030 03AC                             l4022 0382  
                           l4014 034E                             l4006 0328                             l3320 0F8A  
                           l3312 0F6D                             l3304 0F42                             l3400 0669  
                           l4120 04A5                             l4112 0495                             l4104 0482  
                           l4040 03BA                             l4032 03AF                             l4024 0391  
                           l4016 0355                             l4008 0335                             l3322 0F8C  
                           l3306 0F4B                             l3314 0F6E                             l3410 0689  
                           l3402 066F                             l4122 04AB                             l4114 0496  
                           l4106 0488                             l4050 03D3                             l4042 03BC  
                           l4034 03B5                             l4018 0364                             l4026 0392  
                           l3500 04C4                             l3324 0F8D                             l3308 0F56  
                           l3316 0F84                             l3412 0690                             l3420 06B2  
                           l3404 0679                             l3340 0B86                             l3332 0B76  
                           l4116 0499                             l4108 0489                             l4060 03E4  
                           l4052 03D5                             l4044 03C3                             l4036 03B6  
                           l4028 03A9                             l3510 0527                             l3502 04D6  
                           l3270 0B1B                             l3326 0F98                             l3318 0F87  
                           l3430 06C5                             l3422 06B5                             l3414 0696  
                           l3406 067B                             l3334 0B79                             l4118 049E  
                           l4070 03F3                             l4062 03EA                             l4054 03DB  
                           l4046 03C9                             l4038 03B8                             l3440 0C2B  
                           l3520 055E                             l3512 0528                             l3504 04E0  
                           l3280 0DFE                             l3272 0DC7                             l3432 06CA  
                           l3424 06B8                             l3416 069A                             l3408 0682  
                           l3336 0B7B                             l3600 0EF8                             l4080 0409  
                           l4072 03FA                             l4064 03EB                             l4056 03DE  
                           l4048 03CC                             l3442 0C35                             l3370 0C05  
                           l3530 0575                             l3522 0562                             l3514 0546  
                           l3506 04E1                             l3282 0B15                             l3274 0DC8  
                           l3290 0D31                             l3434 06CC                             l3426 06BA  
                           l3418 069B                             l3338 0B7C                             l3610 0F11  
                           l3602 0EFE                             l4090 0434                             l4082 0410  
                           l4074 0400                             l4066 03ED                             l4058 03E1  
                           l3372 0C0B                             l3532 057A                             l3524 0566  
                           l3516 0550                             l3508 051D                             l3276 0DFA  
                           l3292 0D3D                             l3284 0D22                             l3428 06BB  
                           l3540 0CB9                             l3700 0C65                             l3380 0B35  
                           l3620 0F32                             l3612 0F1B                             l3604 0F01  
                           l4092 043D                             l4084 041E                             l4076 0403  
                           l4068 03EF                             l3374 0C10                             l3710 0E03  
                           l3526 056B                             l3518 0551                             l3278 0DFC  
                           l3294 0D3E                             l3286 0D25                             l3390 0649  
                           l3382 063D                             l3534 0CA1                             l3702 0C66  
                           l3542 0B04                             l3550 076D                             l3622 0F38  
                           l3614 0F20                             l3606 0F06                             l4086 0421  
                           l4078 0406                             l4094 043E                             l3376 0C1A  
                           l3712 0E3A                             l3528 0571                             l3720 0C80  
                           l3296 0D42                             l3288 0D28                             l3392 064F  
                           l3384 0640                             l3536 0CA4                             l3704 0C6C  
                           l3800 0E90                             l3560 0780                             l3552 0770  
                           l3544 0762                             l3624 0F3D                             l3616 0F25  
                           l3608 0F0B                             l4088 042A                             l4096 0452  
                           l3378 0C28                             l3490 0BBD                             l3730 0C9D  
                           l3722 0C8F                             l3714 0C77                             l3298 0D44  
                           l3394 0655                             l3386 0642                             l3538 0CB3  
                           l3706 0C71                             l3810 0EB4                             l3802 0E98  
                           l3570 0799                             l3562 0786                             l3554 0774  
                           l3546 0764                             l3618 0F2D                             l4098 0457  
                           l3492 04B1                             l3724 0C91                             l3716 0C79  
                           l3396 065C                             l3388 0643                             l3708 0C73  
                           l3740 0B6D                             l3732 0B5F                             l3820 0EDC  
                           l3812 0EBC                             l3804 0EA0                             l3572 07A8  
                           l3564 0789                             l3580 07BB                             l3556 0779  
                           l3548 0768                             l3900 020E                             l3494 04B6  
                           l3726 0C96                             l3718 0C7E                             l3398 0662  
                           l3750 07E6                             l3742 0B70                             l3734 0B61  
                           l3814 0EC0                             l3806 0EA4                             l3830 0B21  
                           l3822 0B3E                             l3582 07C0                             l3574 07AC  
                           l3566 078E                             l3558 077E                             l3590 0EE2  
                           l3910 021A                             l3902 0210                             l3488 0BA7  
                           l3496 04BD                             l3728 0C9B                             l3744 07CE  
                           l3736 0B63                             l3816 0EC8                             l3808 0EB1  
                           l3832 0B25                             l3824 0B44                             l3584 07C6  
                           l3576 07AE                             l3568 0793                             l3592 0EE6  
                           l3760 0590                             l3752 0582                             l3920 0230  
                           l3912 0229                             l3904 0212                             l3498 04BE  
                           l4482 06A4                             l3746 07DA                             l3690 0B2E  
                           l3738 0B68                             l3818 0ECD                             l3586 07CB  
                           l3578 07B3                             l3594 0EEB                             l3770 05D9  
                           l3762 05A0                             l3754 0584                             l3826 0B49  
                           l3834 0B54                             l3930 023B                             l3922 0231  
                           l3914 022B                             l3906 0215                             l3850 01D3  
                           l4484 0F76                             l3748 07DF                             l3692 0C4E  
                           l3596 0EEE                             l3588 0EE0                             l3780 0607  
                           l3772 05E1                             l3764 05B0                             l3756 0588  
                           l3828 0B4F                             l3836 0B5A                             l4476 039C  
                           l3940 0241                             l3932 023D                             l3924 0233  
                           l3916 022C                             l3908 0218                             l3860 01ED  
                           l3852 01D8                             l3790 0E5D                             l3694 0C50  
                           l3598 0EF2                             l3774 05EA                             l3782 060E  
                           l3766 05C0                             l3758 058A                             l4478 0448  
                           l3950 0246                             l3942 0242                             l3934 023E  
                           l3926 0235                             l3918 022E                             l3870 01F4  
                           l3862 01EF                             l3854 01E7                             l3792 0E6B  
                           l3784 0E46                             l3696 0C55                             l3688 0B29  
                           l3776 05F4                             l3768 05D0                             l3960 024E  
                           l3952 0247                             l3944 0243                             l3936 023F  
                           l3928 0236                             l3880 01FE                             l3872 01F6  
                           l3864 01F0                             l3856 01EA                             l3794 0E72  
                           l3786 0E4B                             l3698 0C59                             l3778 05FD  
                           l3970 026F                             l3962 0251                             l3954 0249  
                           l3946 0244                             l3938 0240                             l3890 0205  
                           l3882 0200                             l3874 01F8                             l3866 01F1  
                           l3858 01EC                             l3796 0E80                             l3788 0E55  
                           l3980 0299                             l3972 027B                             l3964 025D  
                           l3956 024A                             l3948 0245                             l3892 0207  
                           l3884 0201                             l3876 01FA                             l3868 01F2  
                           l3798 0E88                             l3990 02BD                             l3982 02AC  
                           l3974 027E                             l3966 0260                             l3958 024B  
                           l3894 020B                             l3886 0203                             l3878 01FC  
                           l3992 02CB                             l3984 02AE                             l3976 028A  
                           l3968 026C                             l3896 020C                             l3888 0204  
                           l3994 02DA                             l3986 02B1                             l3978 028D  
                           l3898 020D                             l3996 02EA                             l3988 02B4  
                           l3998 02F0                             STR_1 1040                             STR_2 104C  
                           STR_3 1010                             STR_4 1030                             STR_5 1020  
                           STR_6 1000                             STR_7 105C                             STR_8 1062  
                           STR_9 1066                             u2105 0F90                             u2210 0C4C  
                           u2211 0C4B                             u2115 0B7F                             u2300 0CC9  
                           u2205 06BE                             u2301 0CC8                             u2150 0C19  
                           u2310 0768                             u2151 0C18                             u2311 0767  
                           u2160 0649                             u2400 07C0                             u2320 0774  
                           u2161 0648                             u2401 07BF                             u2321 0773  
                           u2250 04BC                             u2090 0D4D                             u2170 064F  
                           u2330 0786                             u2410 0EE6                             u2251 04BB  
                           u2075 0DCB                             u2091 0D4C                             u2171 064E  
                           u2331 0785                             u2411 0EE5                             u3107 0257  
                           u2260 04DF                             u2180 065C                             u2420 0EF2  
                           u2261 04DE                             u2085 0DDC                             u2181 065B  
                           u2421 0EF1                             u3117 0266                             u2270 0526  
                           u2190 0669                             u2350 0797                             u2430 0EFE  
                           u2271 0525                             u2191 0668                             u3207 0EC1  
                           u2351 0796                             u2431 0EFD                             u3127 0275  
                           u2280 054F                             u2600 07DF                             u2281 054E  
                           u2601 07DE                             u2345 078A                             u3137 0284  
                           u2290 0580                             u2370 07A8                             u2450 0F0F  
                           u2610 0588                             u2291 057F                             u2371 07A7  
                           u2451 0F0E                             u2611 0587                             u3147 0293  
                           u2460 0F1B                             u2620 05D9                             u2700 034E  
                           u2365 079A                             u2461 0F1A                             u2445 0F02  
                           u2621 05D8                             u2701 034D                             u3157 02B8  
                           u2630 0E4B                             u2550 0B2E                             u2390 07B9  
                           u2710 03C3                             u2631 0E4A                             u2551 0B2D  
                           u3167 0E9C                             u2391 07B8                             u2375 07A4  
                           u2711 03C2                             u2640 0E6B                             u2560 0C55  
                           u2480 0F2B                             u2720 03D3                             u2641 0E6A  
                           u2561 0C54                             u3177 0EA8                             u2385 07AF  
                           u2481 0F2A                             u2465 0F17                             u2721 03D2  
                           u2570 0E3A                             u2650 0E80                             u2490 0F32  
                           u2730 03DB                             u2571 0E39                             u2651 0E7F  
                           u3187 0EB2                             u2491 0F31                             u2475 0F21  
                           u2731 03DA                             u2580 0C7E                             u2740 03FA  
                           u2581 0C7D                             u3197 0EB9                             u2741 03F9  
                           u2590 0B68                             u2750 041E                             u2575 0E36  
                           u2591 0B67                             u2751 041D                             u2760 0488  
                           u2680 02CB                             u2761 0487                             u2681 02CA  
                           u2770 0495                             u2690 02D9                             u2771 0494  
                           u2691 02D8                             u2780 049E                             u2781 049D  
                           u2685 02C7                             u2790 04AB                             u2791 04AA  
                           u2695 02D5                             _TMR0 0015                             _WPUB 020D  
                   __CFG_WRT$OFF 0000             printEM1812@wVariable 003D                             _main 01D3  
                           _test 004D                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                    __CFG_BOREN$ON 0000  
                           start 019C                    __CFG_IESO$OFF 0000             ??_SetToSendDataToLCD 0034  
                __end_of_GetTemp 0CA1             __end_of_clearDisplay 0B09                     main@wCounter 0248  
                          ?_main 0070                      _writeInsChk 0B33                  __end_of___awdiv 07CC  
                          STR_10 1060                            STR_11 1064                            STR_12 1055  
                  __CFG_WDTE$OFF 0000                  __end_of___awmod 0F3E                  ___awdiv@divisor 0034  
                   main@wReadout 0222                            i1l122 0D88                            i1l210 0021  
                          i1l123 0D88                            i1l211 00D1                            i1l300 070D  
                          i1l220 00AB                            i1l212 003B                            i1l301 06F8  
                          i1l213 00D0                            i1l221 00CE                            i1l310 071C  
                          i1l302 070C                            i1l230 014F                            i1l222 00BF  
                          i1l214 0091                            i1l311 0722                            i1l303 0705  
                          i1l231 0136                            i1l223 00BB                            i1l215 005A  
                          i1l207 0152                            i1l312 072A                            i1l304 070B  
                          i1l240 018E                            i1l208 0152                            i1l232 012C  
                          i1l224 00BE                            i1l216 008E                            i1l321 0B14  
                          i1l305 0761                            i1l241 018C                            i1l233 0135  
                          i1l217 00CF                            i1l225 00CD                            i1l209 00D2  
                          i1l330 0D21                            i1l306 072C                            i1l242 018D  
                          i1l226 0151                            i1l234 014E                            i1l218 00AC  
                          i1l307 0710                            i1l243 019A                            i1l235 014C  
                          i1l227 00E4                            i1l219 00A8                            i1l324 0B0E  
                          i1l308 0743                            i1l244 019A                            i1l228 0150  
                          i1l236 014D                            i1l309 0716                            i1l237 0165  
                          i1l229 0106                            i1l238 018E                            i1l327 0D1A  
                          i1l239 017A                            i1l328 0D01                            i1l280 0CE3  
                          i1l329 0D21                            i1l281 0CCD                            i1l282 0CF5  
                          i1l283 0CF5                            i1l380 0FC3                            i1l381 0FCF  
                          i1l382 0FFF                            i1l295 0DC4                            i1l375 0FD1  
                          i1l376 0FA1                            i1l377 0FE7                            i1l378 0FAB  
                          i1l298 070F                            i1l379 0FB7                            i1l299 06EB  
                          i1l840 0C04                            i1l834 0BA4                            i1l843 0BC8  
                          i1l844 0BC3                            i1l837 0BEC                            i1l845 0BD2  
                          i1l838 0BEB                            i1l846 0BE0                            i1l839 0C04  
                ___awdiv@counter 0039                            _TMR1H 0017                            _TMR1L 0016  
                          _PORTA 000C                            _PORTB 000D           printEM1812@wIsNegative 0041  
                          _TRISA 008C                            _TRISB 008D                            _TRISC 008E  
                    _writeTxtChk 063B                    __CFG_PWRTE$ON 0000                   __CFG_FCMEN$OFF 0000  
        ?i1_SetToReadDataFromLCD 0070                  __end_of_initLCD 0EE0           ??_SetToReadDataFromLCD 0034  
                          _myint 0004                  __end_of_setData 0E01               __size_of_Add_Trace 0043  
                          status 0003                            wtemp0 007E                 __end_of_Debounce 0E90  
         ??_setNotBlinkingCursor 003A                 __end_ofi1_strcat 0BA5                 __end_ofi1_strcpy 0C05  
               __end_ofi1_strlen 0BE1                   __CFG_MCLRE$OFF 0000                  __initialization 019E  
  i1lcdWriteText@wCharReadingPos 007D                     __end_of_main 04B1              i1lcdWriteText@iText 0020  
             __size_ofi1_setData 003C                   __CFG_LPBOR$OFF 0000                     ?i1_Add_Trace 0025  
                         ??_main 004B                 _wReceptionBuffer 0134                 __end_of_WakeTemp 0B74  
 __end_ofi1_SetToReadDataFromLCD 0B15            __end_ofi1_writeTxtChk 0762                 __end_of_PrintLog 07FA  
                   ?_waitLCDBusy 0070                    main@wMenuPrev 023C                 ___awdiv@dividend 0036  
                         ?_myint 0070                           _ANSELA 018C                           _ANSELB 018D  
                         i1l3300 0B0F                           i1l4200 00E8                           i1l4210 010B  
                         i1l4202 00EE                           i1l4220 012E                           i1l4212 0111  
                         i1l4204 00F5                           i1l3350 0DC2                           i1l3342 0D8A  
                         i1l4230 0158                           i1l4222 013B                           i1l4214 0118  
                         i1l4206 00F8                           i1l4150 0016                           i1l4142 0006  
                         i1l3352 0B09                           i1l3344 0D8C                           i1l3360 0D05  
                         i1l4240 017A                           i1l4232 0165                           i1l4224 013D  
                         i1l4216 011F                           i1l4208 0100                           i1l4160 0032  
                         i1l4152 001B                           i1l4144 000B                           i1l3346 0DBE  
                         i1l3362 0D11                           i1l3354 0CF6                           i1l3450 0FB7  
                         i1l4250 0192                           i1l4242 0180                           i1l4234 016A  
                         i1l4226 0143                           i1l4218 0126                           i1l4170 0050  
                         i1l4162 0035                           i1l4154 001D                           i1l4146 000C  
                         i1l3348 0DC0                           i1l3364 0D12                           i1l3356 0CF9  
                         i1l3460 0FEA                           i1l3452 0FC3                           i1l3444 0F9F  
                         i1l4252 0193                           i1l4244 0181                           i1l4236 016E  
                         i1l4228 0157                           i1l4180 009B                           i1l4172 0057  
                         i1l4164 0040                           i1l4156 0025                           i1l4148 0011  
                         i1l3366 0D16                           i1l3358 0CFC                           i1l3462 0FED  
                         i1l3454 0FD0                           i1l3446 0FA1                           i1l3630 06D8  
                         i1l4246 0183                           i1l4238 0175                           i1l4190 00B8  
                         i1l4182 00A1                           i1l4174 005C                           i1l4166 004A  
                         i1l4158 002B                           i1l3480 0BC3                           i1l3368 0D18  
                         i1l3464 0FEF                           i1l3448 0FAB                           i1l3456 0FD1  
                         i1l3640 06F2                           i1l3632 06D9                           i1l4248 018A  
                         i1l4192 00BF                           i1l4184 00A5                           i1l4176 008E  
                         i1l4168 004E                           i1l3474 0BE2                           i1l3482 0BC8  
                         i1l3466 0FF0                           i1l3458 0FE7                           i1l3650 0710  
                         i1l3642 06F8                           i1l3634 06DF                           i1l3626 06D3  
                         i1l4194 00D7                           i1l4186 00B1                           i1l4178 0095  
                         i1l3476 0BEC                           i1l3484 0BD2                           i1l3468 0FFB  
                         i1l3660 072B                           i1l3652 0716                           i1l3644 06FF  
                         i1l3636 06E5                           i1l3628 06D6                           i1l4196 00D9  
                         i1l4188 00B2                           i1l3486 0BE0                           i1l3478 0BBE  
                         i1l3670 074B                           i1l3654 071C                           i1l3646 0705  
                         i1l3638 06EB                           i1l3662 072C                           i1l4198 00DC  
                         i1l3840 0D7F                           i1l3672 074C                           i1l3656 0722  
                         i1l3664 0743                           i1l3648 070E                           u300_20 0157  
                         u300_21 0156                           i1l3674 0756                           i1l3666 0746  
                         i1l3658 0727                           i1l3842 0CCB                           i1l3684 0B8E  
                         i1l3676 075A                           i1l3668 0749                           i1l3844 0CCD  
                         u212_25 0D8F                           i1l3686 0BA4                           i1l3838 0D51  
                         i1l3678 075C                           i1l4486 0735                           i1l3846 0CDD  
                         i1l4488 0FD9                           i1l3848 0CE3                           u301_20 016A  
                         u301_21 0169                           u213_25 0DA0                           u214_20 0D20  
                         u302_20 0175                           u214_21 0D1F                           u302_21 0174  
                         u222_25 0FF3                           u223_20 0C03                           u303_20 0180  
                         u223_21 0C02                           u303_21 017F                    setData@iValue 0036  
                         u224_20 0BD1                           u304_20 018A                           u224_21 0BD0  
                         u304_21 0189                           u305_20 0192                           u305_21 0191  
                         u321_27 00A2                           u250_20 06DF                           u250_21 06DE  
                         u251_20 06E5                           u251_21 06E4                           u252_20 06F2  
                         u252_21 06F1                           u253_20 06FF                           u253_21 06FE  
                         u254_25 074F                           u280_20 000B                           u280_21 000A  
                         u281_20 0011                           u281_21 0010                _setCursorPosition 0F3E  
                         u266_20 0D7F                           u290_20 00A1                           u282_20 0016  
                         u266_21 0D7E                           u290_21 00A0                           u282_21 0015  
                         u266_25 0D7B                           u267_20 0CF4                           u291_20 00B1  
                         u283_20 001B                           u267_21 0CF3                           u291_21 00B0  
                         u283_21 001A                           u292_20 00B8                           u284_20 0025  
                         u292_21 00B7                           u284_21 0024                           u293_20 00D7  
                         u285_20 002B                           u293_21 00D6                           u285_21 002A  
                         u294_20 00E8                           u286_20 0040                           u294_21 00E7  
                         u286_21 003F                           u295_20 00EE                           u287_20 0057  
                         u295_21 00ED                           u287_21 0056                           u296_20 010B  
                         u288_20 0095                           u296_21 010A                           u288_21 0094  
                         u297_20 0111                           u289_20 009B                           u297_21 0110  
                         u289_21 009A                           u298_20 011F                           u298_21 011E  
                         u299_20 013B                           u299_21 013A                        ??_GetTemp 0042  
                         _SSPADD 0212                           _SSPBUF 0211               ?_setCursorPosition 0039  
            ??_setCursorPosition 003A                        ??___awdiv 0038                        ??___awmod 0038  
           __end_of_lcdWriteText 0CCB          main@wEnterBottonPressed 0241                     ?_printEM1812 003D  
                         _memset 04B1                           _wTrial 0052                 ___awdiv@quotient 003B  
                ___awmod@divisor 0034                __end_of_Add_Trace 0E44                  ___awmod@counter 0039  
                         _strcat 0BA5                           _strcpy 0C29                           _strlen 0C05  
                      ??_initLCD 003A                        ??_setData 0034         __end_of_moveCursorToHome 0B29  
                  ?_SetToGetTemp 0070        __end_of_setCursorPosition 0F9E                __end_ofi1_setData 0DC5  
         __size_of_writeInsNoChk 0018          __end_of__initialization 01CF            __size_of_clearDisplay 0005  
     setCursorPosition@wLCDIndex 003D                   __pcstackCOMMON 0070                     __pidataBANK1 0B00  
                  __end_of_myint 019C    __size_ofi1_SetToSendDataToLCD 0006             writeInsNoChk@iOpCode 0038  
     setCursorPosition@iPosition 0039                   _wInterruptText 01A0                   _OPTION_REGbits 0095  
                      ?_Debounce 0034                      i1strcat@src 0020                        ?i1_strcat 0020  
                      ?i1_strcpy 0076                        ?i1_strlen 0070                   ??_SetToGetTemp 0034  
                   _clearDisplay 0B04                      i1strcpy@src 0076                          ??_myint 002F  
                     __pbssBANK0 004D                       __pbssBANK1 00A0                       __pbssBANK2 0120  
                     __pbssBANK3 01A0                _wReceptionCounter 0057     __size_ofi1_setCursorPosition 0062  
                  ?_setCursorOff 0070                  __CFG_VCAPEN$OFF 0000          __size_ofi1_lcdWriteText 002B  
                i1setData@iValue 0072                        ?_WakeTemp 0070                       __pmaintext 01D3  
                 Add_Trace@iText 0048                   Add_Trace@oText 004A                        ?_PrintLog 0070  
         __size_ofi1_waitLCDBusy 002C                       __pintentry 0004                    _writeInsNoChk 0B74  
                        ?_memset 0034                     ?_writeInsChk 0070                          ?_strcat 0042  
                        ?_strcpy 003A                          ?_strlen 0034             __size_ofi1_Add_Trace 003A  
                   ?_writeTxtChk 0070                       ??_Debounce 0036                       ??i1_strcat 0022  
                     ??i1_strcpy 0078                       ??i1_strlen 0072       __size_of_setCursorPosition 0060  
           __size_of_waitLCDBusy 002D                   ??_setCursorOff 003A                          _GetTemp 0C77  
          __size_of_lcdWriteText 002A             main@wTemperaturePrev 023F                       ??_WakeTemp 0034  
    __size_of_SetToSendDataToLCD 0006                       ??_PrintLog 0047                          ___awdiv 0762  
                        ___awmod 0EE0                  printEM1812@wTen 0042                   ?_writeInsNoChk 0070  
                     _wTempState 00A4                  __CFG_STVREN$OFF 0000                  Debounce@iSwitch 0038  
               _wI2CCommandState 00A6                  __size_of_memset 00D1                    ?_ToggleBitRB5 0070  
                        __ptext1 0B54                          __ptext2 0B49                          __ptext3 0582  
                        __ptext4 0EE0                          __ptext5 0762                          __ptext6 0B3E  
                        __ptext7 0B21                          __ptext8 0E90                          __ptext9 0B04  
                Debounce@ioTimer 0034                  __size_of_strcat 0019             __size_of_printEM1812 00B9  
                __size_of_strcpy 0025                  __size_of_strlen 0024                          _initLCD 0E90  
                      _T1CONbits 0018                 ___awmod@dividend 0036                          _setData 0DC5  
              main@wDebounceDown 0246                    i1_waitLCDBusy 0CF6                          clrloop0 07FB  
           end_of_initialization 01CF                     _lcdWriteText 0CA1    __size_of_SetToReadDataFromLCD 0006  
                        memset@c 0036                          memset@k 003E                          memset@n 0038  
                        memset@s 0040     i1setCursorPosition@wLCDIndex 0079                 __CFG_CLKOUTEN$ON 0000  
  __size_of_setNotBlinkingCursor 000B             __end_of_SetToGetTemp 0C77                          strcpy@d 0040  
                        strlen@a 0038                   ??_ToggleBitRB5 0034                          strcpy@s 003E  
                        strlen@s 0034                        _PORTAbits 000C                        _PORTBbits 000D  
   i1setCursorPosition@iPosition 0075                       _powerOnLcd 0B3E             main@wUpBottonPressed 024A  
               __CFG_FOSC$INTOSC 0000                        _Add_Trace 0E01                        _TRISAbits 008C  
                 ?i1_waitLCDBusy 0070                ?_moveCursorToHome 0070              printEM1812@wDecimal 0044  
              _wTimer1IntCounter 0050               ??_moveCursorToHome 003A              printEM1812@oTextOut 003F  
                 i1_lcdWriteText 0CCB                        i1_setData 0D89              waitLCDBusy@busyFlag 0037  
         __size_ofi1_writeTxtChk 0090                  ??_writeInsNoChk 0037              i1_setCursorPosition 0F9E  
               _mWritingPosition 0059             __end_of_setCursorOff 0B54                   __end_of_memset 0582  
                 __end_of_strcat 0BBE                   _wTimer0Counter 00A5                   __end_of_strcpy 0C4E  
                 __end_of_strlen 0C29             __size_of_writeInsChk 000B              start_initialization 019E  
                     ?_Add_Trace 0047             __size_of_writeTxtChk 0097                __size_of_Debounce 004C  
                      i1strcpy@d 007D                        i1strlen@a 0074                        i1strcpy@s 007A  
                      i1strlen@s 0070           __end_ofi1_lcdWriteText 0CF6     __end_ofi1_SetToSendDataToLCD 0B0F  
              __size_ofi1_strcat 0019                __size_ofi1_strcpy 0024                __size_ofi1_strlen 0023  
           ?i1_setCursorPosition 0075                       ?i1_setData 0070                     i1strcat@dest 0024  
           i1writeTxtChk@iOpCode 007C                __size_of_WakeTemp 0015                  main@wDebounceUp 0244  
       ??i1_SetToReadDataFromLCD 0070                      __pdataBANK1 00C1                    _wI2CTxSendPos 0053  
              __size_of_PrintLog 002E                         ??_memset 003A                     i1strcpy@dest 007C  
                     memset@dest 0034                         ??_strcat 0044                         ??_strcpy 003C  
                       ??_strlen 0036         i1setCursorPosition@iLine 0078                      ?_powerOnLcd 0070  
                ??i1_waitLCDBusy 0070                 i1Add_Trace@iText 0026                        ___latbits 0003  
                  i1_writeTxtChk 06D2                 i1Add_Trace@oText 002E                    __pcstackBANK0 0020  
                  __pcstackBANK1 00BB                    __pcstackBANK4 0220                printEM1812@wUnity 0043  
          ??i1_setCursorPosition 0076                  ?i1_lcdWriteText 0020             __end_of_ToggleBitRB5 0B33  
                       ?_GetTemp 0070            __size_of_SetToGetTemp 0029                     _wTemperature 00A0  
        i1Add_Trace@iSizeOfoText 0025               writeInsChk@iOpCode 0039                         ?___awdiv 0034  
                       ?___awmod 0034                    ??i1_Add_Trace 0028                        __pswtext1 0800  
                      _wCounter2 004F                         ?_initLCD 0070                   ?i1_writeTxtChk 0070  
                       ?_setData 0070                      ??_Add_Trace 00BB                    ??_waitLCDBusy 0034  
                      _wHumidity 00A2                    PrintLog@iText 004A                     _SetToGetTemp 0C4E  
                 __size_of_myint 0198                 _mDisplayOnOffReg 005B       __end_of_SetToSendDataToLCD 0B1B  
                      clear_ram0 07FA                      ??i1_setData 0070                         _PIE1bits 0091  
                       _PIE2bits 0092              __size_of_powerOnLcd 000B                         _PIR1bits 0011  
                       _PIR2bits 0012            __size_of_setCursorOff 000B                        main@F2250 00C1  
       _wReceptionBufferPosition 0058                Debounce@swPressed 0035     __end_of_SetToReadDataFromLCD 0B21  
                  ??_printEM1812 0040  __size_ofi1_SetToReadDataFromLCD 0006      lcdWriteText@wCharReadingPos 0046  
           i1_SetToSendDataToLCD 0B09                 _wI2CRxBufferSize 0054                        main@wConv 0236  
                      main@wMenu 024C     __end_of_setNotBlinkingCursor 0B5F                        main@wTemp 0220  
                       _Debounce 0E44              __end_ofi1_Add_Trace 0D89                         i1_strcat 0B8C  
                       i1_strcpy 0BE1                         i1_strlen 0BBE                lcdWriteText@iText 0041  
            __end_of_waitLCDBusy 0D4F                     _setCursorOff 0B49                 __size_of_GetTemp 002A  
                       _WakeTemp 0B5F        __size_of_moveCursorToHome 0008            Add_Trace@iSizeOfoText 0047  
                   _wI2CTxBuffer 00A7                         _PrintLog 07CC                 __size_of___awdiv 006A  
               __size_of___awmod 005E            ?i1_SetToSendDataToLCD 0070                      _wTempUpdate 0051  
               _wI2CTxBufferSize 0055                  ??i1_writeTxtChk 007A                       _ANSELCbits 018E  
               __size_of_initLCD 0050                       strcat@dest 0046              __end_of_printEM1812 063B  
      PrintLog@wInterruptTextLen 0049                 __size_of_setData 003C                    ?_clearDisplay 0070  
          __size_of_ToggleBitRB5 000A                         __ptext10 0B33                         __ptext11 0B74  
                       __ptext20 0B1B                         __ptext12 0B5F                         __ptext21 0DC5  
                       __ptext13 0B29                         __ptext22 0B15                         __ptext14 0C4E  
                       __ptext31 0CCB                         __ptext23 0C77                         __ptext15 07CC  
                       __ptext40 0BBE                         __ptext32 06D2                         __ptext24 04B1  
                       __ptext16 0CA1                         __ptext41 0BE1                         __ptext33 0F9E  
                       __ptext25 0E44                         __ptext17 063B                         __ptext34 0CF6  
                       __ptext26 0E01                         __ptext18 0F3E                         __ptext35 0B0F  
                       __ptext27 0BA5                         __ptext19 0D22                         __ptext36 0D89  
                       __ptext28 0C05                         __ptext37 0B09                         __ptext29 0C29  
                       __ptext38 0D4F                         __ptext39 0B8C                         _wHexTemp 0120  
          main@wIterationCounter 023A           i1_SetToReadDataFromLCD 0B0F                       strcpy@dest 0041  
                  __size_of_main 02DE               main@wDebounceEnter 0242               writeTxtChk@iOpCode 0040  
                       int$flags 007E            __end_of_writeInsNoChk 0B8C                main@wHumidityPrev 023D  
                    i1_Add_Trace 0D4F                    ??_writeInsChk 0039                     _ToggleBitRB5 0B29  
                   ??_powerOnLcd 003A                    ??_writeTxtChk 003E                       _INTCONbits 000B  
               ??i1_lcdWriteText 0022                      _waitLCDBusy 0D22                   ??_clearDisplay 003A  
                 __pstringtext10 1062                   __pstringtext11 1064                   __pstringtext12 1066  
                 __pstringtext13 0000           setCursorPosition@iLine 003C                         intlevel1 0000  
         main@wDownBottonPressed 024B             _SetToReadDataFromLCD 0B1B                        strcat@src 0042  
                      strcpy@src 003A                       _OSCCONbits 0099             _setNotBlinkingCursor 0B54  
             __end_of_powerOnLcd 0B49           ??i1_SetToSendDataToLCD 0070                      _printEM1812 0582  
                  __pstringtext1 1000                    __pstringtext2 1010                    __pstringtext3 1020  
                  __pstringtext4 1030                    __pstringtext5 1040                    __pstringtext6 104C  
                  __pstringtext7 1055                    __pstringtext8 105C                    __pstringtext9 1060  
    __end_ofi1_setCursorPosition 1000            __end_ofi1_waitLCDBusy 0D22              __end_of_writeInsChk 0B3E  
                    _SSPCON1bits 0215                      _SSPCON2bits 0216                      _SSPCON3bits 0217  
                  ?_lcdWriteText 0041              __end_of_writeTxtChk 06D2            ?_SetToReadDataFromLCD 0070  
          i1waitLCDBusy@busyFlag 0073            ?_setNotBlinkingCursor 0070                 _moveCursorToHome 0B21  
         _mCursorDisplayShiftReg 005A  
