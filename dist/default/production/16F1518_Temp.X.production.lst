

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Jan 15 23:31:17 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F1518 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   120                           PORTB equ 0Dh ;# 
   121  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   122                           PORTC equ 0Eh ;# 
   123  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   124                           PORTE equ 010h ;# 
   125  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   126                           PIR1 equ 011h ;# 
   127  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   128                           PIR2 equ 012h ;# 
   129  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   130                           TMR0 equ 015h ;# 
   131  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   132                           TMR1 equ 016h ;# 
   133  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   134                           TMR1L equ 016h ;# 
   135  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   136                           TMR1H equ 017h ;# 
   137  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   138                           T1CON equ 018h ;# 
   139  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   140                           T1GCON equ 019h ;# 
   141  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   142                           TMR2 equ 01Ah ;# 
   143  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   144                           PR2 equ 01Bh ;# 
   145  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   146                           T2CON equ 01Ch ;# 
   147  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   148                           TRISA equ 08Ch ;# 
   149  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   150                           TRISB equ 08Dh ;# 
   151  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   152                           TRISC equ 08Eh ;# 
   153  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   154                           TRISE equ 090h ;# 
   155  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   156                           PIE1 equ 091h ;# 
   157  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   158                           PIE2 equ 092h ;# 
   159  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   160                           OPTION_REG equ 095h ;# 
   161  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   162                           PCON equ 096h ;# 
   163  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   164                           WDTCON equ 097h ;# 
   165  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   166                           OSCCON equ 099h ;# 
   167  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   168                           OSCSTAT equ 09Ah ;# 
   169  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   170                           ADRES equ 09Bh ;# 
   171  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   172                           ADRESL equ 09Bh ;# 
   173  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   174                           ADRESH equ 09Ch ;# 
   175  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   176                           ADCON0 equ 09Dh ;# 
   177  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   178                           ADCON1 equ 09Eh ;# 
   179  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   180                           LATA equ 010Ch ;# 
   181  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   182                           LATB equ 010Dh ;# 
   183  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   184                           LATC equ 010Eh ;# 
   185  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   186                           BORCON equ 0116h ;# 
   187  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   188                           FVRCON equ 0117h ;# 
   189  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   190                           APFCON equ 011Dh ;# 
   191  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   192                           ANSELA equ 018Ch ;# 
   193  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   194                           ANSELB equ 018Dh ;# 
   195  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   196                           ANSELC equ 018Eh ;# 
   197  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   198                           PMADR equ 0191h ;# 
   199  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   200                           PMADRL equ 0191h ;# 
   201  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   202                           PMADRH equ 0192h ;# 
   203  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   204                           PMDAT equ 0193h ;# 
   205  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   206                           PMDATL equ 0193h ;# 
   207  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   208                           PMDATH equ 0194h ;# 
   209  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   210                           PMCON1 equ 0195h ;# 
   211  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   212                           PMCON2 equ 0196h ;# 
   213  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   214                           VREGCON equ 0197h ;# 
   215  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   216                           RCREG equ 0199h ;# 
   217  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   218                           TXREG equ 019Ah ;# 
   219  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   220                           SP1BRG equ 019Bh ;# 
   221  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   222                           SP1BRGL equ 019Bh ;# 
   223  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   224                           SPBRG equ 019Bh ;# 
   225  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   226                           SPBRGL equ 019Bh ;# 
   227  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   228                           SP1BRGH equ 019Ch ;# 
   229  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   230                           SPBRGH equ 019Ch ;# 
   231  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   232                           RCSTA equ 019Dh ;# 
   233  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   234                           TXSTA equ 019Eh ;# 
   235  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   236                           BAUDCON equ 019Fh ;# 
   237  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   238                           WPUB equ 020Dh ;# 
   239  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   240                           WPUE equ 0210h ;# 
   241  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   242                           SSPBUF equ 0211h ;# 
   243  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   244                           SSP1BUF equ 0211h ;# 
   245  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   246                           SSPADD equ 0212h ;# 
   247  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   248                           SSP1ADD equ 0212h ;# 
   249  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   250                           SSPMSK equ 0213h ;# 
   251  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   252                           SSP1MSK equ 0213h ;# 
   253  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   254                           SSPSTAT equ 0214h ;# 
   255  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   256                           SSP1STAT equ 0214h ;# 
   257  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   258                           SSPCON1 equ 0215h ;# 
   259  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   260                           SSPCON equ 0215h ;# 
   261  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   262                           SSP1CON1 equ 0215h ;# 
   263  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   264                           SSPCON2 equ 0216h ;# 
   265  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   266                           SSP1CON2 equ 0216h ;# 
   267  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   268                           SSPCON3 equ 0217h ;# 
   269  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   270                           SSP1CON3 equ 0217h ;# 
   271  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   272                           CCPR1 equ 0291h ;# 
   273  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   274                           CCPR1L equ 0291h ;# 
   275  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   276                           CCPR1H equ 0292h ;# 
   277  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   278                           CCP1CON equ 0293h ;# 
   279  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   280                           CCPR2 equ 0298h ;# 
   281  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   282                           CCPR2L equ 0298h ;# 
   283  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   284                           CCPR2H equ 0299h ;# 
   285  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   286                           CCP2CON equ 029Ah ;# 
   287  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   288                           IOCBP equ 0394h ;# 
   289  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   290                           IOCBN equ 0395h ;# 
   291  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   292                           IOCBF equ 0396h ;# 
   293  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   294                           STATUS_SHAD equ 0FE4h ;# 
   295  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   296                           WREG_SHAD equ 0FE5h ;# 
   297  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   298                           BSR_SHAD equ 0FE6h ;# 
   299  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   300                           PCLATH_SHAD equ 0FE7h ;# 
   301  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   302                           FSR0L_SHAD equ 0FE8h ;# 
   303  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   304                           FSR0H_SHAD equ 0FE9h ;# 
   305  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   306                           FSR1L_SHAD equ 0FEAh ;# 
   307  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   308                           FSR1H_SHAD equ 0FEBh ;# 
   309  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   310                           STKPTR equ 0FEDh ;# 
   311  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   312                           TOSL equ 0FEEh ;# 
   313  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   314                           TOSH equ 0FEFh ;# 
   315  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   316                           INDF0 equ 00h ;# 
   317  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   318                           INDF1 equ 01h ;# 
   319  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   320                           PCL equ 02h ;# 
   321  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   322                           STATUS equ 03h ;# 
   323  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   324                           FSR0L equ 04h ;# 
   325  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   326                           FSR0H equ 05h ;# 
   327  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   328                           FSR1L equ 06h ;# 
   329  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   330                           FSR1H equ 07h ;# 
   331  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   332                           BSR equ 08h ;# 
   333  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   334                           WREG equ 09h ;# 
   335  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   336                           PCLATH equ 0Ah ;# 
   337  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   338                           INTCON equ 0Bh ;# 
   339  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   340                           PORTA equ 0Ch ;# 
   341  000C                     # 493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   342                           PORTB equ 0Dh ;# 
   343  000D                     # 555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   344                           PORTC equ 0Eh ;# 
   345  000E                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   346                           PORTE equ 010h ;# 
   347  0010                     # 638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   348                           PIR1 equ 011h ;# 
   349  0011                     # 700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   350                           PIR2 equ 012h ;# 
   351  0012                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   352                           TMR0 equ 015h ;# 
   353  0015                     # 754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   354                           TMR1 equ 016h ;# 
   355  0016                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   356                           TMR1L equ 016h ;# 
   357  0016                     # 781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   358                           TMR1H equ 017h ;# 
   359  0017                     # 801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   360                           T1CON equ 018h ;# 
   361  0018                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   362                           T1GCON equ 019h ;# 
   363  0019                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   364                           TMR2 equ 01Ah ;# 
   365  001A                     # 963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   366                           PR2 equ 01Bh ;# 
   367  001B                     # 983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   368                           T2CON equ 01Ch ;# 
   369  001C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   370                           TRISA equ 08Ch ;# 
   371  008C                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   372                           TRISB equ 08Dh ;# 
   373  008D                     # 1178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   374                           TRISC equ 08Eh ;# 
   375  008E                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   376                           TRISE equ 090h ;# 
   377  0090                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   378                           PIE1 equ 091h ;# 
   379  0091                     # 1309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   380                           PIE2 equ 092h ;# 
   381  0092                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   382                           OPTION_REG equ 095h ;# 
   383  0095                     # 1426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   384                           PCON equ 096h ;# 
   385  0096                     # 1483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   386                           WDTCON equ 097h ;# 
   387  0097                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   388                           OSCCON equ 099h ;# 
   389  0099                     # 1608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   390                           OSCSTAT equ 09Ah ;# 
   391  009A                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   392                           ADRES equ 09Bh ;# 
   393  009B                     # 1670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   394                           ADRESL equ 09Bh ;# 
   395  009B                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   396                           ADRESH equ 09Ch ;# 
   397  009C                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   398                           ADCON0 equ 09Dh ;# 
   399  009D                     # 1790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   400                           ADCON1 equ 09Eh ;# 
   401  009E                     # 1856 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   402                           LATA equ 010Ch ;# 
   403  010C                     # 1918 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   404                           LATB equ 010Dh ;# 
   405  010D                     # 1980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   406                           LATC equ 010Eh ;# 
   407  010E                     # 2042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   408                           BORCON equ 0116h ;# 
   409  0116                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   410                           FVRCON equ 0117h ;# 
   411  0117                     # 2134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   412                           APFCON equ 011Dh ;# 
   413  011D                     # 2160 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   414                           ANSELA equ 018Ch ;# 
   415  018C                     # 2213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   416                           ANSELB equ 018Dh ;# 
   417  018D                     # 2271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   418                           ANSELC equ 018Eh ;# 
   419  018E                     # 2333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   420                           PMADR equ 0191h ;# 
   421  0191                     # 2340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   422                           PMADRL equ 0191h ;# 
   423  0191                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   424                           PMADRH equ 0192h ;# 
   425  0192                     # 2380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   426                           PMDAT equ 0193h ;# 
   427  0193                     # 2387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   428                           PMDATL equ 0193h ;# 
   429  0193                     # 2407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   430                           PMDATH equ 0194h ;# 
   431  0194                     # 2427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   432                           PMCON1 equ 0195h ;# 
   433  0195                     # 2483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   434                           PMCON2 equ 0196h ;# 
   435  0196                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   436                           VREGCON equ 0197h ;# 
   437  0197                     # 2524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   438                           RCREG equ 0199h ;# 
   439  0199                     # 2544 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   440                           TXREG equ 019Ah ;# 
   441  019A                     # 2564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   442                           SP1BRG equ 019Bh ;# 
   443  019B                     # 2571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   444                           SP1BRGL equ 019Bh ;# 
   445  019B                     # 2576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   446                           SPBRG equ 019Bh ;# 
   447  019B                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   448                           SPBRGL equ 019Bh ;# 
   449  019B                     # 2625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   450                           SP1BRGH equ 019Ch ;# 
   451  019C                     # 2630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   452                           SPBRGH equ 019Ch ;# 
   453  019C                     # 2663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   454                           RCSTA equ 019Dh ;# 
   455  019D                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   456                           TXSTA equ 019Eh ;# 
   457  019E                     # 2787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   458                           BAUDCON equ 019Fh ;# 
   459  019F                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   460                           WPUB equ 020Dh ;# 
   461  020D                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   462                           WPUE equ 0210h ;# 
   463  0210                     # 2930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   464                           SSPBUF equ 0211h ;# 
   465  0211                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   466                           SSP1BUF equ 0211h ;# 
   467  0211                     # 2968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   468                           SSPADD equ 0212h ;# 
   469  0212                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   470                           SSP1ADD equ 0212h ;# 
   471  0212                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   472                           SSPMSK equ 0213h ;# 
   473  0213                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   474                           SSP1MSK equ 0213h ;# 
   475  0213                     # 3044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   476                           SSPSTAT equ 0214h ;# 
   477  0214                     # 3049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   478                           SSP1STAT equ 0214h ;# 
   479  0214                     # 3166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   480                           SSPCON1 equ 0215h ;# 
   481  0215                     # 3171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   482                           SSPCON equ 0215h ;# 
   483  0215                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   484                           SSP1CON1 equ 0215h ;# 
   485  0215                     # 3370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   486                           SSPCON2 equ 0216h ;# 
   487  0216                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   488                           SSP1CON2 equ 0216h ;# 
   489  0216                     # 3492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   490                           SSPCON3 equ 0217h ;# 
   491  0217                     # 3497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   492                           SSP1CON3 equ 0217h ;# 
   493  0217                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   494                           CCPR1 equ 0291h ;# 
   495  0291                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   496                           CCPR1L equ 0291h ;# 
   497  0291                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   498                           CCPR1H equ 0292h ;# 
   499  0292                     # 3661 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   500                           CCP1CON equ 0293h ;# 
   501  0293                     # 3725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   502                           CCPR2 equ 0298h ;# 
   503  0298                     # 3732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   504                           CCPR2L equ 0298h ;# 
   505  0298                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   506                           CCPR2H equ 0299h ;# 
   507  0299                     # 3772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   508                           CCP2CON equ 029Ah ;# 
   509  029A                     # 3836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   510                           IOCBP equ 0394h ;# 
   511  0394                     # 3906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   512                           IOCBN equ 0395h ;# 
   513  0395                     # 3976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   514                           IOCBF equ 0396h ;# 
   515  0396                     # 4046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   516                           STATUS_SHAD equ 0FE4h ;# 
   517  0FE4                     # 4078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   518                           WREG_SHAD equ 0FE5h ;# 
   519  0FE5                     # 4098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   520                           BSR_SHAD equ 0FE6h ;# 
   521  0FE6                     # 4118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   522                           PCLATH_SHAD equ 0FE7h ;# 
   523  0FE7                     # 4138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   524                           FSR0L_SHAD equ 0FE8h ;# 
   525  0FE8                     # 4158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   526                           FSR0H_SHAD equ 0FE9h ;# 
   527  0FE9                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   528                           FSR1L_SHAD equ 0FEAh ;# 
   529  0FEA                     # 4198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   530                           FSR1H_SHAD equ 0FEBh ;# 
   531  0FEB                     # 4218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   532                           STKPTR equ 0FEDh ;# 
   533  0FED                     # 4238 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   534                           TOSL equ 0FEEh ;# 
   535  0FEE                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1518.h"
   536                           TOSH equ 0FEFh ;# 
   537  0FEF                     	FNCALL	_main,_Add_Trace
   538                           	FNCALL	_main,_Debounce
   539                           	FNCALL	_main,_GetTemp
   540                           	FNCALL	_main,_PrintLog
   541                           	FNCALL	_main,_SetToGetTemp
   542                           	FNCALL	_main,_WakeTemp
   543                           	FNCALL	_main,_clearDisplay
   544                           	FNCALL	_main,_initLCD
   545                           	FNCALL	_main,_lcdWriteText
   546                           	FNCALL	_main,_memset
   547                           	FNCALL	_main,_moveCursorToHome
   548                           	FNCALL	_main,_powerOnLcd
   549                           	FNCALL	_main,_printEM1812
   550                           	FNCALL	_main,_setCursorOff
   551                           	FNCALL	_main,_setCursorPosition
   552                           	FNCALL	_main,_setNotBlinkingCursor
   553                           	FNCALL	_setNotBlinkingCursor,_writeInsChk
   554                           	FNCALL	_setCursorOff,_writeInsChk
   555                           	FNCALL	_printEM1812,___lwdiv
   556                           	FNCALL	_printEM1812,___lwmod
   557                           	FNCALL	_powerOnLcd,_writeInsChk
   558                           	FNCALL	_moveCursorToHome,_writeInsChk
   559                           	FNCALL	_initLCD,_clearDisplay
   560                           	FNCALL	_initLCD,_setData
   561                           	FNCALL	_initLCD,_writeInsChk
   562                           	FNCALL	_clearDisplay,_writeInsChk
   563                           	FNCALL	_writeInsChk,_waitLCDBusy
   564                           	FNCALL	_writeInsChk,_writeInsNoChk
   565                           	FNCALL	_writeInsNoChk,_SetToSendDataToLCD
   566                           	FNCALL	_writeInsNoChk,_setData
   567                           	FNCALL	_PrintLog,_lcdWriteText
   568                           	FNCALL	_PrintLog,_memset
   569                           	FNCALL	_PrintLog,_strlen
   570                           	FNCALL	_lcdWriteText,_writeTxtChk
   571                           	FNCALL	_writeTxtChk,_SetToSendDataToLCD
   572                           	FNCALL	_writeTxtChk,_setCursorPosition
   573                           	FNCALL	_writeTxtChk,_setData
   574                           	FNCALL	_writeTxtChk,_waitLCDBusy
   575                           	FNCALL	_setCursorPosition,_SetToSendDataToLCD
   576                           	FNCALL	_setCursorPosition,_setData
   577                           	FNCALL	_setCursorPosition,_waitLCDBusy
   578                           	FNCALL	_waitLCDBusy,_SetToReadDataFromLCD
   579                           	FNCALL	_GetTemp,_memset
   580                           	FNCALL	_Add_Trace,_strcat
   581                           	FNCALL	_Add_Trace,_strlen
   582                           	FNCALL	_strcat,_strcpy
   583                           	FNCALL	_strcat,_strlen
   584                           	FNROOT	_main
   585                           	FNCALL	_myint,i1_Add_Trace
   586                           	FNCALL	i1_Add_Trace,i1_strcat
   587                           	FNCALL	i1_Add_Trace,i1_strlen
   588                           	FNCALL	i1_strcat,i1_strcpy
   589                           	FNCALL	i1_strcat,i1_strlen
   590                           	FNCALL	intlevel1,_myint
   591                           	global	intlevel1
   592                           	FNROOT	intlevel1
   593                           	global	main@F2238
   594                           psect	idataBANK1,class=CODE,space=0,delta=2,noexec
   595                           global __pidataBANK1
   596                           __pidataBANK1:
   597  0E11                     	file	"161518_temp_main.c"
   598                           	line	267
   599                           
   600                           ;initializer for main@F2238
   601                           	retlw	02Bh
   602  0E11  342B               	retlw	low(0)
   603  0E12  3400               	retlw	078h
   604  0E13  3478               	retlw	low(0)
   605  0E14  3400               	global	_wI2CTxSendPos
   606                           	global	_wI2CRxBufferSize
   607                           	global	_wI2CTxBufferSize
   608                           	global	_wReceptionBufferPosition
   609                           	global	_mWritingPosition
   610                           	global	_mCursorDisplayShiftReg
   611                           	global	_mDisplayOnOffReg
   612                           	global	_wI2CTxBuffer
   613                           	global	_wReceptionBuffer
   614                           	global	_wInterruptText
   615                           	global	_PORTAbits
   616                           _PORTAbits	set	0xC
   617  000C                     	global	_PIR2bits
   618                           _PIR2bits	set	0x12
   619  0012                     	global	_PIR1bits
   620                           _PIR1bits	set	0x11
   621  0011                     	global	_PORTB
   622                           _PORTB	set	0xD
   623  000D                     	global	_PORTA
   624                           _PORTA	set	0xC
   625  000C                     	global	_INTCONbits
   626                           _INTCONbits	set	0xB
   627  000B                     	global	_PORTBbits
   628                           _PORTBbits	set	0xD
   629  000D                     	global	_TRISAbits
   630                           _TRISAbits	set	0x8C
   631  008C                     	global	_PIE2bits
   632                           _PIE2bits	set	0x92
   633  0092                     	global	_TRISC
   634                           _TRISC	set	0x8E
   635  008E                     	global	_TRISA
   636                           _TRISA	set	0x8C
   637  008C                     	global	_OPTION_REGbits
   638                           _OPTION_REGbits	set	0x95
   639  0095                     	global	_TRISB
   640                           _TRISB	set	0x8D
   641  008D                     	global	_OSCCONbits
   642                           _OSCCONbits	set	0x99
   643  0099                     	global	_PIE1bits
   644                           _PIE1bits	set	0x91
   645  0091                     	global	_ANSELCbits
   646                           _ANSELCbits	set	0x18E
   647  018E                     	global	_ANSELA
   648                           _ANSELA	set	0x18C
   649  018C                     	global	_ANSELB
   650                           _ANSELB	set	0x18D
   651  018D                     	global	_SSPBUF
   652                           _SSPBUF	set	0x211
   653  0211                     	global	_SSPSTATbits
   654                           _SSPSTATbits	set	0x214
   655  0214                     	global	_SSPADD
   656                           _SSPADD	set	0x212
   657  0212                     	global	_SSPCON1bits
   658                           _SSPCON1bits	set	0x215
   659  0215                     	global	_WPUB
   660                           _WPUB	set	0x20D
   661  020D                     	global	_SSPCON2bits
   662                           _SSPCON2bits	set	0x216
   663  0216                     	global	_SSPCON3bits
   664                           _SSPCON3bits	set	0x217
   665  0217                     psect	stringtext1,class=STRCODE,delta=2,noexec
   666                           global __pstringtext1
   667                           __pstringtext1:
   668  1000                     	
   669                           STR_6:	
   670  1000                     	retlw	87	;'W'
   671  1000  3457               	retlw	84	;'T'
   672  1001  3454               	retlw	70	;'F'
   673  1002  3446               	retlw	32	;' '
   674  1003  3420               	retlw	32	;' '
   675  1004  3420               	retlw	32	;' '
   676  1005  3420               	retlw	32	;' '
   677  1006  3420               	retlw	32	;' '
   678  1007  3420               	retlw	32	;' '
   679  1008  3420               	retlw	32	;' '
   680  1009  3420               	retlw	32	;' '
   681  100A  3420               	retlw	32	;' '
   682  100B  3420               	retlw	32	;' '
   683  100C  3420               	retlw	32	;' '
   684  100D  3420               	retlw	32	;' '
   685  100E  3420               	retlw	0
   686  100F  3400               psect	stringtext2,class=STRCODE,delta=2,noexec
   687                           global __pstringtext2
   688                           __pstringtext2:
   689  1010                     	
   690                           STR_3:	
   691  1010                     	retlw	72	;'H'
   692  1010  3448               	retlw	111	;'o'
   693  1011  346F               	retlw	109	;'m'
   694  1012  346D               	retlw	101	;'e'
   695  1013  3465               	retlw	32	;' '
   696  1014  3420               	retlw	32	;' '
   697  1015  3420               	retlw	32	;' '
   698  1016  3420               	retlw	32	;' '
   699  1017  3420               	retlw	32	;' '
   700  1018  3420               	retlw	32	;' '
   701  1019  3420               	retlw	32	;' '
   702  101A  3420               	retlw	32	;' '
   703  101B  3420               	retlw	32	;' '
   704  101C  3420               	retlw	32	;' '
   705  101D  3420               	retlw	32	;' '
   706  101E  3420               	retlw	0
   707  101F  3400               psect	stringtext3,class=STRCODE,delta=2,noexec
   708                           global __pstringtext3
   709                           __pstringtext3:
   710  1020                     	
   711                           STR_5:	
   712  1020                     	retlw	83	;'S'
   713  1020  3453               	retlw	101	;'e'
   714  1021  3465               	retlw	116	;'t'
   715  1022  3474               	retlw	32	;' '
   716  1023  3420               	retlw	77	;'M'
   717  1024  344D               	retlw	111	;'o'
   718  1025  346F               	retlw	100	;'d'
   719  1026  3464               	retlw	101	;'e'
   720  1027  3465               	retlw	58	;':'
   721  1028  343A               	retlw	32	;' '
   722  1029  3420               	retlw	32	;' '
   723  102A  3420               	retlw	32	;' '
   724  102B  3420               	retlw	32	;' '
   725  102C  3420               	retlw	32	;' '
   726  102D  3420               	retlw	32	;' '
   727  102E  3420               	retlw	0
   728  102F  3400               psect	stringtext4,class=STRCODE,delta=2,noexec
   729                           global __pstringtext4
   730                           __pstringtext4:
   731  1030                     	
   732                           STR_4:	
   733  1030                     	retlw	83	;'S'
   734  1030  3453               	retlw	101	;'e'
   735  1031  3465               	retlw	116	;'t'
   736  1032  3474               	retlw	32	;' '
   737  1033  3420               	retlw	84	;'T'
   738  1034  3454               	retlw	101	;'e'
   739  1035  3465               	retlw	109	;'m'
   740  1036  346D               	retlw	112	;'p'
   741  1037  3470               	retlw	58	;':'
   742  1038  343A               	retlw	32	;' '
   743  1039  3420               	retlw	32	;' '
   744  103A  3420               	retlw	32	;' '
   745  103B  3420               	retlw	32	;' '
   746  103C  3420               	retlw	32	;' '
   747  103D  3420               	retlw	32	;' '
   748  103E  3420               	retlw	0
   749  103F  3400               psect	stringtext5,class=STRCODE,delta=2,noexec
   750                           global __pstringtext5
   751                           __pstringtext5:
   752  1040                     	
   753                           STR_1:	
   754  1040                     	retlw	72	;'H'
   755  1040  3448               	retlw	117	;'u'
   756  1041  3475               	retlw	109	;'m'
   757  1042  346D               	retlw	105	;'i'
   758  1043  3469               	retlw	100	;'d'
   759  1044  3464               	retlw	105	;'i'
   760  1045  3469               	retlw	116	;'t'
   761  1046  3474               	retlw	121	;'y'
   762  1047  3479               	retlw	32	;' '
   763  1048  3420               	retlw	58	;':'
   764  1049  343A               	retlw	32	;' '
   765  104A  3420               	retlw	0
   766  104B  3400               psect	stringtext6,class=STRCODE,delta=2,noexec
   767                           global __pstringtext6
   768                           __pstringtext6:
   769  104C                     	
   770                           STR_2:	
   771  104C                     	retlw	10
   772  104C  340A               	retlw	84	;'T'
   773  104D  3454               	retlw	101	;'e'
   774  104E  3465               	retlw	109	;'m'
   775  104F  346D               	retlw	112	;'p'
   776  1050  3470               	retlw	32	;' '
   777  1051  3420               	retlw	58	;':'
   778  1052  343A               	retlw	32	;' '
   779  1053  3420               	retlw	0
   780  1054  3400               psect	stringtext7,class=STRCODE,delta=2,noexec
   781                           global __pstringtext7
   782                           __pstringtext7:
   783  1055                     	
   784                           STR_8:	
   785  1055                     	retlw	44	;','
   786  1055  342C               	retlw	66	;'B'
   787  1056  3442               	retlw	67	;'C'
   788  1057  3443               	retlw	76	;'L'
   789  1058  344C               	retlw	73	;'I'
   790  1059  3449               	retlw	70	;'F'
   791  105A  3446               	retlw	0
   792  105B  3400               psect	stringtext8,class=STRCODE,delta=2,noexec
   793                           global __pstringtext8
   794                           __pstringtext8:
   795  105C                     	
   796                           STR_7:	
   797  105C                     	retlw	44	;','
   798  105C  342C               	retlw	78	;'N'
   799  105D  344E               	retlw	56	;'8'
   800  105E  3438               	retlw	0
   801  105F  3400               psect	stringtext9,class=STRCODE,delta=2,noexec
   802                           global __pstringtext9
   803                           __pstringtext9:
   804  0000                     ; #config settings
   805                           global __CFG_FOSC$INTOSC
   806                           __CFG_FOSC$INTOSC equ 0x0
   807  0000                     global __CFG_WDTE$OFF
   808                           __CFG_WDTE$OFF equ 0x0
   809  0000                     global __CFG_PWRTE$ON
   810                           __CFG_PWRTE$ON equ 0x0
   811  0000                     global __CFG_MCLRE$OFF
   812                           __CFG_MCLRE$OFF equ 0x0
   813  0000                     global __CFG_CP$OFF
   814                           __CFG_CP$OFF equ 0x0
   815  0000                     global __CFG_BOREN$ON
   816                           __CFG_BOREN$ON equ 0x0
   817  0000                     global __CFG_CLKOUTEN$ON
   818                           __CFG_CLKOUTEN$ON equ 0x0
   819  0000                     global __CFG_IESO$OFF
   820                           __CFG_IESO$OFF equ 0x0
   821  0000                     global __CFG_FCMEN$OFF
   822                           __CFG_FCMEN$OFF equ 0x0
   823  0000                     global __CFG_WRT$OFF
   824                           __CFG_WRT$OFF equ 0x0
   825  0000                     global __CFG_VCAPEN$OFF
   826                           __CFG_VCAPEN$OFF equ 0x0
   827  0000                     global __CFG_STVREN$OFF
   828                           __CFG_STVREN$OFF equ 0x0
   829  0000                     global __CFG_BORV$LO
   830                           __CFG_BORV$LO equ 0x0
   831  0000                     global __CFG_LPBOR$OFF
   832                           __CFG_LPBOR$OFF equ 0x0
   833  0000                     global __CFG_LVP$OFF
   834                           __CFG_LVP$OFF equ 0x0
   835  0000                     	file	"C:\Users\dell\AppData\Local\Temp\s7r8."
   836                           	line	#
   837                           psect cinit,class=CODE,delta=2
   838                           global start_initialization
   839                           start_initialization:
   840  00DB                     
   841                           global __initialization
   842                           __initialization:
   843  00DB                     psect	bssBANK0,class=BANK0,space=1,noexec
   844                           global __pbssBANK0
   845                           __pbssBANK0:
   846  0042                     _wHexTemp:
   847  0042                            ds      20
   848  0042                     
   849                           _test:
   850  0056                            ds      2
   851  0056                     
   852                           _wCounter2:
   853  0058                            ds      1
   854  0058                     
   855                           _wI2CTxSendPos:
   856  0059                            ds      1
   857  0059                     
   858                           _wI2CRxBufferSize:
   859  005A                            ds      1
   860  005A                     
   861                           _wI2CTxBufferSize:
   862  005B                            ds      1
   863  005B                     
   864                           _wReceptionBufferPosition:
   865  005C                            ds      1
   866  005C                     
   867                           _mWritingPosition:
   868  005D                            ds      1
   869  005D                     
   870                           _mCursorDisplayShiftReg:
   871  005E                            ds      1
   872  005E                     
   873                           _mDisplayOnOffReg:
   874  005F                            ds      1
   875  005F                     
   876                           psect	bssBANK1,class=BANK1,space=1,noexec
   877                           global __pbssBANK1
   878                           __pbssBANK1:
   879  00A0                     _wI2CTxBuffer:
   880  00A0                            ds      20
   881  00A0                     
   882                           psect	dataBANK1,class=BANK1,space=1,noexec
   883                           global __pdataBANK1
   884                           __pdataBANK1:
   885  00C4                     	file	"161518_temp_main.c"
   886                           	line	267
   887                           main@F2238:
   888  00C4                            ds      4
   889  00C4                     
   890                           psect	bssBANK2,class=BANK2,space=1,noexec
   891                           global __pbssBANK2
   892                           __pbssBANK2:
   893  0152                     _wReceptionBuffer:
   894  0152                            ds      30
   895  0152                     
   896                           psect	bssBANK3,class=BANK3,space=1,noexec
   897                           global __pbssBANK3
   898                           __pbssBANK3:
   899  01A0                     _wInterruptText:
   900  01A0                            ds      75
   901  01A0                     
   902                           	file	"C:\Users\dell\AppData\Local\Temp\s7r8."
   903                           	line	#
   904                           ; Initialize objects allocated to BANK1
   905                           	global __pidataBANK1,__pdataBANK1
   906                           psect cinit,class=CODE,delta=2,merge=1
   907                           	movlb 1	; select bank1
   908  00DB  0021               	fcall	__pidataBANK1+0		;fetch initializer
   909  00DC  318E  2611  3180   	movwf	__pdataBANK1+0&07fh		
   910  00DF  00C4               	fcall	__pidataBANK1+1		;fetch initializer
   911  00E0  318E  2612  3180   	movwf	__pdataBANK1+1&07fh		
   912  00E3  00C5               	fcall	__pidataBANK1+2		;fetch initializer
   913  00E4  318E  2613  3180   	movwf	__pdataBANK1+2&07fh		
   914  00E7  00C6               	fcall	__pidataBANK1+3		;fetch initializer
   915  00E8  318E  2614  3180   	movwf	__pdataBANK1+3&07fh		
   916  00EB  00C7               	line	#
   917                           psect clrtext,class=CODE,delta=2
   918                           global clear_ram0
   919                           ;	Called with FSR0 containing the base address, and
   920                           ;	WREG with the size to clear
   921                           clear_ram0:
   922  0E26                     	clrwdt			;clear the watchdog before getting into this loop
   923  0E26  0064               clrloop0:
   924  0E27                     	clrf	indf0		;clear RAM location pointed to by FSR
   925  0E27  0180               	addfsr	0,1
   926  0E28  3101               	decfsz wreg		;Have we reached the end of clearing yet?
   927  0E29  0B89               	goto clrloop0	;have we reached the end yet?
   928  0E2A  2E27               	retlw	0		;all done for this memory range, return
   929  0E2B  3400               ; Clear objects allocated to BANK0
   930                           psect cinit,class=CODE,delta=2,merge=1
   931                           	global __pbssBANK0
   932                           	movlw	low(__pbssBANK0)
   933  00EC  3042               	movwf	fsr0l
   934  00ED  0084               	movlw	high(__pbssBANK0)
   935  00EE  3000               	movwf	fsr0h
   936  00EF  0085               	movlw	01Eh
   937  00F0  301E               	fcall	clear_ram0
   938  00F1  318E  2626  3180   ; Clear objects allocated to BANK1
   939                           psect cinit,class=CODE,delta=2,merge=1
   940                           	global __pbssBANK1
   941                           	movlw	low(__pbssBANK1)
   942  00F4  30A0               	movwf	fsr0l
   943  00F5  0084               	movlw	high(__pbssBANK1)
   944  00F6  3000               	movwf	fsr0h
   945  00F7  0085               	movlw	014h
   946  00F8  3014               	fcall	clear_ram0
   947  00F9  318E  2626  3180   ; Clear objects allocated to BANK2
   948                           psect cinit,class=CODE,delta=2,merge=1
   949                           	global __pbssBANK2
   950                           	movlw	low(__pbssBANK2)
   951  00FC  3052               	movwf	fsr0l
   952  00FD  0084               	movlw	high(__pbssBANK2)
   953  00FE  3001               	movwf	fsr0h
   954  00FF  0085               	movlw	01Eh
   955  0100  301E               	fcall	clear_ram0
   956  0101  318E  2626  3180   ; Clear objects allocated to BANK3
   957                           psect cinit,class=CODE,delta=2,merge=1
   958                           	global __pbssBANK3
   959                           	movlw	low(__pbssBANK3)
   960  0104  30A0               	movwf	fsr0l
   961  0105  0084               	movlw	high(__pbssBANK3)
   962  0106  3001               	movwf	fsr0h
   963  0107  0085               	movlw	04Bh
   964  0108  304B               	fcall	clear_ram0
   965  0109  318E  2626  3180   psect cinit,class=CODE,delta=2,merge=1
   966                           global end_of_initialization,__end_of__initialization
   967                           
   968                           ;End of C runtime variable initialization code
   969                           
   970                           end_of_initialization:
   971  010C                     __end_of__initialization:
   972  010C                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
   973  010C  107E               movlb 0
   974  010D  0020               ljmp _main	;jump to C main() function
   975  010E  3181  2910         psect	cstackBANK2,class=BANK2,space=1,noexec
   976                           global __pcstackBANK2
   977                           __pcstackBANK2:
   978  0120                     	global	main@wReadout
   979                           main@wReadout:	; 20 bytes @ 0x0
   980  0120                     	ds	20
   981  0120                     	global	main@wTemp
   982                           main@wTemp:	; 2 bytes @ 0x14
   983  0134                     	ds	2
   984  0134                     	global	main@wConv
   985                           main@wConv:	; 4 bytes @ 0x16
   986  0136                     	ds	4
   987  0136                     	global	main@wHumidityPrev
   988                           main@wHumidityPrev:	; 2 bytes @ 0x1A
   989  013A                     	ds	2
   990  013A                     	global	main@wMenuPrev
   991                           main@wMenuPrev:	; 1 bytes @ 0x1C
   992  013C                     	ds	1
   993  013C                     	global	main@wIterationCounter
   994                           main@wIterationCounter:	; 2 bytes @ 0x1D
   995  013D                     	ds	2
   996  013D                     	global	main@wTempUpdate
   997                           main@wTempUpdate:	; 1 bytes @ 0x1F
   998  013F                     	ds	1
   999  013F                     	global	main@wTemperature
  1000                           main@wTemperature:	; 2 bytes @ 0x20
  1001  0140                     	ds	2
  1002  0140                     	global	main@wTemperaturePrev
  1003                           main@wTemperaturePrev:	; 2 bytes @ 0x22
  1004  0142                     	ds	2
  1005  0142                     	global	main@wEnterBottonPressed
  1006                           main@wEnterBottonPressed:	; 1 bytes @ 0x24
  1007  0144                     	ds	1
  1008  0144                     	global	main@wHumidity
  1009                           main@wHumidity:	; 2 bytes @ 0x25
  1010  0145                     	ds	2
  1011  0145                     	global	main@wDebounceEnter
  1012                           main@wDebounceEnter:	; 2 bytes @ 0x27
  1013  0147                     	ds	2
  1014  0147                     	global	main@wDebounceUp
  1015                           main@wDebounceUp:	; 2 bytes @ 0x29
  1016  0149                     	ds	2
  1017  0149                     	global	main@wDebounceDown
  1018                           main@wDebounceDown:	; 2 bytes @ 0x2B
  1019  014B                     	ds	2
  1020  014B                     	global	main@wCounter
  1021                           main@wCounter:	; 2 bytes @ 0x2D
  1022  014D                     	ds	2
  1023  014D                     	global	main@wUpBottonPressed
  1024                           main@wUpBottonPressed:	; 1 bytes @ 0x2F
  1025  014F                     	ds	1
  1026  014F                     	global	main@wDownBottonPressed
  1027                           main@wDownBottonPressed:	; 1 bytes @ 0x30
  1028  0150                     	ds	1
  1029  0150                     	global	main@wMenu
  1030                           main@wMenu:	; 1 bytes @ 0x31
  1031  0151                     	ds	1
  1032  0151                     psect	cstackBANK1,class=BANK1,space=1,noexec
  1033                           global __pcstackBANK1
  1034                           __pcstackBANK1:
  1035  00B4                     	global	lcdWriteText@wCharReadingPos
  1036                           lcdWriteText@wCharReadingPos:	; 1 bytes @ 0x0
  1037  00B4                     	global	strcat@dest
  1038                           strcat@dest:	; 1 bytes @ 0x0
  1039  00B4                     	ds	1
  1040  00B4                     ?_Add_Trace:	; 1 bytes @ 0x1
  1041  00B5                     ??_PrintLog:	; 1 bytes @ 0x1
  1042  00B5                     	global	Add_Trace@iSizeOfoText
  1043                           Add_Trace@iSizeOfoText:	; 1 bytes @ 0x1
  1044  00B5                     	ds	1
  1045  00B5                     	global	Add_Trace@iText
  1046                           Add_Trace@iText:	; 2 bytes @ 0x2
  1047  00B6                     	ds	1
  1048  00B6                     	global	PrintLog@wInterruptTextLen
  1049                           PrintLog@wInterruptTextLen:	; 1 bytes @ 0x3
  1050  00B7                     	ds	1
  1051  00B7                     ??_Add_Trace:	; 1 bytes @ 0x4
  1052  00B8                     	global	PrintLog@iText
  1053                           PrintLog@iText:	; 1 bytes @ 0x4
  1054  00B8                     	ds	6
  1055  00B8                     	global	Add_Trace@oText
  1056                           Add_Trace@oText:	; 1 bytes @ 0xA
  1057  00BE                     	ds	1
  1058  00BE                     ??_main:	; 1 bytes @ 0xB
  1059  00BF                     	ds	5
  1060  00BF                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  1061                           global __pcstackCOMMON
  1062                           __pcstackCOMMON:
  1063  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1064  0070                     ?_clearDisplay:	; 1 bytes @ 0x0
  1065  0070                     ?_powerOnLcd:	; 1 bytes @ 0x0
  1066  0070                     ?_setCursorOff:	; 1 bytes @ 0x0
  1067  0070                     ?_moveCursorToHome:	; 1 bytes @ 0x0
  1068  0070                     ?_setNotBlinkingCursor:	; 1 bytes @ 0x0
  1069  0070                     ?_setData:	; 1 bytes @ 0x0
  1070  0070                     ?_writeInsChk:	; 1 bytes @ 0x0
  1071  0070                     ?_writeTxtChk:	; 1 bytes @ 0x0
  1072  0070                     ?_SetToSendDataToLCD:	; 1 bytes @ 0x0
  1073  0070                     ?_waitLCDBusy:	; 1 bytes @ 0x0
  1074  0070                     ?_writeInsNoChk:	; 1 bytes @ 0x0
  1075  0070                     ?_SetToGetTemp:	; 1 bytes @ 0x0
  1076  0070                     ?_GetTemp:	; 1 bytes @ 0x0
  1077  0070                     ?_WakeTemp:	; 1 bytes @ 0x0
  1078  0070                     ?_PrintLog:	; 1 bytes @ 0x0
  1079  0070                     ?_main:	; 1 bytes @ 0x0
  1080  0070                     ?_myint:	; 1 bytes @ 0x0
  1081  0070                     ?_SetToReadDataFromLCD:	; 1 bytes @ 0x0
  1082  0070                     	global	?i1_strlen
  1083                           ?i1_strlen:	; 2 bytes @ 0x0
  1084  0070                     	global	i1strlen@s
  1085                           i1strlen@s:	; 2 bytes @ 0x0
  1086  0070                     	ds	2
  1087  0070                     ??i1_strlen:	; 1 bytes @ 0x2
  1088  0072                     	ds	2
  1089  0072                     	global	i1strlen@a
  1090                           i1strlen@a:	; 2 bytes @ 0x4
  1091  0074                     	ds	2
  1092  0074                     ?i1_strcpy:	; 1 bytes @ 0x6
  1093  0076                     	global	i1strcpy@src
  1094                           i1strcpy@src:	; 2 bytes @ 0x6
  1095  0076                     	ds	2
  1096  0076                     ??i1_strcpy:	; 1 bytes @ 0x8
  1097  0078                     	ds	2
  1098  0078                     	global	i1strcpy@s
  1099                           i1strcpy@s:	; 2 bytes @ 0xA
  1100  007A                     	ds	2
  1101  007A                     	global	i1strcpy@dest
  1102                           i1strcpy@dest:	; 1 bytes @ 0xC
  1103  007C                     	ds	1
  1104  007C                     	global	i1strcpy@d
  1105                           i1strcpy@d:	; 1 bytes @ 0xD
  1106  007D                     	ds	1
  1107  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1108                           global __pcstackBANK0
  1109                           __pcstackBANK0:
  1110  0020                     ?i1_strcat:	; 1 bytes @ 0x0
  1111  0020                     	global	i1strcat@src
  1112                           i1strcat@src:	; 2 bytes @ 0x0
  1113  0020                     	ds	2
  1114  0020                     ??i1_strcat:	; 1 bytes @ 0x2
  1115  0022                     	ds	2
  1116  0022                     	global	i1strcat@dest
  1117                           i1strcat@dest:	; 1 bytes @ 0x4
  1118  0024                     	ds	1
  1119  0024                     ?i1_Add_Trace:	; 1 bytes @ 0x5
  1120  0025                     	global	i1Add_Trace@iSizeOfoText
  1121                           i1Add_Trace@iSizeOfoText:	; 1 bytes @ 0x5
  1122  0025                     	ds	1
  1123  0025                     	global	i1Add_Trace@iText
  1124                           i1Add_Trace@iText:	; 2 bytes @ 0x6
  1125  0026                     	ds	2
  1126  0026                     ??i1_Add_Trace:	; 1 bytes @ 0x8
  1127  0028                     	ds	6
  1128  0028                     	global	i1Add_Trace@oText
  1129                           i1Add_Trace@oText:	; 1 bytes @ 0xE
  1130  002E                     	ds	1
  1131  002E                     ??_myint:	; 1 bytes @ 0xF
  1132  002F                     	ds	1
  1133  002F                     ??_setData:	; 1 bytes @ 0x10
  1134  0030                     ??_SetToSendDataToLCD:	; 1 bytes @ 0x10
  1135  0030                     ??_waitLCDBusy:	; 1 bytes @ 0x10
  1136  0030                     ??_SetToGetTemp:	; 1 bytes @ 0x10
  1137  0030                     ??_WakeTemp:	; 1 bytes @ 0x10
  1138  0030                     ?_Debounce:	; 1 bytes @ 0x10
  1139  0030                     ??_SetToReadDataFromLCD:	; 1 bytes @ 0x10
  1140  0030                     	global	?_strlen
  1141                           ?_strlen:	; 2 bytes @ 0x10
  1142  0030                     ?_memset:	; 2 bytes @ 0x10
  1143  0030                     	global	?___lwdiv
  1144                           ?___lwdiv:	; 2 bytes @ 0x10
  1145  0030                     	global	?___lwmod
  1146                           ?___lwmod:	; 2 bytes @ 0x10
  1147  0030                     	global	Debounce@ioTimer
  1148                           Debounce@ioTimer:	; 1 bytes @ 0x10
  1149  0030                     	global	___lwdiv@divisor
  1150                           ___lwdiv@divisor:	; 2 bytes @ 0x10
  1151  0030                     	global	___lwmod@divisor
  1152                           ___lwmod@divisor:	; 2 bytes @ 0x10
  1153  0030                     	global	memset@dest
  1154                           memset@dest:	; 2 bytes @ 0x10
  1155  0030                     	global	strlen@s
  1156                           strlen@s:	; 2 bytes @ 0x10
  1157  0030                     	ds	1
  1158  0030                     	global	Debounce@swPressed
  1159                           Debounce@swPressed:	; 1 bytes @ 0x11
  1160  0031                     	ds	1
  1161  0031                     ??_strlen:	; 1 bytes @ 0x12
  1162  0032                     ??_Debounce:	; 1 bytes @ 0x12
  1163  0032                     	global	setData@iValue
  1164                           setData@iValue:	; 1 bytes @ 0x12
  1165  0032                     	global	___lwdiv@dividend
  1166                           ___lwdiv@dividend:	; 2 bytes @ 0x12
  1167  0032                     	global	___lwmod@dividend
  1168                           ___lwmod@dividend:	; 2 bytes @ 0x12
  1169  0032                     	global	memset@c
  1170                           memset@c:	; 2 bytes @ 0x12
  1171  0032                     	ds	1
  1172  0032                     ??_writeInsNoChk:	; 1 bytes @ 0x13
  1173  0033                     	global	waitLCDBusy@busyFlag
  1174                           waitLCDBusy@busyFlag:	; 2 bytes @ 0x13
  1175  0033                     	ds	1
  1176  0033                     ??___lwdiv:	; 1 bytes @ 0x14
  1177  0034                     ??___lwmod:	; 1 bytes @ 0x14
  1178  0034                     	global	Debounce@iSwitch
  1179                           Debounce@iSwitch:	; 1 bytes @ 0x14
  1180  0034                     	global	writeInsNoChk@iOpCode
  1181                           writeInsNoChk@iOpCode:	; 1 bytes @ 0x14
  1182  0034                     	global	memset@n
  1183                           memset@n:	; 2 bytes @ 0x14
  1184  0034                     	global	strlen@a
  1185                           strlen@a:	; 2 bytes @ 0x14
  1186  0034                     	ds	1
  1187  0034                     ?_setCursorPosition:	; 1 bytes @ 0x15
  1188  0035                     ??_writeInsChk:	; 1 bytes @ 0x15
  1189  0035                     	global	writeInsChk@iOpCode
  1190                           writeInsChk@iOpCode:	; 1 bytes @ 0x15
  1191  0035                     	global	setCursorPosition@iPosition
  1192                           setCursorPosition@iPosition:	; 1 bytes @ 0x15
  1193  0035                     	global	___lwdiv@counter
  1194                           ___lwdiv@counter:	; 1 bytes @ 0x15
  1195  0035                     	global	___lwmod@counter
  1196                           ___lwmod@counter:	; 1 bytes @ 0x15
  1197  0035                     	ds	1
  1198  0035                     ??_memset:	; 1 bytes @ 0x16
  1199  0036                     ??_initLCD:	; 1 bytes @ 0x16
  1200  0036                     ??_clearDisplay:	; 1 bytes @ 0x16
  1201  0036                     ??_powerOnLcd:	; 1 bytes @ 0x16
  1202  0036                     ??_setCursorOff:	; 1 bytes @ 0x16
  1203  0036                     ??_moveCursorToHome:	; 1 bytes @ 0x16
  1204  0036                     ??_setNotBlinkingCursor:	; 1 bytes @ 0x16
  1205  0036                     ??_setCursorPosition:	; 1 bytes @ 0x16
  1206  0036                     ?_strcpy:	; 1 bytes @ 0x16
  1207  0036                     	global	___lwdiv@quotient
  1208                           ___lwdiv@quotient:	; 2 bytes @ 0x16
  1209  0036                     	global	strcpy@src
  1210                           strcpy@src:	; 2 bytes @ 0x16
  1211  0036                     	ds	2
  1212  0036                     ??_strcpy:	; 1 bytes @ 0x18
  1213  0038                     ?_printEM1812:	; 1 bytes @ 0x18
  1214  0038                     	global	setCursorPosition@iLine
  1215                           setCursorPosition@iLine:	; 1 bytes @ 0x18
  1216  0038                     	global	printEM1812@wVariable
  1217                           printEM1812@wVariable:	; 2 bytes @ 0x18
  1218  0038                     	ds	1
  1219  0038                     	global	setCursorPosition@wLCDIndex
  1220                           setCursorPosition@wLCDIndex:	; 1 bytes @ 0x19
  1221  0039                     	ds	1
  1222  0039                     ??_writeTxtChk:	; 1 bytes @ 0x1A
  1223  003A                     	global	printEM1812@oTextOut
  1224                           printEM1812@oTextOut:	; 1 bytes @ 0x1A
  1225  003A                     	global	memset@k
  1226                           memset@k:	; 2 bytes @ 0x1A
  1227  003A                     	global	strcpy@s
  1228                           strcpy@s:	; 2 bytes @ 0x1A
  1229  003A                     	ds	1
  1230  003A                     ??_printEM1812:	; 1 bytes @ 0x1B
  1231  003B                     	ds	1
  1232  003B                     	global	printEM1812@wTen
  1233                           printEM1812@wTen:	; 1 bytes @ 0x1C
  1234  003C                     	global	writeTxtChk@iOpCode
  1235                           writeTxtChk@iOpCode:	; 1 bytes @ 0x1C
  1236  003C                     	global	strcpy@d
  1237                           strcpy@d:	; 1 bytes @ 0x1C
  1238  003C                     	global	memset@s
  1239                           memset@s:	; 2 bytes @ 0x1C
  1240  003C                     	ds	1
  1241  003C                     ?_lcdWriteText:	; 1 bytes @ 0x1D
  1242  003D                     	global	printEM1812@wUnity
  1243                           printEM1812@wUnity:	; 1 bytes @ 0x1D
  1244  003D                     	global	strcpy@dest
  1245                           strcpy@dest:	; 1 bytes @ 0x1D
  1246  003D                     	global	lcdWriteText@iText
  1247                           lcdWriteText@iText:	; 2 bytes @ 0x1D
  1248  003D                     	ds	1
  1249  003D                     ?_strcat:	; 1 bytes @ 0x1E
  1250  003E                     ??_GetTemp:	; 1 bytes @ 0x1E
  1251  003E                     	global	printEM1812@wDecimal
  1252                           printEM1812@wDecimal:	; 1 bytes @ 0x1E
  1253  003E                     	global	strcat@src
  1254                           strcat@src:	; 2 bytes @ 0x1E
  1255  003E                     	ds	1
  1256  003E                     ??_lcdWriteText:	; 1 bytes @ 0x1F
  1257  003F                     	ds	1
  1258  003F                     ??_strcat:	; 1 bytes @ 0x20
  1259  0040                     	ds	2
  1260  0040                     ;!
  1261                           ;!Data Sizes:
  1262                           ;!    Strings     96
  1263                           ;!    Constant    0
  1264                           ;!    Data        4
  1265                           ;!    BSS         155
  1266                           ;!    Persistent  0
  1267                           ;!    Stack       0
  1268                           ;!
  1269                           ;!Auto Spaces:
  1270                           ;!    Space          Size  Autos    Used
  1271                           ;!    COMMON           14     14      14
  1272                           ;!    BANK0            80     34      64
  1273                           ;!    BANK1            80     16      40
  1274                           ;!    BANK2            80     50      80
  1275                           ;!    BANK3            80      0      75
  1276                           ;!    BANK4            80      0       0
  1277                           ;!    BANK5            80      0       0
  1278                           ;!    BANK6            80      0       0
  1279                           ;!    BANK7            80      0       0
  1280                           ;!    BANK8            80      0       0
  1281                           ;!    BANK9            80      0       0
  1282                           ;!    BANK10           80      0       0
  1283                           ;!    BANK11           80      0       0
  1284                           ;!    BANK12           48      0       0
  1285                           
  1286                           ;!
  1287                           ;!Pointer List with Targets:
  1288                           ;!
  1289                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 75
  1290                           ;!		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1291                           ;!		 -> main@wReadout(BANK2[20]), wInterruptText(BANK3[75]), 
  1292                           ;!
  1293                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 75
  1294                           ;!		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1295                           ;!		 -> main@wReadout(BANK2[20]), wInterruptText(BANK3[75]), 
  1296                           ;!
  1297                           ;!    strcpy@dest	PTR unsigned char  size(1) Largest target is 75
  1298                           ;!		 -> wInterruptText(BANK3[75]), 
  1299                           ;!
  1300                           ;!    strcpy@d	PTR unsigned char  size(1) Largest target is 75
  1301                           ;!		 -> wInterruptText(BANK3[75]), 
  1302                           ;!
  1303                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
  1304                           ;!		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1305                           ;!		 -> main@wReadout(BANK2[20]), 
  1306                           ;!
  1307                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
  1308                           ;!		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1309                           ;!		 -> main@wReadout(BANK2[20]), 
  1310                           ;!
  1311                           ;!    sp__strcpy	PTR unsigned char  size(1) Largest target is 75
  1312                           ;!		 -> wInterruptText(BANK3[75]), 
  1313                           ;!
  1314                           ;!    strcat@src	PTR const unsigned char  size(2) Largest target is 20
  1315                           ;!		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1316                           ;!		 -> main@wReadout(BANK2[20]), 
  1317                           ;!
  1318                           ;!    strcat@dest	PTR unsigned char  size(1) Largest target is 75
  1319                           ;!		 -> wInterruptText(BANK3[75]), 
  1320                           ;!
  1321                           ;!    memset@dest	PTR void  size(2) Largest target is 75
  1322                           ;!		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]),
                                  
  1323                           ;!
  1324                           ;!    memset@s	PTR unsigned char  size(2) Largest target is 75
  1325                           ;!		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]),
                                  
  1326                           ;!
  1327                           ;!    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
  1328                           ;!		 -> STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[16]), STR_3(CODE[16]), 
  1329                           ;!		 -> main@wConv(BANK2[4]), wInterruptText(BANK3[75]), 
  1330                           ;!
  1331                           ;!    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
  1332                           ;!		 -> main@wEnterBottonPressed(BANK2[1]), main@wDownBottonPressed(BANK2[1]), main@wUpB
                                 ottonPressed(BANK2[1]), 
  1333                           ;!
  1334                           ;!    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
  1335                           ;!		 -> main@wDebounceDown(BANK2[2]), main@wDebounceUp(BANK2[2]), main@wDebounceEnter(BA
                                 NK2[2]), 
  1336                           ;!
  1337                           ;!    printEM1812@oTextOut	PTR unsigned char  size(1) Largest target is 20
  1338                           ;!		 -> main@wReadout(BANK2[20]), 
  1339                           ;!
  1340                           ;!    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
  1341                           ;!		 -> wInterruptText(BANK3[75]), 
  1342                           ;!
  1343                           ;!    sp__memset	PTR void  size(2) Largest target is 75
  1344                           ;!		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]),
                                  
  1345                           ;!
  1346                           ;!    sp__strcat	PTR unsigned char  size(1) Largest target is 75
  1347                           ;!		 -> wInterruptText(BANK3[75]), 
  1348                           ;!
  1349                           ;!    Add_Trace@iText	PTR unsigned char  size(2) Largest target is 20
  1350                           ;!		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
  1351                           ;!		 -> main@wReadout(BANK2[20]), 
  1352                           ;!
  1353                           ;!    Add_Trace@oText	PTR unsigned char  size(1) Largest target is 75
  1354                           ;!		 -> wInterruptText(BANK3[75]), 
  1355                           ;!
  1356                           
  1357                           
  1358                           ;!
  1359                           ;!Critical Paths under _main in COMMON
  1360                           ;!
  1361                           ;!    None.
  1362                           ;!
  1363                           ;!Critical Paths under _myint in COMMON
  1364                           ;!
  1365                           ;!    i1_strcat->i1_strcpy
  1366                           ;!    i1_strcpy->i1_strlen
  1367                           ;!
  1368                           ;!Critical Paths under _main in BANK0
  1369                           ;!
  1370                           ;!    _main->_lcdWriteText
  1371                           ;!    _setNotBlinkingCursor->_writeInsChk
  1372                           ;!    _setCursorOff->_writeInsChk
  1373                           ;!    _printEM1812->___lwdiv
  1374                           ;!    _powerOnLcd->_writeInsChk
  1375                           ;!    _moveCursorToHome->_writeInsChk
  1376                           ;!    _initLCD->_writeInsChk
  1377                           ;!    _clearDisplay->_writeInsChk
  1378                           ;!    _writeInsChk->_waitLCDBusy
  1379                           ;!    _writeInsChk->_writeInsNoChk
  1380                           ;!    _writeInsNoChk->_setData
  1381                           ;!    _PrintLog->_lcdWriteText
  1382                           ;!    _lcdWriteText->_writeTxtChk
  1383                           ;!    _writeTxtChk->_setCursorPosition
  1384                           ;!    _setCursorPosition->_waitLCDBusy
  1385                           ;!    _GetTemp->_memset
  1386                           ;!    _Add_Trace->_strcat
  1387                           ;!    _strcat->_strcpy
  1388                           ;!    _strcpy->_strlen
  1389                           ;!
  1390                           ;!Critical Paths under _myint in BANK0
  1391                           ;!
  1392                           ;!    _myint->i1_Add_Trace
  1393                           ;!    i1_Add_Trace->i1_strcat
  1394                           ;!
  1395                           ;!Critical Paths under _main in BANK1
  1396                           ;!
  1397                           ;!    _main->_Add_Trace
  1398                           ;!    _PrintLog->_lcdWriteText
  1399                           ;!    _Add_Trace->_strcat
  1400                           ;!
  1401                           ;!Critical Paths under _myint in BANK1
  1402                           ;!
  1403                           ;!    None.
  1404                           ;!
  1405                           ;!Critical Paths under _main in BANK2
  1406                           ;!
  1407                           ;!    None.
  1408                           ;!
  1409                           ;!Critical Paths under _myint in BANK2
  1410                           ;!
  1411                           ;!    None.
  1412                           ;!
  1413                           ;!Critical Paths under _main in BANK3
  1414                           ;!
  1415                           ;!    None.
  1416                           ;!
  1417                           ;!Critical Paths under _myint in BANK3
  1418                           ;!
  1419                           ;!    None.
  1420                           ;!
  1421                           ;!Critical Paths under _main in BANK4
  1422                           ;!
  1423                           ;!    None.
  1424                           ;!
  1425                           ;!Critical Paths under _myint in BANK4
  1426                           ;!
  1427                           ;!    None.
  1428                           ;!
  1429                           ;!Critical Paths under _main in BANK5
  1430                           ;!
  1431                           ;!    None.
  1432                           ;!
  1433                           ;!Critical Paths under _myint in BANK5
  1434                           ;!
  1435                           ;!    None.
  1436                           ;!
  1437                           ;!Critical Paths under _main in BANK6
  1438                           ;!
  1439                           ;!    None.
  1440                           ;!
  1441                           ;!Critical Paths under _myint in BANK6
  1442                           ;!
  1443                           ;!    None.
  1444                           ;!
  1445                           ;!Critical Paths under _main in BANK7
  1446                           ;!
  1447                           ;!    None.
  1448                           ;!
  1449                           ;!Critical Paths under _myint in BANK7
  1450                           ;!
  1451                           ;!    None.
  1452                           ;!
  1453                           ;!Critical Paths under _main in BANK8
  1454                           ;!
  1455                           ;!    None.
  1456                           ;!
  1457                           ;!Critical Paths under _myint in BANK8
  1458                           ;!
  1459                           ;!    None.
  1460                           ;!
  1461                           ;!Critical Paths under _main in BANK9
  1462                           ;!
  1463                           ;!    None.
  1464                           ;!
  1465                           ;!Critical Paths under _myint in BANK9
  1466                           ;!
  1467                           ;!    None.
  1468                           ;!
  1469                           ;!Critical Paths under _main in BANK10
  1470                           ;!
  1471                           ;!    None.
  1472                           ;!
  1473                           ;!Critical Paths under _myint in BANK10
  1474                           ;!
  1475                           ;!    None.
  1476                           ;!
  1477                           ;!Critical Paths under _main in BANK11
  1478                           ;!
  1479                           ;!    None.
  1480                           ;!
  1481                           ;!Critical Paths under _myint in BANK11
  1482                           ;!
  1483                           ;!    None.
  1484                           ;!
  1485                           ;!Critical Paths under _main in BANK12
  1486                           ;!
  1487                           ;!    None.
  1488                           ;!
  1489                           ;!Critical Paths under _myint in BANK12
  1490                           ;!
  1491                           ;!    None.
  1492                           
  1493 ;;
  1494 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1495 ;;
  1496                           
  1497                           ;!
  1498                           ;!Call Graph Tables:
  1499                           ;!
  1500                           ;! ---------------------------------------------------------------------------------
  1501                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1502                           ;! ---------------------------------------------------------------------------------
  1503                           ;! (0) _main                                                55    55      0   22245
  1504                           ;!                                             11 BANK1      5     5      0
  1505                           ;!                                              0 BANK2     50    50      0
  1506                           ;!                          _Add_Trace
  1507                           ;!                           _Debounce
  1508                           ;!                            _GetTemp
  1509                           ;!                           _PrintLog
  1510                           ;!                       _SetToGetTemp
  1511                           ;!                           _WakeTemp
  1512                           ;!                       _clearDisplay
  1513                           ;!                            _initLCD
  1514                           ;!                       _lcdWriteText
  1515                           ;!                             _memset
  1516                           ;!                   _moveCursorToHome
  1517                           ;!                         _powerOnLcd
  1518                           ;!                        _printEM1812
  1519                           ;!                       _setCursorOff
  1520                           ;!                  _setCursorPosition
  1521                           ;!               _setNotBlinkingCursor
  1522                           ;! ---------------------------------------------------------------------------------
  1523                           ;! (1) _setNotBlinkingCursor                                 1     1      0     254
  1524                           ;!                                             22 BANK0      1     1      0
  1525                           ;!                        _writeInsChk
  1526                           ;! ---------------------------------------------------------------------------------
  1527                           ;! (1) _setCursorOff                                         1     1      0     254
  1528                           ;!                                             22 BANK0      1     1      0
  1529                           ;!                        _writeInsChk
  1530                           ;! ---------------------------------------------------------------------------------
  1531                           ;! (1) _printEM1812                                         27    24      3    1971
  1532                           ;!                                             24 BANK0      7     4      3
  1533                           ;!                            ___lwdiv
  1534                           ;!                            ___lwmod
  1535                           ;! ---------------------------------------------------------------------------------
  1536                           ;! (2) ___lwmod                                              6     2      4     592
  1537                           ;!                                             16 BANK0      6     2      4
  1538                           ;! ---------------------------------------------------------------------------------
  1539                           ;! (2) ___lwdiv                                              8     4      4     601
  1540                           ;!                                             16 BANK0      8     4      4
  1541                           ;! ---------------------------------------------------------------------------------
  1542                           ;! (1) _powerOnLcd                                           1     1      0     254
  1543                           ;!                                             22 BANK0      1     1      0
  1544                           ;!                        _writeInsChk
  1545                           ;! ---------------------------------------------------------------------------------
  1546                           ;! (1) _moveCursorToHome                                     0     0      0     254
  1547                           ;!                        _writeInsChk
  1548                           ;! ---------------------------------------------------------------------------------
  1549                           ;! (1) _initLCD                                              1     1      0     632
  1550                           ;!                                             22 BANK0      1     1      0
  1551                           ;!                       _clearDisplay
  1552                           ;!                            _setData
  1553                           ;!                        _writeInsChk
  1554                           ;! ---------------------------------------------------------------------------------
  1555                           ;! (2) _clearDisplay                                         0     0      0     254
  1556                           ;!                        _writeInsChk
  1557                           ;! ---------------------------------------------------------------------------------
  1558                           ;! (2) _writeInsChk                                          1     1      0     254
  1559                           ;!                                             21 BANK0      1     1      0
  1560                           ;!                        _waitLCDBusy
  1561                           ;!                      _writeInsNoChk
  1562                           ;! ---------------------------------------------------------------------------------
  1563                           ;! (3) _writeInsNoChk                                        2     2      0     186
  1564                           ;!                                             19 BANK0      2     2      0
  1565                           ;!                 _SetToSendDataToLCD
  1566                           ;!                            _setData
  1567                           ;! ---------------------------------------------------------------------------------
  1568                           ;! (1) _WakeTemp                                             1     1      0       0
  1569                           ;!                                             16 BANK0      1     1      0
  1570                           ;! ---------------------------------------------------------------------------------
  1571                           ;! (1) _SetToGetTemp                                         1     1      0       0
  1572                           ;!                                             16 BANK0      1     1      0
  1573                           ;! ---------------------------------------------------------------------------------
  1574                           ;! (1) _PrintLog                                             4     4      0    5282
  1575                           ;!                                              1 BANK1      4     4      0
  1576                           ;!                       _lcdWriteText
  1577                           ;!                             _memset
  1578                           ;!                             _strlen
  1579                           ;! ---------------------------------------------------------------------------------
  1580                           ;! (1) _lcdWriteText                                         6     4      2    2701
  1581                           ;!                                             29 BANK0      5     3      2
  1582                           ;!                                              0 BANK1      1     1      0
  1583                           ;!                        _writeTxtChk
  1584                           ;! ---------------------------------------------------------------------------------
  1585                           ;! (2) _writeTxtChk                                          3     3      0    2031
  1586                           ;!                                             26 BANK0      3     3      0
  1587                           ;!                 _SetToSendDataToLCD
  1588                           ;!                  _setCursorPosition
  1589                           ;!                            _setData
  1590                           ;!                        _waitLCDBusy
  1591                           ;! ---------------------------------------------------------------------------------
  1592                           ;! (1) _setCursorPosition                                    5     4      1    1777
  1593                           ;!                                             21 BANK0      5     4      1
  1594                           ;!                 _SetToSendDataToLCD
  1595                           ;!                            _setData
  1596                           ;!                        _waitLCDBusy
  1597                           ;! ---------------------------------------------------------------------------------
  1598                           ;! (3) _waitLCDBusy                                          5     5      0      37
  1599                           ;!                                             16 BANK0      5     5      0
  1600                           ;!               _SetToReadDataFromLCD
  1601                           ;! ---------------------------------------------------------------------------------
  1602                           ;! (4) _SetToReadDataFromLCD                                 0     0      0       0
  1603                           ;! ---------------------------------------------------------------------------------
  1604                           ;! (4) _setData                                              3     3      0     124
  1605                           ;!                                             16 BANK0      3     3      0
  1606                           ;! ---------------------------------------------------------------------------------
  1607                           ;! (4) _SetToSendDataToLCD                                   0     0      0       0
  1608                           ;! ---------------------------------------------------------------------------------
  1609                           ;! (1) _GetTemp                                              1     1      0    1897
  1610                           ;!                                             30 BANK0      1     1      0
  1611                           ;!                             _memset
  1612                           ;! ---------------------------------------------------------------------------------
  1613                           ;! (1) _memset                                              14     8      6    1897
  1614                           ;!                                             16 BANK0     14     8      6
  1615                           ;! ---------------------------------------------------------------------------------
  1616                           ;! (1) _Debounce                                             5     3      2     788
  1617                           ;!                                             16 BANK0      5     3      2
  1618                           ;! ---------------------------------------------------------------------------------
  1619                           ;! (1) _Add_Trace                                           10     7      3    2780
  1620                           ;!                                              1 BANK1     10     7      3
  1621                           ;!                             _strcat
  1622                           ;!                             _strlen
  1623                           ;! ---------------------------------------------------------------------------------
  1624                           ;! (2) _strcat                                               5     3      2     979
  1625                           ;!                                             30 BANK0      4     2      2
  1626                           ;!                                              0 BANK1      1     1      0
  1627                           ;!                             _strcpy
  1628                           ;!                             _strlen
  1629                           ;! ---------------------------------------------------------------------------------
  1630                           ;! (2) _strlen                                               6     4      2     490
  1631                           ;!                                             16 BANK0      6     4      2
  1632                           ;! ---------------------------------------------------------------------------------
  1633                           ;! (3) _strcpy                                               8     6      2     263
  1634                           ;!                                             22 BANK0      8     6      2
  1635                           ;!                             _strlen (ARG)
  1636                           ;! ---------------------------------------------------------------------------------
  1637                           ;! Estimated maximum stack depth 4
  1638                           ;! ---------------------------------------------------------------------------------
  1639                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1640                           ;! ---------------------------------------------------------------------------------
  1641                           ;! (7) _myint                                                1     1      0    1072
  1642                           ;!                                             15 BANK0      1     1      0
  1643                           ;!                        i1_Add_Trace
  1644                           ;! ---------------------------------------------------------------------------------
  1645                           ;! (8) i1_Add_Trace                                         10     7      3    1072
  1646                           ;!                                              5 BANK0     10     7      3
  1647                           ;!                           i1_strcat
  1648                           ;!                           i1_strlen
  1649                           ;! ---------------------------------------------------------------------------------
  1650                           ;! (9) i1_strcat                                             5     3      2     542
  1651                           ;!                                              0 BANK0      5     3      2
  1652                           ;!                           i1_strcpy
  1653                           ;!                           i1_strlen
  1654                           ;! ---------------------------------------------------------------------------------
  1655                           ;! (9) i1_strlen                                             6     4      2     235
  1656                           ;!                                              0 COMMON     6     4      2
  1657                           ;! ---------------------------------------------------------------------------------
  1658                           ;! (10) i1_strcpy                                            8     6      2     172
  1659                           ;!                                              6 COMMON     8     6      2
  1660                           ;!                           i1_strlen (ARG)
  1661                           ;! ---------------------------------------------------------------------------------
  1662                           ;! Estimated maximum stack depth 10
  1663                           ;! ---------------------------------------------------------------------------------
  1664                           ;!
  1665                           ;! Call Graph Graphs:
  1666                           ;!
  1667                           ;! _main (ROOT)
  1668                           ;!   _Add_Trace
  1669                           ;!     _strcat
  1670                           ;!       _strcpy
  1671                           ;!         _strlen (ARG)
  1672                           ;!       _strlen
  1673                           ;!     _strlen
  1674                           ;!   _Debounce
  1675                           ;!   _GetTemp
  1676                           ;!     _memset
  1677                           ;!   _PrintLog
  1678                           ;!     _lcdWriteText
  1679                           ;!       _writeTxtChk
  1680                           ;!         _SetToSendDataToLCD
  1681                           ;!         _setCursorPosition
  1682                           ;!           _SetToSendDataToLCD
  1683                           ;!           _setData
  1684                           ;!           _waitLCDBusy
  1685                           ;!             _SetToReadDataFromLCD
  1686                           ;!         _setData
  1687                           ;!         _waitLCDBusy
  1688                           ;!           _SetToReadDataFromLCD
  1689                           ;!     _memset
  1690                           ;!     _strlen
  1691                           ;!   _SetToGetTemp
  1692                           ;!   _WakeTemp
  1693                           ;!   _clearDisplay
  1694                           ;!     _writeInsChk
  1695                           ;!       _waitLCDBusy
  1696                           ;!         _SetToReadDataFromLCD
  1697                           ;!       _writeInsNoChk
  1698                           ;!         _SetToSendDataToLCD
  1699                           ;!         _setData
  1700                           ;!   _initLCD
  1701                           ;!     _clearDisplay
  1702                           ;!       _writeInsChk
  1703                           ;!         _waitLCDBusy
  1704                           ;!           _SetToReadDataFromLCD
  1705                           ;!         _writeInsNoChk
  1706                           ;!           _SetToSendDataToLCD
  1707                           ;!           _setData
  1708                           ;!     _setData
  1709                           ;!     _writeInsChk
  1710                           ;!       _waitLCDBusy
  1711                           ;!         _SetToReadDataFromLCD
  1712                           ;!       _writeInsNoChk
  1713                           ;!         _SetToSendDataToLCD
  1714                           ;!         _setData
  1715                           ;!   _lcdWriteText
  1716                           ;!     _writeTxtChk
  1717                           ;!       _SetToSendDataToLCD
  1718                           ;!       _setCursorPosition
  1719                           ;!         _SetToSendDataToLCD
  1720                           ;!         _setData
  1721                           ;!         _waitLCDBusy
  1722                           ;!           _SetToReadDataFromLCD
  1723                           ;!       _setData
  1724                           ;!       _waitLCDBusy
  1725                           ;!         _SetToReadDataFromLCD
  1726                           ;!   _memset
  1727                           ;!   _moveCursorToHome
  1728                           ;!     _writeInsChk
  1729                           ;!       _waitLCDBusy
  1730                           ;!         _SetToReadDataFromLCD
  1731                           ;!       _writeInsNoChk
  1732                           ;!         _SetToSendDataToLCD
  1733                           ;!         _setData
  1734                           ;!   _powerOnLcd
  1735                           ;!     _writeInsChk
  1736                           ;!       _waitLCDBusy
  1737                           ;!         _SetToReadDataFromLCD
  1738                           ;!       _writeInsNoChk
  1739                           ;!         _SetToSendDataToLCD
  1740                           ;!         _setData
  1741                           ;!   _printEM1812
  1742                           ;!     ___lwdiv
  1743                           ;!     ___lwmod
  1744                           ;!   _setCursorOff
  1745                           ;!     _writeInsChk
  1746                           ;!       _waitLCDBusy
  1747                           ;!         _SetToReadDataFromLCD
  1748                           ;!       _writeInsNoChk
  1749                           ;!         _SetToSendDataToLCD
  1750                           ;!         _setData
  1751                           ;!   _setCursorPosition
  1752                           ;!     _SetToSendDataToLCD
  1753                           ;!     _setData
  1754                           ;!     _waitLCDBusy
  1755                           ;!       _SetToReadDataFromLCD
  1756                           ;!   _setNotBlinkingCursor
  1757                           ;!     _writeInsChk
  1758                           ;!       _waitLCDBusy
  1759                           ;!         _SetToReadDataFromLCD
  1760                           ;!       _writeInsNoChk
  1761                           ;!         _SetToSendDataToLCD
  1762                           ;!         _setData
  1763                           ;!
  1764                           ;! _myint (ROOT)
  1765                           ;!   i1_Add_Trace
  1766                           ;!     i1_strcat
  1767                           ;!       i1_strcpy
  1768                           ;!         i1_strlen (ARG)
  1769                           ;!       i1_strlen
  1770                           ;!     i1_strlen
  1771                           ;!
  1772                           
  1773                           ;! Address spaces:
  1774                           
  1775                           ;!Name               Size   Autos  Total    Cost      Usage
  1776                           ;!BIGRAM             3F0      0       0       0        0.0%
  1777                           ;!NULL                 0      0       0       0        0.0%
  1778                           ;!CODE                 0      0       0       0        0.0%
  1779                           ;!BITCOMMON            E      0       0       1        0.0%
  1780                           ;!BITSFR0              0      0       0       1        0.0%
  1781                           ;!SFR0                 0      0       0       1        0.0%
  1782                           ;!COMMON               E      E       E       2      100.0%
  1783                           ;!BITSFR1              0      0       0       2        0.0%
  1784                           ;!SFR1                 0      0       0       2        0.0%
  1785                           ;!BITSFR2              0      0       0       3        0.0%
  1786                           ;!SFR2                 0      0       0       3        0.0%
  1787                           ;!STACK                0      0       0       3        0.0%
  1788                           ;!BITBANK0            50      0       0       4        0.0%
  1789                           ;!BITSFR3              0      0       0       4        0.0%
  1790                           ;!SFR3                 0      0       0       4        0.0%
  1791                           ;!BANK0               50     22      40       5       80.0%
  1792                           ;!BITSFR4              0      0       0       5        0.0%
  1793                           ;!SFR4                 0      0       0       5        0.0%
  1794                           ;!BITBANK1            50      0       0       6        0.0%
  1795                           ;!BITSFR5              0      0       0       6        0.0%
  1796                           ;!SFR5                 0      0       0       6        0.0%
  1797                           ;!BANK1               50     10      28       7       50.0%
  1798                           ;!BITSFR6              0      0       0       7        0.0%
  1799                           ;!SFR6                 0      0       0       7        0.0%
  1800                           ;!BITBANK2            50      0       0       8        0.0%
  1801                           ;!BITSFR7              0      0       0       8        0.0%
  1802                           ;!SFR7                 0      0       0       8        0.0%
  1803                           ;!BANK2               50     32      50       9      100.0%
  1804                           ;!BITSFR8              0      0       0       9        0.0%
  1805                           ;!SFR8                 0      0       0       9        0.0%
  1806                           ;!BITBANK3            50      0       0      10        0.0%
  1807                           ;!BITSFR9              0      0       0      10        0.0%
  1808                           ;!SFR9                 0      0       0      10        0.0%
  1809                           ;!BANK3               50      0      4B      11       93.8%
  1810                           ;!BITSFR10             0      0       0      11        0.0%
  1811                           ;!SFR10                0      0       0      11        0.0%
  1812                           ;!BITBANK4            50      0       0      12        0.0%
  1813                           ;!BITSFR11             0      0       0      12        0.0%
  1814                           ;!SFR11                0      0       0      12        0.0%
  1815                           ;!BANK4               50      0       0      13        0.0%
  1816                           ;!BITSFR12             0      0       0      13        0.0%
  1817                           ;!SFR12                0      0       0      13        0.0%
  1818                           ;!BITBANK5            50      0       0      14        0.0%
  1819                           ;!BITSFR13             0      0       0      14        0.0%
  1820                           ;!SFR13                0      0       0      14        0.0%
  1821                           ;!BANK5               50      0       0      15        0.0%
  1822                           ;!BITSFR14             0      0       0      15        0.0%
  1823                           ;!SFR14                0      0       0      15        0.0%
  1824                           ;!BITBANK6            50      0       0      16        0.0%
  1825                           ;!BITSFR15             0      0       0      16        0.0%
  1826                           ;!SFR15                0      0       0      16        0.0%
  1827                           ;!BANK6               50      0       0      17        0.0%
  1828                           ;!BITSFR16             0      0       0      17        0.0%
  1829                           ;!SFR16                0      0       0      17        0.0%
  1830                           ;!BITBANK7            50      0       0      18        0.0%
  1831                           ;!BITSFR17             0      0       0      18        0.0%
  1832                           ;!SFR17                0      0       0      18        0.0%
  1833                           ;!BANK7               50      0       0      19        0.0%
  1834                           ;!BITSFR18             0      0       0      19        0.0%
  1835                           ;!SFR18                0      0       0      19        0.0%
  1836                           ;!BITSFR19             0      0       0      20        0.0%
  1837                           ;!SFR19                0      0       0      20        0.0%
  1838                           ;!ABS                  0      0     111      20        0.0%
  1839                           ;!BITBANK8            50      0       0      21        0.0%
  1840                           ;!BITSFR20             0      0       0      21        0.0%
  1841                           ;!SFR20                0      0       0      21        0.0%
  1842                           ;!BANK8               50      0       0      22        0.0%
  1843                           ;!BITSFR21             0      0       0      22        0.0%
  1844                           ;!SFR21                0      0       0      22        0.0%
  1845                           ;!BITBANK9            50      0       0      23        0.0%
  1846                           ;!BITSFR22             0      0       0      23        0.0%
  1847                           ;!SFR22                0      0       0      23        0.0%
  1848                           ;!BANK9               50      0       0      24        0.0%
  1849                           ;!BITSFR23             0      0       0      24        0.0%
  1850                           ;!SFR23                0      0       0      24        0.0%
  1851                           ;!BITBANK10           50      0       0      25        0.0%
  1852                           ;!BITSFR24             0      0       0      25        0.0%
  1853                           ;!SFR24                0      0       0      25        0.0%
  1854                           ;!BANK10              50      0       0      26        0.0%
  1855                           ;!BITSFR25             0      0       0      26        0.0%
  1856                           ;!SFR25                0      0       0      26        0.0%
  1857                           ;!BITBANK11           50      0       0      27        0.0%
  1858                           ;!BITSFR26             0      0       0      27        0.0%
  1859                           ;!SFR26                0      0       0      27        0.0%
  1860                           ;!BANK11              50      0       0      28        0.0%
  1861                           ;!BITSFR27             0      0       0      28        0.0%
  1862                           ;!SFR27                0      0       0      28        0.0%
  1863                           ;!BITBANK12           30      0       0      29        0.0%
  1864                           ;!BITSFR28             0      0       0      29        0.0%
  1865                           ;!SFR28                0      0       0      29        0.0%
  1866                           ;!BANK12              30      0       0      30        0.0%
  1867                           ;!BITSFR29             0      0       0      30        0.0%
  1868                           ;!SFR29                0      0       0      30        0.0%
  1869                           ;!BITSFR30             0      0       0      31        0.0%
  1870                           ;!SFR30                0      0       0      31        0.0%
  1871                           ;!DATA                 0      0     111      31        0.0%
  1872                           ;!BITSFR31             0      0       0      32        0.0%
  1873                           ;!SFR31                0      0       0      32        0.0%
  1874                           
  1875                           	global	_main
  1876                           
  1877 ;; *************** function _main *****************
  1878 ;; Defined at:
  1879 ;;		line 164 in file "161518_temp_main.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;		None
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  wReadout       20    0[BANK2 ] unsigned char [20]
  1884 ;;  wConv           4   22[BANK2 ] unsigned char [4]
  1885 ;;  wCounter        2   45[BANK2 ] int 
  1886 ;;  wDebounceDow    2   43[BANK2 ] unsigned short 
  1887 ;;  wDebounceUp     2   41[BANK2 ] unsigned short 
  1888 ;;  wDebounceEnt    2   39[BANK2 ] unsigned short 
  1889 ;;  wHumidity       2   37[BANK2 ] short 
  1890 ;;  wTemperature    2   34[BANK2 ] short 
  1891 ;;  wTemperature    2   32[BANK2 ] short 
  1892 ;;  wIterationCo    2   29[BANK2 ] unsigned short 
  1893 ;;  wHumidityPre    2   26[BANK2 ] short 
  1894 ;;  wTemp           2   20[BANK2 ] int 
  1895 ;;  wMenu           1   49[BANK2 ] unsigned char 
  1896 ;;  wDownBottonP    1   48[BANK2 ] unsigned char 
  1897 ;;  wUpBottonPre    1   47[BANK2 ] unsigned char 
  1898 ;;  wEnterBotton    1   36[BANK2 ] unsigned char 
  1899 ;;  wTempUpdate     1   31[BANK2 ] unsigned char 
  1900 ;;  wMenuPrev       1   28[BANK2 ] unsigned char 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : B1F/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  1910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  1911 ;;      Locals:         0       0       0      50       0       0       0       0       0       0       0       0       
       0       0
  1912 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
       0       0
  1913 ;;      Totals:         0       0       5      50       0       0       0       0       0       0       0       0       
       0       0
  1914 ;;Total ram usage:       55 bytes
  1915 ;; Hardware stack levels required when called:   10
  1916 ;; This function calls:
  1917 ;;		_Add_Trace
  1918 ;;		_Debounce
  1919 ;;		_GetTemp
  1920 ;;		_PrintLog
  1921 ;;		_SetToGetTemp
  1922 ;;		_WakeTemp
  1923 ;;		_clearDisplay
  1924 ;;		_initLCD
  1925 ;;		_lcdWriteText
  1926 ;;		_memset
  1927 ;;		_moveCursorToHome
  1928 ;;		_powerOnLcd
  1929 ;;		_printEM1812
  1930 ;;		_setCursorOff
  1931 ;;		_setCursorPosition
  1932 ;;		_setNotBlinkingCursor
  1933 ;; This function is called by:
  1934 ;;		Startup code after reset
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  1938                           	file	"161518_temp_main.c"
  1939                           	line	164
  1940                           global __pmaintext
  1941                           __pmaintext:	;psect for function _main
  1942  0110                     psect	maintext
  1943                           	file	"161518_temp_main.c"
  1944                           	line	164
  1945                           	global	__size_of_main
  1946                           	__size_of_main	equ	__end_of_main-_main
  1947  02A5                     	
  1948                           _main:	
  1949  0110                     ;incstack = 0
  1950                           	opt	stack 6
  1951                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1952                           	line	167
  1953                           	
  1954                           l2784:	
  1955  0110                     	movlb 2	; select bank2
  1956  0110  0022               	clrf	(main@wHumidity)^0100h
  1957  0111  01C5               	clrf	(main@wHumidity+1)^0100h
  1958  0112  01C6               	clrf	(main@wHumidityPrev)^0100h
  1959  0113  01BA               	clrf	(main@wHumidityPrev+1)^0100h
  1960  0114  01BB               	line	168
  1961                           	clrf	(main@wTemperature)^0100h
  1962  0115  01C0               	clrf	(main@wTemperature+1)^0100h
  1963  0116  01C1               	clrf	(main@wTemperaturePrev)^0100h
  1964  0117  01C2               	clrf	(main@wTemperaturePrev+1)^0100h
  1965  0118  01C3               	line	169
  1966                           	
  1967                           l2786:	
  1968  0119                     	movlw	low(_wInterruptText)
  1969  0119  30A0               	movlb 0	; select bank0
  1970  011A  0020               	movwf	(memset@dest)
  1971  011B  00B0               	movlw	high(_wInterruptText)
  1972  011C  3001               	movwf	(memset@dest+1)
  1973  011D  00B1               	movlw	0
  1974  011E  3000               	movwf	(memset@c)
  1975  011F  00B2               	movwf	(memset@c+1)
  1976  0120  00B3               	movlw	04Bh
  1977  0121  304B               	movwf	(memset@n)
  1978  0122  00B4               	movlw	0
  1979  0123  3000               	movwf	((memset@n))+1
  1980  0124  00B5               	fcall	_memset
  1981  0125  3183  23B5  3181   	line	171
  1982                           	
  1983                           l2788:	
  1984  0128                     	movlw	(0Fh & ((1<<4)-1))<<3
  1985  0128  3078               	movlb 1	; select bank1
  1986  0129  0021               	iorwf	(153)^080h,f	;volatile
  1987  012A  0499               	line	172
  1988                           	
  1989                           l2790:	
  1990  012B                     	movlw	(03h & ((1<<2)-1))<<0
  1991  012B  3003               	iorwf	(153)^080h,f	;volatile
  1992  012C  0499               	line	173
  1993                           	
  1994                           l2792:	
  1995  012D                     	bcf	(11),7	;volatile
  1996  012D  138B               	line	175
  1997                           	
  1998                           l2794:	
  1999  012E                     	movlb 2	; select bank2
  2000  012E  0022               	clrf	(main@wUpBottonPressed)^0100h
  2001  012F  01CF               	line	176
  2002                           	
  2003                           l2796:	
  2004  0130                     	clrf	(main@wDownBottonPressed)^0100h
  2005  0130  01D0               	line	177
  2006                           	
  2007                           l2798:	
  2008  0131                     	clrf	(main@wEnterBottonPressed)^0100h
  2009  0131  01C4               	line	179
  2010                           	
  2011                           l2800:	
  2012  0132                     	clrf	(main@wMenu)^0100h
  2013  0132  01D1               	line	180
  2014                           	
  2015                           l2802:	
  2016  0133                     	clrf	(main@wMenuPrev)^0100h
  2017  0133  01BC               	incf	(main@wMenuPrev)^0100h,f
  2018  0134  0ABC               	line	182
  2019                           	
  2020                           l2804:	
  2021  0135                     	clrf	(main@wTempUpdate)^0100h
  2022  0135  01BF               	line	183
  2023                           	
  2024                           l2806:	
  2025  0136                     	clrf	(main@wIterationCounter)^0100h
  2026  0136  01BD               	clrf	(main@wIterationCounter+1)^0100h
  2027  0137  01BE               	line	184
  2028                           	
  2029                           l2808:	
  2030  0138                     	clrf	(main@wDebounceEnter)^0100h
  2031  0138  01C7               	clrf	(main@wDebounceEnter+1)^0100h
  2032  0139  01C8               	line	185
  2033                           	
  2034                           l2810:	
  2035  013A                     	clrf	(main@wDebounceUp)^0100h
  2036  013A  01C9               	clrf	(main@wDebounceUp+1)^0100h
  2037  013B  01CA               	line	186
  2038                           	
  2039                           l2812:	
  2040  013C                     	clrf	(main@wDebounceDown)^0100h
  2041  013C  01CB               	clrf	(main@wDebounceDown+1)^0100h
  2042  013D  01CC               	line	188
  2043                           	
  2044                           l2814:	
  2045  013E                     	movlb 0	; select bank0
  2046  013E  0020               	clrf	(12)	;volatile
  2047  013F  018C               	line	190
  2048                           	
  2049                           l2816:	
  2050  0140                     	clrf	(13)	;volatile
  2051  0140  018D               	line	191
  2052                           	
  2053                           l2818:	
  2054  0141                     	movlb 3	; select bank3
  2055  0141  0023               	clrf	(397)^0180h	;volatile
  2056  0142  018D               	line	192
  2057                           	
  2058                           l2820:	
  2059  0143                     	movlw	low(0Fh)
  2060  0143  300F               	movlb 1	; select bank1
  2061  0144  0021               	movwf	(141)^080h	;volatile
  2062  0145  008D               	line	193
  2063                           	
  2064                           l2822:	
  2065  0146                     	movlw	low(0Fh)
  2066  0146  300F               	movlb 4	; select bank4
  2067  0147  0024               	movwf	(525)^0200h	;volatile
  2068  0148  008D               	line	195
  2069                           	
  2070                           l2824:	
  2071  0149                     	movlb 1	; select bank1
  2072  0149  0021               	bcf	(149)^080h,7	;volatile
  2073  014A  1395               	line	197
  2074                           	
  2075                           l2826:	
  2076  014B                     	movlw	low(_wI2CTxBuffer)
  2077  014B  30A0               	movlb 0	; select bank0
  2078  014C  0020               	movwf	(memset@dest)
  2079  014D  00B0               	movlw	high(_wI2CTxBuffer)
  2080  014E  3000               	movwf	(memset@dest+1)
  2081  014F  00B1               	movlw	0
  2082  0150  3000               	movwf	(memset@c)
  2083  0151  00B2               	movwf	(memset@c+1)
  2084  0152  00B3               	movlw	014h
  2085  0153  3014               	movwf	(memset@n)
  2086  0154  00B4               	movlw	0
  2087  0155  3000               	movwf	((memset@n))+1
  2088  0156  00B5               	fcall	_memset
  2089  0157  3183  23B5  3181   	line	198
  2090                           	movlb 0	; select bank0
  2091  015A  0020               	clrf	(_wI2CTxBufferSize)
  2092  015B  01DB               	line	199
  2093                           	clrf	(_wI2CTxSendPos)
  2094  015C  01D9               	line	201
  2095                           	movlb 3	; select bank3
  2096  015D  0023               	clrf	(396)^0180h	;volatile
  2097  015E  018C               	line	202
  2098                           	movlb 1	; select bank1
  2099  015F  0021               	clrf	(140)^080h	;volatile
  2100  0160  018C               	line	204
  2101                           	clrf	(142)^080h	;volatile
  2102  0161  018E               	line	205
  2103                           	
  2104                           l2828:	
  2105  0162                     	movlw	low(0FFh)
  2106  0162  30FF               	movwf	(142)^080h	;volatile
  2107  0163  008E               	line	206
  2108                           	
  2109                           l2830:	
  2110  0164                     	movlb 3	; select bank3
  2111  0164  0023               	bcf	(398)^0180h,3	;volatile
  2112  0165  118E               	line	207
  2113                           	
  2114                           l2832:	
  2115  0166                     	bcf	(398)^0180h,4	;volatile
  2116  0166  120E               	line	212
  2117                           	
  2118                           l2834:	
  2119  0167                     	movlb 4	; select bank4
  2120  0167  0024               	movf	(533)^0200h,w	;volatile
  2121  0168  0815               	andlw	not (((1<<4)-1)<<0)
  2122  0169  39F0               	iorlw	(08h & ((1<<4)-1))<<0
  2123  016A  3808               	movwf	(533)^0200h	;volatile
  2124  016B  0095               	line	213
  2125                           	
  2126                           l2836:	
  2127  016C                     	movlw	low(01Fh)
  2128  016C  301F               	movwf	(530)^0200h	;volatile
  2129  016D  0092               	line	214
  2130                           	
  2131                           l2838:	
  2132  016E                     	bsf	(533)^0200h,5	;volatile
  2133  016E  1695               	line	215
  2134                           	
  2135                           l2840:	
  2136  016F                     	bcf	(534)^0200h,7	;volatile
  2137  016F  1396               	line	216
  2138                           	
  2139                           l2842:	
  2140  0170                     	bsf	(534)^0200h,4	;volatile
  2141  0170  1616               	line	217
  2142                           	
  2143                           l2844:	
  2144  0171                     	bsf	(535)^0200h,6	;volatile
  2145  0171  1717               	line	218
  2146                           	
  2147                           l2846:	
  2148  0172                     	bsf	(535)^0200h,5	;volatile
  2149  0172  1697               	line	219
  2150                           	
  2151                           l2848:	
  2152  0173                     	bsf	(535)^0200h,3	;volatile
  2153  0173  1597               	line	220
  2154                           	
  2155                           l2850:	
  2156  0174                     	bcf	(535)^0200h,1	;volatile
  2157  0174  1097               	line	221
  2158                           	
  2159                           l2852:	
  2160  0175                     	bcf	(535)^0200h,0	;volatile
  2161  0175  1017               	line	222
  2162                           	
  2163                           l2854:	
  2164  0176                     	bcf	(532)^0200h,6	;volatile
  2165  0176  1314               	line	224
  2166                           	
  2167                           l2856:	
  2168  0177                     	bsf	(11),6	;volatile
  2169  0177  170B               	line	225
  2170                           	
  2171                           l2858:	
  2172  0178                     	movlb 1	; select bank1
  2173  0178  0021               	bsf	(145)^080h,3	;volatile
  2174  0179  1591               	line	226
  2175                           	
  2176                           l2860:	
  2177  017A                     	bsf	(146)^080h,3	;volatile
  2178  017A  1592               	line	228
  2179                           	
  2180                           l2862:	
  2181  017B                     	bsf	(11),7	;volatile
  2182  017B  178B               	line	231
  2183                           	
  2184                           l2864:	
  2185  017C                     	fcall	_initLCD
  2186  017C  3185  25EE  3181   	line	232
  2187                           	
  2188                           l2866:	
  2189  017F                     	fcall	_clearDisplay
  2190  017F  318E  2615  3181   	line	233
  2191                           	
  2192                           l2868:	
  2193  0182                     	opt asmopt_push
  2194                           opt asmopt_off
  2195                           movlw  3
  2196  0182  3003               	movlb 1	; select bank1
  2197  0183  0021               movwf	((??_main+0)^080h+0+1),f
  2198  0184  00C0               movlw	8
  2199  0185  3008               movwf	((??_main+0)^080h+0),f
  2200  0186  00BF               	movlw	119
  2201  0187  3077               u2217:
  2202  0188                     decfsz	wreg
  2203  0188  0B89               	goto	u2217
  2204  0189  2988               	decfsz	((??_main+0)^080h+0),f
  2205  018A  0BBF               	goto	u2217
  2206  018B  2988               	decfsz	((??_main+0)^080h+0+1),f
  2207  018C  0BC0               	goto	u2217
  2208  018D  2988               opt asmopt_pop
  2209                           
  2210                           	line	234
  2211                           	
  2212                           l2870:	
  2213  018E                     	fcall	_powerOnLcd
  2214  018E  318E  263F  3181   	line	235
  2215                           	
  2216                           l2872:	
  2217  0191                     	opt asmopt_push
  2218                           opt asmopt_off
  2219                           movlw  3
  2220  0191  3003               	movlb 1	; select bank1
  2221  0192  0021               movwf	((??_main+0)^080h+0+1),f
  2222  0193  00C0               movlw	8
  2223  0194  3008               movwf	((??_main+0)^080h+0),f
  2224  0195  00BF               	movlw	119
  2225  0196  3077               u2227:
  2226  0197                     decfsz	wreg
  2227  0197  0B89               	goto	u2227
  2228  0198  2997               	decfsz	((??_main+0)^080h+0),f
  2229  0199  0BBF               	goto	u2227
  2230  019A  2997               	decfsz	((??_main+0)^080h+0+1),f
  2231  019B  0BC0               	goto	u2227
  2232  019C  2997               opt asmopt_pop
  2233                           
  2234                           	line	236
  2235                           	
  2236                           l2874:	
  2237  019D                     	fcall	_setCursorOff
  2238  019D  318E  264A  3181   	line	237
  2239                           	
  2240                           l2876:	
  2241  01A0                     	opt asmopt_push
  2242                           opt asmopt_off
  2243                           movlw  3
  2244  01A0  3003               	movlb 1	; select bank1
  2245  01A1  0021               movwf	((??_main+0)^080h+0+1),f
  2246  01A2  00C0               movlw	8
  2247  01A3  3008               movwf	((??_main+0)^080h+0),f
  2248  01A4  00BF               	movlw	119
  2249  01A5  3077               u2237:
  2250  01A6                     decfsz	wreg
  2251  01A6  0B89               	goto	u2237
  2252  01A7  29A6               	decfsz	((??_main+0)^080h+0),f
  2253  01A8  0BBF               	goto	u2237
  2254  01A9  29A6               	decfsz	((??_main+0)^080h+0+1),f
  2255  01AA  0BC0               	goto	u2237
  2256  01AB  29A6               opt asmopt_pop
  2257                           
  2258                           	line	238
  2259                           	
  2260                           l2878:	
  2261  01AC                     	fcall	_moveCursorToHome
  2262  01AC  318E  262C  3181   	line	239
  2263                           	
  2264                           l2880:	
  2265  01AF                     	opt asmopt_push
  2266                           opt asmopt_off
  2267                           movlw  3
  2268  01AF  3003               	movlb 1	; select bank1
  2269  01B0  0021               movwf	((??_main+0)^080h+0+1),f
  2270  01B1  00C0               movlw	8
  2271  01B2  3008               movwf	((??_main+0)^080h+0),f
  2272  01B3  00BF               	movlw	119
  2273  01B4  3077               u2247:
  2274  01B5                     decfsz	wreg
  2275  01B5  0B89               	goto	u2247
  2276  01B6  29B5               	decfsz	((??_main+0)^080h+0),f
  2277  01B7  0BBF               	goto	u2247
  2278  01B8  29B5               	decfsz	((??_main+0)^080h+0+1),f
  2279  01B9  0BC0               	goto	u2247
  2280  01BA  29B5               opt asmopt_pop
  2281                           
  2282                           	line	240
  2283                           	
  2284                           l2882:	
  2285  01BB                     	fcall	_setNotBlinkingCursor
  2286  01BB  318E  2655  3181   	line	241
  2287                           	
  2288                           l2884:	
  2289  01BE                     	opt asmopt_push
  2290                           opt asmopt_off
  2291                           movlw  3
  2292  01BE  3003               	movlb 1	; select bank1
  2293  01BF  0021               movwf	((??_main+0)^080h+0+1),f
  2294  01C0  00C0               movlw	8
  2295  01C1  3008               movwf	((??_main+0)^080h+0),f
  2296  01C2  00BF               	movlw	119
  2297  01C3  3077               u2257:
  2298  01C4                     decfsz	wreg
  2299  01C4  0B89               	goto	u2257
  2300  01C5  29C4               	decfsz	((??_main+0)^080h+0),f
  2301  01C6  0BBF               	goto	u2257
  2302  01C7  29C4               	decfsz	((??_main+0)^080h+0+1),f
  2303  01C8  0BC0               	goto	u2257
  2304  01C9  29C4               opt asmopt_pop
  2305                           
  2306                           	line	267
  2307                           	
  2308                           l2886:	
  2309  01CA                     	movlb 2	; select bank2
  2310  01CA  0022               	clrf	(main@wCounter)^0100h
  2311  01CB  01CD               	clrf	(main@wCounter+1)^0100h
  2312  01CC  01CE               	line	268
  2313                           	
  2314                           l2888:	
  2315  01CD                     	movlb 1	; select bank1
  2316  01CD  0021               	movf	(main@F2238+3)^080h,w
  2317  01CE  0847               	movlb 2	; select bank2
  2318  01CF  0022               	movwf	(main@wConv+3)^0100h
  2319  01D0  00B9               	movlb 1	; select bank1
  2320  01D1  0021               	movf	(main@F2238+2)^080h,w
  2321  01D2  0846               	movlb 2	; select bank2
  2322  01D3  0022               	movwf	(main@wConv+2)^0100h
  2323  01D4  00B8               	movlb 1	; select bank1
  2324  01D5  0021               	movf	(main@F2238+1)^080h,w
  2325  01D6  0845               	movlb 2	; select bank2
  2326  01D7  0022               	movwf	(main@wConv+1)^0100h
  2327  01D8  00B7               	movlb 1	; select bank1
  2328  01D9  0021               	movf	(main@F2238)^080h,w
  2329  01DA  0844               	movlb 2	; select bank2
  2330  01DB  0022               	movwf	(main@wConv)^0100h
  2331  01DC  00B6               
  2332                           	line	269
  2333                           	
  2334                           l2890:	
  2335  01DD                     	clrf	(main@wTemp)^0100h
  2336  01DD  01B4               	clrf	(main@wTemp+1)^0100h
  2337  01DE  01B5               	line	271
  2338                           	
  2339                           l2892:	
  2340  01DF                     	fcall	_clearDisplay
  2341  01DF  318E  2615  3181   	line	272
  2342                           	
  2343                           l2894:	
  2344  01E2                     	fcall	_moveCursorToHome
  2345  01E2  318E  262C  3181   	line	273
  2346                           	
  2347                           l2896:	
  2348  01E5                     	opt asmopt_push
  2349                           opt asmopt_off
  2350                           movlw	156
  2351  01E5  309C               	movlb 1	; select bank1
  2352  01E6  0021               movwf	((??_main+0)^080h+0),f
  2353  01E7  00BF               	movlw	215
  2354  01E8  30D7               u2267:
  2355  01E9                     decfsz	wreg
  2356  01E9  0B89               	goto	u2267
  2357  01EA  29E9               	decfsz	((??_main+0)^080h+0),f
  2358  01EB  0BBF               	goto	u2267
  2359  01EC  29E9               opt asmopt_pop
  2360                           
  2361                           	goto	l2898
  2362  01ED  29EE               	line	274
  2363                           	
  2364                           l136:	
  2365  01EE                     	line	277
  2366                           	
  2367                           l2898:	
  2368  01EE                     	movlb 2	; select bank2
  2369  01EE  0022               	movf	(main@wHumidity+1)^0100h,w
  2370  01EF  0846               	movwf	(main@wHumidityPrev+1)^0100h
  2371  01F0  00BB               	movf	(main@wHumidity)^0100h,w
  2372  01F1  0845               	movwf	(main@wHumidityPrev)^0100h
  2373  01F2  00BA               	line	278
  2374                           	
  2375                           l2900:	
  2376  01F3                     	movf	0+(_wReceptionBuffer)^0100h+03h,w
  2377  01F3  0855               	movlb 1	; select bank1
  2378  01F4  0021               	movwf	(??_main+0)^080h+0
  2379  01F5  00BF               	clrf	(??_main+0)^080h+0+1
  2380  01F6  01C0               	movlb 2	; select bank2
  2381  01F7  0022               	movf	0+(_wReceptionBuffer)^0100h+02h,w
  2382  01F8  0854               	movlb 1	; select bank1
  2383  01F9  0021               	movwf	(??_main+2)^080h+0
  2384  01FA  00C1               	clrf	(??_main+2)^080h+0+1
  2385  01FB  01C2               	movf	(??_main+2)^080h+0,w
  2386  01FC  0841               	movwf	(??_main+2)^080h+1
  2387  01FD  00C2               	clrf	(??_main+2)^080h+0
  2388  01FE  01C1               	movf	0+(??_main+0)^080h+0,w
  2389  01FF  083F               	addwf	0+(??_main+2)^080h+0,w
  2390  0200  0741               	movlb 2	; select bank2
  2391  0201  0022               	movwf	(main@wHumidity)^0100h
  2392  0202  00C5               	movlb 1	; select bank1
  2393  0203  0021               	movf	1+(??_main+0)^080h+0,w
  2394  0204  0840               	addwfc	1+(??_main+2)^080h+0,w
  2395  0205  3D42               	movlb 2	; select bank2
  2396  0206  0022               	movwf	1+(main@wHumidity)^0100h
  2397  0207  00C6               	line	279
  2398                           	
  2399                           l2902:	
  2400  0208                     	movf	(main@wTemperature+1)^0100h,w
  2401  0208  0841               	movwf	(main@wTemperaturePrev+1)^0100h
  2402  0209  00C3               	movf	(main@wTemperature)^0100h,w
  2403  020A  0840               	movwf	(main@wTemperaturePrev)^0100h
  2404  020B  00C2               	line	280
  2405                           	
  2406                           l2904:	
  2407  020C                     	movf	0+(_wReceptionBuffer)^0100h+05h,w
  2408  020C  0857               	movlb 1	; select bank1
  2409  020D  0021               	movwf	(??_main+0)^080h+0
  2410  020E  00BF               	clrf	(??_main+0)^080h+0+1
  2411  020F  01C0               	movlb 2	; select bank2
  2412  0210  0022               	movf	0+(_wReceptionBuffer)^0100h+04h,w
  2413  0211  0856               	movlb 1	; select bank1
  2414  0212  0021               	movwf	(??_main+2)^080h+0
  2415  0213  00C1               	clrf	(??_main+2)^080h+0+1
  2416  0214  01C2               	movf	(??_main+2)^080h+0,w
  2417  0215  0841               	movwf	(??_main+2)^080h+1
  2418  0216  00C2               	clrf	(??_main+2)^080h+0
  2419  0217  01C1               	movf	0+(??_main+0)^080h+0,w
  2420  0218  083F               	addwf	0+(??_main+2)^080h+0,w
  2421  0219  0741               	movlb 2	; select bank2
  2422  021A  0022               	movwf	(main@wTemperature)^0100h
  2423  021B  00C0               	movlb 1	; select bank1
  2424  021C  0021               	movf	1+(??_main+0)^080h+0,w
  2425  021D  0840               	addwfc	1+(??_main+2)^080h+0,w
  2426  021E  3D42               	movlb 2	; select bank2
  2427  021F  0022               	movwf	1+(main@wTemperature)^0100h
  2428  0220  00C1               	line	283
  2429                           	
  2430                           l2906:	
  2431  0221                     	movf	(main@wHumidity+1)^0100h,w
  2432  0221  0846               	xorwf	(main@wHumidityPrev+1)^0100h,w
  2433  0222  063B               	skipz
  2434  0223  1D03               	goto	u1905
  2435  0224  2A27               	movf	(main@wHumidity)^0100h,w
  2436  0225  0845               	xorwf	(main@wHumidityPrev)^0100h,w
  2437  0226  063A               u1905:
  2438  0227                     
  2439                           	skipz
  2440  0227  1D03               	goto	u1901
  2441  0228  2A2A               	goto	u1900
  2442  0229  2A2B               u1901:
  2443  022A                     	goto	l2910
  2444  022A  2A36               u1900:
  2445  022B                     	
  2446                           l2908:	
  2447  022B                     	movf	(main@wTemperaturePrev+1)^0100h,w
  2448  022B  0843               	xorwf	(main@wTemperaturePrev+1)^0100h,w
  2449  022C  0643               	skipz
  2450  022D  1D03               	goto	u1915
  2451  022E  2A31               	movf	(main@wTemperaturePrev)^0100h,w
  2452  022F  0842               	xorwf	(main@wTemperaturePrev)^0100h,w
  2453  0230  0642               u1915:
  2454  0231                     
  2455                           	skipnz
  2456  0231  1903               	goto	u1911
  2457  0232  2A34               	goto	u1910
  2458  0233  2A35               u1911:
  2459  0234                     	goto	l2926
  2460  0234  2A97               u1910:
  2461  0235                     	goto	l2910
  2462  0235  2A36               	
  2463                           l139:	
  2464  0236                     	line	285
  2465                           	
  2466                           l2910:	
  2467  0236                     	movlb 0	; select bank0
  2468  0236  0020               	clrf	(setCursorPosition@iPosition)
  2469  0237  01B5               	movlw	low(02h)
  2470  0238  3002               	fcall	_setCursorPosition
  2471  0239  3185  258E  3181   	line	286
  2472                           	
  2473                           l2912:	
  2474  023C                     	movlb 2	; select bank2
  2475  023C  0022               	movf	(main@wHumidity+1)^0100h,w
  2476  023D  0846               	movlb 0	; select bank0
  2477  023E  0020               	movwf	(printEM1812@wVariable+1)
  2478  023F  00B9               	movlb 2	; select bank2
  2479  0240  0022               	movf	(main@wHumidity)^0100h,w
  2480  0241  0845               	movlb 0	; select bank0
  2481  0242  0020               	movwf	(printEM1812@wVariable)
  2482  0243  00B8               	movlw	(low(main@wReadout|((0x1)<<8)))&0ffh
  2483  0244  3020               	movlb 1	; select bank1
  2484  0245  0021               	movwf	(??_main+0)^080h+0
  2485  0246  00BF               	movf	(??_main+0)^080h+0,w
  2486  0247  083F               	movlb 0	; select bank0
  2487  0248  0020               	movwf	(printEM1812@oTextOut)
  2488  0249  00BA               	fcall	_printEM1812
  2489  024A  3185  251D  3181   	line	287
  2490                           	
  2491                           l2914:	
  2492  024D                     	movlw	low(04Bh)
  2493  024D  304B               	movlb 1	; select bank1
  2494  024E  0021               	movwf	(??_main+0)^080h+0
  2495  024F  00BF               	movf	(??_main+0)^080h+0,w
  2496  0250  083F               	movwf	(Add_Trace@iSizeOfoText)^080h
  2497  0251  00B5               	movlw	low(((STR_1)|8000h))
  2498  0252  3040               	movwf	(Add_Trace@iText)^080h
  2499  0253  00B6               	movlw	high(((STR_1)|8000h))
  2500  0254  3090               	movwf	((Add_Trace@iText)^080h)+1
  2501  0255  00B7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2502  0256  30A0               	fcall	_Add_Trace
  2503  0257  3186  268A  3181   	line	288
  2504                           	
  2505                           l2916:	
  2506  025A                     	movlw	low(04Bh)
  2507  025A  304B               	movlb 1	; select bank1
  2508  025B  0021               	movwf	(??_main+0)^080h+0
  2509  025C  00BF               	movf	(??_main+0)^080h+0,w
  2510  025D  083F               	movwf	(Add_Trace@iSizeOfoText)^080h
  2511  025E  00B5               	movlw	low(main@wReadout)
  2512  025F  3020               	movwf	(Add_Trace@iText)^080h
  2513  0260  00B6               	movlw	high(main@wReadout)
  2514  0261  3001               	movwf	(Add_Trace@iText+1)^080h
  2515  0262  00B7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2516  0263  30A0               	fcall	_Add_Trace
  2517  0264  3186  268A  3181   	line	289
  2518                           	
  2519                           l2918:	
  2520  0267                     	movlb 2	; select bank2
  2521  0267  0022               	movf	(main@wTemperature+1)^0100h,w
  2522  0268  0841               	movlb 0	; select bank0
  2523  0269  0020               	movwf	(printEM1812@wVariable+1)
  2524  026A  00B9               	movlb 2	; select bank2
  2525  026B  0022               	movf	(main@wTemperature)^0100h,w
  2526  026C  0840               	movlb 0	; select bank0
  2527  026D  0020               	movwf	(printEM1812@wVariable)
  2528  026E  00B8               	movlw	(low(main@wReadout|((0x1)<<8)))&0ffh
  2529  026F  3020               	movlb 1	; select bank1
  2530  0270  0021               	movwf	(??_main+0)^080h+0
  2531  0271  00BF               	movf	(??_main+0)^080h+0,w
  2532  0272  083F               	movlb 0	; select bank0
  2533  0273  0020               	movwf	(printEM1812@oTextOut)
  2534  0274  00BA               	fcall	_printEM1812
  2535  0275  3185  251D  3181   	line	290
  2536                           	
  2537                           l2920:	
  2538  0278                     	movlw	low(04Bh)
  2539  0278  304B               	movlb 1	; select bank1
  2540  0279  0021               	movwf	(??_main+0)^080h+0
  2541  027A  00BF               	movf	(??_main+0)^080h+0,w
  2542  027B  083F               	movwf	(Add_Trace@iSizeOfoText)^080h
  2543  027C  00B5               	movlw	low(((STR_2)|8000h))
  2544  027D  304C               	movwf	(Add_Trace@iText)^080h
  2545  027E  00B6               	movlw	high(((STR_2)|8000h))
  2546  027F  3090               	movwf	((Add_Trace@iText)^080h)+1
  2547  0280  00B7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2548  0281  30A0               	fcall	_Add_Trace
  2549  0282  3186  268A  3181   	line	291
  2550                           	
  2551                           l2922:	
  2552  0285                     	movlw	low(04Bh)
  2553  0285  304B               	movlb 1	; select bank1
  2554  0286  0021               	movwf	(??_main+0)^080h+0
  2555  0287  00BF               	movf	(??_main+0)^080h+0,w
  2556  0288  083F               	movwf	(Add_Trace@iSizeOfoText)^080h
  2557  0289  00B5               	movlw	low(main@wReadout)
  2558  028A  3020               	movwf	(Add_Trace@iText)^080h
  2559  028B  00B6               	movlw	high(main@wReadout)
  2560  028C  3001               	movwf	(Add_Trace@iText+1)^080h
  2561  028D  00B7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2562  028E  30A0               	fcall	_Add_Trace
  2563  028F  3186  268A  3181   	line	292
  2564                           	
  2565                           l2924:	
  2566  0292                     	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  2567  0292  30A0               	fcall	_PrintLog
  2568  0293  3187  27C9  3181   	goto	l2926
  2569  0296  2A97               	line	293
  2570                           	
  2571                           l137:	
  2572  0297                     	line	295
  2573                           	
  2574                           l2926:	
  2575  0297                     	movlb 2	; select bank2
  2576  0297  0022               	movf	(main@wMenu)^0100h,w
  2577  0298  0851               	xorwf	(main@wMenuPrev)^0100h,w
  2578  0299  063C               	skipnz
  2579  029A  1903               	goto	u1921
  2580  029B  2A9D               	goto	u1920
  2581  029C  2A9E               u1921:
  2582  029D                     	goto	l2942
  2583  029D  2AF8               u1920:
  2584  029E                     	line	297
  2585                           	
  2586                           l2928:	
  2587  029E                     	movf	(main@wMenu)^0100h,w
  2588  029E  0851               	movlb 1	; select bank1
  2589  029F  0021               	movwf	(??_main+0)^080h+0
  2590  02A0  00BF               	movf	(??_main+0)^080h+0,w
  2591  02A1  083F               	movlb 2	; select bank2
  2592  02A2  0022               	movwf	(main@wMenuPrev)^0100h
  2593  02A3  00BC               	line	298
  2594                           	goto	l2940
  2595  02A4  2AE2               	line	300
  2596                           	
  2597                           l142:	
  2598  02A5                     	line	301
  2599                           	
  2600                           l2930:	
  2601  02A5                     	movlb 0	; select bank0
  2602  02A5  0020               	clrf	(setCursorPosition@iPosition)
  2603  02A6  01B5               	movlw	low(0)
  2604  02A7  3000               	fcall	_setCursorPosition
  2605  02A8  3185  258E  3181   	line	302
  2606                           	movlw	low(((STR_3)|8000h))
  2607  02AB  3010               	movlb 0	; select bank0
  2608  02AC  0020               	movwf	(lcdWriteText@iText)
  2609  02AD  00BD               	movlw	high(((STR_3)|8000h))
  2610  02AE  3090               	movwf	((lcdWriteText@iText))+1
  2611  02AF  00BE               	fcall	_lcdWriteText
  2612  02B0  318F  27CF  3181   	line	303
  2613                           	goto	l2942
  2614  02B3  2AF8               	line	304
  2615                           	
  2616                           l144:	
  2617  02B4                     	line	305
  2618                           	
  2619                           l2932:	
  2620  02B4                     	movlb 0	; select bank0
  2621  02B4  0020               	clrf	(setCursorPosition@iPosition)
  2622  02B5  01B5               	movlw	low(0)
  2623  02B6  3000               	fcall	_setCursorPosition
  2624  02B7  3185  258E  3181   	line	306
  2625                           	movlw	low(((STR_4)|8000h))
  2626  02BA  3030               	movlb 0	; select bank0
  2627  02BB  0020               	movwf	(lcdWriteText@iText)
  2628  02BC  00BD               	movlw	high(((STR_4)|8000h))
  2629  02BD  3090               	movwf	((lcdWriteText@iText))+1
  2630  02BE  00BE               	fcall	_lcdWriteText
  2631  02BF  318F  27CF  3181   	line	307
  2632                           	goto	l2942
  2633  02C2  2AF8               	line	308
  2634                           	
  2635                           l145:	
  2636  02C3                     	line	309
  2637                           	
  2638                           l2934:	
  2639  02C3                     	movlb 0	; select bank0
  2640  02C3  0020               	clrf	(setCursorPosition@iPosition)
  2641  02C4  01B5               	movlw	low(0)
  2642  02C5  3000               	fcall	_setCursorPosition
  2643  02C6  3185  258E  3181   	line	310
  2644                           	movlw	low(((STR_5)|8000h))
  2645  02C9  3020               	movlb 0	; select bank0
  2646  02CA  0020               	movwf	(lcdWriteText@iText)
  2647  02CB  00BD               	movlw	high(((STR_5)|8000h))
  2648  02CC  3090               	movwf	((lcdWriteText@iText))+1
  2649  02CD  00BE               	fcall	_lcdWriteText
  2650  02CE  318F  27CF  3181   	line	311
  2651                           	goto	l2942
  2652  02D1  2AF8               	line	312
  2653                           	
  2654                           l146:	
  2655  02D2                     	line	313
  2656                           	
  2657                           l2936:	
  2658  02D2                     	movlb 0	; select bank0
  2659  02D2  0020               	clrf	(setCursorPosition@iPosition)
  2660  02D3  01B5               	movlw	low(0)
  2661  02D4  3000               	fcall	_setCursorPosition
  2662  02D5  3185  258E  3181   	line	314
  2663                           	movlw	low(((STR_6)|8000h))
  2664  02D8  3000               	movlb 0	; select bank0
  2665  02D9  0020               	movwf	(lcdWriteText@iText)
  2666  02DA  00BD               	movlw	high(((STR_6)|8000h))
  2667  02DB  3090               	movwf	((lcdWriteText@iText))+1
  2668  02DC  00BE               	fcall	_lcdWriteText
  2669  02DD  318F  27CF  3181   	line	315
  2670                           	goto	l2942
  2671  02E0  2AF8               	line	316
  2672                           	
  2673                           l2938:	
  2674  02E1                     	goto	l2942
  2675  02E1  2AF8               	
  2676                           l141:	
  2677  02E2                     	
  2678                           l2940:	
  2679  02E2                     	movlb 2	; select bank2
  2680  02E2  0022               	movf	(main@wMenu)^0100h,w
  2681  02E3  0851               	movlb 1	; select bank1
  2682  02E4  0021               	movwf	(??_main+0)^080h+0
  2683  02E5  00BF               	clrf	(??_main+0)^080h+0+1
  2684  02E6  01C0               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2685                           ; Switch size 1, requested type "space"
  2686                           ; Number of cases is 1, Range of values is 0 to 0
  2687                           ; switch strategies available:
  2688                           ; Name         Instructions Cycles
  2689                           ; simple_byte            4     3 (average)
  2690                           ; direct_byte            8     6 (fixed)
  2691                           ; jumptable            260     6 (fixed)
  2692                           ;	Chosen strategy is simple_byte
  2693                           
  2694                           	movf 1+(??_main+0)^080h+0,w
  2695  02E7  0840               	opt asmopt_push
  2696                           	opt asmopt_off
  2697                           	xorlw	0^0	; case 0
  2698  02E8  3A00               	skipnz
  2699  02E9  1903               	goto	l3188
  2700  02EA  2AEC               	goto	l2936
  2701  02EB  2AD2               	opt asmopt_pop
  2702                           	
  2703                           l3188:	
  2704  02EC                     ; Switch size 1, requested type "space"
  2705                           ; Number of cases is 3, Range of values is 0 to 2
  2706                           ; switch strategies available:
  2707                           ; Name         Instructions Cycles
  2708                           ; simple_byte           10     6 (average)
  2709                           ; direct_byte           12     6 (fixed)
  2710                           ; jumptable            260     6 (fixed)
  2711                           ;	Chosen strategy is simple_byte
  2712                           
  2713                           	movf 0+(??_main+0)^080h+0,w
  2714  02EC  083F               	opt asmopt_push
  2715                           	opt asmopt_off
  2716                           	xorlw	0^0	; case 0
  2717  02ED  3A00               	skipnz
  2718  02EE  1903               	goto	l2930
  2719  02EF  2AA5               	xorlw	1^0	; case 1
  2720  02F0  3A01               	skipnz
  2721  02F1  1903               	goto	l2932
  2722  02F2  2AB4               	xorlw	2^1	; case 2
  2723  02F3  3A03               	skipnz
  2724  02F4  1903               	goto	l2934
  2725  02F5  2AC3               	goto	l2936
  2726  02F6  2AD2               	opt asmopt_pop
  2727                           
  2728                           	
  2729                           l143:	
  2730  02F7                     	goto	l2942
  2731  02F7  2AF8               	line	317
  2732                           	
  2733                           l140:	
  2734  02F8                     	line	320
  2735                           	
  2736                           l2942:	
  2737  02F8                     	movlb 2	; select bank2
  2738  02F8  0022               		decf	((main@wTempUpdate)^0100h),w
  2739  02F9  033F               	btfss	status,2
  2740  02FA  1D03               	goto	u1931
  2741  02FB  2AFD               	goto	u1930
  2742  02FC  2AFE               u1931:
  2743  02FD                     	goto	l2966
  2744  02FD  2B40               u1930:
  2745  02FE                     	line	322
  2746                           	
  2747                           l2944:	
  2748  02FE                     	clrf	(main@wTempUpdate)^0100h
  2749  02FE  01BF               	line	323
  2750                           	
  2751                           l2946:	
  2752  02FF                     	fcall	_WakeTemp
  2753  02FF  318E  2660  3181   	line	324
  2754                           	
  2755                           l2948:	
  2756  0302                     	opt asmopt_push
  2757                           opt asmopt_off
  2758                           movlw	6
  2759  0302  3006               	movlb 1	; select bank1
  2760  0303  0021               movwf	((??_main+0)^080h+0),f
  2761  0304  00BF               	movlw	48
  2762  0305  3030               u2277:
  2763  0306                     decfsz	wreg
  2764  0306  0B89               	goto	u2277
  2765  0307  2B06               	decfsz	((??_main+0)^080h+0),f
  2766  0308  0BBF               	goto	u2277
  2767  0309  2B06               	nop
  2768  030A  0000               opt asmopt_pop
  2769                           
  2770                           	line	326
  2771                           	
  2772                           l2950:	
  2773  030B                     	fcall	_SetToGetTemp
  2774  030B  318F  2753  3181   	line	327
  2775                           	
  2776                           l2952:	
  2777  030E                     	opt asmopt_push
  2778                           opt asmopt_off
  2779                           movlw	8
  2780  030E  3008               	movlb 1	; select bank1
  2781  030F  0021               movwf	((??_main+0)^080h+0),f
  2782  0310  00BF               	movlw	201
  2783  0311  30C9               u2287:
  2784  0312                     decfsz	wreg
  2785  0312  0B89               	goto	u2287
  2786  0313  2B12               	decfsz	((??_main+0)^080h+0),f
  2787  0314  0BBF               	goto	u2287
  2788  0315  2B12               	nop2
  2789  0316  3200               opt asmopt_pop
  2790                           
  2791                           	line	329
  2792                           	
  2793                           l2954:	
  2794  0317                     	fcall	_GetTemp
  2795  0317  318F  2779  3181   	line	331
  2796                           	
  2797                           l2956:	
  2798  031A                     	movlb 2	; select bank2
  2799  031A  0022               	movf	(main@wCounter)^0100h,w
  2800  031B  084D               	addlw	02h
  2801  031C  3E02               	movwf	(main@wCounter)^0100h
  2802  031D  00CD               	movlw	0
  2803  031E  3000               	addwfc	(main@wCounter+1)^0100h,w
  2804  031F  3D4E               	movwf	1+(main@wCounter)^0100h
  2805  0320  00CE               	line	333
  2806                           	
  2807                           l2958:	
  2808  0321                     		movlw	4
  2809  0321  3004               	xorwf	((main@wCounter)^0100h),w
  2810  0322  064D               iorwf	((main@wCounter+1)^0100h),w
  2811  0323  044E               	btfss	status,2
  2812  0324  1D03               	goto	u1941
  2813  0325  2B27               	goto	u1940
  2814  0326  2B28               u1941:
  2815  0327                     	goto	l2962
  2816  0327  2B2B               u1940:
  2817  0328                     	line	335
  2818                           	
  2819                           l2960:	
  2820  0328                     	clrf	(main@wCounter)^0100h
  2821  0328  01CD               	clrf	(main@wCounter+1)^0100h
  2822  0329  01CE               	goto	l2962
  2823  032A  2B2B               	line	336
  2824                           	
  2825                           l148:	
  2826  032B                     	line	337
  2827                           	
  2828                           l2962:	
  2829  032B                     	movlw	low(013h)
  2830  032B  3013               	movlb 1	; select bank1
  2831  032C  0021               	movwf	(??_main+0)^080h+0
  2832  032D  00BF               	movf	(??_main+0)^080h+0,w
  2833  032E  083F               	movlb 0	; select bank0
  2834  032F  0020               	movwf	(setCursorPosition@iPosition)
  2835  0330  00B5               	movlw	low(03h)
  2836  0331  3003               	fcall	_setCursorPosition
  2837  0332  3185  258E  3181   	line	338
  2838                           	
  2839                           l2964:	
  2840  0335                     	movlb 2	; select bank2
  2841  0335  0022               	movf	(main@wCounter)^0100h,w
  2842  0336  084D               	addlw	low(main@wConv|((0x1)<<8))&0ffh
  2843  0337  3E36               	movlb 0	; select bank0
  2844  0338  0020               	movwf	(lcdWriteText@iText)
  2845  0339  00BD               	movlw	0x1
  2846  033A  3001               
  2847                           	movwf	(lcdWriteText@iText+1)
  2848  033B  00BE               	fcall	_lcdWriteText
  2849  033C  318F  27CF  3181   	goto	l2966
  2850  033F  2B40               	line	339
  2851                           	
  2852                           l147:	
  2853  0340                     	line	340
  2854                           	
  2855                           l2966:	
  2856  0340                     	movlw	01h
  2857  0340  3001               	movlb 2	; select bank2
  2858  0341  0022               	addwf	(main@wIterationCounter)^0100h,f
  2859  0342  07BD               	movlw	0
  2860  0343  3000               	addwfc	(main@wIterationCounter+1)^0100h,f
  2861  0344  3DBE               	line	341
  2862                           	
  2863                           l2968:	
  2864  0345                     		incf	((main@wIterationCounter)^0100h),w
  2865  0345  0A3D               	skipz
  2866  0346  1D03               	goto	u1951
  2867  0347  2B4C               	incf	((main@wIterationCounter+1)^0100h),w
  2868  0348  0A3E               	btfss	status,2
  2869  0349  1D03               	goto	u1951
  2870  034A  2B4C               	goto	u1950
  2871  034B  2B4D               u1951:
  2872  034C                     	goto	l2974
  2873  034C  2B52               u1950:
  2874  034D                     	line	343
  2875                           	
  2876                           l2970:	
  2877  034D                     	clrf	(main@wIterationCounter)^0100h
  2878  034D  01BD               	clrf	(main@wIterationCounter+1)^0100h
  2879  034E  01BE               	line	344
  2880                           	
  2881                           l2972:	
  2882  034F                     	clrf	(main@wTempUpdate)^0100h
  2883  034F  01BF               	incf	(main@wTempUpdate)^0100h,f
  2884  0350  0ABF               	goto	l2974
  2885  0351  2B52               	line	345
  2886                           	
  2887                           l149:	
  2888  0352                     	line	347
  2889                           	
  2890                           l2974:	
  2891  0352                     	movlw	(low(main@wDebounceEnter|((0x1)<<8)))&0ffh
  2892  0352  3047               	movlb 1	; select bank1
  2893  0353  0021               	movwf	(??_main+0)^080h+0
  2894  0354  00BF               	movf	(??_main+0)^080h+0,w
  2895  0355  083F               	movlb 0	; select bank0
  2896  0356  0020               	movwf	(Debounce@ioTimer)
  2897  0357  00B0               	movlw	(low(main@wEnterBottonPressed|((0x1)<<8)))&0ffh
  2898  0358  3044               	movlb 1	; select bank1
  2899  0359  0021               	movwf	(??_main+1)^080h+0
  2900  035A  00C0               	movf	(??_main+1)^080h+0,w
  2901  035B  0840               	movlb 0	; select bank0
  2902  035C  0020               	movwf	(Debounce@swPressed)
  2903  035D  00B1               	movf	(13),w	;volatile
  2904  035E  080D               	andlw	(1<<1)-1
  2905  035F  3901               	fcall	_Debounce
  2906  0360  3186  263E  3181   	line	348
  2907                           	
  2908                           l2976:	
  2909  0363                     	movlw	(low(main@wDebounceUp|((0x1)<<8)))&0ffh
  2910  0363  3049               	movlb 1	; select bank1
  2911  0364  0021               	movwf	(??_main+0)^080h+0
  2912  0365  00BF               	movf	(??_main+0)^080h+0,w
  2913  0366  083F               	movlb 0	; select bank0
  2914  0367  0020               	movwf	(Debounce@ioTimer)
  2915  0368  00B0               	movlw	(low(main@wUpBottonPressed|((0x1)<<8)))&0ffh
  2916  0369  304F               	movlb 1	; select bank1
  2917  036A  0021               	movwf	(??_main+1)^080h+0
  2918  036B  00C0               	movf	(??_main+1)^080h+0,w
  2919  036C  0840               	movlb 0	; select bank0
  2920  036D  0020               	movwf	(Debounce@swPressed)
  2921  036E  00B1               	rrf	(13),w	;volatile
  2922  036F  0C0D               	andlw	(1<<1)-1
  2923  0370  3901               	fcall	_Debounce
  2924  0371  3186  263E  3181   	line	349
  2925                           	
  2926                           l2978:	
  2927  0374                     	movlw	(low(main@wDebounceDown|((0x1)<<8)))&0ffh
  2928  0374  304B               	movlb 1	; select bank1
  2929  0375  0021               	movwf	(??_main+0)^080h+0
  2930  0376  00BF               	movf	(??_main+0)^080h+0,w
  2931  0377  083F               	movlb 0	; select bank0
  2932  0378  0020               	movwf	(Debounce@ioTimer)
  2933  0379  00B0               	movlw	(low(main@wDownBottonPressed|((0x1)<<8)))&0ffh
  2934  037A  3050               	movlb 1	; select bank1
  2935  037B  0021               	movwf	(??_main+1)^080h+0
  2936  037C  00C0               	movf	(??_main+1)^080h+0,w
  2937  037D  0840               	movlb 0	; select bank0
  2938  037E  0020               	movwf	(Debounce@swPressed)
  2939  037F  00B1               	rrf	(13),w	;volatile
  2940  0380  0C0D               	rrf	wreg,f
  2941  0381  0C89               	andlw	(1<<1)-1
  2942  0382  3901               	fcall	_Debounce
  2943  0383  3186  263E  3181   	line	352
  2944                           	
  2945                           l2980:	
  2946  0386                     	movlb 2	; select bank2
  2947  0386  0022               		decf	((main@wUpBottonPressed)^0100h),w
  2948  0387  034F               	btfss	status,2
  2949  0388  1D03               	goto	u1961
  2950  0389  2B8B               	goto	u1960
  2951  038A  2B8C               u1961:
  2952  038B                     	goto	l2986
  2953  038B  2B94               u1960:
  2954  038C                     	line	354
  2955                           	
  2956                           l2982:	
  2957  038C                     	clrf	(main@wUpBottonPressed)^0100h
  2958  038C  01CF               	line	355
  2959                           	
  2960                           l2984:	
  2961  038D                     	movlw	low(01h)
  2962  038D  3001               	movlb 1	; select bank1
  2963  038E  0021               	movwf	(??_main+0)^080h+0
  2964  038F  00BF               	movf	(??_main+0)^080h+0,w
  2965  0390  083F               	movlb 2	; select bank2
  2966  0391  0022               	addwf	(main@wMenu)^0100h,f
  2967  0392  07D1               	goto	l2986
  2968  0393  2B94               	line	356
  2969                           	
  2970                           l150:	
  2971  0394                     	line	357
  2972                           	
  2973                           l2986:	
  2974  0394                     		decf	((main@wDownBottonPressed)^0100h),w
  2975  0394  0350               	btfss	status,2
  2976  0395  1D03               	goto	u1971
  2977  0396  2B98               	goto	u1970
  2978  0397  2B99               u1971:
  2979  0398                     	goto	l2992
  2980  0398  2B9D               u1970:
  2981  0399                     	line	359
  2982                           	
  2983                           l2988:	
  2984  0399                     	clrf	(main@wDownBottonPressed)^0100h
  2985  0399  01D0               	line	360
  2986                           	
  2987                           l2990:	
  2988  039A                     	movlw	01h
  2989  039A  3001               	subwf	(main@wMenu)^0100h,f
  2990  039B  02D1               	goto	l2992
  2991  039C  2B9D               	line	361
  2992                           	
  2993                           l151:	
  2994  039D                     	line	363
  2995                           	
  2996                           l2992:	
  2997  039D                     		incf	((main@wMenu)^0100h),w
  2998  039D  0A51               	btfss	status,2
  2999  039E  1D03               	goto	u1981
  3000  039F  2BA1               	goto	u1980
  3001  03A0  2BA2               u1981:
  3002  03A1                     	goto	l2996
  3003  03A1  2BA9               u1980:
  3004  03A2                     	line	365
  3005                           	
  3006                           l2994:	
  3007  03A2                     	movlw	low(02h)
  3008  03A2  3002               	movlb 1	; select bank1
  3009  03A3  0021               	movwf	(??_main+0)^080h+0
  3010  03A4  00BF               	movf	(??_main+0)^080h+0,w
  3011  03A5  083F               	movlb 2	; select bank2
  3012  03A6  0022               	movwf	(main@wMenu)^0100h
  3013  03A7  00D1               	goto	l2996
  3014  03A8  2BA9               	line	366
  3015                           	
  3016                           l152:	
  3017  03A9                     	line	367
  3018                           	
  3019                           l2996:	
  3020  03A9                     		movlw	3
  3021  03A9  3003               	xorwf	((main@wMenu)^0100h),w
  3022  03AA  0651               	btfss	status,2
  3023  03AB  1D03               	goto	u1991
  3024  03AC  2BAE               	goto	u1990
  3025  03AD  2BAF               u1991:
  3026  03AE                     	goto	l2898
  3027  03AE  29EE               u1990:
  3028  03AF                     	line	369
  3029                           	
  3030                           l2998:	
  3031  03AF                     	clrf	(main@wMenu)^0100h
  3032  03AF  01D1               	goto	l2898
  3033  03B0  29EE               	line	370
  3034                           	
  3035                           l153:	
  3036  03B1                     	goto	l2898
  3037  03B1  29EE               	line	373
  3038                           	
  3039                           l154:	
  3040  03B2                     	goto	l2898
  3041  03B2  29EE               	
  3042                           l155:	
  3043  03B3                     	line	375
  3044                           	
  3045                           l156:	
  3046  03B3                     	global	start
  3047                           	ljmp	start
  3048  03B3  3180  28D9         	opt stack 0
  3049                           GLOBAL	__end_of_main
  3050                           	__end_of_main:
  3051  03B5                     	signat	_main,89
  3052                           	global	_setNotBlinkingCursor
  3053                           
  3054 ;; *************** function _setNotBlinkingCursor *****************
  3055 ;; Defined at:
  3056 ;;		line 198 in file "LCD_hd44780u_qy_2004a.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;		None
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;		None
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      void 
  3063 ;; Registers used:
  3064 ;;		wreg, status,2, status,0, pclath, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3072 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3073 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3074 ;;Total ram usage:        1 bytes
  3075 ;; Hardware stack levels used:    1
  3076 ;; Hardware stack levels required when called:    7
  3077 ;; This function calls:
  3078 ;;		_writeInsChk
  3079 ;; This function is called by:
  3080 ;;		_main
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  3084                           	file	"LCD_hd44780u_qy_2004a.c"
  3085                           	line	198
  3086                           global __ptext1
  3087                           __ptext1:	;psect for function _setNotBlinkingCursor
  3088  0E55                     psect	text1
  3089                           	file	"LCD_hd44780u_qy_2004a.c"
  3090                           	line	198
  3091                           	global	__size_of_setNotBlinkingCursor
  3092                           	__size_of_setNotBlinkingCursor	equ	__end_of_setNotBlinkingCursor-_setNotBlinkingCursor

  3093  000B                     	
  3094                           _setNotBlinkingCursor:	
  3095  0E55                     ;incstack = 0
  3096                           	opt	stack 8
  3097                           ; Regs used in _setNotBlinkingCursor: [wreg+status,2+status,0+pclath+cstack]
  3098                           	line	200
  3099                           	
  3100                           l2776:	
  3101  0E55                     ;LCD_hd44780u_qy_2004a.c: 200:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFE;
  3102                           	movlb 0	; select bank0
  3103  0E55  0020               	movf	(_mDisplayOnOffReg),w
  3104  0E56  085F               	andlw	0FEh
  3105  0E57  39FE               	movwf	(??_setNotBlinkingCursor+0)+0
  3106  0E58  00B6               	movf	(??_setNotBlinkingCursor+0)+0,w
  3107  0E59  0836               	movwf	(_mDisplayOnOffReg)
  3108  0E5A  00DF               	line	201
  3109                           	
  3110                           l2778:	
  3111  0E5B                     ;LCD_hd44780u_qy_2004a.c: 201:   writeInsChk(mDisplayOnOffReg);
  3112                           	movf	(_mDisplayOnOffReg),w
  3113  0E5B  085F               	fcall	_writeInsChk
  3114  0E5C  318E  2634  318E   	line	202
  3115                           	
  3116                           l286:	
  3117  0E5F                     	return
  3118  0E5F  0008               	opt stack 0
  3119                           GLOBAL	__end_of_setNotBlinkingCursor
  3120                           	__end_of_setNotBlinkingCursor:
  3121  0E60                     	signat	_setNotBlinkingCursor,89
  3122                           	global	_setCursorOff
  3123                           
  3124 ;; *************** function _setCursorOff *****************
  3125 ;; Defined at:
  3126 ;;		line 203 in file "LCD_hd44780u_qy_2004a.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;		None
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      void 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0, pclath, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3142 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3143 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3144 ;;Total ram usage:        1 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    7
  3147 ;; This function calls:
  3148 ;;		_writeInsChk
  3149 ;; This function is called by:
  3150 ;;		_main
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  3154                           	line	203
  3155                           global __ptext2
  3156                           __ptext2:	;psect for function _setCursorOff
  3157  0E4A                     psect	text2
  3158                           	file	"LCD_hd44780u_qy_2004a.c"
  3159                           	line	203
  3160                           	global	__size_of_setCursorOff
  3161                           	__size_of_setCursorOff	equ	__end_of_setCursorOff-_setCursorOff
  3162  000B                     	
  3163                           _setCursorOff:	
  3164  0E4A                     ;incstack = 0
  3165                           	opt	stack 8
  3166                           ; Regs used in _setCursorOff: [wreg+status,2+status,0+pclath+cstack]
  3167                           	line	205
  3168                           	
  3169                           l2768:	
  3170  0E4A                     ;LCD_hd44780u_qy_2004a.c: 205:   mDisplayOnOffReg = mDisplayOnOffReg & 0xFD;
  3171                           	movlb 0	; select bank0
  3172  0E4A  0020               	movf	(_mDisplayOnOffReg),w
  3173  0E4B  085F               	andlw	0FDh
  3174  0E4C  39FD               	movwf	(??_setCursorOff+0)+0
  3175  0E4D  00B6               	movf	(??_setCursorOff+0)+0,w
  3176  0E4E  0836               	movwf	(_mDisplayOnOffReg)
  3177  0E4F  00DF               	line	206
  3178                           	
  3179                           l2770:	
  3180  0E50                     ;LCD_hd44780u_qy_2004a.c: 206:   writeInsChk(mDisplayOnOffReg);
  3181                           	movf	(_mDisplayOnOffReg),w
  3182  0E50  085F               	fcall	_writeInsChk
  3183  0E51  318E  2634  318E   	line	207
  3184                           	
  3185                           l289:	
  3186  0E54                     	return
  3187  0E54  0008               	opt stack 0
  3188                           GLOBAL	__end_of_setCursorOff
  3189                           	__end_of_setCursorOff:
  3190  0E55                     	signat	_setCursorOff,89
  3191                           	global	_printEM1812
  3192                           
  3193 ;; *************** function _printEM1812 *****************
  3194 ;; Defined at:
  3195 ;;		line 119 in file "161518_temp_main.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  wVariable       2   24[BANK0 ] unsigned short 
  3198 ;;  oTextOut        1   26[BANK0 ] PTR unsigned char 
  3199 ;;		 -> main@wReadout(20), 
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;  QWE            20    0        unsigned char [20]
  3202 ;;  wDecimal        1   30[BANK0 ] unsigned char 
  3203 ;;  wUnity          1   29[BANK0 ] unsigned char 
  3204 ;;  wTen            1   28[BANK0 ] unsigned char 
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3214 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  3215 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  3216 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3217 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
  3218 ;;Total ram usage:        7 bytes
  3219 ;; Hardware stack levels used:    1
  3220 ;; Hardware stack levels required when called:    5
  3221 ;; This function calls:
  3222 ;;		___lwdiv
  3223 ;;		___lwmod
  3224 ;; This function is called by:
  3225 ;;		_main
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3229                           	file	"161518_temp_main.c"
  3230                           	line	119
  3231                           global __ptext3
  3232                           __ptext3:	;psect for function _printEM1812
  3233  051D                     psect	text3
  3234                           	file	"161518_temp_main.c"
  3235                           	line	119
  3236                           	global	__size_of_printEM1812
  3237                           	__size_of_printEM1812	equ	__end_of_printEM1812-_printEM1812
  3238  0071                     	
  3239                           _printEM1812:	
  3240  051D                     ;incstack = 0
  3241                           	opt	stack 10
  3242                           ; Regs used in _printEM1812: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3243                           	line	125
  3244                           	
  3245                           l2712:	
  3246  051D                     	movlw	064h
  3247  051D  3064               	movlb 0	; select bank0
  3248  051E  0020               	movwf	(___lwdiv@divisor)
  3249  051F  00B0               	movlw	0
  3250  0520  3000               	movwf	((___lwdiv@divisor))+1
  3251  0521  00B1               	movf	(printEM1812@wVariable+1),w
  3252  0522  0839               	movwf	(___lwdiv@dividend+1)
  3253  0523  00B3               	movf	(printEM1812@wVariable),w
  3254  0524  0838               	movwf	(___lwdiv@dividend)
  3255  0525  00B2               	fcall	___lwdiv
  3256  0526  3186  26D3  3185   	movlb 0	; select bank0
  3257  0529  0020               	movf	(0+(?___lwdiv)),w
  3258  052A  0830               	movwf	(??_printEM1812+0)+0
  3259  052B  00BB               	movf	(??_printEM1812+0)+0,w
  3260  052C  083B               	movwf	(printEM1812@wTen)
  3261  052D  00BC               	line	126
  3262                           	movlw	064h
  3263  052E  3064               	movwf	(___lwmod@divisor)
  3264  052F  00B0               	movlw	0
  3265  0530  3000               	movwf	((___lwmod@divisor))+1
  3266  0531  00B1               	movf	(printEM1812@wVariable+1),w
  3267  0532  0839               	movwf	(___lwmod@dividend+1)
  3268  0533  00B3               	movf	(printEM1812@wVariable),w
  3269  0534  0838               	movwf	(___lwmod@dividend)
  3270  0535  00B2               	fcall	___lwmod
  3271  0536  3187  2717  3185   	movlb 0	; select bank0
  3272  0539  0020               	movf	(1+(?___lwmod)),w
  3273  053A  0831               	movwf	(printEM1812@wVariable+1)
  3274  053B  00B9               	movf	(0+(?___lwmod)),w
  3275  053C  0830               	movwf	(printEM1812@wVariable)
  3276  053D  00B8               	line	127
  3277                           	movlw	0Ah
  3278  053E  300A               	movwf	(___lwdiv@divisor)
  3279  053F  00B0               	movlw	0
  3280  0540  3000               	movwf	((___lwdiv@divisor))+1
  3281  0541  00B1               	movf	(printEM1812@wVariable+1),w
  3282  0542  0839               	movwf	(___lwdiv@dividend+1)
  3283  0543  00B3               	movf	(printEM1812@wVariable),w
  3284  0544  0838               	movwf	(___lwdiv@dividend)
  3285  0545  00B2               	fcall	___lwdiv
  3286  0546  3186  26D3  3185   	movlb 0	; select bank0
  3287  0549  0020               	movf	(0+(?___lwdiv)),w
  3288  054A  0830               	movwf	(??_printEM1812+0)+0
  3289  054B  00BB               	movf	(??_printEM1812+0)+0,w
  3290  054C  083B               	movwf	(printEM1812@wUnity)
  3291  054D  00BD               	line	128
  3292                           	movlw	0Ah
  3293  054E  300A               	movwf	(___lwmod@divisor)
  3294  054F  00B0               	movlw	0
  3295  0550  3000               	movwf	((___lwmod@divisor))+1
  3296  0551  00B1               	movf	(printEM1812@wVariable+1),w
  3297  0552  0839               	movwf	(___lwmod@dividend+1)
  3298  0553  00B3               	movf	(printEM1812@wVariable),w
  3299  0554  0838               	movwf	(___lwmod@dividend)
  3300  0555  00B2               	fcall	___lwmod
  3301  0556  3187  2717  3185   	movlb 0	; select bank0
  3302  0559  0020               	movf	(1+(?___lwmod)),w
  3303  055A  0831               	movwf	(printEM1812@wVariable+1)
  3304  055B  00B9               	movf	(0+(?___lwmod)),w
  3305  055C  0830               	movwf	(printEM1812@wVariable)
  3306  055D  00B8               	line	129
  3307                           	
  3308                           l2714:	
  3309  055E                     	movf	(printEM1812@wVariable),w
  3310  055E  0838               	movwf	(??_printEM1812+0)+0
  3311  055F  00BB               	movf	(??_printEM1812+0)+0,w
  3312  0560  083B               	movwf	(printEM1812@wDecimal)
  3313  0561  00BE               	line	131
  3314                           	
  3315                           l2716:	
  3316  0562                     	movf	(printEM1812@wTen),w
  3317  0562  083C               	addlw	030h
  3318  0563  3E30               	movwf	(??_printEM1812+0)+0
  3319  0564  00BB               	movf	(printEM1812@oTextOut),w
  3320  0565  083A               	movwf	fsr1l
  3321  0566  0086               	movlw 1	; select bank2/3
  3322  0567  3001               	movwf fsr1h	
  3323  0568  0087               	
  3324                           	movf	(??_printEM1812+0)+0,w
  3325  0569  083B               	movwf	indf1
  3326  056A  0081               	line	132
  3327                           	
  3328                           l2718:	
  3329  056B                     	movf	(printEM1812@wUnity),w
  3330  056B  083D               	addlw	030h
  3331  056C  3E30               	movwf	(??_printEM1812+0)+0
  3332  056D  00BB               	incf	(printEM1812@oTextOut),w
  3333  056E  0A3A               	movwf	fsr1l
  3334  056F  0086               	movlw 1	; select bank2/3
  3335  0570  3001               	movwf fsr1h	
  3336  0571  0087               	
  3337                           	movf	(??_printEM1812+0)+0,w
  3338  0572  083B               	movwf	indf1
  3339  0573  0081               	line	133
  3340                           	
  3341                           l2720:	
  3342  0574                     	movlw	low(02Ch)
  3343  0574  302C               	movwf	(??_printEM1812+0)+0
  3344  0575  00BB               	movf	(printEM1812@oTextOut),w
  3345  0576  083A               	addlw	02h
  3346  0577  3E02               	movwf	fsr1l
  3347  0578  0086               	movlw 1	; select bank2/3
  3348  0579  3001               	movwf fsr1h	
  3349  057A  0087               	
  3350                           	movf	(??_printEM1812+0)+0,w
  3351  057B  083B               	movwf	indf1
  3352  057C  0081               	line	134
  3353                           	
  3354                           l2722:	
  3355  057D                     	movf	(printEM1812@wDecimal),w
  3356  057D  083E               	addlw	030h
  3357  057E  3E30               	movwf	(??_printEM1812+0)+0
  3358  057F  00BB               	movf	(printEM1812@oTextOut),w
  3359  0580  083A               	addlw	03h
  3360  0581  3E03               	movwf	fsr1l
  3361  0582  0086               	movlw 1	; select bank2/3
  3362  0583  3001               	movwf fsr1h	
  3363  0584  0087               	
  3364                           	movf	(??_printEM1812+0)+0,w
  3365  0585  083B               	movwf	indf1
  3366  0586  0081               	line	135
  3367                           	
  3368                           l2724:	
  3369  0587                     	movf	(printEM1812@oTextOut),w
  3370  0587  083A               	addlw	04h
  3371  0588  3E04               	movwf	fsr1l
  3372  0589  0086               	movlw 1	; select bank2/3
  3373  058A  3001               	movwf fsr1h	
  3374  058B  0087               	
  3375                           	clrf	indf1
  3376  058C  0181               	line	137
  3377                           	
  3378                           l122:	
  3379  058D                     	return
  3380  058D  0008               	opt stack 0
  3381                           GLOBAL	__end_of_printEM1812
  3382                           	__end_of_printEM1812:
  3383  058E                     	signat	_printEM1812,8313
  3384                           	global	___lwmod
  3385                           
  3386 ;; *************** function ___lwmod *****************
  3387 ;; Defined at:
  3388 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  divisor         2   16[BANK0 ] unsigned int 
  3391 ;;  dividend        2   18[BANK0 ] unsigned int 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;  counter         1   21[BANK0 ] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  2   16[BANK0 ] unsigned int 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3403 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  3404 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3405 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3406 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  3407 ;;Total ram usage:        6 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    4
  3410 ;; This function calls:
  3411 ;;		Nothing
  3412 ;; This function is called by:
  3413 ;;		_printEM1812
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  3417                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  3418                           	line	5
  3419                           global __ptext4
  3420                           __ptext4:	;psect for function ___lwmod
  3421  0717                     psect	text4
  3422                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  3423                           	line	5
  3424                           	global	__size_of___lwmod
  3425                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  3426  003C                     	
  3427                           ___lwmod:	
  3428  0717                     ;incstack = 0
  3429                           	opt	stack 10
  3430                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3431                           	line	12
  3432                           	
  3433                           l2634:	
  3434  0717                     	movlb 0	; select bank0
  3435  0717  0020               	movf	((___lwmod@divisor)),w
  3436  0718  0830               iorwf	((___lwmod@divisor+1)),w
  3437  0719  0431               	btfsc	status,2
  3438  071A  1903               	goto	u1751
  3439  071B  2F1D               	goto	u1750
  3440  071C  2F1E               u1751:
  3441  071D                     	goto	l2652
  3442  071D  2F4D               u1750:
  3443  071E                     	line	13
  3444                           	
  3445                           l2636:	
  3446  071E                     	clrf	(___lwmod@counter)
  3447  071E  01B5               	incf	(___lwmod@counter),f
  3448  071F  0AB5               	line	14
  3449                           	goto	l2642
  3450  0720  2F2B               	
  3451                           l615:	
  3452  0721                     	line	15
  3453                           	
  3454                           l2638:	
  3455  0721                     	movlw	01h
  3456  0721  3001               	
  3457                           u1765:
  3458  0722                     	lslf	(___lwmod@divisor),f
  3459  0722  35B0               	rlf	(___lwmod@divisor+1),f
  3460  0723  0DB1               	decfsz	wreg,f
  3461  0724  0B89               	goto	u1765
  3462  0725  2F22               	line	16
  3463                           	
  3464                           l2640:	
  3465  0726                     	movlw	low(01h)
  3466  0726  3001               	movwf	(??___lwmod+0)+0
  3467  0727  00B4               	movf	(??___lwmod+0)+0,w
  3468  0728  0834               	addwf	(___lwmod@counter),f
  3469  0729  07B5               	goto	l2642
  3470  072A  2F2B               	line	17
  3471                           	
  3472                           l614:	
  3473  072B                     	line	14
  3474                           	
  3475                           l2642:	
  3476  072B                     	btfss	(___lwmod@divisor+1),(15)&7
  3477  072B  1FB1               	goto	u1771
  3478  072C  2F2E               	goto	u1770
  3479  072D  2F2F               u1771:
  3480  072E                     	goto	l2638
  3481  072E  2F21               u1770:
  3482  072F                     	goto	l2644
  3483  072F  2F31               	
  3484                           l616:	
  3485  0730                     	goto	l2644
  3486  0730  2F31               	line	18
  3487                           	
  3488                           l617:	
  3489  0731                     	line	19
  3490                           	
  3491                           l2644:	
  3492  0731                     	movf	(___lwmod@divisor+1),w
  3493  0731  0831               	subwf	(___lwmod@dividend+1),w
  3494  0732  0233               	skipz
  3495  0733  1D03               	goto	u1785
  3496  0734  2F37               	movf	(___lwmod@divisor),w
  3497  0735  0830               	subwf	(___lwmod@dividend),w
  3498  0736  0232               u1785:
  3499  0737                     	skipc
  3500  0737  1C03               	goto	u1781
  3501  0738  2F3A               	goto	u1780
  3502  0739  2F3B               u1781:
  3503  073A                     	goto	l2648
  3504  073A  2F40               u1780:
  3505  073B                     	line	20
  3506                           	
  3507                           l2646:	
  3508  073B                     	movf	(___lwmod@divisor),w
  3509  073B  0830               	subwf	(___lwmod@dividend),f
  3510  073C  02B2               	movf	(___lwmod@divisor+1),w
  3511  073D  0831               	subwfb	(___lwmod@dividend+1),f
  3512  073E  3BB3               	goto	l2648
  3513  073F  2F40               	
  3514                           l618:	
  3515  0740                     	line	21
  3516                           	
  3517                           l2648:	
  3518  0740                     	movlw	01h
  3519  0740  3001               	
  3520                           u1795:
  3521  0741                     	lsrf	(___lwmod@divisor+1),f
  3522  0741  36B1               	rrf	(___lwmod@divisor),f
  3523  0742  0CB0               	decfsz	wreg,f
  3524  0743  0B89               	goto	u1795
  3525  0744  2F41               	line	22
  3526                           	
  3527                           l2650:	
  3528  0745                     	movlw	01h
  3529  0745  3001               	subwf	(___lwmod@counter),f
  3530  0746  02B5               	btfss	status,2
  3531  0747  1D03               	goto	u1801
  3532  0748  2F4A               	goto	u1800
  3533  0749  2F4B               u1801:
  3534  074A                     	goto	l2644
  3535  074A  2F31               u1800:
  3536  074B                     	goto	l2652
  3537  074B  2F4D               	
  3538                           l619:	
  3539  074C                     	goto	l2652
  3540  074C  2F4D               	line	23
  3541                           	
  3542                           l613:	
  3543  074D                     	line	24
  3544                           	
  3545                           l2652:	
  3546  074D                     	movf	(___lwmod@dividend+1),w
  3547  074D  0833               	movwf	(?___lwmod+1)
  3548  074E  00B1               	movf	(___lwmod@dividend),w
  3549  074F  0832               	movwf	(?___lwmod)
  3550  0750  00B0               	goto	l620
  3551  0751  2F52               	
  3552                           l2654:	
  3553  0752                     	line	25
  3554                           	
  3555                           l620:	
  3556  0752                     	return
  3557  0752  0008               	opt stack 0
  3558                           GLOBAL	__end_of___lwmod
  3559                           	__end_of___lwmod:
  3560  0753                     	signat	___lwmod,8314
  3561                           	global	___lwdiv
  3562                           
  3563 ;; *************** function ___lwdiv *****************
  3564 ;; Defined at:
  3565 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  divisor         2   16[BANK0 ] unsigned int 
  3568 ;;  dividend        2   18[BANK0 ] unsigned int 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;  quotient        2   22[BANK0 ] unsigned int 
  3571 ;;  counter         1   21[BANK0 ] unsigned char 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  2   16[BANK0 ] unsigned int 
  3574 ;; Registers used:
  3575 ;;		wreg, status,2, status,0
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3581 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  3582 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  3583 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3584 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
  3585 ;;Total ram usage:        8 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:    4
  3588 ;; This function calls:
  3589 ;;		Nothing
  3590 ;; This function is called by:
  3591 ;;		_printEM1812
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  3595                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  3596                           	line	5
  3597                           global __ptext5
  3598                           __ptext5:	;psect for function ___lwdiv
  3599  06D3                     psect	text5
  3600                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  3601                           	line	5
  3602                           	global	__size_of___lwdiv
  3603                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3604  0044                     	
  3605                           ___lwdiv:	
  3606  06D3                     ;incstack = 0
  3607                           	opt	stack 10
  3608                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3609                           	line	13
  3610                           	
  3611                           l2608:	
  3612  06D3                     	movlb 0	; select bank0
  3613  06D3  0020               	clrf	(___lwdiv@quotient)
  3614  06D4  01B6               	clrf	(___lwdiv@quotient+1)
  3615  06D5  01B7               	line	14
  3616                           	
  3617                           l2610:	
  3618  06D6                     	movf	((___lwdiv@divisor)),w
  3619  06D6  0830               iorwf	((___lwdiv@divisor+1)),w
  3620  06D7  0431               	btfsc	status,2
  3621  06D8  1903               	goto	u1681
  3622  06D9  2EDB               	goto	u1680
  3623  06DA  2EDC               u1681:
  3624  06DB                     	goto	l2630
  3625  06DB  2F11               u1680:
  3626  06DC                     	line	15
  3627                           	
  3628                           l2612:	
  3629  06DC                     	clrf	(___lwdiv@counter)
  3630  06DC  01B5               	incf	(___lwdiv@counter),f
  3631  06DD  0AB5               	line	16
  3632                           	goto	l2618
  3633  06DE  2EE9               	
  3634                           l605:	
  3635  06DF                     	line	17
  3636                           	
  3637                           l2614:	
  3638  06DF                     	movlw	01h
  3639  06DF  3001               	
  3640                           u1695:
  3641  06E0                     	lslf	(___lwdiv@divisor),f
  3642  06E0  35B0               	rlf	(___lwdiv@divisor+1),f
  3643  06E1  0DB1               	decfsz	wreg,f
  3644  06E2  0B89               	goto	u1695
  3645  06E3  2EE0               	line	18
  3646                           	
  3647                           l2616:	
  3648  06E4                     	movlw	low(01h)
  3649  06E4  3001               	movwf	(??___lwdiv+0)+0
  3650  06E5  00B4               	movf	(??___lwdiv+0)+0,w
  3651  06E6  0834               	addwf	(___lwdiv@counter),f
  3652  06E7  07B5               	goto	l2618
  3653  06E8  2EE9               	line	19
  3654                           	
  3655                           l604:	
  3656  06E9                     	line	16
  3657                           	
  3658                           l2618:	
  3659  06E9                     	btfss	(___lwdiv@divisor+1),(15)&7
  3660  06E9  1FB1               	goto	u1701
  3661  06EA  2EEC               	goto	u1700
  3662  06EB  2EED               u1701:
  3663  06EC                     	goto	l2614
  3664  06EC  2EDF               u1700:
  3665  06ED                     	goto	l2620
  3666  06ED  2EEF               	
  3667                           l606:	
  3668  06EE                     	goto	l2620
  3669  06EE  2EEF               	line	20
  3670                           	
  3671                           l607:	
  3672  06EF                     	line	21
  3673                           	
  3674                           l2620:	
  3675  06EF                     	movlw	01h
  3676  06EF  3001               	
  3677                           u1715:
  3678  06F0                     	lslf	(___lwdiv@quotient),f
  3679  06F0  35B6               	rlf	(___lwdiv@quotient+1),f
  3680  06F1  0DB7               	decfsz	wreg,f
  3681  06F2  0B89               	goto	u1715
  3682  06F3  2EF0               	line	22
  3683                           	movf	(___lwdiv@divisor+1),w
  3684  06F4  0831               	subwf	(___lwdiv@dividend+1),w
  3685  06F5  0233               	skipz
  3686  06F6  1D03               	goto	u1725
  3687  06F7  2EFA               	movf	(___lwdiv@divisor),w
  3688  06F8  0830               	subwf	(___lwdiv@dividend),w
  3689  06F9  0232               u1725:
  3690  06FA                     	skipc
  3691  06FA  1C03               	goto	u1721
  3692  06FB  2EFD               	goto	u1720
  3693  06FC  2EFE               u1721:
  3694  06FD                     	goto	l2626
  3695  06FD  2F04               u1720:
  3696  06FE                     	line	23
  3697                           	
  3698                           l2622:	
  3699  06FE                     	movf	(___lwdiv@divisor),w
  3700  06FE  0830               	subwf	(___lwdiv@dividend),f
  3701  06FF  02B2               	movf	(___lwdiv@divisor+1),w
  3702  0700  0831               	subwfb	(___lwdiv@dividend+1),f
  3703  0701  3BB3               	line	24
  3704                           	
  3705                           l2624:	
  3706  0702                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3707  0702  1436               	goto	l2626
  3708  0703  2F04               	line	25
  3709                           	
  3710                           l608:	
  3711  0704                     	line	26
  3712                           	
  3713                           l2626:	
  3714  0704                     	movlw	01h
  3715  0704  3001               	
  3716                           u1735:
  3717  0705                     	lsrf	(___lwdiv@divisor+1),f
  3718  0705  36B1               	rrf	(___lwdiv@divisor),f
  3719  0706  0CB0               	decfsz	wreg,f
  3720  0707  0B89               	goto	u1735
  3721  0708  2F05               	line	27
  3722                           	
  3723                           l2628:	
  3724  0709                     	movlw	01h
  3725  0709  3001               	subwf	(___lwdiv@counter),f
  3726  070A  02B5               	btfss	status,2
  3727  070B  1D03               	goto	u1741
  3728  070C  2F0E               	goto	u1740
  3729  070D  2F0F               u1741:
  3730  070E                     	goto	l2620
  3731  070E  2EEF               u1740:
  3732  070F                     	goto	l2630
  3733  070F  2F11               	
  3734                           l609:	
  3735  0710                     	goto	l2630
  3736  0710  2F11               	line	28
  3737                           	
  3738                           l603:	
  3739  0711                     	line	29
  3740                           	
  3741                           l2630:	
  3742  0711                     	movf	(___lwdiv@quotient+1),w
  3743  0711  0837               	movwf	(?___lwdiv+1)
  3744  0712  00B1               	movf	(___lwdiv@quotient),w
  3745  0713  0836               	movwf	(?___lwdiv)
  3746  0714  00B0               	goto	l610
  3747  0715  2F16               	
  3748                           l2632:	
  3749  0716                     	line	30
  3750                           	
  3751                           l610:	
  3752  0716                     	return
  3753  0716  0008               	opt stack 0
  3754                           GLOBAL	__end_of___lwdiv
  3755                           	__end_of___lwdiv:
  3756  0717                     	signat	___lwdiv,8314
  3757                           	global	_powerOnLcd
  3758                           
  3759 ;; *************** function _powerOnLcd *****************
  3760 ;; Defined at:
  3761 ;;		line 188 in file "LCD_hd44780u_qy_2004a.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;		None
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;		None
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      void 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0, pclath, cstack
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3777 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3778 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3779 ;;Total ram usage:        1 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:    7
  3782 ;; This function calls:
  3783 ;;		_writeInsChk
  3784 ;; This function is called by:
  3785 ;;		_main
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3789                           	file	"LCD_hd44780u_qy_2004a.c"
  3790                           	line	188
  3791                           global __ptext6
  3792                           __ptext6:	;psect for function _powerOnLcd
  3793  0E3F                     psect	text6
  3794                           	file	"LCD_hd44780u_qy_2004a.c"
  3795                           	line	188
  3796                           	global	__size_of_powerOnLcd
  3797                           	__size_of_powerOnLcd	equ	__end_of_powerOnLcd-_powerOnLcd
  3798  000B                     	
  3799                           _powerOnLcd:	
  3800  0E3F                     ;incstack = 0
  3801                           	opt	stack 8
  3802                           ; Regs used in _powerOnLcd: [wreg+status,2+status,0+pclath+cstack]
  3803                           	line	190
  3804                           	
  3805                           l2764:	
  3806  0E3F                     ;LCD_hd44780u_qy_2004a.c: 190:   mDisplayOnOffReg = mDisplayOnOffReg | 0x04;
  3807                           	movlb 0	; select bank0
  3808  0E3F  0020               	movf	(_mDisplayOnOffReg),w
  3809  0E40  085F               	iorlw	04h
  3810  0E41  3804               	movwf	(??_powerOnLcd+0)+0
  3811  0E42  00B6               	movf	(??_powerOnLcd+0)+0,w
  3812  0E43  0836               	movwf	(_mDisplayOnOffReg)
  3813  0E44  00DF               	line	191
  3814                           	
  3815                           l2766:	
  3816  0E45                     ;LCD_hd44780u_qy_2004a.c: 191:   writeInsChk(mDisplayOnOffReg);
  3817                           	movf	(_mDisplayOnOffReg),w
  3818  0E45  085F               	fcall	_writeInsChk
  3819  0E46  318E  2634  318E   	line	192
  3820                           	
  3821                           l280:	
  3822  0E49                     	return
  3823  0E49  0008               	opt stack 0
  3824                           GLOBAL	__end_of_powerOnLcd
  3825                           	__end_of_powerOnLcd:
  3826  0E4A                     	signat	_powerOnLcd,89
  3827                           	global	_moveCursorToHome
  3828                           
  3829 ;; *************** function _moveCursorToHome *****************
  3830 ;; Defined at:
  3831 ;;		line 249 in file "LCD_hd44780u_qy_2004a.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;		None
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;		None
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      void 
  3838 ;; Registers used:
  3839 ;;		wreg, status,2, status,0, pclath, cstack
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3849 ;;Total ram usage:        0 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    7
  3852 ;; This function calls:
  3853 ;;		_writeInsChk
  3854 ;; This function is called by:
  3855 ;;		_main
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3859                           	line	249
  3860                           global __ptext7
  3861                           __ptext7:	;psect for function _moveCursorToHome
  3862  0E2C                     psect	text7
  3863                           	file	"LCD_hd44780u_qy_2004a.c"
  3864                           	line	249
  3865                           	global	__size_of_moveCursorToHome
  3866                           	__size_of_moveCursorToHome	equ	__end_of_moveCursorToHome-_moveCursorToHome
  3867  0008                     	
  3868                           _moveCursorToHome:	
  3869  0E2C                     ;incstack = 0
  3870                           	opt	stack 8
  3871                           ; Regs used in _moveCursorToHome: [wreg+status,2+status,0+pclath+cstack]
  3872                           	line	251
  3873                           	
  3874                           l2772:	
  3875  0E2C                     ;LCD_hd44780u_qy_2004a.c: 251:   writeInsChk(0x02);
  3876                           	movlw	low(02h)
  3877  0E2C  3002               	fcall	_writeInsChk
  3878  0E2D  318E  2634  318E   	line	252
  3879                           	
  3880                           l2774:	
  3881  0E30                     ;LCD_hd44780u_qy_2004a.c: 252:   mWritingPosition=1;
  3882                           	movlb 0	; select bank0
  3883  0E30  0020               	clrf	(_mWritingPosition)
  3884  0E31  01DD               	incf	(_mWritingPosition),f
  3885  0E32  0ADD               	line	253
  3886                           	
  3887                           l316:	
  3888  0E33                     	return
  3889  0E33  0008               	opt stack 0
  3890                           GLOBAL	__end_of_moveCursorToHome
  3891                           	__end_of_moveCursorToHome:
  3892  0E34                     	signat	_moveCursorToHome,89
  3893                           	global	_initLCD
  3894                           
  3895 ;; *************** function _initLCD *****************
  3896 ;; Defined at:
  3897 ;;		line 10 in file "LCD_hd44780u_qy_2004a.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;		None
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;		None
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  1    wreg      void 
  3904 ;; Registers used:
  3905 ;;		wreg, status,2, status,0, pclath, cstack
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3913 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3914 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3915 ;;Total ram usage:        1 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:    8
  3918 ;; This function calls:
  3919 ;;		_clearDisplay
  3920 ;;		_setData
  3921 ;;		_writeInsChk
  3922 ;; This function is called by:
  3923 ;;		_main
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3927                           	line	10
  3928                           global __ptext8
  3929                           __ptext8:	;psect for function _initLCD
  3930  05EE                     psect	text8
  3931                           	file	"LCD_hd44780u_qy_2004a.c"
  3932                           	line	10
  3933                           	global	__size_of_initLCD
  3934                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  3935  0050                     	
  3936                           _initLCD:	
  3937  05EE                     ;incstack = 0
  3938                           	opt	stack 7
  3939                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  3940                           	line	13
  3941                           	
  3942                           l2742:	
  3943  05EE                     ;LCD_hd44780u_qy_2004a.c: 13:   TRISAbits.TRISA4 = 0;
  3944                           	movlb 1	; select bank1
  3945  05EE  0021               	bcf	(140)^080h,4	;volatile
  3946  05EF  120C               	line	14
  3947                           ;LCD_hd44780u_qy_2004a.c: 14:   TRISAbits.TRISA7 = 0;
  3948                           	bcf	(140)^080h,7	;volatile
  3949  05F0  138C               	line	15
  3950                           ;LCD_hd44780u_qy_2004a.c: 15:   TRISAbits.TRISA5 = 0;
  3951                           	bcf	(140)^080h,5	;volatile
  3952  05F1  128C               	line	16
  3953                           ;LCD_hd44780u_qy_2004a.c: 16:   PORTAbits.RA4 = 0;
  3954                           	movlb 0	; select bank0
  3955  05F2  0020               	bcf	(12),4	;volatile
  3956  05F3  120C               	line	17
  3957                           ;LCD_hd44780u_qy_2004a.c: 17:   PORTAbits.RA7 = 0;
  3958                           	bcf	(12),7	;volatile
  3959  05F4  138C               	line	18
  3960                           ;LCD_hd44780u_qy_2004a.c: 18:   PORTAbits.RA5 = 0;
  3961                           	bcf	(12),5	;volatile
  3962  05F5  128C               	line	21
  3963                           	
  3964                           l2744:	
  3965  05F6                     ;LCD_hd44780u_qy_2004a.c: 21:   _delay((unsigned long)((15)*(16000000/4000.0)));
  3966                           	opt asmopt_push
  3967                           opt asmopt_off
  3968                           movlw	78
  3969  05F6  304E               	movlb 0	; select bank0
  3970  05F7  0020               movwf	((??_initLCD+0)+0),f
  3971  05F8  00B6               	movlw	235
  3972  05F9  30EB               u2297:
  3973  05FA                     decfsz	wreg
  3974  05FA  0B89               	goto	u2297
  3975  05FB  2DFA               	decfsz	((??_initLCD+0)+0),f
  3976  05FC  0BB6               	goto	u2297
  3977  05FD  2DFA               opt asmopt_pop
  3978                           
  3979                           	line	22
  3980                           	
  3981                           l2746:	
  3982  05FE                     ;LCD_hd44780u_qy_2004a.c: 22:   setData(0x3);
  3983                           	movlw	low(03h)
  3984  05FE  3003               	fcall	_setData
  3985  05FF  3187  2753  3185   	line	23
  3986                           	
  3987                           l2748:	
  3988  0602                     ;LCD_hd44780u_qy_2004a.c: 23:   _delay((unsigned long)((5)*(16000000/4000.0)));
  3989                           	opt asmopt_push
  3990                           opt asmopt_off
  3991                           movlw	26
  3992  0602  301A               	movlb 0	; select bank0
  3993  0603  0020               movwf	((??_initLCD+0)+0),f
  3994  0604  00B6               	movlw	248
  3995  0605  30F8               u2307:
  3996  0606                     decfsz	wreg
  3997  0606  0B89               	goto	u2307
  3998  0607  2E06               	decfsz	((??_initLCD+0)+0),f
  3999  0608  0BB6               	goto	u2307
  4000  0609  2E06               	nop
  4001  060A  0000               opt asmopt_pop
  4002                           
  4003                           	line	24
  4004                           ;LCD_hd44780u_qy_2004a.c: 24:   setData(0x3);
  4005                           	movlw	low(03h)
  4006  060B  3003               	fcall	_setData
  4007  060C  3187  2753  3185   	line	25
  4008                           	
  4009                           l2750:	
  4010  060F                     ;LCD_hd44780u_qy_2004a.c: 25:   _delay((unsigned long)((150)*(16000000/4000000.0)));
  4011                           	opt asmopt_push
  4012                           opt asmopt_off
  4013                           	movlw	200
  4014  060F  30C8               u2317:
  4015  0610                     decfsz	wreg
  4016  0610  0B89               	goto	u2317
  4017  0611  2E10               opt asmopt_pop
  4018                           
  4019                           	line	26
  4020                           	
  4021                           l2752:	
  4022  0612                     ;LCD_hd44780u_qy_2004a.c: 26:   setData(0x3);
  4023                           	movlw	low(03h)
  4024  0612  3003               	fcall	_setData
  4025  0613  3187  2753  3185   	line	27
  4026                           ;LCD_hd44780u_qy_2004a.c: 27:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  4027                           	opt asmopt_push
  4028                           opt asmopt_off
  4029                           	movlw	13
  4030  0616  300D               u2327:
  4031  0617                     decfsz	wreg
  4032  0617  0B89               	goto	u2327
  4033  0618  2E17               	nop
  4034  0619  0000               opt asmopt_pop
  4035                           
  4036                           	line	28
  4037                           	
  4038                           l2754:	
  4039  061A                     ;LCD_hd44780u_qy_2004a.c: 28:   setData(0x2);
  4040                           	movlw	low(02h)
  4041  061A  3002               	fcall	_setData
  4042  061B  3187  2753  3185   	line	29
  4043                           	
  4044                           l2756:	
  4045  061E                     ;LCD_hd44780u_qy_2004a.c: 29:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  4046                           	opt asmopt_push
  4047                           opt asmopt_off
  4048                           	movlw	13
  4049  061E  300D               u2337:
  4050  061F                     decfsz	wreg
  4051  061F  0B89               	goto	u2337
  4052  0620  2E1F               	nop
  4053  0621  0000               opt asmopt_pop
  4054                           
  4055                           	line	30
  4056                           ;LCD_hd44780u_qy_2004a.c: 30:   writeInsChk(0x28);
  4057                           	movlw	low(028h)
  4058  0622  3028               	fcall	_writeInsChk
  4059  0623  318E  2634  3185   	line	31
  4060                           	
  4061                           l2758:	
  4062  0626                     ;LCD_hd44780u_qy_2004a.c: 31:   mDisplayOnOffReg = 0x0F;
  4063                           	movlw	low(0Fh)
  4064  0626  300F               	movlb 0	; select bank0
  4065  0627  0020               	movwf	(??_initLCD+0)+0
  4066  0628  00B6               	movf	(??_initLCD+0)+0,w
  4067  0629  0836               	movwf	(_mDisplayOnOffReg)
  4068  062A  00DF               	line	32
  4069                           	
  4070                           l2760:	
  4071  062B                     ;LCD_hd44780u_qy_2004a.c: 32:   mCursorDisplayShiftReg= 0x06;
  4072                           	movlw	low(06h)
  4073  062B  3006               	movwf	(??_initLCD+0)+0
  4074  062C  00B6               	movf	(??_initLCD+0)+0,w
  4075  062D  0836               	movwf	(_mCursorDisplayShiftReg)
  4076  062E  00DE               	line	33
  4077                           ;LCD_hd44780u_qy_2004a.c: 33:   writeInsChk(mDisplayOnOffReg);
  4078                           	movf	(_mDisplayOnOffReg),w
  4079  062F  085F               	fcall	_writeInsChk
  4080  0630  318E  2634  3185   	line	35
  4081                           ;LCD_hd44780u_qy_2004a.c: 35:   clearDisplay();
  4082                           	fcall	_clearDisplay
  4083  0633  318E  2615  3185   	line	36
  4084                           ;LCD_hd44780u_qy_2004a.c: 36:   writeInsChk(0x06);
  4085                           	movlw	low(06h)
  4086  0636  3006               	fcall	_writeInsChk
  4087  0637  318E  2634  3185   	line	37
  4088                           	
  4089                           l2762:	
  4090  063A                     ;LCD_hd44780u_qy_2004a.c: 37:   mWritingPosition=1;
  4091                           	movlb 0	; select bank0
  4092  063A  0020               	clrf	(_mWritingPosition)
  4093  063B  01DD               	incf	(_mWritingPosition),f
  4094  063C  0ADD               	line	39
  4095                           	
  4096                           l221:	
  4097  063D                     	return
  4098  063D  0008               	opt stack 0
  4099                           GLOBAL	__end_of_initLCD
  4100                           	__end_of_initLCD:
  4101  063E                     	signat	_initLCD,89
  4102                           	global	_clearDisplay
  4103                           
  4104 ;; *************** function _clearDisplay *****************
  4105 ;; Defined at:
  4106 ;;		line 245 in file "LCD_hd44780u_qy_2004a.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;		None
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;		None
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  1    wreg      void 
  4113 ;; Registers used:
  4114 ;;		wreg, status,2, status,0, pclath, cstack
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4124 ;;Total ram usage:        0 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; Hardware stack levels required when called:    7
  4127 ;; This function calls:
  4128 ;;		_writeInsChk
  4129 ;; This function is called by:
  4130 ;;		_main
  4131 ;;		_initLCD
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4135                           	line	245
  4136                           global __ptext9
  4137                           __ptext9:	;psect for function _clearDisplay
  4138  0E15                     psect	text9
  4139                           	file	"LCD_hd44780u_qy_2004a.c"
  4140                           	line	245
  4141                           	global	__size_of_clearDisplay
  4142                           	__size_of_clearDisplay	equ	__end_of_clearDisplay-_clearDisplay
  4143  0005                     	
  4144                           _clearDisplay:	
  4145  0E15                     ;incstack = 0
  4146                           	opt	stack 7
  4147                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  4148                           	line	247
  4149                           	
  4150                           l2606:	
  4151  0E15                     ;LCD_hd44780u_qy_2004a.c: 247:   writeInsChk(0x01);
  4152                           	movlw	low(01h)
  4153  0E15  3001               	fcall	_writeInsChk
  4154  0E16  318E  2634  318E   	line	248
  4155                           	
  4156                           l313:	
  4157  0E19                     	return
  4158  0E19  0008               	opt stack 0
  4159                           GLOBAL	__end_of_clearDisplay
  4160                           	__end_of_clearDisplay:
  4161  0E1A                     	signat	_clearDisplay,89
  4162                           	global	_writeInsChk
  4163                           
  4164 ;; *************** function _writeInsChk *****************
  4165 ;; Defined at:
  4166 ;;		line 132 in file "LCD_hd44780u_qy_2004a.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  iOpCode         1    wreg     unsigned char 
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;  iOpCode         1   21[BANK0 ] unsigned char 
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  1    wreg      void 
  4173 ;; Registers used:
  4174 ;;		wreg, status,2, status,0, pclath, cstack
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4181 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4183 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4184 ;;Total ram usage:        1 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; Hardware stack levels required when called:    6
  4187 ;; This function calls:
  4188 ;;		_waitLCDBusy
  4189 ;;		_writeInsNoChk
  4190 ;; This function is called by:
  4191 ;;		_initLCD
  4192 ;;		_powerOnLcd
  4193 ;;		_setNotBlinkingCursor
  4194 ;;		_setCursorOff
  4195 ;;		_clearDisplay
  4196 ;;		_moveCursorToHome
  4197 ;;		_powerOffLcd
  4198 ;;		_setBlinkingCursor
  4199 ;;		_setCursorOn
  4200 ;;		_setCursorMovingLeft
  4201 ;;		_setCursorMovingRight
  4202 ;;		_setDisplayMovingRight
  4203 ;;		_setDisplayMovingLeft
  4204 ;;		_moveCursorRight
  4205 ;;		_moveCursorLeft
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  4209                           	line	132
  4210                           global __ptext10
  4211                           __ptext10:	;psect for function _writeInsChk
  4212  0E34                     psect	text10
  4213                           	file	"LCD_hd44780u_qy_2004a.c"
  4214                           	line	132
  4215                           	global	__size_of_writeInsChk
  4216                           	__size_of_writeInsChk	equ	__end_of_writeInsChk-_writeInsChk
  4217  000B                     	
  4218                           _writeInsChk:	
  4219  0E34                     ;incstack = 0
  4220                           	opt	stack 8
  4221                           ; Regs used in _writeInsChk: [wreg+status,2+status,0+pclath+cstack]
  4222                           ;writeInsChk@iOpCode stored from wreg
  4223                           	movlb 0	; select bank0
  4224  0E34  0020               	movwf	(writeInsChk@iOpCode)
  4225  0E35  00B5               	line	134
  4226                           	
  4227                           l2474:	
  4228  0E36                     ;LCD_hd44780u_qy_2004a.c: 132: void writeInsChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 1
                                 33: {;LCD_hd44780u_qy_2004a.c: 134:   waitLCDBusy();
  4229                           	fcall	_waitLCDBusy
  4230  0E36  318F  27A2  318E   	line	135
  4231                           ;LCD_hd44780u_qy_2004a.c: 135:   writeInsNoChk(iOpCode);
  4232                           	movlb 0	; select bank0
  4233  0E39  0020               	movf	(writeInsChk@iOpCode),w
  4234  0E3A  0835               	fcall	_writeInsNoChk
  4235  0E3B  318E  2674  318E   	line	136
  4236                           	
  4237                           l259:	
  4238  0E3E                     	return
  4239  0E3E  0008               	opt stack 0
  4240                           GLOBAL	__end_of_writeInsChk
  4241                           	__end_of_writeInsChk:
  4242  0E3F                     	signat	_writeInsChk,4217
  4243                           	global	_writeInsNoChk
  4244                           
  4245 ;; *************** function _writeInsNoChk *****************
  4246 ;; Defined at:
  4247 ;;		line 138 in file "LCD_hd44780u_qy_2004a.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  iOpCode         1    wreg     unsigned char 
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;  iOpCode         1   20[BANK0 ] unsigned char 
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  1    wreg      void 
  4254 ;; Registers used:
  4255 ;;		wreg, status,2, status,0, pclath, cstack
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4262 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4263 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4264 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  4265 ;;Total ram usage:        2 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; Hardware stack levels required when called:    5
  4268 ;; This function calls:
  4269 ;;		_SetToSendDataToLCD
  4270 ;;		_setData
  4271 ;; This function is called by:
  4272 ;;		_writeInsChk
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4276                           	line	138
  4277                           global __ptext11
  4278                           __ptext11:	;psect for function _writeInsNoChk
  4279  0E74                     psect	text11
  4280                           	file	"LCD_hd44780u_qy_2004a.c"
  4281                           	line	138
  4282                           	global	__size_of_writeInsNoChk
  4283                           	__size_of_writeInsNoChk	equ	__end_of_writeInsNoChk-_writeInsNoChk
  4284  0018                     	
  4285                           _writeInsNoChk:	
  4286  0E74                     ;incstack = 0
  4287                           	opt	stack 8
  4288                           ; Regs used in _writeInsNoChk: [wreg+status,2+status,0+pclath+cstack]
  4289                           ;writeInsNoChk@iOpCode stored from wreg
  4290                           	movlb 0	; select bank0
  4291  0E74  0020               	movwf	(writeInsNoChk@iOpCode)
  4292  0E75  00B4               	line	140
  4293                           	
  4294                           l2454:	
  4295  0E76                     ;LCD_hd44780u_qy_2004a.c: 138: void writeInsNoChk(char iOpCode);LCD_hd44780u_qy_2004a.c:
                                  139: {;LCD_hd44780u_qy_2004a.c: 140:   SetToSendDataToLCD();
  4296                           	fcall	_SetToSendDataToLCD
  4297  0E76  318E  261A  318E   	line	141
  4298                           	
  4299                           l2456:	
  4300  0E79                     ;LCD_hd44780u_qy_2004a.c: 141:   PORTAbits.RA4 = 0;
  4301                           	movlb 0	; select bank0
  4302  0E79  0020               	bcf	(12),4	;volatile
  4303  0E7A  120C               	line	142
  4304                           	
  4305                           l2458:	
  4306  0E7B                     ;LCD_hd44780u_qy_2004a.c: 142:   PORTAbits.RA7 = 0;
  4307                           	bcf	(12),7	;volatile
  4308  0E7B  138C               	line	143
  4309                           	
  4310                           l2460:	
  4311  0E7C                     ;LCD_hd44780u_qy_2004a.c: 143:   setData(iOpCode >> 4);
  4312                           	movf	(writeInsNoChk@iOpCode),w
  4313  0E7C  0834               	movwf	(??_writeInsNoChk+0)+0
  4314  0E7D  00B3               	movlw	04h
  4315  0E7E  3004               u1525:
  4316  0E7F                     	lsrf	(??_writeInsNoChk+0)+0,f
  4317  0E7F  36B3               	decfsz	wreg,f
  4318  0E80  0B89               	goto	u1525
  4319  0E81  2E7F               	movf	0+(??_writeInsNoChk+0)+0,w
  4320  0E82  0833               	fcall	_setData
  4321  0E83  3187  2753  318E   	line	144
  4322                           	
  4323                           l2462:	
  4324  0E86                     ;LCD_hd44780u_qy_2004a.c: 144:   setData(iOpCode);
  4325                           	movlb 0	; select bank0
  4326  0E86  0020               	movf	(writeInsNoChk@iOpCode),w
  4327  0E87  0834               	fcall	_setData
  4328  0E88  3187  2753  318E   	line	145
  4329                           	
  4330                           l262:	
  4331  0E8B                     	return
  4332  0E8B  0008               	opt stack 0
  4333                           GLOBAL	__end_of_writeInsNoChk
  4334                           	__end_of_writeInsNoChk:
  4335  0E8C                     	signat	_writeInsNoChk,4217
  4336                           	global	_WakeTemp
  4337                           
  4338 ;; *************** function _WakeTemp *****************
  4339 ;; Defined at:
  4340 ;;		line 99 in file "161518_temp_main.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;		None
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;		None
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  1    wreg      void 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4356 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4357 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4358 ;;Total ram usage:        1 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    4
  4361 ;; This function calls:
  4362 ;;		Nothing
  4363 ;; This function is called by:
  4364 ;;		_main
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  4368                           	file	"161518_temp_main.c"
  4369                           	line	99
  4370                           global __ptext12
  4371                           __ptext12:	;psect for function _WakeTemp
  4372  0E60                     psect	text12
  4373                           	file	"161518_temp_main.c"
  4374                           	line	99
  4375                           	global	__size_of_WakeTemp
  4376                           	__size_of_WakeTemp	equ	__end_of_WakeTemp-_WakeTemp
  4377  0014                     	
  4378                           _WakeTemp:	
  4379  0E60                     ;incstack = 0
  4380                           	opt	stack 11
  4381                           ; Regs used in _WakeTemp: [wreg+status,2+status,0]
  4382                           	line	101
  4383                           	
  4384                           l2694:	
  4385  0E60                     	movlb 1	; select bank1
  4386  0E60  0021               	bsf	(145)^080h,3	;volatile
  4387  0E61  1591               	line	102
  4388                           	
  4389                           l2696:	
  4390  0E62                     	movlb 0	; select bank0
  4391  0E62  0020               	movf	((_wI2CTxBufferSize)),w
  4392  0E63  085B               	btfss	status,2
  4393  0E64  1D03               	goto	u1841
  4394  0E65  2E67               	goto	u1840
  4395  0E66  2E68               u1841:
  4396  0E67                     	goto	l115
  4397  0E67  2E73               u1840:
  4398  0E68                     	line	104
  4399                           	
  4400                           l2698:	
  4401  0E68                     	movlw	low(0B8h)
  4402  0E68  30B8               	movwf	(??_WakeTemp+0)+0
  4403  0E69  00B0               	movf	(??_WakeTemp+0)+0,w
  4404  0E6A  0830               	movlb 1	; select bank1
  4405  0E6B  0021               	movwf	(_wI2CTxBuffer)^080h
  4406  0E6C  00A0               	line	105
  4407                           	
  4408                           l2700:	
  4409  0E6D                     	movlb 0	; select bank0
  4410  0E6D  0020               	clrf	(_wI2CTxBufferSize)
  4411  0E6E  01DB               	incf	(_wI2CTxBufferSize),f
  4412  0E6F  0ADB               	line	106
  4413                           	
  4414                           l2702:	
  4415  0E70                     	movlb 4	; select bank4
  4416  0E70  0024               	bsf	(534)^0200h,0	;volatile
  4417  0E71  1416               	goto	l115
  4418  0E72  2E73               	line	107
  4419                           	
  4420                           l114:	
  4421  0E73                     	line	108
  4422                           	
  4423                           l115:	
  4424  0E73                     	return
  4425  0E73  0008               	opt stack 0
  4426                           GLOBAL	__end_of_WakeTemp
  4427                           	__end_of_WakeTemp:
  4428  0E74                     	signat	_WakeTemp,89
  4429                           	global	_SetToGetTemp
  4430                           
  4431 ;; *************** function _SetToGetTemp *****************
  4432 ;; Defined at:
  4433 ;;		line 63 in file "161518_temp_main.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;		None
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;		None
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  1    wreg      void 
  4440 ;; Registers used:
  4441 ;;		wreg, status,2, status,0
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4449 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4450 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4451 ;;Total ram usage:        1 bytes
  4452 ;; Hardware stack levels used:    1
  4453 ;; Hardware stack levels required when called:    4
  4454 ;; This function calls:
  4455 ;;		Nothing
  4456 ;; This function is called by:
  4457 ;;		_main
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4461                           	line	63
  4462                           global __ptext13
  4463                           __ptext13:	;psect for function _SetToGetTemp
  4464  0F53                     psect	text13
  4465                           	file	"161518_temp_main.c"
  4466                           	line	63
  4467                           	global	__size_of_SetToGetTemp
  4468                           	__size_of_SetToGetTemp	equ	__end_of_SetToGetTemp-_SetToGetTemp
  4469  0026                     	
  4470                           _SetToGetTemp:	
  4471  0F53                     ;incstack = 0
  4472                           	opt	stack 11
  4473                           ; Regs used in _SetToGetTemp: [wreg+status,2+status,0]
  4474                           	line	65
  4475                           	
  4476                           l2660:	
  4477  0F53                     	movlb 0	; select bank0
  4478  0F53  0020               	movf	((_wI2CTxBufferSize)),w
  4479  0F54  085B               	btfss	status,2
  4480  0F55  1D03               	goto	u1811
  4481  0F56  2F58               	goto	u1810
  4482  0F57  2F59               u1811:
  4483  0F58                     	goto	l103
  4484  0F58  2F78               u1810:
  4485  0F59                     	line	67
  4486                           	
  4487                           l2662:	
  4488  0F59                     	movlb 1	; select bank1
  4489  0F59  0021               	bsf	(145)^080h,3	;volatile
  4490  0F5A  1591               	line	68
  4491                           	movlb 4	; select bank4
  4492  0F5B  0024               	bsf	(535)^0200h,7	;volatile
  4493  0F5C  1797               	line	69
  4494                           	
  4495                           l2664:	
  4496  0F5D                     	movlw	low(0B8h)
  4497  0F5D  30B8               	movlb 0	; select bank0
  4498  0F5E  0020               	movwf	(??_SetToGetTemp+0)+0
  4499  0F5F  00B0               	movf	(??_SetToGetTemp+0)+0,w
  4500  0F60  0830               	movlb 1	; select bank1
  4501  0F61  0021               	movwf	(_wI2CTxBuffer)^080h
  4502  0F62  00A0               	line	70
  4503                           	movlw	low(03h)
  4504  0F63  3003               	movlb 0	; select bank0
  4505  0F64  0020               	movwf	(??_SetToGetTemp+0)+0
  4506  0F65  00B0               	movf	(??_SetToGetTemp+0)+0,w
  4507  0F66  0830               	movlb 1	; select bank1
  4508  0F67  0021               	movwf	0+(_wI2CTxBuffer)^080h+01h
  4509  0F68  00A1               	line	71
  4510                           	
  4511                           l2666:	
  4512  0F69                     	clrf	0+(_wI2CTxBuffer)^080h+02h
  4513  0F69  01A2               	line	72
  4514                           	
  4515                           l2668:	
  4516  0F6A                     	movlw	low(04h)
  4517  0F6A  3004               	movlb 0	; select bank0
  4518  0F6B  0020               	movwf	(??_SetToGetTemp+0)+0
  4519  0F6C  00B0               	movf	(??_SetToGetTemp+0)+0,w
  4520  0F6D  0830               	movlb 1	; select bank1
  4521  0F6E  0021               	movwf	0+(_wI2CTxBuffer)^080h+03h
  4522  0F6F  00A3               	line	73
  4523                           	
  4524                           l2670:	
  4525  0F70                     	movlw	low(04h)
  4526  0F70  3004               	movlb 0	; select bank0
  4527  0F71  0020               	movwf	(??_SetToGetTemp+0)+0
  4528  0F72  00B0               	movf	(??_SetToGetTemp+0)+0,w
  4529  0F73  0830               	movwf	(_wI2CTxBufferSize)
  4530  0F74  00DB               	line	74
  4531                           	
  4532                           l2672:	
  4533  0F75                     	movlb 4	; select bank4
  4534  0F75  0024               	bsf	(534)^0200h,0	;volatile
  4535  0F76  1416               	goto	l103
  4536  0F77  2F78               	line	75
  4537                           	
  4538                           l102:	
  4539  0F78                     	line	76
  4540                           	
  4541                           l103:	
  4542  0F78                     	return
  4543  0F78  0008               	opt stack 0
  4544                           GLOBAL	__end_of_SetToGetTemp
  4545                           	__end_of_SetToGetTemp:
  4546  0F79                     	signat	_SetToGetTemp,89
  4547                           	global	_PrintLog
  4548                           
  4549 ;; *************** function _PrintLog *****************
  4550 ;; Defined at:
  4551 ;;		line 109 in file "161518_temp_main.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;  iText           1    wreg     PTR unsigned char 
  4554 ;;		 -> wInterruptText(75), 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  iText           1    4[BANK1 ] PTR unsigned char 
  4557 ;;		 -> wInterruptText(75), 
  4558 ;;  wInterruptTe    1    3[BANK1 ] unsigned char 
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  1    wreg      void 
  4561 ;; Registers used:
  4562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4569 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  4570 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
       0       0
  4571 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
       0       0
  4572 ;;Total ram usage:        4 bytes
  4573 ;; Hardware stack levels used:    1
  4574 ;; Hardware stack levels required when called:    9
  4575 ;; This function calls:
  4576 ;;		_lcdWriteText
  4577 ;;		_memset
  4578 ;;		_strlen
  4579 ;; This function is called by:
  4580 ;;		_main
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4584                           	line	109
  4585                           global __ptext14
  4586                           __ptext14:	;psect for function _PrintLog
  4587  07C9                     psect	text14
  4588                           	file	"161518_temp_main.c"
  4589                           	line	109
  4590                           	global	__size_of_PrintLog
  4591                           	__size_of_PrintLog	equ	__end_of_PrintLog-_PrintLog
  4592  0036                     	
  4593                           _PrintLog:	
  4594  07C9                     ;incstack = 0
  4595                           	opt	stack 6
  4596                           ; Regs used in _PrintLog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4597                           ;PrintLog@iText stored from wreg
  4598                           	movlb 1	; select bank1
  4599  07C9  0021               	movwf	(PrintLog@iText)^080h
  4600  07CA  00B8               	line	111
  4601                           	
  4602                           l2704:	
  4603  07CB                     	movf	(PrintLog@iText)^080h,w
  4604  07CB  0838               	movlb 0	; select bank0
  4605  07CC  0020               	movwf	(strlen@s)
  4606  07CD  00B0               	movlw	0x1
  4607  07CE  3001               
  4608                           	movwf	(strlen@s+1)
  4609  07CF  00B1               	fcall	_strlen
  4610  07D0  318F  270A  3187   	movlb 0	; select bank0
  4611  07D3  0020               	movf	(0+(?_strlen)),w
  4612  07D4  0830               	movlb 1	; select bank1
  4613  07D5  0021               	movwf	(??_PrintLog+0)^080h+0
  4614  07D6  00B5               	movf	(??_PrintLog+0)^080h+0,w
  4615  07D7  0835               	movwf	(PrintLog@wInterruptTextLen)^080h
  4616  07D8  00B7               	line	113
  4617                           	
  4618                           l2706:	
  4619  07D9                     	movf	((PrintLog@wInterruptTextLen)^080h),w
  4620  07D9  0837               	btfsc	status,2
  4621  07DA  1903               	goto	u1851
  4622  07DB  2FDD               	goto	u1850
  4623  07DC  2FDE               u1851:
  4624  07DD                     	goto	l119
  4625  07DD  2FFE               u1850:
  4626  07DE                     	line	115
  4627                           	
  4628                           l2708:	
  4629  07DE                     	movf	(PrintLog@iText)^080h,w
  4630  07DE  0838               	movlb 0	; select bank0
  4631  07DF  0020               	movwf	(lcdWriteText@iText)
  4632  07E0  00BD               	movlw	0x1
  4633  07E1  3001               
  4634                           	movwf	(lcdWriteText@iText+1)
  4635  07E2  00BE               	fcall	_lcdWriteText
  4636  07E3  318F  27CF  3187   	line	116
  4637                           	
  4638                           l2710:	
  4639  07E6                     	movlb 1	; select bank1
  4640  07E6  0021               	movf	(PrintLog@iText)^080h,w
  4641  07E7  0838               	movlb 0	; select bank0
  4642  07E8  0020               	movwf	(memset@dest)
  4643  07E9  00B0               	movlw	0x1
  4644  07EA  3001               
  4645                           	movwf	(memset@dest+1)
  4646  07EB  00B1               	movlw	0
  4647  07EC  3000               	movwf	(memset@c)
  4648  07ED  00B2               	movwf	(memset@c+1)
  4649  07EE  00B3               	movlb 1	; select bank1
  4650  07EF  0021               	movf	(PrintLog@wInterruptTextLen)^080h,w
  4651  07F0  0837               	movwf	(??_PrintLog+0)^080h+0
  4652  07F1  00B5               	clrf	(??_PrintLog+0)^080h+0+1
  4653  07F2  01B6               	movf	0+(??_PrintLog+0)^080h+0,w
  4654  07F3  0835               	movlb 0	; select bank0
  4655  07F4  0020               	movwf	(memset@n)
  4656  07F5  00B4               	movlb 1	; select bank1
  4657  07F6  0021               	movf	1+(??_PrintLog+0)^080h+0,w
  4658  07F7  0836               	movlb 0	; select bank0
  4659  07F8  0020               	movwf	(memset@n+1)
  4660  07F9  00B5               	fcall	_memset
  4661  07FA  3183  23B5  3187   	goto	l119
  4662  07FD  2FFE               	line	117
  4663                           	
  4664                           l118:	
  4665  07FE                     	line	118
  4666                           	
  4667                           l119:	
  4668  07FE                     	return
  4669  07FE  0008               	opt stack 0
  4670                           GLOBAL	__end_of_PrintLog
  4671                           	__end_of_PrintLog:
  4672  07FF                     	signat	_PrintLog,4217
  4673                           	global	_lcdWriteText
  4674                           
  4675 ;; *************** function _lcdWriteText *****************
  4676 ;; Defined at:
  4677 ;;		line 41 in file "LCD_hd44780u_qy_2004a.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;  iText           2   29[BANK0 ] PTR unsigned char 
  4680 ;;		 -> STR_6(16), STR_5(16), STR_4(16), STR_3(16), 
  4681 ;;		 -> main@wConv(4), wInterruptText(75), 
  4682 ;; Auto vars:     Size  Location     Type
  4683 ;;  wCharReading    1    0[BANK1 ] unsigned char 
  4684 ;; Return value:  Size  Location     Type
  4685 ;;                  1    wreg      void 
  4686 ;; Registers used:
  4687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4688 ;; Tracked objects:
  4689 ;;		On entry : 0/0
  4690 ;;		On exit  : 0/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4693 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  4694 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  4695 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  4696 ;;      Totals:         0       5       1       0       0       0       0       0       0       0       0       0       
       0       0
  4697 ;;Total ram usage:        6 bytes
  4698 ;; Hardware stack levels used:    1
  4699 ;; Hardware stack levels required when called:    8
  4700 ;; This function calls:
  4701 ;;		_writeTxtChk
  4702 ;; This function is called by:
  4703 ;;		_PrintLog
  4704 ;;		_main
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  4708                           	file	"LCD_hd44780u_qy_2004a.c"
  4709                           	line	41
  4710                           global __ptext15
  4711                           __ptext15:	;psect for function _lcdWriteText
  4712  0FCF                     psect	text15
  4713                           	file	"LCD_hd44780u_qy_2004a.c"
  4714                           	line	41
  4715                           	global	__size_of_lcdWriteText
  4716                           	__size_of_lcdWriteText	equ	__end_of_lcdWriteText-_lcdWriteText
  4717  0031                     	
  4718                           _lcdWriteText:	
  4719  0FCF                     ;incstack = 0
  4720                           	opt	stack 7
  4721                           ; Regs used in _lcdWriteText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4722                           	line	43
  4723                           	
  4724                           l2598:	
  4725  0FCF                     ;LCD_hd44780u_qy_2004a.c: 41: void lcdWriteText(char *iText);LCD_hd44780u_qy_2004a.c: 42
                                 :  {;LCD_hd44780u_qy_2004a.c: 43:   unsigned char wCharReadingPos = 0;
  4726                           	movlb 1	; select bank1
  4727  0FCF  0021               	clrf	(lcdWriteText@wCharReadingPos)^080h
  4728  0FD0  01B4               	line	44
  4729                           ;LCD_hd44780u_qy_2004a.c: 44:   while( iText[wCharReadingPos] != 0)
  4730                           	goto	l2604
  4731  0FD1  2FEB               	
  4732                           l225:	
  4733  0FD2                     	line	46
  4734                           	
  4735                           l2600:	
  4736  0FD2                     ;LCD_hd44780u_qy_2004a.c: 45:   {;LCD_hd44780u_qy_2004a.c: 46:     writeTxtChk(iText[wCh
                                 arReadingPos]);
  4737                           	movlb 0	; select bank0
  4738  0FD2  0020               	movf	(lcdWriteText@iText+1),w
  4739  0FD3  083E               	movwf	(??_lcdWriteText+0)+0+1
  4740  0FD4  00C0               	movf	(lcdWriteText@iText),w
  4741  0FD5  083D               	movwf	(??_lcdWriteText+0)+0
  4742  0FD6  00BF               	movlb 1	; select bank1
  4743  0FD7  0021               	movf	(lcdWriteText@wCharReadingPos)^080h,w
  4744  0FD8  0834               	movlb 0	; select bank0
  4745  0FD9  0020               	addwf	(??_lcdWriteText+0)+0,w
  4746  0FDA  073F               	movwf	fsr0l
  4747  0FDB  0084               	movf	(??_lcdWriteText+0)+1,w
  4748  0FDC  0840               	skipnc
  4749  0FDD  1803               	incf	(??_lcdWriteText+0)+1,w
  4750  0FDE  0A40               	movwf	fsr0h
  4751  0FDF  0085               
  4752                           	movf	indf0,w ;code access
  4753  0FE0  0800               	fcall	_writeTxtChk
  4754  0FE1  3184  2486  318F   	line	47
  4755                           	
  4756                           l2602:	
  4757  0FE4                     ;LCD_hd44780u_qy_2004a.c: 47:     wCharReadingPos++;
  4758                           	movlw	low(01h)
  4759  0FE4  3001               	movlb 0	; select bank0
  4760  0FE5  0020               	movwf	(??_lcdWriteText+0)+0
  4761  0FE6  00BF               	movf	(??_lcdWriteText+0)+0,w
  4762  0FE7  083F               	movlb 1	; select bank1
  4763  0FE8  0021               	addwf	(lcdWriteText@wCharReadingPos)^080h,f
  4764  0FE9  07B4               	goto	l2604
  4765  0FEA  2FEB               	line	48
  4766                           ;LCD_hd44780u_qy_2004a.c: 48:   }
  4767                           	
  4768                           l224:	
  4769  0FEB                     	line	44
  4770                           	
  4771                           l2604:	
  4772  0FEB                     ;LCD_hd44780u_qy_2004a.c: 44:   while( iText[wCharReadingPos] != 0)
  4773                           	movlb 0	; select bank0
  4774  0FEB  0020               	movf	(lcdWriteText@iText+1),w
  4775  0FEC  083E               	movwf	(??_lcdWriteText+0)+0+1
  4776  0FED  00C0               	movf	(lcdWriteText@iText),w
  4777  0FEE  083D               	movwf	(??_lcdWriteText+0)+0
  4778  0FEF  00BF               	movlb 1	; select bank1
  4779  0FF0  0021               	movf	(lcdWriteText@wCharReadingPos)^080h,w
  4780  0FF1  0834               	movlb 0	; select bank0
  4781  0FF2  0020               	addwf	(??_lcdWriteText+0)+0,w
  4782  0FF3  073F               	movwf	fsr0l
  4783  0FF4  0084               	movf	(??_lcdWriteText+0)+1,w
  4784  0FF5  0840               	skipnc
  4785  0FF6  1803               	incf	(??_lcdWriteText+0)+1,w
  4786  0FF7  0A40               	movwf	fsr0h
  4787  0FF8  0085               
  4788                           	moviw	fsr0++
  4789  0FF9  0012               	btfss	status,2
  4790  0FFA  1D03               	goto	u1671
  4791  0FFB  2FFD               	goto	u1670
  4792  0FFC  2FFE               u1671:
  4793  0FFD                     	goto	l2600
  4794  0FFD  2FD2               u1670:
  4795  0FFE                     	goto	l227
  4796  0FFE  2FFF               	
  4797                           l226:	
  4798  0FFF                     	line	50
  4799                           	
  4800                           l227:	
  4801  0FFF                     	return
  4802  0FFF  0008               	opt stack 0
  4803                           GLOBAL	__end_of_lcdWriteText
  4804                           	__end_of_lcdWriteText:
  4805  1000                     	signat	_lcdWriteText,4217
  4806                           	global	_writeTxtChk
  4807                           
  4808 ;; *************** function _writeTxtChk *****************
  4809 ;; Defined at:
  4810 ;;		line 79 in file "LCD_hd44780u_qy_2004a.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;  iOpCode         1    wreg     unsigned char 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  iOpCode         1   28[BANK0 ] unsigned char 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  1    wreg      void 
  4817 ;; Registers used:
  4818 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4825 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4826 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  4827 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  4828 ;;Total ram usage:        3 bytes
  4829 ;; Hardware stack levels used:    1
  4830 ;; Hardware stack levels required when called:    7
  4831 ;; This function calls:
  4832 ;;		_SetToSendDataToLCD
  4833 ;;		_setCursorPosition
  4834 ;;		_setData
  4835 ;;		_waitLCDBusy
  4836 ;; This function is called by:
  4837 ;;		_lcdWriteText
  4838 ;;		_lcdWriteRotText
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  4842                           	line	79
  4843                           global __ptext16
  4844                           __ptext16:	;psect for function _writeTxtChk
  4845  0486                     psect	text16
  4846                           	file	"LCD_hd44780u_qy_2004a.c"
  4847                           	line	79
  4848                           	global	__size_of_writeTxtChk
  4849                           	__size_of_writeTxtChk	equ	__end_of_writeTxtChk-_writeTxtChk
  4850  0097                     	
  4851                           _writeTxtChk:	
  4852  0486                     ;incstack = 0
  4853                           	opt	stack 7
  4854                           ; Regs used in _writeTxtChk: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4855                           ;writeTxtChk@iOpCode stored from wreg
  4856                           	movlb 0	; select bank0
  4857  0486  0020               	movwf	(writeTxtChk@iOpCode)
  4858  0487  00BC               	line	81
  4859                           	
  4860                           l2476:	
  4861  0488                     ;LCD_hd44780u_qy_2004a.c: 79: void writeTxtChk(char iOpCode);LCD_hd44780u_qy_2004a.c: 80
                                 : {;LCD_hd44780u_qy_2004a.c: 81:   SetToSendDataToLCD();
  4862                           	fcall	_SetToSendDataToLCD
  4863  0488  318E  261A  3184   	line	82
  4864                           	
  4865                           l2478:	
  4866  048B                     ;LCD_hd44780u_qy_2004a.c: 82:   PORTAbits.RA4 = 1;
  4867                           	movlb 0	; select bank0
  4868  048B  0020               	bsf	(12),4	;volatile
  4869  048C  160C               	line	83
  4870                           	
  4871                           l2480:	
  4872  048D                     ;LCD_hd44780u_qy_2004a.c: 83:   PORTAbits.RA7 = 0;
  4873                           	bcf	(12),7	;volatile
  4874  048D  138C               	line	84
  4875                           	
  4876                           l2482:	
  4877  048E                     ;LCD_hd44780u_qy_2004a.c: 84:   if(iOpCode == '\n')
  4878                           		movlw	10
  4879  048E  300A               	xorwf	((writeTxtChk@iOpCode)),w
  4880  048F  063C               	btfss	status,2
  4881  0490  1D03               	goto	u1541
  4882  0491  2C93               	goto	u1540
  4883  0492  2C94               u1541:
  4884  0493                     	goto	l2512
  4885  0493  2CE6               u1540:
  4886  0494                     	line	86
  4887                           	
  4888                           l2484:	
  4889  0494                     ;LCD_hd44780u_qy_2004a.c: 85:   {;LCD_hd44780u_qy_2004a.c: 86:    if(mWritingPosition < 
                                 20)
  4890                           	movlw	low(014h)
  4891  0494  3014               	subwf	(_mWritingPosition),w
  4892  0495  025D               	skipnc
  4893  0496  1803               	goto	u1551
  4894  0497  2C99               	goto	u1550
  4895  0498  2C9A               u1551:
  4896  0499                     	goto	l2488
  4897  0499  2CA0               u1550:
  4898  049A                     	line	88
  4899                           	
  4900                           l2486:	
  4901  049A                     ;LCD_hd44780u_qy_2004a.c: 87:    {;LCD_hd44780u_qy_2004a.c: 88:        setCursorPosition
                                 (1,0);
  4902                           	clrf	(setCursorPosition@iPosition)
  4903  049A  01B5               	movlw	low(01h)
  4904  049B  3001               	fcall	_setCursorPosition
  4905  049C  3185  258E  3184   	line	89
  4906                           ;LCD_hd44780u_qy_2004a.c: 89:    }
  4907                           	goto	l249
  4908  049F  2D1C               	line	90
  4909                           ;LCD_hd44780u_qy_2004a.c: 90:    else if(mWritingPosition < 40)
  4910                           	
  4911                           l243:	
  4912  04A0                     	
  4913                           l2488:	
  4914  04A0                     	movlw	low(028h)
  4915  04A0  3028               	movlb 0	; select bank0
  4916  04A1  0020               	subwf	(_mWritingPosition),w
  4917  04A2  025D               	skipnc
  4918  04A3  1803               	goto	u1561
  4919  04A4  2CA6               	goto	u1560
  4920  04A5  2CA7               u1561:
  4921  04A6                     	goto	l2492
  4922  04A6  2CAD               u1560:
  4923  04A7                     	line	92
  4924                           	
  4925                           l2490:	
  4926  04A7                     ;LCD_hd44780u_qy_2004a.c: 91:    {;LCD_hd44780u_qy_2004a.c: 92:        setCursorPosition
                                 (2,0);
  4927                           	clrf	(setCursorPosition@iPosition)
  4928  04A7  01B5               	movlw	low(02h)
  4929  04A8  3002               	fcall	_setCursorPosition
  4930  04A9  3185  258E  3184   	line	93
  4931                           ;LCD_hd44780u_qy_2004a.c: 93:    }
  4932                           	goto	l249
  4933  04AC  2D1C               	line	94
  4934                           ;LCD_hd44780u_qy_2004a.c: 94:    else if(mWritingPosition < 60)
  4935                           	
  4936                           l245:	
  4937  04AD                     	
  4938                           l2492:	
  4939  04AD                     	movlw	low(03Ch)
  4940  04AD  303C               	movlb 0	; select bank0
  4941  04AE  0020               	subwf	(_mWritingPosition),w
  4942  04AF  025D               	skipnc
  4943  04B0  1803               	goto	u1571
  4944  04B1  2CB3               	goto	u1570
  4945  04B2  2CB4               u1571:
  4946  04B3                     	goto	l2496
  4947  04B3  2CBA               u1570:
  4948  04B4                     	line	96
  4949                           	
  4950                           l2494:	
  4951  04B4                     ;LCD_hd44780u_qy_2004a.c: 95:    {;LCD_hd44780u_qy_2004a.c: 96:        setCursorPosition
                                 (3,0);
  4952                           	clrf	(setCursorPosition@iPosition)
  4953  04B4  01B5               	movlw	low(03h)
  4954  04B5  3003               	fcall	_setCursorPosition
  4955  04B6  3185  258E  3184   	line	97
  4956                           ;LCD_hd44780u_qy_2004a.c: 97:    }
  4957                           	goto	l249
  4958  04B9  2D1C               	line	98
  4959                           ;LCD_hd44780u_qy_2004a.c: 98:    else
  4960                           	
  4961                           l247:	
  4962  04BA                     	line	100
  4963                           	
  4964                           l2496:	
  4965  04BA                     ;LCD_hd44780u_qy_2004a.c: 99:    {;LCD_hd44780u_qy_2004a.c: 100:        setCursorPositio
                                 n(0,0);
  4966                           	movlb 0	; select bank0
  4967  04BA  0020               	clrf	(setCursorPosition@iPosition)
  4968  04BB  01B5               	movlw	low(0)
  4969  04BC  3000               	fcall	_setCursorPosition
  4970  04BD  3185  258E  3184   	goto	l249
  4971  04C0  2D1C               	line	101
  4972                           ;LCD_hd44780u_qy_2004a.c: 101:    }
  4973                           	
  4974                           l248:	
  4975  04C1                     	goto	l249
  4976  04C1  2D1C               	
  4977                           l246:	
  4978  04C2                     	goto	l249
  4979  04C2  2D1C               	
  4980                           l244:	
  4981  04C3                     	goto	l249
  4982  04C3  2D1C               	line	102
  4983                           	
  4984                           l2498:	
  4985  04C4                     ;LCD_hd44780u_qy_2004a.c: 102:    return;
  4986                           	goto	l249
  4987  04C4  2D1C               	line	103
  4988                           ;LCD_hd44780u_qy_2004a.c: 103:   }
  4989                           	
  4990                           l242:	
  4991  04C5                     	line	104
  4992                           ;LCD_hd44780u_qy_2004a.c: 104:   switch(mWritingPosition)
  4993                           	goto	l2512
  4994  04C5  2CE6               	line	106
  4995                           ;LCD_hd44780u_qy_2004a.c: 105:   {;LCD_hd44780u_qy_2004a.c: 106:     case 20:
  4996                           	
  4997                           l251:	
  4998  04C6                     	line	107
  4999                           	
  5000                           l2500:	
  5001  04C6                     ;LCD_hd44780u_qy_2004a.c: 107:       setCursorPosition(1,0);
  5002                           	movlb 0	; select bank0
  5003  04C6  0020               	clrf	(setCursorPosition@iPosition)
  5004  04C7  01B5               	movlw	low(01h)
  5005  04C8  3001               	fcall	_setCursorPosition
  5006  04C9  3185  258E  3184   	line	108
  5007                           ;LCD_hd44780u_qy_2004a.c: 108:       break;
  5008                           	goto	l2514
  5009  04CC  2CFD               	line	109
  5010                           ;LCD_hd44780u_qy_2004a.c: 109:     case 40:
  5011                           	
  5012                           l253:	
  5013  04CD                     	line	110
  5014                           	
  5015                           l2502:	
  5016  04CD                     ;LCD_hd44780u_qy_2004a.c: 110:       setCursorPosition(2,0);
  5017                           	movlb 0	; select bank0
  5018  04CD  0020               	clrf	(setCursorPosition@iPosition)
  5019  04CE  01B5               	movlw	low(02h)
  5020  04CF  3002               	fcall	_setCursorPosition
  5021  04D0  3185  258E  3184   	line	111
  5022                           ;LCD_hd44780u_qy_2004a.c: 111:       break;
  5023                           	goto	l2514
  5024  04D3  2CFD               	line	112
  5025                           ;LCD_hd44780u_qy_2004a.c: 112:     case 60:
  5026                           	
  5027                           l254:	
  5028  04D4                     	line	113
  5029                           	
  5030                           l2504:	
  5031  04D4                     ;LCD_hd44780u_qy_2004a.c: 113:       setCursorPosition(3,0);
  5032                           	movlb 0	; select bank0
  5033  04D4  0020               	clrf	(setCursorPosition@iPosition)
  5034  04D5  01B5               	movlw	low(03h)
  5035  04D6  3003               	fcall	_setCursorPosition
  5036  04D7  3185  258E  3184   	line	114
  5037                           ;LCD_hd44780u_qy_2004a.c: 114:       break;
  5038                           	goto	l2514
  5039  04DA  2CFD               	line	115
  5040                           ;LCD_hd44780u_qy_2004a.c: 115:     case 80:
  5041                           	
  5042                           l255:	
  5043  04DB                     	line	116
  5044                           	
  5045                           l2506:	
  5046  04DB                     ;LCD_hd44780u_qy_2004a.c: 116:       setCursorPosition(0,0);
  5047                           	movlb 0	; select bank0
  5048  04DB  0020               	clrf	(setCursorPosition@iPosition)
  5049  04DC  01B5               	movlw	low(0)
  5050  04DD  3000               	fcall	_setCursorPosition
  5051  04DE  3185  258E  3184   	line	117
  5052                           	
  5053                           l2508:	
  5054  04E1                     ;LCD_hd44780u_qy_2004a.c: 117:       mWritingPosition = 0;
  5055                           	movlb 0	; select bank0
  5056  04E1  0020               	clrf	(_mWritingPosition)
  5057  04E2  01DD               	line	118
  5058                           ;LCD_hd44780u_qy_2004a.c: 118:       break;
  5059                           	goto	l2514
  5060  04E3  2CFD               	line	119
  5061                           ;LCD_hd44780u_qy_2004a.c: 119:     default:
  5062                           	
  5063                           l256:	
  5064  04E4                     	line	120
  5065                           ;LCD_hd44780u_qy_2004a.c: 120:       break;
  5066                           	goto	l2514
  5067  04E4  2CFD               	line	121
  5068                           	
  5069                           l2510:	
  5070  04E5                     ;LCD_hd44780u_qy_2004a.c: 121:   }
  5071                           	goto	l2514
  5072  04E5  2CFD               	
  5073                           l250:	
  5074  04E6                     	
  5075                           l2512:	
  5076  04E6                     	movlb 0	; select bank0
  5077  04E6  0020               	movf	(_mWritingPosition),w
  5078  04E7  085D               	movwf	(??_writeTxtChk+0)+0
  5079  04E8  00BA               	clrf	(??_writeTxtChk+0)+0+1
  5080  04E9  01BB               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5081                           ; Switch size 1, requested type "space"
  5082                           ; Number of cases is 1, Range of values is 0 to 0
  5083                           ; switch strategies available:
  5084                           ; Name         Instructions Cycles
  5085                           ; simple_byte            4     3 (average)
  5086                           ; direct_byte            8     6 (fixed)
  5087                           ; jumptable            260     6 (fixed)
  5088                           ;	Chosen strategy is simple_byte
  5089                           
  5090                           	movf 1+(??_writeTxtChk+0)+0,w
  5091  04EA  083B               	opt asmopt_push
  5092                           	opt asmopt_off
  5093                           	xorlw	0^0	; case 0
  5094  04EB  3A00               	skipnz
  5095  04EC  1903               	goto	l3190
  5096  04ED  2CEF               	goto	l2514
  5097  04EE  2CFD               	opt asmopt_pop
  5098                           	
  5099                           l3190:	
  5100  04EF                     ; Switch size 1, requested type "space"
  5101                           ; Number of cases is 4, Range of values is 20 to 80
  5102                           ; switch strategies available:
  5103                           ; Name         Instructions Cycles
  5104                           ; simple_byte           13     7 (average)
  5105                           ; direct_byte          131     9 (fixed)
  5106                           ; jumptable            263     9 (fixed)
  5107                           ;	Chosen strategy is simple_byte
  5108                           
  5109                           	movf 0+(??_writeTxtChk+0)+0,w
  5110  04EF  083A               	opt asmopt_push
  5111                           	opt asmopt_off
  5112                           	xorlw	20^0	; case 20
  5113  04F0  3A14               	skipnz
  5114  04F1  1903               	goto	l2500
  5115  04F2  2CC6               	xorlw	40^20	; case 40
  5116  04F3  3A3C               	skipnz
  5117  04F4  1903               	goto	l2502
  5118  04F5  2CCD               	xorlw	60^40	; case 60
  5119  04F6  3A14               	skipnz
  5120  04F7  1903               	goto	l2504
  5121  04F8  2CD4               	xorlw	80^60	; case 80
  5122  04F9  3A6C               	skipnz
  5123  04FA  1903               	goto	l2506
  5124  04FB  2CDB               	goto	l2514
  5125  04FC  2CFD               	opt asmopt_pop
  5126                           
  5127                           	
  5128                           l252:	
  5129  04FD                     	line	122
  5130                           	
  5131                           l2514:	
  5132  04FD                     ;LCD_hd44780u_qy_2004a.c: 122:   waitLCDBusy();
  5133                           	fcall	_waitLCDBusy
  5134  04FD  318F  27A2  3184   	line	123
  5135                           	
  5136                           l2516:	
  5137  0500                     ;LCD_hd44780u_qy_2004a.c: 123:   SetToSendDataToLCD();
  5138                           	fcall	_SetToSendDataToLCD
  5139  0500  318E  261A  3184   	line	124
  5140                           	
  5141                           l2518:	
  5142  0503                     ;LCD_hd44780u_qy_2004a.c: 124:   PORTAbits.RA4 = 1;
  5143                           	movlb 0	; select bank0
  5144  0503  0020               	bsf	(12),4	;volatile
  5145  0504  160C               	line	125
  5146                           	
  5147                           l2520:	
  5148  0505                     ;LCD_hd44780u_qy_2004a.c: 125:   PORTAbits.RA7 = 0;
  5149                           	bcf	(12),7	;volatile
  5150  0505  138C               	line	126
  5151                           	
  5152                           l2522:	
  5153  0506                     ;LCD_hd44780u_qy_2004a.c: 126:   setData(iOpCode >> 4);
  5154                           	movf	(writeTxtChk@iOpCode),w
  5155  0506  083C               	movwf	(??_writeTxtChk+0)+0
  5156  0507  00BA               	movlw	04h
  5157  0508  3004               u1585:
  5158  0509                     	lsrf	(??_writeTxtChk+0)+0,f
  5159  0509  36BA               	decfsz	wreg,f
  5160  050A  0B89               	goto	u1585
  5161  050B  2D09               	movf	0+(??_writeTxtChk+0)+0,w
  5162  050C  083A               	fcall	_setData
  5163  050D  3187  2753  3184   	line	127
  5164                           	
  5165                           l2524:	
  5166  0510                     ;LCD_hd44780u_qy_2004a.c: 127:   setData(iOpCode);
  5167                           	movlb 0	; select bank0
  5168  0510  0020               	movf	(writeTxtChk@iOpCode),w
  5169  0511  083C               	fcall	_setData
  5170  0512  3187  2753  3184   	line	128
  5171                           	
  5172                           l2526:	
  5173  0515                     ;LCD_hd44780u_qy_2004a.c: 128:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  5174                           		opt asmopt_push
  5175                           	opt asmopt_off
  5176                           	nop2	;2 cycle nop
  5177  0515  3200               	nop2	;2 cycle nop
  5178  0516  3200               	opt asmopt_pop
  5179                           
  5180                           	line	129
  5181                           	
  5182                           l2528:	
  5183  0517                     ;LCD_hd44780u_qy_2004a.c: 129:   mWritingPosition++;
  5184                           	movlw	low(01h)
  5185  0517  3001               	movlb 0	; select bank0
  5186  0518  0020               	movwf	(??_writeTxtChk+0)+0
  5187  0519  00BA               	movf	(??_writeTxtChk+0)+0,w
  5188  051A  083A               	addwf	(_mWritingPosition),f
  5189  051B  07DD               	line	130
  5190                           	
  5191                           l249:	
  5192  051C                     	return
  5193  051C  0008               	opt stack 0
  5194                           GLOBAL	__end_of_writeTxtChk
  5195                           	__end_of_writeTxtChk:
  5196  051D                     	signat	_writeTxtChk,4217
  5197                           	global	_setCursorPosition
  5198                           
  5199 ;; *************** function _setCursorPosition *****************
  5200 ;; Defined at:
  5201 ;;		line 254 in file "LCD_hd44780u_qy_2004a.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;  iLine           1    wreg     unsigned char 
  5204 ;;  iPosition       1   21[BANK0 ] unsigned char 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  iLine           1   24[BANK0 ] unsigned char 
  5207 ;;  wLCDIndex       1   25[BANK0 ] unsigned char 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      void 
  5210 ;; Registers used:
  5211 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5217 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5218 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5219 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5220 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  5221 ;;Total ram usage:        5 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    6
  5224 ;; This function calls:
  5225 ;;		_SetToSendDataToLCD
  5226 ;;		_setData
  5227 ;;		_waitLCDBusy
  5228 ;; This function is called by:
  5229 ;;		_main
  5230 ;;		_writeTxtChk
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5234                           	line	254
  5235                           global __ptext17
  5236                           __ptext17:	;psect for function _setCursorPosition
  5237  058E                     psect	text17
  5238                           	file	"LCD_hd44780u_qy_2004a.c"
  5239                           	line	254
  5240                           	global	__size_of_setCursorPosition
  5241                           	__size_of_setCursorPosition	equ	__end_of_setCursorPosition-_setCursorPosition
  5242  0060                     	
  5243                           _setCursorPosition:	
  5244  058E                     ;incstack = 0
  5245                           	opt	stack 9
  5246                           ; Regs used in _setCursorPosition: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5247                           ;setCursorPosition@iLine stored from wreg
  5248                           	movlb 0	; select bank0
  5249  058E  0020               	movwf	(setCursorPosition@iLine)
  5250  058F  00B8               	line	256
  5251                           	
  5252                           l2424:	
  5253  0590                     ;LCD_hd44780u_qy_2004a.c: 254: void setCursorPosition(char iLine, char iPosition);LCD_hd
                                 44780u_qy_2004a.c: 255: {;LCD_hd44780u_qy_2004a.c: 256:   char wLCDIndex=0;
  5254                           	clrf	(setCursorPosition@wLCDIndex)
  5255  0590  01B9               	line	258
  5256                           ;LCD_hd44780u_qy_2004a.c: 258:   switch(iLine)
  5257                           	goto	l2436
  5258  0591  2DBE               	line	260
  5259                           ;LCD_hd44780u_qy_2004a.c: 259:   {;LCD_hd44780u_qy_2004a.c: 260:       case 0:
  5260                           	
  5261                           l320:	
  5262  0592                     	line	261
  5263                           	
  5264                           l2426:	
  5265  0592                     ;LCD_hd44780u_qy_2004a.c: 261:           wLCDIndex = 0x00 + iPosition;
  5266                           	movf	(setCursorPosition@iPosition),w
  5267  0592  0835               	movwf	(??_setCursorPosition+0)+0
  5268  0593  00B6               	movf	(??_setCursorPosition+0)+0,w
  5269  0594  0836               	movwf	(setCursorPosition@wLCDIndex)
  5270  0595  00B9               	line	262
  5271                           ;LCD_hd44780u_qy_2004a.c: 262:           mWritingPosition = iPosition;
  5272                           	movf	(setCursorPosition@iPosition),w
  5273  0596  0835               	movwf	(??_setCursorPosition+0)+0
  5274  0597  00B6               	movf	(??_setCursorPosition+0)+0,w
  5275  0598  0836               	movwf	(_mWritingPosition)
  5276  0599  00DD               	line	263
  5277                           ;LCD_hd44780u_qy_2004a.c: 263:           break;
  5278                           	goto	l2438
  5279  059A  2DD4               	line	264
  5280                           ;LCD_hd44780u_qy_2004a.c: 264:       case 1:
  5281                           	
  5282                           l322:	
  5283  059B                     	line	265
  5284                           	
  5285                           l2428:	
  5286  059B                     ;LCD_hd44780u_qy_2004a.c: 265:           wLCDIndex = 0x40 + iPosition;
  5287                           	movf	(setCursorPosition@iPosition),w
  5288  059B  0835               	addlw	040h
  5289  059C  3E40               	movwf	(??_setCursorPosition+0)+0
  5290  059D  00B6               	movf	(??_setCursorPosition+0)+0,w
  5291  059E  0836               	movwf	(setCursorPosition@wLCDIndex)
  5292  059F  00B9               	line	266
  5293                           ;LCD_hd44780u_qy_2004a.c: 266:           mWritingPosition = 20 + iPosition;
  5294                           	movf	(setCursorPosition@iPosition),w
  5295  05A0  0835               	addlw	014h
  5296  05A1  3E14               	movwf	(??_setCursorPosition+0)+0
  5297  05A2  00B6               	movf	(??_setCursorPosition+0)+0,w
  5298  05A3  0836               	movwf	(_mWritingPosition)
  5299  05A4  00DD               	line	267
  5300                           ;LCD_hd44780u_qy_2004a.c: 267:           break;
  5301                           	goto	l2438
  5302  05A5  2DD4               	line	268
  5303                           ;LCD_hd44780u_qy_2004a.c: 268:       case 2:
  5304                           	
  5305                           l323:	
  5306  05A6                     	line	269
  5307                           	
  5308                           l2430:	
  5309  05A6                     ;LCD_hd44780u_qy_2004a.c: 269:           wLCDIndex = 0x14 + iPosition;
  5310                           	movf	(setCursorPosition@iPosition),w
  5311  05A6  0835               	addlw	014h
  5312  05A7  3E14               	movwf	(??_setCursorPosition+0)+0
  5313  05A8  00B6               	movf	(??_setCursorPosition+0)+0,w
  5314  05A9  0836               	movwf	(setCursorPosition@wLCDIndex)
  5315  05AA  00B9               	line	270
  5316                           ;LCD_hd44780u_qy_2004a.c: 270:           mWritingPosition = 40 + iPosition;
  5317                           	movf	(setCursorPosition@iPosition),w
  5318  05AB  0835               	addlw	028h
  5319  05AC  3E28               	movwf	(??_setCursorPosition+0)+0
  5320  05AD  00B6               	movf	(??_setCursorPosition+0)+0,w
  5321  05AE  0836               	movwf	(_mWritingPosition)
  5322  05AF  00DD               	line	271
  5323                           ;LCD_hd44780u_qy_2004a.c: 271:           break;
  5324                           	goto	l2438
  5325  05B0  2DD4               	line	272
  5326                           ;LCD_hd44780u_qy_2004a.c: 272:       case 3:
  5327                           	
  5328                           l324:	
  5329  05B1                     	line	273
  5330                           	
  5331                           l2432:	
  5332  05B1                     ;LCD_hd44780u_qy_2004a.c: 273:           wLCDIndex = 0x54 + iPosition;
  5333                           	movf	(setCursorPosition@iPosition),w
  5334  05B1  0835               	addlw	054h
  5335  05B2  3E54               	movwf	(??_setCursorPosition+0)+0
  5336  05B3  00B6               	movf	(??_setCursorPosition+0)+0,w
  5337  05B4  0836               	movwf	(setCursorPosition@wLCDIndex)
  5338  05B5  00B9               	line	274
  5339                           ;LCD_hd44780u_qy_2004a.c: 274:           mWritingPosition = 60 + iPosition;
  5340                           	movf	(setCursorPosition@iPosition),w
  5341  05B6  0835               	addlw	03Ch
  5342  05B7  3E3C               	movwf	(??_setCursorPosition+0)+0
  5343  05B8  00B6               	movf	(??_setCursorPosition+0)+0,w
  5344  05B9  0836               	movwf	(_mWritingPosition)
  5345  05BA  00DD               	line	275
  5346                           ;LCD_hd44780u_qy_2004a.c: 275:           break;
  5347                           	goto	l2438
  5348  05BB  2DD4               	line	276
  5349                           ;LCD_hd44780u_qy_2004a.c: 276:       default:
  5350                           	
  5351                           l325:	
  5352  05BC                     	line	277
  5353                           ;LCD_hd44780u_qy_2004a.c: 277:       break;
  5354                           	goto	l2438
  5355  05BC  2DD4               	line	278
  5356                           	
  5357                           l2434:	
  5358  05BD                     ;LCD_hd44780u_qy_2004a.c: 278:   }
  5359                           	goto	l2438
  5360  05BD  2DD4               	
  5361                           l319:	
  5362  05BE                     	
  5363                           l2436:	
  5364  05BE                     	movf	(setCursorPosition@iLine),w
  5365  05BE  0838               	movwf	(??_setCursorPosition+0)+0
  5366  05BF  00B6               	clrf	(??_setCursorPosition+0)+0+1
  5367  05C0  01B7               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5368                           ; Switch size 1, requested type "space"
  5369                           ; Number of cases is 1, Range of values is 0 to 0
  5370                           ; switch strategies available:
  5371                           ; Name         Instructions Cycles
  5372                           ; simple_byte            4     3 (average)
  5373                           ; direct_byte            8     6 (fixed)
  5374                           ; jumptable            260     6 (fixed)
  5375                           ;	Chosen strategy is simple_byte
  5376                           
  5377                           	movf 1+(??_setCursorPosition+0)+0,w
  5378  05C1  0837               	opt asmopt_push
  5379                           	opt asmopt_off
  5380                           	xorlw	0^0	; case 0
  5381  05C2  3A00               	skipnz
  5382  05C3  1903               	goto	l3192
  5383  05C4  2DC6               	goto	l2438
  5384  05C5  2DD4               	opt asmopt_pop
  5385                           	
  5386                           l3192:	
  5387  05C6                     ; Switch size 1, requested type "space"
  5388                           ; Number of cases is 4, Range of values is 0 to 3
  5389                           ; switch strategies available:
  5390                           ; Name         Instructions Cycles
  5391                           ; simple_byte           13     7 (average)
  5392                           ; direct_byte           14     6 (fixed)
  5393                           ; jumptable            260     6 (fixed)
  5394                           ;	Chosen strategy is simple_byte
  5395                           
  5396                           	movf 0+(??_setCursorPosition+0)+0,w
  5397  05C6  0836               	opt asmopt_push
  5398                           	opt asmopt_off
  5399                           	xorlw	0^0	; case 0
  5400  05C7  3A00               	skipnz
  5401  05C8  1903               	goto	l2426
  5402  05C9  2D92               	xorlw	1^0	; case 1
  5403  05CA  3A01               	skipnz
  5404  05CB  1903               	goto	l2428
  5405  05CC  2D9B               	xorlw	2^1	; case 2
  5406  05CD  3A03               	skipnz
  5407  05CE  1903               	goto	l2430
  5408  05CF  2DA6               	xorlw	3^2	; case 3
  5409  05D0  3A01               	skipnz
  5410  05D1  1903               	goto	l2432
  5411  05D2  2DB1               	goto	l2438
  5412  05D3  2DD4               	opt asmopt_pop
  5413                           
  5414                           	
  5415                           l321:	
  5416  05D4                     	line	280
  5417                           	
  5418                           l2438:	
  5419  05D4                     ;LCD_hd44780u_qy_2004a.c: 280:   waitLCDBusy();
  5420                           	fcall	_waitLCDBusy
  5421  05D4  318F  27A2  3185   	line	282
  5422                           	
  5423                           l2440:	
  5424  05D7                     ;LCD_hd44780u_qy_2004a.c: 282:   SetToSendDataToLCD();
  5425                           	fcall	_SetToSendDataToLCD
  5426  05D7  318E  261A  3185   	line	283
  5427                           	
  5428                           l2442:	
  5429  05DA                     ;LCD_hd44780u_qy_2004a.c: 283:   PORTAbits.RA4 = 0;
  5430                           	movlb 0	; select bank0
  5431  05DA  0020               	bcf	(12),4	;volatile
  5432  05DB  120C               	line	284
  5433                           	
  5434                           l2444:	
  5435  05DC                     ;LCD_hd44780u_qy_2004a.c: 284:   PORTAbits.RA7 = 0;
  5436                           	bcf	(12),7	;volatile
  5437  05DC  138C               	line	285
  5438                           	
  5439                           l2446:	
  5440  05DD                     ;LCD_hd44780u_qy_2004a.c: 285:   setData((wLCDIndex >> 4) | 0x8 );
  5441                           	movf	(setCursorPosition@wLCDIndex),w
  5442  05DD  0839               	movwf	(??_setCursorPosition+0)+0
  5443  05DE  00B6               	movlw	04h
  5444  05DF  3004               u1515:
  5445  05E0                     	lsrf	(??_setCursorPosition+0)+0,f
  5446  05E0  36B6               	decfsz	wreg,f
  5447  05E1  0B89               	goto	u1515
  5448  05E2  2DE0               	movf	0+(??_setCursorPosition+0)+0,w
  5449  05E3  0836               	iorlw	08h
  5450  05E4  3808               	fcall	_setData
  5451  05E5  3187  2753  3185   	line	286
  5452                           	
  5453                           l2448:	
  5454  05E8                     ;LCD_hd44780u_qy_2004a.c: 286:   setData(wLCDIndex);
  5455                           	movlb 0	; select bank0
  5456  05E8  0020               	movf	(setCursorPosition@wLCDIndex),w
  5457  05E9  0839               	fcall	_setData
  5458  05EA  3187  2753  3185   	line	288
  5459                           	
  5460                           l326:	
  5461  05ED                     	return
  5462  05ED  0008               	opt stack 0
  5463                           GLOBAL	__end_of_setCursorPosition
  5464                           	__end_of_setCursorPosition:
  5465  05EE                     	signat	_setCursorPosition,8313
  5466                           	global	_waitLCDBusy
  5467                           
  5468 ;; *************** function _waitLCDBusy *****************
  5469 ;; Defined at:
  5470 ;;		line 162 in file "LCD_hd44780u_qy_2004a.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;		None
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;  busyFlag        2   19[BANK0 ] int 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  1    wreg      void 
  5477 ;; Registers used:
  5478 ;;		wreg, status,2, status,0, pclath, cstack
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5485 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5486 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  5487 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  5488 ;;Total ram usage:        5 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; Hardware stack levels required when called:    5
  5491 ;; This function calls:
  5492 ;;		_SetToReadDataFromLCD
  5493 ;; This function is called by:
  5494 ;;		_writeTxtChk
  5495 ;;		_writeInsChk
  5496 ;;		_setCursorPosition
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5500                           	line	162
  5501                           global __ptext18
  5502                           __ptext18:	;psect for function _waitLCDBusy
  5503  0FA2                     psect	text18
  5504                           	file	"LCD_hd44780u_qy_2004a.c"
  5505                           	line	162
  5506                           	global	__size_of_waitLCDBusy
  5507                           	__size_of_waitLCDBusy	equ	__end_of_waitLCDBusy-_waitLCDBusy
  5508  002D                     	
  5509                           _waitLCDBusy:	
  5510  0FA2                     ;incstack = 0
  5511                           	opt	stack 8
  5512                           ; Regs used in _waitLCDBusy: [wreg+status,2+status,0+pclath+cstack]
  5513                           	line	164
  5514                           	
  5515                           l2408:	
  5516  0FA2                     ;LCD_hd44780u_qy_2004a.c: 164:   PORTAbits.RA4 = 0;
  5517                           	movlb 0	; select bank0
  5518  0FA2  0020               	bcf	(12),4	;volatile
  5519  0FA3  120C               	line	165
  5520                           ;LCD_hd44780u_qy_2004a.c: 165:   PORTAbits.RA7 = 1;
  5521                           	bsf	(12),7	;volatile
  5522  0FA4  178C               	line	167
  5523                           	
  5524                           l2410:	
  5525  0FA5                     ;LCD_hd44780u_qy_2004a.c: 167:   SetToReadDataFromLCD();
  5526                           	fcall	_SetToReadDataFromLCD
  5527  0FA5  318E  2620  318F   	line	169
  5528                           	
  5529                           l2412:	
  5530  0FA8                     ;LCD_hd44780u_qy_2004a.c: 169:   int busyFlag = 1;
  5531                           	movlw	01h
  5532  0FA8  3001               	movlb 0	; select bank0
  5533  0FA9  0020               	movwf	(waitLCDBusy@busyFlag)
  5534  0FAA  00B3               	movlw	0
  5535  0FAB  3000               	movwf	((waitLCDBusy@busyFlag))+1
  5536  0FAC  00B4               	line	170
  5537                           ;LCD_hd44780u_qy_2004a.c: 170:   while(busyFlag == 1)
  5538                           	goto	l271
  5539  0FAD  2FC6               	
  5540                           l272:	
  5541  0FAE                     	line	173
  5542                           ;LCD_hd44780u_qy_2004a.c: 171:   {;LCD_hd44780u_qy_2004a.c: 173:     PORTAbits.RA5 = 1;

  5543                           	bsf	(12),5	;volatile
  5544  0FAE  168C               	line	174
  5545                           ;LCD_hd44780u_qy_2004a.c: 174:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  5546                           		opt asmopt_push
  5547                           	opt asmopt_off
  5548                           	nop2	;2 cycle nop
  5549  0FAF  3200               	nop2	;2 cycle nop
  5550  0FB0  3200               	opt asmopt_pop
  5551                           
  5552                           	line	175
  5553                           	
  5554                           l2414:	
  5555  0FB1                     ;LCD_hd44780u_qy_2004a.c: 175:     busyFlag = PORTAbits.RA3;
  5556                           	movlb 0	; select bank0
  5557  0FB1  0020               	rrf	(12),w	;volatile
  5558  0FB2  0C0C               	movwf	(??_waitLCDBusy+0)+0
  5559  0FB3  00B0               	rrf	(??_waitLCDBusy+0)+0,f
  5560  0FB4  0CB0               	rrf	(??_waitLCDBusy+0)+0,w
  5561  0FB5  0C30               	andlw	(1<<1)-1
  5562  0FB6  3901               	movwf	(??_waitLCDBusy+1)+0
  5563  0FB7  00B1               	clrf	(??_waitLCDBusy+1)+0+1
  5564  0FB8  01B2               	movf	0+(??_waitLCDBusy+1)+0,w
  5565  0FB9  0831               	movwf	(waitLCDBusy@busyFlag)
  5566  0FBA  00B3               	movf	1+(??_waitLCDBusy+1)+0,w
  5567  0FBB  0832               	movwf	(waitLCDBusy@busyFlag+1)
  5568  0FBC  00B4               	line	176
  5569                           	
  5570                           l2416:	
  5571  0FBD                     ;LCD_hd44780u_qy_2004a.c: 176:     PORTAbits.RA5 = 0;
  5572                           	bcf	(12),5	;volatile
  5573  0FBD  128C               	line	177
  5574                           	
  5575                           l2418:	
  5576  0FBE                     ;LCD_hd44780u_qy_2004a.c: 177:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  5577                           		opt asmopt_push
  5578                           	opt asmopt_off
  5579                           	nop2	;2 cycle nop
  5580  0FBE  3200               	nop2	;2 cycle nop
  5581  0FBF  3200               	nop2	;2 cycle nop
  5582  0FC0  3200               	nop2	;2 cycle nop
  5583  0FC1  3200               	opt asmopt_pop
  5584                           
  5585                           	line	179
  5586                           	
  5587                           l2420:	
  5588  0FC2                     ;LCD_hd44780u_qy_2004a.c: 179:     PORTAbits.RA5 = 1;
  5589                           	movlb 0	; select bank0
  5590  0FC2  0020               	bsf	(12),5	;volatile
  5591  0FC3  168C               	line	180
  5592                           	
  5593                           l2422:	
  5594  0FC4                     ;LCD_hd44780u_qy_2004a.c: 180:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  5595                           		opt asmopt_push
  5596                           	opt asmopt_off
  5597                           	nop2	;2 cycle nop
  5598  0FC4  3200               	nop2	;2 cycle nop
  5599  0FC5  3200               	opt asmopt_pop
  5600                           
  5601                           	line	181
  5602                           ;LCD_hd44780u_qy_2004a.c: 181:   }
  5603                           	
  5604                           l271:	
  5605  0FC6                     	line	170
  5606                           ;LCD_hd44780u_qy_2004a.c: 170:   while(busyFlag == 1)
  5607                           	movlb 0	; select bank0
  5608  0FC6  0020               		decf	((waitLCDBusy@busyFlag)),w
  5609  0FC7  0333               iorwf	((waitLCDBusy@busyFlag+1)),w
  5610  0FC8  0434               	btfsc	status,2
  5611  0FC9  1903               	goto	u1501
  5612  0FCA  2FCC               	goto	u1500
  5613  0FCB  2FCD               u1501:
  5614  0FCC                     	goto	l272
  5615  0FCC  2FAE               u1500:
  5616  0FCD                     	goto	l274
  5617  0FCD  2FCE               	
  5618                           l273:	
  5619  0FCE                     	line	182
  5620                           	
  5621                           l274:	
  5622  0FCE                     	return
  5623  0FCE  0008               	opt stack 0
  5624                           GLOBAL	__end_of_waitLCDBusy
  5625                           	__end_of_waitLCDBusy:
  5626  0FCF                     	signat	_waitLCDBusy,89
  5627                           	global	_SetToReadDataFromLCD
  5628                           
  5629 ;; *************** function _SetToReadDataFromLCD *****************
  5630 ;; Defined at:
  5631 ;;		line 147 in file "LCD_hd44780u_qy_2004a.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;		None
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;		None
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  1    wreg      void 
  5638 ;; Registers used:
  5639 ;;		None
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5649 ;;Total ram usage:        0 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:    4
  5652 ;; This function calls:
  5653 ;;		Nothing
  5654 ;; This function is called by:
  5655 ;;		_waitLCDBusy
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  5659                           	line	147
  5660                           global __ptext19
  5661                           __ptext19:	;psect for function _SetToReadDataFromLCD
  5662  0E20                     psect	text19
  5663                           	file	"LCD_hd44780u_qy_2004a.c"
  5664                           	line	147
  5665                           	global	__size_of_SetToReadDataFromLCD
  5666                           	__size_of_SetToReadDataFromLCD	equ	__end_of_SetToReadDataFromLCD-_SetToReadDataFromLCD

  5667  0006                     	
  5668                           _SetToReadDataFromLCD:	
  5669  0E20                     ;incstack = 0
  5670                           	opt	stack 8
  5671                           ; Regs used in _SetToReadDataFromLCD: []
  5672                           	line	149
  5673                           	
  5674                           l2394:	
  5675  0E20                     ;LCD_hd44780u_qy_2004a.c: 149:   TRISAbits.TRISA3 = 1;
  5676                           	movlb 1	; select bank1
  5677  0E20  0021               	bsf	(140)^080h,3	;volatile
  5678  0E21  158C               	line	150
  5679                           ;LCD_hd44780u_qy_2004a.c: 150:   TRISAbits.TRISA2 = 1;
  5680                           	bsf	(140)^080h,2	;volatile
  5681  0E22  150C               	line	151
  5682                           ;LCD_hd44780u_qy_2004a.c: 151:   TRISAbits.TRISA1 = 1;
  5683                           	bsf	(140)^080h,1	;volatile
  5684  0E23  148C               	line	152
  5685                           ;LCD_hd44780u_qy_2004a.c: 152:   TRISAbits.TRISA0 = 1;
  5686                           	bsf	(140)^080h,0	;volatile
  5687  0E24  140C               	line	153
  5688                           	
  5689                           l265:	
  5690  0E25                     	return
  5691  0E25  0008               	opt stack 0
  5692                           GLOBAL	__end_of_SetToReadDataFromLCD
  5693                           	__end_of_SetToReadDataFromLCD:
  5694  0E26                     	signat	_SetToReadDataFromLCD,89
  5695                           	global	_setData
  5696                           
  5697 ;; *************** function _setData *****************
  5698 ;; Defined at:
  5699 ;;		line 67 in file "LCD_hd44780u_qy_2004a.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;  iValue          1    wreg     unsigned char 
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;  iValue          1   18[BANK0 ] unsigned char 
  5704 ;; Return value:  Size  Location     Type
  5705 ;;                  1    wreg      void 
  5706 ;; Registers used:
  5707 ;;		wreg, status,2, status,0
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5714 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5715 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5716 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  5717 ;;Total ram usage:        3 bytes
  5718 ;; Hardware stack levels used:    1
  5719 ;; Hardware stack levels required when called:    4
  5720 ;; This function calls:
  5721 ;;		Nothing
  5722 ;; This function is called by:
  5723 ;;		_initLCD
  5724 ;;		_writeTxtChk
  5725 ;;		_writeInsNoChk
  5726 ;;		_setCursorPosition
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  5730                           	line	67
  5731                           global __ptext20
  5732                           __ptext20:	;psect for function _setData
  5733  0753                     psect	text20
  5734                           	file	"LCD_hd44780u_qy_2004a.c"
  5735                           	line	67
  5736                           	global	__size_of_setData
  5737                           	__size_of_setData	equ	__end_of_setData-_setData
  5738  003C                     	
  5739                           _setData:	
  5740  0753                     ;incstack = 0
  5741                           	opt	stack 8
  5742                           ; Regs used in _setData: [wreg+status,2+status,0]
  5743                           ;setData@iValue stored from wreg
  5744                           	movlb 0	; select bank0
  5745  0753  0020               	movwf	(setData@iValue)
  5746  0754  00B2               	line	69
  5747                           	
  5748                           l2396:	
  5749  0755                     ;LCD_hd44780u_qy_2004a.c: 67: void setData(char iValue);LCD_hd44780u_qy_2004a.c: 68: {;L
                                 CD_hd44780u_qy_2004a.c: 69:   PORTAbits.RA5 = 1;
  5750                           	bsf	(12),5	;volatile
  5751  0755  168C               	line	70
  5752                           	
  5753                           l2398:	
  5754  0756                     ;LCD_hd44780u_qy_2004a.c: 70:   PORTAbits.RA3 = (iValue & 0x8) >> 3;
  5755                           	movf	(setData@iValue),w
  5756  0756  0832               	movwf	(??_setData+0)+0
  5757  0757  00B0               	movlw	03h
  5758  0758  3003               u1485:
  5759  0759                     	lsrf	(??_setData+0)+0,f
  5760  0759  36B0               	decfsz	wreg,f
  5761  075A  0B89               	goto	u1485
  5762  075B  2F59               	movf	0+(??_setData+0)+0,w
  5763  075C  0830               	andlw	01h
  5764  075D  3901               	movwf	(??_setData+1)+0
  5765  075E  00B1               	rlf	(??_setData+1)+0,f
  5766  075F  0DB1               	rlf	(??_setData+1)+0,f
  5767  0760  0DB1               	rlf	(??_setData+1)+0,f
  5768  0761  0DB1               	movf	(12),w	;volatile
  5769  0762  080C               	xorwf	(??_setData+1)+0,w
  5770  0763  0631               	andlw	not (((1<<1)-1)<<3)
  5771  0764  39F7               	xorwf	(??_setData+1)+0,w
  5772  0765  0631               	movwf	(12)	;volatile
  5773  0766  008C               	line	71
  5774                           ;LCD_hd44780u_qy_2004a.c: 71:   PORTAbits.RA2 = (iValue & 0x4) >> 2;
  5775                           	movf	(setData@iValue),w
  5776  0767  0832               	movwf	(??_setData+0)+0
  5777  0768  00B0               	movlw	02h
  5778  0769  3002               u1495:
  5779  076A                     	lsrf	(??_setData+0)+0,f
  5780  076A  36B0               	decfsz	wreg,f
  5781  076B  0B89               	goto	u1495
  5782  076C  2F6A               	movf	0+(??_setData+0)+0,w
  5783  076D  0830               	andlw	01h
  5784  076E  3901               	movwf	(??_setData+1)+0
  5785  076F  00B1               	rlf	(??_setData+1)+0,f
  5786  0770  0DB1               	rlf	(??_setData+1)+0,f
  5787  0771  0DB1               	movf	(12),w	;volatile
  5788  0772  080C               	xorwf	(??_setData+1)+0,w
  5789  0773  0631               	andlw	not (((1<<1)-1)<<2)
  5790  0774  39FB               	xorwf	(??_setData+1)+0,w
  5791  0775  0631               	movwf	(12)	;volatile
  5792  0776  008C               	line	72
  5793                           ;LCD_hd44780u_qy_2004a.c: 72:   PORTAbits.RA1 = (iValue & 0x2) >> 1;
  5794                           	lsrf	(setData@iValue),w
  5795  0777  3632               	andlw	01h
  5796  0778  3901               	movwf	(??_setData+0)+0
  5797  0779  00B0               	rlf	(??_setData+0)+0,f
  5798  077A  0DB0               	movf	(12),w	;volatile
  5799  077B  080C               	xorwf	(??_setData+0)+0,w
  5800  077C  0630               	andlw	not (((1<<1)-1)<<1)
  5801  077D  39FD               	xorwf	(??_setData+0)+0,w
  5802  077E  0630               	movwf	(12)	;volatile
  5803  077F  008C               	line	73
  5804                           ;LCD_hd44780u_qy_2004a.c: 73:   PORTAbits.RA0 = (iValue & 0x1) ;
  5805                           	movlw	low(01h)
  5806  0780  3001               	andwf	(setData@iValue),w
  5807  0781  0532               	movwf	(??_setData+0)+0
  5808  0782  00B0               	movf	(12),w	;volatile
  5809  0783  080C               	xorwf	0+(??_setData+0)+0,w
  5810  0784  0630               	andlw	not ((1<<1)-1)
  5811  0785  39FE               	xorwf	0+(??_setData+0)+0,w
  5812  0786  0630               	movwf	(12)	;volatile
  5813  0787  008C               	line	74
  5814                           	
  5815                           l2400:	
  5816  0788                     ;LCD_hd44780u_qy_2004a.c: 74:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  5817                           		opt asmopt_push
  5818                           	opt asmopt_off
  5819                           	nop2	;2 cycle nop
  5820  0788  3200               	nop2	;2 cycle nop
  5821  0789  3200               	opt asmopt_pop
  5822                           
  5823                           	line	75
  5824                           	
  5825                           l2402:	
  5826  078A                     ;LCD_hd44780u_qy_2004a.c: 75:   PORTAbits.RA5 = 0;
  5827                           	movlb 0	; select bank0
  5828  078A  0020               	bcf	(12),5	;volatile
  5829  078B  128C               	line	76
  5830                           	
  5831                           l2404:	
  5832  078C                     ;LCD_hd44780u_qy_2004a.c: 76:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  5833                           		opt asmopt_push
  5834                           	opt asmopt_off
  5835                           	nop2	;2 cycle nop
  5836  078C  3200               	nop2	;2 cycle nop
  5837  078D  3200               	opt asmopt_pop
  5838                           
  5839                           	line	77
  5840                           	
  5841                           l239:	
  5842  078E                     	return
  5843  078E  0008               	opt stack 0
  5844                           GLOBAL	__end_of_setData
  5845                           	__end_of_setData:
  5846  078F                     	signat	_setData,4217
  5847                           	global	_SetToSendDataToLCD
  5848                           
  5849 ;; *************** function _SetToSendDataToLCD *****************
  5850 ;; Defined at:
  5851 ;;		line 154 in file "LCD_hd44780u_qy_2004a.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;		None
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;		None
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  1    wreg      void 
  5858 ;; Registers used:
  5859 ;;		None
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5869 ;;Total ram usage:        0 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; Hardware stack levels required when called:    4
  5872 ;; This function calls:
  5873 ;;		Nothing
  5874 ;; This function is called by:
  5875 ;;		_writeTxtChk
  5876 ;;		_writeInsNoChk
  5877 ;;		_setCursorPosition
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  5881                           	line	154
  5882                           global __ptext21
  5883                           __ptext21:	;psect for function _SetToSendDataToLCD
  5884  0E1A                     psect	text21
  5885                           	file	"LCD_hd44780u_qy_2004a.c"
  5886                           	line	154
  5887                           	global	__size_of_SetToSendDataToLCD
  5888                           	__size_of_SetToSendDataToLCD	equ	__end_of_SetToSendDataToLCD-_SetToSendDataToLCD
  5889  0006                     	
  5890                           _SetToSendDataToLCD:	
  5891  0E1A                     ;incstack = 0
  5892                           	opt	stack 8
  5893                           ; Regs used in _SetToSendDataToLCD: []
  5894                           	line	156
  5895                           	
  5896                           l2406:	
  5897  0E1A                     ;LCD_hd44780u_qy_2004a.c: 156:   TRISAbits.TRISA3 = 0;;
  5898                           	movlb 1	; select bank1
  5899  0E1A  0021               	bcf	(140)^080h,3	;volatile
  5900  0E1B  118C               	line	157
  5901                           ;LCD_hd44780u_qy_2004a.c: 157:   TRISAbits.TRISA2 = 0;;
  5902                           	bcf	(140)^080h,2	;volatile
  5903  0E1C  110C               	line	158
  5904                           ;LCD_hd44780u_qy_2004a.c: 158:   TRISAbits.TRISA1 = 0;;
  5905                           	bcf	(140)^080h,1	;volatile
  5906  0E1D  108C               	line	159
  5907                           ;LCD_hd44780u_qy_2004a.c: 159:   TRISAbits.TRISA0 = 0;;
  5908                           	bcf	(140)^080h,0	;volatile
  5909  0E1E  100C               	line	160
  5910                           	
  5911                           l268:	
  5912  0E1F                     	return
  5913  0E1F  0008               	opt stack 0
  5914                           GLOBAL	__end_of_SetToSendDataToLCD
  5915                           	__end_of_SetToSendDataToLCD:
  5916  0E20                     	signat	_SetToSendDataToLCD,89
  5917                           	global	_GetTemp
  5918                           
  5919 ;; *************** function _GetTemp *****************
  5920 ;; Defined at:
  5921 ;;		line 86 in file "161518_temp_main.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;		None
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;		None
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  1    wreg      void 
  5928 ;; Registers used:
  5929 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5937 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5938 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5939 ;;Total ram usage:        1 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    5
  5942 ;; This function calls:
  5943 ;;		_memset
  5944 ;; This function is called by:
  5945 ;;		_main
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  5949                           	file	"161518_temp_main.c"
  5950                           	line	86
  5951                           global __ptext22
  5952                           __ptext22:	;psect for function _GetTemp
  5953  0F79                     psect	text22
  5954                           	file	"161518_temp_main.c"
  5955                           	line	86
  5956                           	global	__size_of_GetTemp
  5957                           	__size_of_GetTemp	equ	__end_of_GetTemp-_GetTemp
  5958  0029                     	
  5959                           _GetTemp:	
  5960  0F79                     ;incstack = 0
  5961                           	opt	stack 10
  5962                           ; Regs used in _GetTemp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5963                           	line	88
  5964                           	
  5965                           l2678:	
  5966  0F79                     	movlb 0	; select bank0
  5967  0F79  0020               	movf	((_wI2CTxBufferSize)),w
  5968  0F7A  085B               	btfss	status,2
  5969  0F7B  1D03               	goto	u1831
  5970  0F7C  2F7E               	goto	u1830
  5971  0F7D  2F7F               u1831:
  5972  0F7E                     	goto	l111
  5973  0F7E  2FA1               u1830:
  5974  0F7F                     	line	90
  5975                           	
  5976                           l2680:	
  5977  0F7F                     	movlb 1	; select bank1
  5978  0F7F  0021               	bsf	(145)^080h,3	;volatile
  5979  0F80  1591               	line	91
  5980                           	
  5981                           l2682:	
  5982  0F81                     	movlw	low(_wReceptionBuffer)
  5983  0F81  3052               	movlb 0	; select bank0
  5984  0F82  0020               	movwf	(memset@dest)
  5985  0F83  00B0               	movlw	high(_wReceptionBuffer)
  5986  0F84  3001               	movwf	(memset@dest+1)
  5987  0F85  00B1               	movlw	0
  5988  0F86  3000               	movwf	(memset@c)
  5989  0F87  00B2               	movwf	(memset@c+1)
  5990  0F88  00B3               	movlw	01Eh
  5991  0F89  301E               	movwf	(memset@n)
  5992  0F8A  00B4               	movlw	0
  5993  0F8B  3000               	movwf	((memset@n))+1
  5994  0F8C  00B5               	fcall	_memset
  5995  0F8D  3183  23B5  318F   	line	92
  5996                           	
  5997                           l2684:	
  5998  0F90                     	movlb 0	; select bank0
  5999  0F90  0020               	clrf	(_wReceptionBufferPosition)
  6000  0F91  01DC               	line	93
  6001                           	
  6002                           l2686:	
  6003  0F92                     	movlw	low(0B9h)
  6004  0F92  30B9               	movwf	(??_GetTemp+0)+0
  6005  0F93  00BE               	movf	(??_GetTemp+0)+0,w
  6006  0F94  083E               	movlb 1	; select bank1
  6007  0F95  0021               	movwf	(_wI2CTxBuffer)^080h
  6008  0F96  00A0               	line	94
  6009                           	
  6010                           l2688:	
  6011  0F97                     	movlw	low(08h)
  6012  0F97  3008               	movlb 0	; select bank0
  6013  0F98  0020               	movwf	(??_GetTemp+0)+0
  6014  0F99  00BE               	movf	(??_GetTemp+0)+0,w
  6015  0F9A  083E               	movwf	(_wI2CRxBufferSize)
  6016  0F9B  00DA               	line	95
  6017                           	
  6018                           l2690:	
  6019  0F9C                     	clrf	(_wI2CTxBufferSize)
  6020  0F9C  01DB               	incf	(_wI2CTxBufferSize),f
  6021  0F9D  0ADB               	line	96
  6022                           	
  6023                           l2692:	
  6024  0F9E                     	movlb 4	; select bank4
  6025  0F9E  0024               	bsf	(534)^0200h,0	;volatile
  6026  0F9F  1416               	goto	l111
  6027  0FA0  2FA1               	line	97
  6028                           	
  6029                           l110:	
  6030  0FA1                     	line	98
  6031                           	
  6032                           l111:	
  6033  0FA1                     	return
  6034  0FA1  0008               	opt stack 0
  6035                           GLOBAL	__end_of_GetTemp
  6036                           	__end_of_GetTemp:
  6037  0FA2                     	signat	_GetTemp,89
  6038                           	global	_memset
  6039                           
  6040 ;; *************** function _memset *****************
  6041 ;; Defined at:
  6042 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  dest            2   16[BANK0 ] PTR void 
  6045 ;;		 -> wInterruptText(75), wReceptionBuffer(30), wI2CTxBuffer(20), 
  6046 ;;  c               2   18[BANK0 ] int 
  6047 ;;  n               2   20[BANK0 ] unsigned int 
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;  s               2   28[BANK0 ] PTR unsigned char 
  6050 ;;		 -> wInterruptText(75), wReceptionBuffer(30), wI2CTxBuffer(20), 
  6051 ;;  k               2   26[BANK0 ] unsigned int 
  6052 ;; Return value:  Size  Location     Type
  6053 ;;                  2   16[BANK0 ] PTR void 
  6054 ;; Registers used:
  6055 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6056 ;; Tracked objects:
  6057 ;;		On entry : 0/0
  6058 ;;		On exit  : 0/0
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6061 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  6062 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6063 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6064 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
  6065 ;;Total ram usage:       14 bytes
  6066 ;; Hardware stack levels used:    1
  6067 ;; Hardware stack levels required when called:    4
  6068 ;; This function calls:
  6069 ;;		Nothing
  6070 ;; This function is called by:
  6071 ;;		_GetTemp
  6072 ;;		_PrintLog
  6073 ;;		_main
  6074 ;; This function uses a non-reentrant model
  6075 ;;
  6076                           psect	text23,local,class=CODE,delta=2,merge=1,group=2
  6077                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  6078                           	line	4
  6079                           global __ptext23
  6080                           __ptext23:	;psect for function _memset
  6081  03B5                     psect	text23
  6082                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  6083                           	line	4
  6084                           	global	__size_of_memset
  6085                           	__size_of_memset	equ	__end_of_memset-_memset
  6086  00D1                     	
  6087                           _memset:	
  6088  03B5                     ;incstack = 0
  6089                           	opt	stack 11
  6090                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6091                           	line	6
  6092                           	
  6093                           l2556:	
  6094  03B5                     	movlb 0	; select bank0
  6095  03B5  0020               	movf	(memset@dest+1),w
  6096  03B6  0831               	movwf	(memset@s+1)
  6097  03B7  00BD               	movf	(memset@dest),w
  6098  03B8  0830               	movwf	(memset@s)
  6099  03B9  00BC               	line	13
  6100                           	
  6101                           l2558:	
  6102  03BA                     	movf	((memset@n)),w
  6103  03BA  0834               iorwf	((memset@n+1)),w
  6104  03BB  0435               	btfss	status,2
  6105  03BC  1D03               	goto	u1621
  6106  03BD  2BBF               	goto	u1620
  6107  03BE  2BC0               u1621:
  6108  03BF                     	goto	l2562
  6109  03BF  2BC2               u1620:
  6110  03C0                     	goto	l765
  6111  03C0  2C85               	
  6112                           l2560:	
  6113  03C1                     ;	Return value of _memset is never used
  6114                           	goto	l765
  6115  03C1  2C85               	
  6116                           l764:	
  6117  03C2                     	line	14
  6118                           	
  6119                           l2562:	
  6120  03C2                     	movf	(memset@s),w
  6121  03C2  083C               	movwf	fsr1l
  6122  03C3  0086               	movf	(memset@s+1),w
  6123  03C4  083D               	movwf	fsr1h
  6124  03C5  0087               	movf	(memset@c),w
  6125  03C6  0832               	movwf	indf1
  6126  03C7  0081               	line	15
  6127                           	
  6128                           l2564:	
  6129  03C8                     	movf	(memset@n),w
  6130  03C8  0834               	addlw	0FFh
  6131  03C9  3EFF               	movwf	(??_memset+0)+0
  6132  03CA  00B6               	movlw	0FFh
  6133  03CB  30FF               	addwfc	(memset@n+1),w
  6134  03CC  3D35               	movwf	1+(??_memset+0)+0
  6135  03CD  00B7               	movf	0+(??_memset+0)+0,w
  6136  03CE  0836               	addwf	(memset@s),w
  6137  03CF  073C               	movwf	(??_memset+2)+0
  6138  03D0  00B8               	movf	1+(??_memset+0)+0,w
  6139  03D1  0837               	addwfc	(memset@s+1),w
  6140  03D2  3D3D               	movwf	1+(??_memset+2)+0
  6141  03D3  00B9               	movf	0+(??_memset+2)+0,w
  6142  03D4  0838               	movwf	fsr1l
  6143  03D5  0086               	movf	1+(??_memset+2)+0,w
  6144  03D6  0839               	movwf	fsr1h
  6145  03D7  0087               	movf	(memset@c),w
  6146  03D8  0832               	movwf	indf1
  6147  03D9  0081               	line	16
  6148                           	
  6149                           l2566:	
  6150  03DA                     	movlw	0
  6151  03DA  3000               	subwf	(memset@n+1),w
  6152  03DB  0235               	movlw	03h
  6153  03DC  3003               	skipnz
  6154  03DD  1903               	subwf	(memset@n),w
  6155  03DE  0234               	skipnc
  6156  03DF  1803               	goto	u1631
  6157  03E0  2BE2               	goto	u1630
  6158  03E1  2BE3               u1631:
  6159  03E2                     	goto	l2570
  6160  03E2  2BE5               u1630:
  6161  03E3                     	goto	l765
  6162  03E3  2C85               	
  6163                           l2568:	
  6164  03E4                     ;	Return value of _memset is never used
  6165                           	goto	l765
  6166  03E4  2C85               	
  6167                           l766:	
  6168  03E5                     	line	17
  6169                           	
  6170                           l2570:	
  6171  03E5                     	movf	(memset@s),w
  6172  03E5  083C               	addlw	01h
  6173  03E6  3E01               	movwf	(??_memset+0)+0
  6174  03E7  00B6               	movlw	0
  6175  03E8  3000               	addwfc	(memset@s+1),w
  6176  03E9  3D3D               	movwf	1+(??_memset+0)+0
  6177  03EA  00B7               	movf	0+(??_memset+0)+0,w
  6178  03EB  0836               	movwf	fsr1l
  6179  03EC  0086               	movf	1+(??_memset+0)+0,w
  6180  03ED  0837               	movwf	fsr1h
  6181  03EE  0087               	movf	(memset@c),w
  6182  03EF  0832               	movwf	indf1
  6183  03F0  0081               	line	18
  6184                           	movf	(memset@s),w
  6185  03F1  083C               	addlw	02h
  6186  03F2  3E02               	movwf	(??_memset+0)+0
  6187  03F3  00B6               	movlw	0
  6188  03F4  3000               	addwfc	(memset@s+1),w
  6189  03F5  3D3D               	movwf	1+(??_memset+0)+0
  6190  03F6  00B7               	movf	0+(??_memset+0)+0,w
  6191  03F7  0836               	movwf	fsr1l
  6192  03F8  0086               	movf	1+(??_memset+0)+0,w
  6193  03F9  0837               	movwf	fsr1h
  6194  03FA  0087               	movf	(memset@c),w
  6195  03FB  0832               	movwf	indf1
  6196  03FC  0081               	line	19
  6197                           	movf	(memset@n),w
  6198  03FD  0834               	addlw	0FEh
  6199  03FE  3EFE               	movwf	(??_memset+0)+0
  6200  03FF  00B6               	movlw	0FFh
  6201  0400  30FF               	addwfc	(memset@n+1),w
  6202  0401  3D35               	movwf	1+(??_memset+0)+0
  6203  0402  00B7               	movf	0+(??_memset+0)+0,w
  6204  0403  0836               	addwf	(memset@s),w
  6205  0404  073C               	movwf	(??_memset+2)+0
  6206  0405  00B8               	movf	1+(??_memset+0)+0,w
  6207  0406  0837               	addwfc	(memset@s+1),w
  6208  0407  3D3D               	movwf	1+(??_memset+2)+0
  6209  0408  00B9               	movf	0+(??_memset+2)+0,w
  6210  0409  0838               	movwf	fsr1l
  6211  040A  0086               	movf	1+(??_memset+2)+0,w
  6212  040B  0839               	movwf	fsr1h
  6213  040C  0087               	movf	(memset@c),w
  6214  040D  0832               	movwf	indf1
  6215  040E  0081               	line	20
  6216                           	movf	(memset@n),w
  6217  040F  0834               	addlw	0FDh
  6218  0410  3EFD               	movwf	(??_memset+0)+0
  6219  0411  00B6               	movlw	0FFh
  6220  0412  30FF               	addwfc	(memset@n+1),w
  6221  0413  3D35               	movwf	1+(??_memset+0)+0
  6222  0414  00B7               	movf	0+(??_memset+0)+0,w
  6223  0415  0836               	addwf	(memset@s),w
  6224  0416  073C               	movwf	(??_memset+2)+0
  6225  0417  00B8               	movf	1+(??_memset+0)+0,w
  6226  0418  0837               	addwfc	(memset@s+1),w
  6227  0419  3D3D               	movwf	1+(??_memset+2)+0
  6228  041A  00B9               	movf	0+(??_memset+2)+0,w
  6229  041B  0838               	movwf	fsr1l
  6230  041C  0086               	movf	1+(??_memset+2)+0,w
  6231  041D  0839               	movwf	fsr1h
  6232  041E  0087               	movf	(memset@c),w
  6233  041F  0832               	movwf	indf1
  6234  0420  0081               	line	21
  6235                           	
  6236                           l2572:	
  6237  0421                     	movlw	0
  6238  0421  3000               	subwf	(memset@n+1),w
  6239  0422  0235               	movlw	07h
  6240  0423  3007               	skipnz
  6241  0424  1903               	subwf	(memset@n),w
  6242  0425  0234               	skipnc
  6243  0426  1803               	goto	u1641
  6244  0427  2C29               	goto	u1640
  6245  0428  2C2A               u1641:
  6246  0429                     	goto	l2576
  6247  0429  2C2C               u1640:
  6248  042A                     	goto	l765
  6249  042A  2C85               	
  6250                           l2574:	
  6251  042B                     ;	Return value of _memset is never used
  6252                           	goto	l765
  6253  042B  2C85               	
  6254                           l767:	
  6255  042C                     	line	22
  6256                           	
  6257                           l2576:	
  6258  042C                     	movf	(memset@s),w
  6259  042C  083C               	addlw	03h
  6260  042D  3E03               	movwf	(??_memset+0)+0
  6261  042E  00B6               	movlw	0
  6262  042F  3000               	addwfc	(memset@s+1),w
  6263  0430  3D3D               	movwf	1+(??_memset+0)+0
  6264  0431  00B7               	movf	0+(??_memset+0)+0,w
  6265  0432  0836               	movwf	fsr1l
  6266  0433  0086               	movf	1+(??_memset+0)+0,w
  6267  0434  0837               	movwf	fsr1h
  6268  0435  0087               	movf	(memset@c),w
  6269  0436  0832               	movwf	indf1
  6270  0437  0081               	line	23
  6271                           	movf	(memset@n),w
  6272  0438  0834               	addlw	0FCh
  6273  0439  3EFC               	movwf	(??_memset+0)+0
  6274  043A  00B6               	movlw	0FFh
  6275  043B  30FF               	addwfc	(memset@n+1),w
  6276  043C  3D35               	movwf	1+(??_memset+0)+0
  6277  043D  00B7               	movf	0+(??_memset+0)+0,w
  6278  043E  0836               	addwf	(memset@s),w
  6279  043F  073C               	movwf	(??_memset+2)+0
  6280  0440  00B8               	movf	1+(??_memset+0)+0,w
  6281  0441  0837               	addwfc	(memset@s+1),w
  6282  0442  3D3D               	movwf	1+(??_memset+2)+0
  6283  0443  00B9               	movf	0+(??_memset+2)+0,w
  6284  0444  0838               	movwf	fsr1l
  6285  0445  0086               	movf	1+(??_memset+2)+0,w
  6286  0446  0839               	movwf	fsr1h
  6287  0447  0087               	movf	(memset@c),w
  6288  0448  0832               	movwf	indf1
  6289  0449  0081               	line	24
  6290                           	
  6291                           l2578:	
  6292  044A                     	movlw	0
  6293  044A  3000               	subwf	(memset@n+1),w
  6294  044B  0235               	movlw	09h
  6295  044C  3009               	skipnz
  6296  044D  1903               	subwf	(memset@n),w
  6297  044E  0234               	skipnc
  6298  044F  1803               	goto	u1651
  6299  0450  2C52               	goto	u1650
  6300  0451  2C53               u1651:
  6301  0452                     	goto	l2582
  6302  0452  2C55               u1650:
  6303  0453                     	goto	l765
  6304  0453  2C85               	
  6305                           l2580:	
  6306  0454                     ;	Return value of _memset is never used
  6307                           	goto	l765
  6308  0454  2C85               	
  6309                           l768:	
  6310  0455                     	line	31
  6311                           	
  6312                           l2582:	
  6313  0455                     	comf	(memset@s),w
  6314  0455  093C               	movwf	(??_memset+0)+0
  6315  0456  00B6               	comf	(memset@s+1),w
  6316  0457  093D               	movwf	((??_memset+0)+0+1)
  6317  0458  00B7               	incf	(??_memset+0)+0,f
  6318  0459  0AB6               	skipnz
  6319  045A  1903               	incf	((??_memset+0)+0+1),f
  6320  045B  0AB7               	movlw	03h
  6321  045C  3003               	andwf	0+(??_memset+0)+0,w
  6322  045D  0536               	movwf	(memset@k)
  6323  045E  00BA               	movlw	0
  6324  045F  3000               	andwf	1+(??_memset+0)+0,w
  6325  0460  0537               	movwf	1+(memset@k)
  6326  0461  00BB               	line	32
  6327                           	
  6328                           l2584:	
  6329  0462                     	movf	(memset@k),w
  6330  0462  083A               	addwf	(memset@s),f
  6331  0463  07BC               	movf	(memset@k+1),w
  6332  0464  083B               	addwfc	(memset@s+1),f
  6333  0465  3DBD               	line	33
  6334                           	
  6335                           l2586:	
  6336  0466                     	movf	(memset@k),w
  6337  0466  083A               	subwf	(memset@n),f
  6338  0467  02B4               	movf	(memset@k+1),w
  6339  0468  083B               	subwfb	(memset@n+1),f
  6340  0469  3BB5               	line	34
  6341                           	
  6342                           l2588:	
  6343  046A                     	movlw	0FCh
  6344  046A  30FC               	andwf	(memset@n),f
  6345  046B  05B4               	movlw	0FFh
  6346  046C  30FF               	andwf	(memset@n+1),f
  6347  046D  05B5               	line	86
  6348                           	goto	l2596
  6349  046E  2C7E               	
  6350                           l770:	
  6351  046F                     	
  6352                           l2590:	
  6353  046F                     	movf	(memset@s),w
  6354  046F  083C               	movwf	fsr1l
  6355  0470  0086               	movf	(memset@s+1),w
  6356  0471  083D               	movwf	fsr1h
  6357  0472  0087               	movf	(memset@c),w
  6358  0473  0832               	movwf	indf1
  6359  0474  0081               	
  6360                           l2592:	
  6361  0475                     	movlw	01h
  6362  0475  3001               	subwf	(memset@n),f
  6363  0476  02B4               	movlw	0
  6364  0477  3000               	subwfb	(memset@n+1),f
  6365  0478  3BB5               	
  6366                           l2594:	
  6367  0479                     	movlw	01h
  6368  0479  3001               	addwf	(memset@s),f
  6369  047A  07BC               	movlw	0
  6370  047B  3000               	addwfc	(memset@s+1),f
  6371  047C  3DBD               	goto	l2596
  6372  047D  2C7E               	
  6373                           l769:	
  6374  047E                     	
  6375                           l2596:	
  6376  047E                     	movf	((memset@n)),w
  6377  047E  0834               iorwf	((memset@n+1)),w
  6378  047F  0435               	btfss	status,2
  6379  0480  1D03               	goto	u1661
  6380  0481  2C83               	goto	u1660
  6381  0482  2C84               u1661:
  6382  0483                     	goto	l2590
  6383  0483  2C6F               u1660:
  6384  0484                     	goto	l765
  6385  0484  2C85               	
  6386                           l771:	
  6387  0485                     	line	90
  6388                           ;	Return value of _memset is never used
  6389                           	
  6390                           l765:	
  6391  0485                     	return
  6392  0485  0008               	opt stack 0
  6393                           GLOBAL	__end_of_memset
  6394                           	__end_of_memset:
  6395  0486                     	signat	_memset,12409
  6396                           	global	_Debounce
  6397                           
  6398 ;; *************** function _Debounce *****************
  6399 ;; Defined at:
  6400 ;;		line 139 in file "161518_temp_main.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;  iSwitch         1    wreg     unsigned char 
  6403 ;;  ioTimer         1   16[BANK0 ] PTR unsigned short 
  6404 ;;		 -> main@wDebounceDown(2), main@wDebounceUp(2), main@wDebounceEnter(2), 
  6405 ;;  swPressed       1   17[BANK0 ] PTR unsigned char 
  6406 ;;		 -> main@wEnterBottonPressed(1), main@wDownBottonPressed(1), main@wUpBottonPressed(1), 
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;  iSwitch         1   20[BANK0 ] unsigned char 
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  1    wreg      void 
  6411 ;; Registers used:
  6412 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6418 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6419 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6420 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6421 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  6422 ;;Total ram usage:        5 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:    4
  6425 ;; This function calls:
  6426 ;;		Nothing
  6427 ;; This function is called by:
  6428 ;;		_main
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  6432                           	file	"161518_temp_main.c"
  6433                           	line	139
  6434                           global __ptext24
  6435                           __ptext24:	;psect for function _Debounce
  6436  063E                     psect	text24
  6437                           	file	"161518_temp_main.c"
  6438                           	line	139
  6439                           	global	__size_of_Debounce
  6440                           	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
  6441  004C                     	
  6442                           _Debounce:	
  6443  063E                     ;incstack = 0
  6444                           	opt	stack 11
  6445                           ; Regs used in _Debounce: [wreg+fsr1l+fsr1h+status,2+status,0]
  6446                           ;Debounce@iSwitch stored from wreg
  6447                           	movlb 0	; select bank0
  6448  063E  0020               	movwf	(Debounce@iSwitch)
  6449  063F  00B4               	line	141
  6450                           	
  6451                           l2726:	
  6452  0640                     	movf	((Debounce@iSwitch)),w
  6453  0640  0834               	btfss	status,2
  6454  0641  1D03               	goto	u1861
  6455  0642  2E44               	goto	u1860
  6456  0643  2E45               u1861:
  6457  0644                     	goto	l2730
  6458  0644  2E4F               u1860:
  6459  0645                     	line	143
  6460                           	
  6461                           l2728:	
  6462  0645                     	movf	(Debounce@ioTimer),w
  6463  0645  0830               	movwf	fsr1l
  6464  0646  0086               	movlw 1	; select bank2/3
  6465  0647  3001               	movwf fsr1h	
  6466  0648  0087               	
  6467                           	movlw	01h
  6468  0649  3001               	addwf	indf1,f
  6469  064A  0781               	addfsr	fsr1,1
  6470  064B  3141               	skipnc
  6471  064C  1803               	incf	indf1,f
  6472  064D  0A81               	line	144
  6473                           	goto	l2732
  6474  064E  2E57               	line	145
  6475                           	
  6476                           l125:	
  6477  064F                     	line	147
  6478                           	
  6479                           l2730:	
  6480  064F                     	movf	(Debounce@ioTimer),w
  6481  064F  0830               	movwf	fsr1l
  6482  0650  0086               	movlw 1	; select bank2/3
  6483  0651  3001               	movwf fsr1h	
  6484  0652  0087               	
  6485                           	movlw	0
  6486  0653  3000               	movwi	[0]fsr1
  6487  0654  3FC0               	movwi	[1]fsr1
  6488  0655  3FC1               	goto	l2732
  6489  0656  2E57               	line	148
  6490                           	
  6491                           l126:	
  6492  0657                     	line	149
  6493                           	
  6494                           l2732:	
  6495  0657                     	movf	(Debounce@ioTimer),w
  6496  0657  0830               	movwf	fsr1l
  6497  0658  0086               	movlw 1	; select bank2/3
  6498  0659  3001               	movwf fsr1h	
  6499  065A  0087               	
  6500                           	moviw	fsr1++
  6501  065B  0016               xorlw	208
  6502  065C  3AD0               movwf	(??_Debounce+0)+0
  6503  065D  00B2               moviw	fsr1++
  6504  065E  0016               xorlw	7
  6505  065F  3A07               iorwf	(??_Debounce+0)+0
  6506  0660  04B2               	btfss	status,2
  6507  0661  1D03               	goto	u1871
  6508  0662  2E64               	goto	u1870
  6509  0663  2E65               u1871:
  6510  0664                     	goto	l2736
  6511  0664  2E6C               u1870:
  6512  0665                     	line	151
  6513                           	
  6514                           l2734:	
  6515  0665                     	movf	(Debounce@swPressed),w
  6516  0665  0831               	movwf	fsr1l
  6517  0666  0086               	movlw 1	; select bank2/3
  6518  0667  3001               	movwf fsr1h	
  6519  0668  0087               	
  6520                           	clrf	indf1
  6521  0669  0181               	incf	indf1,f
  6522  066A  0A81               	goto	l2736
  6523  066B  2E6C               	line	152
  6524                           	
  6525                           l127:	
  6526  066C                     	line	153
  6527                           	
  6528                           l2736:	
  6529  066C                     	movf	(Debounce@ioTimer),w
  6530  066C  0830               	movwf	fsr1l
  6531  066D  0086               	movlw 1	; select bank2/3
  6532  066E  3001               	movwf fsr1h	
  6533  066F  0087               	
  6534                           	moviw	fsr1++
  6535  0670  0016               xorlw	64
  6536  0671  3A40               movwf	(??_Debounce+0)+0
  6537  0672  00B2               moviw	fsr1++
  6538  0673  0016               xorlw	31
  6539  0674  3A1F               iorwf	(??_Debounce+0)+0
  6540  0675  04B2               	btfss	status,2
  6541  0676  1D03               	goto	u1881
  6542  0677  2E79               	goto	u1880
  6543  0678  2E7A               u1881:
  6544  0679                     	goto	l129
  6545  0679  2E89               u1880:
  6546  067A                     	line	155
  6547                           	
  6548                           l2738:	
  6549  067A                     	movf	(Debounce@ioTimer),w
  6550  067A  0830               	movwf	fsr1l
  6551  067B  0086               	movlw 1	; select bank2/3
  6552  067C  3001               	movwf fsr1h	
  6553  067D  0087               	
  6554                           	movlw	0D1h
  6555  067E  30D1               	movwi	[0]fsr1
  6556  067F  3FC0               	movlw	07h
  6557  0680  3007               	movwi	[1]fsr1
  6558  0681  3FC1               	line	156
  6559                           	
  6560                           l2740:	
  6561  0682                     	movf	(Debounce@swPressed),w
  6562  0682  0831               	movwf	fsr1l
  6563  0683  0086               	movlw 1	; select bank2/3
  6564  0684  3001               	movwf fsr1h	
  6565  0685  0087               	
  6566                           	clrf	indf1
  6567  0686  0181               	incf	indf1,f
  6568  0687  0A81               	goto	l129
  6569  0688  2E89               	line	157
  6570                           	
  6571                           l128:	
  6572  0689                     	line	158
  6573                           	
  6574                           l129:	
  6575  0689                     	return
  6576  0689  0008               	opt stack 0
  6577                           GLOBAL	__end_of_Debounce
  6578                           	__end_of_Debounce:
  6579  068A                     	signat	_Debounce,12409
  6580                           	global	_Add_Trace
  6581                           
  6582 ;; *************** function _Add_Trace *****************
  6583 ;; Defined at:
  6584 ;;		line 78 in file "161518_temp_main.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;  oText           1    wreg     PTR unsigned char 
  6587 ;;		 -> wInterruptText(75), 
  6588 ;;  iSizeOfoText    1    1[BANK1 ] unsigned char 
  6589 ;;  iText           2    2[BANK1 ] PTR unsigned char 
  6590 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  6591 ;;		 -> main@wReadout(20), 
  6592 ;; Auto vars:     Size  Location     Type
  6593 ;;  oText           1   10[BANK1 ] PTR unsigned char 
  6594 ;;		 -> wInterruptText(75), 
  6595 ;; Return value:  Size  Location     Type
  6596 ;;                  1    wreg      void 
  6597 ;; Registers used:
  6598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6599 ;; Tracked objects:
  6600 ;;		On entry : 0/0
  6601 ;;		On exit  : 0/0
  6602 ;;		Unchanged: 0/0
  6603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6604 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
       0       0
  6605 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  6606 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
       0       0
  6607 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
       0       0
  6608 ;;Total ram usage:       10 bytes
  6609 ;; Hardware stack levels used:    1
  6610 ;; Hardware stack levels required when called:    6
  6611 ;; This function calls:
  6612 ;;		_strcat
  6613 ;;		_strlen
  6614 ;; This function is called by:
  6615 ;;		_main
  6616 ;; This function uses a non-reentrant model
  6617 ;;
  6618                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  6619                           	line	78
  6620                           global __ptext25
  6621                           __ptext25:	;psect for function _Add_Trace
  6622  068A                     psect	text25
  6623                           	file	"161518_temp_main.c"
  6624                           	line	78
  6625                           	global	__size_of_Add_Trace
  6626                           	__size_of_Add_Trace	equ	__end_of_Add_Trace-_Add_Trace
  6627  0049                     	
  6628                           _Add_Trace:	
  6629  068A                     ;incstack = 0
  6630                           	opt	stack 9
  6631                           ; Regs used in _Add_Trace: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6632                           ;Add_Trace@oText stored from wreg
  6633                           	movlb 1	; select bank1
  6634  068A  0021               	movwf	(Add_Trace@oText)^080h
  6635  068B  00BE               	line	80
  6636                           	
  6637                           l2674:	
  6638  068C                     	movf	(Add_Trace@oText)^080h,w
  6639  068C  083E               	movlb 0	; select bank0
  6640  068D  0020               	movwf	(strlen@s)
  6641  068E  00B0               	movlw	0x1
  6642  068F  3001               
  6643                           	movwf	(strlen@s+1)
  6644  0690  00B1               	fcall	_strlen
  6645  0691  318F  270A  3186   	movlb 0	; select bank0
  6646  0694  0020               	comf	(0+(?_strlen)),w
  6647  0695  0930               	movlb 1	; select bank1
  6648  0696  0021               	movwf	(??_Add_Trace+0)^080h+0
  6649  0697  00B8               	movlb 0	; select bank0
  6650  0698  0020               	comf	(1+(?_strlen)),w
  6651  0699  0931               	movlb 1	; select bank1
  6652  069A  0021               	movwf	((??_Add_Trace+0)^080h+0+1)
  6653  069B  00B9               	incf	(??_Add_Trace+0)^080h+0,f
  6654  069C  0AB8               	skipnz
  6655  069D  1903               	incf	((??_Add_Trace+0)^080h+0+1),f
  6656  069E  0AB9               	movf	(Add_Trace@iSizeOfoText)^080h,w
  6657  069F  0835               	addwf	0+(??_Add_Trace+0)^080h+0,w
  6658  06A0  0738               	movwf	(??_Add_Trace+2)^080h+0
  6659  06A1  00BA               	movf	1+(??_Add_Trace+0)^080h+0,w
  6660  06A2  0839               	skipnc
  6661  06A3  1803               	incf	1+(??_Add_Trace+0)^080h+0,w
  6662  06A4  0A39               	movwf	((??_Add_Trace+2)^080h+0)+1
  6663  06A5  00BB               	movf	0+(??_Add_Trace+2)^080h+0,w
  6664  06A6  083A               	addlw	01h
  6665  06A7  3E01               	movwf	(??_Add_Trace+4)^080h+0
  6666  06A8  00BC               	movlw	0
  6667  06A9  3000               	addwfc	1+(??_Add_Trace+2)^080h+0,w
  6668  06AA  3D3B               	movwf	1+(??_Add_Trace+4)^080h+0
  6669  06AB  00BD               	movf	(Add_Trace@iText+1)^080h,w
  6670  06AC  0837               	movlb 0	; select bank0
  6671  06AD  0020               	movwf	(strlen@s+1)
  6672  06AE  00B1               	movlb 1	; select bank1
  6673  06AF  0021               	movf	(Add_Trace@iText)^080h,w
  6674  06B0  0836               	movlb 0	; select bank0
  6675  06B1  0020               	movwf	(strlen@s)
  6676  06B2  00B0               	fcall	_strlen
  6677  06B3  318F  270A  3186   	movlb 1	; select bank1
  6678  06B6  0021               	movf	1+(??_Add_Trace+4)^080h+0,w
  6679  06B7  083D               	movlb 0	; select bank0
  6680  06B8  0020               	subwf	(1+(?_strlen)),w
  6681  06B9  0231               	skipz
  6682  06BA  1D03               	goto	u1825
  6683  06BB  2EC0               	movlb 1	; select bank1
  6684  06BC  0021               	movf	0+(??_Add_Trace+4)^080h+0,w
  6685  06BD  083C               	movlb 0	; select bank0
  6686  06BE  0020               	subwf	(0+(?_strlen)),w
  6687  06BF  0230               u1825:
  6688  06C0                     	skipnc
  6689  06C0  1803               	goto	u1821
  6690  06C1  2EC3               	goto	u1820
  6691  06C2  2EC4               u1821:
  6692  06C3                     	goto	l107
  6693  06C3  2ED2               u1820:
  6694  06C4                     	line	82
  6695                           	
  6696                           l2676:	
  6697  06C4                     	movlb 1	; select bank1
  6698  06C4  0021               	movf	(Add_Trace@iText+1)^080h,w
  6699  06C5  0837               	movlb 0	; select bank0
  6700  06C6  0020               	movwf	(strcat@src+1)
  6701  06C7  00BF               	movlb 1	; select bank1
  6702  06C8  0021               	movf	(Add_Trace@iText)^080h,w
  6703  06C9  0836               	movlb 0	; select bank0
  6704  06CA  0020               	movwf	(strcat@src)
  6705  06CB  00BE               	movlb 1	; select bank1
  6706  06CC  0021               	movf	(Add_Trace@oText)^080h,w
  6707  06CD  083E               	fcall	_strcat
  6708  06CE  318E  26A5  3186   	goto	l107
  6709  06D1  2ED2               	line	83
  6710                           	
  6711                           l106:	
  6712  06D2                     	line	84
  6713                           	
  6714                           l107:	
  6715  06D2                     	return
  6716  06D2  0008               	opt stack 0
  6717                           GLOBAL	__end_of_Add_Trace
  6718                           	__end_of_Add_Trace:
  6719  06D3                     	signat	_Add_Trace,12409
  6720                           	global	_strcat
  6721                           
  6722 ;; *************** function _strcat *****************
  6723 ;; Defined at:
  6724 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  dest            1    wreg     PTR unsigned char 
  6727 ;;		 -> wInterruptText(75), 
  6728 ;;  src             2   30[BANK0 ] PTR const unsigned char 
  6729 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  6730 ;;		 -> main@wReadout(20), 
  6731 ;; Auto vars:     Size  Location     Type
  6732 ;;  dest            1    0[BANK1 ] PTR unsigned char 
  6733 ;;		 -> wInterruptText(75), 
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  1    wreg      PTR unsigned char 
  6736 ;; Registers used:
  6737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6743 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6744 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
       0       0
  6745 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6746 ;;      Totals:         0       4       1       0       0       0       0       0       0       0       0       0       
       0       0
  6747 ;;Total ram usage:        5 bytes
  6748 ;; Hardware stack levels used:    1
  6749 ;; Hardware stack levels required when called:    5
  6750 ;; This function calls:
  6751 ;;		_strcpy
  6752 ;;		_strlen
  6753 ;; This function is called by:
  6754 ;;		_Add_Trace
  6755 ;; This function uses a non-reentrant model
  6756 ;;
  6757                           psect	text26,local,class=CODE,delta=2,merge=1,group=2
  6758                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  6759                           	line	3
  6760                           global __ptext26
  6761                           __ptext26:	;psect for function _strcat
  6762  0EA5                     psect	text26
  6763                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  6764                           	line	3
  6765                           	global	__size_of_strcat
  6766                           	__size_of_strcat	equ	__end_of_strcat-_strcat
  6767  001E                     	
  6768                           _strcat:	
  6769  0EA5                     ;incstack = 0
  6770                           	opt	stack 9
  6771                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6772                           ;strcat@dest stored from wreg
  6773                           	movlb 1	; select bank1
  6774  0EA5  0021               	movwf	(strcat@dest)^080h
  6775  0EA6  00B4               	line	5
  6776                           	
  6777                           l2552:	
  6778  0EA7                     	movlb 0	; select bank0
  6779  0EA7  0020               	movf	(strcat@src+1),w
  6780  0EA8  083F               	movwf	(strcpy@src+1)
  6781  0EA9  00B7               	movf	(strcat@src),w
  6782  0EAA  083E               	movwf	(strcpy@src)
  6783  0EAB  00B6               	movlb 1	; select bank1
  6784  0EAC  0021               	movf	(strcat@dest)^080h,w
  6785  0EAD  0834               	movlb 0	; select bank0
  6786  0EAE  0020               	movwf	(strlen@s)
  6787  0EAF  00B0               	movlw	0x1
  6788  0EB0  3001               
  6789                           	movwf	(strlen@s+1)
  6790  0EB1  00B1               	fcall	_strlen
  6791  0EB2  318F  270A  318E   	movlb 0	; select bank0
  6792  0EB5  0020               	movf	(0+?_strlen),w
  6793  0EB6  0830               	movwf	(??_strcat+0)+0
  6794  0EB7  00C0               	movf	(1+?_strlen),w
  6795  0EB8  0831               	movwf	((??_strcat+0)+0+1)
  6796  0EB9  00C1               	movlb 1	; select bank1
  6797  0EBA  0021               	movf	(strcat@dest)^080h,w
  6798  0EBB  0834               	movlb 0	; select bank0
  6799  0EBC  0020               	addwf	0+(??_strcat+0)+0,w
  6800  0EBD  0740               	fcall	_strcpy
  6801  0EBE  318F  272E  318E   	goto	l778
  6802  0EC1  2EC2               	line	6
  6803                           	
  6804                           l2554:	
  6805  0EC2                     	line	7
  6806                           ;	Return value of _strcat is never used
  6807                           	
  6808                           l778:	
  6809  0EC2                     	return
  6810  0EC2  0008               	opt stack 0
  6811                           GLOBAL	__end_of_strcat
  6812                           	__end_of_strcat:
  6813  0EC3                     	signat	_strcat,8313
  6814                           	global	_strlen
  6815                           
  6816 ;; *************** function _strlen *****************
  6817 ;; Defined at:
  6818 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;  s               2   16[BANK0 ] PTR const unsigned char 
  6821 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  6822 ;;		 -> main@wReadout(20), wInterruptText(75), 
  6823 ;; Auto vars:     Size  Location     Type
  6824 ;;  a               2   20[BANK0 ] PTR const unsigned char 
  6825 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  6826 ;;		 -> main@wReadout(20), wInterruptText(75), 
  6827 ;; Return value:  Size  Location     Type
  6828 ;;                  2   16[BANK0 ] unsigned int 
  6829 ;; Registers used:
  6830 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6831 ;; Tracked objects:
  6832 ;;		On entry : 0/0
  6833 ;;		On exit  : 0/0
  6834 ;;		Unchanged: 0/0
  6835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6836 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6837 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6838 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6839 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  6840 ;;Total ram usage:        6 bytes
  6841 ;; Hardware stack levels used:    1
  6842 ;; Hardware stack levels required when called:    4
  6843 ;; This function calls:
  6844 ;;		Nothing
  6845 ;; This function is called by:
  6846 ;;		_Add_Trace
  6847 ;;		_PrintLog
  6848 ;;		_strcat
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           psect	text27,local,class=CODE,delta=2,merge=1,group=2
  6852                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  6853                           	line	12
  6854                           global __ptext27
  6855                           __ptext27:	;psect for function _strlen
  6856  0F0A                     psect	text27
  6857                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  6858                           	line	12
  6859                           	global	__size_of_strlen
  6860                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  6861  0024                     	
  6862                           _strlen:	
  6863  0F0A                     ;incstack = 0
  6864                           	opt	stack 10
  6865                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  6866                           	line	14
  6867                           	
  6868                           l2464:	
  6869  0F0A                     	movlb 0	; select bank0
  6870  0F0A  0020               	movf	(strlen@s+1),w
  6871  0F0B  0831               	movwf	(strlen@a+1)
  6872  0F0C  00B5               	movf	(strlen@s),w
  6873  0F0D  0830               	movwf	(strlen@a)
  6874  0F0E  00B4               	line	16
  6875                           	goto	l2468
  6876  0F0F  2F15               	
  6877                           l788:	
  6878  0F10                     	line	17
  6879                           	
  6880                           l2466:	
  6881  0F10                     	movlw	01h
  6882  0F10  3001               	addwf	(strlen@s),f
  6883  0F11  07B0               	movlw	0
  6884  0F12  3000               	addwfc	(strlen@s+1),f
  6885  0F13  3DB1               	goto	l2468
  6886  0F14  2F15               	line	18
  6887                           	
  6888                           l787:	
  6889  0F15                     	line	16
  6890                           	
  6891                           l2468:	
  6892  0F15                     	movf	(strlen@s),w
  6893  0F15  0830               	movwf	fsr0l
  6894  0F16  0084               	movf	((strlen@s+1)),w
  6895  0F17  0831               	movwf	fsr0h
  6896  0F18  0085               	moviw	fsr0++
  6897  0F19  0012               	btfss	status,2
  6898  0F1A  1D03               	goto	u1531
  6899  0F1B  2F1D               	goto	u1530
  6900  0F1C  2F1E               u1531:
  6901  0F1D                     	goto	l2466
  6902  0F1D  2F10               u1530:
  6903  0F1E                     	goto	l2470
  6904  0F1E  2F1F               	
  6905                           l789:	
  6906  0F1F                     	line	25
  6907                           	
  6908                           l2470:	
  6909  0F1F                     	comf	(strlen@a),w
  6910  0F1F  0934               	movwf	(??_strlen+0)+0
  6911  0F20  00B2               	comf	(strlen@a+1),w
  6912  0F21  0935               	movwf	((??_strlen+0)+0+1)
  6913  0F22  00B3               	incf	(??_strlen+0)+0,f
  6914  0F23  0AB2               	skipnz
  6915  0F24  1903               	incf	((??_strlen+0)+0+1),f
  6916  0F25  0AB3               	movf	(strlen@s),w
  6917  0F26  0830               	addwf	0+(??_strlen+0)+0,w
  6918  0F27  0732               	movwf	(?_strlen)
  6919  0F28  00B0               	movf	(strlen@s+1),w
  6920  0F29  0831               	addwfc	1+(??_strlen+0)+0,w
  6921  0F2A  3D33               	movwf	1+(?_strlen)
  6922  0F2B  00B1               	goto	l790
  6923  0F2C  2F2D               	
  6924                           l2472:	
  6925  0F2D                     	line	26
  6926                           	
  6927                           l790:	
  6928  0F2D                     	return
  6929  0F2D  0008               	opt stack 0
  6930                           GLOBAL	__end_of_strlen
  6931                           	__end_of_strlen:
  6932  0F2E                     	signat	_strlen,4218
  6933                           	global	_strcpy
  6934                           
  6935 ;; *************** function _strcpy *****************
  6936 ;; Defined at:
  6937 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  dest            1    wreg     PTR unsigned char 
  6940 ;;		 -> wInterruptText(75), 
  6941 ;;  src             2   22[BANK0 ] PTR const unsigned char 
  6942 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  6943 ;;		 -> main@wReadout(20), 
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;  dest            1   29[BANK0 ] PTR unsigned char 
  6946 ;;		 -> wInterruptText(75), 
  6947 ;;  s               2   26[BANK0 ] PTR const unsigned char 
  6948 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  6949 ;;		 -> main@wReadout(20), 
  6950 ;;  d               1   28[BANK0 ] PTR unsigned char 
  6951 ;;		 -> wInterruptText(75), 
  6952 ;; Return value:  Size  Location     Type
  6953 ;;                  1    wreg      PTR unsigned char 
  6954 ;; Registers used:
  6955 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6961 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6962 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6963 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6964 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
  6965 ;;Total ram usage:        8 bytes
  6966 ;; Hardware stack levels used:    1
  6967 ;; Hardware stack levels required when called:    4
  6968 ;; This function calls:
  6969 ;;		Nothing
  6970 ;; This function is called by:
  6971 ;;		_strcat
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           psect	text28,local,class=CODE,delta=2,merge=1,group=2
  6975                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  6976                           	line	7
  6977                           global __ptext28
  6978                           __ptext28:	;psect for function _strcpy
  6979  0F2E                     psect	text28
  6980                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  6981                           	line	7
  6982                           	global	__size_of_strcpy
  6983                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  6984  0025                     	
  6985                           _strcpy:	
  6986  0F2E                     ;incstack = 0
  6987                           	opt	stack 9
  6988                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  6989                           ;strcpy@dest stored from wreg
  6990                           	movlb 0	; select bank0
  6991  0F2E  0020               	movwf	(strcpy@dest)
  6992  0F2F  00BD               	line	13
  6993                           	
  6994                           l2534:	
  6995  0F30                     	movf	(strcpy@src+1),w
  6996  0F30  0837               	movwf	(strcpy@s+1)
  6997  0F31  00BB               	movf	(strcpy@src),w
  6998  0F32  0836               	movwf	(strcpy@s)
  6999  0F33  00BA               	line	14
  7000                           	movf	(strcpy@dest),w
  7001  0F34  083D               	movwf	(??_strcpy+0)+0
  7002  0F35  00B8               	movf	(??_strcpy+0)+0,w
  7003  0F36  0838               	movwf	(strcpy@d)
  7004  0F37  00BC               	line	15
  7005                           	goto	l2536
  7006  0F38  2F3A               	
  7007                           l782:	
  7008  0F39                     	goto	l2536
  7009  0F39  2F3A               	
  7010                           l781:	
  7011  0F3A                     	
  7012                           l2536:	
  7013  0F3A                     	movf	(strcpy@d),w
  7014  0F3A  083C               	movwf	fsr1l
  7015  0F3B  0086               	movlw 1	; select bank2/3
  7016  0F3C  3001               	movwf fsr1h	
  7017  0F3D  0087               	
  7018                           	incf	(strcpy@d),f
  7019  0F3E  0ABC               	movf	(strcpy@s+1),w
  7020  0F3F  083B               	movwf	(??_strcpy+0)+0+1
  7021  0F40  00B9               	movf	(strcpy@s),w
  7022  0F41  083A               	movwf	(??_strcpy+0)+0
  7023  0F42  00B8               	incf	(strcpy@s),f
  7024  0F43  0ABA               	skipnz
  7025  0F44  1903               	incf	(strcpy@s+1),f
  7026  0F45  0ABB               	movf	0+(??_strcpy+0)+0,w
  7027  0F46  0838               	movwf	fsr0l
  7028  0F47  0084               	movf	(1+(??_strcpy+0)+0),w
  7029  0F48  0839               	movwf	fsr0h
  7030  0F49  0085               	movf	indf0,w ;code access
  7031  0F4A  0800               	movwi	[0]fsr1
  7032  0F4B  3FC0               	movf	wreg
  7033  0F4C  0889               	btfss	status,2
  7034  0F4D  1D03               	goto	u1591
  7035  0F4E  2F50               	goto	u1590
  7036  0F4F  2F51               u1591:
  7037  0F50                     	goto	l2536
  7038  0F50  2F3A               u1590:
  7039  0F51                     	goto	l784
  7040  0F51  2F52               	
  7041                           l783:	
  7042  0F52                     	line	18
  7043                           ;	Return value of _strcpy is never used
  7044                           	
  7045                           l784:	
  7046  0F52                     	return
  7047  0F52  0008               	opt stack 0
  7048                           GLOBAL	__end_of_strcpy
  7049                           	__end_of_strcpy:
  7050  0F53                     	signat	_strcpy,8313
  7051                           	global	_myint
  7052                           
  7053 ;; *************** function _myint *****************
  7054 ;; Defined at:
  7055 ;;		line 378 in file "161518_temp_main.c"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;		None
  7058 ;; Auto vars:     Size  Location     Type
  7059 ;;		None
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  1    wreg      void 
  7062 ;; Registers used:
  7063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7064 ;; Tracked objects:
  7065 ;;		On entry : 0/0
  7066 ;;		On exit  : 0/0
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7071 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7072 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7073 ;;Total ram usage:        1 bytes
  7074 ;; Hardware stack levels used:    1
  7075 ;; Hardware stack levels required when called:    3
  7076 ;; This function calls:
  7077 ;;		i1_Add_Trace
  7078 ;; This function is called by:
  7079 ;;		Interrupt level 1
  7080 ;; This function uses a non-reentrant model
  7081 ;;
  7082                           psect	intentry,class=CODE,delta=2
  7083                           global __pintentry
  7084                           __pintentry:
  7085  0004                     psect	intentry
  7086                           	file	"161518_temp_main.c"
  7087                           	line	378
  7088                           	global	__size_of_myint
  7089                           	__size_of_myint	equ	__end_of_myint-_myint
  7090  00D5                     	
  7091                           _myint:	
  7092  0004                     ;incstack = 0
  7093                           	opt	stack 6
  7094                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
  7095  0004  147E               ; Regs used in _myint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7096                           psect	intentry
  7097                           	pagesel	$
  7098  0005  3180               	line	381
  7099                           	
  7100                           i1l3006:	
  7101  0006                     	movlb 0	; select bank0
  7102  0006  0020               	btfss	(17),3	;volatile
  7103  0007  1D91               	goto	u200_21
  7104  0008  280A               	goto	u200_20
  7105  0009  280B               u200_21:
  7106  000A                     	goto	i1l3060
  7107  000A  28C4               u200_20:
  7108  000B                     	line	383
  7109                           	
  7110                           i1l3008:	
  7111  000B                     	bcf	(17),3	;volatile
  7112  000B  1191               	line	384
  7113                           	
  7114                           i1l3010:	
  7115  000C                     	movf	((_wI2CTxBufferSize)),w
  7116  000C  085B               	btfsc	status,2
  7117  000D  1903               	goto	u201_21
  7118  000E  2810               	goto	u201_20
  7119  000F  2811               u201_21:
  7120  0010                     	goto	i1l3060
  7121  0010  28C4               u201_20:
  7122  0011                     	line	386
  7123                           	
  7124                           i1l3012:	
  7125  0011                     	movlb 4	; select bank4
  7126  0011  0024               	btfss	(532)^0200h,4	;volatile
  7127  0012  1E14               	goto	u202_21
  7128  0013  2815               	goto	u202_20
  7129  0014  2816               u202_21:
  7130  0015                     	goto	i1l165
  7131  0015  281C               u202_20:
  7132  0016                     	line	389
  7133                           	
  7134                           i1l3014:	
  7135  0016                     	movlb 1	; select bank1
  7136  0016  0021               	bcf	(145)^080h,3	;volatile
  7137  0017  1191               	line	390
  7138                           	
  7139                           i1l3016:	
  7140  0018                     	movlb 0	; select bank0
  7141  0018  0020               	clrf	(_wI2CTxBufferSize)
  7142  0019  01DB               	line	391
  7143                           	clrf	(_wI2CTxSendPos)
  7144  001A  01D9               	line	392
  7145                           	goto	i1l3060
  7146  001B  28C4               	line	393
  7147                           	
  7148                           i1l165:	
  7149  001C                     	btfss	(532)^0200h,0	;volatile
  7150  001C  1C14               	goto	u203_21
  7151  001D  281F               	goto	u203_20
  7152  001E  2820               u203_21:
  7153  001F                     	goto	i1l167
  7154  001F  2844               u203_20:
  7155  0020                     	
  7156                           i1l3018:	
  7157  0020                     	movlb 1	; select bank1
  7158  0020  0021               	btfss	(_wI2CTxBuffer)^080h,(0)&7
  7159  0021  1C20               	goto	u204_21
  7160  0022  2824               	goto	u204_20
  7161  0023  2825               u204_21:
  7162  0024                     	goto	i1l167
  7163  0024  2844               u204_20:
  7164  0025                     	line	395
  7165                           	
  7166                           i1l3020:	
  7167  0025                     	movlb 4	; select bank4
  7168  0025  0024               	movf	(529)^0200h,w	;volatile
  7169  0026  0811               	movlb 0	; select bank0
  7170  0027  0020               	movwf	(??_myint+0)+0
  7171  0028  00AF               	movf	(_wReceptionBufferPosition),w
  7172  0029  085C               	addlw	low(_wReceptionBuffer|((0x1)<<8))&0ffh
  7173  002A  3E52               	movwf	fsr1l
  7174  002B  0086               	movlw 1	; select bank2/3
  7175  002C  3001               	movwf fsr1h	
  7176  002D  0087               	
  7177                           	movf	(??_myint+0)+0,w
  7178  002E  082F               	movwf	indf1
  7179  002F  0081               	line	396
  7180                           	
  7181                           i1l3022:	
  7182  0030                     	movlw	low(01h)
  7183  0030  3001               	movwf	(??_myint+0)+0
  7184  0031  00AF               	movf	(??_myint+0)+0,w
  7185  0032  082F               	addwf	(_wReceptionBufferPosition),f
  7186  0033  07DC               	line	398
  7187                           	
  7188                           i1l3024:	
  7189  0034                     	movlb 4	; select bank4
  7190  0034  0024               	bcf	(532)^0200h,0	;volatile
  7191  0035  1014               	line	399
  7192                           	
  7193                           i1l3026:	
  7194  0036                     	movlb 0	; select bank0
  7195  0036  0020               	movf	(_wI2CRxBufferSize),w
  7196  0037  085A               	subwf	(_wReceptionBufferPosition),w
  7197  0038  025C               	skipnc
  7198  0039  1803               	goto	u205_21
  7199  003A  283C               	goto	u205_20
  7200  003B  283D               u205_21:
  7201  003C                     	goto	i1l168
  7202  003C  2840               u205_20:
  7203  003D                     	line	401
  7204                           	
  7205                           i1l3028:	
  7206  003D                     	movlb 4	; select bank4
  7207  003D  0024               	bcf	(534)^0200h,5	;volatile
  7208  003E  1296               	line	402
  7209                           	goto	i1l169
  7210  003F  2842               	line	403
  7211                           	
  7212                           i1l168:	
  7213  0040                     	line	405
  7214                           	movlb 4	; select bank4
  7215  0040  0024               	bsf	(534)^0200h,5	;volatile
  7216  0041  1696               	line	406
  7217                           	
  7218                           i1l169:	
  7219  0042                     	line	407
  7220                           	bsf	(534)^0200h,4	;volatile
  7221  0042  1616               	line	408
  7222                           	goto	i1l3060
  7223  0043  28C4               	line	409
  7224                           	
  7225                           i1l167:	
  7226  0044                     	movlb 4	; select bank4
  7227  0044  0024               	btfss	(532)^0200h,3	;volatile
  7228  0045  1D94               	goto	u206_21
  7229  0046  2848               	goto	u206_20
  7230  0047  2849               u206_21:
  7231  0048                     	goto	i1l171
  7232  0048  2863               u206_20:
  7233  0049                     	
  7234                           i1l3030:	
  7235  0049                     	movlb 0	; select bank0
  7236  0049  0020               	movf	((_wI2CTxSendPos)),w
  7237  004A  0859               	btfss	status,2
  7238  004B  1D03               	goto	u207_21
  7239  004C  284E               	goto	u207_20
  7240  004D  284F               u207_21:
  7241  004E                     	goto	i1l171
  7242  004E  2863               u207_20:
  7243  004F                     	line	412
  7244                           	
  7245                           i1l3032:	
  7246  004F                     	movf	((_wI2CTxBufferSize)),w
  7247  004F  085B               	btfsc	status,2
  7248  0050  1903               	goto	u208_21
  7249  0051  2853               	goto	u208_20
  7250  0052  2854               u208_21:
  7251  0053                     	goto	i1l3060
  7252  0053  28C4               u208_20:
  7253  0054                     	line	414
  7254                           	
  7255                           i1l3034:	
  7256  0054                     	movf	(_wI2CTxSendPos),w
  7257  0054  0859               	addlw	low(_wI2CTxBuffer|((0x0)<<8))&0ffh
  7258  0055  3EA0               	movwf	fsr1l
  7259  0056  0086               	clrf fsr1h	
  7260  0057  0187               	
  7261                           	movf	indf1,w
  7262  0058  0801               	movlb 4	; select bank4
  7263  0059  0024               	movwf	(529)^0200h	;volatile
  7264  005A  0091               	line	415
  7265                           	
  7266                           i1l3036:	
  7267  005B                     	movlw	low(01h)
  7268  005B  3001               	movlb 0	; select bank0
  7269  005C  0020               	movwf	(??_myint+0)+0
  7270  005D  00AF               	movf	(??_myint+0)+0,w
  7271  005E  082F               	addwf	(_wI2CTxSendPos),f
  7272  005F  07D9               	line	416
  7273                           	goto	i1l3060
  7274  0060  28C4               	line	417
  7275                           	
  7276                           i1l172:	
  7277  0061                     	goto	i1l3060
  7278  0061  28C4               	line	420
  7279                           	
  7280                           i1l173:	
  7281  0062                     	line	421
  7282                           	goto	i1l3060
  7283  0062  28C4               	line	422
  7284                           	
  7285                           i1l171:	
  7286  0063                     	line	424
  7287                           	movlb 4	; select bank4
  7288  0063  0024               	btfsc	(534)^0200h,6	;volatile
  7289  0064  1B16               	goto	u209_21
  7290  0065  2867               	goto	u209_20
  7291  0066  2868               u209_21:
  7292  0067                     	goto	i1l175
  7293  0067  289D               u209_20:
  7294  0068                     	
  7295                           i1l3038:	
  7296  0068                     	movlb 0	; select bank0
  7297  0068  0020               	movf	((_wI2CTxSendPos)),w
  7298  0069  0859               	btfsc	status,2
  7299  006A  1903               	goto	u210_21
  7300  006B  286D               	goto	u210_20
  7301  006C  286E               u210_21:
  7302  006D                     	goto	i1l175
  7303  006D  289D               u210_20:
  7304  006E                     	line	428
  7305                           	
  7306                           i1l3040:	
  7307  006E                     	movf	(_wI2CTxBufferSize),w
  7308  006E  085B               	subwf	(_wI2CTxSendPos),w
  7309  006F  0259               	skipnc
  7310  0070  1803               	goto	u211_21
  7311  0071  2873               	goto	u211_20
  7312  0072  2874               u211_21:
  7313  0073                     	goto	i1l176
  7314  0073  2881               u211_20:
  7315  0074                     	line	430
  7316                           	
  7317                           i1l3042:	
  7318  0074                     	movf	(_wI2CTxSendPos),w
  7319  0074  0859               	addlw	low(_wI2CTxBuffer|((0x0)<<8))&0ffh
  7320  0075  3EA0               	movwf	fsr1l
  7321  0076  0086               	clrf fsr1h	
  7322  0077  0187               	
  7323                           	movf	indf1,w
  7324  0078  0801               	movlb 4	; select bank4
  7325  0079  0024               	movwf	(529)^0200h	;volatile
  7326  007A  0091               	line	431
  7327                           	
  7328                           i1l3044:	
  7329  007B                     	movlw	low(01h)
  7330  007B  3001               	movlb 0	; select bank0
  7331  007C  0020               	movwf	(??_myint+0)+0
  7332  007D  00AF               	movf	(??_myint+0)+0,w
  7333  007E  082F               	addwf	(_wI2CTxSendPos),f
  7334  007F  07D9               	line	432
  7335                           	goto	i1l3060
  7336  0080  28C4               	line	433
  7337                           	
  7338                           i1l176:	
  7339  0081                     	line	435
  7340                           	movlb 1	; select bank1
  7341  0081  0021               	btfss	(_wI2CTxBuffer)^080h,(0)&7
  7342  0082  1C20               	goto	u212_21
  7343  0083  2885               	goto	u212_20
  7344  0084  2886               u212_21:
  7345  0085                     	goto	i1l178
  7346  0085  2898               u212_20:
  7347  0086                     	line	437
  7348                           	
  7349                           i1l3046:	
  7350  0086                     	movlb 0	; select bank0
  7351  0086  0020               	movf	(_wI2CRxBufferSize),w
  7352  0087  085A               	subwf	(_wReceptionBufferPosition),w
  7353  0088  025C               	skipnc
  7354  0089  1803               	goto	u213_21
  7355  008A  288C               	goto	u213_20
  7356  008B  288D               u213_21:
  7357  008C                     	goto	i1l179
  7358  008C  2894               u213_20:
  7359  008D                     	line	439
  7360                           	
  7361                           i1l3048:	
  7362  008D                     	opt asmopt_push
  7363                           opt asmopt_off
  7364                           	movlw	66
  7365  008D  3042               u234_27:
  7366  008E                     decfsz	wreg
  7367  008E  0B89               	goto	u234_27
  7368  008F  288E               	nop2
  7369  0090  3200               opt asmopt_pop
  7370                           
  7371                           	line	440
  7372                           	
  7373                           i1l3050:	
  7374  0091                     	movlb 4	; select bank4
  7375  0091  0024               	bsf	(534)^0200h,3	;volatile
  7376  0092  1596               	line	443
  7377                           	goto	i1l3060
  7378  0093  28C4               	line	444
  7379                           	
  7380                           i1l179:	
  7381  0094                     	line	446
  7382                           	movlb 4	; select bank4
  7383  0094  0024               	bsf	(534)^0200h,2	;volatile
  7384  0095  1516               	goto	i1l3060
  7385  0096  28C4               	line	447
  7386                           	
  7387                           i1l180:	
  7388  0097                     	line	448
  7389                           	goto	i1l3060
  7390  0097  28C4               	line	449
  7391                           	
  7392                           i1l178:	
  7393  0098                     	line	451
  7394                           	movlb 4	; select bank4
  7395  0098  0024               	bsf	(534)^0200h,2	;volatile
  7396  0099  1516               	goto	i1l3060
  7397  009A  28C4               	line	452
  7398                           	
  7399                           i1l181:	
  7400  009B                     	goto	i1l3060
  7401  009B  28C4               	line	453
  7402                           	
  7403                           i1l177:	
  7404  009C                     	line	454
  7405                           	goto	i1l3060
  7406  009C  28C4               	line	455
  7407                           	
  7408                           i1l175:	
  7409  009D                     	movlb 4	; select bank4
  7410  009D  0024               	btfss	(534)^0200h,6	;volatile
  7411  009E  1F16               	goto	u214_21
  7412  009F  28A1               	goto	u214_20
  7413  00A0  28A2               u214_21:
  7414  00A1                     	goto	i1l3058
  7415  00A1  28B0               u214_20:
  7416  00A2                     	line	458
  7417                           	
  7418                           i1l3052:	
  7419  00A2                     	bcf	(534)^0200h,6	;volatile
  7420  00A2  1316               	line	459
  7421                           	
  7422                           i1l3054:	
  7423  00A3                     	movlb 0	; select bank0
  7424  00A3  0020               	movf	((_wI2CTxSendPos)),w
  7425  00A4  0859               	btfsc	status,2
  7426  00A5  1903               	goto	u215_21
  7427  00A6  28A8               	goto	u215_20
  7428  00A7  28A9               u215_21:
  7429  00A8                     	goto	i1l184
  7430  00A8  28AC               u215_20:
  7431  00A9                     	line	461
  7432                           	
  7433                           i1l3056:	
  7434  00A9                     	movlb 4	; select bank4
  7435  00A9  0024               	bsf	(534)^0200h,2	;volatile
  7436  00AA  1516               	line	462
  7437                           	goto	i1l3060
  7438  00AB  28C4               	line	463
  7439                           	
  7440                           i1l184:	
  7441  00AC                     	line	465
  7442                           	movlb 4	; select bank4
  7443  00AC  0024               	bsf	(534)^0200h,2	;volatile
  7444  00AD  1516               	goto	i1l3060
  7445  00AE  28C4               	line	466
  7446                           	
  7447                           i1l185:	
  7448  00AF                     	line	467
  7449                           	goto	i1l3060
  7450  00AF  28C4               	line	468
  7451                           	
  7452                           i1l183:	
  7453  00B0                     	line	470
  7454                           	
  7455                           i1l3058:	
  7456  00B0                     	movlw	low(04Bh)
  7457  00B0  304B               	movlb 0	; select bank0
  7458  00B1  0020               	movwf	(??_myint+0)+0
  7459  00B2  00AF               	movf	(??_myint+0)+0,w
  7460  00B3  082F               	movwf	(i1Add_Trace@iSizeOfoText)
  7461  00B4  00A5               	movlw	low(((STR_7)|8000h))
  7462  00B5  305C               	movwf	(i1Add_Trace@iText)
  7463  00B6  00A6               	movlw	high(((STR_7)|8000h))
  7464  00B7  3090               	movwf	((i1Add_Trace@iText))+1
  7465  00B8  00A7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  7466  00B9  30A0               	fcall	i1_Add_Trace
  7467  00BA  3187  278F  3180   	goto	i1l3060
  7468  00BD  28C4               	line	471
  7469                           	
  7470                           i1l186:	
  7471  00BE                     	goto	i1l3060
  7472  00BE  28C4               	
  7473                           i1l182:	
  7474  00BF                     	goto	i1l3060
  7475  00BF  28C4               	line	472
  7476                           	
  7477                           i1l174:	
  7478  00C0                     	goto	i1l3060
  7479  00C0  28C4               	
  7480                           i1l170:	
  7481  00C1                     	goto	i1l3060
  7482  00C1  28C4               	
  7483                           i1l166:	
  7484  00C2                     	goto	i1l3060
  7485  00C2  28C4               	line	473
  7486                           	
  7487                           i1l164:	
  7488  00C3                     	goto	i1l3060
  7489  00C3  28C4               	line	474
  7490                           	
  7491                           i1l163:	
  7492  00C4                     	line	475
  7493                           	
  7494                           i1l3060:	
  7495  00C4                     	movlb 0	; select bank0
  7496  00C4  0020               	btfss	(18),3	;volatile
  7497  00C5  1D92               	goto	u216_21
  7498  00C6  28C8               	goto	u216_20
  7499  00C7  28C9               u216_21:
  7500  00C8                     	goto	i1l188
  7501  00C8  28D7               u216_20:
  7502  00C9                     	line	477
  7503                           	
  7504                           i1l3062:	
  7505  00C9                     	bcf	(18),3	;volatile
  7506  00C9  1192               	line	478
  7507                           	
  7508                           i1l3064:	
  7509  00CA                     	movlw	low(04Bh)
  7510  00CA  304B               	movwf	(??_myint+0)+0
  7511  00CB  00AF               	movf	(??_myint+0)+0,w
  7512  00CC  082F               	movwf	(i1Add_Trace@iSizeOfoText)
  7513  00CD  00A5               	movlw	low(((STR_8)|8000h))
  7514  00CE  3055               	movwf	(i1Add_Trace@iText)
  7515  00CF  00A6               	movlw	high(((STR_8)|8000h))
  7516  00D0  3090               	movwf	((i1Add_Trace@iText))+1
  7517  00D1  00A7               	movlw	(low(_wInterruptText|((0x1)<<8)))&0ffh
  7518  00D2  30A0               	fcall	i1_Add_Trace
  7519  00D3  3187  278F  3180   	goto	i1l188
  7520  00D6  28D7               	line	479
  7521                           	
  7522                           i1l187:	
  7523  00D7                     	line	480
  7524                           	
  7525                           i1l188:	
  7526  00D7                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  7527  00D7  107E               	retfie
  7528  00D8  0009               	opt stack 0
  7529                           GLOBAL	__end_of_myint
  7530                           	__end_of_myint:
  7531  00D9                     	signat	_myint,89
  7532                           	global	i1_Add_Trace
  7533                           
  7534 ;; *************** function i1_Add_Trace *****************
  7535 ;; Defined at:
  7536 ;;		line 78 in file "161518_temp_main.c"
  7537 ;; Parameters:    Size  Location     Type
  7538 ;;  oText           1    wreg     PTR unsigned char 
  7539 ;;		 -> wInterruptText(75), 
  7540 ;;  iSizeOfoText    1    5[BANK0 ] unsigned char 
  7541 ;;  iText           2    6[BANK0 ] PTR unsigned char 
  7542 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  7543 ;;		 -> main@wReadout(20), 
  7544 ;; Auto vars:     Size  Location     Type
  7545 ;;  oText           1   14[BANK0 ] PTR unsigned char 
  7546 ;;		 -> wInterruptText(75), 
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  1    wreg      void 
  7549 ;; Registers used:
  7550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7556 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  7557 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7558 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
  7559 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
  7560 ;;Total ram usage:       10 bytes
  7561 ;; Hardware stack levels used:    1
  7562 ;; Hardware stack levels required when called:    2
  7563 ;; This function calls:
  7564 ;;		i1_strcat
  7565 ;;		i1_strlen
  7566 ;; This function is called by:
  7567 ;;		_myint
  7568 ;; This function uses a non-reentrant model
  7569 ;;
  7570                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
  7571                           	line	78
  7572                           global __ptext30
  7573                           __ptext30:	;psect for function i1_Add_Trace
  7574  078F                     psect	text30
  7575                           	file	"161518_temp_main.c"
  7576                           	line	78
  7577                           	global	__size_ofi1_Add_Trace
  7578                           	__size_ofi1_Add_Trace	equ	__end_ofi1_Add_Trace-i1_Add_Trace
  7579  003A                     	
  7580                           i1_Add_Trace:	
  7581  078F                     ;incstack = 0
  7582                           	opt	stack 6
  7583                           ; Regs used in i1_Add_Trace: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7584                           ;i1Add_Trace@oText stored from wreg
  7585                           	movlb 0	; select bank0
  7586  078F  0020               	movwf	(i1Add_Trace@oText)
  7587  0790  00AE               	line	80
  7588                           	
  7589                           i1l2780:	
  7590  0791                     	movf	(i1Add_Trace@oText),w
  7591  0791  082E               	movwf	(i1strlen@s)
  7592  0792  00F0               	movlw	0x1
  7593  0793  3001               
  7594                           	movwf	(i1strlen@s+1)
  7595  0794  00F1               	fcall	i1_strlen
  7596  0795  318E  26C3  3187   	comf	(0+(?i1_strlen)),w
  7597  0798  0970               	movlb 0	; select bank0
  7598  0799  0020               	movwf	(??i1_Add_Trace+0)+0
  7599  079A  00A8               	comf	(1+(?i1_strlen)),w
  7600  079B  0971               	movwf	((??i1_Add_Trace+0)+0+1)
  7601  079C  00A9               	incf	(??i1_Add_Trace+0)+0,f
  7602  079D  0AA8               	skipnz
  7603  079E  1903               	incf	((??i1_Add_Trace+0)+0+1),f
  7604  079F  0AA9               	movf	(i1Add_Trace@iSizeOfoText),w
  7605  07A0  0825               	addwf	0+(??i1_Add_Trace+0)+0,w
  7606  07A1  0728               	movwf	(??i1_Add_Trace+2)+0
  7607  07A2  00AA               	movf	1+(??i1_Add_Trace+0)+0,w
  7608  07A3  0829               	skipnc
  7609  07A4  1803               	incf	1+(??i1_Add_Trace+0)+0,w
  7610  07A5  0A29               	movwf	((??i1_Add_Trace+2)+0)+1
  7611  07A6  00AB               	movf	0+(??i1_Add_Trace+2)+0,w
  7612  07A7  082A               	addlw	01h
  7613  07A8  3E01               	movwf	(??i1_Add_Trace+4)+0
  7614  07A9  00AC               	movlw	0
  7615  07AA  3000               	addwfc	1+(??i1_Add_Trace+2)+0,w
  7616  07AB  3D2B               	movwf	1+(??i1_Add_Trace+4)+0
  7617  07AC  00AD               	movf	(i1Add_Trace@iText+1),w
  7618  07AD  0827               	movwf	(i1strlen@s+1)
  7619  07AE  00F1               	movf	(i1Add_Trace@iText),w
  7620  07AF  0826               	movwf	(i1strlen@s)
  7621  07B0  00F0               	fcall	i1_strlen
  7622  07B1  318E  26C3  3187   	movlb 0	; select bank0
  7623  07B4  0020               	movf	1+(??i1_Add_Trace+4)+0,w
  7624  07B5  082D               	subwf	(1+(?i1_strlen)),w
  7625  07B6  0271               	skipz
  7626  07B7  1D03               	goto	u189_25
  7627  07B8  2FBB               	movf	0+(??i1_Add_Trace+4)+0,w
  7628  07B9  082C               	subwf	(0+(?i1_strlen)),w
  7629  07BA  0270               u189_25:
  7630  07BB                     	skipnc
  7631  07BB  1803               	goto	u189_21
  7632  07BC  2FBE               	goto	u189_20
  7633  07BD  2FBF               u189_21:
  7634  07BE                     	goto	i1l107
  7635  07BE  2FC8               u189_20:
  7636  07BF                     	line	82
  7637                           	
  7638                           i1l2782:	
  7639  07BF                     	movf	(i1Add_Trace@iText+1),w
  7640  07BF  0827               	movwf	(i1strcat@src+1)
  7641  07C0  00A1               	movf	(i1Add_Trace@iText),w
  7642  07C1  0826               	movwf	(i1strcat@src)
  7643  07C2  00A0               	movf	(i1Add_Trace@oText),w
  7644  07C3  082E               	fcall	i1_strcat
  7645  07C4  318E  268C  3187   	goto	i1l107
  7646  07C7  2FC8               	line	83
  7647                           	
  7648                           i1l106:	
  7649  07C8                     	line	84
  7650                           	
  7651                           i1l107:	
  7652  07C8                     	return
  7653  07C8  0008               	opt stack 0
  7654                           GLOBAL	__end_ofi1_Add_Trace
  7655                           	__end_ofi1_Add_Trace:
  7656  07C9                     	signat	i1_Add_Trace,89
  7657                           	global	i1_strcat
  7658                           
  7659 ;; *************** function i1_strcat *****************
  7660 ;; Defined at:
  7661 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;  dest            1    wreg     PTR unsigned char 
  7664 ;;		 -> wInterruptText(75), 
  7665 ;;  src             2    0[BANK0 ] PTR const unsigned char 
  7666 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  7667 ;;		 -> main@wReadout(20), 
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;  dest            1    4[BANK0 ] PTR unsigned char 
  7670 ;;		 -> wInterruptText(75), 
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  1    wreg      PTR unsigned char 
  7673 ;; Registers used:
  7674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/0
  7677 ;;		On exit  : 0/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7680 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7681 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7682 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7683 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7684 ;;Total ram usage:        5 bytes
  7685 ;; Hardware stack levels used:    1
  7686 ;; Hardware stack levels required when called:    1
  7687 ;; This function calls:
  7688 ;;		i1_strcpy
  7689 ;;		i1_strlen
  7690 ;; This function is called by:
  7691 ;;		i1_Add_Trace
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
  7695                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  7696                           	line	3
  7697                           global __ptext31
  7698                           __ptext31:	;psect for function i1_strcat
  7699  0E8C                     psect	text31
  7700                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  7701                           	line	3
  7702                           	global	__size_ofi1_strcat
  7703                           	__size_ofi1_strcat	equ	__end_ofi1_strcat-i1_strcat
  7704  0019                     	
  7705                           i1_strcat:	
  7706  0E8C                     ;incstack = 0
  7707                           	opt	stack 6
  7708                           ; Regs used in i1_strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7709                           ;i1strcat@dest stored from wreg
  7710                           	movlb 0	; select bank0
  7711  0E8C  0020               	movwf	(i1strcat@dest)
  7712  0E8D  00A4               	line	5
  7713                           	
  7714                           i1l2656:	
  7715  0E8E                     	movf	(i1strcat@src+1),w
  7716  0E8E  0821               	movwf	(i1strcpy@src+1)
  7717  0E8F  00F7               	movf	(i1strcat@src),w
  7718  0E90  0820               	movwf	(i1strcpy@src)
  7719  0E91  00F6               	movf	(i1strcat@dest),w
  7720  0E92  0824               	movwf	(i1strlen@s)
  7721  0E93  00F0               	movlw	0x1
  7722  0E94  3001               
  7723                           	movwf	(i1strlen@s+1)
  7724  0E95  00F1               	fcall	i1_strlen
  7725  0E96  318E  26C3  318E   	movf	(0+?i1_strlen),w
  7726  0E99  0870               	movlb 0	; select bank0
  7727  0E9A  0020               	movwf	(??i1_strcat+0)+0
  7728  0E9B  00A2               	movf	(1+?i1_strlen),w
  7729  0E9C  0871               	movwf	((??i1_strcat+0)+0+1)
  7730  0E9D  00A3               	movf	(i1strcat@dest),w
  7731  0E9E  0824               	addwf	0+(??i1_strcat+0)+0,w
  7732  0E9F  0722               	fcall	i1_strcpy
  7733  0EA0  318E  26E6  318E   	goto	i1l778
  7734  0EA3  2EA4               	line	6
  7735                           	
  7736                           i1l2658:	
  7737  0EA4                     	line	7
  7738                           ;	Return value of i1_strcat is never used
  7739                           	
  7740                           i1l778:	
  7741  0EA4                     	return
  7742  0EA4  0008               	opt stack 0
  7743                           GLOBAL	__end_ofi1_strcat
  7744                           	__end_ofi1_strcat:
  7745  0EA5                     	signat	i1_strcat,89
  7746                           	global	i1_strlen
  7747                           
  7748 ;; *************** function i1_strlen *****************
  7749 ;; Defined at:
  7750 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;  s               2    0[COMMON] PTR const unsigned char 
  7753 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  7754 ;;		 -> main@wReadout(20), wInterruptText(75), 
  7755 ;; Auto vars:     Size  Location     Type
  7756 ;;  strlen          2    4[COMMON] PTR const unsigned char 
  7757 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  7758 ;;		 -> main@wReadout(20), wInterruptText(75), 
  7759 ;; Return value:  Size  Location     Type
  7760 ;;                  2    0[COMMON] unsigned int 
  7761 ;; Registers used:
  7762 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7763 ;; Tracked objects:
  7764 ;;		On entry : 0/0
  7765 ;;		On exit  : 0/0
  7766 ;;		Unchanged: 0/0
  7767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7768 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7769 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7770 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7771 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7772 ;;Total ram usage:        6 bytes
  7773 ;; Hardware stack levels used:    1
  7774 ;; This function calls:
  7775 ;;		Nothing
  7776 ;; This function is called by:
  7777 ;;		i1_Add_Trace
  7778 ;;		i1_strcat
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
  7782                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  7783                           	line	12
  7784                           global __ptext32
  7785                           __ptext32:	;psect for function i1_strlen
  7786  0EC3                     psect	text32
  7787                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  7788                           	line	12
  7789                           	global	__size_ofi1_strlen
  7790                           	__size_ofi1_strlen	equ	__end_ofi1_strlen-i1_strlen
  7791  0023                     	
  7792                           i1_strlen:	
  7793  0EC3                     ;incstack = 0
  7794                           	opt	stack 7
  7795                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
  7796                           	line	14
  7797                           	
  7798                           i1l2542:	
  7799  0EC3                     	movf	(i1strlen@s+1),w
  7800  0EC3  0871               	movwf	(i1strlen@a+1)
  7801  0EC4  00F5               	movf	(i1strlen@s),w
  7802  0EC5  0870               	movwf	(i1strlen@a)
  7803  0EC6  00F4               	line	16
  7804                           	goto	i1l2546
  7805  0EC7  2ECD               	
  7806                           i1l788:	
  7807  0EC8                     	line	17
  7808                           	
  7809                           i1l2544:	
  7810  0EC8                     	movlw	01h
  7811  0EC8  3001               	addwf	(i1strlen@s),f
  7812  0EC9  07F0               	movlw	0
  7813  0ECA  3000               	addwfc	(i1strlen@s+1),f
  7814  0ECB  3DF1               	goto	i1l2546
  7815  0ECC  2ECD               	line	18
  7816                           	
  7817                           i1l787:	
  7818  0ECD                     	line	16
  7819                           	
  7820                           i1l2546:	
  7821  0ECD                     	movf	(i1strlen@s),w
  7822  0ECD  0870               	movwf	fsr0l
  7823  0ECE  0084               	movf	((i1strlen@s+1)),w
  7824  0ECF  0871               	movwf	fsr0h
  7825  0ED0  0085               	moviw	fsr0++
  7826  0ED1  0012               	btfss	status,2
  7827  0ED2  1D03               	goto	u161_21
  7828  0ED3  2ED5               	goto	u161_20
  7829  0ED4  2ED6               u161_21:
  7830  0ED5                     	goto	i1l2544
  7831  0ED5  2EC8               u161_20:
  7832  0ED6                     	goto	i1l2548
  7833  0ED6  2ED7               	
  7834                           i1l789:	
  7835  0ED7                     	line	25
  7836                           	
  7837                           i1l2548:	
  7838  0ED7                     	comf	(i1strlen@a),w
  7839  0ED7  0974               	movwf	(??i1_strlen+0)+0
  7840  0ED8  00F2               	comf	(i1strlen@a+1),w
  7841  0ED9  0975               	movwf	((??i1_strlen+0)+0+1)
  7842  0EDA  00F3               	incf	(??i1_strlen+0)+0,f
  7843  0EDB  0AF2               	skipnz
  7844  0EDC  1903               	incf	((??i1_strlen+0)+0+1),f
  7845  0EDD  0AF3               	movf	(i1strlen@s),w
  7846  0EDE  0870               	addwf	0+(??i1_strlen+0)+0,w
  7847  0EDF  0772               	movwf	(?i1_strlen)
  7848  0EE0  00F0               	movf	(i1strlen@s+1),w
  7849  0EE1  0871               	addwfc	1+(??i1_strlen+0)+0,w
  7850  0EE2  3D73               	movwf	1+(?i1_strlen)
  7851  0EE3  00F1               	goto	i1l790
  7852  0EE4  2EE5               	
  7853                           i1l2550:	
  7854  0EE5                     	line	26
  7855                           	
  7856                           i1l790:	
  7857  0EE5                     	return
  7858  0EE5  0008               	opt stack 0
  7859                           GLOBAL	__end_ofi1_strlen
  7860                           	__end_ofi1_strlen:
  7861  0EE6                     	signat	i1_strlen,90
  7862                           	global	i1_strcpy
  7863                           
  7864 ;; *************** function i1_strcpy *****************
  7865 ;; Defined at:
  7866 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;  dest            1    wreg     PTR unsigned char 
  7869 ;;		 -> wInterruptText(75), 
  7870 ;;  src             2    6[COMMON] PTR const unsigned char 
  7871 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  7872 ;;		 -> main@wReadout(20), 
  7873 ;; Auto vars:     Size  Location     Type
  7874 ;;  dest            1   12[COMMON] PTR unsigned char 
  7875 ;;		 -> wInterruptText(75), 
  7876 ;;  strcpy          2   10[COMMON] PTR const unsigned char 
  7877 ;;		 -> STR_8(7), STR_7(4), STR_2(9), STR_1(12), 
  7878 ;;		 -> main@wReadout(20), 
  7879 ;;  strcpy          1   13[COMMON] PTR unsigned char 
  7880 ;;		 -> wInterruptText(75), 
  7881 ;; Return value:  Size  Location     Type
  7882 ;;                  1    wreg      PTR unsigned char 
  7883 ;; Registers used:
  7884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7885 ;; Tracked objects:
  7886 ;;		On entry : 0/0
  7887 ;;		On exit  : 0/0
  7888 ;;		Unchanged: 0/0
  7889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7891 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7892 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7893 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7894 ;;Total ram usage:        8 bytes
  7895 ;; Hardware stack levels used:    1
  7896 ;; This function calls:
  7897 ;;		Nothing
  7898 ;; This function is called by:
  7899 ;;		i1_strcat
  7900 ;; This function uses a non-reentrant model
  7901 ;;
  7902                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
  7903                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  7904                           	line	7
  7905                           global __ptext33
  7906                           __ptext33:	;psect for function i1_strcpy
  7907  0EE6                     psect	text33
  7908                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  7909                           	line	7
  7910                           	global	__size_ofi1_strcpy
  7911                           	__size_ofi1_strcpy	equ	__end_ofi1_strcpy-i1_strcpy
  7912  0024                     	
  7913                           i1_strcpy:	
  7914  0EE6                     ;incstack = 0
  7915                           	opt	stack 6
  7916                           ; Regs used in i1_strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  7917                           ;i1strcpy@dest stored from wreg
  7918                           	movwf	(i1strcpy@dest)
  7919  0EE6  00FC               	line	13
  7920                           	
  7921                           i1l2538:	
  7922  0EE7                     	movf	(i1strcpy@src+1),w
  7923  0EE7  0877               	movwf	(i1strcpy@s+1)
  7924  0EE8  00FB               	movf	(i1strcpy@src),w
  7925  0EE9  0876               	movwf	(i1strcpy@s)
  7926  0EEA  00FA               	line	14
  7927                           	movf	(i1strcpy@dest),w
  7928  0EEB  087C               	movwf	(??i1_strcpy+0)+0
  7929  0EEC  00F8               	movf	(??i1_strcpy+0)+0,w
  7930  0EED  0878               	movwf	(i1strcpy@d)
  7931  0EEE  00FD               	line	15
  7932                           	goto	i1l2540
  7933  0EEF  2EF1               	
  7934                           i1l782:	
  7935  0EF0                     	goto	i1l2540
  7936  0EF0  2EF1               	
  7937                           i1l781:	
  7938  0EF1                     	
  7939                           i1l2540:	
  7940  0EF1                     	movf	(i1strcpy@d),w
  7941  0EF1  087D               	movwf	fsr1l
  7942  0EF2  0086               	movlw 1	; select bank2/3
  7943  0EF3  3001               	movwf fsr1h	
  7944  0EF4  0087               	
  7945                           	incf	(i1strcpy@d),f
  7946  0EF5  0AFD               	movf	(i1strcpy@s+1),w
  7947  0EF6  087B               	movwf	(??i1_strcpy+0)+0+1
  7948  0EF7  00F9               	movf	(i1strcpy@s),w
  7949  0EF8  087A               	movwf	(??i1_strcpy+0)+0
  7950  0EF9  00F8               	incf	(i1strcpy@s),f
  7951  0EFA  0AFA               	skipnz
  7952  0EFB  1903               	incf	(i1strcpy@s+1),f
  7953  0EFC  0AFB               	movf	0+(??i1_strcpy+0)+0,w
  7954  0EFD  0878               	movwf	fsr0l
  7955  0EFE  0084               	movf	(1+(??i1_strcpy+0)+0),w
  7956  0EFF  0879               	movwf	fsr0h
  7957  0F00  0085               	movf	indf0,w ;code access
  7958  0F01  0800               	movwi	[0]fsr1
  7959  0F02  3FC0               	movf	wreg
  7960  0F03  0889               	btfss	status,2
  7961  0F04  1D03               	goto	u160_21
  7962  0F05  2F07               	goto	u160_20
  7963  0F06  2F08               u160_21:
  7964  0F07                     	goto	i1l2540
  7965  0F07  2EF1               u160_20:
  7966  0F08                     	goto	i1l784
  7967  0F08  2F09               	
  7968                           i1l783:	
  7969  0F09                     	line	18
  7970                           ;	Return value of i1_strcpy is never used
  7971                           	
  7972                           i1l784:	
  7973  0F09                     	return
  7974  0F09  0008               	opt stack 0
  7975                           GLOBAL	__end_ofi1_strcpy
  7976                           	__end_ofi1_strcpy:
  7977  0F0A                     	signat	i1_strcpy,89
  7978                           global	___latbits
  7979                           ___latbits	equ	3
  7980  0003                     	global	btemp
  7981                           	btemp set 07Eh
  7982  007E                     
  7983                           	DABS	1,126,2	;btemp
  7984                           	global	int$flags
  7985                           	int$flags	set btemp
  7986  007E                     	global	wtemp0
  7987                           	wtemp0 set btemp+0
  7988  007E                     	end


Data Sizes:
    Strings     96
    Constant    0
    Data        4
    BSS         155
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     34      64
    BANK1            80     16      40
    BANK2            80     50      80
    BANK3            80      0      75
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK2[20]), wInterruptText(BANK3[75]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK2[20]), wInterruptText(BANK3[75]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK2[20]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK2[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK2[20]), 

    strcat@dest	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    memset@dest	PTR void  size(2) Largest target is 75
		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]), 

    memset@s	PTR unsigned char  size(2) Largest target is 75
		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]), 

    lcdWriteText@iText	PTR unsigned char  size(2) Largest target is 75
		 -> STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[16]), STR_3(CODE[16]), 
		 -> main@wConv(BANK2[4]), wInterruptText(BANK3[75]), 

    Debounce@swPressed	PTR unsigned char  size(1) Largest target is 1
		 -> main@wEnterBottonPressed(BANK2[1]), main@wDownBottonPressed(BANK2[1]), main@wUpBottonPressed(BANK2[1]), 

    Debounce@ioTimer	PTR unsigned short  size(1) Largest target is 2
		 -> main@wDebounceDown(BANK2[2]), main@wDebounceUp(BANK2[2]), main@wDebounceEnter(BANK2[2]), 

    printEM1812@oTextOut	PTR unsigned char  size(1) Largest target is 20
		 -> main@wReadout(BANK2[20]), 

    PrintLog@iText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    sp__memset	PTR void  size(2) Largest target is 75
		 -> wInterruptText(BANK3[75]), wReceptionBuffer(BANK2[30]), wI2CTxBuffer(BANK1[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 

    Add_Trace@iText	PTR unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[7]), STR_7(CODE[4]), STR_2(CODE[9]), STR_1(CODE[12]), 
		 -> main@wReadout(BANK2[20]), 

    Add_Trace@oText	PTR unsigned char  size(1) Largest target is 75
		 -> wInterruptText(BANK3[75]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myint in COMMON

    i1_strcat->i1_strcpy
    i1_strcpy->i1_strlen

Critical Paths under _main in BANK0

    _main->_lcdWriteText
    _setNotBlinkingCursor->_writeInsChk
    _setCursorOff->_writeInsChk
    _printEM1812->___lwdiv
    _powerOnLcd->_writeInsChk
    _moveCursorToHome->_writeInsChk
    _initLCD->_writeInsChk
    _clearDisplay->_writeInsChk
    _writeInsChk->_waitLCDBusy
    _writeInsChk->_writeInsNoChk
    _writeInsNoChk->_setData
    _PrintLog->_lcdWriteText
    _lcdWriteText->_writeTxtChk
    _writeTxtChk->_setCursorPosition
    _setCursorPosition->_waitLCDBusy
    _GetTemp->_memset
    _Add_Trace->_strcat
    _strcat->_strcpy
    _strcpy->_strlen

Critical Paths under _myint in BANK0

    _myint->i1_Add_Trace
    i1_Add_Trace->i1_strcat

Critical Paths under _main in BANK1

    _main->_Add_Trace
    _PrintLog->_lcdWriteText
    _Add_Trace->_strcat

Critical Paths under _myint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myint in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myint in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myint in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myint in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myint in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myint in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                55    55      0   22245
                                             11 BANK1      5     5      0
                                              0 BANK2     50    50      0
                          _Add_Trace
                           _Debounce
                            _GetTemp
                           _PrintLog
                       _SetToGetTemp
                           _WakeTemp
                       _clearDisplay
                            _initLCD
                       _lcdWriteText
                             _memset
                   _moveCursorToHome
                         _powerOnLcd
                        _printEM1812
                       _setCursorOff
                  _setCursorPosition
               _setNotBlinkingCursor
 ---------------------------------------------------------------------------------
 (1) _setNotBlinkingCursor                                 1     1      0     254
                                             22 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _setCursorOff                                         1     1      0     254
                                             22 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _printEM1812                                         27    24      3    1971
                                             24 BANK0      7     4      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     592
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                             16 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _powerOnLcd                                           1     1      0     254
                                             22 BANK0      1     1      0
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _moveCursorToHome                                     0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     632
                                             22 BANK0      1     1      0
                       _clearDisplay
                            _setData
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _clearDisplay                                         0     0      0     254
                        _writeInsChk
 ---------------------------------------------------------------------------------
 (2) _writeInsChk                                          1     1      0     254
                                             21 BANK0      1     1      0
                        _waitLCDBusy
                      _writeInsNoChk
 ---------------------------------------------------------------------------------
 (3) _writeInsNoChk                                        2     2      0     186
                                             19 BANK0      2     2      0
                 _SetToSendDataToLCD
                            _setData
 ---------------------------------------------------------------------------------
 (1) _WakeTemp                                             1     1      0       0
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SetToGetTemp                                         1     1      0       0
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PrintLog                                             4     4      0    5282
                                              1 BANK1      4     4      0
                       _lcdWriteText
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _lcdWriteText                                         6     4      2    2701
                                             29 BANK0      5     3      2
                                              0 BANK1      1     1      0
                        _writeTxtChk
 ---------------------------------------------------------------------------------
 (2) _writeTxtChk                                          3     3      0    2031
                                             26 BANK0      3     3      0
                 _SetToSendDataToLCD
                  _setCursorPosition
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (1) _setCursorPosition                                    5     4      1    1777
                                             21 BANK0      5     4      1
                 _SetToSendDataToLCD
                            _setData
                        _waitLCDBusy
 ---------------------------------------------------------------------------------
 (3) _waitLCDBusy                                          5     5      0      37
                                             16 BANK0      5     5      0
               _SetToReadDataFromLCD
 ---------------------------------------------------------------------------------
 (4) _SetToReadDataFromLCD                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setData                                              3     3      0     124
                                             16 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _SetToSendDataToLCD                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetTemp                                              1     1      0    1897
                                             30 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                              14     8      6    1897
                                             16 BANK0     14     8      6
 ---------------------------------------------------------------------------------
 (1) _Debounce                                             5     3      2     788
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _Add_Trace                                           10     7      3    2780
                                              1 BANK1     10     7      3
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcat                                               5     3      2     979
                                             30 BANK0      4     2      2
                                              0 BANK1      1     1      0
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     6      2     263
                                             22 BANK0      8     6      2
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _myint                                                1     1      0    1072
                                             15 BANK0      1     1      0
                        i1_Add_Trace
 ---------------------------------------------------------------------------------
 (8) i1_Add_Trace                                         10     7      3    1072
                                              5 BANK0     10     7      3
                           i1_strcat
                           i1_strlen
 ---------------------------------------------------------------------------------
 (9) i1_strcat                                             5     3      2     542
                                              0 BANK0      5     3      2
                           i1_strcpy
                           i1_strlen
 ---------------------------------------------------------------------------------
 (9) i1_strlen                                             6     4      2     235
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (10) i1_strcpy                                            8     6      2     172
                                              6 COMMON     8     6      2
                           i1_strlen (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Add_Trace
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _Debounce
   _GetTemp
     _memset
   _PrintLog
     _lcdWriteText
       _writeTxtChk
         _SetToSendDataToLCD
         _setCursorPosition
           _SetToSendDataToLCD
           _setData
           _waitLCDBusy
             _SetToReadDataFromLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
     _memset
     _strlen
   _SetToGetTemp
   _WakeTemp
   _clearDisplay
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _initLCD
     _clearDisplay
       _writeInsChk
         _waitLCDBusy
           _SetToReadDataFromLCD
         _writeInsNoChk
           _SetToSendDataToLCD
           _setData
     _setData
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _lcdWriteText
     _writeTxtChk
       _SetToSendDataToLCD
       _setCursorPosition
         _SetToSendDataToLCD
         _setData
         _waitLCDBusy
           _SetToReadDataFromLCD
       _setData
       _waitLCDBusy
         _SetToReadDataFromLCD
   _memset
   _moveCursorToHome
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _powerOnLcd
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _printEM1812
     ___lwdiv
     ___lwmod
   _setCursorOff
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData
   _setCursorPosition
     _SetToSendDataToLCD
     _setData
     _waitLCDBusy
       _SetToReadDataFromLCD
   _setNotBlinkingCursor
     _writeInsChk
       _waitLCDBusy
         _SetToReadDataFromLCD
       _writeInsNoChk
         _SetToSendDataToLCD
         _setData

 _myint (ROOT)
   i1_Add_Trace
     i1_strcat
       i1_strcpy
         i1_strlen (ARG)
       i1_strlen
     i1_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     10      28       7       50.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     32      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4B      11       93.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     111      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     111      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Jan 15 23:31:17 2019

                  __CFG_CP$OFF 0000                    _SSPSTATbits 0214             _SetToSendDataToLCD 0E1A  
                          l110 0FA1                            l102 0F78                            l111 0FA1  
                          l103 0F78                            l106 06D2                            l114 0E73  
                          l122 058D                            l107 06D2                            l115 0E73  
                          l140 02F8                            l125 064F                            l221 063D  
                          l141 02E2                            l126 0657                            l118 07FE  
                          l150 0394                            l142 02A5                            l127 066C  
                          l119 07FE                            l151 039D                            l143 02F7  
                          l128 0689                            l320 0592                            l224 0FEB  
                          l152 03A9                            l144 02B4                            l136 01EE  
                          l129 0689                            l321 05D4                            l225 0FD2  
                          l313 0E19                            l153 03B1                            l145 02C3  
                          l137 0297                            l322 059B                            l250 04E6  
                          l242 04C5                            l226 0FFF                            l154 03B2  
                          l146 02D2                            l323 05A6                            l251 04C6  
                          l243 04A0                            l227 0FFF                            l155 03B3  
                          l147 0340                            l139 0236                            l324 05B1  
                          l252 04FD                            l244 04C3                            l316 0E33  
                          l156 03B3                            l148 032B                            l325 05BC  
                          l253 04CD                            l245 04AD                            l149 0352  
                          l326 05ED                            l254 04D4                            l246 04C2  
                          l262 0E8B                            l239 078E                            l271 0FC6  
                          l319 05BE                            l255 04DB                            l247 04BA  
                          l272 0FAE                            l256 04E4                            l248 04C1  
                          l280 0E49                            l265 0E25                            l273 0FCE  
                          l249 051C                            l274 0FCE                            l610 0716  
                          l259 0E3E                            l603 0711                            l268 0E1F  
                          l604 06E9                            l620 0752                            l605 06DF  
                          l613 074D                            l606 06EE                            l614 072B  
                          l286 0E5F                            l607 06EF                            l615 0721  
                          l608 0704                            l616 0730                            l609 0710  
                          l617 0731                            l289 0E54                            l618 0740  
                          l619 074C                            l770 046F                            l771 0485  
                          l764 03C2                            l781 0F3A                            l765 0485  
                          l782 0F39                            l790 0F2D                            l766 03E5  
                          l783 0F52                            l767 042C                            l784 0F52  
                          l768 0455                            l769 047E                            l778 0EC2  
                          l787 0F15                            l788 0F10                            l789 0F1F  
                 __CFG_BORV$LO 0000                            wreg 0009            ?_SetToSendDataToLCD 0070  
                 __CFG_LVP$OFF 0000                 ??_lcdWriteText 003F                           l2400 0788  
                         l2402 078A                           l2410 0FA5                           l2404 078C  
                         l2420 0FC2                           l2412 0FA8                           l2500 04C6  
                         l2406 0E1A                           l2422 0FC4                           l2414 0FB1  
                         l2430 05A6                           l2510 04E5                           l2502 04CD  
                         l2416 0FBD                           l2408 0FA2                           l2440 05D7  
                         l2432 05B1                           l2424 0590                           l2520 0505  
                         l2504 04D4                           l2512 04E6                           l2600 0FD2  
                         l2418 0FBE                           l2442 05DA                           l2434 05BD  
                         l2426 0592                           l2522 0506                           l2506 04DB  
                         l2514 04FD                           l2602 0FE4                           l2610 06D6  
                         l2444 05DC                           l2428 059B                           l2436 05BE  
                         l2524 0510                           l2516 0500                           l2508 04E1  
                         l2604 0FEB                           l2700 0E6D                           l2460 0E7C  
                         l2620 06EF                           l2612 06DC                           l2534 0F30  
                         l2470 0F1F                           l2446 05DD                           l2438 05D4  
                         l2526 0515                           l2518 0503                           l3190 04EF  
                         l2710 07E6                           l2702 0E70                           l2462 0E86  
                         l2454 0E76                           l2606 0E15                           l2622 06FE  
                         l2614 06DF                           l2630 0711                           l2536 0F3A  
                         l2472 0F2D                           l2464 0F0A                           l2552 0EA7  
                         l2560 03C1                           l2448 05E8                           l3192 05C6  
                         l2528 0517                           l2480 048D                           l2704 07CB  
                         l2456 0E79                           l2632 0716                           l2624 0702  
                         l2616 06E4                           l2608 06D3                           l2640 0726  
                         l2720 0574                           l2712 051D                           l2800 0132  
                         l2466 0F10                           l2554 0EC2                           l2730 064F  
                         l2570 03E5                           l2562 03C2                           l2394 0E20  
                         l2490 04A7                           l2482 048E                           l2706 07D9  
                         l2458 0E7B                           l2474 0E36                           l2626 0704  
                         l2618 06E9                           l2650 0745                           l2642 072B  
                         l2634 0717                           l2722 057D                           l2714 055E  
                         l2810 013A                           l2802 0133                           l2468 0F15  
                         l2740 0682                           l2732 0657                           l2580 0454  
                         l2572 0421                           l2564 03C8                           l2556 03B5  
                         l2396 0755                           l2492 04AD                           l2484 0494  
                         l2476 0488                           l2708 07DE                           l2660 0F53  
                         l2628 0709                           l2644 0731                           l2636 071E  
                         l2652 074D                           l2724 0587                           l2716 0562  
                         l3188 02EC                           l2900 01F3                           l2820 0143  
                         l2812 013C                           l2804 0135                           l2734 0665  
                         l2726 0640                           l2590 046F                           l2582 0455  
                         l2574 042B                           l2566 03DA                           l2558 03BA  
                         l2398 0756                           l2494 04B4                           l2486 049A  
                         l2478 048B                           l2670 0F70                           l2662 0F59  
                         l2750 060F                           l2742 05EE                           l2654 0752  
                         l2646 073B                           l2638 0721                           l2718 056B  
                         l2910 0236                           l2902 0208                           l2830 0164  
                         l2822 0146                           l2814 013E                           l2806 0136  
                         l2736 066C                           l2728 0645                           l2592 0475  
                         l2584 0462                           l2576 042C                           l2568 03E4  
                         l2680 0F7F                           l2496 04BA                           l2488 04A0  
                         l2672 0F75                           l2664 0F5D                           l2760 062B  
                         l2752 0612                           l2744 05F6                           l2648 0740  
                         l2920 0278                           l2912 023C                           l2904 020C  
                         l2840 016F                           l2832 0166                           l2824 0149  
                         l2816 0140                           l2808 0138                           l2674 068C  
                         l2738 067A                           l2594 0479                           l2586 0466  
                         l2578 044A                           l2690 0F9C                           l2682 0F81  
                         l2498 04C4                           l2666 0F69                           l2762 063A  
                         l2754 061A                           l2746 05FE                           l2770 0E50  
                         l2930 02A5                           l2922 0285                           l2914 024D  
                         l2906 0221                           l2850 0174                           l2842 0170  
                         l2834 0167                           l2826 014B                           l2818 0141  
                         l2676 06C4                           l2596 047E                           l2588 046A  
                         l2692 0F9E                           l2684 0F90                           l2668 0F6A  
                         l2756 061E                           l2748 0602                           l2772 0E2C  
                         l2764 0E3F                           l2932 02B4                           l2940 02E2  
                         l2924 0292                           l2916 025A                           l2908 022B  
                         l2860 017A                           l2852 0175                           l2844 0171  
                         l2836 016C                           l2828 0162                           l2686 0F92  
                         l2678 0F79                           l2598 0FCF                           l2694 0E60  
                         l2758 0626                           l2774 0E30                           l2766 0E45  
                         l2950 030B                           l2934 02C3                           l2942 02F8  
                         l2918 0267                           l2926 0297                           l2870 018E  
                         l2862 017B                           l2854 0176                           l2846 0172  
                         l2838 016E                           l2790 012B                           l2688 0F97  
                         l2696 0E62                           l2768 0E4A                           l2776 0E55  
                         l2960 0328                           l2952 030E                           l2944 02FE  
                         l2936 02D2                           l2928 029E                           l2880 01AF  
                         l2872 0191                           l2864 017C                           l2856 0177  
                         l2848 0173                           l2792 012D                           l2784 0110  
                         l2698 0E68                           l2778 0E5B                           l2970 034D  
                         l2962 032B                           l2954 0317                           l2946 02FF  
                         l2938 02E1                           l2890 01DD                           l2882 01BB  
                         l2874 019D                           l2866 017F                           l2858 0178  
                         l2794 012E                           l2786 0119                           l2980 0386  
                         l2972 034F                           l2964 0335                           l2956 031A  
                         l2948 0302                           l2892 01DF                           l2884 01BE  
                         l2876 01A0                           l2868 0182                           l2796 0130  
                         l2788 0128                           l2990 039A                           l2982 038C  
                         l2974 0352                           l2958 0321                           l2966 0340  
                         l2894 01E2                           l2886 01CA                           l2878 01AC  
                         l2798 0131                           l2992 039D                           l2984 038D  
                         l2976 0363                           l2968 0345                           l2896 01E5  
                         l2888 01CD                           l2994 03A2                           l2986 0394  
                         l2978 0374                           l2898 01EE                           l2996 03A9  
                         l2988 0399                           l2998 03AF                           STR_1 1040  
                         STR_2 104C                           STR_3 1010                           STR_4 1030  
                         STR_5 1020                           STR_6 1000                           STR_7 105C  
                         STR_8 1055                           u1500 0FCD                           u1501 0FCC  
                         u2217 0188                           u1530 0F1E                           u1531 0F1D  
                         u1515 05E0                           u2307 0606                           u2227 0197  
                         u1620 03C0                           u1540 0494                           u1700 06ED  
                         u1621 03BF                           u1541 0493                           u1525 0E7F  
                         u2317 0610                           u1701 06EC                           u2237 01A6  
                         u1630 03E3                           u1550 049A                           u1631 03E2  
                         u1551 0499                           u2327 0617                           u2247 01B5  
                         u1640 042A                           u1560 04A7                           u1720 06FE  
                         u1800 074B                           u1641 0429                           u1561 04A6  
                         u2337 061F                           u1721 06FD                           u1801 074A  
                         u2257 01C4                           u1650 0453                           u1570 04B4  
                         u1810 0F59                           u1651 0452                           u1571 04B3  
                         u1811 0F58                           u1715 06F0                           u2267 01E9  
                         u1820 06C4                           u1660 0484                           u1740 070F  
                         u1900 022B                           u1821 06C3                           u1661 0483  
                         u1485 0759                           u1741 070E                           u1725 06FA  
                         u2277 0306                           u1901 022A                           u1590 0F51  
                         u1830 0F7F                           u1670 0FFE                           u1750 071E  
                         u1910 0235                           u1591 0F50                           u1831 0F7E  
                         u1495 076A                           u1671 0FFD                           u1735 0705  
                         u1751 071D                           u2287 0312                           u1911 0234  
                         u1840 0E68                           u1680 06DC                           u1920 029E  
                         u1825 06C0                           u1585 0509                           u1841 0E67  
                         u2297 05FA                           u1681 06DB                           u1921 029D  
                         u1905 0227                           u1850 07DE                           u1770 072F  
                         u1930 02FE                           u1851 07DD                           u1771 072E  
                         u1931 02FD                           u1915 0231                           u1860 0645  
                         u1780 073B                           u1940 0328                           u1861 0644  
                         u1781 073A                           u1765 0722                           u1941 0327  
                         u1870 0665                           u1950 034D                           u1871 0664  
                         u1695 06E0                           u1951 034C                           u1880 067A  
                         u1960 038C                           u1881 0679                           u1785 0737  
                         u1961 038B                           u1970 0399                           u1795 0741  
                         u1971 0398                           u1980 03A2                           u1981 03A1  
                         u1990 03AF                           u1991 03AE                           _WPUB 020D  
                 __CFG_WRT$OFF 0000           printEM1812@wVariable 0038                           _main 0110  
                         _test 0056                           fsr0h 0005                           fsr1h 0007  
                         indf0 0000                           fsr0l 0004                           indf1 0001  
                         fsr1l 0006                           btemp 007E                  __CFG_BOREN$ON 0000  
                         start 00D9                  __CFG_IESO$OFF 0000           ??_SetToSendDataToLCD 0030  
              __end_of_GetTemp 0FA2           __end_of_clearDisplay 0E1A                   main@wCounter 014D  
                        ?_main 0070                    _writeInsChk 0E34                  __CFG_WDTE$OFF 0000  
                 main@wReadout 0120                __end_of___lwdiv 0717                          i1l106 07C8  
                        i1l107 07C8                          i1l170 00C1                          i1l163 00C4  
                        i1l171 0063                          i1l164 00C3                          i1l180 0097  
                        i1l172 0061                          i1l181 009B                          i1l173 0062  
                        i1l165 001C                          i1l166 00C2                          i1l174 00C0  
                        i1l182 00BF                          i1l183 00B0                          i1l175 009D  
                        i1l167 0044                          i1l184 00AC                          i1l176 0081  
                        i1l168 0040                          i1l185 00AF                          i1l177 009C  
                        i1l169 0042                __end_of___lwmod 0753                          i1l186 00BE  
                        i1l178 0098                          i1l187 00D7                          i1l179 0094  
                        i1l188 00D7                          i1l781 0EF1                          i1l782 0EF0  
                        i1l790 0EE5                          i1l783 0F09                          i1l784 0F09  
                        i1l778 0EA4                          i1l787 0ECD                          i1l788 0EC8  
                        i1l789 0ED7                          _PORTA 000C                          _PORTB 000D  
                        _TRISA 008C                          _TRISB 008D                          _TRISC 008E  
                  _writeTxtChk 0486                  __CFG_PWRTE$ON 0000                 __CFG_FCMEN$OFF 0000  
              __end_of_initLCD 063E         ??_SetToReadDataFromLCD 0030                          _myint 0004  
              __end_of_setData 078F             __size_of_Add_Trace 0049                          status 0003  
                        wtemp0 007E               __end_of_Debounce 068A         ??_setNotBlinkingCursor 0036  
             __end_ofi1_strcat 0EA5               __end_ofi1_strcpy 0F0A               __end_ofi1_strlen 0EE6  
               __CFG_MCLRE$OFF 0000                __initialization 00DB                   __end_of_main 03B5  
               __CFG_LPBOR$OFF 0000                   ?i1_Add_Trace 0025                         ??_main 00BF  
             _wReceptionBuffer 0152               __end_of_WakeTemp 0E74               __end_of_PrintLog 07FF  
                 ?_waitLCDBusy 0070                  main@wMenuPrev 013C                         ?_myint 0070  
                       _ANSELA 018C                         _ANSELB 018D                         i1l3010 000C  
                       i1l3020 0025                         i1l3012 0011                         i1l3030 0049  
                       i1l3022 0030                         i1l3014 0016                         i1l3006 0006  
                       i1l3040 006E                         i1l3032 004F                         i1l3024 0034  
                       i1l3016 0018                         i1l3008 000B                         u200_20 000B  
                       u200_21 000A                         i1l3050 0091                         i1l3042 0074  
                       i1l3034 0054                         i1l3026 0036                         i1l3018 0020  
                       i1l3052 00A2                         i1l3044 007B                         i1l3036 005B  
                       i1l3028 003D                         i1l3060 00C4                         i1l3062 00C9  
                       i1l3054 00A3                         i1l3046 0086                         i1l3038 0068  
                       i1l3064 00CA                         i1l3056 00A9                         i1l3048 008D  
                       u201_20 0011                         u201_21 0010                         i1l3058 00B0  
                       i1l2540 0EF1                         i1l2550 0EE5                         i1l2542 0EC3  
                       i1l2544 0EC8                         u210_20 006E                         u202_20 0016  
                       u210_21 006D                         u202_21 0015                         i1l2538 0EE7  
                       i1l2546 0ECD                         i1l2548 0ED7                         i1l2656 0E8E  
                       u211_20 0074                         u203_20 0020                         u211_21 0073  
                       u203_21 001F                  main@wHumidity 0145                         i1l2658 0EA4  
                       i1l2780 0791                         i1l2782 07BF                         u212_20 0086  
                       u204_20 0025                         u212_21 0085                         u204_21 0024  
                       u213_20 008D                         u205_20 003D                         u213_21 008C  
                       u205_21 003C                         u214_20 00A2                         u206_20 0049  
                       u214_21 00A1                         u206_21 0048                         u215_20 00A9  
                       u207_20 004F                         u215_21 00A8                         u207_21 004E  
                setData@iValue 0032                         u160_20 0F08                         u216_20 00C9  
                       u208_20 0054                         u160_21 0F07                         u216_21 00C8  
                       u208_21 0053                         u161_20 0ED6                         u209_20 0068  
                       u161_21 0ED5                         u209_21 0067                         u234_27 008E  
            _setCursorPosition 058E                         u189_20 07BF                         u189_21 07BE  
                       u189_25 07BB                      ??_GetTemp 003E                         _SSPADD 0212  
                       _SSPBUF 0211             ?_setCursorPosition 0035            ??_setCursorPosition 0036  
         __end_of_lcdWriteText 1000                      ??___lwdiv 0034                      ??___lwmod 0034  
      main@wEnterBottonPressed 0144                   ?_printEM1812 0038                         _memset 03B5  
            __end_of_Add_Trace 06D3                         _strcat 0EA5                         _strcpy 0F2E  
                       _strlen 0F0A                      ??_initLCD 0036                      ??_setData 0030  
     __end_of_moveCursorToHome 0E34                  ?_SetToGetTemp 0070      __end_of_setCursorPosition 05EE  
       __size_of_writeInsNoChk 0018        __end_of__initialization 010C          __size_of_clearDisplay 0005  
   setCursorPosition@wLCDIndex 0039                 __pcstackCOMMON 0070                   __pidataBANK1 0E11  
                __end_of_myint 00D9           writeInsNoChk@iOpCode 0034     setCursorPosition@iPosition 0035  
               _wInterruptText 01A0                 _OPTION_REGbits 0095                      ?_Debounce 0030  
                  i1strcat@src 0020                      ?i1_strcat 0020                      ?i1_strcpy 0076  
                    ?i1_strlen 0070                 ??_SetToGetTemp 0030                   _clearDisplay 0E15  
                  i1strcpy@src 0076                        ??_myint 002F                     __pbssBANK0 0042  
                   __pbssBANK1 00A0                     __pbssBANK2 0152                     __pbssBANK3 01A0  
                ?_setCursorOff 0070                __CFG_VCAPEN$OFF 0000                      ?_WakeTemp 0070  
                   __pmaintext 0110                 Add_Trace@iText 00B6                 Add_Trace@oText 00BE  
                    ?_PrintLog 0070                     __pintentry 0004                  _writeInsNoChk 0E74  
                      ?_memset 0030                   ?_writeInsChk 0070                        ?_strcat 003E  
                      ?_strcpy 0036                        ?_strlen 0030           __size_ofi1_Add_Trace 003A  
                 ?_writeTxtChk 0070                     ??_Debounce 0032                     ??i1_strcat 0022  
                   ??i1_strcpy 0078                     ??i1_strlen 0072     __size_of_setCursorPosition 0060  
         __size_of_waitLCDBusy 002D                 ??_setCursorOff 0036                        _GetTemp 0F79  
        __size_of_lcdWriteText 0031           main@wTemperaturePrev 0142                     ??_WakeTemp 0030  
  __size_of_SetToSendDataToLCD 0006                     ??_PrintLog 00B5                printEM1812@wTen 003C  
                      ___lwdiv 06D3                 ?_writeInsNoChk 0070                        ___lwmod 0717  
              __CFG_STVREN$OFF 0000                Debounce@iSwitch 0034                __size_of_memset 00D1  
                      __ptext1 0E55                        __ptext2 0E4A                        __ptext3 051D  
                      __ptext4 0717                        __ptext5 06D3                        __ptext6 0E3F  
                      __ptext7 0E2C                        __ptext8 05EE                        __ptext9 0E15  
              Debounce@ioTimer 0030                __size_of_strcat 001E           __size_of_printEM1812 0071  
              __size_of_strcpy 0025                __size_of_strlen 0024                        _initLCD 05EE  
                      _setData 0753              main@wDebounceDown 014B                        clrloop0 0E27  
         end_of_initialization 010C                   _lcdWriteText 0FCF  __size_of_SetToReadDataFromLCD 0006  
                      memset@c 0032                        memset@k 003A                        memset@n 0034  
                      memset@s 003C               __CFG_CLKOUTEN$ON 0000  __size_of_setNotBlinkingCursor 000B  
         __end_of_SetToGetTemp 0F79                        strcpy@d 003C                        strlen@a 0034  
                      strcpy@s 003A                        strlen@s 0030                      _PORTAbits 000C  
                    _PORTBbits 000D                     _powerOnLcd 0E3F           main@wUpBottonPressed 014F  
             __CFG_FOSC$INTOSC 0000                      _Add_Trace 068A                      _TRISAbits 008C  
            ?_moveCursorToHome 0070            printEM1812@wDecimal 003E             ??_moveCursorToHome 0036  
          printEM1812@oTextOut 003A               main@wTemperature 0140            waitLCDBusy@busyFlag 0033  
              ??_writeInsNoChk 0033               _mWritingPosition 005D           __end_of_setCursorOff 0E55  
               __end_of_memset 0486                 __end_of_strcat 0EC3                 __end_of_strcpy 0F53  
               __end_of_strlen 0F2E           __size_of_writeInsChk 000B            start_initialization 00DB  
                   ?_Add_Trace 00B5           __size_of_writeTxtChk 0097              __size_of_Debounce 004C  
                    i1strcpy@d 007D                      i1strlen@a 0074                      i1strcpy@s 007A  
                    i1strlen@s 0070              __size_ofi1_strcat 0019              __size_ofi1_strcpy 0024  
            __size_ofi1_strlen 0023                   i1strcat@dest 0024              __size_of_WakeTemp 0014  
              main@wDebounceUp 0149                    __pdataBANK1 00C4                  _wI2CTxSendPos 0059  
            __size_of_PrintLog 0036                       ??_memset 0036                   i1strcpy@dest 007C  
                   memset@dest 0030                       ??_strcat 0040                       ??_strcpy 0038  
                     ??_strlen 0032                    ?_powerOnLcd 0070               i1Add_Trace@iText 0026  
                    ___latbits 0003               i1Add_Trace@oText 002E                  __pcstackBANK0 0020  
                __pcstackBANK1 00B4                  __pcstackBANK2 0120              printEM1812@wUnity 003D  
                     ?_GetTemp 0070          __size_of_SetToGetTemp 0026        i1Add_Trace@iSizeOfoText 0025  
             ___lwdiv@dividend 0032             writeInsChk@iOpCode 0035                       ?___lwdiv 0030  
                     ?___lwmod 0030                  ??i1_Add_Trace 0028                      _wCounter2 0058  
                     ?_initLCD 0070                       ?_setData 0070                    ??_Add_Trace 00B8  
                ??_waitLCDBusy 0030                  PrintLog@iText 00B8               ___lwdiv@quotient 0036  
                 _SetToGetTemp 0F53                 __size_of_myint 00D5               _mDisplayOnOffReg 005F  
   __end_of_SetToSendDataToLCD 0E20                      clear_ram0 0E26                       _PIE1bits 0091  
                     _PIE2bits 0092            __size_of_powerOnLcd 000B                       _PIR1bits 0011  
                     _PIR2bits 0012          __size_of_setCursorOff 000B                      main@F2238 00C4  
     _wReceptionBufferPosition 005C              Debounce@swPressed 0031   __end_of_SetToReadDataFromLCD 0E26  
                ??_printEM1812 003B    lcdWriteText@wCharReadingPos 00B4                main@wTempUpdate 013F  
             _wI2CRxBufferSize 005A                      main@wConv 0136                      main@wMenu 0151  
 __end_of_setNotBlinkingCursor 0E60                      main@wTemp 0134                       _Debounce 063E  
          __end_ofi1_Add_Trace 07C9                       i1_strcat 0E8C                       i1_strcpy 0EE6  
                     i1_strlen 0EC3              lcdWriteText@iText 003D            __end_of_waitLCDBusy 0FCF  
                 _setCursorOff 0E4A               __size_of_GetTemp 0029                       _WakeTemp 0E60  
    __size_of_moveCursorToHome 0008          Add_Trace@iSizeOfoText 00B5                   _wI2CTxBuffer 00A0  
                     _PrintLog 07C9               __size_of___lwdiv 0044               __size_of___lwmod 003C  
             _wI2CTxBufferSize 005B                     _ANSELCbits 018E               __size_of_initLCD 0050  
                   strcat@dest 00B4            __end_of_printEM1812 058E      PrintLog@wInterruptTextLen 00B7  
              ___lwdiv@divisor 0030               __size_of_setData 003C                ___lwdiv@counter 0035  
                ?_clearDisplay 0070                       __ptext10 0E34                       __ptext11 0E74  
                     __ptext20 0753                       __ptext12 0E60                       __ptext21 0E1A  
                     __ptext13 0F53                       __ptext30 078F                       __ptext22 0F79  
                     __ptext14 07C9                       __ptext31 0E8C                       __ptext23 03B5  
                     __ptext15 0FCF                       __ptext32 0EC3                       __ptext24 063E  
                     __ptext16 0486                       __ptext33 0EE6                       __ptext25 068A  
                     __ptext17 058E                       __ptext26 0EA5                       __ptext18 0FA2  
                     __ptext27 0F0A                       __ptext19 0E20                       __ptext28 0F2E  
                     _wHexTemp 0042          main@wIterationCounter 013D                     strcpy@dest 003D  
                __size_of_main 02A5             main@wDebounceEnter 0147             writeTxtChk@iOpCode 003C  
                     int$flags 007E          __end_of_writeInsNoChk 0E8C              main@wHumidityPrev 013A  
                  i1_Add_Trace 078F                  ??_writeInsChk 0035                   ??_powerOnLcd 0036  
                ??_writeTxtChk 003A                     _INTCONbits 000B                    _waitLCDBusy 0FA2  
               ??_clearDisplay 0036         setCursorPosition@iLine 0038                       intlevel1 0000  
       main@wDownBottonPressed 0150           _SetToReadDataFromLCD 0E20                      strcat@src 003E  
             ___lwmod@dividend 0032                      strcpy@src 0036                     _OSCCONbits 0099  
         _setNotBlinkingCursor 0E55             __end_of_powerOnLcd 0E4A                    _printEM1812 051D  
                __pstringtext1 1000                  __pstringtext2 1010                  __pstringtext3 1020  
                __pstringtext4 1030                  __pstringtext5 1040                  __pstringtext6 104C  
                __pstringtext7 1055                  __pstringtext8 105C                  __pstringtext9 0000  
              ___lwmod@divisor 0030                ___lwmod@counter 0035            __end_of_writeInsChk 0E3F  
                  _SSPCON1bits 0215                    _SSPCON2bits 0216                    _SSPCON3bits 0217  
                ?_lcdWriteText 003D            __end_of_writeTxtChk 051D          ?_SetToReadDataFromLCD 0070  
        ?_setNotBlinkingCursor 0070               _moveCursorToHome 0E2C         _mCursorDisplayShiftReg 005E  
